

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Thu May 25 16:40:55 2023

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	18F57Q43
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=4,class=CODE,delta=1
    30                           	psect	text19,global,reloc=4,class=CODE,delta=1
    31                           	psect	text20,global,reloc=4,class=CODE,delta=1
    32                           	psect	text21,global,reloc=4,class=CODE,delta=1
    33                           	psect	text22,global,reloc=4,class=CODE,delta=1
    34                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
    35                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    36                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    37                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    38                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    39  0000                     
    40                           ; Version 2.40
    41                           ; Generated 08/12/2021 GMT
    42                           ; 
    43                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    44                           ; All rights reserved.
    45                           ; 
    46                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    47                           ; 
    48                           ; Redistribution and use in source and binary forms, with or without modification, are
    49                           ; permitted provided that the following conditions are met:
    50                           ; 
    51                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    52                           ;        conditions and the following disclaimer.
    53                           ; 
    54                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    55                           ;        of conditions and the following disclaimer in the documentation and/or other
    56                           ;        materials provided with the distribution. Publication is not required when
    57                           ;        this file is used in an embedded application.
    58                           ; 
    59                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    60                           ;        software without specific prior written permission.
    61                           ; 
    62                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    63                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    64                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    65                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    66                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    67                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    68                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    69                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    70                           ; 
    71                           ; 
    72                           ; Code-generator required, PIC18F57Q43 Definitions
    73                           ; 
    74                           ; SFR Addresses
    75  0000                     
    76                           	psect	idataCOMRAM
    77  002C04                     __pidataCOMRAM:
    78                           	callstack 0
    79                           
    80                           ;initializer for _segundos
    81  002C04  14                 	db	20
    82                           
    83                           ;initializer for _minutos
    84  002C05  0A                 	db	10
    85                           
    86                           ;initializer for _horas
    87  002C06  0A                 	db	10
    88  0000                     _LATD	set	1217
    89  0000                     _OSCCON1	set	173
    90  0000                     _LATDbits	set	1217
    91  0000                     _TRISAbits	set	1222
    92  0000                     _TRISD	set	1225
    93  0000                     _PORTD	set	1233
    94  0000                     _INTCON0bits	set	1238
    95  0000                     _OSCFRQ	set	177
    96  0000                     _OSCEN	set	179
    97  0000                     _RC2PPS	set	531
    98  0000                     _T2PR	set	803
    99  0000                     _ADPCH	set	1004
   100  0000                     _ADCON0bits	set	1011
   101  0000                     _ANSELAbits	set	1024
   102  0000                     _ANSELD	set	1048
   103  0000                     _PIE1bits	set	1183
   104  0000                     _PIE3bits	set	1185
   105  0000                     _TRISB	set	1223
   106  0000                     _ANSELB	set	1032
   107  0000                     _WPUB	set	1033
   108  0000                     _T2CON	set	804
   109  0000                     _T2CLKCON	set	806
   110  0000                     _CCPR2L	set	836
   111  0000                     _CCPR2H	set	837
   112  0000                     _CCP2CON	set	838
   113  0000                     _T1CON	set	798
   114  0000                     _ADRESH	set	1003
   115  0000                     _CCPR1L	set	832
   116  0000                     _CCPR1H	set	833
   117  0000                     _CCP1CON	set	834
   118  0000                     _T1CLK	set	801
   119  0000                     _PIE6bits	set	1188
   120  0000                     _PIE10bits	set	1192
   121  0000                     _PIR1bits	set	1199
   122  0000                     _LATBbits	set	1215
   123  0000                     _PIR3bits	set	1201
   124  0000                     _PIR6bits	set	1204
   125  0000                     _PIR10bits	set	1208
   126                           
   127                           	psect	smallconst
   128  002500                     __psmallconst:
   129                           	callstack 0
   130  002500  00                 	db	0
   131  002501                     STR_3:
   132  002501  52                 	db	82	;'R'
   133  002502  65                 	db	101	;'e'
   134  002503  6C                 	db	108	;'l'
   135  002504  6F                 	db	111	;'o'
   136  002505  6A                 	db	106	;'j'
   137  002506  69                 	db	105	;'i'
   138  002507  74                 	db	116	;'t'
   139  002508  6F                 	db	111	;'o'
   140  002509  20                 	db	32
   141  00250A  55                 	db	85	;'U'
   142  00250B  50                 	db	80	;'P'
   143  00250C  43                 	db	67	;'C'
   144  00250D  00                 	db	0
   145  00250E                     STR_2:
   146  00250E  55                 	db	85	;'U'
   147  00250F  50                 	db	80	;'P'
   148  002510  43                 	db	67	;'C'
   149  002511  20                 	db	32
   150  002512  32                 	db	50	;'2'
   151  002513  30                 	db	48	;'0'
   152  002514  32                 	db	50	;'2'
   153  002515  33                 	db	51	;'3'
   154  002516  2D                 	db	45
   155  002517  31                 	db	49	;'1'
   156  002518  00                 	db	0
   157  002519                     STR_1:
   158  002519  48                 	db	72	;'H'
   159  00251A  6F                 	db	111	;'o'
   160  00251B  6C                 	db	108	;'l'
   161  00251C  61                 	db	97	;'a'
   162  00251D  20                 	db	32
   163  00251E  6D                 	db	109	;'m'
   164  00251F  75                 	db	117	;'u'
   165  002520  6E                 	db	110	;'n'
   166  002521  64                 	db	100	;'d'
   167  002522  6F                 	db	111	;'o'
   168  002523  00                 	db	0
   169  002524  00                 	db	0	; dummy byte at the end
   170  0000                     
   171                           ; #config settings
   172                           
   173                           	psect	cinit
   174  0029F0                     __pcinit:
   175                           	callstack 0
   176  0029F0                     start_initialization:
   177                           	callstack 0
   178  0029F0                     __initialization:
   179                           	callstack 0
   180                           
   181                           ; Initialize objects allocated to COMRAM (3 bytes)
   182                           ; load TBLPTR registers with __pidataCOMRAM
   183  0029F0  0E04               	movlw	low __pidataCOMRAM
   184  0029F2  6EF6               	movwf	tblptrl,c
   185  0029F4  0E2C               	movlw	high __pidataCOMRAM
   186  0029F6  6EF7               	movwf	tblptrh,c
   187  0029F8  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   188  0029FA  6EF8               	movwf	tblptru,c
   189  0029FC  0009               	tblrd		*+	;fetch initializer
   190  0029FE  0061 F3D4  F516    	movff	tablat,__pdataCOMRAM
   191  002A04  0009               	tblrd		*+	;fetch initializer
   192  002A06  0061 F3D4  F517    	movff	tablat,__pdataCOMRAM+1
   193  002A0C  0009               	tblrd		*+	;fetch initializer
   194  002A0E  0061 F3D4  F518    	movff	tablat,__pdataCOMRAM+2
   195                           
   196                           ; Clear objects allocated to COMRAM (4 bytes)
   197  002A14  6A15               	clrf	(__pbssCOMRAM+3)& (0+255),c
   198  002A16  6A14               	clrf	(__pbssCOMRAM+2)& (0+255),c
   199  002A18  6A13               	clrf	(__pbssCOMRAM+1)& (0+255),c
   200  002A1A  6A12               	clrf	__pbssCOMRAM& (0+255),c
   201                           
   202                           ;
   203                           ; Setup IVTBASE
   204                           ;
   205  002A1C  0104               	movlb	4
   206  002A1E  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
   207  002A20  6F5D               	movwf	93,b
   208  002A22  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
   209  002A24  6F5E               	movwf	94,b
   210  002A26  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
   211  002A28  6F5F               	movwf	95,b
   212  002A2A                     end_of_initialization:
   213                           	callstack 0
   214  002A2A                     __end_of__initialization:
   215                           	callstack 0
   216  002A2A  0E00               	movlw	low (__Lsmallconst shr (0+16))
   217  002A2C  6EF8               	movwf	tblptru,c
   218  002A2E  0E25               	movlw	high __Lsmallconst
   219  002A30  6EF7               	movwf	tblptrh,c
   220  002A32  0100               	movlb	0
   221  002A34  EF93  F012         	goto	_main	;jump to C main() function
   222                           
   223                           	psect	bssCOMRAM
   224  000512                     __pbssCOMRAM:
   225                           	callstack 0
   226  000512                     _ticks:
   227                           	callstack 0
   228  000512                     	ds	1
   229  000513                     _unidad:
   230                           	callstack 0
   231  000513                     	ds	1
   232  000514                     _decena:
   233                           	callstack 0
   234  000514                     	ds	1
   235  000515                     _centena:
   236                           	callstack 0
   237  000515                     	ds	1
   238                           
   239                           	psect	dataCOMRAM
   240  000516                     __pdataCOMRAM:
   241                           	callstack 0
   242  000516                     _segundos:
   243                           	callstack 0
   244  000516                     	ds	1
   245  000517                     _minutos:
   246                           	callstack 0
   247  000517                     	ds	1
   248  000518                     _horas:
   249                           	callstack 0
   250  000518                     	ds	1
   251                           
   252                           	psect	cstackCOMRAM
   253  000501                     __pcstackCOMRAM:
   254                           	callstack 0
   255  000501                     ?_strlen:
   256                           	callstack 0
   257  000501                     ?___awmod:
   258                           	callstack 0
   259  000501                     ENVIA_NIBBLE@dato:
   260                           	callstack 0
   261  000501                     LEER_LCD@aux:
   262                           	callstack 0
   263  000501                     ___awmod@dividend:
   264                           	callstack 0
   265  000501                     strlen@s:
   266                           	callstack 0
   267                           
   268                           ; 2 bytes @ 0x0
   269  000501                     	ds	1
   270  000502                     ENVIA_CHAR@dato:
   271                           	callstack 0
   272  000502                     ENVIA_LCD_CMD@dato:
   273                           	callstack 0
   274                           
   275                           ; 1 bytes @ 0x1
   276  000502                     	ds	1
   277  000503                     ENVIA_CHAR@aux:
   278                           	callstack 0
   279  000503                     ENVIA_LCD_CMD@aux:
   280                           	callstack 0
   281  000503                     ___awmod@divisor:
   282                           	callstack 0
   283  000503                     strlen@a:
   284                           	callstack 0
   285                           
   286                           ; 2 bytes @ 0x2
   287  000503                     	ds	1
   288  000504                     ??_LCD_CONFIG:
   289  000504                     POS_CURSOR@columna:
   290                           	callstack 0
   291  000504                     CURSOR_ONOFF@estado:
   292                           	callstack 0
   293                           
   294                           ; 1 bytes @ 0x3
   295  000504                     	ds	1
   296  000505                     ??_lcd_config:
   297  000505                     POS_CURSOR@fila:
   298                           	callstack 0
   299  000505                     ___awmod@counter:
   300                           	callstack 0
   301  000505                     ESCRIBE_MENSAJE2@cadena:
   302                           	callstack 0
   303                           
   304                           ; 2 bytes @ 0x4
   305  000505                     	ds	1
   306  000506                     ___awmod@sign:
   307                           	callstack 0
   308                           
   309                           ; 1 bytes @ 0x5
   310  000506                     	ds	1
   311  000507                     ??_ESCRIBE_MENSAJE2:
   312  000507                     ?___awdiv:
   313                           	callstack 0
   314  000507                     ___awdiv@dividend:
   315                           	callstack 0
   316                           
   317                           ; 2 bytes @ 0x6
   318  000507                     	ds	2
   319  000509                     ESCRIBE_MENSAJE2@tam:
   320                           	callstack 0
   321  000509                     ___awdiv@divisor:
   322                           	callstack 0
   323                           
   324                           ; 2 bytes @ 0x8
   325  000509                     	ds	1
   326  00050A                     ESCRIBE_MENSAJE2@i:
   327                           	callstack 0
   328                           
   329                           ; 1 bytes @ 0x9
   330  00050A                     	ds	1
   331  00050B                     ___awdiv@counter:
   332                           	callstack 0
   333                           
   334                           ; 1 bytes @ 0xA
   335  00050B                     	ds	1
   336  00050C                     ___awdiv@sign:
   337                           	callstack 0
   338                           
   339                           ; 1 bytes @ 0xB
   340  00050C                     	ds	1
   341  00050D                     ___awdiv@quotient:
   342                           	callstack 0
   343                           
   344                           ; 2 bytes @ 0xC
   345  00050D                     	ds	2
   346  00050F                     convierte@numero:
   347                           	callstack 0
   348                           
   349                           ; 1 bytes @ 0xE
   350  00050F                     	ds	1
   351  000510                     ??_main:
   352                           
   353                           ; 1 bytes @ 0xF
   354  000510                     	ds	2
   355                           
   356 ;;
   357 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   358 ;;
   359 ;; *************** function _main *****************
   360 ;; Defined at:
   361 ;;		line 76 in file "maicode2.c"
   362 ;; Parameters:    Size  Location     Type
   363 ;;		None
   364 ;; Auto vars:     Size  Location     Type
   365 ;;		None
   366 ;; Return value:  Size  Location     Type
   367 ;;                  1    wreg      void 
   368 ;; Registers used:
   369 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   370 ;; Tracked objects:
   371 ;;		On entry : 0/0
   372 ;;		On exit  : 0/0
   373 ;;		Unchanged: 0/0
   374 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   375 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   376 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   377 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   378 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   379 ;;Total ram usage:        2 bytes
   380 ;; Hardware stack levels required when called: 5
   381 ;; This function calls:
   382 ;;		_BORRAR_LCD
   383 ;;		_ENVIA_CHAR
   384 ;;		_ESCRIBE_MENSAJE2
   385 ;;		_POS_CURSOR
   386 ;;		_configuro
   387 ;;		_convierte
   388 ;;		_lcd_config
   389 ;;		_tomamuestra_ADC
   390 ;; This function is called by:
   391 ;;		Startup code after reset
   392 ;; This function uses a non-reentrant model
   393 ;;
   394                           
   395                           	psect	text0
   396  002526                     __ptext0:
   397                           	callstack 0
   398  002526                     _main:
   399                           	callstack 122
   400  002526                     
   401                           ;maicode2.c: 77:     configuro();
   402  002526  ECC1  F013         	call	_configuro	;wreg free
   403  00252A                     
   404                           ;maicode2.c: 78:     lcd_config();
   405  00252A  EC8C  F015         	call	_lcd_config	;wreg free
   406  00252E                     
   407                           ;maicode2.c: 79:     POS_CURSOR(1,0);
   408  00252E  0E00               	movlw	0
   409  002530  6E04               	movwf	POS_CURSOR@columna^(0+1280),c
   410  002532  0E01               	movlw	1
   411  002534  EC3B  F015         	call	_POS_CURSOR
   412  002538                     
   413                           ;maicode2.c: 80:     ESCRIBE_MENSAJE2("Hola mundo");
   414  002538  0E19               	movlw	low STR_1
   415  00253A  6E05               	movwf	ESCRIBE_MENSAJE2@cadena^(0+1280),c
   416  00253C  0E25               	movlw	high STR_1
   417  00253E  6E06               	movwf	(ESCRIBE_MENSAJE2@cadena+1)^(0+1280),c
   418  002540  ECD1  F014         	call	_ESCRIBE_MENSAJE2	;wreg free
   419  002544                     
   420                           ;maicode2.c: 81:     POS_CURSOR(2,0);
   421  002544  0E00               	movlw	0
   422  002546  6E04               	movwf	POS_CURSOR@columna^(0+1280),c
   423  002548  0E02               	movlw	2
   424  00254A  EC3B  F015         	call	_POS_CURSOR
   425  00254E                     
   426                           ;maicode2.c: 82:     ESCRIBE_MENSAJE2("UPC 2023-1");
   427  00254E  0E0E               	movlw	low STR_2
   428  002550  6E05               	movwf	ESCRIBE_MENSAJE2@cadena^(0+1280),c
   429  002552  0E25               	movlw	high STR_2
   430  002554  6E06               	movwf	(ESCRIBE_MENSAJE2@cadena+1)^(0+1280),c
   431  002556  ECD1  F014         	call	_ESCRIBE_MENSAJE2	;wreg free
   432  00255A                     
   433                           ;maicode2.c: 83:     _delay((unsigned long)((2000)*(4000000UL/4000.0)));
   434  00255A  0E0B               	movlw	11
   435  00255C  6E11               	movwf	(??_main+1)^(0+1280),c
   436  00255E  0E26               	movlw	38
   437  002560  6E10               	movwf	??_main^(0+1280),c
   438  002562  0E5E               	movlw	94
   439  002564                     u497:
   440  002564  2EE8               	decfsz	wreg,f,c
   441  002566  D7FE               	bra	u497
   442  002568  2E10               	decfsz	??_main^(0+1280),f,c
   443  00256A  D7FC               	bra	u497
   444  00256C  2E11               	decfsz	(??_main+1)^(0+1280),f,c
   445  00256E  D7FA               	bra	u497
   446  002570                     
   447                           ;maicode2.c: 84:     BORRAR_LCD();
   448  002570  ECFA  F015         	call	_BORRAR_LCD	;wreg free
   449  002574                     
   450                           ;maicode2.c: 85:     POS_CURSOR(1,2);
   451  002574  0E02               	movlw	2
   452  002576  6E04               	movwf	POS_CURSOR@columna^(0+1280),c
   453  002578  0E01               	movlw	1
   454  00257A  EC3B  F015         	call	_POS_CURSOR
   455  00257E                     
   456                           ;maicode2.c: 86:     ESCRIBE_MENSAJE2("Relojito UPC");
   457  00257E  0E01               	movlw	low STR_3
   458  002580  6E05               	movwf	ESCRIBE_MENSAJE2@cadena^(0+1280),c
   459  002582  0E25               	movlw	high STR_3
   460  002584  6E06               	movwf	(ESCRIBE_MENSAJE2@cadena+1)^(0+1280),c
   461  002586  ECD1  F014         	call	_ESCRIBE_MENSAJE2	;wreg free
   462  00258A                     l1474:
   463                           
   464                           ;maicode2.c: 88:         tomamuestra_ADC();
   465  00258A  ECEC  F015         	call	_tomamuestra_ADC	;wreg free
   466  00258E                     
   467                           ;maicode2.c: 89:         CCPR2L = ADRESH;
   468  00258E  C3EB F344          	movff	1003,836	;volatile
   469  002592                     
   470                           ;maicode2.c: 90:         POS_CURSOR(2,0);
   471  002592  0E00               	movlw	0
   472  002594  6E04               	movwf	POS_CURSOR@columna^(0+1280),c
   473  002596  0E02               	movlw	2
   474  002598  EC3B  F015         	call	_POS_CURSOR
   475  00259C                     
   476                           ;maicode2.c: 91:         convierte(horas);
   477  00259C  5018               	movf	_horas^(0+1280),w,c
   478  00259E  ECA4  F014         	call	_convierte
   479  0025A2                     
   480                           ;maicode2.c: 92:         ENVIA_CHAR(decena+0x30);
   481  0025A2  5014               	movf	_decena^(0+1280),w,c
   482  0025A4  0F30               	addlw	48
   483  0025A6  EC72  F015         	call	_ENVIA_CHAR
   484  0025AA                     
   485                           ;maicode2.c: 93:         ENVIA_CHAR(unidad+0x30);
   486  0025AA  5013               	movf	_unidad^(0+1280),w,c
   487  0025AC  0F30               	addlw	48
   488  0025AE  EC72  F015         	call	_ENVIA_CHAR
   489  0025B2                     
   490                           ;maicode2.c: 94:         ENVIA_CHAR(':');
   491  0025B2  0E3A               	movlw	58
   492  0025B4  EC72  F015         	call	_ENVIA_CHAR
   493  0025B8                     
   494                           ;maicode2.c: 95:         convierte(minutos);
   495  0025B8  5017               	movf	_minutos^(0+1280),w,c
   496  0025BA  ECA4  F014         	call	_convierte
   497  0025BE                     
   498                           ;maicode2.c: 96:         ENVIA_CHAR(decena+0x30);
   499  0025BE  5014               	movf	_decena^(0+1280),w,c
   500  0025C0  0F30               	addlw	48
   501  0025C2  EC72  F015         	call	_ENVIA_CHAR
   502  0025C6                     
   503                           ;maicode2.c: 97:         ENVIA_CHAR(unidad+0x30);
   504  0025C6  5013               	movf	_unidad^(0+1280),w,c
   505  0025C8  0F30               	addlw	48
   506  0025CA  EC72  F015         	call	_ENVIA_CHAR
   507  0025CE                     
   508                           ;maicode2.c: 98:         ENVIA_CHAR(':');
   509  0025CE  0E3A               	movlw	58
   510  0025D0  EC72  F015         	call	_ENVIA_CHAR
   511  0025D4                     
   512                           ;maicode2.c: 99:         convierte(segundos);
   513  0025D4  5016               	movf	_segundos^(0+1280),w,c
   514  0025D6  ECA4  F014         	call	_convierte
   515  0025DA                     
   516                           ;maicode2.c: 100:         ENVIA_CHAR(decena+0x30);
   517  0025DA  5014               	movf	_decena^(0+1280),w,c
   518  0025DC  0F30               	addlw	48
   519  0025DE  EC72  F015         	call	_ENVIA_CHAR
   520  0025E2                     
   521                           ;maicode2.c: 101:         ENVIA_CHAR(unidad+0x30);
   522  0025E2  5013               	movf	_unidad^(0+1280),w,c
   523  0025E4  0F30               	addlw	48
   524  0025E6  EC72  F015         	call	_ENVIA_CHAR
   525  0025EA                     
   526                           ;maicode2.c: 102:         ENVIA_CHAR(':');
   527  0025EA  0E3A               	movlw	58
   528  0025EC  EC72  F015         	call	_ENVIA_CHAR
   529  0025F0                     
   530                           ;maicode2.c: 103:         convierte(ticks);
   531  0025F0  5012               	movf	_ticks^(0+1280),w,c
   532  0025F2  ECA4  F014         	call	_convierte
   533  0025F6                     
   534                           ;maicode2.c: 104:         ENVIA_CHAR(decena+0x30);
   535  0025F6  5014               	movf	_decena^(0+1280),w,c
   536  0025F8  0F30               	addlw	48
   537  0025FA  EC72  F015         	call	_ENVIA_CHAR
   538  0025FE                     
   539                           ;maicode2.c: 105:         ENVIA_CHAR(unidad+0x30);
   540  0025FE  5013               	movf	_unidad^(0+1280),w,c
   541  002600  0F30               	addlw	48
   542  002602  EC72  F015         	call	_ENVIA_CHAR
   543  002606  EFC5  F012         	goto	l1474
   544  00260A  EF81  F000         	goto	start
   545  00260E                     __end_of_main:
   546                           	callstack 0
   547                           
   548 ;; *************** function _tomamuestra_ADC *****************
   549 ;; Defined at:
   550 ;;		line 71 in file "maicode2.c"
   551 ;; Parameters:    Size  Location     Type
   552 ;;		None
   553 ;; Auto vars:     Size  Location     Type
   554 ;;		None
   555 ;; Return value:  Size  Location     Type
   556 ;;                  1    wreg      void 
   557 ;; Registers used:
   558 ;;		None
   559 ;; Tracked objects:
   560 ;;		On entry : 0/0
   561 ;;		On exit  : 0/0
   562 ;;		Unchanged: 0/0
   563 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   564 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   565 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   566 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   567 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   568 ;;Total ram usage:        0 bytes
   569 ;; Hardware stack levels used: 1
   570 ;; Hardware stack levels required when called: 1
   571 ;; This function calls:
   572 ;;		Nothing
   573 ;; This function is called by:
   574 ;;		_main
   575 ;; This function uses a non-reentrant model
   576 ;;
   577                           
   578                           	psect	text1
   579  002BD8                     __ptext1:
   580                           	callstack 0
   581  002BD8                     _tomamuestra_ADC:
   582                           	callstack 125
   583  002BD8                     
   584                           ;maicode2.c: 72:     ADCON0bits.GO = 1;
   585  002BD8  0103               	movlb	3	; () banked
   586  002BDA  81F3               	bsf	243,0,b	;volatile
   587  002BDC                     l194:
   588                           
   589                           ; BSR set to: 3
   590  002BDC  B1F3               	btfsc	243,0,b	;volatile
   591  002BDE  EFF3  F015         	goto	u201
   592  002BE2  EFF5  F015         	goto	u200
   593  002BE6                     u201:
   594  002BE6  EFEE  F015         	goto	l194
   595  002BEA                     u200:
   596  002BEA                     
   597                           ; BSR set to: 3
   598  002BEA  0012               	return		;funcret
   599  002BEC                     __end_of_tomamuestra_ADC:
   600                           	callstack 0
   601                           
   602 ;; *************** function _lcd_config *****************
   603 ;; Defined at:
   604 ;;		line 55 in file "maicode2.c"
   605 ;; Parameters:    Size  Location     Type
   606 ;;		None
   607 ;; Auto vars:     Size  Location     Type
   608 ;;		None
   609 ;; Return value:  Size  Location     Type
   610 ;;                  1    wreg      void 
   611 ;; Registers used:
   612 ;;		wreg, status,2, status,0, cstack
   613 ;; Tracked objects:
   614 ;;		On entry : 0/0
   615 ;;		On exit  : 0/0
   616 ;;		Unchanged: 0/0
   617 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   618 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   619 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   620 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   621 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   622 ;;Total ram usage:        1 bytes
   623 ;; Hardware stack levels used: 1
   624 ;; Hardware stack levels required when called: 4
   625 ;; This function calls:
   626 ;;		_BORRAR_LCD
   627 ;;		_CURSOR_HOME
   628 ;;		_CURSOR_ONOFF
   629 ;;		_LCD_CONFIG
   630 ;; This function is called by:
   631 ;;		_main
   632 ;; This function uses a non-reentrant model
   633 ;;
   634                           
   635                           	psect	text2
   636  002B18                     __ptext2:
   637                           	callstack 0
   638  002B18                     _lcd_config:
   639                           	callstack 122
   640  002B18                     
   641                           ;maicode2.c: 56:     _delay((unsigned long)((15)*(4000000UL/4000.0)));
   642  002B18  0E14               	movlw	20
   643  002B1A  6E05               	movwf	??_lcd_config^(0+1280),c
   644  002B1C  0E7A               	movlw	122
   645  002B1E                     u507:
   646  002B1E  2EE8               	decfsz	wreg,f,c
   647  002B20  D7FE               	bra	u507
   648  002B22  2E05               	decfsz	??_lcd_config^(0+1280),f,c
   649  002B24  D7FC               	bra	u507
   650  002B26                     
   651                           ;maicode2.c: 57:     LCD_CONFIG();
   652  002B26  EC74  F014         	call	_LCD_CONFIG	;wreg free
   653  002B2A                     
   654                           ;maicode2.c: 58:     _delay((unsigned long)((15)*(4000000UL/4000.0)));
   655  002B2A  0E14               	movlw	20
   656  002B2C  6E05               	movwf	??_lcd_config^(0+1280),c
   657  002B2E  0E7A               	movlw	122
   658  002B30                     u517:
   659  002B30  2EE8               	decfsz	wreg,f,c
   660  002B32  D7FE               	bra	u517
   661  002B34  2E05               	decfsz	??_lcd_config^(0+1280),f,c
   662  002B36  D7FC               	bra	u517
   663                           
   664                           ;maicode2.c: 59:     BORRAR_LCD();
   665  002B38  ECFA  F015         	call	_BORRAR_LCD	;wreg free
   666                           
   667                           ;maicode2.c: 60:     CURSOR_HOME();
   668  002B3C  ECF6  F015         	call	_CURSOR_HOME	;wreg free
   669                           
   670                           ;maicode2.c: 61:     CURSOR_ONOFF(1);
   671  002B40  0E01               	movlw	1
   672  002B42  ECA5  F015         	call	_CURSOR_ONOFF
   673  002B46                     
   674                           ;maicode2.c: 62:     LATBbits.LATB2 = 1;
   675  002B46  84BF               	bsf	191,2,c	;volatile
   676  002B48  0012               	return		;funcret
   677  002B4A                     __end_of_lcd_config:
   678                           	callstack 0
   679                           
   680 ;; *************** function _LCD_CONFIG *****************
   681 ;; Defined at:
   682 ;;		line 84 in file "LCD.c"
   683 ;; Parameters:    Size  Location     Type
   684 ;;		None
   685 ;; Auto vars:     Size  Location     Type
   686 ;;		None
   687 ;; Return value:  Size  Location     Type
   688 ;;                  1    wreg      void 
   689 ;; Registers used:
   690 ;;		wreg, status,2, status,0, cstack
   691 ;; Tracked objects:
   692 ;;		On entry : 0/0
   693 ;;		On exit  : 0/0
   694 ;;		Unchanged: 0/0
   695 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   696 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   697 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   698 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   699 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   700 ;;Total ram usage:        1 bytes
   701 ;; Hardware stack levels used: 1
   702 ;; Hardware stack levels required when called: 3
   703 ;; This function calls:
   704 ;;		_ENVIA_LCD_CMD
   705 ;;		_ENVIA_NIBBLE
   706 ;; This function is called by:
   707 ;;		_lcd_config
   708 ;; This function uses a non-reentrant model
   709 ;;
   710                           
   711                           	psect	text3
   712  0028E8                     __ptext3:
   713                           	callstack 0
   714  0028E8                     _LCD_CONFIG:
   715                           	callstack 122
   716  0028E8                     
   717                           ;LCD.c: 86:  LATDbits.LATD0 = 0;
   718  0028E8  90C1               	bcf	193,0,c	;volatile
   719                           
   720                           ;LCD.c: 87:  LATDbits.LATD1 = 0;
   721  0028EA  92C1               	bcf	193,1,c	;volatile
   722  0028EC                     
   723                           ;LCD.c: 88:  ENVIA_NIBBLE(0x30);
   724  0028EC  0E30               	movlw	48
   725  0028EE  ECDE  F015         	call	_ENVIA_NIBBLE
   726  0028F2                     
   727                           ;LCD.c: 89:         _delay(24000);
   728  0028F2  0E20               	movlw	32
   729  0028F4  6E04               	movwf	??_LCD_CONFIG^(0+1280),c
   730  0028F6  0E2A               	movlw	42
   731  0028F8                     u527:
   732  0028F8  2EE8               	decfsz	wreg,f,c
   733  0028FA  D7FE               	bra	u527
   734  0028FC  2E04               	decfsz	??_LCD_CONFIG^(0+1280),f,c
   735  0028FE  D7FC               	bra	u527
   736  002900                     
   737                           ;LCD.c: 90:         _delay(24000);
   738  002900  0E20               	movlw	32
   739  002902  6E04               	movwf	??_LCD_CONFIG^(0+1280),c
   740  002904  0E2A               	movlw	42
   741  002906                     u537:
   742  002906  2EE8               	decfsz	wreg,f,c
   743  002908  D7FE               	bra	u537
   744  00290A  2E04               	decfsz	??_LCD_CONFIG^(0+1280),f,c
   745  00290C  D7FC               	bra	u537
   746                           
   747                           ;LCD.c: 93:  ENVIA_NIBBLE(0x30);
   748  00290E  0E30               	movlw	48
   749  002910  ECDE  F015         	call	_ENVIA_NIBBLE
   750  002914                     
   751                           ;LCD.c: 95:  _delay(1200);
   752  002914  0EF0               	movlw	240
   753  002916                     u547:
   754  002916  D000               	nop2	
   755  002918  2EE8               	decfsz	wreg,f,c
   756  00291A  D7FD               	bra	u547
   757  00291C                     
   758                           ;LCD.c: 96:         ENVIA_NIBBLE(0x30);
   759  00291C  0E30               	movlw	48
   760  00291E  ECDE  F015         	call	_ENVIA_NIBBLE
   761  002922                     
   762                           ;LCD.c: 97:  ENVIA_NIBBLE(0x20);
   763  002922  0E20               	movlw	32
   764  002924  ECDE  F015         	call	_ENVIA_NIBBLE
   765  002928                     
   766                           ;LCD.c: 98:  ENVIA_LCD_CMD(0x01);
   767  002928  0E01               	movlw	1
   768  00292A  EC58  F015         	call	_ENVIA_LCD_CMD
   769  00292E                     
   770                           ;LCD.c: 99:  ENVIA_LCD_CMD(0x28);
   771  00292E  0E28               	movlw	40
   772  002930  EC58  F015         	call	_ENVIA_LCD_CMD
   773  002934                     
   774                           ;LCD.c: 100:  ENVIA_LCD_CMD(0x0F);
   775  002934  0E0F               	movlw	15
   776  002936  EC58  F015         	call	_ENVIA_LCD_CMD
   777  00293A                     
   778                           ;LCD.c: 101:  ENVIA_LCD_CMD(0x06);
   779  00293A  0E06               	movlw	6
   780  00293C  EC58  F015         	call	_ENVIA_LCD_CMD
   781  002940                     
   782                           ;LCD.c: 102:  ENVIA_LCD_CMD(0x01);
   783  002940  0E01               	movlw	1
   784  002942  EC58  F015         	call	_ENVIA_LCD_CMD
   785  002946  0012               	return		;funcret
   786  002948                     __end_of_LCD_CONFIG:
   787                           	callstack 0
   788                           
   789 ;; *************** function _CURSOR_ONOFF *****************
   790 ;; Defined at:
   791 ;;		line 36 in file "LCD.c"
   792 ;; Parameters:    Size  Location     Type
   793 ;;  estado          1    wreg     unsigned char 
   794 ;; Auto vars:     Size  Location     Type
   795 ;;  estado          1    3[COMRAM] unsigned char 
   796 ;; Return value:  Size  Location     Type
   797 ;;                  1    wreg      void 
   798 ;; Registers used:
   799 ;;		wreg, status,2, status,0, cstack
   800 ;; Tracked objects:
   801 ;;		On entry : 0/0
   802 ;;		On exit  : 0/0
   803 ;;		Unchanged: 0/0
   804 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   805 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   806 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   807 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   808 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   809 ;;Total ram usage:        1 bytes
   810 ;; Hardware stack levels used: 1
   811 ;; Hardware stack levels required when called: 3
   812 ;; This function calls:
   813 ;;		_ENVIA_LCD_CMD
   814 ;; This function is called by:
   815 ;;		_lcd_config
   816 ;; This function uses a non-reentrant model
   817 ;;
   818                           
   819                           	psect	text4
   820  002B4A                     __ptext4:
   821                           	callstack 0
   822  002B4A                     _CURSOR_ONOFF:
   823                           	callstack 122
   824                           
   825                           ;incstack = 0
   826                           ;CURSOR_ONOFF@estado stored from wreg
   827  002B4A  6E04               	movwf	CURSOR_ONOFF@estado^(0+1280),c
   828  002B4C                     
   829                           ;LCD.c: 36: void CURSOR_ONOFF(unsigned char estado);LCD.c: 37: {;LCD.c: 38:  if(estado =
      +                          = 0) ENVIA_LCD_CMD(0x0E);
   830  002B4C  5004               	movf	CURSOR_ONOFF@estado^(0+1280),w,c
   831  002B4E  A4D8               	btfss	status,2,c
   832  002B50  EFAC  F015         	goto	u21
   833  002B54  EFAE  F015         	goto	u20
   834  002B58                     u21:
   835  002B58  EFB1  F015         	goto	l998
   836  002B5C                     u20:
   837  002B5C  0E0E               	movlw	14
   838  002B5E  EC58  F015         	call	_ENVIA_LCD_CMD
   839  002B62                     l998:
   840                           
   841                           ;LCD.c: 39:  if(estado == 1) ENVIA_LCD_CMD(0x0C);
   842  002B62  0404               	decf	CURSOR_ONOFF@estado^(0+1280),w,c
   843  002B64  A4D8               	btfss	status,2,c
   844  002B66  EFB7  F015         	goto	u31
   845  002B6A  EFB9  F015         	goto	u30
   846  002B6E                     u31:
   847  002B6E  EFBC  F015         	goto	l44
   848  002B72                     u30:
   849  002B72  0E0C               	movlw	12
   850  002B74  EC58  F015         	call	_ENVIA_LCD_CMD
   851  002B78                     l44:
   852  002B78  0012               	return		;funcret
   853  002B7A                     __end_of_CURSOR_ONOFF:
   854                           	callstack 0
   855                           
   856 ;; *************** function _CURSOR_HOME *****************
   857 ;; Defined at:
   858 ;;		line 31 in file "LCD.c"
   859 ;; Parameters:    Size  Location     Type
   860 ;;		None
   861 ;; Auto vars:     Size  Location     Type
   862 ;;		None
   863 ;; Return value:  Size  Location     Type
   864 ;;                  1    wreg      void 
   865 ;; Registers used:
   866 ;;		wreg, status,2, status,0, cstack
   867 ;; Tracked objects:
   868 ;;		On entry : 0/0
   869 ;;		On exit  : 0/0
   870 ;;		Unchanged: 0/0
   871 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   872 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   873 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   874 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   875 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   876 ;;Total ram usage:        0 bytes
   877 ;; Hardware stack levels used: 1
   878 ;; Hardware stack levels required when called: 3
   879 ;; This function calls:
   880 ;;		_ENVIA_LCD_CMD
   881 ;; This function is called by:
   882 ;;		_lcd_config
   883 ;; This function uses a non-reentrant model
   884 ;;
   885                           
   886                           	psect	text5
   887  002BEC                     __ptext5:
   888                           	callstack 0
   889  002BEC                     _CURSOR_HOME:
   890                           	callstack 122
   891  002BEC                     
   892                           ;LCD.c: 33:  ENVIA_LCD_CMD(0x02);
   893  002BEC  0E02               	movlw	2
   894  002BEE  EC58  F015         	call	_ENVIA_LCD_CMD
   895  002BF2  0012               	return		;funcret
   896  002BF4                     __end_of_CURSOR_HOME:
   897                           	callstack 0
   898                           
   899 ;; *************** function _BORRAR_LCD *****************
   900 ;; Defined at:
   901 ;;		line 79 in file "LCD.c"
   902 ;; Parameters:    Size  Location     Type
   903 ;;		None
   904 ;; Auto vars:     Size  Location     Type
   905 ;;		None
   906 ;; Return value:  Size  Location     Type
   907 ;;                  1    wreg      void 
   908 ;; Registers used:
   909 ;;		wreg, status,2, status,0, cstack
   910 ;; Tracked objects:
   911 ;;		On entry : 0/0
   912 ;;		On exit  : 0/0
   913 ;;		Unchanged: 0/0
   914 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   915 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   916 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   917 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   918 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   919 ;;Total ram usage:        0 bytes
   920 ;; Hardware stack levels used: 1
   921 ;; Hardware stack levels required when called: 3
   922 ;; This function calls:
   923 ;;		_ENVIA_LCD_CMD
   924 ;; This function is called by:
   925 ;;		_lcd_config
   926 ;;		_main
   927 ;; This function uses a non-reentrant model
   928 ;;
   929                           
   930                           	psect	text6
   931  002BF4                     __ptext6:
   932                           	callstack 0
   933  002BF4                     _BORRAR_LCD:
   934                           	callstack 122
   935  002BF4                     
   936                           ;LCD.c: 81:  ENVIA_LCD_CMD(0x01);
   937  002BF4  0E01               	movlw	1
   938  002BF6  EC58  F015         	call	_ENVIA_LCD_CMD
   939  002BFA  0012               	return		;funcret
   940  002BFC                     __end_of_BORRAR_LCD:
   941                           	callstack 0
   942                           
   943 ;; *************** function _convierte *****************
   944 ;; Defined at:
   945 ;;		line 65 in file "maicode2.c"
   946 ;; Parameters:    Size  Location     Type
   947 ;;  numero          1    wreg     unsigned char 
   948 ;; Auto vars:     Size  Location     Type
   949 ;;  numero          1   14[COMRAM] unsigned char 
   950 ;; Return value:  Size  Location     Type
   951 ;;                  1    wreg      void 
   952 ;; Registers used:
   953 ;;		wreg, status,2, status,0, cstack
   954 ;; Tracked objects:
   955 ;;		On entry : 0/0
   956 ;;		On exit  : 0/0
   957 ;;		Unchanged: 0/0
   958 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   959 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   960 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   961 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   962 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   963 ;;Total ram usage:        1 bytes
   964 ;; Hardware stack levels used: 1
   965 ;; Hardware stack levels required when called: 2
   966 ;; This function calls:
   967 ;;		___awdiv
   968 ;;		___awmod
   969 ;; This function is called by:
   970 ;;		_main
   971 ;; This function uses a non-reentrant model
   972 ;;
   973                           
   974                           	psect	text7
   975  002948                     __ptext7:
   976                           	callstack 0
   977  002948                     _convierte:
   978                           	callstack 124
   979                           
   980                           ;incstack = 0
   981                           ;convierte@numero stored from wreg
   982  002948  6E0F               	movwf	convierte@numero^(0+1280),c
   983  00294A                     
   984                           ;maicode2.c: 66:     centena = numero / 100;
   985  00294A  C50F  F507         	movff	convierte@numero,___awdiv@dividend
   986  00294E  6A08               	clrf	(___awdiv@dividend+1)^(0+1280),c
   987  002950  0E00               	movlw	0
   988  002952  6E0A               	movwf	(___awdiv@divisor+1)^(0+1280),c
   989  002954  0E64               	movlw	100
   990  002956  6E09               	movwf	___awdiv@divisor^(0+1280),c
   991  002958  EC07  F013         	call	___awdiv	;wreg free
   992  00295C  5007               	movf	?___awdiv^(0+1280),w,c
   993  00295E  6E15               	movwf	_centena^(0+1280),c
   994                           
   995                           ;maicode2.c: 67:     decena = (numero % 100) / 10;
   996  002960  0E00               	movlw	0
   997  002962  6E04               	movwf	(___awmod@divisor+1)^(0+1280),c
   998  002964  0E64               	movlw	100
   999  002966  6E03               	movwf	___awmod@divisor^(0+1280),c
  1000  002968  C50F  F501         	movff	convierte@numero,___awmod@dividend
  1001  00296C  6A02               	clrf	(___awmod@dividend+1)^(0+1280),c
  1002  00296E  EC69  F013         	call	___awmod	;wreg free
  1003  002972  C501  F507         	movff	?___awmod,___awdiv@dividend
  1004  002976  C502  F508         	movff	?___awmod+1,___awdiv@dividend+1
  1005  00297A  0E00               	movlw	0
  1006  00297C  6E0A               	movwf	(___awdiv@divisor+1)^(0+1280),c
  1007  00297E  0E0A               	movlw	10
  1008  002980  6E09               	movwf	___awdiv@divisor^(0+1280),c
  1009  002982  EC07  F013         	call	___awdiv	;wreg free
  1010  002986  5007               	movf	?___awdiv^(0+1280),w,c
  1011  002988  6E14               	movwf	_decena^(0+1280),c
  1012                           
  1013                           ;maicode2.c: 68:     unidad = numero % 10;
  1014  00298A  C50F  F501         	movff	convierte@numero,___awmod@dividend
  1015  00298E  6A02               	clrf	(___awmod@dividend+1)^(0+1280),c
  1016  002990  0E00               	movlw	0
  1017  002992  6E04               	movwf	(___awmod@divisor+1)^(0+1280),c
  1018  002994  0E0A               	movlw	10
  1019  002996  6E03               	movwf	___awmod@divisor^(0+1280),c
  1020  002998  EC69  F013         	call	___awmod	;wreg free
  1021  00299C  5001               	movf	?___awmod^(0+1280),w,c
  1022  00299E  6E13               	movwf	_unidad^(0+1280),c
  1023  0029A0  0012               	return		;funcret
  1024  0029A2                     __end_of_convierte:
  1025                           	callstack 0
  1026                           
  1027 ;; *************** function ___awmod *****************
  1028 ;; Defined at:
  1029 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\awmod.c"
  1030 ;; Parameters:    Size  Location     Type
  1031 ;;  dividend        2    0[COMRAM] int 
  1032 ;;  divisor         2    2[COMRAM] int 
  1033 ;; Auto vars:     Size  Location     Type
  1034 ;;  sign            1    5[COMRAM] unsigned char 
  1035 ;;  counter         1    4[COMRAM] unsigned char 
  1036 ;; Return value:  Size  Location     Type
  1037 ;;                  2    0[COMRAM] int 
  1038 ;; Registers used:
  1039 ;;		wreg, status,2, status,0
  1040 ;; Tracked objects:
  1041 ;;		On entry : 0/0
  1042 ;;		On exit  : 0/0
  1043 ;;		Unchanged: 0/0
  1044 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1045 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1046 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1047 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1048 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1049 ;;Total ram usage:        6 bytes
  1050 ;; Hardware stack levels used: 1
  1051 ;; Hardware stack levels required when called: 1
  1052 ;; This function calls:
  1053 ;;		Nothing
  1054 ;; This function is called by:
  1055 ;;		_convierte
  1056 ;; This function uses a non-reentrant model
  1057 ;;
  1058                           
  1059                           	psect	text8
  1060  0026D2                     __ptext8:
  1061                           	callstack 0
  1062  0026D2                     ___awmod:
  1063                           	callstack 124
  1064  0026D2  0E00               	movlw	0
  1065  0026D4  6E06               	movwf	___awmod@sign^(0+1280),c
  1066  0026D6  BE02               	btfsc	(___awmod@dividend+1)^(0+1280),7,c
  1067  0026D8  EF72  F013         	goto	u400
  1068  0026DC  EF70  F013         	goto	u401
  1069  0026E0                     u401:
  1070  0026E0  EF78  F013         	goto	l1404
  1071  0026E4                     u400:
  1072  0026E4  6C01               	negf	___awmod@dividend^(0+1280),c
  1073  0026E6  1E02               	comf	(___awmod@dividend+1)^(0+1280),f,c
  1074  0026E8  B0D8               	btfsc	status,0,c
  1075  0026EA  2A02               	incf	(___awmod@dividend+1)^(0+1280),f,c
  1076  0026EC  0E01               	movlw	1
  1077  0026EE  6E06               	movwf	___awmod@sign^(0+1280),c
  1078  0026F0                     l1404:
  1079  0026F0  BE04               	btfsc	(___awmod@divisor+1)^(0+1280),7,c
  1080  0026F2  EF7F  F013         	goto	u410
  1081  0026F6  EF7D  F013         	goto	u411
  1082  0026FA                     u411:
  1083  0026FA  EF83  F013         	goto	l1408
  1084  0026FE                     u410:
  1085  0026FE  6C03               	negf	___awmod@divisor^(0+1280),c
  1086  002700  1E04               	comf	(___awmod@divisor+1)^(0+1280),f,c
  1087  002702  B0D8               	btfsc	status,0,c
  1088  002704  2A04               	incf	(___awmod@divisor+1)^(0+1280),f,c
  1089  002706                     l1408:
  1090  002706  5003               	movf	___awmod@divisor^(0+1280),w,c
  1091  002708  1004               	iorwf	(___awmod@divisor+1)^(0+1280),w,c
  1092  00270A  B4D8               	btfsc	status,2,c
  1093  00270C  EF8A  F013         	goto	u421
  1094  002710  EF8C  F013         	goto	u420
  1095  002714                     u421:
  1096  002714  EFB0  F013         	goto	l1424
  1097  002718                     u420:
  1098  002718  0E01               	movlw	1
  1099  00271A  6E05               	movwf	___awmod@counter^(0+1280),c
  1100  00271C  EF94  F013         	goto	l1414
  1101  002720                     l1412:
  1102  002720  90D8               	bcf	status,0,c
  1103  002722  3603               	rlcf	___awmod@divisor^(0+1280),f,c
  1104  002724  3604               	rlcf	(___awmod@divisor+1)^(0+1280),f,c
  1105  002726  2A05               	incf	___awmod@counter^(0+1280),f,c
  1106  002728                     l1414:
  1107  002728  AE04               	btfss	(___awmod@divisor+1)^(0+1280),7,c
  1108  00272A  EF99  F013         	goto	u431
  1109  00272E  EF9B  F013         	goto	u430
  1110  002732                     u431:
  1111  002732  EF90  F013         	goto	l1412
  1112  002736                     u430:
  1113  002736                     l1416:
  1114  002736  5003               	movf	___awmod@divisor^(0+1280),w,c
  1115  002738  5C01               	subwf	___awmod@dividend^(0+1280),w,c
  1116  00273A  5004               	movf	(___awmod@divisor+1)^(0+1280),w,c
  1117  00273C  5802               	subwfb	(___awmod@dividend+1)^(0+1280),w,c
  1118  00273E  A0D8               	btfss	status,0,c
  1119  002740  EFA4  F013         	goto	u441
  1120  002744  EFA6  F013         	goto	u440
  1121  002748                     u441:
  1122  002748  EFAA  F013         	goto	l1420
  1123  00274C                     u440:
  1124  00274C  5003               	movf	___awmod@divisor^(0+1280),w,c
  1125  00274E  5E01               	subwf	___awmod@dividend^(0+1280),f,c
  1126  002750  5004               	movf	(___awmod@divisor+1)^(0+1280),w,c
  1127  002752  5A02               	subwfb	(___awmod@dividend+1)^(0+1280),f,c
  1128  002754                     l1420:
  1129  002754  90D8               	bcf	status,0,c
  1130  002756  3204               	rrcf	(___awmod@divisor+1)^(0+1280),f,c
  1131  002758  3203               	rrcf	___awmod@divisor^(0+1280),f,c
  1132  00275A  2E05               	decfsz	___awmod@counter^(0+1280),f,c
  1133  00275C  EF9B  F013         	goto	l1416
  1134  002760                     l1424:
  1135  002760  5006               	movf	___awmod@sign^(0+1280),w,c
  1136  002762  B4D8               	btfsc	status,2,c
  1137  002764  EFB6  F013         	goto	u451
  1138  002768  EFB8  F013         	goto	u450
  1139  00276C                     u451:
  1140  00276C  EFBC  F013         	goto	l1428
  1141  002770                     u450:
  1142  002770  6C01               	negf	___awmod@dividend^(0+1280),c
  1143  002772  1E02               	comf	(___awmod@dividend+1)^(0+1280),f,c
  1144  002774  B0D8               	btfsc	status,0,c
  1145  002776  2A02               	incf	(___awmod@dividend+1)^(0+1280),f,c
  1146  002778                     l1428:
  1147  002778  C501  F501         	movff	___awmod@dividend,?___awmod
  1148  00277C  C502  F502         	movff	___awmod@dividend+1,?___awmod+1
  1149  002780  0012               	return		;funcret
  1150  002782                     __end_of___awmod:
  1151                           	callstack 0
  1152                           
  1153 ;; *************** function ___awdiv *****************
  1154 ;; Defined at:
  1155 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\awdiv.c"
  1156 ;; Parameters:    Size  Location     Type
  1157 ;;  dividend        2    6[COMRAM] int 
  1158 ;;  divisor         2    8[COMRAM] int 
  1159 ;; Auto vars:     Size  Location     Type
  1160 ;;  quotient        2   12[COMRAM] int 
  1161 ;;  sign            1   11[COMRAM] unsigned char 
  1162 ;;  counter         1   10[COMRAM] unsigned char 
  1163 ;; Return value:  Size  Location     Type
  1164 ;;                  2    6[COMRAM] int 
  1165 ;; Registers used:
  1166 ;;		wreg, status,2, status,0
  1167 ;; Tracked objects:
  1168 ;;		On entry : 0/0
  1169 ;;		On exit  : 0/0
  1170 ;;		Unchanged: 0/0
  1171 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1172 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1173 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1174 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1175 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1176 ;;Total ram usage:        8 bytes
  1177 ;; Hardware stack levels used: 1
  1178 ;; Hardware stack levels required when called: 1
  1179 ;; This function calls:
  1180 ;;		Nothing
  1181 ;; This function is called by:
  1182 ;;		_convierte
  1183 ;; This function uses a non-reentrant model
  1184 ;;
  1185                           
  1186                           	psect	text9
  1187  00260E                     __ptext9:
  1188                           	callstack 0
  1189  00260E                     ___awdiv:
  1190                           	callstack 124
  1191  00260E  0E00               	movlw	0
  1192  002610  6E0C               	movwf	___awdiv@sign^(0+1280),c
  1193  002612  BE0A               	btfsc	(___awdiv@divisor+1)^(0+1280),7,c
  1194  002614  EF10  F013         	goto	u340
  1195  002618  EF0E  F013         	goto	u341
  1196  00261C                     u341:
  1197  00261C  EF16  F013         	goto	l1360
  1198  002620                     u340:
  1199  002620  6C09               	negf	___awdiv@divisor^(0+1280),c
  1200  002622  1E0A               	comf	(___awdiv@divisor+1)^(0+1280),f,c
  1201  002624  B0D8               	btfsc	status,0,c
  1202  002626  2A0A               	incf	(___awdiv@divisor+1)^(0+1280),f,c
  1203  002628  0E01               	movlw	1
  1204  00262A  6E0C               	movwf	___awdiv@sign^(0+1280),c
  1205  00262C                     l1360:
  1206  00262C  BE08               	btfsc	(___awdiv@dividend+1)^(0+1280),7,c
  1207  00262E  EF1D  F013         	goto	u350
  1208  002632  EF1B  F013         	goto	u351
  1209  002636                     u351:
  1210  002636  EF23  F013         	goto	l1366
  1211  00263A                     u350:
  1212  00263A  6C07               	negf	___awdiv@dividend^(0+1280),c
  1213  00263C  1E08               	comf	(___awdiv@dividend+1)^(0+1280),f,c
  1214  00263E  B0D8               	btfsc	status,0,c
  1215  002640  2A08               	incf	(___awdiv@dividend+1)^(0+1280),f,c
  1216  002642  0E01               	movlw	1
  1217  002644  1A0C               	xorwf	___awdiv@sign^(0+1280),f,c
  1218  002646                     l1366:
  1219  002646  0E00               	movlw	0
  1220  002648  6E0E               	movwf	(___awdiv@quotient+1)^(0+1280),c
  1221  00264A  0E00               	movlw	0
  1222  00264C  6E0D               	movwf	___awdiv@quotient^(0+1280),c
  1223  00264E  5009               	movf	___awdiv@divisor^(0+1280),w,c
  1224  002650  100A               	iorwf	(___awdiv@divisor+1)^(0+1280),w,c
  1225  002652  B4D8               	btfsc	status,2,c
  1226  002654  EF2E  F013         	goto	u361
  1227  002658  EF30  F013         	goto	u360
  1228  00265C                     u361:
  1229  00265C  EF58  F013         	goto	l1388
  1230  002660                     u360:
  1231  002660  0E01               	movlw	1
  1232  002662  6E0B               	movwf	___awdiv@counter^(0+1280),c
  1233  002664  EF38  F013         	goto	l1374
  1234  002668                     l1372:
  1235  002668  90D8               	bcf	status,0,c
  1236  00266A  3609               	rlcf	___awdiv@divisor^(0+1280),f,c
  1237  00266C  360A               	rlcf	(___awdiv@divisor+1)^(0+1280),f,c
  1238  00266E  2A0B               	incf	___awdiv@counter^(0+1280),f,c
  1239  002670                     l1374:
  1240  002670  AE0A               	btfss	(___awdiv@divisor+1)^(0+1280),7,c
  1241  002672  EF3D  F013         	goto	u371
  1242  002676  EF3F  F013         	goto	u370
  1243  00267A                     u371:
  1244  00267A  EF34  F013         	goto	l1372
  1245  00267E                     u370:
  1246  00267E                     l1376:
  1247  00267E  90D8               	bcf	status,0,c
  1248  002680  360D               	rlcf	___awdiv@quotient^(0+1280),f,c
  1249  002682  360E               	rlcf	(___awdiv@quotient+1)^(0+1280),f,c
  1250  002684  5009               	movf	___awdiv@divisor^(0+1280),w,c
  1251  002686  5C07               	subwf	___awdiv@dividend^(0+1280),w,c
  1252  002688  500A               	movf	(___awdiv@divisor+1)^(0+1280),w,c
  1253  00268A  5808               	subwfb	(___awdiv@dividend+1)^(0+1280),w,c
  1254  00268C  A0D8               	btfss	status,0,c
  1255  00268E  EF4B  F013         	goto	u381
  1256  002692  EF4D  F013         	goto	u380
  1257  002696                     u381:
  1258  002696  EF52  F013         	goto	l1384
  1259  00269A                     u380:
  1260  00269A  5009               	movf	___awdiv@divisor^(0+1280),w,c
  1261  00269C  5E07               	subwf	___awdiv@dividend^(0+1280),f,c
  1262  00269E  500A               	movf	(___awdiv@divisor+1)^(0+1280),w,c
  1263  0026A0  5A08               	subwfb	(___awdiv@dividend+1)^(0+1280),f,c
  1264  0026A2  800D               	bsf	___awdiv@quotient^(0+1280),0,c
  1265  0026A4                     l1384:
  1266  0026A4  90D8               	bcf	status,0,c
  1267  0026A6  320A               	rrcf	(___awdiv@divisor+1)^(0+1280),f,c
  1268  0026A8  3209               	rrcf	___awdiv@divisor^(0+1280),f,c
  1269  0026AA  2E0B               	decfsz	___awdiv@counter^(0+1280),f,c
  1270  0026AC  EF3F  F013         	goto	l1376
  1271  0026B0                     l1388:
  1272  0026B0  500C               	movf	___awdiv@sign^(0+1280),w,c
  1273  0026B2  B4D8               	btfsc	status,2,c
  1274  0026B4  EF5E  F013         	goto	u391
  1275  0026B8  EF60  F013         	goto	u390
  1276  0026BC                     u391:
  1277  0026BC  EF64  F013         	goto	l1392
  1278  0026C0                     u390:
  1279  0026C0  6C0D               	negf	___awdiv@quotient^(0+1280),c
  1280  0026C2  1E0E               	comf	(___awdiv@quotient+1)^(0+1280),f,c
  1281  0026C4  B0D8               	btfsc	status,0,c
  1282  0026C6  2A0E               	incf	(___awdiv@quotient+1)^(0+1280),f,c
  1283  0026C8                     l1392:
  1284  0026C8  C50D  F507         	movff	___awdiv@quotient,?___awdiv
  1285  0026CC  C50E  F508         	movff	___awdiv@quotient+1,?___awdiv+1
  1286  0026D0  0012               	return		;funcret
  1287  0026D2                     __end_of___awdiv:
  1288                           	callstack 0
  1289                           
  1290 ;; *************** function _configuro *****************
  1291 ;; Defined at:
  1292 ;;		line 10 in file "maicode2.c"
  1293 ;; Parameters:    Size  Location     Type
  1294 ;;		None
  1295 ;; Auto vars:     Size  Location     Type
  1296 ;;		None
  1297 ;; Return value:  Size  Location     Type
  1298 ;;                  1    wreg      void 
  1299 ;; Registers used:
  1300 ;;		wreg, status,2
  1301 ;; Tracked objects:
  1302 ;;		On entry : 0/0
  1303 ;;		On exit  : 0/0
  1304 ;;		Unchanged: 0/0
  1305 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1306 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1307 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1308 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1309 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1310 ;;Total ram usage:        0 bytes
  1311 ;; Hardware stack levels used: 1
  1312 ;; Hardware stack levels required when called: 1
  1313 ;; This function calls:
  1314 ;;		Nothing
  1315 ;; This function is called by:
  1316 ;;		_main
  1317 ;; This function uses a non-reentrant model
  1318 ;;
  1319                           
  1320                           	psect	text10
  1321  002782                     __ptext10:
  1322                           	callstack 0
  1323  002782                     _configuro:
  1324                           	callstack 125
  1325  002782                     
  1326                           ;maicode2.c: 12:     OSCCON1 = 0x60;
  1327  002782  0E60               	movlw	96
  1328  002784  0100               	movlb	0	; () banked
  1329  002786  6FAD               	movwf	173,b	;volatile
  1330                           
  1331                           ;maicode2.c: 13:     OSCFRQ = 0x02;
  1332  002788  0E02               	movlw	2
  1333  00278A  6FB1               	movwf	177,b	;volatile
  1334                           
  1335                           ;maicode2.c: 14:     OSCEN = 0x40;
  1336  00278C  0E40               	movlw	64
  1337  00278E  6FB3               	movwf	179,b	;volatile
  1338                           
  1339                           ;maicode2.c: 16:     TRISD = 0x00;
  1340  002790  0E00               	movlw	0
  1341  002792  6EC9               	movwf	201,c	;volatile
  1342                           
  1343                           ;maicode2.c: 17:     ANSELD = 0x00;
  1344  002794  0E00               	movlw	0
  1345  002796  0104               	movlb	4	; () banked
  1346  002798  6F18               	movwf	24,b	;volatile
  1347  00279A                     
  1348                           ; BSR set to: 4
  1349                           ;maicode2.c: 18:     TRISAbits.TRISA0 = 1;
  1350  00279A  80C6               	bsf	198,0,c	;volatile
  1351  00279C                     
  1352                           ; BSR set to: 4
  1353                           ;maicode2.c: 19:     ANSELAbits.ANSELA0 = 1;
  1354  00279C  8100               	bsf	0,0,b	;volatile
  1355  00279E                     
  1356                           ; BSR set to: 4
  1357                           ;maicode2.c: 20:     TRISB = 0xFF;
  1358  00279E  68C7               	setf	199,c	;volatile
  1359                           
  1360                           ;maicode2.c: 21:     ANSELB = 0xF8;
  1361  0027A0  0EF8               	movlw	248
  1362  0027A2  6F08               	movwf	8,b	;volatile
  1363                           
  1364                           ;maicode2.c: 22:     WPUB = 0x07;
  1365  0027A4  0E07               	movlw	7
  1366  0027A6  6F09               	movwf	9,b	;volatile
  1367                           
  1368                           ;maicode2.c: 24:     ADCON0bits.ADFM = 0;
  1369  0027A8  0EF3               	movlw	-13
  1370  0027AA  0103               	movlb	3	; () banked
  1371  0027AC  17F3               	andwf	243,f,b	;volatile
  1372  0027AE                     
  1373                           ; BSR set to: 3
  1374                           ;maicode2.c: 25:     ADCON0bits.CS = 1;
  1375  0027AE  89F3               	bsf	243,4,b	;volatile
  1376                           
  1377                           ;maicode2.c: 26:     ADPCH = 0x00;
  1378  0027B0  0E00               	movlw	0
  1379  0027B2  6FEC               	movwf	236,b	;volatile
  1380  0027B4                     
  1381                           ; BSR set to: 3
  1382                           ;maicode2.c: 27:     ADCON0bits.ADON = 1;
  1383  0027B4  8FF3               	bsf	243,7,b	;volatile
  1384                           
  1385                           ;maicode2.c: 29:     T2PR = 62;
  1386  0027B6  0E3E               	movlw	62
  1387  0027B8  6F23               	movwf	35,b	;volatile
  1388                           
  1389                           ;maicode2.c: 30:     RC2PPS = 0x15;
  1390  0027BA  0E15               	movlw	21
  1391  0027BC  0102               	movlb	2	; () banked
  1392  0027BE  6F13               	movwf	19,b	;volatile
  1393                           
  1394                           ;maicode2.c: 31:     CCP2CON = 0x9C;
  1395  0027C0  0E9C               	movlw	156
  1396  0027C2  0103               	movlb	3	; () banked
  1397  0027C4  6F46               	movwf	70,b	;volatile
  1398                           
  1399                           ;maicode2.c: 32:     CCPR2H = 0;
  1400  0027C6  0E00               	movlw	0
  1401  0027C8  6F45               	movwf	69,b	;volatile
  1402                           
  1403                           ;maicode2.c: 33:     CCPR2L = 0;
  1404  0027CA  0E00               	movlw	0
  1405  0027CC  6F44               	movwf	68,b	;volatile
  1406                           
  1407                           ;maicode2.c: 34:     T2CLKCON = 0x01;
  1408  0027CE  0E01               	movlw	1
  1409  0027D0  6F26               	movwf	38,b	;volatile
  1410                           
  1411                           ;maicode2.c: 35:     T2CON = 0xC0;
  1412  0027D2  0EC0               	movlw	192
  1413  0027D4  6F24               	movwf	36,b	;volatile
  1414                           
  1415                           ;maicode2.c: 37:     T1CON = 0x01;
  1416  0027D6  0E01               	movlw	1
  1417  0027D8  6F1E               	movwf	30,b	;volatile
  1418                           
  1419                           ;maicode2.c: 38:     T1CLK = 0x01;
  1420  0027DA  0E01               	movlw	1
  1421  0027DC  6F21               	movwf	33,b	;volatile
  1422                           
  1423                           ;maicode2.c: 40:     CCP1CON = 0x8B;
  1424  0027DE  0E8B               	movlw	139
  1425  0027E0  6F42               	movwf	66,b	;volatile
  1426                           
  1427                           ;maicode2.c: 41:     CCPR1H = 0x27;
  1428  0027E2  0E27               	movlw	39
  1429  0027E4  6F41               	movwf	65,b	;volatile
  1430                           
  1431                           ;maicode2.c: 42:     CCPR1L = 0x10;
  1432  0027E6  0E10               	movlw	16
  1433  0027E8  6F40               	movwf	64,b	;volatile
  1434  0027EA                     
  1435                           ; BSR set to: 3
  1436                           ;maicode2.c: 44:     INTCON0bits.GIE = 1;
  1437  0027EA  8ED6               	bsf	214,7,c	;volatile
  1438  0027EC                     
  1439                           ; BSR set to: 3
  1440                           ;maicode2.c: 45:     PIE3bits.CCP1IE = 1;
  1441  0027EC  8CA1               	bsf	161,6,c	;volatile
  1442  0027EE                     
  1443                           ; BSR set to: 3
  1444                           ;maicode2.c: 46:     PIE1bits.INT0IE = 1;
  1445  0027EE  809F               	bsf	159,0,c	;volatile
  1446  0027F0                     
  1447                           ; BSR set to: 3
  1448                           ;maicode2.c: 47:     PIE6bits.INT1IE = 1;
  1449  0027F0  80A4               	bsf	164,0,c	;volatile
  1450  0027F2                     
  1451                           ; BSR set to: 3
  1452                           ;maicode2.c: 48:     PIE10bits.INT2IE = 1;
  1453  0027F2  80A8               	bsf	168,0,c	;volatile
  1454  0027F4                     
  1455                           ; BSR set to: 3
  1456                           ;maicode2.c: 49:     INTCON0bits.INT0EDG = 0;
  1457  0027F4  90D6               	bcf	214,0,c	;volatile
  1458  0027F6                     
  1459                           ; BSR set to: 3
  1460                           ;maicode2.c: 50:     INTCON0bits.INT1EDG = 0;
  1461  0027F6  92D6               	bcf	214,1,c	;volatile
  1462  0027F8                     
  1463                           ; BSR set to: 3
  1464                           ;maicode2.c: 51:     INTCON0bits.INT2EDG = 0;
  1465  0027F8  94D6               	bcf	214,2,c	;volatile
  1466  0027FA                     
  1467                           ; BSR set to: 3
  1468  0027FA  0012               	return		;funcret
  1469  0027FC                     __end_of_configuro:
  1470                           	callstack 0
  1471                           
  1472 ;; *************** function _POS_CURSOR *****************
  1473 ;; Defined at:
  1474 ;;		line 7 in file "LCD.c"
  1475 ;; Parameters:    Size  Location     Type
  1476 ;;  fila            1    wreg     unsigned char 
  1477 ;;  columna         1    3[COMRAM] unsigned char 
  1478 ;; Auto vars:     Size  Location     Type
  1479 ;;  fila            1    4[COMRAM] unsigned char 
  1480 ;; Return value:  Size  Location     Type
  1481 ;;                  1    wreg      void 
  1482 ;; Registers used:
  1483 ;;		wreg, status,2, status,0, cstack
  1484 ;; Tracked objects:
  1485 ;;		On entry : 0/0
  1486 ;;		On exit  : 0/0
  1487 ;;		Unchanged: 0/0
  1488 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1489 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1490 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1491 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1492 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1493 ;;Total ram usage:        2 bytes
  1494 ;; Hardware stack levels used: 1
  1495 ;; Hardware stack levels required when called: 3
  1496 ;; This function calls:
  1497 ;;		_ENVIA_LCD_CMD
  1498 ;; This function is called by:
  1499 ;;		_main
  1500 ;; This function uses a non-reentrant model
  1501 ;;
  1502                           
  1503                           	psect	text11
  1504  002A76                     __ptext11:
  1505                           	callstack 0
  1506  002A76                     _POS_CURSOR:
  1507                           	callstack 123
  1508                           
  1509                           ; BSR set to: 3
  1510                           ;incstack = 0
  1511                           ;POS_CURSOR@fila stored from wreg
  1512  002A76  6E05               	movwf	POS_CURSOR@fila^(0+1280),c
  1513  002A78                     
  1514                           ;LCD.c: 7: void POS_CURSOR(unsigned char fila,unsigned char columna);LCD.c: 8: {;LCD.c: 
      +                          9:  if(fila == 1)
  1515  002A78  0405               	decf	POS_CURSOR@fila^(0+1280),w,c
  1516  002A7A  A4D8               	btfss	status,2,c
  1517  002A7C  EF42  F015         	goto	u461
  1518  002A80  EF44  F015         	goto	u460
  1519  002A84                     u461:
  1520  002A84  EF4A  F015         	goto	l1436
  1521  002A88                     u460:
  1522  002A88                     
  1523                           ;LCD.c: 10:  {;LCD.c: 11:   ENVIA_LCD_CMD(0x80+columna);
  1524  002A88  5004               	movf	POS_CURSOR@columna^(0+1280),w,c
  1525  002A8A  0F80               	addlw	128
  1526  002A8C  EC58  F015         	call	_ENVIA_LCD_CMD
  1527                           
  1528                           ;LCD.c: 12:  }
  1529  002A90  EF57  F015         	goto	l26
  1530  002A94                     l1436:
  1531  002A94  0E02               	movlw	2
  1532  002A96  1805               	xorwf	POS_CURSOR@fila^(0+1280),w,c
  1533  002A98  A4D8               	btfss	status,2,c
  1534  002A9A  EF51  F015         	goto	u471
  1535  002A9E  EF53  F015         	goto	u470
  1536  002AA2                     u471:
  1537  002AA2  EF57  F015         	goto	l26
  1538  002AA6                     u470:
  1539  002AA6                     
  1540                           ;LCD.c: 14:  {;LCD.c: 15:   ENVIA_LCD_CMD(0xC0+columna);
  1541  002AA6  5004               	movf	POS_CURSOR@columna^(0+1280),w,c
  1542  002AA8  0FC0               	addlw	192
  1543  002AAA  EC58  F015         	call	_ENVIA_LCD_CMD
  1544  002AAE                     l26:
  1545  002AAE  0012               	return		;funcret
  1546  002AB0                     __end_of_POS_CURSOR:
  1547                           	callstack 0
  1548                           
  1549 ;; *************** function _ENVIA_LCD_CMD *****************
  1550 ;; Defined at:
  1551 ;;		line 116 in file "LCD.c"
  1552 ;; Parameters:    Size  Location     Type
  1553 ;;  dato            1    wreg     unsigned char 
  1554 ;; Auto vars:     Size  Location     Type
  1555 ;;  dato            1    1[COMRAM] unsigned char 
  1556 ;;  aux             1    2[COMRAM] unsigned char 
  1557 ;; Return value:  Size  Location     Type
  1558 ;;                  1    wreg      void 
  1559 ;; Registers used:
  1560 ;;		wreg, status,2, status,0, cstack
  1561 ;; Tracked objects:
  1562 ;;		On entry : 0/0
  1563 ;;		On exit  : 0/0
  1564 ;;		Unchanged: 0/0
  1565 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1566 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1567 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1568 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1569 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1570 ;;Total ram usage:        2 bytes
  1571 ;; Hardware stack levels used: 1
  1572 ;; Hardware stack levels required when called: 2
  1573 ;; This function calls:
  1574 ;;		_ENVIA_NIBBLE
  1575 ;;		_LEER_LCD
  1576 ;; This function is called by:
  1577 ;;		_POS_CURSOR
  1578 ;;		_CURSOR_HOME
  1579 ;;		_CURSOR_ONOFF
  1580 ;;		_BORRAR_LCD
  1581 ;;		_LCD_CONFIG
  1582 ;;		_BLINK_CURSOR
  1583 ;;		_DISPLAY_ONOFF
  1584 ;;		_GENERACARACTER
  1585 ;; This function uses a non-reentrant model
  1586 ;;
  1587                           
  1588                           	psect	text12
  1589  002AB0                     __ptext12:
  1590                           	callstack 0
  1591  002AB0                     _ENVIA_LCD_CMD:
  1592                           	callstack 122
  1593                           
  1594                           ;incstack = 0
  1595                           ;ENVIA_LCD_CMD@dato stored from wreg
  1596  002AB0  6E02               	movwf	ENVIA_LCD_CMD@dato^(0+1280),c
  1597  002AB2                     
  1598                           ;LCD.c: 116: void ENVIA_LCD_CMD(unsigned char dato);LCD.c: 117: {;LCD.c: 118:  unsigned 
      +                          char aux;;LCD.c: 119:  LATDbits.LATD0 = 0;
  1599  002AB2  90C1               	bcf	193,0,c	;volatile
  1600  002AB4                     
  1601                           ;LCD.c: 120:  LEER_LCD();
  1602  002AB4  ECFE  F013         	call	_LEER_LCD	;wreg free
  1603  002AB8                     
  1604                           ;LCD.c: 121:  TRISD = 0b00000000;
  1605  002AB8  0E00               	movlw	0
  1606  002ABA  6EC9               	movwf	201,c	;volatile
  1607  002ABC                     
  1608                           ;LCD.c: 123:         _delay(1200);
  1609  002ABC  0EF0               	movlw	240
  1610  002ABE                     u557:
  1611  002ABE  D000               	nop2	
  1612  002AC0  2EE8               	decfsz	wreg,f,c
  1613  002AC2  D7FD               	bra	u557
  1614  002AC4                     
  1615                           ;LCD.c: 124:         LATDbits.LATD1 = 0;
  1616  002AC4  92C1               	bcf	193,1,c	;volatile
  1617  002AC6                     
  1618                           ;LCD.c: 125:  LATDbits.LATD2 = 0;
  1619  002AC6  94C1               	bcf	193,2,c	;volatile
  1620  002AC8                     
  1621                           ;LCD.c: 126:  LATDbits.LATD0 = 0;
  1622  002AC8  90C1               	bcf	193,0,c	;volatile
  1623  002ACA                     
  1624                           ;LCD.c: 127:  aux = dato & 0xF0;
  1625  002ACA  5002               	movf	ENVIA_LCD_CMD@dato^(0+1280),w,c
  1626  002ACC  0BF0               	andlw	240
  1627  002ACE  6E03               	movwf	ENVIA_LCD_CMD@aux^(0+1280),c
  1628  002AD0                     
  1629                           ;LCD.c: 128:  ENVIA_NIBBLE(aux);
  1630  002AD0  5003               	movf	ENVIA_LCD_CMD@aux^(0+1280),w,c
  1631  002AD2  ECDE  F015         	call	_ENVIA_NIBBLE
  1632  002AD6                     
  1633                           ;LCD.c: 129:  aux = dato<<4;
  1634  002AD6  3802               	swapf	ENVIA_LCD_CMD@dato^(0+1280),w,c
  1635  002AD8  0BF0               	andlw	240
  1636  002ADA  6E03               	movwf	ENVIA_LCD_CMD@aux^(0+1280),c
  1637  002ADC                     
  1638                           ;LCD.c: 130:  ENVIA_NIBBLE(aux);
  1639  002ADC  5003               	movf	ENVIA_LCD_CMD@aux^(0+1280),w,c
  1640  002ADE  ECDE  F015         	call	_ENVIA_NIBBLE
  1641  002AE2  0012               	return		;funcret
  1642  002AE4                     __end_of_ENVIA_LCD_CMD:
  1643                           	callstack 0
  1644                           
  1645 ;; *************** function _ESCRIBE_MENSAJE2 *****************
  1646 ;; Defined at:
  1647 ;;		line 51 in file "LCD.c"
  1648 ;; Parameters:    Size  Location     Type
  1649 ;;  cadena          2    4[COMRAM] PTR const unsigned char 
  1650 ;;		 -> STR_3(13), STR_2(11), STR_1(11), 
  1651 ;; Auto vars:     Size  Location     Type
  1652 ;;  i               1    9[COMRAM] unsigned char 
  1653 ;;  tam             1    8[COMRAM] unsigned char 
  1654 ;; Return value:  Size  Location     Type
  1655 ;;                  1    wreg      void 
  1656 ;; Registers used:
  1657 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1658 ;; Tracked objects:
  1659 ;;		On entry : 0/0
  1660 ;;		On exit  : 0/0
  1661 ;;		Unchanged: 0/0
  1662 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1663 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1664 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1665 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1666 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1667 ;;Total ram usage:        6 bytes
  1668 ;; Hardware stack levels used: 1
  1669 ;; Hardware stack levels required when called: 3
  1670 ;; This function calls:
  1671 ;;		_ENVIA_CHAR
  1672 ;;		_strlen
  1673 ;; This function is called by:
  1674 ;;		_main
  1675 ;; This function uses a non-reentrant model
  1676 ;;
  1677                           
  1678                           	psect	text13
  1679  0029A2                     __ptext13:
  1680                           	callstack 0
  1681  0029A2                     _ESCRIBE_MENSAJE2:
  1682                           	callstack 123
  1683  0029A2                     
  1684                           ;LCD.c: 51: void ESCRIBE_MENSAJE2(const char *cadena);LCD.c: 52: {;LCD.c: 53:     unsign
      +                          ed char tam;;LCD.c: 54:     tam = strlen(cadena);
  1685  0029A2  C505  F501         	movff	ESCRIBE_MENSAJE2@cadena,strlen@s
  1686  0029A6  C506  F502         	movff	ESCRIBE_MENSAJE2@cadena+1,strlen@s+1
  1687  0029AA  EC1C  F015         	call	_strlen	;wreg free
  1688  0029AE  5001               	movf	?_strlen^(0+1280),w,c
  1689  0029B0  6E09               	movwf	ESCRIBE_MENSAJE2@tam^(0+1280),c
  1690  0029B2                     
  1691                           ;LCD.c: 56:  for(i = 0; i<tam; i++)
  1692  0029B2  0E00               	movlw	0
  1693  0029B4  6E0A               	movwf	ESCRIBE_MENSAJE2@i^(0+1280),c
  1694  0029B6  EFEE  F014         	goto	l1450
  1695  0029BA                     l1446:
  1696                           
  1697                           ;LCD.c: 57:  {;LCD.c: 58:   ENVIA_CHAR(cadena[i]);
  1698  0029BA  500A               	movf	ESCRIBE_MENSAJE2@i^(0+1280),w,c
  1699  0029BC  2405               	addwf	ESCRIBE_MENSAJE2@cadena^(0+1280),w,c
  1700  0029BE  6E07               	movwf	??_ESCRIBE_MENSAJE2^(0+1280),c
  1701  0029C0  0E00               	movlw	0
  1702  0029C2  2006               	addwfc	(ESCRIBE_MENSAJE2@cadena+1)^(0+1280),w,c
  1703  0029C4  6E08               	movwf	(??_ESCRIBE_MENSAJE2+1)^(0+1280),c
  1704  0029C6  0061  F41C  F4F6   	movff	??_ESCRIBE_MENSAJE2,tblptrl
  1705  0029CC  0061  F420  F4F7   	movff	??_ESCRIBE_MENSAJE2+1,tblptrh
  1706  0029D2                     	if	0	;tblptru may be non-zero
  1707  0029D2                     	endif
  1708  0029D2                     	if	0	;tblptru may be non-zero
  1709  0029D2                     	endif
  1710  0029D2  0008               	tblrd		*
  1711  0029D4  50F5               	movf	tablat,w,c
  1712  0029D6  EC72  F015         	call	_ENVIA_CHAR
  1713  0029DA                     
  1714                           ;LCD.c: 59:  }
  1715  0029DA  2A0A               	incf	ESCRIBE_MENSAJE2@i^(0+1280),f,c
  1716  0029DC                     l1450:
  1717  0029DC  5009               	movf	ESCRIBE_MENSAJE2@tam^(0+1280),w,c
  1718  0029DE  5C0A               	subwf	ESCRIBE_MENSAJE2@i^(0+1280),w,c
  1719  0029E0  A0D8               	btfss	status,0,c
  1720  0029E2  EFF5  F014         	goto	u481
  1721  0029E6  EFF7  F014         	goto	u480
  1722  0029EA                     u481:
  1723  0029EA  EFDD  F014         	goto	l1446
  1724  0029EE                     u480:
  1725  0029EE  0012               	return		;funcret
  1726  0029F0                     __end_of_ESCRIBE_MENSAJE2:
  1727                           	callstack 0
  1728                           
  1729 ;; *************** function _strlen *****************
  1730 ;; Defined at:
  1731 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\strlen.c"
  1732 ;; Parameters:    Size  Location     Type
  1733 ;;  s               2    0[COMRAM] PTR const unsigned char 
  1734 ;;		 -> STR_3(13), STR_2(11), STR_1(11), 
  1735 ;; Auto vars:     Size  Location     Type
  1736 ;;  a               2    2[COMRAM] PTR const unsigned char 
  1737 ;;		 -> STR_3(13), STR_2(11), STR_1(11), 
  1738 ;; Return value:  Size  Location     Type
  1739 ;;                  2    0[COMRAM] unsigned int 
  1740 ;; Registers used:
  1741 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  1742 ;; Tracked objects:
  1743 ;;		On entry : 0/0
  1744 ;;		On exit  : 0/0
  1745 ;;		Unchanged: 0/0
  1746 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1747 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1748 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1749 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1750 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1751 ;;Total ram usage:        4 bytes
  1752 ;; Hardware stack levels used: 1
  1753 ;; Hardware stack levels required when called: 1
  1754 ;; This function calls:
  1755 ;;		Nothing
  1756 ;; This function is called by:
  1757 ;;		_ESCRIBE_MENSAJE2
  1758 ;; This function uses a non-reentrant model
  1759 ;;
  1760                           
  1761                           	psect	text14
  1762  002A38                     __ptext14:
  1763                           	callstack 0
  1764  002A38                     _strlen:
  1765                           	callstack 124
  1766  002A38  C501  F503         	movff	strlen@s,strlen@a
  1767  002A3C  C502  F504         	movff	strlen@s+1,strlen@a+1
  1768  002A40  EF24  F015         	goto	l1346
  1769  002A44                     l1344:
  1770  002A44  4A01               	infsnz	strlen@s^(0+1280),f,c
  1771  002A46  2A02               	incf	(strlen@s+1)^(0+1280),f,c
  1772  002A48                     l1346:
  1773  002A48  0061  F404  F4F6   	movff	strlen@s,tblptrl
  1774  002A4E  0061  F408  F4F7   	movff	strlen@s+1,tblptrh
  1775  002A54                     	if	0	;tblptru may be non-zero
  1776  002A54                     	endif
  1777  002A54                     	if	0	;tblptru may be non-zero
  1778  002A54                     	endif
  1779  002A54  0008               	tblrd		*
  1780  002A56  50F5               	movf	tablat,w,c
  1781  002A58  0900               	iorlw	0
  1782  002A5A  A4D8               	btfss	status,2,c
  1783  002A5C  EF32  F015         	goto	u331
  1784  002A60  EF34  F015         	goto	u330
  1785  002A64                     u331:
  1786  002A64  EF22  F015         	goto	l1344
  1787  002A68                     u330:
  1788  002A68  5003               	movf	strlen@a^(0+1280),w,c
  1789  002A6A  5C01               	subwf	strlen@s^(0+1280),w,c
  1790  002A6C  6E01               	movwf	?_strlen^(0+1280),c
  1791  002A6E  5004               	movf	(strlen@a+1)^(0+1280),w,c
  1792  002A70  5802               	subwfb	(strlen@s+1)^(0+1280),w,c
  1793  002A72  6E02               	movwf	(?_strlen+1)^(0+1280),c
  1794  002A74  0012               	return		;funcret
  1795  002A76                     __end_of_strlen:
  1796                           	callstack 0
  1797                           
  1798 ;; *************** function _ENVIA_CHAR *****************
  1799 ;; Defined at:
  1800 ;;		line 62 in file "LCD.c"
  1801 ;; Parameters:    Size  Location     Type
  1802 ;;  dato            1    wreg     unsigned char 
  1803 ;; Auto vars:     Size  Location     Type
  1804 ;;  dato            1    1[COMRAM] unsigned char 
  1805 ;;  aux             1    2[COMRAM] unsigned char 
  1806 ;; Return value:  Size  Location     Type
  1807 ;;                  1    wreg      void 
  1808 ;; Registers used:
  1809 ;;		wreg, status,2, status,0, cstack
  1810 ;; Tracked objects:
  1811 ;;		On entry : 0/0
  1812 ;;		On exit  : 0/0
  1813 ;;		Unchanged: 0/0
  1814 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1815 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1816 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1817 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1818 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1819 ;;Total ram usage:        2 bytes
  1820 ;; Hardware stack levels used: 1
  1821 ;; Hardware stack levels required when called: 2
  1822 ;; This function calls:
  1823 ;;		_ENVIA_NIBBLE
  1824 ;;		_LEER_LCD
  1825 ;; This function is called by:
  1826 ;;		_ESCRIBE_MENSAJE2
  1827 ;;		_main
  1828 ;;		_ESCRIBE_MENSAJE
  1829 ;;		_GENERACARACTER
  1830 ;; This function uses a non-reentrant model
  1831 ;;
  1832                           
  1833                           	psect	text15
  1834  002AE4                     __ptext15:
  1835                           	callstack 0
  1836  002AE4                     _ENVIA_CHAR:
  1837                           	callstack 123
  1838                           
  1839                           ;incstack = 0
  1840                           ;ENVIA_CHAR@dato stored from wreg
  1841  002AE4  6E02               	movwf	ENVIA_CHAR@dato^(0+1280),c
  1842  002AE6                     
  1843                           ;LCD.c: 62: void ENVIA_CHAR(unsigned char dato);LCD.c: 63: {;LCD.c: 64:  unsigned char a
      +                          ux;;LCD.c: 65:  LATDbits.LATD0 = 1;
  1844  002AE6  80C1               	bsf	193,0,c	;volatile
  1845  002AE8                     
  1846                           ;LCD.c: 66:  LEER_LCD();
  1847  002AE8  ECFE  F013         	call	_LEER_LCD	;wreg free
  1848  002AEC                     
  1849                           ;LCD.c: 67:  TRISD = 0x00;
  1850  002AEC  0E00               	movlw	0
  1851  002AEE  6EC9               	movwf	201,c	;volatile
  1852  002AF0                     
  1853                           ;LCD.c: 68:         _delay(1200);
  1854  002AF0  0EF0               	movlw	240
  1855  002AF2                     u567:
  1856  002AF2  D000               	nop2	
  1857  002AF4  2EE8               	decfsz	wreg,f,c
  1858  002AF6  D7FD               	bra	u567
  1859  002AF8                     
  1860                           ;LCD.c: 70:  LATDbits.LATD1 = 0;
  1861  002AF8  92C1               	bcf	193,1,c	;volatile
  1862  002AFA                     
  1863                           ;LCD.c: 71:  LATDbits.LATD2 = 0;
  1864  002AFA  94C1               	bcf	193,2,c	;volatile
  1865  002AFC                     
  1866                           ;LCD.c: 72:  LATDbits.LATD0 = 1;
  1867  002AFC  80C1               	bsf	193,0,c	;volatile
  1868  002AFE                     
  1869                           ;LCD.c: 73:  aux = dato & 0xF0;
  1870  002AFE  5002               	movf	ENVIA_CHAR@dato^(0+1280),w,c
  1871  002B00  0BF0               	andlw	240
  1872  002B02  6E03               	movwf	ENVIA_CHAR@aux^(0+1280),c
  1873  002B04                     
  1874                           ;LCD.c: 74:  ENVIA_NIBBLE(aux);
  1875  002B04  5003               	movf	ENVIA_CHAR@aux^(0+1280),w,c
  1876  002B06  ECDE  F015         	call	_ENVIA_NIBBLE
  1877  002B0A                     
  1878                           ;LCD.c: 75:  aux = dato << 4;
  1879  002B0A  3802               	swapf	ENVIA_CHAR@dato^(0+1280),w,c
  1880  002B0C  0BF0               	andlw	240
  1881  002B0E  6E03               	movwf	ENVIA_CHAR@aux^(0+1280),c
  1882  002B10                     
  1883                           ;LCD.c: 76:  ENVIA_NIBBLE(aux);
  1884  002B10  5003               	movf	ENVIA_CHAR@aux^(0+1280),w,c
  1885  002B12  ECDE  F015         	call	_ENVIA_NIBBLE
  1886  002B16  0012               	return		;funcret
  1887  002B18                     __end_of_ENVIA_CHAR:
  1888                           	callstack 0
  1889                           
  1890 ;; *************** function _LEER_LCD *****************
  1891 ;; Defined at:
  1892 ;;		line 133 in file "LCD.c"
  1893 ;; Parameters:    Size  Location     Type
  1894 ;;		None
  1895 ;; Auto vars:     Size  Location     Type
  1896 ;;  aux             1    0[COMRAM] unsigned char 
  1897 ;; Return value:  Size  Location     Type
  1898 ;;                  1    wreg      void 
  1899 ;; Registers used:
  1900 ;;		wreg, status,2, status,0
  1901 ;; Tracked objects:
  1902 ;;		On entry : 0/0
  1903 ;;		On exit  : 0/0
  1904 ;;		Unchanged: 0/0
  1905 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1906 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1907 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1908 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1909 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1910 ;;Total ram usage:        1 bytes
  1911 ;; Hardware stack levels used: 1
  1912 ;; Hardware stack levels required when called: 1
  1913 ;; This function calls:
  1914 ;;		Nothing
  1915 ;; This function is called by:
  1916 ;;		_ENVIA_CHAR
  1917 ;;		_ENVIA_LCD_CMD
  1918 ;; This function uses a non-reentrant model
  1919 ;;
  1920                           
  1921                           	psect	text16
  1922  0027FC                     __ptext16:
  1923                           	callstack 0
  1924  0027FC                     _LEER_LCD:
  1925                           	callstack 122
  1926  0027FC                     
  1927                           ;LCD.c: 135:  unsigned char aux;;LCD.c: 136:  TRISD = 0xF8;
  1928  0027FC  0EF8               	movlw	248
  1929  0027FE  6EC9               	movwf	201,c	;volatile
  1930  002800                     
  1931                           ;LCD.c: 137:  LATDbits.LATD0 = 0;
  1932  002800  90C1               	bcf	193,0,c	;volatile
  1933  002802                     
  1934                           ;LCD.c: 138:  LATDbits.LATD1 = 1;
  1935  002802  82C1               	bsf	193,1,c	;volatile
  1936  002804                     
  1937                           ;LCD.c: 139:  LATDbits.LATD2 = 1;
  1938  002804  84C1               	bsf	193,2,c	;volatile
  1939  002806                     
  1940                           ;LCD.c: 140:         _delay(1200);
  1941  002806  0EF0               	movlw	240
  1942  002808                     u577:
  1943  002808  D000               	nop2	
  1944  00280A  2EE8               	decfsz	wreg,f,c
  1945  00280C  D7FD               	bra	u577
  1946  00280E                     
  1947                           ;LCD.c: 142:  aux = PORTD;
  1948  00280E  0061 F344  F501    	movff	1233,LEER_LCD@aux	;volatile
  1949  002814                     
  1950                           ;LCD.c: 143:  LATDbits.LATD2 = 0;
  1951  002814  94C1               	bcf	193,2,c	;volatile
  1952  002816                     
  1953                           ;LCD.c: 144:         _delay(1200);
  1954  002816  0EF0               	movlw	240
  1955  002818                     u587:
  1956  002818  D000               	nop2	
  1957  00281A  2EE8               	decfsz	wreg,f,c
  1958  00281C  D7FD               	bra	u587
  1959  00281E                     
  1960                           ;LCD.c: 146:  LATDbits.LATD2 = 1;
  1961  00281E  84C1               	bsf	193,2,c	;volatile
  1962  002820                     
  1963                           ;LCD.c: 147:         _delay(1200);
  1964  002820  0EF0               	movlw	240
  1965  002822                     u597:
  1966  002822  D000               	nop2	
  1967  002824  2EE8               	decfsz	wreg,f,c
  1968  002826  D7FD               	bra	u597
  1969  002828                     
  1970                           ;LCD.c: 149:  LATDbits.LATD2 = 0;
  1971  002828  94C1               	bcf	193,2,c	;volatile
  1972  00282A                     l946:
  1973                           
  1974                           ;LCD.c: 150:  aux = aux & 0x80;
  1975  00282A  5001               	movf	LEER_LCD@aux^(0+1280),w,c
  1976  00282C  0B80               	andlw	128
  1977  00282E  6E01               	movwf	LEER_LCD@aux^(0+1280),c
  1978                           
  1979                           ;LCD.c: 151:  while(aux == 0x80)
  1980  002830  EF2F  F014         	goto	l960
  1981  002834                     l75:
  1982                           
  1983                           ;LCD.c: 152:         {;LCD.c: 153:             LATDbits.LATD2 = 1;
  1984  002834  84C1               	bsf	193,2,c	;volatile
  1985  002836                     
  1986                           ;LCD.c: 154:             _delay(1200);
  1987  002836  0EF0               	movlw	240
  1988  002838                     u607:
  1989  002838  D000               	nop2	
  1990  00283A  2EE8               	decfsz	wreg,f,c
  1991  00283C  D7FD               	bra	u607
  1992  00283E                     
  1993                           ;LCD.c: 155:             aux = PORTD;
  1994  00283E  0061 F344  F501    	movff	1233,LEER_LCD@aux	;volatile
  1995  002844                     
  1996                           ;LCD.c: 156:             LATDbits.LATD2 = 0;
  1997  002844  94C1               	bcf	193,2,c	;volatile
  1998                           
  1999                           ;LCD.c: 157:             _delay(1200);
  2000  002846  0EF0               	movlw	240
  2001  002848                     u617:
  2002  002848  D000               	nop2	
  2003  00284A  2EE8               	decfsz	wreg,f,c
  2004  00284C  D7FD               	bra	u617
  2005  00284E                     
  2006                           ;LCD.c: 158:             LATDbits.LATD2 = 1;
  2007  00284E  84C1               	bsf	193,2,c	;volatile
  2008                           
  2009                           ;LCD.c: 159:             _delay(1200);
  2010  002850  0EF0               	movlw	240
  2011  002852                     u627:
  2012  002852  D000               	nop2	
  2013  002854  2EE8               	decfsz	wreg,f,c
  2014  002856  D7FD               	bra	u627
  2015  002858                     
  2016                           ;LCD.c: 160:             LATDbits.LATD2 = 0;
  2017  002858  94C1               	bcf	193,2,c	;volatile
  2018  00285A  EF15  F014         	goto	l946
  2019  00285E                     l960:
  2020                           
  2021                           ;LCD.c: 151:  while(aux == 0x80)
  2022  00285E  0E80               	movlw	128
  2023  002860  1801               	xorwf	LEER_LCD@aux^(0+1280),w,c
  2024  002862  B4D8               	btfsc	status,2,c
  2025  002864  EF36  F014         	goto	u11
  2026  002868  EF38  F014         	goto	u10
  2027  00286C                     u11:
  2028  00286C  EF1A  F014         	goto	l75
  2029  002870                     u10:
  2030  002870  0012               	return		;funcret
  2031  002872                     __end_of_LEER_LCD:
  2032                           	callstack 0
  2033                           
  2034 ;; *************** function _ENVIA_NIBBLE *****************
  2035 ;; Defined at:
  2036 ;;		line 105 in file "LCD.c"
  2037 ;; Parameters:    Size  Location     Type
  2038 ;;  dato            1    wreg     unsigned char 
  2039 ;; Auto vars:     Size  Location     Type
  2040 ;;  dato            1    0[COMRAM] unsigned char 
  2041 ;; Return value:  Size  Location     Type
  2042 ;;                  1    wreg      void 
  2043 ;; Registers used:
  2044 ;;		wreg, status,2, status,0
  2045 ;; Tracked objects:
  2046 ;;		On entry : 0/0
  2047 ;;		On exit  : 0/0
  2048 ;;		Unchanged: 0/0
  2049 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2050 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2051 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2052 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2053 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2054 ;;Total ram usage:        1 bytes
  2055 ;; Hardware stack levels used: 1
  2056 ;; Hardware stack levels required when called: 1
  2057 ;; This function calls:
  2058 ;;		Nothing
  2059 ;; This function is called by:
  2060 ;;		_ENVIA_CHAR
  2061 ;;		_LCD_CONFIG
  2062 ;;		_ENVIA_LCD_CMD
  2063 ;; This function uses a non-reentrant model
  2064 ;;
  2065                           
  2066                           	psect	text17
  2067  002BBC                     __ptext17:
  2068                           	callstack 0
  2069  002BBC                     _ENVIA_NIBBLE:
  2070                           	callstack 123
  2071                           
  2072                           ;incstack = 0
  2073                           ;ENVIA_NIBBLE@dato stored from wreg
  2074  002BBC  6E01               	movwf	ENVIA_NIBBLE@dato^(0+1280),c
  2075  002BBE                     
  2076                           ;LCD.c: 105: void ENVIA_NIBBLE(unsigned char dato);LCD.c: 106: {;LCD.c: 107:  LATD &= 0x
      +                          0F;
  2077  002BBE  0E0F               	movlw	15
  2078  002BC0  16C1               	andwf	193,f,c	;volatile
  2079                           
  2080                           ;LCD.c: 108:  dato &= 0xF0;
  2081  002BC2  0EF0               	movlw	240
  2082  002BC4  1601               	andwf	ENVIA_NIBBLE@dato^(0+1280),f,c
  2083                           
  2084                           ;LCD.c: 109:  LATD|= dato;
  2085  002BC6  5001               	movf	ENVIA_NIBBLE@dato^(0+1280),w,c	;volatile
  2086  002BC8  12C1               	iorwf	193,f,c	;volatile
  2087  002BCA                     
  2088                           ;LCD.c: 110:  LATDbits.LATD2 = 1;
  2089  002BCA  84C1               	bsf	193,2,c	;volatile
  2090  002BCC                     
  2091                           ;LCD.c: 112:         _delay(1200);
  2092  002BCC  0EF0               	movlw	240
  2093  002BCE                     u637:
  2094  002BCE  D000               	nop2	
  2095  002BD0  2EE8               	decfsz	wreg,f,c
  2096  002BD2  D7FD               	bra	u637
  2097  002BD4                     
  2098                           ;LCD.c: 113:  LATDbits.LATD2 = 0;
  2099  002BD4  94C1               	bcf	193,2,c	;volatile
  2100  002BD6  0012               	return		;funcret
  2101  002BD8                     __end_of_ENVIA_NIBBLE:
  2102                           	callstack 0
  2103                           
  2104 ;; *************** function _INT0_ISR *****************
  2105 ;; Defined at:
  2106 ;;		line 109 in file "maicode2.c"
  2107 ;; Parameters:    Size  Location     Type
  2108 ;;		None
  2109 ;; Auto vars:     Size  Location     Type
  2110 ;;		None
  2111 ;; Return value:  Size  Location     Type
  2112 ;;                  1    wreg      void 
  2113 ;; Registers used:
  2114 ;;		wreg, status,2, status,0
  2115 ;; Tracked objects:
  2116 ;;		On entry : 0/0
  2117 ;;		On exit  : 0/0
  2118 ;;		Unchanged: 0/0
  2119 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2120 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2121 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2122 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2123 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2124 ;;Total ram usage:        0 bytes
  2125 ;; Hardware stack levels used: 1
  2126 ;; This function calls:
  2127 ;;		Nothing
  2128 ;; This function is called by:
  2129 ;;		Interrupt level 2
  2130 ;; This function uses a non-reentrant model
  2131 ;;
  2132                           
  2133                           	psect	text18
  2134  002B7C                     __ptext18:
  2135                           	callstack 0
  2136  002B7C                     _INT0_ISR:
  2137                           	callstack 122
  2138  002B7C                     
  2139                           ;maicode2.c: 110:     PIR1bits.INT0IF = 0;
  2140  002B7C  90AF               	bcf	175,0,c	;volatile
  2141  002B7E                     
  2142                           ;maicode2.c: 111:     if(horas == 23){
  2143  002B7E  0E17               	movlw	23
  2144  002B80  1818               	xorwf	_horas^(0+1280),w,c
  2145  002B82  A4D8               	btfss	status,2,c
  2146  002B84  EFC6  F015         	goto	i2u27_41
  2147  002B88  EFC8  F015         	goto	i2u27_40
  2148  002B8C                     i2u27_41:
  2149  002B8C  EFCC  F015         	goto	i2l1302
  2150  002B90                     i2u27_40:
  2151  002B90                     
  2152                           ;maicode2.c: 112:         horas = 0;
  2153  002B90  0E00               	movlw	0
  2154  002B92  6E18               	movwf	_horas^(0+1280),c
  2155                           
  2156                           ;maicode2.c: 113:     }
  2157  002B94  EFCD  F015         	goto	i2l212
  2158  002B98                     i2l1302:
  2159                           
  2160                           ;maicode2.c: 115:         horas++;
  2161  002B98  2A18               	incf	_horas^(0+1280),f,c
  2162  002B9A                     i2l212:
  2163  002B9A  0011               	retfie		f
  2164  002B9C                     __end_of_INT0_ISR:
  2165                           	callstack 0
  2166                           
  2167 ;; *************** function _INT1_ISR *****************
  2168 ;; Defined at:
  2169 ;;		line 119 in file "maicode2.c"
  2170 ;; Parameters:    Size  Location     Type
  2171 ;;		None
  2172 ;; Auto vars:     Size  Location     Type
  2173 ;;		None
  2174 ;; Return value:  Size  Location     Type
  2175 ;;                  1    wreg      void 
  2176 ;; Registers used:
  2177 ;;		wreg, status,2, status,0
  2178 ;; Tracked objects:
  2179 ;;		On entry : 0/0
  2180 ;;		On exit  : 0/0
  2181 ;;		Unchanged: 0/0
  2182 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2183 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2184 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2185 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2186 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2187 ;;Total ram usage:        0 bytes
  2188 ;; Hardware stack levels used: 1
  2189 ;; This function calls:
  2190 ;;		Nothing
  2191 ;; This function is called by:
  2192 ;;		Interrupt level 2
  2193 ;; This function uses a non-reentrant model
  2194 ;;
  2195                           
  2196                           	psect	text19
  2197  002B9C                     __ptext19:
  2198                           	callstack 0
  2199  002B9C                     _INT1_ISR:
  2200                           	callstack 122
  2201  002B9C                     
  2202                           ;maicode2.c: 120:     PIR6bits.INT1IF = 0;
  2203  002B9C  90B4               	bcf	180,0,c	;volatile
  2204  002B9E                     
  2205                           ;maicode2.c: 121:     if(minutos == 59){
  2206  002B9E  0E3B               	movlw	59
  2207  002BA0  1817               	xorwf	_minutos^(0+1280),w,c
  2208  002BA2  A4D8               	btfss	status,2,c
  2209  002BA4  EFD6  F015         	goto	i2u28_41
  2210  002BA8  EFD8  F015         	goto	i2u28_40
  2211  002BAC                     i2u28_41:
  2212  002BAC  EFDC  F015         	goto	i2l1310
  2213  002BB0                     i2u28_40:
  2214  002BB0                     
  2215                           ;maicode2.c: 122:         minutos = 0;
  2216  002BB0  0E00               	movlw	0
  2217  002BB2  6E17               	movwf	_minutos^(0+1280),c
  2218                           
  2219                           ;maicode2.c: 123:     }
  2220  002BB4  EFDD  F015         	goto	i2l219
  2221  002BB8                     i2l1310:
  2222                           
  2223                           ;maicode2.c: 125:         minutos++;
  2224  002BB8  2A17               	incf	_minutos^(0+1280),f,c
  2225  002BBA                     i2l219:
  2226  002BBA  0011               	retfie		f
  2227  002BBC                     __end_of_INT1_ISR:
  2228                           	callstack 0
  2229                           
  2230 ;; *************** function _INT2_ISR *****************
  2231 ;; Defined at:
  2232 ;;		line 129 in file "maicode2.c"
  2233 ;; Parameters:    Size  Location     Type
  2234 ;;		None
  2235 ;; Auto vars:     Size  Location     Type
  2236 ;;		None
  2237 ;; Return value:  Size  Location     Type
  2238 ;;                  1    wreg      void 
  2239 ;; Registers used:
  2240 ;;		wreg, status,2
  2241 ;; Tracked objects:
  2242 ;;		On entry : 0/0
  2243 ;;		On exit  : 0/0
  2244 ;;		Unchanged: 0/0
  2245 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2246 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2247 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2248 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2249 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2250 ;;Total ram usage:        0 bytes
  2251 ;; Hardware stack levels used: 1
  2252 ;; This function calls:
  2253 ;;		Nothing
  2254 ;; This function is called by:
  2255 ;;		Interrupt level 2
  2256 ;; This function uses a non-reentrant model
  2257 ;;
  2258                           
  2259                           	psect	text20
  2260  002BFC                     __ptext20:
  2261                           	callstack 0
  2262  002BFC                     _INT2_ISR:
  2263                           	callstack 122
  2264  002BFC                     
  2265                           ;maicode2.c: 130:     PIR10bits.INT2IF = 0;
  2266  002BFC  90B8               	bcf	184,0,c	;volatile
  2267  002BFE                     
  2268                           ;maicode2.c: 131:     segundos = 0;
  2269  002BFE  0E00               	movlw	0
  2270  002C00  6E16               	movwf	_segundos^(0+1280),c
  2271  002C02  0011               	retfie		f
  2272  002C04                     __end_of_INT2_ISR:
  2273                           	callstack 0
  2274                           
  2275 ;; *************** function _CCP1_ISR *****************
  2276 ;; Defined at:
  2277 ;;		line 134 in file "maicode2.c"
  2278 ;; Parameters:    Size  Location     Type
  2279 ;;		None
  2280 ;; Auto vars:     Size  Location     Type
  2281 ;;		None
  2282 ;; Return value:  Size  Location     Type
  2283 ;;                  1    wreg      void 
  2284 ;; Registers used:
  2285 ;;		wreg, status,2, status,0
  2286 ;; Tracked objects:
  2287 ;;		On entry : 0/0
  2288 ;;		On exit  : 0/0
  2289 ;;		Unchanged: 0/0
  2290 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2291 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2292 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2293 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2294 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2295 ;;Total ram usage:        0 bytes
  2296 ;; Hardware stack levels used: 1
  2297 ;; This function calls:
  2298 ;;		Nothing
  2299 ;; This function is called by:
  2300 ;;		Interrupt level 2
  2301 ;; This function uses a non-reentrant model
  2302 ;;
  2303                           
  2304                           	psect	text21
  2305  002874                     __ptext21:
  2306                           	callstack 0
  2307  002874                     _CCP1_ISR:
  2308                           	callstack 122
  2309  002874                     
  2310                           ;maicode2.c: 135:     PIR3bits.CCP1IF = 0;
  2311  002874  9CB1               	bcf	177,6,c	;volatile
  2312  002876                     
  2313                           ;maicode2.c: 136:     if(ticks == 99){
  2314  002876  0E63               	movlw	99
  2315  002878  1812               	xorwf	_ticks^(0+1280),w,c
  2316  00287A  A4D8               	btfss	status,2,c
  2317  00287C  EF42  F014         	goto	i2u29_41
  2318  002880  EF44  F014         	goto	i2u29_40
  2319  002884                     i2u29_41:
  2320  002884  EF72  F014         	goto	i2l1340
  2321  002888                     i2u29_40:
  2322  002888                     
  2323                           ;maicode2.c: 137:         ticks = 0;
  2324  002888  0E00               	movlw	0
  2325  00288A  6E12               	movwf	_ticks^(0+1280),c
  2326  00288C                     
  2327                           ;maicode2.c: 138:         if(segundos == 59){
  2328  00288C  0E3B               	movlw	59
  2329  00288E  1816               	xorwf	_segundos^(0+1280),w,c
  2330  002890  A4D8               	btfss	status,2,c
  2331  002892  EF4D  F014         	goto	i2u30_41
  2332  002896  EF4F  F014         	goto	i2u30_40
  2333  00289A                     i2u30_41:
  2334  00289A  EF6F  F014         	goto	i2l1338
  2335  00289E                     i2u30_40:
  2336  00289E                     
  2337                           ;maicode2.c: 139:             segundos = 0;
  2338  00289E  0E00               	movlw	0
  2339  0028A0  6E16               	movwf	_segundos^(0+1280),c
  2340  0028A2                     
  2341                           ;maicode2.c: 140:             if(minutos == 59){
  2342  0028A2  0E3B               	movlw	59
  2343  0028A4  1817               	xorwf	_minutos^(0+1280),w,c
  2344  0028A6  A4D8               	btfss	status,2,c
  2345  0028A8  EF58  F014         	goto	i2u31_41
  2346  0028AC  EF5A  F014         	goto	i2u31_40
  2347  0028B0                     i2u31_41:
  2348  0028B0  EF6C  F014         	goto	i2l1336
  2349  0028B4                     i2u31_40:
  2350  0028B4                     
  2351                           ;maicode2.c: 141:                 minutos = 0;
  2352  0028B4  0E00               	movlw	0
  2353  0028B6  6E17               	movwf	_minutos^(0+1280),c
  2354  0028B8                     
  2355                           ;maicode2.c: 142:                 if(horas == 23){
  2356  0028B8  0E17               	movlw	23
  2357  0028BA  1818               	xorwf	_horas^(0+1280),w,c
  2358  0028BC  A4D8               	btfss	status,2,c
  2359  0028BE  EF63  F014         	goto	i2u32_41
  2360  0028C2  EF65  F014         	goto	i2u32_40
  2361  0028C6                     i2u32_41:
  2362  0028C6  EF69  F014         	goto	i2l1334
  2363  0028CA                     i2u32_40:
  2364  0028CA                     
  2365                           ;maicode2.c: 143:                     horas = 0;
  2366  0028CA  0E00               	movlw	0
  2367  0028CC  6E18               	movwf	_horas^(0+1280),c
  2368                           
  2369                           ;maicode2.c: 144:                 }
  2370  0028CE  EF73  F014         	goto	i2l237
  2371  0028D2                     i2l1334:
  2372                           
  2373                           ;maicode2.c: 146:                     horas++;
  2374  0028D2  2A18               	incf	_horas^(0+1280),f,c
  2375  0028D4  EF73  F014         	goto	i2l237
  2376  0028D8                     i2l1336:
  2377                           
  2378                           ;maicode2.c: 150:                 minutos++;
  2379  0028D8  2A17               	incf	_minutos^(0+1280),f,c
  2380  0028DA  EF73  F014         	goto	i2l237
  2381  0028DE                     i2l1338:
  2382                           
  2383                           ;maicode2.c: 154:             segundos++;
  2384  0028DE  2A16               	incf	_segundos^(0+1280),f,c
  2385  0028E0  EF73  F014         	goto	i2l237
  2386  0028E4                     i2l1340:
  2387                           
  2388                           ;maicode2.c: 158:         ticks++;
  2389  0028E4  2A12               	incf	_ticks^(0+1280),f,c
  2390  0028E6                     i2l237:
  2391  0028E6  0011               	retfie		f
  2392  0028E8                     __end_of_CCP1_ISR:
  2393                           	callstack 0
  2394                           
  2395 ;; *************** function _Other_ISR *****************
  2396 ;; Defined at:
  2397 ;;		line 162 in file "maicode2.c"
  2398 ;; Parameters:    Size  Location     Type
  2399 ;;		None
  2400 ;; Auto vars:     Size  Location     Type
  2401 ;;		None
  2402 ;; Return value:  Size  Location     Type
  2403 ;;                  1    wreg      void 
  2404 ;; Registers used:
  2405 ;;		None
  2406 ;; Tracked objects:
  2407 ;;		On entry : 0/0
  2408 ;;		On exit  : 0/0
  2409 ;;		Unchanged: 0/0
  2410 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2411 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2412 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2413 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2414 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2415 ;;Total ram usage:        0 bytes
  2416 ;; Hardware stack levels used: 1
  2417 ;; This function calls:
  2418 ;;		Nothing
  2419 ;; This function is called by:
  2420 ;;		Interrupt level 2
  2421 ;; This function uses a non-reentrant model
  2422 ;;
  2423                           
  2424                           	psect	text22
  2425  002C08                     __ptext22:
  2426                           	callstack 0
  2427  002C08                     _Other_ISR:
  2428                           	callstack 122
  2429  002C08  0011               	retfie		f
  2430  002C0A                     __end_of_Other_ISR:
  2431                           	callstack 0
  2432                           
  2433                           ;
  2434                           ; Interrupt Vector Table @ 0x8
  2435                           ;
  2436                           
  2437                           	psect	ivt0x8
  2438  000008                     __pivt0x8:
  2439                           	callstack 0
  2440  000008                     ivt0x8_base:
  2441                           	callstack 0
  2442                           
  2443                           ; Vector 0 : SWINT
  2444  000008  0B02               	dw	_Other_ISR shr (0+2)
  2445                           
  2446                           ; Vector 1 : HLVD
  2447  00000A  0B02               	dw	_Other_ISR shr (0+2)
  2448                           
  2449                           ; Vector 2 : OSF
  2450  00000C  0B02               	dw	_Other_ISR shr (0+2)
  2451                           
  2452                           ; Vector 3 : CSW
  2453  00000E  0B02               	dw	_Other_ISR shr (0+2)
  2454                           
  2455                           ; Vector 4 : Undefined
  2456  000010  0040               	dw	ivt0x8_undefint shr (0+2)
  2457                           
  2458                           ; Vector 5 : CLC1
  2459  000012  0B02               	dw	_Other_ISR shr (0+2)
  2460                           
  2461                           ; Vector 6 : Undefined
  2462  000014  0040               	dw	ivt0x8_undefint shr (0+2)
  2463                           
  2464                           ; Vector 7 : IOC
  2465  000016  0B02               	dw	_Other_ISR shr (0+2)
  2466                           
  2467                           ; Vector 8 : INT0
  2468  000018  0ADF               	dw	_INT0_ISR shr (0+2)
  2469                           
  2470                           ; Vector 9 : ZCD
  2471  00001A  0B02               	dw	_Other_ISR shr (0+2)
  2472                           
  2473                           ; Vector 10 : AD
  2474  00001C  0B02               	dw	_Other_ISR shr (0+2)
  2475                           
  2476                           ; Vector 11 : ACT
  2477  00001E  0B02               	dw	_Other_ISR shr (0+2)
  2478                           
  2479                           ; Vector 12 : CMP1
  2480  000020  0B02               	dw	_Other_ISR shr (0+2)
  2481                           
  2482                           ; Vector 13 : SMT1
  2483  000022  0B02               	dw	_Other_ISR shr (0+2)
  2484                           
  2485                           ; Vector 14 : SMT1PRA
  2486  000024  0B02               	dw	_Other_ISR shr (0+2)
  2487                           
  2488                           ; Vector 15 : SMT1PRW
  2489  000026  0B02               	dw	_Other_ISR shr (0+2)
  2490                           
  2491                           ; Vector 16 : ADT
  2492  000028  0B02               	dw	_Other_ISR shr (0+2)
  2493                           
  2494                           ; Vector 17 : Undefined
  2495  00002A  0040               	dw	ivt0x8_undefint shr (0+2)
  2496                           
  2497                           ; Vector 18 : Undefined
  2498  00002C  0040               	dw	ivt0x8_undefint shr (0+2)
  2499                           
  2500                           ; Vector 19 : Undefined
  2501  00002E  0040               	dw	ivt0x8_undefint shr (0+2)
  2502                           
  2503                           ; Vector 20 : DMA1SCNT
  2504  000030  0B02               	dw	_Other_ISR shr (0+2)
  2505                           
  2506                           ; Vector 21 : DMA1DCNT
  2507  000032  0B02               	dw	_Other_ISR shr (0+2)
  2508                           
  2509                           ; Vector 22 : DMA1OR
  2510  000034  0B02               	dw	_Other_ISR shr (0+2)
  2511                           
  2512                           ; Vector 23 : DMA1A
  2513  000036  0B02               	dw	_Other_ISR shr (0+2)
  2514                           
  2515                           ; Vector 24 : SPI1RX
  2516  000038  0B02               	dw	_Other_ISR shr (0+2)
  2517                           
  2518                           ; Vector 25 : SPI1TX
  2519  00003A  0B02               	dw	_Other_ISR shr (0+2)
  2520                           
  2521                           ; Vector 26 : SPI1
  2522  00003C  0B02               	dw	_Other_ISR shr (0+2)
  2523                           
  2524                           ; Vector 27 : TMR2
  2525  00003E  0B02               	dw	_Other_ISR shr (0+2)
  2526                           
  2527                           ; Vector 28 : TMR1
  2528  000040  0B02               	dw	_Other_ISR shr (0+2)
  2529                           
  2530                           ; Vector 29 : TMR1G
  2531  000042  0B02               	dw	_Other_ISR shr (0+2)
  2532                           
  2533                           ; Vector 30 : CCP1
  2534  000044  0A1D               	dw	_CCP1_ISR shr (0+2)
  2535                           
  2536                           ; Vector 31 : TMR0
  2537  000046  0B02               	dw	_Other_ISR shr (0+2)
  2538                           
  2539                           ; Vector 32 : U1RX
  2540  000048  0B02               	dw	_Other_ISR shr (0+2)
  2541                           
  2542                           ; Vector 33 : U1TX
  2543  00004A  0B02               	dw	_Other_ISR shr (0+2)
  2544                           
  2545                           ; Vector 34 : U1E
  2546  00004C  0B02               	dw	_Other_ISR shr (0+2)
  2547                           
  2548                           ; Vector 35 : U1
  2549  00004E  0B02               	dw	_Other_ISR shr (0+2)
  2550                           
  2551                           ; Vector 36 : Undefined
  2552  000050  0040               	dw	ivt0x8_undefint shr (0+2)
  2553                           
  2554                           ; Vector 37 : Undefined
  2555  000052  0040               	dw	ivt0x8_undefint shr (0+2)
  2556                           
  2557                           ; Vector 38 : PWM1PR
  2558  000054  0B02               	dw	_Other_ISR shr (0+2)
  2559                           
  2560                           ; Vector 39 : PWM1
  2561  000056  0B02               	dw	_Other_ISR shr (0+2)
  2562                           
  2563                           ; Vector 40 : SPI2RX
  2564  000058  0B02               	dw	_Other_ISR shr (0+2)
  2565                           
  2566                           ; Vector 41 : SPI2TX
  2567  00005A  0B02               	dw	_Other_ISR shr (0+2)
  2568                           
  2569                           ; Vector 42 : SPI2
  2570  00005C  0B02               	dw	_Other_ISR shr (0+2)
  2571                           
  2572                           ; Vector 43 : Undefined
  2573  00005E  0040               	dw	ivt0x8_undefint shr (0+2)
  2574                           
  2575                           ; Vector 44 : TMR3
  2576  000060  0B02               	dw	_Other_ISR shr (0+2)
  2577                           
  2578                           ; Vector 45 : TMR3G
  2579  000062  0B02               	dw	_Other_ISR shr (0+2)
  2580                           
  2581                           ; Vector 46 : PWM2PR
  2582  000064  0B02               	dw	_Other_ISR shr (0+2)
  2583                           
  2584                           ; Vector 47 : PWM2
  2585  000066  0B02               	dw	_Other_ISR shr (0+2)
  2586                           
  2587                           ; Vector 48 : INT1
  2588  000068  0AE7               	dw	_INT1_ISR shr (0+2)
  2589                           
  2590                           ; Vector 49 : CLC2
  2591  00006A  0B02               	dw	_Other_ISR shr (0+2)
  2592                           
  2593                           ; Vector 50 : CWG1
  2594  00006C  0B02               	dw	_Other_ISR shr (0+2)
  2595                           
  2596                           ; Vector 51 : NCO1
  2597  00006E  0B02               	dw	_Other_ISR shr (0+2)
  2598                           
  2599                           ; Vector 52 : DMA2SCNT
  2600  000070  0B02               	dw	_Other_ISR shr (0+2)
  2601                           
  2602                           ; Vector 53 : DMA2DCNT
  2603  000072  0B02               	dw	_Other_ISR shr (0+2)
  2604                           
  2605                           ; Vector 54 : DMA2OR
  2606  000074  0B02               	dw	_Other_ISR shr (0+2)
  2607                           
  2608                           ; Vector 55 : DMA2A
  2609  000076  0B02               	dw	_Other_ISR shr (0+2)
  2610                           
  2611                           ; Vector 56 : I2C1RX
  2612  000078  0B02               	dw	_Other_ISR shr (0+2)
  2613                           
  2614                           ; Vector 57 : I2C1TX
  2615  00007A  0B02               	dw	_Other_ISR shr (0+2)
  2616                           
  2617                           ; Vector 58 : I2C1
  2618  00007C  0B02               	dw	_Other_ISR shr (0+2)
  2619                           
  2620                           ; Vector 59 : I2C1E
  2621  00007E  0B02               	dw	_Other_ISR shr (0+2)
  2622                           
  2623                           ; Vector 60 : Undefined
  2624  000080  0040               	dw	ivt0x8_undefint shr (0+2)
  2625                           
  2626                           ; Vector 61 : CLC3
  2627  000082  0B02               	dw	_Other_ISR shr (0+2)
  2628                           
  2629                           ; Vector 62 : PWM3PR
  2630  000084  0B02               	dw	_Other_ISR shr (0+2)
  2631                           
  2632                           ; Vector 63 : PWM3
  2633  000086  0B02               	dw	_Other_ISR shr (0+2)
  2634                           
  2635                           ; Vector 64 : U2RX
  2636  000088  0B02               	dw	_Other_ISR shr (0+2)
  2637                           
  2638                           ; Vector 65 : U2TX
  2639  00008A  0B02               	dw	_Other_ISR shr (0+2)
  2640                           
  2641                           ; Vector 66 : U2E
  2642  00008C  0B02               	dw	_Other_ISR shr (0+2)
  2643                           
  2644                           ; Vector 67 : U2
  2645  00008E  0B02               	dw	_Other_ISR shr (0+2)
  2646                           
  2647                           ; Vector 68 : TMR5
  2648  000090  0B02               	dw	_Other_ISR shr (0+2)
  2649                           
  2650                           ; Vector 69 : TMR5G
  2651  000092  0B02               	dw	_Other_ISR shr (0+2)
  2652                           
  2653                           ; Vector 70 : CCP2
  2654  000094  0B02               	dw	_Other_ISR shr (0+2)
  2655                           
  2656                           ; Vector 71 : SCAN
  2657  000096  0B02               	dw	_Other_ISR shr (0+2)
  2658                           
  2659                           ; Vector 72 : U3RX
  2660  000098  0B02               	dw	_Other_ISR shr (0+2)
  2661                           
  2662                           ; Vector 73 : U3TX
  2663  00009A  0B02               	dw	_Other_ISR shr (0+2)
  2664                           
  2665                           ; Vector 74 : U3E
  2666  00009C  0B02               	dw	_Other_ISR shr (0+2)
  2667                           
  2668                           ; Vector 75 : U3
  2669  00009E  0B02               	dw	_Other_ISR shr (0+2)
  2670                           
  2671                           ; Vector 76 : Undefined
  2672  0000A0  0040               	dw	ivt0x8_undefint shr (0+2)
  2673                           
  2674                           ; Vector 77 : CLC4
  2675  0000A2  0B02               	dw	_Other_ISR shr (0+2)
  2676                           
  2677                           ; Vector 78 : Undefined
  2678  0000A4  0040               	dw	ivt0x8_undefint shr (0+2)
  2679                           
  2680                           ; Vector 79 : Undefined
  2681  0000A6  0040               	dw	ivt0x8_undefint shr (0+2)
  2682                           
  2683                           ; Vector 80 : INT2
  2684  0000A8  0AFF               	dw	_INT2_ISR shr (0+2)
  2685                           
  2686                           ; Vector 81 : CLC5
  2687  0000AA  0B02               	dw	_Other_ISR shr (0+2)
  2688                           
  2689                           ; Vector 82 : CWG2
  2690  0000AC  0B02               	dw	_Other_ISR shr (0+2)
  2691                           
  2692                           ; Vector 83 : NCO2
  2693  0000AE  0B02               	dw	_Other_ISR shr (0+2)
  2694                           
  2695                           ; Vector 84 : DMA3SCNT
  2696  0000B0  0B02               	dw	_Other_ISR shr (0+2)
  2697                           
  2698                           ; Vector 85 : DMA3DCNT
  2699  0000B2  0B02               	dw	_Other_ISR shr (0+2)
  2700                           
  2701                           ; Vector 86 : DMA3OR
  2702  0000B4  0B02               	dw	_Other_ISR shr (0+2)
  2703                           
  2704                           ; Vector 87 : DMA3A
  2705  0000B6  0B02               	dw	_Other_ISR shr (0+2)
  2706                           
  2707                           ; Vector 88 : CCP3
  2708  0000B8  0B02               	dw	_Other_ISR shr (0+2)
  2709                           
  2710                           ; Vector 89 : CLC6
  2711  0000BA  0B02               	dw	_Other_ISR shr (0+2)
  2712                           
  2713                           ; Vector 90 : CWG3
  2714  0000BC  0B02               	dw	_Other_ISR shr (0+2)
  2715                           
  2716                           ; Vector 91 : TMR4
  2717  0000BE  0B02               	dw	_Other_ISR shr (0+2)
  2718                           
  2719                           ; Vector 92 : DMA4SCNT
  2720  0000C0  0B02               	dw	_Other_ISR shr (0+2)
  2721                           
  2722                           ; Vector 93 : DMA4DCNT
  2723  0000C2  0B02               	dw	_Other_ISR shr (0+2)
  2724                           
  2725                           ; Vector 94 : DMA4OR
  2726  0000C4  0B02               	dw	_Other_ISR shr (0+2)
  2727                           
  2728                           ; Vector 95 : DMA4A
  2729  0000C6  0B02               	dw	_Other_ISR shr (0+2)
  2730                           
  2731                           ; Vector 96 : U4RX
  2732  0000C8  0B02               	dw	_Other_ISR shr (0+2)
  2733                           
  2734                           ; Vector 97 : U4TX
  2735  0000CA  0B02               	dw	_Other_ISR shr (0+2)
  2736                           
  2737                           ; Vector 98 : U4E
  2738  0000CC  0B02               	dw	_Other_ISR shr (0+2)
  2739                           
  2740                           ; Vector 99 : U4
  2741  0000CE  0B02               	dw	_Other_ISR shr (0+2)
  2742                           
  2743                           ; Vector 100 : DMA5SCNT
  2744  0000D0  0B02               	dw	_Other_ISR shr (0+2)
  2745                           
  2746                           ; Vector 101 : DMA5DCNT
  2747  0000D2  0B02               	dw	_Other_ISR shr (0+2)
  2748                           
  2749                           ; Vector 102 : DMA5OR
  2750  0000D4  0B02               	dw	_Other_ISR shr (0+2)
  2751                           
  2752                           ; Vector 103 : DMA5A
  2753  0000D6  0B02               	dw	_Other_ISR shr (0+2)
  2754                           
  2755                           ; Vector 104 : U5RX
  2756  0000D8  0B02               	dw	_Other_ISR shr (0+2)
  2757                           
  2758                           ; Vector 105 : U5TX
  2759  0000DA  0B02               	dw	_Other_ISR shr (0+2)
  2760                           
  2761                           ; Vector 106 : U5E
  2762  0000DC  0B02               	dw	_Other_ISR shr (0+2)
  2763                           
  2764                           ; Vector 107 : U5
  2765  0000DE  0B02               	dw	_Other_ISR shr (0+2)
  2766                           
  2767                           ; Vector 108 : DMA6SCNT
  2768  0000E0  0B02               	dw	_Other_ISR shr (0+2)
  2769                           
  2770                           ; Vector 109 : DMA6DCNT
  2771  0000E2  0B02               	dw	_Other_ISR shr (0+2)
  2772                           
  2773                           ; Vector 110 : DMA6OR
  2774  0000E4  0B02               	dw	_Other_ISR shr (0+2)
  2775                           
  2776                           ; Vector 111 : DMA6A
  2777  0000E6  0B02               	dw	_Other_ISR shr (0+2)
  2778                           
  2779                           ; Vector 112 : Undefined
  2780  0000E8  0040               	dw	ivt0x8_undefint shr (0+2)
  2781                           
  2782                           ; Vector 113 : CLC7
  2783  0000EA  0B02               	dw	_Other_ISR shr (0+2)
  2784                           
  2785                           ; Vector 114 : CMP2
  2786  0000EC  0B02               	dw	_Other_ISR shr (0+2)
  2787                           
  2788                           ; Vector 115 : NCO3
  2789  0000EE  0B02               	dw	_Other_ISR shr (0+2)
  2790                           
  2791                           ; Vector 116 : Undefined
  2792  0000F0  0040               	dw	ivt0x8_undefint shr (0+2)
  2793                           
  2794                           ; Vector 117 : Undefined
  2795  0000F2  0040               	dw	ivt0x8_undefint shr (0+2)
  2796                           
  2797                           ; Vector 118 : Undefined
  2798  0000F4  0040               	dw	ivt0x8_undefint shr (0+2)
  2799                           
  2800                           ; Vector 119 : Undefined
  2801  0000F6  0040               	dw	ivt0x8_undefint shr (0+2)
  2802                           
  2803                           ; Vector 120 : NVM
  2804  0000F8  0B02               	dw	_Other_ISR shr (0+2)
  2805                           
  2806                           ; Vector 121 : CLC8
  2807  0000FA  0B02               	dw	_Other_ISR shr (0+2)
  2808                           
  2809                           ; Vector 122 : CRC
  2810  0000FC  0B02               	dw	_Other_ISR shr (0+2)
  2811                           
  2812                           ; Vector 123 : TMR6
  2813  0000FE  0B02               	dw	_Other_ISR shr (0+2)
  2814  000100                     ivt0x8_undefint:
  2815                           	callstack 0
  2816  000100  00FF               	reset	
  2817                           
  2818                           	psect	rparam
  2819  0000                     
  2820                           	psect	idloc
  2821                           
  2822                           ;Config register IDLOC0 @ 0x200000
  2823                           ;	unspecified, using default values
  2824  200000                     	org	2097152
  2825  200000  0FFF               	dw	4095
  2826                           
  2827                           ;Config register IDLOC1 @ 0x200002
  2828                           ;	unspecified, using default values
  2829  200002                     	org	2097154
  2830  200002  0FFF               	dw	4095
  2831                           
  2832                           ;Config register IDLOC2 @ 0x200004
  2833                           ;	unspecified, using default values
  2834  200004                     	org	2097156
  2835  200004  0FFF               	dw	4095
  2836                           
  2837                           ;Config register IDLOC3 @ 0x200006
  2838                           ;	unspecified, using default values
  2839  200006                     	org	2097158
  2840  200006  0FFF               	dw	4095
  2841                           
  2842                           ;Config register IDLOC4 @ 0x200008
  2843                           ;	unspecified, using default values
  2844  200008                     	org	2097160
  2845  200008  0FFF               	dw	4095
  2846                           
  2847                           ;Config register IDLOC5 @ 0x20000A
  2848                           ;	unspecified, using default values
  2849  20000A                     	org	2097162
  2850  20000A  0FFF               	dw	4095
  2851                           
  2852                           ;Config register IDLOC6 @ 0x20000C
  2853                           ;	unspecified, using default values
  2854  20000C                     	org	2097164
  2855  20000C  0FFF               	dw	4095
  2856                           
  2857                           ;Config register IDLOC7 @ 0x20000E
  2858                           ;	unspecified, using default values
  2859  20000E                     	org	2097166
  2860  20000E  0FFF               	dw	4095
  2861                           
  2862                           ;Config register IDLOC8 @ 0x200010
  2863                           ;	unspecified, using default values
  2864  200010                     	org	2097168
  2865  200010  0FFF               	dw	4095
  2866                           
  2867                           ;Config register IDLOC9 @ 0x200012
  2868                           ;	unspecified, using default values
  2869  200012                     	org	2097170
  2870  200012  0FFF               	dw	4095
  2871                           
  2872                           ;Config register IDLOC10 @ 0x200014
  2873                           ;	unspecified, using default values
  2874  200014                     	org	2097172
  2875  200014  0FFF               	dw	4095
  2876                           
  2877                           ;Config register IDLOC11 @ 0x200016
  2878                           ;	unspecified, using default values
  2879  200016                     	org	2097174
  2880  200016  0FFF               	dw	4095
  2881                           
  2882                           ;Config register IDLOC12 @ 0x200018
  2883                           ;	unspecified, using default values
  2884  200018                     	org	2097176
  2885  200018  0FFF               	dw	4095
  2886                           
  2887                           ;Config register IDLOC13 @ 0x20001A
  2888                           ;	unspecified, using default values
  2889  20001A                     	org	2097178
  2890  20001A  0FFF               	dw	4095
  2891                           
  2892                           ;Config register IDLOC14 @ 0x20001C
  2893                           ;	unspecified, using default values
  2894  20001C                     	org	2097180
  2895  20001C  0FFF               	dw	4095
  2896                           
  2897                           ;Config register IDLOC15 @ 0x20001E
  2898                           ;	unspecified, using default values
  2899  20001E                     	org	2097182
  2900  20001E  0FFF               	dw	4095
  2901                           
  2902                           ;Config register IDLOC16 @ 0x200020
  2903                           ;	unspecified, using default values
  2904  200020                     	org	2097184
  2905  200020  0FFF               	dw	4095
  2906                           
  2907                           ;Config register IDLOC17 @ 0x200022
  2908                           ;	unspecified, using default values
  2909  200022                     	org	2097186
  2910  200022  0FFF               	dw	4095
  2911                           
  2912                           ;Config register IDLOC18 @ 0x200024
  2913                           ;	unspecified, using default values
  2914  200024                     	org	2097188
  2915  200024  0FFF               	dw	4095
  2916                           
  2917                           ;Config register IDLOC19 @ 0x200026
  2918                           ;	unspecified, using default values
  2919  200026                     	org	2097190
  2920  200026  0FFF               	dw	4095
  2921                           
  2922                           ;Config register IDLOC20 @ 0x200028
  2923                           ;	unspecified, using default values
  2924  200028                     	org	2097192
  2925  200028  0FFF               	dw	4095
  2926                           
  2927                           ;Config register IDLOC21 @ 0x20002A
  2928                           ;	unspecified, using default values
  2929  20002A                     	org	2097194
  2930  20002A  0FFF               	dw	4095
  2931                           
  2932                           ;Config register IDLOC22 @ 0x20002C
  2933                           ;	unspecified, using default values
  2934  20002C                     	org	2097196
  2935  20002C  0FFF               	dw	4095
  2936                           
  2937                           ;Config register IDLOC23 @ 0x20002E
  2938                           ;	unspecified, using default values
  2939  20002E                     	org	2097198
  2940  20002E  0FFF               	dw	4095
  2941                           
  2942                           ;Config register IDLOC24 @ 0x200030
  2943                           ;	unspecified, using default values
  2944  200030                     	org	2097200
  2945  200030  0FFF               	dw	4095
  2946                           
  2947                           ;Config register IDLOC25 @ 0x200032
  2948                           ;	unspecified, using default values
  2949  200032                     	org	2097202
  2950  200032  0FFF               	dw	4095
  2951                           
  2952                           ;Config register IDLOC26 @ 0x200034
  2953                           ;	unspecified, using default values
  2954  200034                     	org	2097204
  2955  200034  0FFF               	dw	4095
  2956                           
  2957                           ;Config register IDLOC27 @ 0x200036
  2958                           ;	unspecified, using default values
  2959  200036                     	org	2097206
  2960  200036  0FFF               	dw	4095
  2961                           
  2962                           ;Config register IDLOC28 @ 0x200038
  2963                           ;	unspecified, using default values
  2964  200038                     	org	2097208
  2965  200038  0FFF               	dw	4095
  2966                           
  2967                           ;Config register IDLOC29 @ 0x20003A
  2968                           ;	unspecified, using default values
  2969  20003A                     	org	2097210
  2970  20003A  0FFF               	dw	4095
  2971                           
  2972                           ;Config register IDLOC30 @ 0x20003C
  2973                           ;	unspecified, using default values
  2974  20003C                     	org	2097212
  2975  20003C  0FFF               	dw	4095
  2976                           
  2977                           ;Config register IDLOC31 @ 0x20003E
  2978                           ;	unspecified, using default values
  2979  20003E                     	org	2097214
  2980  20003E  0FFF               	dw	4095
  2981                           
  2982                           	psect	config
  2983                           
  2984                           ;Config register CONFIG1 @ 0x300000
  2985                           ;	External Oscillator Selection
  2986                           ;	FEXTOSC = ECH, EC (external clock) above 8 MHz
  2987                           ;	Reset Oscillator Selection
  2988                           ;	RSTOSC = EXTOSC, EXTOSC operating per FEXTOSC bits (device manufacturing default)
  2989  300000                     	org	3145728
  2990  300000  FF                 	db	255
  2991                           
  2992                           ;Config register CONFIG2 @ 0x300001
  2993                           ;	Clock out Enable bit
  2994                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
  2995                           ;	PRLOCKED One-Way Set Enable bit
  2996                           ;	PR1WAY = ON, PRLOCKED bit can be cleared and set only once
  2997                           ;	Clock Switch Enable bit
  2998                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
  2999                           ;	Fail-Safe Clock Monitor Enable bit
  3000                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
  3001  300001                     	org	3145729
  3002  300001  FF                 	db	255
  3003                           
  3004                           ;Config register CONFIG3 @ 0x300002
  3005                           ;	MCLR Enable bit
  3006                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
  3007                           ;	Power-up timer selection bits
  3008                           ;	PWRTS = PWRT_16, PWRT set at 16ms
  3009                           ;	Multi-vector enable bit
  3010                           ;	MVECEN = ON, Multi-vector enabled, Vector table used for interrupts
  3011                           ;	IVTLOCK bit One-way set enable bit
  3012                           ;	IVT1WAY = ON, IVTLOCKED bit can be cleared and set only once
  3013                           ;	Low Power BOR Enable bit
  3014                           ;	LPBOREN = OFF, Low-Power BOR disabled
  3015                           ;	Brown-out Reset Enable bits
  3016                           ;	BOREN = OFF, Brown-out Reset disabled
  3017  300002                     	org	3145730
  3018  300002  3B                 	db	59
  3019                           
  3020                           ;Config register CONFIG4 @ 0x300003
  3021                           ;	Brown-out Reset Voltage Selection bits
  3022                           ;	BORV = VBOR_1P9, Brown-out Reset Voltage (VBOR) set to 1.9V
  3023                           ;	ZCD Disable bit
  3024                           ;	ZCD = OFF, ZCD module is disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCD
      +                          CON
  3025                           ;	PPSLOCK bit One-Way Set Enable bit
  3026                           ;	PPS1WAY = ON, PPSLOCKED bit can be cleared and set only once; PPS registers remain loc
      +                          ked after one clear/set cycle
  3027                           ;	Stack Full/Underflow Reset Enable bit
  3028                           ;	STVREN = ON, Stack full/underflow will cause Reset
  3029                           ;	Low Voltage Programming Enable bit
  3030                           ;	LVP = OFF, HV on MCLR/VPP must be used for programming
  3031                           ;	Extended Instruction Set Enable bit
  3032                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
  3033  300003                     	org	3145731
  3034  300003  DF                 	db	223
  3035                           
  3036                           ;Config register CONFIG5 @ 0x300004
  3037                           ;	WDT Period selection bits
  3038                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  3039                           ;	WDT operating mode
  3040                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
  3041  300004                     	org	3145732
  3042  300004  9F                 	db	159
  3043                           
  3044                           ;Config register CONFIG6 @ 0x300005
  3045                           ;	WDT Window Select bits
  3046                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
  3047                           ;	WDT input clock selector
  3048                           ;	WDTCCS = SC, Software Control
  3049  300005                     	org	3145733
  3050  300005  FF                 	db	255
  3051                           
  3052                           ;Config register CONFIG7 @ 0x300006
  3053                           ;	Boot Block Size selection bits
  3054                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
  3055                           ;	Boot Block enable bit
  3056                           ;	BBEN = OFF, Boot block disabled
  3057                           ;	Storage Area Flash enable bit
  3058                           ;	SAFEN = OFF, SAF disabled
  3059                           ;	Background Debugger
  3060                           ;	DEBUG = OFF, Background Debugger disabled
  3061  300006                     	org	3145734
  3062  300006  FF                 	db	255
  3063                           
  3064                           ;Config register CONFIG8 @ 0x300007
  3065                           ;	Boot Block Write Protection bit
  3066                           ;	WRTB = OFF, Boot Block not Write protected
  3067                           ;	Configuration Register Write Protection bit
  3068                           ;	WRTC = OFF, Configuration registers not Write protected
  3069                           ;	Data EEPROM Write Protection bit
  3070                           ;	WRTD = OFF, Data EEPROM not Write protected
  3071                           ;	SAF Write protection bit
  3072                           ;	WRTSAF = OFF, SAF not Write Protected
  3073                           ;	Application Block write protection bit
  3074                           ;	WRTAPP = OFF, Application Block not write protected
  3075  300007                     	org	3145735
  3076  300007  FF                 	db	255
  3077                           
  3078                           ; Padding undefined space
  3079  300008                     	org	3145736
  3080  300008  FF                 	db	255
  3081                           
  3082                           ;Config register CONFIG10 @ 0x300009
  3083                           ;	PFM and Data EEPROM Code Protection bit
  3084                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
  3085  300009                     	org	3145737
  3086  300009  FF                 	db	255
  3087                           tosu	equ	0x4FF
  3088                           tosh	equ	0x4FE
  3089                           tosl	equ	0x4FD
  3090                           stkptr	equ	0x4FC
  3091                           pclatu	equ	0x4FB
  3092                           pclath	equ	0x4FA
  3093                           pcl	equ	0x4F9
  3094                           tblptru	equ	0x4F8
  3095                           tblptrh	equ	0x4F7
  3096                           tblptrl	equ	0x4F6
  3097                           tablat	equ	0x4F5
  3098                           prodh	equ	0x4F4
  3099                           prodl	equ	0x4F3
  3100                           indf0	equ	0x4EF
  3101                           postinc0	equ	0x4EE
  3102                           postdec0	equ	0x4ED
  3103                           preinc0	equ	0x4EC
  3104                           plusw0	equ	0x4EB
  3105                           fsr0h	equ	0x4EA
  3106                           fsr0l	equ	0x4E9
  3107                           wreg	equ	0x4E8
  3108                           indf1	equ	0x4E7
  3109                           postinc1	equ	0x4E6
  3110                           postdec1	equ	0x4E5
  3111                           preinc1	equ	0x4E4
  3112                           plusw1	equ	0x4E3
  3113                           fsr1h	equ	0x4E2
  3114                           fsr1l	equ	0x4E1
  3115                           bsr	equ	0x4E0
  3116                           indf2	equ	0x4DF
  3117                           postinc2	equ	0x4DE
  3118                           postdec2	equ	0x4DD
  3119                           preinc2	equ	0x4DC
  3120                           plusw2	equ	0x4DB
  3121                           fsr2h	equ	0x4DA
  3122                           fsr2l	equ	0x4D9
  3123                           status	equ	0x4D8

Data Sizes:
    Strings     35
    Constant    0
    Data        3
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     17      24
    BANK5           160      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0
    BANK32          256      0       0
    BANK33          256      0       0
    BANK34          256      0       0
    BANK35          256      0       0
    BANK36          256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 13
		 -> STR_3(CODE[13]), STR_2(CODE[11]), STR_1(CODE[11]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 13
		 -> STR_3(CODE[13]), STR_2(CODE[11]), STR_1(CODE[11]), 

    ESCRIBE_MENSAJE2@cadena	PTR const unsigned char  size(2) Largest target is 13
		 -> STR_3(CODE[13]), STR_2(CODE[11]), STR_1(CODE[11]), 


Critical Paths under _main in COMRAM

    _main->_convierte
    _lcd_config->_CURSOR_ONOFF
    _lcd_config->_LCD_CONFIG
    _LCD_CONFIG->_ENVIA_LCD_CMD
    _CURSOR_ONOFF->_ENVIA_LCD_CMD
    _CURSOR_HOME->_ENVIA_LCD_CMD
    _BORRAR_LCD->_ENVIA_LCD_CMD
    _convierte->___awdiv
    ___awdiv->___awmod
    _POS_CURSOR->_ENVIA_LCD_CMD
    _ENVIA_LCD_CMD->_ENVIA_NIBBLE
    _ENVIA_LCD_CMD->_LEER_LCD
    _ESCRIBE_MENSAJE2->_strlen
    _ENVIA_CHAR->_ENVIA_NIBBLE
    _ENVIA_CHAR->_LEER_LCD

Critical Paths under _INT0_ISR in COMRAM

    None.

Critical Paths under _INT1_ISR in COMRAM

    None.

Critical Paths under _INT2_ISR in COMRAM

    None.

Critical Paths under _CCP1_ISR in COMRAM

    None.

Critical Paths under _Other_ISR in COMRAM

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT0_ISR in BANK5

    None.

Critical Paths under _INT1_ISR in BANK5

    None.

Critical Paths under _INT2_ISR in BANK5

    None.

Critical Paths under _CCP1_ISR in BANK5

    None.

Critical Paths under _Other_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT0_ISR in BANK6

    None.

Critical Paths under _INT1_ISR in BANK6

    None.

Critical Paths under _INT2_ISR in BANK6

    None.

Critical Paths under _CCP1_ISR in BANK6

    None.

Critical Paths under _Other_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT0_ISR in BANK7

    None.

Critical Paths under _INT1_ISR in BANK7

    None.

Critical Paths under _INT2_ISR in BANK7

    None.

Critical Paths under _CCP1_ISR in BANK7

    None.

Critical Paths under _Other_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INT0_ISR in BANK8

    None.

Critical Paths under _INT1_ISR in BANK8

    None.

Critical Paths under _INT2_ISR in BANK8

    None.

Critical Paths under _CCP1_ISR in BANK8

    None.

Critical Paths under _Other_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INT0_ISR in BANK9

    None.

Critical Paths under _INT1_ISR in BANK9

    None.

Critical Paths under _INT2_ISR in BANK9

    None.

Critical Paths under _CCP1_ISR in BANK9

    None.

Critical Paths under _Other_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INT0_ISR in BANK10

    None.

Critical Paths under _INT1_ISR in BANK10

    None.

Critical Paths under _INT2_ISR in BANK10

    None.

Critical Paths under _CCP1_ISR in BANK10

    None.

Critical Paths under _Other_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INT0_ISR in BANK11

    None.

Critical Paths under _INT1_ISR in BANK11

    None.

Critical Paths under _INT2_ISR in BANK11

    None.

Critical Paths under _CCP1_ISR in BANK11

    None.

Critical Paths under _Other_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INT0_ISR in BANK12

    None.

Critical Paths under _INT1_ISR in BANK12

    None.

Critical Paths under _INT2_ISR in BANK12

    None.

Critical Paths under _CCP1_ISR in BANK12

    None.

Critical Paths under _Other_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INT0_ISR in BANK13

    None.

Critical Paths under _INT1_ISR in BANK13

    None.

Critical Paths under _INT2_ISR in BANK13

    None.

Critical Paths under _CCP1_ISR in BANK13

    None.

Critical Paths under _Other_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INT0_ISR in BANK14

    None.

Critical Paths under _INT1_ISR in BANK14

    None.

Critical Paths under _INT2_ISR in BANK14

    None.

Critical Paths under _CCP1_ISR in BANK14

    None.

Critical Paths under _Other_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INT0_ISR in BANK15

    None.

Critical Paths under _INT1_ISR in BANK15

    None.

Critical Paths under _INT2_ISR in BANK15

    None.

Critical Paths under _CCP1_ISR in BANK15

    None.

Critical Paths under _Other_ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INT0_ISR in BANK16

    None.

Critical Paths under _INT1_ISR in BANK16

    None.

Critical Paths under _INT2_ISR in BANK16

    None.

Critical Paths under _CCP1_ISR in BANK16

    None.

Critical Paths under _Other_ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INT0_ISR in BANK17

    None.

Critical Paths under _INT1_ISR in BANK17

    None.

Critical Paths under _INT2_ISR in BANK17

    None.

Critical Paths under _CCP1_ISR in BANK17

    None.

Critical Paths under _Other_ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INT0_ISR in BANK18

    None.

Critical Paths under _INT1_ISR in BANK18

    None.

Critical Paths under _INT2_ISR in BANK18

    None.

Critical Paths under _CCP1_ISR in BANK18

    None.

Critical Paths under _Other_ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INT0_ISR in BANK19

    None.

Critical Paths under _INT1_ISR in BANK19

    None.

Critical Paths under _INT2_ISR in BANK19

    None.

Critical Paths under _CCP1_ISR in BANK19

    None.

Critical Paths under _Other_ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INT0_ISR in BANK20

    None.

Critical Paths under _INT1_ISR in BANK20

    None.

Critical Paths under _INT2_ISR in BANK20

    None.

Critical Paths under _CCP1_ISR in BANK20

    None.

Critical Paths under _Other_ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INT0_ISR in BANK21

    None.

Critical Paths under _INT1_ISR in BANK21

    None.

Critical Paths under _INT2_ISR in BANK21

    None.

Critical Paths under _CCP1_ISR in BANK21

    None.

Critical Paths under _Other_ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INT0_ISR in BANK22

    None.

Critical Paths under _INT1_ISR in BANK22

    None.

Critical Paths under _INT2_ISR in BANK22

    None.

Critical Paths under _CCP1_ISR in BANK22

    None.

Critical Paths under _Other_ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INT0_ISR in BANK23

    None.

Critical Paths under _INT1_ISR in BANK23

    None.

Critical Paths under _INT2_ISR in BANK23

    None.

Critical Paths under _CCP1_ISR in BANK23

    None.

Critical Paths under _Other_ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INT0_ISR in BANK24

    None.

Critical Paths under _INT1_ISR in BANK24

    None.

Critical Paths under _INT2_ISR in BANK24

    None.

Critical Paths under _CCP1_ISR in BANK24

    None.

Critical Paths under _Other_ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INT0_ISR in BANK25

    None.

Critical Paths under _INT1_ISR in BANK25

    None.

Critical Paths under _INT2_ISR in BANK25

    None.

Critical Paths under _CCP1_ISR in BANK25

    None.

Critical Paths under _Other_ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _INT0_ISR in BANK26

    None.

Critical Paths under _INT1_ISR in BANK26

    None.

Critical Paths under _INT2_ISR in BANK26

    None.

Critical Paths under _CCP1_ISR in BANK26

    None.

Critical Paths under _Other_ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _INT0_ISR in BANK27

    None.

Critical Paths under _INT1_ISR in BANK27

    None.

Critical Paths under _INT2_ISR in BANK27

    None.

Critical Paths under _CCP1_ISR in BANK27

    None.

Critical Paths under _Other_ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _INT0_ISR in BANK28

    None.

Critical Paths under _INT1_ISR in BANK28

    None.

Critical Paths under _INT2_ISR in BANK28

    None.

Critical Paths under _CCP1_ISR in BANK28

    None.

Critical Paths under _Other_ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _INT0_ISR in BANK29

    None.

Critical Paths under _INT1_ISR in BANK29

    None.

Critical Paths under _INT2_ISR in BANK29

    None.

Critical Paths under _CCP1_ISR in BANK29

    None.

Critical Paths under _Other_ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _INT0_ISR in BANK30

    None.

Critical Paths under _INT1_ISR in BANK30

    None.

Critical Paths under _INT2_ISR in BANK30

    None.

Critical Paths under _CCP1_ISR in BANK30

    None.

Critical Paths under _Other_ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _INT0_ISR in BANK31

    None.

Critical Paths under _INT1_ISR in BANK31

    None.

Critical Paths under _INT2_ISR in BANK31

    None.

Critical Paths under _CCP1_ISR in BANK31

    None.

Critical Paths under _Other_ISR in BANK31

    None.

Critical Paths under _main in BANK32

    None.

Critical Paths under _INT0_ISR in BANK32

    None.

Critical Paths under _INT1_ISR in BANK32

    None.

Critical Paths under _INT2_ISR in BANK32

    None.

Critical Paths under _CCP1_ISR in BANK32

    None.

Critical Paths under _Other_ISR in BANK32

    None.

Critical Paths under _main in BANK33

    None.

Critical Paths under _INT0_ISR in BANK33

    None.

Critical Paths under _INT1_ISR in BANK33

    None.

Critical Paths under _INT2_ISR in BANK33

    None.

Critical Paths under _CCP1_ISR in BANK33

    None.

Critical Paths under _Other_ISR in BANK33

    None.

Critical Paths under _main in BANK34

    None.

Critical Paths under _INT0_ISR in BANK34

    None.

Critical Paths under _INT1_ISR in BANK34

    None.

Critical Paths under _INT2_ISR in BANK34

    None.

Critical Paths under _CCP1_ISR in BANK34

    None.

Critical Paths under _Other_ISR in BANK34

    None.

Critical Paths under _main in BANK35

    None.

Critical Paths under _INT0_ISR in BANK35

    None.

Critical Paths under _INT1_ISR in BANK35

    None.

Critical Paths under _INT2_ISR in BANK35

    None.

Critical Paths under _CCP1_ISR in BANK35

    None.

Critical Paths under _Other_ISR in BANK35

    None.

Critical Paths under _main in BANK36

    None.

Critical Paths under _INT0_ISR in BANK36

    None.

Critical Paths under _INT1_ISR in BANK36

    None.

Critical Paths under _INT2_ISR in BANK36

    None.

Critical Paths under _CCP1_ISR in BANK36

    None.

Critical Paths under _Other_ISR in BANK36

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    3175
                                             15 COMRAM     2     2      0
                         _BORRAR_LCD
                         _ENVIA_CHAR
                   _ESCRIBE_MENSAJE2
                         _POS_CURSOR
                          _configuro
                          _convierte
                         _lcd_config
                    _tomamuestra_ADC
 ---------------------------------------------------------------------------------
 (1) _tomamuestra_ADC                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _lcd_config                                           1     1      0     525
                                              4 COMRAM     1     1      0
                         _BORRAR_LCD
                        _CURSOR_HOME
                       _CURSOR_ONOFF
                         _LCD_CONFIG
 ---------------------------------------------------------------------------------
 (2) _LCD_CONFIG                                           1     1      0     135
                                              3 COMRAM     1     1      0
                      _ENVIA_LCD_CMD
                       _ENVIA_NIBBLE
 ---------------------------------------------------------------------------------
 (2) _CURSOR_ONOFF                                         1     1      0     150
                                              3 COMRAM     1     1      0
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _CURSOR_HOME                                          0     0      0     120
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _BORRAR_LCD                                           0     0      0     120
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (1) _convierte                                            1     1      0    1270
                                             14 COMRAM     1     1      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     600
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     604
                                              6 COMRAM     8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (1) _configuro                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _POS_CURSOR                                           2     1      1     512
                                              3 COMRAM     2     1      1
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (3) _ENVIA_LCD_CMD                                        2     2      0     120
                                              1 COMRAM     2     2      0
                       _ENVIA_NIBBLE
                           _LEER_LCD
 ---------------------------------------------------------------------------------
 (1) _ESCRIBE_MENSAJE2                                     6     4      2     628
                                              4 COMRAM     6     4      2
                         _ENVIA_CHAR
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _ENVIA_CHAR                                           2     2      0     120
                                              1 COMRAM     2     2      0
                       _ENVIA_NIBBLE
                           _LEER_LCD
 ---------------------------------------------------------------------------------
 (4) _LEER_LCD                                             1     1      0      45
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _ENVIA_NIBBLE                                         1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _INT0_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _INT1_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _INT2_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _CCP1_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _Other_ISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BORRAR_LCD
     _ENVIA_LCD_CMD
       _ENVIA_NIBBLE
       _LEER_LCD
   _ENVIA_CHAR
     _ENVIA_NIBBLE
     _LEER_LCD
   _ESCRIBE_MENSAJE2
     _ENVIA_CHAR
     _strlen
   _POS_CURSOR
     _ENVIA_LCD_CMD
   _configuro
   _convierte
     ___awdiv
       ___awmod (ARG)
     ___awmod
   _lcd_config
     _BORRAR_LCD
     _CURSOR_HOME
       _ENVIA_LCD_CMD
     _CURSOR_ONOFF
       _ENVIA_LCD_CMD
     _LCD_CONFIG
       _ENVIA_LCD_CMD
       _ENVIA_NIBBLE
   _tomamuestra_ADC

 _INT0_ISR (ROOT)

 _INT1_ISR (ROOT)

 _INT2_ISR (ROOT)

 _CCP1_ISR (ROOT)

 _Other_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0       0      69        0.0%
EEDATA             400      0       0       0        0.0%
BITBIGSFRlhhhll    15F      0       0      96        0.0%
BITBIGSFRlhhhll    10A      0       0      95        0.0%
BITBIGSFR_1        100      0       0      68        0.0%
BITBANK36          100      0       0      66        0.0%
BANK36             100      0       0      67        0.0%
BITBANK35          100      0       0      64        0.0%
BANK35             100      0       0      65        0.0%
BITBANK34          100      0       0      62        0.0%
BANK34             100      0       0      63        0.0%
BITBANK33          100      0       0      60        0.0%
BANK33             100      0       0      61        0.0%
BITBANK32          100      0       0      58        0.0%
BANK32             100      0       0      59        0.0%
BITBANK31          100      0       0      56        0.0%
BANK31             100      0       0      57        0.0%
BITBANK30          100      0       0      54        0.0%
BANK30             100      0       0      55        0.0%
BITBANK29          100      0       0      52        0.0%
BANK29             100      0       0      53        0.0%
BITBANK28          100      0       0      50        0.0%
BANK28             100      0       0      51        0.0%
BITBANK27          100      0       0      48        0.0%
BANK27             100      0       0      49        0.0%
BITBANK26          100      0       0      46        0.0%
BANK26             100      0       0      47        0.0%
BITBANK25          100      0       0      44        0.0%
BANK25             100      0       0      45        0.0%
BITBANK24          100      0       0      42        0.0%
BANK24             100      0       0      43        0.0%
BITBANK23          100      0       0      40        0.0%
BANK23             100      0       0      41        0.0%
BITBANK22          100      0       0      38        0.0%
BANK22             100      0       0      39        0.0%
BITBANK21          100      0       0      36        0.0%
BANK21             100      0       0      37        0.0%
BITBANK20          100      0       0      34        0.0%
BANK20             100      0       0      35        0.0%
BITBANK19          100      0       0      32        0.0%
BANK19             100      0       0      33        0.0%
BITBANK18          100      0       0      30        0.0%
BANK18             100      0       0      31        0.0%
BITBANK17          100      0       0      28        0.0%
BANK17             100      0       0      29        0.0%
BITBANK16          100      0       0      26        0.0%
BANK16             100      0       0      27        0.0%
BITBANK15          100      0       0      24        0.0%
BANK15             100      0       0      25        0.0%
BITBANK14          100      0       0      22        0.0%
BANK14             100      0       0      23        0.0%
BITBANK13          100      0       0      20        0.0%
BANK13             100      0       0      21        0.0%
BITBANK12          100      0       0      18        0.0%
BANK12             100      0       0      19        0.0%
BITBANK11          100      0       0      16        0.0%
BANK11             100      0       0      17        0.0%
BITBANK10          100      0       0      14        0.0%
BANK10             100      0       0      15        0.0%
BITBANK9           100      0       0      12        0.0%
BANK9              100      0       0      13        0.0%
BITBANK8           100      0       0      10        0.0%
BANK8              100      0       0      11        0.0%
BITBANK7           100      0       0       8        0.0%
BANK7              100      0       0       9        0.0%
BITBANK6           100      0       0       6        0.0%
BANK6              100      0       0       7        0.0%
BITBIGSFRll         AD      0       0      99        0.0%
BITBIGSFRlhhhll     A4      0       0      89        0.0%
BITBANK5            A0      0       0       4        0.0%
BANK5               A0      0       0       5        0.0%
BITBIGSFRlhhhhl     86      0       0      84        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     11      18       1       25.3%
BITBIGSFRhhhh       29      0       0      70        0.0%
BITBIGSFRlhhhll     19      0       0      91        0.0%
BITBIGSFRlhhhlh      E      0       0      85        0.0%
BITBIGSFRlhhhll      C      0       0      87        0.0%
BITBIGSFRlhhhlh      7      0       0      86        0.0%
BITBIGSFRhhl         7      0       0      72        0.0%
BITBIGSFRlhhhhh      6      0       0      76        0.0%
BITBIGSFRlhhhhh      6      0       0      80        0.0%
BITBIGSFRlhhhll      6      0       0      88        0.0%
BITBIGSFRhhhl        4      0       0      71        0.0%
BITBIGSFRhll         4      0       0      74        0.0%
BITBIGSFRlhhhhh      3      0       0      77        0.0%
BITBIGSFRlhhhhh      3      0       0      81        0.0%
BITBIGSFRlhl         3      0       0      98        0.0%
BITBIGSFRlhhhhh      2      0       0      78        0.0%
BITBIGSFRlhhhhh      2      0       0      82        0.0%
BITBIGSFRlhhhll      2      0       0      94        0.0%
BITBIGSFRlhhhhh      1      0       0      79        0.0%
BITBIGSFRlhhhhh      1      0       0      75        0.0%
BITBIGSFRlhhhhl      1      0       0      83        0.0%
BITBIGSFRlhhhll      1      0       0      90        0.0%
BITBIGSFRlhhhll      1      0       0      93        0.0%
BITBIGSFRlhhhll      1      0       0      92        0.0%
BITBIGSFRhlh         1      0       0      73        0.0%
BITBIGSFRlhhl        1      0       0      97        0.0%
BIGSFR_1             0      0       0     200        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      18     100        0.0%
DATA                 0      0      18       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Thu May 25 16:40:55 2023

                      l26 2AAE                        l44 2B78                        l62 2BFA  
                      l71 2AE2                        l39 2BF2                        l56 29EE  
                      l65 2946                        l75 2834                        l59 2B16  
                      l68 2BD6                        l77 2870                        u10 2870  
                      u11 286C                        u20 2B5C                        u21 2B58  
                      u30 2B72                        u31 2B6E              ___awdiv@sign 050C  
           ENVIA_CHAR@aux 0503                       l191 29A0                       l185 27FA  
                     l194 2BDC                       l188 2B48                       l197 2BEA  
                     l476 26D0                       l489 2780                       l930 2804  
                     l922 2A74                       l940 281E                       l932 2806  
                     l924 27FC                       l950 283E                       l942 2820  
                     l934 280E                       l926 2800                       l952 2844  
                     l960 285E                       l944 2828                       l936 2814  
                     l928 2802                       l962 2BBE                       l954 284E  
                     l946 282A                       l938 2816                       l970 2AB2  
                     l964 2BCA                       l956 2858                       l948 2836  
                     l980 2AC6                       l972 2AB4                       l966 2BCC  
                     l990 2ADC                       l982 2AC8                       l974 2AB8  
                     l968 2BD4                       l984 2ACA                       l976 2ABC  
                     l992 2BEC                       l986 2AD0                       l978 2AC4  
                     l994 2B4C                       l988 2AD6                       l996 2B5C  
                     l998 2B62                       u200 2BEA                       u201 2BE6  
                     u400 26E4                       u401 26E0                       u330 2A68  
                     u410 26FE                       u331 2A64                       u411 26FA  
                     u340 2620                       u420 2718                       u341 261C  
                     u421 2714                       u350 263A                       u430 2736  
                     u351 2636                       u431 2732                       u360 2660  
                     u440 274C                       u361 265C                       u441 2748  
                     u370 267E                       u450 2770                       u371 267A  
                     u451 276C                       u507 2B1E                       u460 2A88  
                     u380 269A                       u461 2A84                       u381 2696  
                     u517 2B30                       u470 2AA6                       u390 26C0  
                     u607 2838                       u471 2AA2                       u391 26BC  
                     u527 28F8                       u480 29EE                       u617 2848  
                     u481 29EA                       u537 2906                       u627 2852  
                     u547 2916                       u637 2BCE                       u557 2ABE  
                     u567 2AF2                       u577 2808                       u497 2564  
                     u587 2818                       u597 2822              ___awmod@sign 0506  
             LEER_LCD@aux 0501                       wreg 0004E8              ?_CURSOR_HOME 0501  
          ??_ENVIA_NIBBLE 0501            ENVIA_CHAR@dato 0502                      l1000 2B72  
                    l1010 2AF8                      l1002 2AE6                      l1020 2B0A  
                    l1012 2AFA                      l1004 2AE8                      l1022 2B10  
                    l1014 2AFC                      l1006 2AEC                      l1016 2AFE  
                    l1008 2AF0                      l1040 28F2                      l1018 2B04  
                    l1034 2BF4                      l1050 2928                      l1042 2900  
                    l1052 292E                      l1044 2914                      l1036 28E8  
                    l1054 2934                      l1046 291C                      l1038 28EC  
                    l1160 2782                      l1400 26E4                      l1056 293A  
                    l1048 2922                      l1170 27B4                      l1162 279A  
                    l1410 2718                      l1402 26EC                      l1058 2940  
                    l1180 27F2                      l1172 27EA                      l1164 279C  
                    l1420 2754                      l1412 2720                      l1404 26F0  
                    l1500 25E2                      l1342 2A38                      l1182 27F4  
                    l1174 27EC                      l1166 279E                      l1422 275A  
                    l1414 2728                      l1406 26FE                      l1190 2B26  
                    l1502 25EA                      l1344 2A44                      l1440 29A2  
                    l1432 2A78                      l1184 27F6                      l1176 27EE  
                    l1168 27AE                      l1360 262C                      l1352 260E  
                    l1416 2736                      l1424 2760                      l1408 2706  
                    l1192 2B2A                      l1504 25F0                      l1346 2A48  
                    l1450 29DC                      l1442 29B2                      l1434 2A88  
                    l1186 27F8                      l1178 27F0                      l1370 2660  
                    l1362 263A                      l1354 2612                      l1426 2770  
                    l1418 274C                      l1194 2B46                      l1506 25F6  
                    l1348 2A68                      l1444 29B2                      l1436 2A94  
                    l1380 269A                      l1372 2668                      l1364 2642  
                    l1356 2620                      l1428 2778                      l1452 294A  
                    l1188 2B18                      l1508 25FE                      l1460 2538  
                    l1446 29BA                      l1438 2AA6                      l1390 26C0  
                    l1382 26A2                      l1374 2670                      l1366 2646  
                    l1358 2628                      l1198 2BD8                      l1470 2574  
                    l1462 2544                      l1454 2526                      l1448 29DA  
                    l1392 26C8                      l1384 26A4                      l1376 267E  
                    l1368 264E                      l1480 259C                      l1472 257E  
                    l1464 254E                      l1456 252A                      l1386 26AA  
                    l1378 2684                      l1490 25BE                      l1482 25A2  
                    l1474 258A                      l1466 255A                      l1458 252E  
                    l1388 26B0                      l1396 26D2                      l1492 25C6  
                    l1484 25AA                      l1476 258E                      l1468 2570  
                    l1398 26D6                      l1494 25CE                      l1486 25B2  
                    l1478 2592                      l1496 25D4                      l1488 25B8  
                    l1498 25DA                      STR_1 2519                      STR_2 250E  
                    STR_3 2501                      _LATD 0004C1                      _T2PR 000323  
                    _WPUB 000409                      _main 2526          __end_of_CCP1_ISR 28E8  
                    start 0102             ?_CURSOR_ONOFF 0501         ??_tomamuestra_ADC 0501  
            ___param_bank 000000           ??_ENVIA_LCD_CMD 0502          __end_of_LEER_LCD 2872  
        __end_of_INT0_ISR 2B9C          __end_of_INT1_ISR 2BBC          __end_of_INT2_ISR 2C04  
                   ?_main 0501                     _ADPCH 0003EC           __end_of___awdiv 26D2  
         __end_of___awmod 2782                     _T1CLK 000321           ___awdiv@divisor 0509  
                   _T1CON 00031E                     _T2CON 000324                     i2l212 2B9A  
                   i2l224 2C02                     i2l242 2C08                     i2l219 2BBA  
                   i2l237 28E6           ___awdiv@counter 050B                     _OSCEN 0000B3  
                   _PORTD 0004D1                     _TRISB 0004C7                     _TRISD 0004C9  
                   _horas 0518               ?_POS_CURSOR 0504                     _ticks 0512  
                   tablat 0004F5                     status 0004D8            ??_CURSOR_ONOFF 0504  
         __initialization 29F0              __end_of_main 260E                    ??_main 0510  
           __activetblptr 000001                    _ADRESH 0003EB                    _CCPR1H 000341  
                  _CCPR2H 000345                    _CCPR1L 000340                    _CCPR2L 000344  
        ___awdiv@dividend 0507                    _ANSELB 000408                    _ANSELD 000418  
                  _RC2PPS 000213                    i2l1300 2B90                    i2l1310 2BB8  
                  i2l1302 2B98                    i2l1320 2888                    i2l1312 2BFC  
                  i2l1304 2B9C                    i2l1330 28B8                    i2l1322 288C  
                  i2l1314 2BFE                    i2l1306 2B9E                    i2l1332 28CA  
                  i2l1324 289E                    i2l1340 28E4                    i2l1316 2874  
                  i2l1308 2BB0                    i2l1334 28D2                    i2l1326 28A2  
                  i2l1318 2876                    i2l1328 28B4                    i2l1336 28D8  
                  i2l1338 28DE                    i2l1296 2B7C                    i2l1298 2B7E  
                  _OSCFRQ 0000B1                 ??___awdiv 050B                    _decena 0514  
               ??___awmod 0505      __end_of_ENVIA_NIBBLE 2BD8          ___awdiv@quotient 050D  
         ___awmod@divisor 0503                    isa$std 000001           ___awmod@counter 0505  
                  _unidad 0513                    _strlen 2A38                 ?_CCP1_ISR 0501  
            __pdataCOMRAM 0516              __mediumconst 0000                    tblptrh 0004F7  
                  tblptrl 0004F6                    tblptru 0004F8              ??_BORRAR_LCD 0504  
               ?_LEER_LCD 0501                __accesstop 0560   __end_of__initialization 2A2A  
               ?_INT0_ISR 0501                 ?_INT1_ISR 0501                 ?_INT2_ISR 0501  
            ??_LCD_CONFIG 0504             ___rparam_used 000001              ??_ENVIA_CHAR 0502  
          __pcstackCOMRAM 0501            ivt0x8_undefint 0100        __end_of_BORRAR_LCD 2BFC  
              ??_CCP1_ISR 0501          _ESCRIBE_MENSAJE2 29A2          ENVIA_LCD_CMD@aux 0503  
    __end_of_CURSOR_ONOFF 2B7A        __end_of_LCD_CONFIG 2948        __end_of_ENVIA_CHAR 2B18  
         _tomamuestra_ADC 2BD8                ??_LEER_LCD 0501          ENVIA_NIBBLE@dato 0501  
              ??_INT0_ISR 0501                ??_INT1_ISR 0501                ??_INT2_ISR 0501  
       __end_of_Other_ISR 2C0A                   IVTBASEH 00045E                   IVTBASEL 00045D  
                 IVTBASEU 00045F                   _CCP1CON 000342                   _CCP2CON 000346  
                 ?_strlen 0501                _lcd_config 2B18                   _OSCCON1 0000AD  
                 i2u30_40 289E                   i2u30_41 289A                   i2u31_40 28B4  
                 i2u31_41 28B0                   i2u32_40 28CA                   i2u32_41 28C6  
                 i2u27_40 2B90                   i2u27_41 2B8C                   i2u28_40 2BB0  
                 i2u28_41 2BAC                   i2u29_40 2888                   i2u29_41 2884  
            ??_POS_CURSOR 0505                   __Hparam 0000                   __Lparam 0000  
       __end_of_configuro 27FC                   ___awdiv 260E                   ___awmod 26D2  
            __psmallconst 2500     __end_of_ENVIA_LCD_CMD 2AE4         __end_of_convierte 29A2  
                 __pcinit 29F0        __end_of_POS_CURSOR 2AB0                   __ramtop 2500  
                 _centena 0515                   __ptext0 2526                   __ptext1 2BD8  
                 __ptext2 2B18                   __ptext3 28E8                   __ptext4 2B4A  
                 __ptext5 2BEC                   __ptext6 2BF4                   __ptext7 2948  
                 __ptext8 26D2                   __ptext9 260E   __end_of_tomamuestra_ADC 2BEC  
        ___awmod@dividend 0501                   _minutos 0517                 _PIE10bits 0004A8  
            _ENVIA_NIBBLE 2BBC      end_of_initialization 2A2A                 _PIR10bits 0004B8  
                 strlen@a 0503                   strlen@s 0501         ESCRIBE_MENSAJE2@i 050A  
             ?_lcd_config 0501                 _TRISAbits 0004C6  __end_of_ESCRIBE_MENSAJE2 29F0  
            _CURSOR_ONOFF 2B4A        CURSOR_ONOFF@estado 0504             __pidataCOMRAM 2C04  
          __end_of_strlen 2A76             ??_CURSOR_HOME 0504          ?_tomamuestra_ADC 0501  
     start_initialization 29F0                ivt0x8_base 0008         ENVIA_LCD_CMD@dato 0502  
               _Other_ISR 2C08                  ??_strlen 0503               __pbssCOMRAM 0512  
     __end_of_CURSOR_HOME 2BF4                ?_Other_ISR 0501                  ?___awdiv 0507  
                ?___awmod 0501                 _configuro 2782               __smallconst 2500  
               _convierte 2948                  _CCP1_ISR 2874           convierte@numero 050F  
                _T2CLKCON 000326                  _LEER_LCD 27FC                  _INT0_ISR 2B7C  
                _INT1_ISR 2B9C                  _INT2_ISR 2BFC                  _LATBbits 0004BF  
                _LATDbits 0004C1                  _PIE1bits 00049F                  _PIE3bits 0004A1  
                _PIE6bits 0004A4                  _PIR1bits 0004AF                  _PIR3bits 0004B1  
                _PIR6bits 0004B4            POS_CURSOR@fila 0505                ?_configuro 0501  
              _ADCON0bits 0003F3    ESCRIBE_MENSAJE2@cadena 0505                ?_convierte 0501  
            ??_lcd_config 0505               _CURSOR_HOME 2BEC               _INTCON0bits 0004D6  
                __Hrparam 0000         ?_ESCRIBE_MENSAJE2 0505               ??_Other_ISR 0501  
                __Lrparam 0000              __Lsmallconst 2500        __end_of_lcd_config 2B4A  
      ??_ESCRIBE_MENSAJE2 0507                _ANSELAbits 000400                  __pivt0x8 0008  
                __ptext10 2782                  __ptext11 2A76                  __ptext20 2BFC  
                __ptext12 2AB0                  __ptext21 2874                  __ptext13 29A2  
                __ptext22 2C08                  __ptext14 2A38                  __ptext15 2AE4  
                __ptext16 27FC                  __ptext17 2BBC                  __ptext18 2B7C  
                __ptext19 2B9C                _BORRAR_LCD 2BF4                _LCD_CONFIG 28E8  
              _ENVIA_CHAR 2AE4                  _segundos 0516                  isa$xinst 000000  
           _ENVIA_LCD_CMD 2AB0               ??_configuro 0501               ??_convierte 050F  
                intlevel2 0000            ?_ENVIA_LCD_CMD 0501       ESCRIBE_MENSAJE2@tam 0509  
             ?_BORRAR_LCD 0501             ?_ENVIA_NIBBLE 0501                _POS_CURSOR 2A76  
             ?_LCD_CONFIG 0501               ?_ENVIA_CHAR 0501         POS_CURSOR@columna 0504  
