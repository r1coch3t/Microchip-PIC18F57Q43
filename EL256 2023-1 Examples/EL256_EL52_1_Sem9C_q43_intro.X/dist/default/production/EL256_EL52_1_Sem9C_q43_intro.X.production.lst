

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Thu May 18 16:11:50 2023

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	18F57Q43
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1
    23                           	psect	text13,global,reloc=2,class=CODE,delta=1
    24                           	psect	text14,global,reloc=2,class=CODE,delta=1
    25                           	psect	text15,global,reloc=2,class=CODE,delta=1
    26                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    27                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    28                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    29                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    30  0000                     
    31                           ; Version 2.40
    32                           ; Generated 08/12/2021 GMT
    33                           ; 
    34                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    35                           ; All rights reserved.
    36                           ; 
    37                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    38                           ; 
    39                           ; Redistribution and use in source and binary forms, with or without modification, are
    40                           ; permitted provided that the following conditions are met:
    41                           ; 
    42                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    43                           ;        conditions and the following disclaimer.
    44                           ; 
    45                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    46                           ;        of conditions and the following disclaimer in the documentation and/or other
    47                           ;        materials provided with the distribution. Publication is not required when
    48                           ;        this file is used in an embedded application.
    49                           ; 
    50                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    51                           ;        software without specific prior written permission.
    52                           ; 
    53                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    54                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    55                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    56                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    57                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    58                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    59                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    60                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    61                           ; 
    62                           ; 
    63                           ; Code-generator required, PIC18F57Q43 Definitions
    64                           ; 
    65                           ; SFR Addresses
    66  0000                     
    67                           	psect	idataCOMRAM
    68  0028C8                     __pidataCOMRAM:
    69                           	callstack 0
    70                           
    71                           ;initializer for _e_acento
    72  0028C8  02                 	db	2
    73  0028C9  04                 	db	4
    74  0028CA  0E                 	db	14
    75  0028CB  11                 	db	17
    76  0028CC  1F                 	db	31
    77  0028CD  10                 	db	16
    78  0028CE  0E                 	db	14
    79  0028CF  00                 	db	0
    80  0000                     _TRISCbits	set	1224
    81  0000                     _TRISBbits	set	1223
    82  0000                     _LATD	set	1217
    83  0000                     _OSCCON1	set	173
    84  0000                     _OSCFRQ	set	177
    85  0000                     _OSCEN	set	179
    86  0000                     _ANSELAbits	set	1024
    87  0000                     _ANSELD	set	1048
    88  0000                     _TRISD	set	1225
    89  0000                     _PORTD	set	1233
    90  0000                     _TRISEbits	set	1226
    91  0000                     _ANSELEbits	set	1056
    92  0000                     _TRISAbits	set	1222
    93  0000                     _ANSELBbits	set	1032
    94  0000                     _LATCbits	set	1216
    95  0000                     _ANSELCbits	set	1040
    96  0000                     _WPUBbits	set	1033
    97  0000                     _LATDbits	set	1217
    98                           
    99                           	psect	smallconst
   100  002500                     __psmallconst:
   101                           	callstack 0
   102  002500  00                 	db	0
   103  002501                     STR_2:
   104  002501  43                 	db	67	;'C'
   105  002502  6F                 	db	111	;'o'
   106  002503  6E                 	db	110	;'n'
   107  002504  20                 	db	32
   108  002505  66                 	db	102	;'f'
   109  002506  65                 	db	101	;'e'
   110  002507  20                 	db	32
   111  002508  61                 	db	97	;'a'
   112  002509  70                 	db	112	;'p'
   113  00250A  72                 	db	114	;'r'
   114  00250B  6F                 	db	111	;'o'
   115  00250C  62                 	db	98	;'b'
   116  00250D  61                 	db	97	;'a'
   117  00250E  72                 	db	114	;'r'
   118  00250F  00                 	db	0
   119  002510                     STR_1:
   120  002510  48                 	db	72	;'H'
   121  002511  6F                 	db	111	;'o'
   122  002512  6C                 	db	108	;'l'
   123  002513  61                 	db	97	;'a'
   124  002514  20                 	db	32
   125  002515  6D                 	db	109	;'m'
   126  002516  75                 	db	117	;'u'
   127  002517  6E                 	db	110	;'n'
   128  002518  64                 	db	100	;'d'
   129  002519  6F                 	db	111	;'o'
   130  00251A  21                 	db	33
   131  00251B  00                 	db	0
   132  00251C  00                 	db	0	; dummy byte at the end
   133  0000                     
   134                           ; #config settings
   135                           
   136                           	psect	cinit
   137  002850                     __pcinit:
   138                           	callstack 0
   139  002850                     start_initialization:
   140                           	callstack 0
   141  002850                     __initialization:
   142                           	callstack 0
   143                           
   144                           ; Initialize objects allocated to COMRAM (8 bytes)
   145                           ; load TBLPTR registers with __pidataCOMRAM
   146  002850  0EC8               	movlw	low __pidataCOMRAM
   147  002852  6EF6               	movwf	tblptrl,c
   148  002854  0E28               	movlw	high __pidataCOMRAM
   149  002856  6EF7               	movwf	tblptrh,c
   150  002858  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   151  00285A  6EF8               	movwf	tblptru,c
   152  00285C  EE01  F10B         	lfsr	0,__pdataCOMRAM
   153  002860  EE10 F008          	lfsr	1,8
   154  002864                     copy_data0:
   155  002864  0009               	tblrd		*+
   156  002866  C4F5 F4EE          	movff	tablat,postinc0
   157  00286A  50E5               	movf	postdec1,w,c
   158  00286C  50E1               	movf	fsr1l,w,c
   159  00286E  E1FA               	bnz	copy_data0
   160  002870                     end_of_initialization:
   161                           	callstack 0
   162  002870                     __end_of__initialization:
   163                           	callstack 0
   164  002870  0E00               	movlw	low (__Lsmallconst shr (0+16))
   165  002872  6EF8               	movwf	tblptru,c
   166  002874  0E25               	movlw	high __Lsmallconst
   167  002876  6EF7               	movwf	tblptrh,c
   168  002878  0100               	movlb	0
   169  00287A  EF21  F013         	goto	_main	;jump to C main() function
   170                           
   171                           	psect	dataCOMRAM
   172  00050B                     __pdataCOMRAM:
   173                           	callstack 0
   174  00050B                     _e_acento:
   175                           	callstack 0
   176  00050B                     	ds	8
   177                           
   178                           	psect	cstackCOMRAM
   179  000501                     __pcstackCOMRAM:
   180                           	callstack 0
   181  000501                     ?_strlen:
   182                           	callstack 0
   183  000501                     ENVIA_NIBBLE@dato:
   184                           	callstack 0
   185  000501                     LEER_LCD@aux:
   186                           	callstack 0
   187  000501                     strlen@s:
   188                           	callstack 0
   189                           
   190                           ; 2 bytes @ 0x0
   191  000501                     	ds	1
   192  000502                     ENVIA_CHAR@dato:
   193                           	callstack 0
   194  000502                     ENVIA_LCD_CMD@dato:
   195                           	callstack 0
   196                           
   197                           ; 1 bytes @ 0x1
   198  000502                     	ds	1
   199  000503                     ENVIA_CHAR@aux:
   200                           	callstack 0
   201  000503                     ENVIA_LCD_CMD@aux:
   202                           	callstack 0
   203  000503                     strlen@a:
   204                           	callstack 0
   205                           
   206                           ; 2 bytes @ 0x2
   207  000503                     	ds	1
   208  000504                     ??_LCD_CONFIG:
   209  000504                     POS_CURSOR@columna:
   210                           	callstack 0
   211  000504                     CURSOR_ONOFF@estado:
   212                           	callstack 0
   213  000504                     ESCRIBE_MENSAJE@cadena:
   214                           	callstack 0
   215  000504                     GENERACARACTER@vector:
   216                           	callstack 0
   217                           
   218                           ; 2 bytes @ 0x3
   219  000504                     	ds	1
   220  000505                     POS_CURSOR@fila:
   221                           	callstack 0
   222  000505                     ESCRIBE_MENSAJE2@cadena:
   223                           	callstack 0
   224                           
   225                           ; 2 bytes @ 0x4
   226  000505                     	ds	1
   227  000506                     ESCRIBE_MENSAJE@tam:
   228                           	callstack 0
   229  000506                     GENERACARACTER@pos:
   230                           	callstack 0
   231                           
   232                           ; 1 bytes @ 0x5
   233  000506                     	ds	1
   234  000507                     ??_ESCRIBE_MENSAJE2:
   235  000507                     ??_ESCRIBE_MENSAJE:
   236  000507                     GENERACARACTER@i:
   237                           	callstack 0
   238                           
   239                           ; 1 bytes @ 0x6
   240  000507                     	ds	1
   241  000508                     ??_LCD_Init:
   242                           
   243                           ; 1 bytes @ 0x7
   244  000508                     	ds	1
   245  000509                     ESCRIBE_MENSAJE@i:
   246                           	callstack 0
   247  000509                     ESCRIBE_MENSAJE2@tam:
   248                           	callstack 0
   249                           
   250                           ; 1 bytes @ 0x8
   251  000509                     	ds	1
   252  00050A                     ESCRIBE_MENSAJE2@i:
   253                           	callstack 0
   254                           
   255                           ; 1 bytes @ 0x9
   256  00050A                     	ds	1
   257  00050B                     
   258                           ; 1 bytes @ 0xA
   259 ;;
   260 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   261 ;;
   262 ;; *************** function _main *****************
   263 ;; Defined at:
   264 ;;		line 39 in file "maincode2.c"
   265 ;; Parameters:    Size  Location     Type
   266 ;;		None
   267 ;; Auto vars:     Size  Location     Type
   268 ;;		None
   269 ;; Return value:  Size  Location     Type
   270 ;;                  1    wreg      void 
   271 ;; Registers used:
   272 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   273 ;; Tracked objects:
   274 ;;		On entry : 0/0
   275 ;;		On exit  : 0/0
   276 ;;		Unchanged: 0/0
   277 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   278 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   279 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   280 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   281 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   282 ;;Total ram usage:        0 bytes
   283 ;; Hardware stack levels required when called: 4
   284 ;; This function calls:
   285 ;;		_ENVIA_CHAR
   286 ;;		_ESCRIBE_MENSAJE
   287 ;;		_ESCRIBE_MENSAJE2
   288 ;;		_LCD_Init
   289 ;;		_POS_CURSOR
   290 ;;		_configuro
   291 ;; This function is called by:
   292 ;;		Startup code after reset
   293 ;; This function uses a non-reentrant model
   294 ;;
   295                           
   296                           	psect	text0
   297  002642                     __ptext0:
   298                           	callstack 0
   299  002642                     _main:
   300                           	callstack 123
   301  002642                     
   302                           ;maincode2.c: 40:     configuro();
   303  002642  EC3F  F014         	call	_configuro	;wreg free
   304  002646                     
   305                           ;maincode2.c: 41:     LCD_Init();
   306  002646  ECC2  F013         	call	_LCD_Init	;wreg free
   307  00264A                     l1146:
   308                           
   309                           ;maincode2.c: 43:         POS_CURSOR(1,2);
   310  00264A  0E02               	movlw	2
   311  00264C  6E04               	movwf	POS_CURSOR@columna^(0+1280),c
   312  00264E  0E01               	movlw	1
   313  002650  ECA5  F013         	call	_POS_CURSOR
   314  002654                     
   315                           ;maincode2.c: 44:         ESCRIBE_MENSAJE2("Hola mundo!");
   316  002654  0E10               	movlw	low STR_1
   317  002656  6E05               	movwf	ESCRIBE_MENSAJE2@cadena^(0+1280),c
   318  002658  0E25               	movlw	high STR_1
   319  00265A  6E06               	movwf	(ESCRIBE_MENSAJE2@cadena+1)^(0+1280),c
   320  00265C  ECFA  F012         	call	_ESCRIBE_MENSAJE2	;wreg free
   321  002660                     
   322                           ;maincode2.c: 45:         POS_CURSOR(2,0);
   323  002660  0E00               	movlw	0
   324  002662  6E04               	movwf	POS_CURSOR@columna^(0+1280),c
   325  002664  0E02               	movlw	2
   326  002666  ECA5  F013         	call	_POS_CURSOR
   327  00266A                     
   328                           ;maincode2.c: 46:         ESCRIBE_MENSAJE("Con fe aprobar",14);
   329  00266A  0E01               	movlw	low STR_2
   330  00266C  6E04               	movwf	ESCRIBE_MENSAJE@cadena^(0+1280),c
   331  00266E  0E25               	movlw	high STR_2
   332  002670  6E05               	movwf	(ESCRIBE_MENSAJE@cadena+1)^(0+1280),c
   333  002672  0E0E               	movlw	14
   334  002674  6E06               	movwf	ESCRIBE_MENSAJE@tam^(0+1280),c
   335  002676  EC47  F013         	call	_ESCRIBE_MENSAJE	;wreg free
   336  00267A                     
   337                           ;maincode2.c: 47:         ENVIA_CHAR(0);
   338  00267A  0E00               	movlw	0
   339  00267C  ECF6  F013         	call	_ENVIA_CHAR
   340  002680                     
   341                           ;maincode2.c: 48:         ENVIA_CHAR('!');
   342  002680  0E21               	movlw	33
   343  002682  ECF6  F013         	call	_ENVIA_CHAR
   344  002686  EF25  F013         	goto	l1146
   345  00268A  EFFE  F0FF         	goto	start
   346  00268E                     __end_of_main:
   347                           	callstack 0
   348                           
   349 ;; *************** function _configuro *****************
   350 ;; Defined at:
   351 ;;		line 8 in file "maincode2.c"
   352 ;; Parameters:    Size  Location     Type
   353 ;;		None
   354 ;; Auto vars:     Size  Location     Type
   355 ;;		None
   356 ;; Return value:  Size  Location     Type
   357 ;;                  1    wreg      void 
   358 ;; Registers used:
   359 ;;		wreg, status,2
   360 ;; Tracked objects:
   361 ;;		On entry : 0/0
   362 ;;		On exit  : 0/0
   363 ;;		Unchanged: 0/0
   364 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   365 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   366 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   367 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   368 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   369 ;;Total ram usage:        0 bytes
   370 ;; Hardware stack levels used: 1
   371 ;; This function calls:
   372 ;;		Nothing
   373 ;; This function is called by:
   374 ;;		_main
   375 ;; This function uses a non-reentrant model
   376 ;;
   377                           
   378                           	psect	text1
   379  00287E                     __ptext1:
   380                           	callstack 0
   381  00287E                     _configuro:
   382                           	callstack 126
   383  00287E                     
   384                           ;maincode2.c: 10:     OSCCON1 = 0x60;
   385  00287E  0E60               	movlw	96
   386  002880  0100               	movlb	0	; () banked
   387  002882  6FAD               	movwf	173,b	;volatile
   388                           
   389                           ;maincode2.c: 11:     OSCFRQ = 0x02;
   390  002884  0E02               	movlw	2
   391  002886  6FB1               	movwf	177,b	;volatile
   392                           
   393                           ;maincode2.c: 12:     OSCEN = 0x40;
   394  002888  0E40               	movlw	64
   395  00288A  6FB3               	movwf	179,b	;volatile
   396                           
   397                           ;maincode2.c: 15:     TRISD = 0x00;
   398  00288C  0E00               	movlw	0
   399  00288E  6EC9               	movwf	201,c	;volatile
   400                           
   401                           ;maincode2.c: 16:     ANSELD = 0x00;
   402  002890  0E00               	movlw	0
   403  002892  0104               	movlb	4	; () banked
   404  002894  6F18               	movwf	24,b	;volatile
   405  002896                     
   406                           ; BSR set to: 4
   407                           ;maincode2.c: 17:     TRISAbits.TRISA0 = 1;
   408  002896  80C6               	bsf	198,0,c	;volatile
   409  002898                     
   410                           ; BSR set to: 4
   411                           ;maincode2.c: 18:     ANSELAbits.ANSELA0 = 1;
   412  002898  8100               	bsf	0,0,b	;volatile
   413  00289A                     
   414                           ; BSR set to: 4
   415                           ;maincode2.c: 19:     TRISEbits.TRISE0 = 0;
   416  00289A  90CA               	bcf	202,0,c	;volatile
   417  00289C                     
   418                           ; BSR set to: 4
   419                           ;maincode2.c: 20:     ANSELEbits.ANSELE0 = 0;
   420  00289C  9120               	bcf	32,0,b	;volatile
   421  00289E                     
   422                           ; BSR set to: 4
   423                           ;maincode2.c: 21:     TRISBbits.TRISB0 = 1;
   424  00289E  80C7               	bsf	199,0,c	;volatile
   425  0028A0                     
   426                           ; BSR set to: 4
   427                           ;maincode2.c: 22:     ANSELBbits.ANSELB0 = 0;
   428  0028A0  9108               	bcf	8,0,b	;volatile
   429  0028A2                     
   430                           ; BSR set to: 4
   431                           ;maincode2.c: 23:     WPUBbits.WPUB0 = 1;
   432  0028A2  8109               	bsf	9,0,b	;volatile
   433  0028A4                     
   434                           ; BSR set to: 4
   435                           ;maincode2.c: 25:     TRISCbits.TRISC2 = 0;
   436  0028A4  94C8               	bcf	200,2,c	;volatile
   437  0028A6                     
   438                           ; BSR set to: 4
   439                           ;maincode2.c: 26:     ANSELCbits.ANSELC2 = 0;
   440  0028A6  9510               	bcf	16,2,b	;volatile
   441  0028A8                     
   442                           ; BSR set to: 4
   443                           ;maincode2.c: 27:     LATCbits.LATC2 = 1;
   444  0028A8  84C0               	bsf	192,2,c	;volatile
   445  0028AA                     
   446                           ; BSR set to: 4
   447  0028AA  0012               	return		;funcret
   448  0028AC                     __end_of_configuro:
   449                           	callstack 0
   450                           
   451 ;; *************** function _POS_CURSOR *****************
   452 ;; Defined at:
   453 ;;		line 7 in file "LCD.c"
   454 ;; Parameters:    Size  Location     Type
   455 ;;  fila            1    wreg     unsigned char 
   456 ;;  columna         1    3[COMRAM] unsigned char 
   457 ;; Auto vars:     Size  Location     Type
   458 ;;  fila            1    4[COMRAM] unsigned char 
   459 ;; Return value:  Size  Location     Type
   460 ;;                  1    wreg      void 
   461 ;; Registers used:
   462 ;;		wreg, status,2, status,0, cstack
   463 ;; Tracked objects:
   464 ;;		On entry : 0/0
   465 ;;		On exit  : 0/0
   466 ;;		Unchanged: 0/0
   467 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   468 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   469 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   470 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   471 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   472 ;;Total ram usage:        2 bytes
   473 ;; Hardware stack levels used: 1
   474 ;; Hardware stack levels required when called: 2
   475 ;; This function calls:
   476 ;;		_ENVIA_LCD_CMD
   477 ;; This function is called by:
   478 ;;		_main
   479 ;; This function uses a non-reentrant model
   480 ;;
   481                           
   482                           	psect	text2
   483  00274A                     __ptext2:
   484                           	callstack 0
   485  00274A                     _POS_CURSOR:
   486                           	callstack 124
   487                           
   488                           ; BSR set to: 4
   489                           ;incstack = 0
   490                           ;POS_CURSOR@fila stored from wreg
   491  00274A  6E05               	movwf	POS_CURSOR@fila^(0+1280),c
   492  00274C                     
   493                           ;LCD.c: 7: void POS_CURSOR(unsigned char fila,unsigned char columna);LCD.c: 8: {;LCD.c: 
      +                          9:  if(fila == 1)
   494  00274C  0405               	decf	POS_CURSOR@fila^(0+1280),w,c
   495  00274E  A4D8               	btfss	status,2,c
   496  002750  EFAC  F013         	goto	u161
   497  002754  EFAE  F013         	goto	u160
   498  002758                     u161:
   499  002758  EFB4  F013         	goto	l1118
   500  00275C                     u160:
   501  00275C                     
   502                           ;LCD.c: 10:  {;LCD.c: 11:   ENVIA_LCD_CMD(0x80+columna);
   503  00275C  5004               	movf	POS_CURSOR@columna^(0+1280),w,c
   504  00275E  0F80               	addlw	128
   505  002760  ECDC  F013         	call	_ENVIA_LCD_CMD
   506                           
   507                           ;LCD.c: 12:  }
   508  002764  EFC1  F013         	goto	l92
   509  002768                     l1118:
   510  002768  0E02               	movlw	2
   511  00276A  1805               	xorwf	POS_CURSOR@fila^(0+1280),w,c
   512  00276C  A4D8               	btfss	status,2,c
   513  00276E  EFBB  F013         	goto	u171
   514  002772  EFBD  F013         	goto	u170
   515  002776                     u171:
   516  002776  EFC1  F013         	goto	l92
   517  00277A                     u170:
   518  00277A                     
   519                           ;LCD.c: 14:  {;LCD.c: 15:   ENVIA_LCD_CMD(0xC0+columna);
   520  00277A  5004               	movf	POS_CURSOR@columna^(0+1280),w,c
   521  00277C  0FC0               	addlw	192
   522  00277E  ECDC  F013         	call	_ENVIA_LCD_CMD
   523  002782                     l92:
   524  002782  0012               	return		;funcret
   525  002784                     __end_of_POS_CURSOR:
   526                           	callstack 0
   527                           
   528 ;; *************** function _LCD_Init *****************
   529 ;; Defined at:
   530 ;;		line 30 in file "maincode2.c"
   531 ;; Parameters:    Size  Location     Type
   532 ;;		None
   533 ;; Auto vars:     Size  Location     Type
   534 ;;		None
   535 ;; Return value:  Size  Location     Type
   536 ;;                  1    wreg      void 
   537 ;; Registers used:
   538 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   539 ;; Tracked objects:
   540 ;;		On entry : 0/0
   541 ;;		On exit  : 0/0
   542 ;;		Unchanged: 0/0
   543 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   544 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   545 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   546 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   547 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   548 ;;Total ram usage:        1 bytes
   549 ;; Hardware stack levels used: 1
   550 ;; Hardware stack levels required when called: 3
   551 ;; This function calls:
   552 ;;		_BORRAR_LCD
   553 ;;		_CURSOR_HOME
   554 ;;		_CURSOR_ONOFF
   555 ;;		_GENERACARACTER
   556 ;;		_LCD_CONFIG
   557 ;; This function is called by:
   558 ;;		_main
   559 ;; This function uses a non-reentrant model
   560 ;;
   561                           
   562                           	psect	text3
   563  002784                     __ptext3:
   564                           	callstack 0
   565  002784                     _LCD_Init:
   566                           	callstack 123
   567  002784                     
   568                           ;maincode2.c: 31:     _delay((unsigned long)((29)*(4000000UL/4000.0)));
   569  002784  0E26               	movlw	38
   570  002786  6E08               	movwf	??_LCD_Init^(0+1280),c
   571  002788  0EA8               	movlw	168
   572  00278A                     u207:
   573  00278A  2EE8               	decfsz	wreg,f,c
   574  00278C  D7FE               	bra	u207
   575  00278E  2E08               	decfsz	??_LCD_Init^(0+1280),f,c
   576  002790  D7FC               	bra	u207
   577  002792  D000               	nop2	
   578  002794                     
   579                           ;maincode2.c: 32:     LCD_CONFIG();
   580  002794  ECCA  F012         	call	_LCD_CONFIG	;wreg free
   581  002798                     
   582                           ;maincode2.c: 33:     BORRAR_LCD();
   583  002798  EC6C  F014         	call	_BORRAR_LCD	;wreg free
   584  00279C                     
   585                           ;maincode2.c: 34:     CURSOR_HOME();
   586  00279C  EC68  F014         	call	_CURSOR_HOME	;wreg free
   587  0027A0                     
   588                           ;maincode2.c: 35:     CURSOR_ONOFF(1);
   589  0027A0  0E01               	movlw	1
   590  0027A2  EC10  F014         	call	_CURSOR_ONOFF
   591  0027A6                     
   592                           ;maincode2.c: 36:     GENERACARACTER(e_acento,0);
   593  0027A6  0E0B               	movlw	low _e_acento
   594  0027A8  6E04               	movwf	GENERACARACTER@vector^(0+1280),c
   595  0027AA  0E05               	movlw	high _e_acento
   596  0027AC  6E05               	movwf	(GENERACARACTER@vector+1)^(0+1280),c
   597  0027AE  0E00               	movlw	0
   598  0027B0  6E06               	movwf	GENERACARACTER@pos^(0+1280),c
   599  0027B2  EC87  F013         	call	_GENERACARACTER	;wreg free
   600  0027B6  0012               	return		;funcret
   601  0027B8                     __end_of_LCD_Init:
   602                           	callstack 0
   603                           
   604 ;; *************** function _LCD_CONFIG *****************
   605 ;; Defined at:
   606 ;;		line 85 in file "LCD.c"
   607 ;; Parameters:    Size  Location     Type
   608 ;;		None
   609 ;; Auto vars:     Size  Location     Type
   610 ;;		None
   611 ;; Return value:  Size  Location     Type
   612 ;;                  1    wreg      void 
   613 ;; Registers used:
   614 ;;		wreg, status,2, status,0, cstack
   615 ;; Tracked objects:
   616 ;;		On entry : 0/0
   617 ;;		On exit  : 0/0
   618 ;;		Unchanged: 0/0
   619 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   620 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   621 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   622 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   623 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   624 ;;Total ram usage:        1 bytes
   625 ;; Hardware stack levels used: 1
   626 ;; Hardware stack levels required when called: 2
   627 ;; This function calls:
   628 ;;		_ENVIA_LCD_CMD
   629 ;;		_ENVIA_NIBBLE
   630 ;; This function is called by:
   631 ;;		_LCD_Init
   632 ;; This function uses a non-reentrant model
   633 ;;
   634                           
   635                           	psect	text4
   636  002594                     __ptext4:
   637                           	callstack 0
   638  002594                     _LCD_CONFIG:
   639                           	callstack 123
   640  002594                     
   641                           ;LCD.c: 87:  LATDbits.LATD0 = 0;
   642  002594  90C1               	bcf	193,0,c	;volatile
   643                           
   644                           ;LCD.c: 88:  LATDbits.LATD1 = 0;
   645  002596  92C1               	bcf	193,1,c	;volatile
   646  002598                     
   647                           ;LCD.c: 89:  ENVIA_NIBBLE(0x30);
   648  002598  0E30               	movlw	48
   649  00259A  EC56  F014         	call	_ENVIA_NIBBLE
   650  00259E                     
   651                           ;LCD.c: 90:         _delay(24000);
   652  00259E  0E20               	movlw	32
   653  0025A0  6E04               	movwf	??_LCD_CONFIG^(0+1280),c
   654  0025A2  0E2A               	movlw	42
   655  0025A4                     u217:
   656  0025A4  2EE8               	decfsz	wreg,f,c
   657  0025A6  D7FE               	bra	u217
   658  0025A8  2E04               	decfsz	??_LCD_CONFIG^(0+1280),f,c
   659  0025AA  D7FC               	bra	u217
   660  0025AC                     
   661                           ;LCD.c: 91:         _delay(24000);
   662  0025AC  0E20               	movlw	32
   663  0025AE  6E04               	movwf	??_LCD_CONFIG^(0+1280),c
   664  0025B0  0E2A               	movlw	42
   665  0025B2                     u227:
   666  0025B2  2EE8               	decfsz	wreg,f,c
   667  0025B4  D7FE               	bra	u227
   668  0025B6  2E04               	decfsz	??_LCD_CONFIG^(0+1280),f,c
   669  0025B8  D7FC               	bra	u227
   670                           
   671                           ;LCD.c: 94:  ENVIA_NIBBLE(0x30);
   672  0025BA  0E30               	movlw	48
   673  0025BC  EC56  F014         	call	_ENVIA_NIBBLE
   674  0025C0                     
   675                           ;LCD.c: 96:  _delay(1200);
   676  0025C0  0EF0               	movlw	240
   677  0025C2                     u237:
   678  0025C2  D000               	nop2	
   679  0025C4  2EE8               	decfsz	wreg,f,c
   680  0025C6  D7FD               	bra	u237
   681  0025C8                     
   682                           ;LCD.c: 97:         ENVIA_NIBBLE(0x30);
   683  0025C8  0E30               	movlw	48
   684  0025CA  EC56  F014         	call	_ENVIA_NIBBLE
   685  0025CE                     
   686                           ;LCD.c: 98:  ENVIA_NIBBLE(0x20);
   687  0025CE  0E20               	movlw	32
   688  0025D0  EC56  F014         	call	_ENVIA_NIBBLE
   689  0025D4                     
   690                           ;LCD.c: 99:  ENVIA_LCD_CMD(0x01);
   691  0025D4  0E01               	movlw	1
   692  0025D6  ECDC  F013         	call	_ENVIA_LCD_CMD
   693  0025DA                     
   694                           ;LCD.c: 100:  ENVIA_LCD_CMD(0x28);
   695  0025DA  0E28               	movlw	40
   696  0025DC  ECDC  F013         	call	_ENVIA_LCD_CMD
   697  0025E0                     
   698                           ;LCD.c: 101:  ENVIA_LCD_CMD(0x0F);
   699  0025E0  0E0F               	movlw	15
   700  0025E2  ECDC  F013         	call	_ENVIA_LCD_CMD
   701  0025E6                     
   702                           ;LCD.c: 102:  ENVIA_LCD_CMD(0x06);
   703  0025E6  0E06               	movlw	6
   704  0025E8  ECDC  F013         	call	_ENVIA_LCD_CMD
   705  0025EC                     
   706                           ;LCD.c: 103:  ENVIA_LCD_CMD(0x01);
   707  0025EC  0E01               	movlw	1
   708  0025EE  ECDC  F013         	call	_ENVIA_LCD_CMD
   709  0025F2  0012               	return		;funcret
   710  0025F4                     __end_of_LCD_CONFIG:
   711                           	callstack 0
   712                           
   713 ;; *************** function _GENERACARACTER *****************
   714 ;; Defined at:
   715 ;;		line 166 in file "LCD.c"
   716 ;; Parameters:    Size  Location     Type
   717 ;;  vector          2    3[COMRAM] PTR const unsigned char 
   718 ;;		 -> e_acento(8), 
   719 ;;  pos             1    5[COMRAM] unsigned char 
   720 ;; Auto vars:     Size  Location     Type
   721 ;;  i               1    6[COMRAM] unsigned char 
   722 ;; Return value:  Size  Location     Type
   723 ;;                  1    wreg      void 
   724 ;; Registers used:
   725 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   726 ;; Tracked objects:
   727 ;;		On entry : 0/0
   728 ;;		On exit  : 0/0
   729 ;;		Unchanged: 0/0
   730 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   731 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   732 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   733 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   734 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   735 ;;Total ram usage:        4 bytes
   736 ;; Hardware stack levels used: 1
   737 ;; Hardware stack levels required when called: 2
   738 ;; This function calls:
   739 ;;		_ENVIA_CHAR
   740 ;;		_ENVIA_LCD_CMD
   741 ;; This function is called by:
   742 ;;		_LCD_Init
   743 ;; This function uses a non-reentrant model
   744 ;;
   745                           
   746                           	psect	text5
   747  00270E                     __ptext5:
   748                           	callstack 0
   749  00270E                     _GENERACARACTER:
   750                           	callstack 123
   751  00270E                     
   752                           ;LCD.c: 166: void GENERACARACTER(const unsigned char *vector,unsigned char pos);LCD.c: 1
      +                          67: {;LCD.c: 168:  unsigned char i;;LCD.c: 169:  ENVIA_LCD_CMD(0x40+8*pos);
   753  00270E  5006               	movf	GENERACARACTER@pos^(0+1280),w,c
   754  002710  0D08               	mullw	8
   755  002712  50F3               	movf	243,w,c
   756  002714  0F40               	addlw	64
   757  002716  ECDC  F013         	call	_ENVIA_LCD_CMD
   758  00271A                     
   759                           ;LCD.c: 170:  for(i=0;i<8;i++)
   760  00271A  0E00               	movlw	0
   761  00271C  6E07               	movwf	GENERACARACTER@i^(0+1280),c
   762  00271E                     l1084:
   763                           
   764                           ;LCD.c: 171:  {;LCD.c: 172:   ENVIA_CHAR(vector[i]);
   765  00271E  5007               	movf	GENERACARACTER@i^(0+1280),w,c
   766  002720  2404               	addwf	GENERACARACTER@vector^(0+1280),w,c
   767  002722  6ED9               	movwf	fsr2l,c
   768  002724  0E00               	movlw	0
   769  002726  2005               	addwfc	(GENERACARACTER@vector+1)^(0+1280),w,c
   770  002728  6EDA               	movwf	fsr2h,c
   771  00272A  50DF               	movf	indf2,w,c
   772  00272C  ECF6  F013         	call	_ENVIA_CHAR
   773  002730                     
   774                           ;LCD.c: 173:  }
   775  002730  2A07               	incf	GENERACARACTER@i^(0+1280),f,c
   776  002732  0E07               	movlw	7
   777  002734  6407               	cpfsgt	GENERACARACTER@i^(0+1280),c
   778  002736  EF9F  F013         	goto	u141
   779  00273A  EFA1  F013         	goto	u140
   780  00273E                     u141:
   781  00273E  EF8F  F013         	goto	l1084
   782  002742                     u140:
   783  002742                     
   784                           ;LCD.c: 174:  ENVIA_LCD_CMD(0x80);
   785  002742  0E80               	movlw	128
   786  002744  ECDC  F013         	call	_ENVIA_LCD_CMD
   787  002748  0012               	return		;funcret
   788  00274A                     __end_of_GENERACARACTER:
   789                           	callstack 0
   790                           
   791 ;; *************** function _CURSOR_ONOFF *****************
   792 ;; Defined at:
   793 ;;		line 36 in file "LCD.c"
   794 ;; Parameters:    Size  Location     Type
   795 ;;  estado          1    wreg     unsigned char 
   796 ;; Auto vars:     Size  Location     Type
   797 ;;  estado          1    3[COMRAM] unsigned char 
   798 ;; Return value:  Size  Location     Type
   799 ;;                  1    wreg      void 
   800 ;; Registers used:
   801 ;;		wreg, status,2, status,0, cstack
   802 ;; Tracked objects:
   803 ;;		On entry : 0/0
   804 ;;		On exit  : 0/0
   805 ;;		Unchanged: 0/0
   806 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   807 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   808 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   809 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   810 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   811 ;;Total ram usage:        1 bytes
   812 ;; Hardware stack levels used: 1
   813 ;; Hardware stack levels required when called: 2
   814 ;; This function calls:
   815 ;;		_ENVIA_LCD_CMD
   816 ;; This function is called by:
   817 ;;		_LCD_Init
   818 ;; This function uses a non-reentrant model
   819 ;;
   820                           
   821                           	psect	text6
   822  002820                     __ptext6:
   823                           	callstack 0
   824  002820                     _CURSOR_ONOFF:
   825                           	callstack 123
   826                           
   827                           ;incstack = 0
   828                           ;CURSOR_ONOFF@estado stored from wreg
   829  002820  6E04               	movwf	CURSOR_ONOFF@estado^(0+1280),c
   830  002822                     
   831                           ;LCD.c: 36: void CURSOR_ONOFF(unsigned char estado);LCD.c: 37: {;LCD.c: 38:  if(estado =
      +                          = 0) ENVIA_LCD_CMD(0x0E);
   832  002822  5004               	movf	CURSOR_ONOFF@estado^(0+1280),w,c
   833  002824  A4D8               	btfss	status,2,c
   834  002826  EF17  F014         	goto	u21
   835  00282A  EF19  F014         	goto	u20
   836  00282E                     u21:
   837  00282E  EF1C  F014         	goto	l952
   838  002832                     u20:
   839  002832  0E0E               	movlw	14
   840  002834  ECDC  F013         	call	_ENVIA_LCD_CMD
   841  002838                     l952:
   842                           
   843                           ;LCD.c: 39:  if(estado == 1) ENVIA_LCD_CMD(0x0C);
   844  002838  0404               	decf	CURSOR_ONOFF@estado^(0+1280),w,c
   845  00283A  A4D8               	btfss	status,2,c
   846  00283C  EF22  F014         	goto	u31
   847  002840  EF24  F014         	goto	u30
   848  002844                     u31:
   849  002844  EF27  F014         	goto	l110
   850  002848                     u30:
   851  002848  0E0C               	movlw	12
   852  00284A  ECDC  F013         	call	_ENVIA_LCD_CMD
   853  00284E                     l110:
   854  00284E  0012               	return		;funcret
   855  002850                     __end_of_CURSOR_ONOFF:
   856                           	callstack 0
   857                           
   858 ;; *************** function _CURSOR_HOME *****************
   859 ;; Defined at:
   860 ;;		line 31 in file "LCD.c"
   861 ;; Parameters:    Size  Location     Type
   862 ;;		None
   863 ;; Auto vars:     Size  Location     Type
   864 ;;		None
   865 ;; Return value:  Size  Location     Type
   866 ;;                  1    wreg      void 
   867 ;; Registers used:
   868 ;;		wreg, status,2, status,0, cstack
   869 ;; Tracked objects:
   870 ;;		On entry : 0/0
   871 ;;		On exit  : 0/0
   872 ;;		Unchanged: 0/0
   873 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   874 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   875 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   876 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   877 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   878 ;;Total ram usage:        0 bytes
   879 ;; Hardware stack levels used: 1
   880 ;; Hardware stack levels required when called: 2
   881 ;; This function calls:
   882 ;;		_ENVIA_LCD_CMD
   883 ;; This function is called by:
   884 ;;		_LCD_Init
   885 ;; This function uses a non-reentrant model
   886 ;;
   887                           
   888                           	psect	text7
   889  0028D0                     __ptext7:
   890                           	callstack 0
   891  0028D0                     _CURSOR_HOME:
   892                           	callstack 123
   893  0028D0                     
   894                           ;LCD.c: 33:  ENVIA_LCD_CMD(0x02);
   895  0028D0  0E02               	movlw	2
   896  0028D2  ECDC  F013         	call	_ENVIA_LCD_CMD
   897  0028D6  0012               	return		;funcret
   898  0028D8                     __end_of_CURSOR_HOME:
   899                           	callstack 0
   900                           
   901 ;; *************** function _BORRAR_LCD *****************
   902 ;; Defined at:
   903 ;;		line 80 in file "LCD.c"
   904 ;; Parameters:    Size  Location     Type
   905 ;;		None
   906 ;; Auto vars:     Size  Location     Type
   907 ;;		None
   908 ;; Return value:  Size  Location     Type
   909 ;;                  1    wreg      void 
   910 ;; Registers used:
   911 ;;		wreg, status,2, status,0, cstack
   912 ;; Tracked objects:
   913 ;;		On entry : 0/0
   914 ;;		On exit  : 0/0
   915 ;;		Unchanged: 0/0
   916 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   917 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   918 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   919 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   920 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   921 ;;Total ram usage:        0 bytes
   922 ;; Hardware stack levels used: 1
   923 ;; Hardware stack levels required when called: 2
   924 ;; This function calls:
   925 ;;		_ENVIA_LCD_CMD
   926 ;; This function is called by:
   927 ;;		_LCD_Init
   928 ;; This function uses a non-reentrant model
   929 ;;
   930                           
   931                           	psect	text8
   932  0028D8                     __ptext8:
   933                           	callstack 0
   934  0028D8                     _BORRAR_LCD:
   935                           	callstack 123
   936  0028D8                     
   937                           ;LCD.c: 82:  ENVIA_LCD_CMD(0x01);
   938  0028D8  0E01               	movlw	1
   939  0028DA  ECDC  F013         	call	_ENVIA_LCD_CMD
   940  0028DE  0012               	return		;funcret
   941  0028E0                     __end_of_BORRAR_LCD:
   942                           	callstack 0
   943                           
   944 ;; *************** function _ENVIA_LCD_CMD *****************
   945 ;; Defined at:
   946 ;;		line 117 in file "LCD.c"
   947 ;; Parameters:    Size  Location     Type
   948 ;;  dato            1    wreg     unsigned char 
   949 ;; Auto vars:     Size  Location     Type
   950 ;;  dato            1    1[COMRAM] unsigned char 
   951 ;;  aux             1    2[COMRAM] unsigned char 
   952 ;; Return value:  Size  Location     Type
   953 ;;                  1    wreg      void 
   954 ;; Registers used:
   955 ;;		wreg, status,2, status,0, cstack
   956 ;; Tracked objects:
   957 ;;		On entry : 0/0
   958 ;;		On exit  : 0/0
   959 ;;		Unchanged: 0/0
   960 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   961 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   962 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   963 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   964 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   965 ;;Total ram usage:        2 bytes
   966 ;; Hardware stack levels used: 1
   967 ;; Hardware stack levels required when called: 1
   968 ;; This function calls:
   969 ;;		_ENVIA_NIBBLE
   970 ;;		_LEER_LCD
   971 ;; This function is called by:
   972 ;;		_POS_CURSOR
   973 ;;		_CURSOR_HOME
   974 ;;		_CURSOR_ONOFF
   975 ;;		_BORRAR_LCD
   976 ;;		_LCD_CONFIG
   977 ;;		_GENERACARACTER
   978 ;;		_BLINK_CURSOR
   979 ;;		_DISPLAY_ONOFF
   980 ;; This function uses a non-reentrant model
   981 ;;
   982                           
   983                           	psect	text9
   984  0027B8                     __ptext9:
   985                           	callstack 0
   986  0027B8                     _ENVIA_LCD_CMD:
   987                           	callstack 124
   988                           
   989                           ;incstack = 0
   990                           ;ENVIA_LCD_CMD@dato stored from wreg
   991  0027B8  6E02               	movwf	ENVIA_LCD_CMD@dato^(0+1280),c
   992  0027BA                     
   993                           ;LCD.c: 117: void ENVIA_LCD_CMD(unsigned char dato);LCD.c: 118: {;LCD.c: 119:  unsigned 
      +                          char aux;;LCD.c: 120:  LATDbits.LATD0 = 0;
   994  0027BA  90C1               	bcf	193,0,c	;volatile
   995  0027BC                     
   996                           ;LCD.c: 121:  LEER_LCD();
   997  0027BC  EC8F  F012         	call	_LEER_LCD	;wreg free
   998  0027C0                     
   999                           ;LCD.c: 122:  TRISD = 0b00000000;
  1000  0027C0  0E00               	movlw	0
  1001  0027C2  6EC9               	movwf	201,c	;volatile
  1002  0027C4                     
  1003                           ;LCD.c: 124:         _delay(1200);
  1004  0027C4  0EF0               	movlw	240
  1005  0027C6                     u247:
  1006  0027C6  D000               	nop2	
  1007  0027C8  2EE8               	decfsz	wreg,f,c
  1008  0027CA  D7FD               	bra	u247
  1009  0027CC                     
  1010                           ;LCD.c: 125:         LATDbits.LATD1 = 0;
  1011  0027CC  92C1               	bcf	193,1,c	;volatile
  1012  0027CE                     
  1013                           ;LCD.c: 126:  LATDbits.LATD2 = 0;
  1014  0027CE  94C1               	bcf	193,2,c	;volatile
  1015  0027D0                     
  1016                           ;LCD.c: 127:  LATDbits.LATD0 = 0;
  1017  0027D0  90C1               	bcf	193,0,c	;volatile
  1018  0027D2                     
  1019                           ;LCD.c: 128:  aux = dato & 0xF0;
  1020  0027D2  5002               	movf	ENVIA_LCD_CMD@dato^(0+1280),w,c
  1021  0027D4  0BF0               	andlw	240
  1022  0027D6  6E03               	movwf	ENVIA_LCD_CMD@aux^(0+1280),c
  1023  0027D8                     
  1024                           ;LCD.c: 129:  ENVIA_NIBBLE(aux);
  1025  0027D8  5003               	movf	ENVIA_LCD_CMD@aux^(0+1280),w,c
  1026  0027DA  EC56  F014         	call	_ENVIA_NIBBLE
  1027  0027DE                     
  1028                           ;LCD.c: 130:  aux = dato<<4;
  1029  0027DE  3802               	swapf	ENVIA_LCD_CMD@dato^(0+1280),w,c
  1030  0027E0  0BF0               	andlw	240
  1031  0027E2  6E03               	movwf	ENVIA_LCD_CMD@aux^(0+1280),c
  1032  0027E4                     
  1033                           ;LCD.c: 131:  ENVIA_NIBBLE(aux);
  1034  0027E4  5003               	movf	ENVIA_LCD_CMD@aux^(0+1280),w,c
  1035  0027E6  EC56  F014         	call	_ENVIA_NIBBLE
  1036  0027EA  0012               	return		;funcret
  1037  0027EC                     __end_of_ENVIA_LCD_CMD:
  1038                           	callstack 0
  1039                           
  1040 ;; *************** function _ESCRIBE_MENSAJE2 *****************
  1041 ;; Defined at:
  1042 ;;		line 51 in file "LCD.c"
  1043 ;; Parameters:    Size  Location     Type
  1044 ;;  cadena          2    4[COMRAM] PTR const unsigned char 
  1045 ;;		 -> STR_1(12), 
  1046 ;; Auto vars:     Size  Location     Type
  1047 ;;  i               1    9[COMRAM] unsigned char 
  1048 ;;  tam             1    8[COMRAM] unsigned char 
  1049 ;; Return value:  Size  Location     Type
  1050 ;;                  1    wreg      void 
  1051 ;; Registers used:
  1052 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1053 ;; Tracked objects:
  1054 ;;		On entry : 0/0
  1055 ;;		On exit  : 0/0
  1056 ;;		Unchanged: 0/0
  1057 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1058 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1059 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1060 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1061 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1062 ;;Total ram usage:        6 bytes
  1063 ;; Hardware stack levels used: 1
  1064 ;; Hardware stack levels required when called: 2
  1065 ;; This function calls:
  1066 ;;		_ENVIA_CHAR
  1067 ;;		_strlen
  1068 ;; This function is called by:
  1069 ;;		_main
  1070 ;; This function uses a non-reentrant model
  1071 ;;
  1072                           
  1073                           	psect	text10
  1074  0025F4                     __ptext10:
  1075                           	callstack 0
  1076  0025F4                     _ESCRIBE_MENSAJE2:
  1077                           	callstack 124
  1078  0025F4                     
  1079                           ;LCD.c: 55:     tam = strlen(cadena);
  1080  0025F4  C505  F501         	movff	ESCRIBE_MENSAJE2@cadena,strlen@s
  1081  0025F8  C506  F502         	movff	ESCRIBE_MENSAJE2@cadena+1,strlen@s+1
  1082  0025FC  EC68  F013         	call	_strlen	;wreg free
  1083  002600  5001               	movf	?_strlen^(0+1280),w,c
  1084  002602  6E09               	movwf	ESCRIBE_MENSAJE2@tam^(0+1280),c
  1085  002604                     
  1086                           ;LCD.c: 56:  for(i = 0; i<tam; i++)
  1087  002604  0E00               	movlw	0
  1088  002606  6E0A               	movwf	ESCRIBE_MENSAJE2@i^(0+1280),c
  1089  002608  EF17  F013         	goto	l1132
  1090  00260C                     l1128:
  1091                           
  1092                           ;LCD.c: 57:  {;LCD.c: 58:   ENVIA_CHAR(cadena[i]);
  1093  00260C  500A               	movf	ESCRIBE_MENSAJE2@i^(0+1280),w,c
  1094  00260E  2405               	addwf	ESCRIBE_MENSAJE2@cadena^(0+1280),w,c
  1095  002610  6E07               	movwf	??_ESCRIBE_MENSAJE2^(0+1280),c
  1096  002612  0E00               	movlw	0
  1097  002614  2006               	addwfc	(ESCRIBE_MENSAJE2@cadena+1)^(0+1280),w,c
  1098  002616  6E08               	movwf	(??_ESCRIBE_MENSAJE2+1)^(0+1280),c
  1099  002618  0061  F41C  F4F6   	movff	??_ESCRIBE_MENSAJE2,tblptrl
  1100  00261E  0061  F420  F4F7   	movff	??_ESCRIBE_MENSAJE2+1,tblptrh
  1101  002624                     	if	0	;tblptru may be non-zero
  1102  002624                     	endif
  1103  002624                     	if	0	;tblptru may be non-zero
  1104  002624                     	endif
  1105  002624  0008               	tblrd		*
  1106  002626  50F5               	movf	tablat,w,c
  1107  002628  ECF6  F013         	call	_ENVIA_CHAR
  1108  00262C                     
  1109                           ;LCD.c: 59:  }
  1110  00262C  2A0A               	incf	ESCRIBE_MENSAJE2@i^(0+1280),f,c
  1111  00262E                     l1132:
  1112  00262E  5009               	movf	ESCRIBE_MENSAJE2@tam^(0+1280),w,c
  1113  002630  5C0A               	subwf	ESCRIBE_MENSAJE2@i^(0+1280),w,c
  1114  002632  A0D8               	btfss	status,0,c
  1115  002634  EF1E  F013         	goto	u181
  1116  002638  EF20  F013         	goto	u180
  1117  00263C                     u181:
  1118  00263C  EF06  F013         	goto	l1128
  1119  002640                     u180:
  1120  002640  0012               	return		;funcret
  1121  002642                     __end_of_ESCRIBE_MENSAJE2:
  1122                           	callstack 0
  1123                           
  1124 ;; *************** function _strlen *****************
  1125 ;; Defined at:
  1126 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\strlen.c"
  1127 ;; Parameters:    Size  Location     Type
  1128 ;;  s               2    0[COMRAM] PTR const unsigned char 
  1129 ;;		 -> STR_1(12), 
  1130 ;; Auto vars:     Size  Location     Type
  1131 ;;  a               2    2[COMRAM] PTR const unsigned char 
  1132 ;;		 -> STR_1(12), 
  1133 ;; Return value:  Size  Location     Type
  1134 ;;                  2    0[COMRAM] unsigned int 
  1135 ;; Registers used:
  1136 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  1137 ;; Tracked objects:
  1138 ;;		On entry : 0/0
  1139 ;;		On exit  : 0/0
  1140 ;;		Unchanged: 0/0
  1141 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1142 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1143 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1144 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1145 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1146 ;;Total ram usage:        4 bytes
  1147 ;; Hardware stack levels used: 1
  1148 ;; This function calls:
  1149 ;;		Nothing
  1150 ;; This function is called by:
  1151 ;;		_ESCRIBE_MENSAJE2
  1152 ;; This function uses a non-reentrant model
  1153 ;;
  1154                           
  1155                           	psect	text11
  1156  0026D0                     __ptext11:
  1157                           	callstack 0
  1158  0026D0                     _strlen:
  1159                           	callstack 125
  1160  0026D0  C501  F503         	movff	strlen@s,strlen@a
  1161  0026D4  C502  F504         	movff	strlen@s+1,strlen@a+1
  1162  0026D8  EF70  F013         	goto	l1096
  1163  0026DC                     l1094:
  1164  0026DC  4A01               	infsnz	strlen@s^(0+1280),f,c
  1165  0026DE  2A02               	incf	(strlen@s+1)^(0+1280),f,c
  1166  0026E0                     l1096:
  1167  0026E0  0061  F404  F4F6   	movff	strlen@s,tblptrl
  1168  0026E6  0061  F408  F4F7   	movff	strlen@s+1,tblptrh
  1169  0026EC                     	if	0	;tblptru may be non-zero
  1170  0026EC                     	endif
  1171  0026EC                     	if	0	;tblptru may be non-zero
  1172  0026EC                     	endif
  1173  0026EC  0008               	tblrd		*
  1174  0026EE  50F5               	movf	tablat,w,c
  1175  0026F0  0900               	iorlw	0
  1176  0026F2  A4D8               	btfss	status,2,c
  1177  0026F4  EF7E  F013         	goto	u151
  1178  0026F8  EF80  F013         	goto	u150
  1179  0026FC                     u151:
  1180  0026FC  EF6E  F013         	goto	l1094
  1181  002700                     u150:
  1182  002700  5003               	movf	strlen@a^(0+1280),w,c
  1183  002702  5C01               	subwf	strlen@s^(0+1280),w,c
  1184  002704  6E01               	movwf	?_strlen^(0+1280),c
  1185  002706  5004               	movf	(strlen@a+1)^(0+1280),w,c
  1186  002708  5802               	subwfb	(strlen@s+1)^(0+1280),w,c
  1187  00270A  6E02               	movwf	(?_strlen+1)^(0+1280),c
  1188  00270C  0012               	return		;funcret
  1189  00270E                     __end_of_strlen:
  1190                           	callstack 0
  1191                           
  1192 ;; *************** function _ESCRIBE_MENSAJE *****************
  1193 ;; Defined at:
  1194 ;;		line 42 in file "LCD.c"
  1195 ;; Parameters:    Size  Location     Type
  1196 ;;  cadena          2    3[COMRAM] PTR const unsigned char 
  1197 ;;		 -> STR_2(15), 
  1198 ;;  tam             1    5[COMRAM] unsigned char 
  1199 ;; Auto vars:     Size  Location     Type
  1200 ;;  i               1    8[COMRAM] unsigned char 
  1201 ;; Return value:  Size  Location     Type
  1202 ;;                  1    wreg      void 
  1203 ;; Registers used:
  1204 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1205 ;; Tracked objects:
  1206 ;;		On entry : 0/0
  1207 ;;		On exit  : 0/0
  1208 ;;		Unchanged: 0/0
  1209 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1210 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1211 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1212 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1213 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1214 ;;Total ram usage:        6 bytes
  1215 ;; Hardware stack levels used: 1
  1216 ;; Hardware stack levels required when called: 2
  1217 ;; This function calls:
  1218 ;;		_ENVIA_CHAR
  1219 ;; This function is called by:
  1220 ;;		_main
  1221 ;; This function uses a non-reentrant model
  1222 ;;
  1223                           
  1224                           	psect	text12
  1225  00268E                     __ptext12:
  1226                           	callstack 0
  1227  00268E                     _ESCRIBE_MENSAJE:
  1228                           	callstack 124
  1229  00268E                     
  1230                           ;LCD.c: 42: void ESCRIBE_MENSAJE(const char *cadena,unsigned char tam);LCD.c: 43: {;LCD.
      +                          c: 44:  unsigned char i = 0;
  1231  00268E  0E00               	movlw	0
  1232  002690  6E09               	movwf	ESCRIBE_MENSAJE@i^(0+1280),c
  1233                           
  1234                           ;LCD.c: 45:  for(i = 0; i<tam; i++)
  1235  002692  0E00               	movlw	0
  1236  002694  6E09               	movwf	ESCRIBE_MENSAJE@i^(0+1280),c
  1237  002696  EF5E  F013         	goto	l1140
  1238  00269A                     l1136:
  1239                           
  1240                           ;LCD.c: 46:  {;LCD.c: 47:   ENVIA_CHAR(cadena[i]);
  1241  00269A  5009               	movf	ESCRIBE_MENSAJE@i^(0+1280),w,c
  1242  00269C  2404               	addwf	ESCRIBE_MENSAJE@cadena^(0+1280),w,c
  1243  00269E  6E07               	movwf	??_ESCRIBE_MENSAJE^(0+1280),c
  1244  0026A0  0E00               	movlw	0
  1245  0026A2  2005               	addwfc	(ESCRIBE_MENSAJE@cadena+1)^(0+1280),w,c
  1246  0026A4  6E08               	movwf	(??_ESCRIBE_MENSAJE+1)^(0+1280),c
  1247  0026A6  0061  F41C  F4F6   	movff	??_ESCRIBE_MENSAJE,tblptrl
  1248  0026AC  0061  F420  F4F7   	movff	??_ESCRIBE_MENSAJE+1,tblptrh
  1249  0026B2                     	if	0	;tblptru may be non-zero
  1250  0026B2                     	endif
  1251  0026B2                     	if	0	;tblptru may be non-zero
  1252  0026B2                     	endif
  1253  0026B2  0008               	tblrd		*
  1254  0026B4  50F5               	movf	tablat,w,c
  1255  0026B6  ECF6  F013         	call	_ENVIA_CHAR
  1256  0026BA                     
  1257                           ;LCD.c: 48:  }
  1258  0026BA  2A09               	incf	ESCRIBE_MENSAJE@i^(0+1280),f,c
  1259  0026BC                     l1140:
  1260  0026BC  5006               	movf	ESCRIBE_MENSAJE@tam^(0+1280),w,c
  1261  0026BE  5C09               	subwf	ESCRIBE_MENSAJE@i^(0+1280),w,c
  1262  0026C0  A0D8               	btfss	status,0,c
  1263  0026C2  EF65  F013         	goto	u191
  1264  0026C6  EF67  F013         	goto	u190
  1265  0026CA                     u191:
  1266  0026CA  EF4D  F013         	goto	l1136
  1267  0026CE                     u190:
  1268  0026CE  0012               	return		;funcret
  1269  0026D0                     __end_of_ESCRIBE_MENSAJE:
  1270                           	callstack 0
  1271                           
  1272 ;; *************** function _ENVIA_CHAR *****************
  1273 ;; Defined at:
  1274 ;;		line 63 in file "LCD.c"
  1275 ;; Parameters:    Size  Location     Type
  1276 ;;  dato            1    wreg     unsigned char 
  1277 ;; Auto vars:     Size  Location     Type
  1278 ;;  dato            1    1[COMRAM] unsigned char 
  1279 ;;  aux             1    2[COMRAM] unsigned char 
  1280 ;; Return value:  Size  Location     Type
  1281 ;;                  1    wreg      void 
  1282 ;; Registers used:
  1283 ;;		wreg, status,2, status,0, cstack
  1284 ;; Tracked objects:
  1285 ;;		On entry : 0/0
  1286 ;;		On exit  : 0/0
  1287 ;;		Unchanged: 0/0
  1288 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1289 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1290 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1291 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1292 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1293 ;;Total ram usage:        2 bytes
  1294 ;; Hardware stack levels used: 1
  1295 ;; Hardware stack levels required when called: 1
  1296 ;; This function calls:
  1297 ;;		_ENVIA_NIBBLE
  1298 ;;		_LEER_LCD
  1299 ;; This function is called by:
  1300 ;;		_main
  1301 ;;		_ESCRIBE_MENSAJE
  1302 ;;		_ESCRIBE_MENSAJE2
  1303 ;;		_GENERACARACTER
  1304 ;; This function uses a non-reentrant model
  1305 ;;
  1306                           
  1307                           	psect	text13
  1308  0027EC                     __ptext13:
  1309                           	callstack 0
  1310  0027EC                     _ENVIA_CHAR:
  1311                           	callstack 123
  1312                           
  1313                           ;incstack = 0
  1314                           ;ENVIA_CHAR@dato stored from wreg
  1315  0027EC  6E02               	movwf	ENVIA_CHAR@dato^(0+1280),c
  1316  0027EE                     
  1317                           ;LCD.c: 63: void ENVIA_CHAR(unsigned char dato);LCD.c: 64: {;LCD.c: 65:  unsigned char a
      +                          ux;;LCD.c: 66:  LATDbits.LATD0 = 1;
  1318  0027EE  80C1               	bsf	193,0,c	;volatile
  1319  0027F0                     
  1320                           ;LCD.c: 67:  LEER_LCD();
  1321  0027F0  EC8F  F012         	call	_LEER_LCD	;wreg free
  1322  0027F4                     
  1323                           ;LCD.c: 68:  TRISD = 0x00;
  1324  0027F4  0E00               	movlw	0
  1325  0027F6  6EC9               	movwf	201,c	;volatile
  1326  0027F8                     
  1327                           ;LCD.c: 69:         _delay(1200);
  1328  0027F8  0EF0               	movlw	240
  1329  0027FA                     u257:
  1330  0027FA  D000               	nop2	
  1331  0027FC  2EE8               	decfsz	wreg,f,c
  1332  0027FE  D7FD               	bra	u257
  1333  002800                     
  1334                           ;LCD.c: 71:  LATDbits.LATD1 = 0;
  1335  002800  92C1               	bcf	193,1,c	;volatile
  1336  002802                     
  1337                           ;LCD.c: 72:  LATDbits.LATD2 = 0;
  1338  002802  94C1               	bcf	193,2,c	;volatile
  1339  002804                     
  1340                           ;LCD.c: 73:  LATDbits.LATD0 = 1;
  1341  002804  80C1               	bsf	193,0,c	;volatile
  1342  002806                     
  1343                           ;LCD.c: 74:  aux = dato & 0xF0;
  1344  002806  5002               	movf	ENVIA_CHAR@dato^(0+1280),w,c
  1345  002808  0BF0               	andlw	240
  1346  00280A  6E03               	movwf	ENVIA_CHAR@aux^(0+1280),c
  1347  00280C                     
  1348                           ;LCD.c: 75:  ENVIA_NIBBLE(aux);
  1349  00280C  5003               	movf	ENVIA_CHAR@aux^(0+1280),w,c
  1350  00280E  EC56  F014         	call	_ENVIA_NIBBLE
  1351  002812                     
  1352                           ;LCD.c: 76:  aux = dato << 4;
  1353  002812  3802               	swapf	ENVIA_CHAR@dato^(0+1280),w,c
  1354  002814  0BF0               	andlw	240
  1355  002816  6E03               	movwf	ENVIA_CHAR@aux^(0+1280),c
  1356  002818                     
  1357                           ;LCD.c: 77:  ENVIA_NIBBLE(aux);
  1358  002818  5003               	movf	ENVIA_CHAR@aux^(0+1280),w,c
  1359  00281A  EC56  F014         	call	_ENVIA_NIBBLE
  1360  00281E  0012               	return		;funcret
  1361  002820                     __end_of_ENVIA_CHAR:
  1362                           	callstack 0
  1363                           
  1364 ;; *************** function _LEER_LCD *****************
  1365 ;; Defined at:
  1366 ;;		line 134 in file "LCD.c"
  1367 ;; Parameters:    Size  Location     Type
  1368 ;;		None
  1369 ;; Auto vars:     Size  Location     Type
  1370 ;;  aux             1    0[COMRAM] unsigned char 
  1371 ;; Return value:  Size  Location     Type
  1372 ;;                  1    wreg      void 
  1373 ;; Registers used:
  1374 ;;		wreg, status,2, status,0
  1375 ;; Tracked objects:
  1376 ;;		On entry : 0/0
  1377 ;;		On exit  : 0/0
  1378 ;;		Unchanged: 0/0
  1379 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1380 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1381 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1382 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1383 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1384 ;;Total ram usage:        1 bytes
  1385 ;; Hardware stack levels used: 1
  1386 ;; This function calls:
  1387 ;;		Nothing
  1388 ;; This function is called by:
  1389 ;;		_ENVIA_CHAR
  1390 ;;		_ENVIA_LCD_CMD
  1391 ;; This function uses a non-reentrant model
  1392 ;;
  1393                           
  1394                           	psect	text14
  1395  00251E                     __ptext14:
  1396                           	callstack 0
  1397  00251E                     _LEER_LCD:
  1398                           	callstack 124
  1399  00251E                     
  1400                           ;LCD.c: 136:  unsigned char aux;;LCD.c: 137:  TRISD = 0xF8;
  1401  00251E  0EF8               	movlw	248
  1402  002520  6EC9               	movwf	201,c	;volatile
  1403  002522                     
  1404                           ;LCD.c: 138:  LATDbits.LATD0 = 0;
  1405  002522  90C1               	bcf	193,0,c	;volatile
  1406  002524                     
  1407                           ;LCD.c: 139:  LATDbits.LATD1 = 1;
  1408  002524  82C1               	bsf	193,1,c	;volatile
  1409  002526                     
  1410                           ;LCD.c: 140:  LATDbits.LATD2 = 1;
  1411  002526  84C1               	bsf	193,2,c	;volatile
  1412  002528                     
  1413                           ;LCD.c: 141:         _delay(1200);
  1414  002528  0EF0               	movlw	240
  1415  00252A                     u267:
  1416  00252A  D000               	nop2	
  1417  00252C  2EE8               	decfsz	wreg,f,c
  1418  00252E  D7FD               	bra	u267
  1419  002530                     
  1420                           ;LCD.c: 143:  aux = PORTD;
  1421  002530  0061 F344  F501    	movff	1233,LEER_LCD@aux	;volatile
  1422  002536                     
  1423                           ;LCD.c: 144:  LATDbits.LATD2 = 0;
  1424  002536  94C1               	bcf	193,2,c	;volatile
  1425  002538                     
  1426                           ;LCD.c: 145:         _delay(1200);
  1427  002538  0EF0               	movlw	240
  1428  00253A                     u277:
  1429  00253A  D000               	nop2	
  1430  00253C  2EE8               	decfsz	wreg,f,c
  1431  00253E  D7FD               	bra	u277
  1432  002540                     
  1433                           ;LCD.c: 147:  LATDbits.LATD2 = 1;
  1434  002540  84C1               	bsf	193,2,c	;volatile
  1435  002542                     
  1436                           ;LCD.c: 148:         _delay(1200);
  1437  002542  0EF0               	movlw	240
  1438  002544                     u287:
  1439  002544  D000               	nop2	
  1440  002546  2EE8               	decfsz	wreg,f,c
  1441  002548  D7FD               	bra	u287
  1442  00254A                     
  1443                           ;LCD.c: 150:  LATDbits.LATD2 = 0;
  1444  00254A  94C1               	bcf	193,2,c	;volatile
  1445  00254C                     l852:
  1446                           
  1447                           ;LCD.c: 151:  aux = aux & 0x80;
  1448  00254C  5001               	movf	LEER_LCD@aux^(0+1280),w,c
  1449  00254E  0B80               	andlw	128
  1450  002550  6E01               	movwf	LEER_LCD@aux^(0+1280),c
  1451                           
  1452                           ;LCD.c: 152:  while(aux == 0x80)
  1453  002552  EFC0  F012         	goto	l866
  1454  002556                     l141:
  1455                           
  1456                           ;LCD.c: 153:         {;LCD.c: 154:             LATDbits.LATD2 = 1;
  1457  002556  84C1               	bsf	193,2,c	;volatile
  1458  002558                     
  1459                           ;LCD.c: 155:             _delay(1200);
  1460  002558  0EF0               	movlw	240
  1461  00255A                     u297:
  1462  00255A  D000               	nop2	
  1463  00255C  2EE8               	decfsz	wreg,f,c
  1464  00255E  D7FD               	bra	u297
  1465  002560                     
  1466                           ;LCD.c: 156:             aux = PORTD;
  1467  002560  0061 F344  F501    	movff	1233,LEER_LCD@aux	;volatile
  1468  002566                     
  1469                           ;LCD.c: 157:             LATDbits.LATD2 = 0;
  1470  002566  94C1               	bcf	193,2,c	;volatile
  1471                           
  1472                           ;LCD.c: 158:             _delay(1200);
  1473  002568  0EF0               	movlw	240
  1474  00256A                     u307:
  1475  00256A  D000               	nop2	
  1476  00256C  2EE8               	decfsz	wreg,f,c
  1477  00256E  D7FD               	bra	u307
  1478  002570                     
  1479                           ;LCD.c: 159:             LATDbits.LATD2 = 1;
  1480  002570  84C1               	bsf	193,2,c	;volatile
  1481                           
  1482                           ;LCD.c: 160:             _delay(1200);
  1483  002572  0EF0               	movlw	240
  1484  002574                     u317:
  1485  002574  D000               	nop2	
  1486  002576  2EE8               	decfsz	wreg,f,c
  1487  002578  D7FD               	bra	u317
  1488  00257A                     
  1489                           ;LCD.c: 161:             LATDbits.LATD2 = 0;
  1490  00257A  94C1               	bcf	193,2,c	;volatile
  1491  00257C  EFA6  F012         	goto	l852
  1492  002580                     l866:
  1493                           
  1494                           ;LCD.c: 152:  while(aux == 0x80)
  1495  002580  0E80               	movlw	128
  1496  002582  1801               	xorwf	LEER_LCD@aux^(0+1280),w,c
  1497  002584  B4D8               	btfsc	status,2,c
  1498  002586  EFC7  F012         	goto	u11
  1499  00258A  EFC9  F012         	goto	u10
  1500  00258E                     u11:
  1501  00258E  EFAB  F012         	goto	l141
  1502  002592                     u10:
  1503  002592  0012               	return		;funcret
  1504  002594                     __end_of_LEER_LCD:
  1505                           	callstack 0
  1506                           
  1507 ;; *************** function _ENVIA_NIBBLE *****************
  1508 ;; Defined at:
  1509 ;;		line 106 in file "LCD.c"
  1510 ;; Parameters:    Size  Location     Type
  1511 ;;  dato            1    wreg     unsigned char 
  1512 ;; Auto vars:     Size  Location     Type
  1513 ;;  dato            1    0[COMRAM] unsigned char 
  1514 ;; Return value:  Size  Location     Type
  1515 ;;                  1    wreg      void 
  1516 ;; Registers used:
  1517 ;;		wreg, status,2, status,0
  1518 ;; Tracked objects:
  1519 ;;		On entry : 0/0
  1520 ;;		On exit  : 0/0
  1521 ;;		Unchanged: 0/0
  1522 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1523 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1524 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1525 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1526 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1527 ;;Total ram usage:        1 bytes
  1528 ;; Hardware stack levels used: 1
  1529 ;; This function calls:
  1530 ;;		Nothing
  1531 ;; This function is called by:
  1532 ;;		_ENVIA_CHAR
  1533 ;;		_LCD_CONFIG
  1534 ;;		_ENVIA_LCD_CMD
  1535 ;; This function uses a non-reentrant model
  1536 ;;
  1537                           
  1538                           	psect	text15
  1539  0028AC                     __ptext15:
  1540                           	callstack 0
  1541  0028AC                     _ENVIA_NIBBLE:
  1542                           	callstack 124
  1543                           
  1544                           ;incstack = 0
  1545                           ;ENVIA_NIBBLE@dato stored from wreg
  1546  0028AC  6E01               	movwf	ENVIA_NIBBLE@dato^(0+1280),c
  1547  0028AE                     
  1548                           ;LCD.c: 106: void ENVIA_NIBBLE(unsigned char dato);LCD.c: 107: {;LCD.c: 108:  LATD &= 0x
      +                          0F;
  1549  0028AE  0E0F               	movlw	15
  1550  0028B0  16C1               	andwf	193,f,c	;volatile
  1551                           
  1552                           ;LCD.c: 109:  dato &= 0xF0;
  1553  0028B2  0EF0               	movlw	240
  1554  0028B4  1601               	andwf	ENVIA_NIBBLE@dato^(0+1280),f,c
  1555                           
  1556                           ;LCD.c: 110:  LATD|= dato;
  1557  0028B6  5001               	movf	ENVIA_NIBBLE@dato^(0+1280),w,c	;volatile
  1558  0028B8  12C1               	iorwf	193,f,c	;volatile
  1559  0028BA                     
  1560                           ;LCD.c: 111:  LATDbits.LATD2 = 1;
  1561  0028BA  84C1               	bsf	193,2,c	;volatile
  1562  0028BC                     
  1563                           ;LCD.c: 113:         _delay(1200);
  1564  0028BC  0EF0               	movlw	240
  1565  0028BE                     u327:
  1566  0028BE  D000               	nop2	
  1567  0028C0  2EE8               	decfsz	wreg,f,c
  1568  0028C2  D7FD               	bra	u327
  1569  0028C4                     
  1570                           ;LCD.c: 114:  LATDbits.LATD2 = 0;
  1571  0028C4  94C1               	bcf	193,2,c	;volatile
  1572  0028C6  0012               	return		;funcret
  1573  0028C8                     __end_of_ENVIA_NIBBLE:
  1574                           	callstack 0
  1575                           
  1576                           	psect	rparam
  1577  0000                     
  1578                           	psect	idloc
  1579                           
  1580                           ;Config register IDLOC0 @ 0x200000
  1581                           ;	unspecified, using default values
  1582  200000                     	org	2097152
  1583  200000  0FFF               	dw	4095
  1584                           
  1585                           ;Config register IDLOC1 @ 0x200002
  1586                           ;	unspecified, using default values
  1587  200002                     	org	2097154
  1588  200002  0FFF               	dw	4095
  1589                           
  1590                           ;Config register IDLOC2 @ 0x200004
  1591                           ;	unspecified, using default values
  1592  200004                     	org	2097156
  1593  200004  0FFF               	dw	4095
  1594                           
  1595                           ;Config register IDLOC3 @ 0x200006
  1596                           ;	unspecified, using default values
  1597  200006                     	org	2097158
  1598  200006  0FFF               	dw	4095
  1599                           
  1600                           ;Config register IDLOC4 @ 0x200008
  1601                           ;	unspecified, using default values
  1602  200008                     	org	2097160
  1603  200008  0FFF               	dw	4095
  1604                           
  1605                           ;Config register IDLOC5 @ 0x20000A
  1606                           ;	unspecified, using default values
  1607  20000A                     	org	2097162
  1608  20000A  0FFF               	dw	4095
  1609                           
  1610                           ;Config register IDLOC6 @ 0x20000C
  1611                           ;	unspecified, using default values
  1612  20000C                     	org	2097164
  1613  20000C  0FFF               	dw	4095
  1614                           
  1615                           ;Config register IDLOC7 @ 0x20000E
  1616                           ;	unspecified, using default values
  1617  20000E                     	org	2097166
  1618  20000E  0FFF               	dw	4095
  1619                           
  1620                           ;Config register IDLOC8 @ 0x200010
  1621                           ;	unspecified, using default values
  1622  200010                     	org	2097168
  1623  200010  0FFF               	dw	4095
  1624                           
  1625                           ;Config register IDLOC9 @ 0x200012
  1626                           ;	unspecified, using default values
  1627  200012                     	org	2097170
  1628  200012  0FFF               	dw	4095
  1629                           
  1630                           ;Config register IDLOC10 @ 0x200014
  1631                           ;	unspecified, using default values
  1632  200014                     	org	2097172
  1633  200014  0FFF               	dw	4095
  1634                           
  1635                           ;Config register IDLOC11 @ 0x200016
  1636                           ;	unspecified, using default values
  1637  200016                     	org	2097174
  1638  200016  0FFF               	dw	4095
  1639                           
  1640                           ;Config register IDLOC12 @ 0x200018
  1641                           ;	unspecified, using default values
  1642  200018                     	org	2097176
  1643  200018  0FFF               	dw	4095
  1644                           
  1645                           ;Config register IDLOC13 @ 0x20001A
  1646                           ;	unspecified, using default values
  1647  20001A                     	org	2097178
  1648  20001A  0FFF               	dw	4095
  1649                           
  1650                           ;Config register IDLOC14 @ 0x20001C
  1651                           ;	unspecified, using default values
  1652  20001C                     	org	2097180
  1653  20001C  0FFF               	dw	4095
  1654                           
  1655                           ;Config register IDLOC15 @ 0x20001E
  1656                           ;	unspecified, using default values
  1657  20001E                     	org	2097182
  1658  20001E  0FFF               	dw	4095
  1659                           
  1660                           ;Config register IDLOC16 @ 0x200020
  1661                           ;	unspecified, using default values
  1662  200020                     	org	2097184
  1663  200020  0FFF               	dw	4095
  1664                           
  1665                           ;Config register IDLOC17 @ 0x200022
  1666                           ;	unspecified, using default values
  1667  200022                     	org	2097186
  1668  200022  0FFF               	dw	4095
  1669                           
  1670                           ;Config register IDLOC18 @ 0x200024
  1671                           ;	unspecified, using default values
  1672  200024                     	org	2097188
  1673  200024  0FFF               	dw	4095
  1674                           
  1675                           ;Config register IDLOC19 @ 0x200026
  1676                           ;	unspecified, using default values
  1677  200026                     	org	2097190
  1678  200026  0FFF               	dw	4095
  1679                           
  1680                           ;Config register IDLOC20 @ 0x200028
  1681                           ;	unspecified, using default values
  1682  200028                     	org	2097192
  1683  200028  0FFF               	dw	4095
  1684                           
  1685                           ;Config register IDLOC21 @ 0x20002A
  1686                           ;	unspecified, using default values
  1687  20002A                     	org	2097194
  1688  20002A  0FFF               	dw	4095
  1689                           
  1690                           ;Config register IDLOC22 @ 0x20002C
  1691                           ;	unspecified, using default values
  1692  20002C                     	org	2097196
  1693  20002C  0FFF               	dw	4095
  1694                           
  1695                           ;Config register IDLOC23 @ 0x20002E
  1696                           ;	unspecified, using default values
  1697  20002E                     	org	2097198
  1698  20002E  0FFF               	dw	4095
  1699                           
  1700                           ;Config register IDLOC24 @ 0x200030
  1701                           ;	unspecified, using default values
  1702  200030                     	org	2097200
  1703  200030  0FFF               	dw	4095
  1704                           
  1705                           ;Config register IDLOC25 @ 0x200032
  1706                           ;	unspecified, using default values
  1707  200032                     	org	2097202
  1708  200032  0FFF               	dw	4095
  1709                           
  1710                           ;Config register IDLOC26 @ 0x200034
  1711                           ;	unspecified, using default values
  1712  200034                     	org	2097204
  1713  200034  0FFF               	dw	4095
  1714                           
  1715                           ;Config register IDLOC27 @ 0x200036
  1716                           ;	unspecified, using default values
  1717  200036                     	org	2097206
  1718  200036  0FFF               	dw	4095
  1719                           
  1720                           ;Config register IDLOC28 @ 0x200038
  1721                           ;	unspecified, using default values
  1722  200038                     	org	2097208
  1723  200038  0FFF               	dw	4095
  1724                           
  1725                           ;Config register IDLOC29 @ 0x20003A
  1726                           ;	unspecified, using default values
  1727  20003A                     	org	2097210
  1728  20003A  0FFF               	dw	4095
  1729                           
  1730                           ;Config register IDLOC30 @ 0x20003C
  1731                           ;	unspecified, using default values
  1732  20003C                     	org	2097212
  1733  20003C  0FFF               	dw	4095
  1734                           
  1735                           ;Config register IDLOC31 @ 0x20003E
  1736                           ;	unspecified, using default values
  1737  20003E                     	org	2097214
  1738  20003E  0FFF               	dw	4095
  1739                           
  1740                           	psect	config
  1741                           
  1742                           ;Config register CONFIG1 @ 0x300000
  1743                           ;	External Oscillator Selection
  1744                           ;	FEXTOSC = ECH, EC (external clock) above 8 MHz
  1745                           ;	Reset Oscillator Selection
  1746                           ;	RSTOSC = EXTOSC, EXTOSC operating per FEXTOSC bits (device manufacturing default)
  1747  300000                     	org	3145728
  1748  300000  FF                 	db	255
  1749                           
  1750                           ;Config register CONFIG2 @ 0x300001
  1751                           ;	Clock out Enable bit
  1752                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
  1753                           ;	PRLOCKED One-Way Set Enable bit
  1754                           ;	PR1WAY = ON, PRLOCKED bit can be cleared and set only once
  1755                           ;	Clock Switch Enable bit
  1756                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
  1757                           ;	Fail-Safe Clock Monitor Enable bit
  1758                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
  1759  300001                     	org	3145729
  1760  300001  FF                 	db	255
  1761                           
  1762                           ;Config register CONFIG3 @ 0x300002
  1763                           ;	MCLR Enable bit
  1764                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
  1765                           ;	Power-up timer selection bits
  1766                           ;	PWRTS = PWRT_16, PWRT set at 16ms
  1767                           ;	Multi-vector enable bit
  1768                           ;	MVECEN = OFF, Interrupt contoller does not use vector table to prioritze interrupts
  1769                           ;	IVTLOCK bit One-way set enable bit
  1770                           ;	IVT1WAY = ON, IVTLOCKED bit can be cleared and set only once
  1771                           ;	Low Power BOR Enable bit
  1772                           ;	LPBOREN = OFF, Low-Power BOR disabled
  1773                           ;	Brown-out Reset Enable bits
  1774                           ;	BOREN = OFF, Brown-out Reset disabled
  1775  300002                     	org	3145730
  1776  300002  33                 	db	51
  1777                           
  1778                           ;Config register CONFIG4 @ 0x300003
  1779                           ;	Brown-out Reset Voltage Selection bits
  1780                           ;	BORV = VBOR_1P9, Brown-out Reset Voltage (VBOR) set to 1.9V
  1781                           ;	ZCD Disable bit
  1782                           ;	ZCD = OFF, ZCD module is disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCD
      +                          CON
  1783                           ;	PPSLOCK bit One-Way Set Enable bit
  1784                           ;	PPS1WAY = ON, PPSLOCKED bit can be cleared and set only once; PPS registers remain loc
      +                          ked after one clear/set cycle
  1785                           ;	Stack Full/Underflow Reset Enable bit
  1786                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1787                           ;	Low Voltage Programming Enable bit
  1788                           ;	LVP = OFF, HV on MCLR/VPP must be used for programming
  1789                           ;	Extended Instruction Set Enable bit
  1790                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
  1791  300003                     	org	3145731
  1792  300003  DF                 	db	223
  1793                           
  1794                           ;Config register CONFIG5 @ 0x300004
  1795                           ;	WDT Period selection bits
  1796                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  1797                           ;	WDT operating mode
  1798                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
  1799  300004                     	org	3145732
  1800  300004  9F                 	db	159
  1801                           
  1802                           ;Config register CONFIG6 @ 0x300005
  1803                           ;	WDT Window Select bits
  1804                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
  1805                           ;	WDT input clock selector
  1806                           ;	WDTCCS = SC, Software Control
  1807  300005                     	org	3145733
  1808  300005  FF                 	db	255
  1809                           
  1810                           ;Config register CONFIG7 @ 0x300006
  1811                           ;	Boot Block Size selection bits
  1812                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
  1813                           ;	Boot Block enable bit
  1814                           ;	BBEN = OFF, Boot block disabled
  1815                           ;	Storage Area Flash enable bit
  1816                           ;	SAFEN = OFF, SAF disabled
  1817                           ;	Background Debugger
  1818                           ;	DEBUG = OFF, Background Debugger disabled
  1819  300006                     	org	3145734
  1820  300006  FF                 	db	255
  1821                           
  1822                           ;Config register CONFIG8 @ 0x300007
  1823                           ;	Boot Block Write Protection bit
  1824                           ;	WRTB = OFF, Boot Block not Write protected
  1825                           ;	Configuration Register Write Protection bit
  1826                           ;	WRTC = OFF, Configuration registers not Write protected
  1827                           ;	Data EEPROM Write Protection bit
  1828                           ;	WRTD = OFF, Data EEPROM not Write protected
  1829                           ;	SAF Write protection bit
  1830                           ;	WRTSAF = OFF, SAF not Write Protected
  1831                           ;	Application Block write protection bit
  1832                           ;	WRTAPP = OFF, Application Block not write protected
  1833  300007                     	org	3145735
  1834  300007  FF                 	db	255
  1835                           
  1836                           ; Padding undefined space
  1837  300008                     	org	3145736
  1838  300008  FF                 	db	255
  1839                           
  1840                           ;Config register CONFIG10 @ 0x300009
  1841                           ;	PFM and Data EEPROM Code Protection bit
  1842                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
  1843  300009                     	org	3145737
  1844  300009  FF                 	db	255
  1845                           tosu	equ	0x4FF
  1846                           tosh	equ	0x4FE
  1847                           tosl	equ	0x4FD
  1848                           stkptr	equ	0x4FC
  1849                           pclatu	equ	0x4FB
  1850                           pclath	equ	0x4FA
  1851                           pcl	equ	0x4F9
  1852                           tblptru	equ	0x4F8
  1853                           tblptrh	equ	0x4F7
  1854                           tblptrl	equ	0x4F6
  1855                           tablat	equ	0x4F5
  1856                           prodh	equ	0x4F4
  1857                           prodl	equ	0x4F3
  1858                           indf0	equ	0x4EF
  1859                           postinc0	equ	0x4EE
  1860                           postdec0	equ	0x4ED
  1861                           preinc0	equ	0x4EC
  1862                           plusw0	equ	0x4EB
  1863                           fsr0h	equ	0x4EA
  1864                           fsr0l	equ	0x4E9
  1865                           wreg	equ	0x4E8
  1866                           indf1	equ	0x4E7
  1867                           postinc1	equ	0x4E6
  1868                           postdec1	equ	0x4E5
  1869                           preinc1	equ	0x4E4
  1870                           plusw1	equ	0x4E3
  1871                           fsr1h	equ	0x4E2
  1872                           fsr1l	equ	0x4E1
  1873                           bsr	equ	0x4E0
  1874                           indf2	equ	0x4DF
  1875                           postinc2	equ	0x4DE
  1876                           postdec2	equ	0x4DD
  1877                           preinc2	equ	0x4DC
  1878                           plusw2	equ	0x4DB
  1879                           fsr2h	equ	0x4DA
  1880                           fsr2l	equ	0x4D9
  1881                           status	equ	0x4D8

Data Sizes:
    Strings     27
    Constant    0
    Data        8
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     10      18
    BANK5           160      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0
    BANK32          256      0       0
    BANK33          256      0       0
    BANK34          256      0       0
    BANK35          256      0       0
    BANK36          256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_1(CODE[12]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_1(CODE[12]), 

    GENERACARACTER@vector	PTR const unsigned char  size(2) Largest target is 8
		 -> e_acento(COMRAM[8]), 

    ESCRIBE_MENSAJE2@cadena	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_1(CODE[12]), 

    ESCRIBE_MENSAJE@cadena	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_2(CODE[15]), 


Critical Paths under _main in COMRAM

    _main->_ESCRIBE_MENSAJE2
    _POS_CURSOR->_ENVIA_LCD_CMD
    _LCD_Init->_GENERACARACTER
    _LCD_CONFIG->_ENVIA_LCD_CMD
    _GENERACARACTER->_ENVIA_CHAR
    _GENERACARACTER->_ENVIA_LCD_CMD
    _CURSOR_ONOFF->_ENVIA_LCD_CMD
    _CURSOR_HOME->_ENVIA_LCD_CMD
    _BORRAR_LCD->_ENVIA_LCD_CMD
    _ENVIA_LCD_CMD->_ENVIA_NIBBLE
    _ENVIA_LCD_CMD->_LEER_LCD
    _ESCRIBE_MENSAJE2->_strlen
    _ESCRIBE_MENSAJE->_ENVIA_CHAR
    _ENVIA_CHAR->_ENVIA_NIBBLE
    _ENVIA_CHAR->_LEER_LCD

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _main in BANK32

    None.

Critical Paths under _main in BANK33

    None.

Critical Paths under _main in BANK34

    None.

Critical Paths under _main in BANK35

    None.

Critical Paths under _main in BANK36

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    2348
                         _ENVIA_CHAR
                    _ESCRIBE_MENSAJE
                   _ESCRIBE_MENSAJE2
                           _LCD_Init
                         _POS_CURSOR
                          _configuro
 ---------------------------------------------------------------------------------
 (1) _configuro                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _POS_CURSOR                                           2     1      1     360
                                              3 COMRAM     2     1      1
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             1     1      0    1029
                                              7 COMRAM     1     1      0
                         _BORRAR_LCD
                        _CURSOR_HOME
                       _CURSOR_ONOFF
                     _GENERACARACTER
                         _LCD_CONFIG
 ---------------------------------------------------------------------------------
 (2) _LCD_CONFIG                                           1     1      0     135
                                              3 COMRAM     1     1      0
                      _ENVIA_LCD_CMD
                       _ENVIA_NIBBLE
 ---------------------------------------------------------------------------------
 (2) _GENERACARACTER                                       4     1      3     504
                                              3 COMRAM     4     1      3
                         _ENVIA_CHAR
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _CURSOR_ONOFF                                         1     1      0     150
                                              3 COMRAM     1     1      0
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _CURSOR_HOME                                          0     0      0     120
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _BORRAR_LCD                                           0     0      0     120
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _ENVIA_LCD_CMD                                        2     2      0     120
                                              1 COMRAM     2     2      0
                       _ENVIA_NIBBLE
                           _LEER_LCD
 ---------------------------------------------------------------------------------
 (1) _ESCRIBE_MENSAJE2                                     6     4      2     476
                                              4 COMRAM     6     4      2
                         _ENVIA_CHAR
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _ESCRIBE_MENSAJE                                      6     3      3     363
                                              3 COMRAM     6     3      3
                         _ENVIA_CHAR
 ---------------------------------------------------------------------------------
 (3) _ENVIA_CHAR                                           2     2      0     120
                                              1 COMRAM     2     2      0
                       _ENVIA_NIBBLE
                           _LEER_LCD
 ---------------------------------------------------------------------------------
 (3) _LEER_LCD                                             1     1      0      45
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _ENVIA_NIBBLE                                         1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ENVIA_CHAR
     _ENVIA_NIBBLE
     _LEER_LCD
   _ESCRIBE_MENSAJE
     _ENVIA_CHAR
   _ESCRIBE_MENSAJE2
     _ENVIA_CHAR
     _strlen
   _LCD_Init
     _BORRAR_LCD
       _ENVIA_LCD_CMD
         _ENVIA_NIBBLE
         _LEER_LCD
     _CURSOR_HOME
       _ENVIA_LCD_CMD
     _CURSOR_ONOFF
       _ENVIA_LCD_CMD
     _GENERACARACTER
       _ENVIA_CHAR
       _ENVIA_LCD_CMD
     _LCD_CONFIG
       _ENVIA_LCD_CMD
       _ENVIA_NIBBLE
   _POS_CURSOR
     _ENVIA_LCD_CMD
   _configuro

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0       0      70        0.0%
EEDATA             400      0       0       0        0.0%
BITBIGSFRhhhlll    34C      0       0      79        0.0%
BITBIGSFR_1        100      0       0      69        0.0%
BITBANK36          100      0       0      67        0.0%
BANK36             100      0       0      68        0.0%
BITBANK35          100      0       0      65        0.0%
BANK35             100      0       0      66        0.0%
BITBANK34          100      0       0      63        0.0%
BANK34             100      0       0      64        0.0%
BITBANK33          100      0       0      61        0.0%
BANK33             100      0       0      62        0.0%
BITBANK32          100      0       0      59        0.0%
BANK32             100      0       0      60        0.0%
BITBANK31          100      0       0      56        0.0%
BANK31             100      0       0      57        0.0%
BITBANK30          100      0       0      54        0.0%
BANK30             100      0       0      55        0.0%
BITBANK29          100      0       0      52        0.0%
BANK29             100      0       0      53        0.0%
BITBANK28          100      0       0      50        0.0%
BANK28             100      0       0      51        0.0%
BITBANK27          100      0       0      48        0.0%
BANK27             100      0       0      49        0.0%
BITBANK26          100      0       0      46        0.0%
BANK26             100      0       0      47        0.0%
BITBANK25          100      0       0      44        0.0%
BANK25             100      0       0      45        0.0%
BITBANK24          100      0       0      42        0.0%
BANK24             100      0       0      43        0.0%
BITBANK23          100      0       0      40        0.0%
BANK23             100      0       0      41        0.0%
BITBANK22          100      0       0      38        0.0%
BANK22             100      0       0      39        0.0%
BITBANK21          100      0       0      36        0.0%
BANK21             100      0       0      37        0.0%
BITBANK20          100      0       0      34        0.0%
BANK20             100      0       0      35        0.0%
BITBANK19          100      0       0      32        0.0%
BANK19             100      0       0      33        0.0%
BITBANK18          100      0       0      30        0.0%
BANK18             100      0       0      31        0.0%
BITBANK17          100      0       0      28        0.0%
BANK17             100      0       0      29        0.0%
BITBANK16          100      0       0      26        0.0%
BANK16             100      0       0      27        0.0%
BITBANK15          100      0       0      24        0.0%
BANK15             100      0       0      25        0.0%
BITBANK14          100      0       0      22        0.0%
BANK14             100      0       0      23        0.0%
BITBANK13          100      0       0      20        0.0%
BANK13             100      0       0      21        0.0%
BITBANK12          100      0       0      18        0.0%
BANK12             100      0       0      19        0.0%
BITBANK11          100      0       0      16        0.0%
BANK11             100      0       0      17        0.0%
BITBANK10          100      0       0      14        0.0%
BANK10             100      0       0      15        0.0%
BITBANK9           100      0       0      12        0.0%
BANK9              100      0       0      13        0.0%
BITBANK8           100      0       0      10        0.0%
BANK8              100      0       0      11        0.0%
BITBANK7           100      0       0       8        0.0%
BANK7              100      0       0       9        0.0%
BITBANK6           100      0       0       6        0.0%
BANK6              100      0       0       7        0.0%
BITBIGSFRl          AD      0       0      82        0.0%
BITBANK5            A0      0       0       4        0.0%
BANK5               A0      0       0       5        0.0%
BITBIGSFRhhhlhl     9F      0       0      74        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      A      12       1       18.9%
BITBIGSFRhhhhh      2E      0       0      71        0.0%
BITBIGSFRhhhllh      7      0       0      76        0.0%
BITBIGSFRhhhllh      7      0       0      78        0.0%
BITBIGSFRhhhlhl      7      0       0      75        0.0%
BITBIGSFRhhhllh      6      0       0      77        0.0%
BITBIGSFRhhhhl       6      0       0      72        0.0%
BITBIGSFRhhhlhl      4      0       0      73        0.0%
BITBIGSFRhl          3      0       0      81        0.0%
BITBIGSFRhhl         1      0       0      80        0.0%
BIGSFR_1             0      0       0     200        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      12      58        0.0%
DATA                 0      0      12       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Thu May 18 16:11:50 2023

                      l55 28AA                        l58 27B6                        l92 2782  
                      u10 2592                        u11 258E                        u20 2832  
                      u21 282E                        u30 2848                        u31 2844  
           ENVIA_CHAR@aux 0503                       l110 284E                       l105 28D6  
                     l122 2640                       l131 25F2                       l116 26CE  
                     l141 2556                       l125 281E                       l134 28C6  
                     l143 2592                       l128 28DE                       l137 27EA  
                     l148 2748                       l900 27BC                       l830 251E  
                     l910 27D0                       l902 27C0                       l840 2530  
                     l832 2522                       l912 27D2                       l904 27C4  
                     l920 2594                       l850 254A                       l842 2536  
                     l834 2524                       l914 27D8                       l906 27CC  
                     l930 25C8                       l922 2598                       l860 2570  
                     l852 254C                       l844 2538                       l836 2526  
                     l828 270C                       l916 27DE                       l908 27CE  
                     l940 25E6                       l932 25CE                       l924 259E  
                     l870 28BA                       l862 257A                       l854 2558  
                     l846 2540                       l838 2528                       l918 27E4  
                     l950 2832                       l942 25EC                       l934 25D4  
                     l926 25AC                       l872 28BC                       l856 2560  
                     l848 2542                       l880 27F4                       l944 28D8  
                     l952 2838                       l936 25DA                       l928 25C0  
                     l874 28C4                       l858 2566                       l866 2580  
                     l890 2806                       l882 27F8                       l946 28D0  
                     l954 2848                       l938 25E0                       l868 28AE  
                     l892 280C                       l884 2800                       l876 27EE  
                     l948 2822                       l894 2812                       l886 2802  
                     l878 27F0                       l990 289C                       l982 287E  
                     l896 2818                       l888 2804                       l992 289E  
                     l984 2896                       l898 27BA                       l994 28A0  
                     l986 2898                       l996 28A2                       l988 289A  
                     l998 28A4                       u140 2742                       u141 273E  
                     u150 2700                       u151 26FC                       u207 278A  
                     u160 275C                       u217 25A4                       u161 2758  
                     u170 277A                       u307 256A                       u227 25B2  
                     u171 2776                       u180 2640                       u317 2574  
                     u181 263C                       u237 25C2                       u190 26CE  
                     u327 28BE                       u191 26CA                       u247 27C6  
                     u257 27FA                       u267 252A                       u277 253A  
                     u287 2544                       u297 255A               LEER_LCD@aux 0501  
                     wreg 0004E8              ?_CURSOR_HOME 0501            ??_ENVIA_NIBBLE 0501  
          ENVIA_CHAR@dato 0502                      l1000 28A6                      l1002 28A8  
                    l1110 27A0                      l1102 2784                      l1112 27A6  
                    l1104 2794                      l1120 277A                      l1130 262C  
                    l1122 25F4                      l1106 2798                      l1114 274C  
                    l1140 26BC                      l1132 262E                      l1124 25F4  
                    l1108 279C                      l1116 275C                      l1134 268E  
                    l1126 2604                      l1118 2768                      l1150 2660  
                    l1142 2642                      l1136 269A                      l1128 260C  
                    l1152 266A                      l1144 2646                      l1138 26BA  
                    l1090 2742                      l1154 267A                      l1146 264A  
                    l1092 26D0                      l1084 271E                      l1076 270E  
                    l1156 2680                      l1148 2654                      l1094 26DC  
                    l1086 2730                      l1078 271A                      l1096 26E0  
                    l1088 2732                      l1098 2700                      STR_1 2510  
                    STR_2 2501                      _LATD 0004C1                      _main 2642  
                    indf2 0004DF                      fsr1l 0004E1                      fsr2l 0004D9  
                    prodl 0004F3                      start FFFC             ?_CURSOR_ONOFF 0501  
            ___param_bank 000000           ??_ENVIA_LCD_CMD 0502          __end_of_LEER_LCD 2594  
        __end_of_LCD_Init 27B8            _GENERACARACTER 270E                     ?_main 0501  
                   _OSCEN 0000B3                     _PORTD 0004D1                     _TRISD 0004C9  
             ?_POS_CURSOR 0504                     tablat 0004F5                     status 0004D8  
          ??_CURSOR_ONOFF 0504           __initialization 2850              __end_of_main 268E  
  __end_of_GENERACARACTER 274A           _ESCRIBE_MENSAJE 268E                    ??_main 050B  
           __activetblptr 000001                    _ANSELD 000418                    _OSCFRQ 0000B1  
    __end_of_ENVIA_NIBBLE 28C8           ?_GENERACARACTER 0504                    isa$std 000001  
                  _strlen 26D0              __pdataCOMRAM 050B              __mediumconst 0000  
                  tblptrh 0004F7                    tblptrl 0004F6                    tblptru 0004F8  
            ??_BORRAR_LCD 0504                 ?_LEER_LCD 0501                __accesstop 0560  
 __end_of__initialization 2870                 ?_LCD_Init 0501              ??_LCD_CONFIG 0504  
           ___rparam_used 000001              ??_ENVIA_CHAR 0502   __end_of_ESCRIBE_MENSAJE 26D0  
          __pcstackCOMRAM 0501        __end_of_BORRAR_LCD 28E0          _ESCRIBE_MENSAJE2 25F4  
        ENVIA_LCD_CMD@aux 0503      __end_of_CURSOR_ONOFF 2850        __end_of_LCD_CONFIG 25F4  
      __end_of_ENVIA_CHAR 2820                ??_LEER_LCD 0501          ENVIA_NIBBLE@dato 0501  
              ??_LCD_Init 0508                   ?_strlen 0501                   _OSCCON1 0000AD  
            ??_POS_CURSOR 0505                   __Hparam 0000                   __Lparam 0000  
        ?_ESCRIBE_MENSAJE 0504         __end_of_configuro 28AC              __psmallconst 2500  
   __end_of_ENVIA_LCD_CMD 27EC                   __pcinit 2850        __end_of_POS_CURSOR 2784  
                 __ramtop 2500                   __ptext0 2642                   __ptext1 287E  
                 __ptext2 274A                   __ptext3 2784                   __ptext4 2594  
                 __ptext5 270E                   __ptext6 2820                   __ptext7 28D0  
                 __ptext8 28D8                   __ptext9 27B8           GENERACARACTER@i 0507  
            _ENVIA_NIBBLE 28AC      end_of_initialization 2870          ??_GENERACARACTER 0507  
                 postdec1 0004E5                   postinc0 0004EE      GENERACARACTER@vector 0504  
                 strlen@a 0503                   strlen@s 0501         ESCRIBE_MENSAJE2@i 050A  
               _TRISAbits 0004C6                 _TRISBbits 0004C7                 _TRISCbits 0004C8  
               _TRISEbits 0004CA  __end_of_ESCRIBE_MENSAJE2 2642              _CURSOR_ONOFF 2820  
      CURSOR_ONOFF@estado 0504             __pidataCOMRAM 28C8            __end_of_strlen 270E  
           ??_CURSOR_HOME 0504       start_initialization 2850         ENVIA_LCD_CMD@dato 0502  
                ??_strlen 0503       __end_of_CURSOR_HOME 28D8         GENERACARACTER@pos 0506  
               _configuro 287E               __smallconst 2500                  _LEER_LCD 251E  
                _LCD_Init 2784                  _LATCbits 0004C0                  _LATDbits 0004C1  
        ESCRIBE_MENSAJE@i 0509            POS_CURSOR@fila 0505                ?_configuro 0501  
  ESCRIBE_MENSAJE2@cadena 0505                  _WPUBbits 000409               _CURSOR_HOME 28D0  
               copy_data0 2864                  __Hrparam 0000         ?_ESCRIBE_MENSAJE2 0505  
                __Lrparam 0000              __Lsmallconst 2500        ??_ESCRIBE_MENSAJE2 0507  
              _ANSELAbits 000400                  _e_acento 050B                _ANSELBbits 000408  
              _ANSELCbits 000410                _ANSELEbits 000420                  __ptext10 25F4  
                __ptext11 26D0                  __ptext12 268E                  __ptext13 27EC  
                __ptext14 251E                  __ptext15 28AC                _BORRAR_LCD 28D8  
              _LCD_CONFIG 2594                _ENVIA_CHAR 27EC                  isa$xinst 000000  
           _ENVIA_LCD_CMD 27B8               ??_configuro 0501         ??_ESCRIBE_MENSAJE 0507  
   ESCRIBE_MENSAJE@cadena 0504            ?_ENVIA_LCD_CMD 0501       ESCRIBE_MENSAJE2@tam 0509  
             ?_BORRAR_LCD 0501             ?_ENVIA_NIBBLE 0501                _POS_CURSOR 274A  
             ?_LCD_CONFIG 0501        ESCRIBE_MENSAJE@tam 0506               ?_ENVIA_CHAR 0501  
       POS_CURSOR@columna 0504  
