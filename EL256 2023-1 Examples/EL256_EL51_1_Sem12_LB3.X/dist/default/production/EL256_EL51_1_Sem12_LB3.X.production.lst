

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Wed Jun 07 17:35:47 2023

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	18F57Q43
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=4,class=CODE,delta=1
    26                           	psect	text15,global,reloc=4,class=CODE,delta=1
    27                           	psect	text16,global,reloc=4,class=CODE,delta=1
    28                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
    29                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    30                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    31                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    32                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    33  0000                     
    34                           ; Version 2.40
    35                           ; Generated 08/12/2021 GMT
    36                           ; 
    37                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    38                           ; All rights reserved.
    39                           ; 
    40                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    41                           ; 
    42                           ; Redistribution and use in source and binary forms, with or without modification, are
    43                           ; permitted provided that the following conditions are met:
    44                           ; 
    45                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    46                           ;        conditions and the following disclaimer.
    47                           ; 
    48                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    49                           ;        of conditions and the following disclaimer in the documentation and/or other
    50                           ;        materials provided with the distribution. Publication is not required when
    51                           ;        this file is used in an embedded application.
    52                           ; 
    53                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    54                           ;        software without specific prior written permission.
    55                           ; 
    56                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    57                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    58                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    59                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    60                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    61                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    62                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    63                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    64                           ; 
    65                           ; 
    66                           ; Code-generator required, PIC18F57Q43 Definitions
    67                           ; 
    68                           ; SFR Addresses
    69  0000                     
    70                           	psect	idataCOMRAM
    71  002D04                     __pidataCOMRAM:
    72                           	callstack 0
    73                           
    74                           ;initializer for _ajuste
    75  002D04  01                 	db	1
    76                           
    77                           ;initializer for _nivel_backlight
    78  002D05  09                 	db	9
    79  0000                     _LATD	set	1217
    80  0000                     _OSCCON1	set	173
    81  0000                     _LATDbits	set	1217
    82  0000                     _LATFbits	set	1219
    83  0000                     _TRISBbits	set	1223
    84  0000                     _TRISCbits	set	1224
    85  0000                     _TRISD	set	1225
    86  0000                     _TRISFbits	set	1227
    87  0000                     _PORTD	set	1233
    88  0000                     _INTCON0bits	set	1238
    89  0000                     _OSCFRQ	set	177
    90  0000                     _OSCEN	set	179
    91  0000                     _RC1PPS	set	530
    92  0000                     _RC2PPS	set	531
    93  0000                     _INT0PPS	set	574
    94  0000                     _ANSELBbits	set	1032
    95  0000                     _ANSELCbits	set	1040
    96  0000                     _ANSELD	set	1048
    97  0000                     _ANSELFbits	set	1064
    98  0000                     _PIE1bits	set	1183
    99  0000                     _WPUBbits	set	1033
   100  0000                     _PIE6bits	set	1188
   101  0000                     _PIE10bits	set	1192
   102  0000                     _PIR1bits	set	1199
   103  0000                     _T2PR	set	803
   104  0000                     _INT2PPS	set	576
   105  0000                     _INT1PPS	set	575
   106  0000                     _T2CON	set	804
   107  0000                     _T2CLKCON	set	806
   108  0000                     _CCPR1L	set	832
   109  0000                     _CCPR1H	set	833
   110  0000                     _CCP1CON	set	834
   111  0000                     _CCPR2L	set	836
   112  0000                     _CCPR2H	set	837
   113  0000                     _CCP2CON	set	838
   114  0000                     _PIR6bits	set	1204
   115  0000                     _PIR10bits	set	1208
   116                           
   117                           	psect	smallconst
   118  002500                     __psmallconst:
   119                           	callstack 0
   120  002500  00                 	db	0
   121  002501                     STR_1:
   122  002501  4C                 	db	76	;'L'
   123  002502  61                 	db	97	;'a'
   124  002503  62                 	db	98	;'b'
   125  002504  6F                 	db	111	;'o'
   126  002505  72                 	db	114	;'r'
   127  002506  61                 	db	97	;'a'
   128  002507  74                 	db	116	;'t'
   129  002508  6F                 	db	111	;'o'
   130  002509  72                 	db	114	;'r'
   131  00250A  69                 	db	105	;'i'
   132  00250B  6F                 	db	111	;'o'
   133  00250C  20                 	db	32
   134  00250D  33                 	db	51	;'3'
   135  00250E  00                 	db	0
   136  00250F                     STR_2:
   137  00250F  52                 	db	82	;'R'
   138  002510  65                 	db	101	;'e'
   139  002511  74                 	db	116	;'t'
   140  002512  69                 	db	105	;'i'
   141  002513  72                 	db	114	;'r'
   142  002514  6F                 	db	111	;'o'
   143  002515  20                 	db	32
   144  002516  6D                 	db	109	;'m'
   145  002517  61                 	db	97	;'a'
   146  002518  73                 	db	115	;'s'
   147  002519  69                 	db	105	;'i'
   148  00251A  76                 	db	118	;'v'
   149  00251B  6F                 	db	111	;'o'
   150  00251C  00                 	db	0
   151  00251D  00                 	db	0	; dummy byte at the end
   152  0000                     
   153                           ; #config settings
   154                           
   155                           	psect	cinit
   156  002C56                     __pcinit:
   157                           	callstack 0
   158  002C56                     start_initialization:
   159                           	callstack 0
   160  002C56                     __initialization:
   161                           	callstack 0
   162                           
   163                           ; Initialize objects allocated to COMRAM (2 bytes)
   164                           ; load TBLPTR registers with __pidataCOMRAM
   165  002C56  0E04               	movlw	low __pidataCOMRAM
   166  002C58  6EF6               	movwf	tblptrl,c
   167  002C5A  0E2D               	movlw	high __pidataCOMRAM
   168  002C5C  6EF7               	movwf	tblptrh,c
   169  002C5E  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   170  002C60  6EF8               	movwf	tblptru,c
   171  002C62  0009               	tblrd		*+	;fetch initializer
   172  002C64  0061 F3D4  F511    	movff	tablat,__pdataCOMRAM
   173  002C6A  0009               	tblrd		*+	;fetch initializer
   174  002C6C  0061 F3D4  F512    	movff	tablat,__pdataCOMRAM+1
   175                           
   176                           ; Clear objects allocated to COMRAM (1 bytes)
   177  002C72  6A13               	clrf	__pbssCOMRAM& (0+255),c
   178                           
   179                           ;
   180                           ; Setup IVTBASE
   181                           ;
   182  002C74  0104               	movlb	4
   183  002C76  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
   184  002C78  6F5D               	movwf	93,b
   185  002C7A  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
   186  002C7C  6F5E               	movwf	94,b
   187  002C7E  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
   188  002C80  6F5F               	movwf	95,b
   189  002C82                     end_of_initialization:
   190                           	callstack 0
   191  002C82                     __end_of__initialization:
   192                           	callstack 0
   193  002C82  0100               	movlb	0
   194  002C84  EF16  F015         	goto	_main	;jump to C main() function
   195                           
   196                           	psect	bssCOMRAM
   197  000513                     __pbssCOMRAM:
   198                           	callstack 0
   199  000513                     _nivel_contraste:
   200                           	callstack 0
   201  000513                     	ds	1
   202                           
   203                           	psect	dataCOMRAM
   204  000511                     __pdataCOMRAM:
   205                           	callstack 0
   206  000511                     _ajuste:
   207                           	callstack 0
   208  000511                     	ds	1
   209  000512                     _nivel_backlight:
   210                           	callstack 0
   211  000512                     	ds	1
   212                           
   213                           	psect	cstackCOMRAM
   214  000501                     __pcstackCOMRAM:
   215                           	callstack 0
   216  000501                     ??_INT1_ISR:
   217  000501                     
   218                           ; 1 bytes @ 0x0
   219  000501                     	ds	2
   220  000503                     ??_INT2_ISR:
   221                           
   222                           ; 1 bytes @ 0x2
   223  000503                     	ds	2
   224  000505                     ?_strlen:
   225                           	callstack 0
   226  000505                     ENVIA_NIBBLE@dato:
   227                           	callstack 0
   228  000505                     LEER_LCD@aux:
   229                           	callstack 0
   230  000505                     strlen@s:
   231                           	callstack 0
   232                           
   233                           ; 2 bytes @ 0x4
   234  000505                     	ds	1
   235  000506                     ENVIA_CHAR@dato:
   236                           	callstack 0
   237  000506                     ENVIA_LCD_CMD@dato:
   238                           	callstack 0
   239                           
   240                           ; 1 bytes @ 0x5
   241  000506                     	ds	1
   242  000507                     ENVIA_CHAR@aux:
   243                           	callstack 0
   244  000507                     ENVIA_LCD_CMD@aux:
   245                           	callstack 0
   246  000507                     strlen@a:
   247                           	callstack 0
   248                           
   249                           ; 2 bytes @ 0x6
   250  000507                     	ds	1
   251  000508                     ??_LCD_CONFIG:
   252  000508                     POS_CURSOR@columna:
   253                           	callstack 0
   254  000508                     CURSOR_ONOFF@estado:
   255                           	callstack 0
   256                           
   257                           ; 1 bytes @ 0x7
   258  000508                     	ds	1
   259  000509                     ??_LCD_INIT:
   260  000509                     POS_CURSOR@fila:
   261                           	callstack 0
   262  000509                     ESCRIBE_MENSAJE2@cadena:
   263                           	callstack 0
   264                           
   265                           ; 2 bytes @ 0x8
   266  000509                     	ds	1
   267  00050A                     
   268                           ; 1 bytes @ 0x9
   269  00050A                     	ds	1
   270  00050B                     ??_ESCRIBE_MENSAJE2:
   271                           
   272                           ; 1 bytes @ 0xA
   273  00050B                     	ds	2
   274  00050D                     ESCRIBE_MENSAJE2@tam:
   275                           	callstack 0
   276                           
   277                           ; 1 bytes @ 0xC
   278  00050D                     	ds	1
   279  00050E                     ESCRIBE_MENSAJE2@i:
   280                           	callstack 0
   281                           
   282                           ; 1 bytes @ 0xD
   283  00050E                     	ds	1
   284  00050F                     ??_main:
   285                           
   286                           ; 1 bytes @ 0xE
   287  00050F                     	ds	2
   288                           
   289 ;;
   290 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   291 ;;
   292 ;; *************** function _main *****************
   293 ;; Defined at:
   294 ;;		line 65 in file "maincode.c"
   295 ;; Parameters:    Size  Location     Type
   296 ;;		None
   297 ;; Auto vars:     Size  Location     Type
   298 ;;		None
   299 ;; Return value:  Size  Location     Type
   300 ;;                  1    wreg      void 
   301 ;; Registers used:
   302 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   303 ;; Tracked objects:
   304 ;;		On entry : 0/0
   305 ;;		On exit  : 0/0
   306 ;;		Unchanged: 0/0
   307 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   308 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   309 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   310 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   311 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   312 ;;Total ram usage:        2 bytes
   313 ;; Hardware stack levels required when called: 6
   314 ;; This function calls:
   315 ;;		_ESCRIBE_MENSAJE2
   316 ;;		_POS_CURSOR
   317 ;;		_configuro
   318 ;; This function is called by:
   319 ;;		Startup code after reset
   320 ;; This function uses a non-reentrant model
   321 ;;
   322                           
   323                           	psect	text0
   324  002A2C                     __ptext0:
   325                           	callstack 0
   326  002A2C                     _main:
   327                           	callstack 121
   328  002A2C                     
   329                           ;maincode.c: 66:     configuro();
   330  002A2C  EC94  F014         	call	_configuro	;wreg free
   331  002A30                     l187:
   332                           
   333                           ;maincode.c: 68:         POS_CURSOR(1,0);
   334  002A30  0E00               	movlw	0
   335  002A32  6E08               	movwf	POS_CURSOR@columna^(0+1280),c
   336  002A34  0E01               	movlw	1
   337  002A36  ECC0  F015         	call	_POS_CURSOR
   338  002A3A                     
   339                           ;maincode.c: 69:         ESCRIBE_MENSAJE2("Laboratorio 3");
   340  002A3A  0E01               	movlw	low STR_1
   341  002A3C  6E09               	movwf	ESCRIBE_MENSAJE2@cadena^(0+1280),c
   342  002A3E  0E25               	movlw	high STR_1
   343  002A40  6E0A               	movwf	(ESCRIBE_MENSAJE2@cadena+1)^(0+1280),c
   344  002A42  EC76  F015         	call	_ESCRIBE_MENSAJE2	;wreg free
   345  002A46                     
   346                           ;maincode.c: 70:         POS_CURSOR(2,0);
   347  002A46  0E00               	movlw	0
   348  002A48  6E08               	movwf	POS_CURSOR@columna^(0+1280),c
   349  002A4A  0E02               	movlw	2
   350  002A4C  ECC0  F015         	call	_POS_CURSOR
   351                           
   352                           ;maincode.c: 71:         ESCRIBE_MENSAJE2("Retiro masivo");
   353  002A50  0E0F               	movlw	low STR_2
   354  002A52  6E09               	movwf	ESCRIBE_MENSAJE2@cadena^(0+1280),c
   355  002A54  0E25               	movlw	high STR_2
   356  002A56  6E0A               	movwf	(ESCRIBE_MENSAJE2@cadena+1)^(0+1280),c
   357  002A58  EC76  F015         	call	_ESCRIBE_MENSAJE2	;wreg free
   358  002A5C                     
   359                           ;maincode.c: 72:         LATFbits.LATF3 = 0;
   360  002A5C  96C3               	bcf	195,3,c	;volatile
   361  002A5E                     
   362                           ;maincode.c: 73:         _delay((unsigned long)((100)*(16000000UL/4000.0)));
   363  002A5E  0E03               	movlw	3
   364  002A60  6E10               	movwf	(??_main+1)^(0+1280),c
   365  002A62  0E08               	movlw	8
   366  002A64  6E0F               	movwf	??_main^(0+1280),c
   367  002A66  0E77               	movlw	119
   368  002A68                     u217:
   369  002A68  2EE8               	decfsz	wreg,f,c
   370  002A6A  D7FE               	bra	u217
   371  002A6C  2E0F               	decfsz	??_main^(0+1280),f,c
   372  002A6E  D7FC               	bra	u217
   373  002A70  2E10               	decfsz	(??_main+1)^(0+1280),f,c
   374  002A72  D7FA               	bra	u217
   375  002A74  F000               	nop	
   376  002A76                     
   377                           ;maincode.c: 74:         LATFbits.LATF3 = 1;
   378  002A76  86C3               	bsf	195,3,c	;volatile
   379  002A78                     
   380                           ;maincode.c: 75:         _delay((unsigned long)((100)*(16000000UL/4000.0)));
   381  002A78  0E03               	movlw	3
   382  002A7A  6E10               	movwf	(??_main+1)^(0+1280),c
   383  002A7C  0E08               	movlw	8
   384  002A7E  6E0F               	movwf	??_main^(0+1280),c
   385  002A80  0E77               	movlw	119
   386  002A82                     u227:
   387  002A82  2EE8               	decfsz	wreg,f,c
   388  002A84  D7FE               	bra	u227
   389  002A86  2E0F               	decfsz	??_main^(0+1280),f,c
   390  002A88  D7FC               	bra	u227
   391  002A8A  2E10               	decfsz	(??_main+1)^(0+1280),f,c
   392  002A8C  D7FA               	bra	u227
   393  002A8E  F000               	nop	
   394  002A90  EF18  F015         	goto	l187
   395  002A94  EF81  F000         	goto	start
   396  002A98                     __end_of_main:
   397                           	callstack 0
   398                           
   399 ;; *************** function _configuro *****************
   400 ;; Defined at:
   401 ;;		line 12 in file "maincode.c"
   402 ;; Parameters:    Size  Location     Type
   403 ;;		None
   404 ;; Auto vars:     Size  Location     Type
   405 ;;		None
   406 ;; Return value:  Size  Location     Type
   407 ;;                  1    wreg      void 
   408 ;; Registers used:
   409 ;;		wreg, status,2, status,0, cstack
   410 ;; Tracked objects:
   411 ;;		On entry : 0/0
   412 ;;		On exit  : 0/0
   413 ;;		Unchanged: 0/0
   414 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   415 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   416 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   417 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   418 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   419 ;;Total ram usage:        0 bytes
   420 ;; Hardware stack levels used: 1
   421 ;; Hardware stack levels required when called: 5
   422 ;; This function calls:
   423 ;;		_LCD_INIT
   424 ;; This function is called by:
   425 ;;		_main
   426 ;; This function uses a non-reentrant model
   427 ;;
   428                           
   429                           	psect	text1
   430  002928                     __ptext1:
   431                           	callstack 0
   432  002928                     _configuro:
   433                           	callstack 121
   434  002928                     
   435                           ;maincode.c: 14:     OSCCON1 = 0x60;
   436  002928  0E60               	movlw	96
   437  00292A  0100               	movlb	0	; () banked
   438  00292C  6FAD               	movwf	173,b	;volatile
   439                           
   440                           ;maincode.c: 15:     OSCFRQ = 0x05;
   441  00292E  0E05               	movlw	5
   442  002930  6FB1               	movwf	177,b	;volatile
   443                           
   444                           ;maincode.c: 16:     OSCEN = 0x40;
   445  002932  0E40               	movlw	64
   446  002934  6FB3               	movwf	179,b	;volatile
   447                           
   448                           ;maincode.c: 18:     TRISD = 0x00;
   449  002936  0E00               	movlw	0
   450  002938  6EC9               	movwf	201,c	;volatile
   451                           
   452                           ;maincode.c: 19:     ANSELD = 0x00;
   453  00293A  0E00               	movlw	0
   454  00293C  0104               	movlb	4	; () banked
   455  00293E  6F18               	movwf	24,b	;volatile
   456  002940                     
   457                           ; BSR set to: 4
   458                           ;maincode.c: 20:     TRISCbits.TRISC1 = 0;
   459  002940  92C8               	bcf	200,1,c	;volatile
   460  002942                     
   461                           ; BSR set to: 4
   462                           ;maincode.c: 21:     ANSELCbits.ANSELC1 = 0;
   463  002942  9310               	bcf	16,1,b	;volatile
   464  002944                     
   465                           ; BSR set to: 4
   466                           ;maincode.c: 22:     TRISCbits.TRISC2 = 0;
   467  002944  94C8               	bcf	200,2,c	;volatile
   468  002946                     
   469                           ; BSR set to: 4
   470                           ;maincode.c: 23:     ANSELCbits.ANSELC2 = 0;
   471  002946  9510               	bcf	16,2,b	;volatile
   472  002948                     
   473                           ; BSR set to: 4
   474                           ;maincode.c: 24:     TRISBbits.TRISB4 = 1;
   475  002948  88C7               	bsf	199,4,c	;volatile
   476  00294A                     
   477                           ; BSR set to: 4
   478                           ;maincode.c: 25:     ANSELBbits.ANSELB4 = 0;
   479  00294A  9908               	bcf	8,4,b	;volatile
   480  00294C                     
   481                           ; BSR set to: 4
   482                           ;maincode.c: 26:     WPUBbits.WPUB4 = 1;
   483  00294C  8909               	bsf	9,4,b	;volatile
   484  00294E                     
   485                           ; BSR set to: 4
   486                           ;maincode.c: 27:     TRISBbits.TRISB1 = 1;
   487  00294E  82C7               	bsf	199,1,c	;volatile
   488  002950                     
   489                           ; BSR set to: 4
   490                           ;maincode.c: 28:     ANSELBbits.ANSELB1 = 0;
   491  002950  9308               	bcf	8,1,b	;volatile
   492  002952                     
   493                           ; BSR set to: 4
   494                           ;maincode.c: 29:     WPUBbits.WPUB1 = 1;
   495  002952  8309               	bsf	9,1,b	;volatile
   496  002954                     
   497                           ; BSR set to: 4
   498                           ;maincode.c: 30:     TRISBbits.TRISB2 = 1;
   499  002954  84C7               	bsf	199,2,c	;volatile
   500  002956                     
   501                           ; BSR set to: 4
   502                           ;maincode.c: 31:     ANSELBbits.ANSELB2 = 0;
   503  002956  9508               	bcf	8,2,b	;volatile
   504  002958                     
   505                           ; BSR set to: 4
   506                           ;maincode.c: 32:     WPUBbits.WPUB2 = 1;
   507  002958  8509               	bsf	9,2,b	;volatile
   508  00295A                     
   509                           ; BSR set to: 4
   510                           ;maincode.c: 35:     PIE1bits.INT0IE = 1;
   511  00295A  809F               	bsf	159,0,c	;volatile
   512  00295C                     
   513                           ; BSR set to: 4
   514                           ;maincode.c: 36:     PIE6bits.INT1IE = 1;
   515  00295C  80A4               	bsf	164,0,c	;volatile
   516  00295E                     
   517                           ; BSR set to: 4
   518                           ;maincode.c: 37:     PIE10bits.INT2IE = 1;
   519  00295E  80A8               	bsf	168,0,c	;volatile
   520  002960                     
   521                           ; BSR set to: 4
   522                           ;maincode.c: 38:     INTCON0bits.INT0EDG = 0;
   523  002960  90D6               	bcf	214,0,c	;volatile
   524  002962                     
   525                           ; BSR set to: 4
   526                           ;maincode.c: 39:     INTCON0bits.INT1EDG = 0;
   527  002962  92D6               	bcf	214,1,c	;volatile
   528  002964                     
   529                           ; BSR set to: 4
   530                           ;maincode.c: 40:     INTCON0bits.INT2EDG = 0;
   531  002964  94D6               	bcf	214,2,c	;volatile
   532                           
   533                           ;maincode.c: 41:     INT0PPS = 0x0C;
   534  002966  0E0C               	movlw	12
   535  002968  0102               	movlb	2	; () banked
   536  00296A  6F3E               	movwf	62,b	;volatile
   537                           
   538                           ;maincode.c: 42:     INT1PPS = 0x09;
   539  00296C  0E09               	movlw	9
   540  00296E  6F3F               	movwf	63,b	;volatile
   541                           
   542                           ;maincode.c: 43:     INT2PPS = 0x0A;
   543  002970  0E0A               	movlw	10
   544  002972  6F40               	movwf	64,b	;volatile
   545                           
   546                           ;maincode.c: 45:     T2PR = 62;
   547  002974  0E3E               	movlw	62
   548  002976  0103               	movlb	3	; () banked
   549  002978  6F23               	movwf	35,b	;volatile
   550                           
   551                           ;maincode.c: 46:     RC2PPS = 0x15;
   552  00297A  0E15               	movlw	21
   553  00297C  0102               	movlb	2	; () banked
   554  00297E  6F13               	movwf	19,b	;volatile
   555                           
   556                           ;maincode.c: 47:     CCP1CON = 0x9C;
   557  002980  0E9C               	movlw	156
   558  002982  0103               	movlb	3	; () banked
   559  002984  6F42               	movwf	66,b	;volatile
   560                           
   561                           ;maincode.c: 48:     CCPR1H = 0;
   562  002986  0E00               	movlw	0
   563  002988  6F41               	movwf	65,b	;volatile
   564                           
   565                           ;maincode.c: 49:     CCPR1L = 0;
   566  00298A  0E00               	movlw	0
   567  00298C  6F40               	movwf	64,b	;volatile
   568                           
   569                           ;maincode.c: 50:     T2CLKCON = 0x01;
   570  00298E  0E01               	movlw	1
   571  002990  6F26               	movwf	38,b	;volatile
   572                           
   573                           ;maincode.c: 51:     T2CON = 0xC0;
   574  002992  0EC0               	movlw	192
   575  002994  6F24               	movwf	36,b	;volatile
   576                           
   577                           ;maincode.c: 53:     RC1PPS = 0x16;
   578  002996  0E16               	movlw	22
   579  002998  0102               	movlb	2	; () banked
   580  00299A  6F12               	movwf	18,b	;volatile
   581                           
   582                           ;maincode.c: 54:     CCP2CON = 0x9C;
   583  00299C  0E9C               	movlw	156
   584  00299E  0103               	movlb	3	; () banked
   585  0029A0  6F46               	movwf	70,b	;volatile
   586                           
   587                           ;maincode.c: 55:     CCPR2H = 62;
   588  0029A2  0E3E               	movlw	62
   589  0029A4  6F45               	movwf	69,b	;volatile
   590                           
   591                           ;maincode.c: 56:     CCPR2L = 0;
   592  0029A6  0E00               	movlw	0
   593  0029A8  6F44               	movwf	68,b	;volatile
   594  0029AA                     
   595                           ; BSR set to: 3
   596                           ;maincode.c: 58:     LCD_INIT();
   597  0029AA  ECDD  F015         	call	_LCD_INIT	;wreg free
   598  0029AE                     
   599                           ;maincode.c: 60:     TRISFbits.TRISF3 = 0;
   600  0029AE  96CB               	bcf	203,3,c	;volatile
   601  0029B0                     
   602                           ;maincode.c: 61:     ANSELFbits.ANSELF3 = 0;
   603  0029B0  0104               	movlb	4	; () banked
   604  0029B2  9728               	bcf	40,3,b	;volatile
   605  0029B4                     
   606                           ; BSR set to: 4
   607  0029B4  0012               	return		;funcret
   608  0029B6                     __end_of_configuro:
   609                           	callstack 0
   610                           
   611 ;; *************** function _LCD_INIT *****************
   612 ;; Defined at:
   613 ;;		line 184 in file "LCD.c"
   614 ;; Parameters:    Size  Location     Type
   615 ;;		None
   616 ;; Auto vars:     Size  Location     Type
   617 ;;		None
   618 ;; Return value:  Size  Location     Type
   619 ;;                  1    wreg      void 
   620 ;; Registers used:
   621 ;;		wreg, status,2, status,0, cstack
   622 ;; Tracked objects:
   623 ;;		On entry : 0/0
   624 ;;		On exit  : 0/0
   625 ;;		Unchanged: 0/0
   626 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   627 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   628 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   629 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   630 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   631 ;;Total ram usage:        1 bytes
   632 ;; Hardware stack levels used: 1
   633 ;; Hardware stack levels required when called: 4
   634 ;; This function calls:
   635 ;;		_BORRAR_LCD
   636 ;;		_CURSOR_HOME
   637 ;;		_CURSOR_ONOFF
   638 ;;		_LCD_CONFIG
   639 ;; This function is called by:
   640 ;;		_configuro
   641 ;; This function uses a non-reentrant model
   642 ;;
   643                           
   644                           	psect	text2
   645  002BBA                     __ptext2:
   646                           	callstack 0
   647  002BBA                     _LCD_INIT:
   648                           	callstack 121
   649  002BBA                     
   650                           ;LCD.c: 185:     _delay((unsigned long)((15)*(16000000UL/4000.0)));
   651  002BBA  0E4E               	movlw	78
   652  002BBC  6E09               	movwf	??_LCD_INIT^(0+1280),c
   653  002BBE  0EEB               	movlw	235
   654  002BC0                     u237:
   655  002BC0  2EE8               	decfsz	wreg,f,c
   656  002BC2  D7FE               	bra	u237
   657  002BC4  2E09               	decfsz	??_LCD_INIT^(0+1280),f,c
   658  002BC6  D7FC               	bra	u237
   659  002BC8  F000               	nop	
   660  002BCA                     
   661                           ;LCD.c: 186:     LCD_CONFIG();
   662  002BCA  EC4C  F015         	call	_LCD_CONFIG	;wreg free
   663  002BCE                     
   664                           ;LCD.c: 187:     _delay((unsigned long)((15)*(16000000UL/4000.0)));
   665  002BCE  0E4E               	movlw	78
   666  002BD0  6E09               	movwf	??_LCD_INIT^(0+1280),c
   667  002BD2  0EEB               	movlw	235
   668  002BD4                     u247:
   669  002BD4  2EE8               	decfsz	wreg,f,c
   670  002BD6  D7FE               	bra	u247
   671  002BD8  2E09               	decfsz	??_LCD_INIT^(0+1280),f,c
   672  002BDA  D7FC               	bra	u247
   673  002BDC  F000               	nop	
   674                           
   675                           ;LCD.c: 188:     BORRAR_LCD();
   676  002BDE  EC7E  F016         	call	_BORRAR_LCD	;wreg free
   677                           
   678                           ;LCD.c: 189:     CURSOR_HOME();
   679  002BE2  EC7A  F016         	call	_CURSOR_HOME	;wreg free
   680                           
   681                           ;LCD.c: 190:     CURSOR_ONOFF(1);
   682  002BE6  0E01               	movlw	1
   683  002BE8  EC44  F016         	call	_CURSOR_ONOFF
   684  002BEC  0012               	return		;funcret
   685  002BEE                     __end_of_LCD_INIT:
   686                           	callstack 0
   687                           
   688 ;; *************** function _LCD_CONFIG *****************
   689 ;; Defined at:
   690 ;;		line 101 in file "LCD.c"
   691 ;; Parameters:    Size  Location     Type
   692 ;;		None
   693 ;; Auto vars:     Size  Location     Type
   694 ;;		None
   695 ;; Return value:  Size  Location     Type
   696 ;;                  1    wreg      void 
   697 ;; Registers used:
   698 ;;		wreg, status,2, status,0, cstack
   699 ;; Tracked objects:
   700 ;;		On entry : 0/0
   701 ;;		On exit  : 0/0
   702 ;;		Unchanged: 0/0
   703 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   704 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   705 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   706 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   707 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   708 ;;Total ram usage:        1 bytes
   709 ;; Hardware stack levels used: 1
   710 ;; Hardware stack levels required when called: 3
   711 ;; This function calls:
   712 ;;		_ENVIA_LCD_CMD
   713 ;;		_ENVIA_NIBBLE
   714 ;; This function is called by:
   715 ;;		_LCD_INIT
   716 ;; This function uses a non-reentrant model
   717 ;;
   718                           
   719                           	psect	text3
   720  002A98                     __ptext3:
   721                           	callstack 0
   722  002A98                     _LCD_CONFIG:
   723                           	callstack 121
   724  002A98                     
   725                           ;LCD.c: 103:  LATDbits.LATD0 = 0;
   726  002A98  90C1               	bcf	193,0,c	;volatile
   727                           
   728                           ;LCD.c: 104:  LATDbits.LATD1 = 0;
   729  002A9A  92C1               	bcf	193,1,c	;volatile
   730  002A9C                     
   731                           ;LCD.c: 105:  ENVIA_NIBBLE(0x30);
   732  002A9C  0E30               	movlw	48
   733  002A9E  EC6C  F016         	call	_ENVIA_NIBBLE
   734  002AA2                     
   735                           ;LCD.c: 106:     _delay((unsigned long)((2)*(16000000UL/4000.0)));
   736  002AA2  0E0B               	movlw	11
   737  002AA4  6E08               	movwf	??_LCD_CONFIG^(0+1280),c
   738  002AA6  0E62               	movlw	98
   739  002AA8                     u257:
   740  002AA8  2EE8               	decfsz	wreg,f,c
   741  002AAA  D7FE               	bra	u257
   742  002AAC  2E08               	decfsz	??_LCD_CONFIG^(0+1280),f,c
   743  002AAE  D7FC               	bra	u257
   744  002AB0  D000               	nop2	
   745  002AB2                     
   746                           ;LCD.c: 107:  ENVIA_NIBBLE(0x30);
   747  002AB2  0E30               	movlw	48
   748  002AB4  EC6C  F016         	call	_ENVIA_NIBBLE
   749                           
   750                           ;LCD.c: 108:     _delay((unsigned long)((100)*(16000000UL/4000000.0)));
   751  002AB8  0E85               	movlw	133
   752  002ABA                     u267:
   753  002ABA  2EE8               	decfsz	wreg,f,c
   754  002ABC  D7FE               	bra	u267
   755  002ABE  F000               	nop	
   756  002AC0                     
   757                           ;LCD.c: 109:     ENVIA_NIBBLE(0x30);
   758  002AC0  0E30               	movlw	48
   759  002AC2  EC6C  F016         	call	_ENVIA_NIBBLE
   760  002AC6                     
   761                           ;LCD.c: 110:  ENVIA_NIBBLE(0x20);
   762  002AC6  0E20               	movlw	32
   763  002AC8  EC6C  F016         	call	_ENVIA_NIBBLE
   764  002ACC                     
   765                           ;LCD.c: 111:  ENVIA_LCD_CMD(0x01);
   766  002ACC  0E01               	movlw	1
   767  002ACE  ECF7  F015         	call	_ENVIA_LCD_CMD
   768  002AD2                     
   769                           ;LCD.c: 112:  ENVIA_LCD_CMD(0x28);
   770  002AD2  0E28               	movlw	40
   771  002AD4  ECF7  F015         	call	_ENVIA_LCD_CMD
   772  002AD8                     
   773                           ;LCD.c: 113:  ENVIA_LCD_CMD(0x0F);
   774  002AD8  0E0F               	movlw	15
   775  002ADA  ECF7  F015         	call	_ENVIA_LCD_CMD
   776  002ADE                     
   777                           ;LCD.c: 114:  ENVIA_LCD_CMD(0x06);
   778  002ADE  0E06               	movlw	6
   779  002AE0  ECF7  F015         	call	_ENVIA_LCD_CMD
   780  002AE4                     
   781                           ;LCD.c: 115:  ENVIA_LCD_CMD(0x01);
   782  002AE4  0E01               	movlw	1
   783  002AE6  ECF7  F015         	call	_ENVIA_LCD_CMD
   784  002AEA  0012               	return		;funcret
   785  002AEC                     __end_of_LCD_CONFIG:
   786                           	callstack 0
   787                           
   788 ;; *************** function _CURSOR_ONOFF *****************
   789 ;; Defined at:
   790 ;;		line 54 in file "LCD.c"
   791 ;; Parameters:    Size  Location     Type
   792 ;;  estado          1    wreg     unsigned char 
   793 ;; Auto vars:     Size  Location     Type
   794 ;;  estado          1    7[COMRAM] unsigned char 
   795 ;; Return value:  Size  Location     Type
   796 ;;                  1    wreg      void 
   797 ;; Registers used:
   798 ;;		wreg, status,2, status,0, cstack
   799 ;; Tracked objects:
   800 ;;		On entry : 0/0
   801 ;;		On exit  : 0/0
   802 ;;		Unchanged: 0/0
   803 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   804 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   805 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   806 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   807 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   808 ;;Total ram usage:        1 bytes
   809 ;; Hardware stack levels used: 1
   810 ;; Hardware stack levels required when called: 3
   811 ;; This function calls:
   812 ;;		_ENVIA_LCD_CMD
   813 ;; This function is called by:
   814 ;;		_LCD_INIT
   815 ;; This function uses a non-reentrant model
   816 ;;
   817                           
   818                           	psect	text4
   819  002C88                     __ptext4:
   820                           	callstack 0
   821  002C88                     _CURSOR_ONOFF:
   822                           	callstack 121
   823                           
   824                           ;incstack = 0
   825                           ;CURSOR_ONOFF@estado stored from wreg
   826  002C88  6E08               	movwf	CURSOR_ONOFF@estado^(0+1280),c
   827  002C8A                     
   828                           ;LCD.c: 54: void CURSOR_ONOFF(unsigned char estado);LCD.c: 55: {;LCD.c: 56:  if(estado =
      +                          = 0) ENVIA_LCD_CMD(0x0E);
   829  002C8A  5008               	movf	CURSOR_ONOFF@estado^(0+1280),w,c
   830  002C8C  A4D8               	btfss	status,2,c
   831  002C8E  EF4B  F016         	goto	u21
   832  002C92  EF4D  F016         	goto	u20
   833  002C96                     u21:
   834  002C96  EF50  F016         	goto	l1015
   835  002C9A                     u20:
   836  002C9A  0E0E               	movlw	14
   837  002C9C  ECF7  F015         	call	_ENVIA_LCD_CMD
   838  002CA0                     l1015:
   839                           
   840                           ;LCD.c: 57:  if(estado == 1) ENVIA_LCD_CMD(0x0C);
   841  002CA0  0408               	decf	CURSOR_ONOFF@estado^(0+1280),w,c
   842  002CA2  A4D8               	btfss	status,2,c
   843  002CA4  EF56  F016         	goto	u31
   844  002CA8  EF58  F016         	goto	u30
   845  002CAC                     u31:
   846  002CAC  EF5B  F016         	goto	l56
   847  002CB0                     u30:
   848  002CB0  0E0C               	movlw	12
   849  002CB2  ECF7  F015         	call	_ENVIA_LCD_CMD
   850  002CB6                     l56:
   851  002CB6  0012               	return		;funcret
   852  002CB8                     __end_of_CURSOR_ONOFF:
   853                           	callstack 0
   854                           
   855 ;; *************** function _CURSOR_HOME *****************
   856 ;; Defined at:
   857 ;;		line 29 in file "LCD.c"
   858 ;; Parameters:    Size  Location     Type
   859 ;;		None
   860 ;; Auto vars:     Size  Location     Type
   861 ;;		None
   862 ;; Return value:  Size  Location     Type
   863 ;;                  1    wreg      void 
   864 ;; Registers used:
   865 ;;		wreg, status,2, status,0, cstack
   866 ;; Tracked objects:
   867 ;;		On entry : 0/0
   868 ;;		On exit  : 0/0
   869 ;;		Unchanged: 0/0
   870 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   871 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   872 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   873 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   874 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   875 ;;Total ram usage:        0 bytes
   876 ;; Hardware stack levels used: 1
   877 ;; Hardware stack levels required when called: 3
   878 ;; This function calls:
   879 ;;		_ENVIA_LCD_CMD
   880 ;; This function is called by:
   881 ;;		_LCD_INIT
   882 ;; This function uses a non-reentrant model
   883 ;;
   884                           
   885                           	psect	text5
   886  002CF4                     __ptext5:
   887                           	callstack 0
   888  002CF4                     _CURSOR_HOME:
   889                           	callstack 121
   890  002CF4                     
   891                           ;LCD.c: 31:  ENVIA_LCD_CMD(0x02);
   892  002CF4  0E02               	movlw	2
   893  002CF6  ECF7  F015         	call	_ENVIA_LCD_CMD
   894  002CFA  0012               	return		;funcret
   895  002CFC                     __end_of_CURSOR_HOME:
   896                           	callstack 0
   897                           
   898 ;; *************** function _BORRAR_LCD *****************
   899 ;; Defined at:
   900 ;;		line 96 in file "LCD.c"
   901 ;; Parameters:    Size  Location     Type
   902 ;;		None
   903 ;; Auto vars:     Size  Location     Type
   904 ;;		None
   905 ;; Return value:  Size  Location     Type
   906 ;;                  1    wreg      void 
   907 ;; Registers used:
   908 ;;		wreg, status,2, status,0, cstack
   909 ;; Tracked objects:
   910 ;;		On entry : 0/0
   911 ;;		On exit  : 0/0
   912 ;;		Unchanged: 0/0
   913 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   914 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   915 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   916 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   917 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   918 ;;Total ram usage:        0 bytes
   919 ;; Hardware stack levels used: 1
   920 ;; Hardware stack levels required when called: 3
   921 ;; This function calls:
   922 ;;		_ENVIA_LCD_CMD
   923 ;; This function is called by:
   924 ;;		_LCD_INIT
   925 ;; This function uses a non-reentrant model
   926 ;;
   927                           
   928                           	psect	text6
   929  002CFC                     __ptext6:
   930                           	callstack 0
   931  002CFC                     _BORRAR_LCD:
   932                           	callstack 121
   933  002CFC                     
   934                           ;LCD.c: 98:  ENVIA_LCD_CMD(0x01);
   935  002CFC  0E01               	movlw	1
   936  002CFE  ECF7  F015         	call	_ENVIA_LCD_CMD
   937  002D02  0012               	return		;funcret
   938  002D04                     __end_of_BORRAR_LCD:
   939                           	callstack 0
   940                           
   941 ;; *************** function _POS_CURSOR *****************
   942 ;; Defined at:
   943 ;;		line 5 in file "LCD.c"
   944 ;; Parameters:    Size  Location     Type
   945 ;;  fila            1    wreg     unsigned char 
   946 ;;  columna         1    7[COMRAM] unsigned char 
   947 ;; Auto vars:     Size  Location     Type
   948 ;;  fila            1    8[COMRAM] unsigned char 
   949 ;; Return value:  Size  Location     Type
   950 ;;                  1    wreg      void 
   951 ;; Registers used:
   952 ;;		wreg, status,2, status,0, cstack
   953 ;; Tracked objects:
   954 ;;		On entry : 0/0
   955 ;;		On exit  : 0/0
   956 ;;		Unchanged: 0/0
   957 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   958 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   959 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   960 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   961 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   962 ;;Total ram usage:        2 bytes
   963 ;; Hardware stack levels used: 1
   964 ;; Hardware stack levels required when called: 3
   965 ;; This function calls:
   966 ;;		_ENVIA_LCD_CMD
   967 ;; This function is called by:
   968 ;;		_main
   969 ;; This function uses a non-reentrant model
   970 ;;
   971                           
   972                           	psect	text7
   973  002B80                     __ptext7:
   974                           	callstack 0
   975  002B80                     _POS_CURSOR:
   976                           	callstack 123
   977                           
   978                           ;incstack = 0
   979                           ;POS_CURSOR@fila stored from wreg
   980  002B80  6E09               	movwf	POS_CURSOR@fila^(0+1280),c
   981  002B82                     
   982                           ;LCD.c: 5: void POS_CURSOR(unsigned char fila,unsigned char columna);LCD.c: 6: {;LCD.c: 
      +                          7:  if(fila == 1)
   983  002B82  0409               	decf	POS_CURSOR@fila^(0+1280),w,c
   984  002B84  A4D8               	btfss	status,2,c
   985  002B86  EFC7  F015         	goto	u181
   986  002B8A  EFC9  F015         	goto	u180
   987  002B8E                     u181:
   988  002B8E  EFCF  F015         	goto	l1435
   989  002B92                     u180:
   990  002B92                     
   991                           ;LCD.c: 8:  {;LCD.c: 9:   ENVIA_LCD_CMD(0x80+columna);
   992  002B92  5008               	movf	POS_CURSOR@columna^(0+1280),w,c
   993  002B94  0F80               	addlw	128
   994  002B96  ECF7  F015         	call	_ENVIA_LCD_CMD
   995                           
   996                           ;LCD.c: 10:  }
   997  002B9A  EFDC  F015         	goto	l26
   998  002B9E                     l1435:
   999  002B9E  0E02               	movlw	2
  1000  002BA0  1809               	xorwf	POS_CURSOR@fila^(0+1280),w,c
  1001  002BA2  A4D8               	btfss	status,2,c
  1002  002BA4  EFD6  F015         	goto	u191
  1003  002BA8  EFD8  F015         	goto	u190
  1004  002BAC                     u191:
  1005  002BAC  EFDC  F015         	goto	l26
  1006  002BB0                     u190:
  1007  002BB0                     
  1008                           ;LCD.c: 12:  {;LCD.c: 13:   ENVIA_LCD_CMD(0xC0+columna);
  1009  002BB0  5008               	movf	POS_CURSOR@columna^(0+1280),w,c
  1010  002BB2  0FC0               	addlw	192
  1011  002BB4  ECF7  F015         	call	_ENVIA_LCD_CMD
  1012  002BB8                     l26:
  1013  002BB8  0012               	return		;funcret
  1014  002BBA                     __end_of_POS_CURSOR:
  1015                           	callstack 0
  1016                           
  1017 ;; *************** function _ENVIA_LCD_CMD *****************
  1018 ;; Defined at:
  1019 ;;		line 128 in file "LCD.c"
  1020 ;; Parameters:    Size  Location     Type
  1021 ;;  dato            1    wreg     unsigned char 
  1022 ;; Auto vars:     Size  Location     Type
  1023 ;;  dato            1    5[COMRAM] unsigned char 
  1024 ;;  aux             1    6[COMRAM] unsigned char 
  1025 ;; Return value:  Size  Location     Type
  1026 ;;                  1    wreg      void 
  1027 ;; Registers used:
  1028 ;;		wreg, status,2, status,0, cstack
  1029 ;; Tracked objects:
  1030 ;;		On entry : 0/0
  1031 ;;		On exit  : 0/0
  1032 ;;		Unchanged: 0/0
  1033 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1034 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1035 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1036 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1037 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1038 ;;Total ram usage:        2 bytes
  1039 ;; Hardware stack levels used: 1
  1040 ;; Hardware stack levels required when called: 2
  1041 ;; This function calls:
  1042 ;;		_ENVIA_NIBBLE
  1043 ;;		_LEER_LCD
  1044 ;; This function is called by:
  1045 ;;		_POS_CURSOR
  1046 ;;		_CURSOR_HOME
  1047 ;;		_CURSOR_ONOFF
  1048 ;;		_BORRAR_LCD
  1049 ;;		_LCD_CONFIG
  1050 ;;		_BLINK_CURSOR
  1051 ;;		_DISPLAY_ONOFF
  1052 ;;		_CURSOR_SHIFTLEFT
  1053 ;;		_CURSOR_SHIFTRIGHT
  1054 ;;		_DISPLAY_SHIFTLEFT
  1055 ;;		_DISPLAY_SHIFTRIGHT
  1056 ;;		_GENERACARACTER
  1057 ;; This function uses a non-reentrant model
  1058 ;;
  1059                           
  1060                           	psect	text8
  1061  002BEE                     __ptext8:
  1062                           	callstack 0
  1063  002BEE                     _ENVIA_LCD_CMD:
  1064                           	callstack 121
  1065                           
  1066                           ;incstack = 0
  1067                           ;ENVIA_LCD_CMD@dato stored from wreg
  1068  002BEE  6E06               	movwf	ENVIA_LCD_CMD@dato^(0+1280),c
  1069  002BF0                     
  1070                           ;LCD.c: 128: void ENVIA_LCD_CMD(unsigned char dato);LCD.c: 129: {;LCD.c: 130:  unsigned 
      +                          char aux;;LCD.c: 131:  LATDbits.LATD0 = 0;
  1071  002BF0  90C1               	bcf	193,0,c	;volatile
  1072  002BF2                     
  1073                           ;LCD.c: 132:  LEER_LCD();
  1074  002BF2  ECDB  F014         	call	_LEER_LCD	;wreg free
  1075  002BF6                     
  1076                           ;LCD.c: 133:  TRISD = 0b00000000;
  1077  002BF6  0E00               	movlw	0
  1078  002BF8  6EC9               	movwf	201,c	;volatile
  1079  002BFA                     
  1080                           ;LCD.c: 134:     _delay((unsigned long)((100)*(16000000UL/4000000.0)));
  1081  002BFA  0E85               	movlw	133
  1082  002BFC                     u277:
  1083  002BFC  2EE8               	decfsz	wreg,f,c
  1084  002BFE  D7FE               	bra	u277
  1085  002C00  F000               	nop	
  1086  002C02                     
  1087                           ;LCD.c: 135:     LATDbits.LATD1 = 0;
  1088  002C02  92C1               	bcf	193,1,c	;volatile
  1089  002C04                     
  1090                           ;LCD.c: 136:  LATDbits.LATD2 = 0;
  1091  002C04  94C1               	bcf	193,2,c	;volatile
  1092  002C06                     
  1093                           ;LCD.c: 137:  LATDbits.LATD0 = 0;
  1094  002C06  90C1               	bcf	193,0,c	;volatile
  1095  002C08                     
  1096                           ;LCD.c: 138:  aux = dato & 0xF0;
  1097  002C08  5006               	movf	ENVIA_LCD_CMD@dato^(0+1280),w,c
  1098  002C0A  0BF0               	andlw	240
  1099  002C0C  6E07               	movwf	ENVIA_LCD_CMD@aux^(0+1280),c
  1100  002C0E                     
  1101                           ;LCD.c: 139:  ENVIA_NIBBLE(aux);
  1102  002C0E  5007               	movf	ENVIA_LCD_CMD@aux^(0+1280),w,c
  1103  002C10  EC6C  F016         	call	_ENVIA_NIBBLE
  1104  002C14                     
  1105                           ;LCD.c: 140:  aux = dato<<4;
  1106  002C14  3806               	swapf	ENVIA_LCD_CMD@dato^(0+1280),w,c
  1107  002C16  0BF0               	andlw	240
  1108  002C18  6E07               	movwf	ENVIA_LCD_CMD@aux^(0+1280),c
  1109  002C1A                     
  1110                           ;LCD.c: 141:  ENVIA_NIBBLE(aux);
  1111  002C1A  5007               	movf	ENVIA_LCD_CMD@aux^(0+1280),w,c
  1112  002C1C  EC6C  F016         	call	_ENVIA_NIBBLE
  1113  002C20  0012               	return		;funcret
  1114  002C22                     __end_of_ENVIA_LCD_CMD:
  1115                           	callstack 0
  1116                           
  1117 ;; *************** function _ESCRIBE_MENSAJE2 *****************
  1118 ;; Defined at:
  1119 ;;		line 69 in file "LCD.c"
  1120 ;; Parameters:    Size  Location     Type
  1121 ;;  cadena          2    8[COMRAM] PTR const unsigned char 
  1122 ;;		 -> STR_2(14), STR_1(14), 
  1123 ;; Auto vars:     Size  Location     Type
  1124 ;;  i               1   13[COMRAM] unsigned char 
  1125 ;;  tam             1   12[COMRAM] unsigned char 
  1126 ;; Return value:  Size  Location     Type
  1127 ;;                  1    wreg      void 
  1128 ;; Registers used:
  1129 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1130 ;; Tracked objects:
  1131 ;;		On entry : 0/0
  1132 ;;		On exit  : 0/0
  1133 ;;		Unchanged: 0/0
  1134 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1135 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1136 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1137 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1138 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1139 ;;Total ram usage:        6 bytes
  1140 ;; Hardware stack levels used: 1
  1141 ;; Hardware stack levels required when called: 3
  1142 ;; This function calls:
  1143 ;;		_ENVIA_CHAR
  1144 ;;		_strlen
  1145 ;; This function is called by:
  1146 ;;		_main
  1147 ;; This function uses a non-reentrant model
  1148 ;;
  1149                           
  1150                           	psect	text9
  1151  002AEC                     __ptext9:
  1152                           	callstack 0
  1153  002AEC                     _ESCRIBE_MENSAJE2:
  1154                           	callstack 123
  1155  002AEC                     
  1156                           ;LCD.c: 69: void ESCRIBE_MENSAJE2(const char *cadena);LCD.c: 70: {;LCD.c: 71:     unsign
      +                          ed char tam;;LCD.c: 72:     tam = strlen(cadena);
  1157  002AEC  C509  F505         	movff	ESCRIBE_MENSAJE2@cadena,strlen@s
  1158  002AF0  C50A  F506         	movff	ESCRIBE_MENSAJE2@cadena+1,strlen@s+1
  1159  002AF4  EC9F  F015         	call	_strlen	;wreg free
  1160  002AF8  5005               	movf	?_strlen^(0+1280),w,c
  1161  002AFA  6E0D               	movwf	ESCRIBE_MENSAJE2@tam^(0+1280),c
  1162  002AFC                     
  1163                           ;LCD.c: 74:  for(i = 0; i<tam; i++)
  1164  002AFC  0E00               	movlw	0
  1165  002AFE  6E0E               	movwf	ESCRIBE_MENSAJE2@i^(0+1280),c
  1166  002B00  EF95  F015         	goto	l1449
  1167  002B04                     l1445:
  1168                           
  1169                           ;LCD.c: 75:  {;LCD.c: 76:   ENVIA_CHAR(cadena[i]);
  1170  002B04  500E               	movf	ESCRIBE_MENSAJE2@i^(0+1280),w,c
  1171  002B06  2409               	addwf	ESCRIBE_MENSAJE2@cadena^(0+1280),w,c
  1172  002B08  6E0B               	movwf	??_ESCRIBE_MENSAJE2^(0+1280),c
  1173  002B0A  0E00               	movlw	0
  1174  002B0C  200A               	addwfc	(ESCRIBE_MENSAJE2@cadena+1)^(0+1280),w,c
  1175  002B0E  6E0C               	movwf	(??_ESCRIBE_MENSAJE2+1)^(0+1280),c
  1176  002B10  0061  F42C  F4F6   	movff	??_ESCRIBE_MENSAJE2,tblptrl
  1177  002B16  0061  F430  F4F7   	movff	??_ESCRIBE_MENSAJE2+1,tblptrh
  1178  002B1C                     	if	0	;tblptru may be non-zero
  1179  002B1C                     	endif
  1180  002B1C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1181  002B1C  0E00               	movlw	low (__mediumconst shr (0+16))
  1182  002B1E  6EF8               	movwf	tblptru,c
  1183  002B20                     	endif
  1184  002B20  0008               	tblrd		*
  1185  002B22  50F5               	movf	tablat,w,c
  1186  002B24  EC11  F016         	call	_ENVIA_CHAR
  1187  002B28                     
  1188                           ;LCD.c: 77:  }
  1189  002B28  2A0E               	incf	ESCRIBE_MENSAJE2@i^(0+1280),f,c
  1190  002B2A                     l1449:
  1191  002B2A  500D               	movf	ESCRIBE_MENSAJE2@tam^(0+1280),w,c
  1192  002B2C  5C0E               	subwf	ESCRIBE_MENSAJE2@i^(0+1280),w,c
  1193  002B2E  A0D8               	btfss	status,0,c
  1194  002B30  EF9C  F015         	goto	u201
  1195  002B34  EF9E  F015         	goto	u200
  1196  002B38                     u201:
  1197  002B38  EF82  F015         	goto	l1445
  1198  002B3C                     u200:
  1199  002B3C  0012               	return		;funcret
  1200  002B3E                     __end_of_ESCRIBE_MENSAJE2:
  1201                           	callstack 0
  1202                           
  1203 ;; *************** function _strlen *****************
  1204 ;; Defined at:
  1205 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\strlen.c"
  1206 ;; Parameters:    Size  Location     Type
  1207 ;;  s               2    4[COMRAM] PTR const unsigned char 
  1208 ;;		 -> STR_2(14), STR_1(14), 
  1209 ;; Auto vars:     Size  Location     Type
  1210 ;;  a               2    6[COMRAM] PTR const unsigned char 
  1211 ;;		 -> STR_2(14), STR_1(14), 
  1212 ;; Return value:  Size  Location     Type
  1213 ;;                  2    4[COMRAM] unsigned int 
  1214 ;; Registers used:
  1215 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  1216 ;; Tracked objects:
  1217 ;;		On entry : 0/0
  1218 ;;		On exit  : 0/0
  1219 ;;		Unchanged: 0/0
  1220 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1221 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1222 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1223 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1224 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1225 ;;Total ram usage:        4 bytes
  1226 ;; Hardware stack levels used: 1
  1227 ;; Hardware stack levels required when called: 1
  1228 ;; This function calls:
  1229 ;;		Nothing
  1230 ;; This function is called by:
  1231 ;;		_ESCRIBE_MENSAJE2
  1232 ;; This function uses a non-reentrant model
  1233 ;;
  1234                           
  1235                           	psect	text10
  1236  002B3E                     __ptext10:
  1237                           	callstack 0
  1238  002B3E                     _strlen:
  1239                           	callstack 124
  1240  002B3E  C505  F507         	movff	strlen@s,strlen@a
  1241  002B42  C506  F508         	movff	strlen@s+1,strlen@a+1
  1242  002B46  EFA7  F015         	goto	l1425
  1243  002B4A                     l1423:
  1244  002B4A  4A05               	infsnz	strlen@s^(0+1280),f,c
  1245  002B4C  2A06               	incf	(strlen@s+1)^(0+1280),f,c
  1246  002B4E                     l1425:
  1247  002B4E  0061  F414  F4F6   	movff	strlen@s,tblptrl
  1248  002B54  0061  F418  F4F7   	movff	strlen@s+1,tblptrh
  1249  002B5A                     	if	0	;tblptru may be non-zero
  1250  002B5A                     	endif
  1251  002B5A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1252  002B5A  0E00               	movlw	low (__mediumconst shr (0+16))
  1253  002B5C  6EF8               	movwf	tblptru,c
  1254  002B5E                     	endif
  1255  002B5E  0008               	tblrd		*
  1256  002B60  50F5               	movf	tablat,w,c
  1257  002B62  0900               	iorlw	0
  1258  002B64  A4D8               	btfss	status,2,c
  1259  002B66  EFB7  F015         	goto	u171
  1260  002B6A  EFB9  F015         	goto	u170
  1261  002B6E                     u171:
  1262  002B6E  EFA5  F015         	goto	l1423
  1263  002B72                     u170:
  1264  002B72  5007               	movf	strlen@a^(0+1280),w,c
  1265  002B74  5C05               	subwf	strlen@s^(0+1280),w,c
  1266  002B76  6E05               	movwf	?_strlen^(0+1280),c
  1267  002B78  5008               	movf	(strlen@a+1)^(0+1280),w,c
  1268  002B7A  5806               	subwfb	(strlen@s+1)^(0+1280),w,c
  1269  002B7C  6E06               	movwf	(?_strlen+1)^(0+1280),c
  1270  002B7E  0012               	return		;funcret
  1271  002B80                     __end_of_strlen:
  1272                           	callstack 0
  1273                           
  1274 ;; *************** function _ENVIA_CHAR *****************
  1275 ;; Defined at:
  1276 ;;		line 80 in file "LCD.c"
  1277 ;; Parameters:    Size  Location     Type
  1278 ;;  dato            1    wreg     unsigned char 
  1279 ;; Auto vars:     Size  Location     Type
  1280 ;;  dato            1    5[COMRAM] unsigned char 
  1281 ;;  aux             1    6[COMRAM] unsigned char 
  1282 ;; Return value:  Size  Location     Type
  1283 ;;                  1    wreg      void 
  1284 ;; Registers used:
  1285 ;;		wreg, status,2, status,0, cstack
  1286 ;; Tracked objects:
  1287 ;;		On entry : 0/0
  1288 ;;		On exit  : 0/0
  1289 ;;		Unchanged: 0/0
  1290 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1291 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1292 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1293 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1294 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1295 ;;Total ram usage:        2 bytes
  1296 ;; Hardware stack levels used: 1
  1297 ;; Hardware stack levels required when called: 2
  1298 ;; This function calls:
  1299 ;;		_ENVIA_NIBBLE
  1300 ;;		_LEER_LCD
  1301 ;; This function is called by:
  1302 ;;		_ESCRIBE_MENSAJE2
  1303 ;;		_ESCRIBE_MENSAJE
  1304 ;;		_GENERACARACTER
  1305 ;; This function uses a non-reentrant model
  1306 ;;
  1307                           
  1308                           	psect	text11
  1309  002C22                     __ptext11:
  1310                           	callstack 0
  1311  002C22                     _ENVIA_CHAR:
  1312                           	callstack 123
  1313                           
  1314                           ;incstack = 0
  1315                           ;ENVIA_CHAR@dato stored from wreg
  1316  002C22  6E06               	movwf	ENVIA_CHAR@dato^(0+1280),c
  1317  002C24                     
  1318                           ;LCD.c: 80: void ENVIA_CHAR(unsigned char dato);LCD.c: 81: {;LCD.c: 82:  unsigned char a
      +                          ux;;LCD.c: 83:  LATDbits.LATD0 = 1;
  1319  002C24  80C1               	bsf	193,0,c	;volatile
  1320  002C26                     
  1321                           ;LCD.c: 84:  LEER_LCD();
  1322  002C26  ECDB  F014         	call	_LEER_LCD	;wreg free
  1323  002C2A                     
  1324                           ;LCD.c: 85:  TRISD = 0x00;
  1325  002C2A  0E00               	movlw	0
  1326  002C2C  6EC9               	movwf	201,c	;volatile
  1327  002C2E                     
  1328                           ;LCD.c: 86:     _delay((unsigned long)((100)*(16000000UL/4000000.0)));
  1329  002C2E  0E85               	movlw	133
  1330  002C30                     u287:
  1331  002C30  2EE8               	decfsz	wreg,f,c
  1332  002C32  D7FE               	bra	u287
  1333  002C34  F000               	nop	
  1334  002C36                     
  1335                           ;LCD.c: 87:  LATDbits.LATD1 = 0;
  1336  002C36  92C1               	bcf	193,1,c	;volatile
  1337  002C38                     
  1338                           ;LCD.c: 88:  LATDbits.LATD2 = 0;
  1339  002C38  94C1               	bcf	193,2,c	;volatile
  1340  002C3A                     
  1341                           ;LCD.c: 89:  LATDbits.LATD0 = 1;
  1342  002C3A  80C1               	bsf	193,0,c	;volatile
  1343  002C3C                     
  1344                           ;LCD.c: 90:  aux = dato & 0xF0;
  1345  002C3C  5006               	movf	ENVIA_CHAR@dato^(0+1280),w,c
  1346  002C3E  0BF0               	andlw	240
  1347  002C40  6E07               	movwf	ENVIA_CHAR@aux^(0+1280),c
  1348  002C42                     
  1349                           ;LCD.c: 91:  ENVIA_NIBBLE(aux);
  1350  002C42  5007               	movf	ENVIA_CHAR@aux^(0+1280),w,c
  1351  002C44  EC6C  F016         	call	_ENVIA_NIBBLE
  1352  002C48                     
  1353                           ;LCD.c: 92:  aux = dato << 4;
  1354  002C48  3806               	swapf	ENVIA_CHAR@dato^(0+1280),w,c
  1355  002C4A  0BF0               	andlw	240
  1356  002C4C  6E07               	movwf	ENVIA_CHAR@aux^(0+1280),c
  1357  002C4E                     
  1358                           ;LCD.c: 93:  ENVIA_NIBBLE(aux);
  1359  002C4E  5007               	movf	ENVIA_CHAR@aux^(0+1280),w,c
  1360  002C50  EC6C  F016         	call	_ENVIA_NIBBLE
  1361  002C54  0012               	return		;funcret
  1362  002C56                     __end_of_ENVIA_CHAR:
  1363                           	callstack 0
  1364                           
  1365 ;; *************** function _LEER_LCD *****************
  1366 ;; Defined at:
  1367 ;;		line 144 in file "LCD.c"
  1368 ;; Parameters:    Size  Location     Type
  1369 ;;		None
  1370 ;; Auto vars:     Size  Location     Type
  1371 ;;  aux             1    4[COMRAM] unsigned char 
  1372 ;; Return value:  Size  Location     Type
  1373 ;;                  1    wreg      void 
  1374 ;; Registers used:
  1375 ;;		wreg, status,2, status,0
  1376 ;; Tracked objects:
  1377 ;;		On entry : 0/0
  1378 ;;		On exit  : 0/0
  1379 ;;		Unchanged: 0/0
  1380 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1381 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1382 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1383 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1384 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1385 ;;Total ram usage:        1 bytes
  1386 ;; Hardware stack levels used: 1
  1387 ;; Hardware stack levels required when called: 1
  1388 ;; This function calls:
  1389 ;;		Nothing
  1390 ;; This function is called by:
  1391 ;;		_ENVIA_CHAR
  1392 ;;		_ENVIA_LCD_CMD
  1393 ;; This function uses a non-reentrant model
  1394 ;;
  1395                           
  1396                           	psect	text12
  1397  0029B6                     __ptext12:
  1398                           	callstack 0
  1399  0029B6                     _LEER_LCD:
  1400                           	callstack 121
  1401  0029B6                     
  1402                           ;LCD.c: 146:  unsigned char aux;;LCD.c: 147:  TRISD = 0xF8;
  1403  0029B6  0EF8               	movlw	248
  1404  0029B8  6EC9               	movwf	201,c	;volatile
  1405  0029BA                     
  1406                           ;LCD.c: 148:  LATDbits.LATD0 = 0;
  1407  0029BA  90C1               	bcf	193,0,c	;volatile
  1408  0029BC                     
  1409                           ;LCD.c: 149:  LATDbits.LATD1 = 1;
  1410  0029BC  82C1               	bsf	193,1,c	;volatile
  1411  0029BE                     
  1412                           ;LCD.c: 150:  LATDbits.LATD2 = 1;
  1413  0029BE  84C1               	bsf	193,2,c	;volatile
  1414  0029C0                     
  1415                           ;LCD.c: 151:     _delay((unsigned long)((100)*(16000000UL/4000000.0)));
  1416  0029C0  0E85               	movlw	133
  1417  0029C2                     u297:
  1418  0029C2  2EE8               	decfsz	wreg,f,c
  1419  0029C4  D7FE               	bra	u297
  1420  0029C6  F000               	nop	
  1421  0029C8                     
  1422                           ;LCD.c: 152:  aux = PORTD;
  1423  0029C8  0061 F344  F505    	movff	1233,LEER_LCD@aux	;volatile
  1424  0029CE                     
  1425                           ;LCD.c: 153:  LATDbits.LATD2 = 0;
  1426  0029CE  94C1               	bcf	193,2,c	;volatile
  1427  0029D0                     
  1428                           ;LCD.c: 154:     _delay((unsigned long)((100)*(16000000UL/4000000.0)));
  1429  0029D0  0E85               	movlw	133
  1430  0029D2                     u307:
  1431  0029D2  2EE8               	decfsz	wreg,f,c
  1432  0029D4  D7FE               	bra	u307
  1433  0029D6  F000               	nop	
  1434  0029D8                     
  1435                           ;LCD.c: 155:  LATDbits.LATD2 = 1;
  1436  0029D8  84C1               	bsf	193,2,c	;volatile
  1437  0029DA                     
  1438                           ;LCD.c: 156:     _delay((unsigned long)((100)*(16000000UL/4000000.0)));
  1439  0029DA  0E85               	movlw	133
  1440  0029DC                     u317:
  1441  0029DC  2EE8               	decfsz	wreg,f,c
  1442  0029DE  D7FE               	bra	u317
  1443  0029E0  F000               	nop	
  1444  0029E2                     
  1445                           ;LCD.c: 157:  LATDbits.LATD2 = 0;
  1446  0029E2  94C1               	bcf	193,2,c	;volatile
  1447  0029E4                     l963:
  1448                           
  1449                           ;LCD.c: 158:  aux = aux & 0x80;
  1450  0029E4  5005               	movf	LEER_LCD@aux^(0+1280),w,c
  1451  0029E6  0B80               	andlw	128
  1452  0029E8  6E05               	movwf	LEER_LCD@aux^(0+1280),c
  1453                           
  1454                           ;LCD.c: 159:  while(aux == 0x80)
  1455  0029EA  EF0C  F015         	goto	l977
  1456  0029EE                     l87:
  1457                           
  1458                           ;LCD.c: 160:         {;LCD.c: 161:             LATDbits.LATD2 = 1;
  1459  0029EE  84C1               	bsf	193,2,c	;volatile
  1460  0029F0                     
  1461                           ;LCD.c: 162:             _delay((unsigned long)((100)*(16000000UL/4000000.0)));
  1462  0029F0  0E85               	movlw	133
  1463  0029F2                     u327:
  1464  0029F2  2EE8               	decfsz	wreg,f,c
  1465  0029F4  D7FE               	bra	u327
  1466  0029F6  F000               	nop	
  1467  0029F8                     
  1468                           ;LCD.c: 163:             aux = PORTD;
  1469  0029F8  0061 F344  F505    	movff	1233,LEER_LCD@aux	;volatile
  1470  0029FE                     
  1471                           ;LCD.c: 164:             LATDbits.LATD2 = 0;
  1472  0029FE  94C1               	bcf	193,2,c	;volatile
  1473                           
  1474                           ;LCD.c: 165:             _delay((unsigned long)((100)*(16000000UL/4000000.0)));
  1475  002A00  0E85               	movlw	133
  1476  002A02                     u337:
  1477  002A02  2EE8               	decfsz	wreg,f,c
  1478  002A04  D7FE               	bra	u337
  1479  002A06  F000               	nop	
  1480  002A08                     
  1481                           ;LCD.c: 166:             LATDbits.LATD2 = 1;
  1482  002A08  84C1               	bsf	193,2,c	;volatile
  1483                           
  1484                           ;LCD.c: 167:             _delay((unsigned long)((100)*(16000000UL/4000000.0)));
  1485  002A0A  0E85               	movlw	133
  1486  002A0C                     u347:
  1487  002A0C  2EE8               	decfsz	wreg,f,c
  1488  002A0E  D7FE               	bra	u347
  1489  002A10  F000               	nop	
  1490  002A12                     
  1491                           ;LCD.c: 168:             LATDbits.LATD2 = 0;
  1492  002A12  94C1               	bcf	193,2,c	;volatile
  1493  002A14  EFF2  F014         	goto	l963
  1494  002A18                     l977:
  1495                           
  1496                           ;LCD.c: 159:  while(aux == 0x80)
  1497  002A18  0E80               	movlw	128
  1498  002A1A  1805               	xorwf	LEER_LCD@aux^(0+1280),w,c
  1499  002A1C  B4D8               	btfsc	status,2,c
  1500  002A1E  EF13  F015         	goto	u11
  1501  002A22  EF15  F015         	goto	u10
  1502  002A26                     u11:
  1503  002A26  EFF7  F014         	goto	l87
  1504  002A2A                     u10:
  1505  002A2A  0012               	return		;funcret
  1506  002A2C                     __end_of_LEER_LCD:
  1507                           	callstack 0
  1508                           
  1509 ;; *************** function _ENVIA_NIBBLE *****************
  1510 ;; Defined at:
  1511 ;;		line 118 in file "LCD.c"
  1512 ;; Parameters:    Size  Location     Type
  1513 ;;  dato            1    wreg     unsigned char 
  1514 ;; Auto vars:     Size  Location     Type
  1515 ;;  dato            1    4[COMRAM] unsigned char 
  1516 ;; Return value:  Size  Location     Type
  1517 ;;                  1    wreg      void 
  1518 ;; Registers used:
  1519 ;;		wreg, status,2, status,0
  1520 ;; Tracked objects:
  1521 ;;		On entry : 0/0
  1522 ;;		On exit  : 0/0
  1523 ;;		Unchanged: 0/0
  1524 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1525 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1526 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1527 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1528 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1529 ;;Total ram usage:        1 bytes
  1530 ;; Hardware stack levels used: 1
  1531 ;; Hardware stack levels required when called: 1
  1532 ;; This function calls:
  1533 ;;		Nothing
  1534 ;; This function is called by:
  1535 ;;		_ENVIA_CHAR
  1536 ;;		_LCD_CONFIG
  1537 ;;		_ENVIA_LCD_CMD
  1538 ;; This function uses a non-reentrant model
  1539 ;;
  1540                           
  1541                           	psect	text13
  1542  002CD8                     __ptext13:
  1543                           	callstack 0
  1544  002CD8                     _ENVIA_NIBBLE:
  1545                           	callstack 122
  1546                           
  1547                           ;incstack = 0
  1548                           ;ENVIA_NIBBLE@dato stored from wreg
  1549  002CD8  6E05               	movwf	ENVIA_NIBBLE@dato^(0+1280),c
  1550  002CDA                     
  1551                           ;LCD.c: 118: void ENVIA_NIBBLE(unsigned char dato);LCD.c: 119: {;LCD.c: 120:  LATD &= 0x
      +                          0F;
  1552  002CDA  0E0F               	movlw	15
  1553  002CDC  16C1               	andwf	193,f,c	;volatile
  1554                           
  1555                           ;LCD.c: 121:  dato &= 0xF0;
  1556  002CDE  0EF0               	movlw	240
  1557  002CE0  1605               	andwf	ENVIA_NIBBLE@dato^(0+1280),f,c
  1558                           
  1559                           ;LCD.c: 122:  LATD|= dato;
  1560  002CE2  5005               	movf	ENVIA_NIBBLE@dato^(0+1280),w,c	;volatile
  1561  002CE4  12C1               	iorwf	193,f,c	;volatile
  1562  002CE6                     
  1563                           ;LCD.c: 123:  LATDbits.LATD2 = 1;
  1564  002CE6  84C1               	bsf	193,2,c	;volatile
  1565  002CE8                     
  1566                           ;LCD.c: 124:     _delay((unsigned long)((100)*(16000000UL/4000000.0)));
  1567  002CE8  0E85               	movlw	133
  1568  002CEA                     u357:
  1569  002CEA  2EE8               	decfsz	wreg,f,c
  1570  002CEC  D7FE               	bra	u357
  1571  002CEE  F000               	nop	
  1572  002CF0                     
  1573                           ;LCD.c: 125:  LATDbits.LATD2 = 0;
  1574  002CF0  94C1               	bcf	193,2,c	;volatile
  1575  002CF2  0012               	return		;funcret
  1576  002CF4                     __end_of_ENVIA_NIBBLE:
  1577                           	callstack 0
  1578                           
  1579 ;; *************** function _INT0_ISR *****************
  1580 ;; Defined at:
  1581 ;;		line 79 in file "maincode.c"
  1582 ;; Parameters:    Size  Location     Type
  1583 ;;		None
  1584 ;; Auto vars:     Size  Location     Type
  1585 ;;		None
  1586 ;; Return value:  Size  Location     Type
  1587 ;;                  1    wreg      void 
  1588 ;; Registers used:
  1589 ;;		wreg, status,2
  1590 ;; Tracked objects:
  1591 ;;		On entry : 0/0
  1592 ;;		On exit  : 0/0
  1593 ;;		Unchanged: 0/0
  1594 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1595 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1596 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1597 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1598 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1599 ;;Total ram usage:        0 bytes
  1600 ;; Hardware stack levels used: 1
  1601 ;; This function calls:
  1602 ;;		Nothing
  1603 ;; This function is called by:
  1604 ;;		Interrupt level 2
  1605 ;; This function uses a non-reentrant model
  1606 ;;
  1607                           
  1608                           	psect	text14
  1609  002CB8                     __ptext14:
  1610                           	callstack 0
  1611  002CB8                     _INT0_ISR:
  1612                           	callstack 121
  1613  002CB8                     
  1614                           ;maincode.c: 80:     PIR1bits.INT0IF = 0;
  1615  002CB8  90AF               	bcf	175,0,c	;volatile
  1616  002CBA                     
  1617                           ;maincode.c: 81:     if(ajuste == 0){
  1618  002CBA  5011               	movf	_ajuste^(0+1280),w,c
  1619  002CBC  A4D8               	btfss	status,2,c
  1620  002CBE  EF63  F016         	goto	i2u14_41
  1621  002CC2  EF65  F016         	goto	i2u14_40
  1622  002CC6                     i2u14_41:
  1623  002CC6  EF69  F016         	goto	i2l1215
  1624  002CCA                     i2u14_40:
  1625  002CCA                     
  1626                           ;maincode.c: 82:         ajuste = 1;
  1627  002CCA  0E01               	movlw	1
  1628  002CCC  6E11               	movwf	_ajuste^(0+1280),c
  1629                           
  1630                           ;maincode.c: 83:     }
  1631  002CCE  EF6B  F016         	goto	i2l197
  1632  002CD2                     i2l1215:
  1633                           
  1634                           ;maincode.c: 85:         ajuste = 0;
  1635  002CD2  0E00               	movlw	0
  1636  002CD4  6E11               	movwf	_ajuste^(0+1280),c
  1637  002CD6                     i2l197:
  1638  002CD6  0011               	retfie		f
  1639  002CD8                     __end_of_INT0_ISR:
  1640                           	callstack 0
  1641                           
  1642 ;; *************** function _INT1_ISR *****************
  1643 ;; Defined at:
  1644 ;;		line 89 in file "maincode.c"
  1645 ;; Parameters:    Size  Location     Type
  1646 ;;		None
  1647 ;; Auto vars:     Size  Location     Type
  1648 ;;		None
  1649 ;; Return value:  Size  Location     Type
  1650 ;;                  1    wreg      void 
  1651 ;; Registers used:
  1652 ;;		wreg, status,2, status,0
  1653 ;; Tracked objects:
  1654 ;;		On entry : 0/0
  1655 ;;		On exit  : 0/0
  1656 ;;		Unchanged: 0/0
  1657 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1658 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1659 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1660 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1661 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1662 ;;Total ram usage:        2 bytes
  1663 ;; Hardware stack levels used: 1
  1664 ;; This function calls:
  1665 ;;		Nothing
  1666 ;; This function is called by:
  1667 ;;		Interrupt level 2
  1668 ;; This function uses a non-reentrant model
  1669 ;;
  1670                           
  1671                           	psect	text15
  1672  002520                     __ptext15:
  1673                           	callstack 0
  1674  002520                     _INT1_ISR:
  1675                           	callstack 121
  1676  002520                     
  1677                           ;maincode.c: 90:     PIR6bits.INT1IF = 0;
  1678  002520  90B4               	bcf	180,0,c	;volatile
  1679  002522                     
  1680                           ;maincode.c: 91:     if(ajuste == 0){
  1681  002522  5011               	movf	_ajuste^(0+1280),w,c
  1682  002524  A4D8               	btfss	status,2,c
  1683  002526  EF97  F012         	goto	i2u15_41
  1684  00252A  EF99  F012         	goto	i2u15_40
  1685  00252E                     i2u15_41:
  1686  00252E  EF5C  F013         	goto	i2l1269
  1687  002532                     i2u15_40:
  1688  002532  EFE1  F012         	goto	i2l1245
  1689  002536                     i2l1223:
  1690                           
  1691                           ;maincode.c: 94:                 CCPR2H = 0;
  1692  002536  0E00               	movlw	0
  1693  002538  0103               	movlb	3	; () banked
  1694  00253A  6F45               	movwf	69,b	;volatile
  1695                           
  1696                           ;maincode.c: 95:                 nivel_backlight = 1;
  1697  00253C  0E01               	movlw	1
  1698  00253E  6E12               	movwf	_nivel_backlight^(0+1280),c
  1699                           
  1700                           ;maincode.c: 96:                 break;
  1701  002540  EF91  F013         	goto	i2l228
  1702  002544                     i2l1225:
  1703                           
  1704                           ;maincode.c: 98:                 CCPR2H = 7;
  1705  002544  0E07               	movlw	7
  1706  002546  0103               	movlb	3	; () banked
  1707  002548  6F45               	movwf	69,b	;volatile
  1708                           
  1709                           ;maincode.c: 99:                 nivel_backlight = 2;
  1710  00254A  0E02               	movlw	2
  1711  00254C  6E12               	movwf	_nivel_backlight^(0+1280),c
  1712                           
  1713                           ;maincode.c: 100:                 break;
  1714  00254E  EF91  F013         	goto	i2l228
  1715  002552                     i2l1227:
  1716                           
  1717                           ;maincode.c: 102:                 CCPR2H = 14;
  1718  002552  0E0E               	movlw	14
  1719  002554  0103               	movlb	3	; () banked
  1720  002556  6F45               	movwf	69,b	;volatile
  1721                           
  1722                           ;maincode.c: 103:                 nivel_backlight = 3;
  1723  002558  0E03               	movlw	3
  1724  00255A  6E12               	movwf	_nivel_backlight^(0+1280),c
  1725                           
  1726                           ;maincode.c: 104:                 break;
  1727  00255C  EF91  F013         	goto	i2l228
  1728  002560                     i2l1229:
  1729                           
  1730                           ;maincode.c: 106:                 CCPR2H = 21;
  1731  002560  0E15               	movlw	21
  1732  002562  0103               	movlb	3	; () banked
  1733  002564  6F45               	movwf	69,b	;volatile
  1734                           
  1735                           ;maincode.c: 107:                 nivel_backlight = 4;
  1736  002566  0E04               	movlw	4
  1737  002568  6E12               	movwf	_nivel_backlight^(0+1280),c
  1738                           
  1739                           ;maincode.c: 108:                 break;
  1740  00256A  EF91  F013         	goto	i2l228
  1741  00256E                     i2l1231:
  1742                           
  1743                           ;maincode.c: 110:                 CCPR2H = 28;
  1744  00256E  0E1C               	movlw	28
  1745  002570  0103               	movlb	3	; () banked
  1746  002572  6F45               	movwf	69,b	;volatile
  1747                           
  1748                           ;maincode.c: 111:                 nivel_backlight = 5;
  1749  002574  0E05               	movlw	5
  1750  002576  6E12               	movwf	_nivel_backlight^(0+1280),c
  1751                           
  1752                           ;maincode.c: 112:                 break;
  1753  002578  EF91  F013         	goto	i2l228
  1754  00257C                     i2l1233:
  1755                           
  1756                           ;maincode.c: 114:                 CCPR2H = 35;
  1757  00257C  0E23               	movlw	35
  1758  00257E  0103               	movlb	3	; () banked
  1759  002580  6F45               	movwf	69,b	;volatile
  1760                           
  1761                           ;maincode.c: 115:                 nivel_backlight = 6;
  1762  002582  0E06               	movlw	6
  1763  002584  6E12               	movwf	_nivel_backlight^(0+1280),c
  1764                           
  1765                           ;maincode.c: 116:                 break;
  1766  002586  EF91  F013         	goto	i2l228
  1767  00258A                     i2l1235:
  1768                           
  1769                           ;maincode.c: 118:                 CCPR2H = 42;
  1770  00258A  0E2A               	movlw	42
  1771  00258C  0103               	movlb	3	; () banked
  1772  00258E  6F45               	movwf	69,b	;volatile
  1773                           
  1774                           ;maincode.c: 119:                 nivel_backlight = 7;
  1775  002590  0E07               	movlw	7
  1776  002592  6E12               	movwf	_nivel_backlight^(0+1280),c
  1777                           
  1778                           ;maincode.c: 120:                 break;
  1779  002594  EF91  F013         	goto	i2l228
  1780  002598                     i2l1237:
  1781                           
  1782                           ;maincode.c: 122:                 CCPR2H = 49;
  1783  002598  0E31               	movlw	49
  1784  00259A  0103               	movlb	3	; () banked
  1785  00259C  6F45               	movwf	69,b	;volatile
  1786                           
  1787                           ;maincode.c: 123:                 nivel_backlight = 8;
  1788  00259E  0E08               	movlw	8
  1789  0025A0  6E12               	movwf	_nivel_backlight^(0+1280),c
  1790                           
  1791                           ;maincode.c: 124:                 break;
  1792  0025A2  EF91  F013         	goto	i2l228
  1793  0025A6                     i2l1239:
  1794                           
  1795                           ;maincode.c: 126:                 CCPR2H = 56;
  1796  0025A6  0E38               	movlw	56
  1797  0025A8  0103               	movlb	3	; () banked
  1798  0025AA  6F45               	movwf	69,b	;volatile
  1799                           
  1800                           ;maincode.c: 127:                 nivel_backlight = 9;
  1801  0025AC  0E09               	movlw	9
  1802  0025AE  6E12               	movwf	_nivel_backlight^(0+1280),c
  1803                           
  1804                           ;maincode.c: 128:                 break;
  1805  0025B0  EF91  F013         	goto	i2l228
  1806  0025B4                     i2l1241:
  1807                           
  1808                           ;maincode.c: 130:                 CCPR2H = 62;
  1809  0025B4  0E3E               	movlw	62
  1810  0025B6  0103               	movlb	3	; () banked
  1811  0025B8  6F45               	movwf	69,b	;volatile
  1812                           
  1813                           ;maincode.c: 131:                 nivel_backlight = 0;
  1814  0025BA  0E00               	movlw	0
  1815  0025BC  6E12               	movwf	_nivel_backlight^(0+1280),c
  1816                           
  1817                           ;maincode.c: 132:                 break;
  1818  0025BE  EF91  F013         	goto	i2l228
  1819  0025C2                     i2l1245:
  1820  0025C2  5012               	movf	_nivel_backlight^(0+1280),w,c
  1821  0025C4  6E01               	movwf	??_INT1_ISR^(0+1280),c
  1822  0025C6  6A02               	clrf	(??_INT1_ISR+1)^(0+1280),c
  1823                           
  1824                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1825                           ; Switch size 1, requested type "simple"
  1826                           ; Number of cases is 1, Range of values is 0 to 0
  1827                           ; switch strategies available:
  1828                           ; Name         Instructions Cycles
  1829                           ; simple_byte            4     3 (average)
  1830                           ;	Chosen strategy is simple_byte
  1831  0025C8  5002               	movf	(??_INT1_ISR+1)^(0+1280),w,c
  1832  0025CA  0A00               	xorlw	0	; case 0
  1833  0025CC  B4D8               	btfsc	status,2,c
  1834  0025CE  EFEB  F012         	goto	i2l1545
  1835  0025D2  EF91  F013         	goto	i2l228
  1836  0025D6                     i2l1545:
  1837                           
  1838                           ; Switch size 1, requested type "simple"
  1839                           ; Number of cases is 10, Range of values is 0 to 9
  1840                           ; switch strategies available:
  1841                           ; Name         Instructions Cycles
  1842                           ; simple_byte           31    16 (average)
  1843                           ;	Chosen strategy is simple_byte
  1844  0025D6  5001               	movf	??_INT1_ISR^(0+1280),w,c
  1845  0025D8  0A00               	xorlw	0	; case 0
  1846  0025DA  B4D8               	btfsc	status,2,c
  1847  0025DC  EF9B  F012         	goto	i2l1223
  1848  0025E0  0A01               	xorlw	1	; case 1
  1849  0025E2  B4D8               	btfsc	status,2,c
  1850  0025E4  EFA2  F012         	goto	i2l1225
  1851  0025E8  0A03               	xorlw	3	; case 2
  1852  0025EA  B4D8               	btfsc	status,2,c
  1853  0025EC  EFA9  F012         	goto	i2l1227
  1854  0025F0  0A01               	xorlw	1	; case 3
  1855  0025F2  B4D8               	btfsc	status,2,c
  1856  0025F4  EFB0  F012         	goto	i2l1229
  1857  0025F8  0A07               	xorlw	7	; case 4
  1858  0025FA  B4D8               	btfsc	status,2,c
  1859  0025FC  EFB7  F012         	goto	i2l1231
  1860  002600  0A01               	xorlw	1	; case 5
  1861  002602  B4D8               	btfsc	status,2,c
  1862  002604  EFBE  F012         	goto	i2l1233
  1863  002608  0A03               	xorlw	3	; case 6
  1864  00260A  B4D8               	btfsc	status,2,c
  1865  00260C  EFC5  F012         	goto	i2l1235
  1866  002610  0A01               	xorlw	1	; case 7
  1867  002612  B4D8               	btfsc	status,2,c
  1868  002614  EFCC  F012         	goto	i2l1237
  1869  002618  0A0F               	xorlw	15	; case 8
  1870  00261A  B4D8               	btfsc	status,2,c
  1871  00261C  EFD3  F012         	goto	i2l1239
  1872  002620  0A01               	xorlw	1	; case 9
  1873  002622  B4D8               	btfsc	status,2,c
  1874  002624  EFDA  F012         	goto	i2l1241
  1875  002628  EF91  F013         	goto	i2l228
  1876  00262C                     i2l1247:
  1877                           
  1878                           ;maincode.c: 138:                 CCPR1H = 0;
  1879  00262C  0E00               	movlw	0
  1880  00262E  0103               	movlb	3	; () banked
  1881  002630  6F41               	movwf	65,b	;volatile
  1882                           
  1883                           ;maincode.c: 139:                 nivel_contraste = 1;
  1884  002632  0E01               	movlw	1
  1885  002634  6E13               	movwf	_nivel_contraste^(0+1280),c
  1886                           
  1887                           ;maincode.c: 140:                 break;
  1888  002636  EF91  F013         	goto	i2l228
  1889  00263A                     i2l1249:
  1890                           
  1891                           ;maincode.c: 142:                 CCPR1H = 7;
  1892  00263A  0E07               	movlw	7
  1893  00263C  0103               	movlb	3	; () banked
  1894  00263E  6F41               	movwf	65,b	;volatile
  1895                           
  1896                           ;maincode.c: 143:                 nivel_contraste = 2;
  1897  002640  0E02               	movlw	2
  1898  002642  6E13               	movwf	_nivel_contraste^(0+1280),c
  1899                           
  1900                           ;maincode.c: 144:                 break;
  1901  002644  EF91  F013         	goto	i2l228
  1902  002648                     i2l1251:
  1903                           
  1904                           ;maincode.c: 146:                 CCPR1H = 14;
  1905  002648  0E0E               	movlw	14
  1906  00264A  0103               	movlb	3	; () banked
  1907  00264C  6F41               	movwf	65,b	;volatile
  1908                           
  1909                           ;maincode.c: 147:                 nivel_contraste = 3;
  1910  00264E  0E03               	movlw	3
  1911  002650  6E13               	movwf	_nivel_contraste^(0+1280),c
  1912                           
  1913                           ;maincode.c: 148:                 break;
  1914  002652  EF91  F013         	goto	i2l228
  1915  002656                     i2l1253:
  1916                           
  1917                           ;maincode.c: 150:                 CCPR1H = 21;
  1918  002656  0E15               	movlw	21
  1919  002658  0103               	movlb	3	; () banked
  1920  00265A  6F41               	movwf	65,b	;volatile
  1921                           
  1922                           ;maincode.c: 151:                 nivel_contraste = 4;
  1923  00265C  0E04               	movlw	4
  1924  00265E  6E13               	movwf	_nivel_contraste^(0+1280),c
  1925                           
  1926                           ;maincode.c: 152:                 break;
  1927  002660  EF91  F013         	goto	i2l228
  1928  002664                     i2l1255:
  1929                           
  1930                           ;maincode.c: 154:                 CCPR1H = 28;
  1931  002664  0E1C               	movlw	28
  1932  002666  0103               	movlb	3	; () banked
  1933  002668  6F41               	movwf	65,b	;volatile
  1934                           
  1935                           ;maincode.c: 155:                 nivel_contraste = 5;
  1936  00266A  0E05               	movlw	5
  1937  00266C  6E13               	movwf	_nivel_contraste^(0+1280),c
  1938                           
  1939                           ;maincode.c: 156:                 break;
  1940  00266E  EF91  F013         	goto	i2l228
  1941  002672                     i2l1257:
  1942                           
  1943                           ;maincode.c: 158:                 CCPR1H = 35;
  1944  002672  0E23               	movlw	35
  1945  002674  0103               	movlb	3	; () banked
  1946  002676  6F41               	movwf	65,b	;volatile
  1947                           
  1948                           ;maincode.c: 159:                 nivel_contraste = 6;
  1949  002678  0E06               	movlw	6
  1950  00267A  6E13               	movwf	_nivel_contraste^(0+1280),c
  1951                           
  1952                           ;maincode.c: 160:                 break;
  1953  00267C  EF91  F013         	goto	i2l228
  1954  002680                     i2l1259:
  1955                           
  1956                           ;maincode.c: 162:                 CCPR1H = 42;
  1957  002680  0E2A               	movlw	42
  1958  002682  0103               	movlb	3	; () banked
  1959  002684  6F41               	movwf	65,b	;volatile
  1960                           
  1961                           ;maincode.c: 163:                 nivel_contraste = 7;
  1962  002686  0E07               	movlw	7
  1963  002688  6E13               	movwf	_nivel_contraste^(0+1280),c
  1964                           
  1965                           ;maincode.c: 164:                 break;
  1966  00268A  EF91  F013         	goto	i2l228
  1967  00268E                     i2l1261:
  1968                           
  1969                           ;maincode.c: 166:                 CCPR1H = 49;
  1970  00268E  0E31               	movlw	49
  1971  002690  0103               	movlb	3	; () banked
  1972  002692  6F41               	movwf	65,b	;volatile
  1973                           
  1974                           ;maincode.c: 167:                 nivel_contraste = 8;
  1975  002694  0E08               	movlw	8
  1976  002696  6E13               	movwf	_nivel_contraste^(0+1280),c
  1977                           
  1978                           ;maincode.c: 168:                 break;
  1979  002698  EF91  F013         	goto	i2l228
  1980  00269C                     i2l1263:
  1981                           
  1982                           ;maincode.c: 170:                 CCPR1H = 56;
  1983  00269C  0E38               	movlw	56
  1984  00269E  0103               	movlb	3	; () banked
  1985  0026A0  6F41               	movwf	65,b	;volatile
  1986                           
  1987                           ;maincode.c: 171:                 nivel_contraste = 9;
  1988  0026A2  0E09               	movlw	9
  1989  0026A4  6E13               	movwf	_nivel_contraste^(0+1280),c
  1990                           
  1991                           ;maincode.c: 172:                 break;
  1992  0026A6  EF91  F013         	goto	i2l228
  1993  0026AA                     i2l1265:
  1994                           
  1995                           ;maincode.c: 174:                 CCPR1H = 62;
  1996  0026AA  0E3E               	movlw	62
  1997  0026AC  0103               	movlb	3	; () banked
  1998  0026AE  6F41               	movwf	65,b	;volatile
  1999                           
  2000                           ;maincode.c: 175:                 nivel_contraste = 0;
  2001  0026B0  0E00               	movlw	0
  2002  0026B2  6E13               	movwf	_nivel_contraste^(0+1280),c
  2003                           
  2004                           ;maincode.c: 176:                 break;
  2005  0026B4  EF91  F013         	goto	i2l228
  2006  0026B8                     i2l1269:
  2007  0026B8  5013               	movf	_nivel_contraste^(0+1280),w,c
  2008  0026BA  6E01               	movwf	??_INT1_ISR^(0+1280),c
  2009  0026BC  6A02               	clrf	(??_INT1_ISR+1)^(0+1280),c
  2010                           
  2011                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2012                           ; Switch size 1, requested type "simple"
  2013                           ; Number of cases is 1, Range of values is 0 to 0
  2014                           ; switch strategies available:
  2015                           ; Name         Instructions Cycles
  2016                           ; simple_byte            4     3 (average)
  2017                           ;	Chosen strategy is simple_byte
  2018  0026BE  5002               	movf	(??_INT1_ISR+1)^(0+1280),w,c
  2019  0026C0  0A00               	xorlw	0	; case 0
  2020  0026C2  B4D8               	btfsc	status,2,c
  2021  0026C4  EF66  F013         	goto	i2l1547
  2022  0026C8  EF91  F013         	goto	i2l228
  2023  0026CC                     i2l1547:
  2024                           
  2025                           ; Switch size 1, requested type "simple"
  2026                           ; Number of cases is 10, Range of values is 0 to 9
  2027                           ; switch strategies available:
  2028                           ; Name         Instructions Cycles
  2029                           ; simple_byte           31    16 (average)
  2030                           ;	Chosen strategy is simple_byte
  2031  0026CC  5001               	movf	??_INT1_ISR^(0+1280),w,c
  2032  0026CE  0A00               	xorlw	0	; case 0
  2033  0026D0  B4D8               	btfsc	status,2,c
  2034  0026D2  EF16  F013         	goto	i2l1247
  2035  0026D6  0A01               	xorlw	1	; case 1
  2036  0026D8  B4D8               	btfsc	status,2,c
  2037  0026DA  EF1D  F013         	goto	i2l1249
  2038  0026DE  0A03               	xorlw	3	; case 2
  2039  0026E0  B4D8               	btfsc	status,2,c
  2040  0026E2  EF24  F013         	goto	i2l1251
  2041  0026E6  0A01               	xorlw	1	; case 3
  2042  0026E8  B4D8               	btfsc	status,2,c
  2043  0026EA  EF2B  F013         	goto	i2l1253
  2044  0026EE  0A07               	xorlw	7	; case 4
  2045  0026F0  B4D8               	btfsc	status,2,c
  2046  0026F2  EF32  F013         	goto	i2l1255
  2047  0026F6  0A01               	xorlw	1	; case 5
  2048  0026F8  B4D8               	btfsc	status,2,c
  2049  0026FA  EF39  F013         	goto	i2l1257
  2050  0026FE  0A03               	xorlw	3	; case 6
  2051  002700  B4D8               	btfsc	status,2,c
  2052  002702  EF40  F013         	goto	i2l1259
  2053  002706  0A01               	xorlw	1	; case 7
  2054  002708  B4D8               	btfsc	status,2,c
  2055  00270A  EF47  F013         	goto	i2l1261
  2056  00270E  0A0F               	xorlw	15	; case 8
  2057  002710  B4D8               	btfsc	status,2,c
  2058  002712  EF4E  F013         	goto	i2l1263
  2059  002716  0A01               	xorlw	1	; case 9
  2060  002718  B4D8               	btfsc	status,2,c
  2061  00271A  EF55  F013         	goto	i2l1265
  2062  00271E  EF91  F013         	goto	i2l228
  2063  002722                     i2l228:
  2064  002722  0011               	retfie		f
  2065  002724                     __end_of_INT1_ISR:
  2066                           	callstack 0
  2067                           
  2068 ;; *************** function _INT2_ISR *****************
  2069 ;; Defined at:
  2070 ;;		line 181 in file "maincode.c"
  2071 ;; Parameters:    Size  Location     Type
  2072 ;;		None
  2073 ;; Auto vars:     Size  Location     Type
  2074 ;;		None
  2075 ;; Return value:  Size  Location     Type
  2076 ;;                  1    wreg      void 
  2077 ;; Registers used:
  2078 ;;		wreg, status,2, status,0
  2079 ;; Tracked objects:
  2080 ;;		On entry : 0/0
  2081 ;;		On exit  : 0/0
  2082 ;;		Unchanged: 0/0
  2083 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2084 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2085 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2086 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2087 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2088 ;;Total ram usage:        2 bytes
  2089 ;; Hardware stack levels used: 1
  2090 ;; This function calls:
  2091 ;;		Nothing
  2092 ;; This function is called by:
  2093 ;;		Interrupt level 2
  2094 ;; This function uses a non-reentrant model
  2095 ;;
  2096                           
  2097                           	psect	text16
  2098  002724                     __ptext16:
  2099                           	callstack 0
  2100  002724                     _INT2_ISR:
  2101                           	callstack 121
  2102  002724                     
  2103                           ;maincode.c: 182:     PIR10bits.INT2IF = 0;
  2104  002724  90B8               	bcf	184,0,c	;volatile
  2105  002726                     
  2106                           ;maincode.c: 183:     if(ajuste == 0){
  2107  002726  5011               	movf	_ajuste^(0+1280),w,c
  2108  002728  A4D8               	btfss	status,2,c
  2109  00272A  EF99  F013         	goto	i2u16_41
  2110  00272E  EF9B  F013         	goto	i2u16_40
  2111  002732                     i2u16_41:
  2112  002732  EF5E  F014         	goto	i2l1331
  2113  002736                     i2u16_40:
  2114  002736  EFE3  F013         	goto	i2l1307
  2115  00273A                     i2l1285:
  2116                           
  2117                           ;maincode.c: 186:                 CCPR2H = 0;
  2118  00273A  0E00               	movlw	0
  2119  00273C  0103               	movlb	3	; () banked
  2120  00273E  6F45               	movwf	69,b	;volatile
  2121                           
  2122                           ;maincode.c: 187:                 nivel_backlight = 9;
  2123  002740  0E09               	movlw	9
  2124  002742  6E12               	movwf	_nivel_backlight^(0+1280),c
  2125                           
  2126                           ;maincode.c: 188:                 break;
  2127  002744  EF93  F014         	goto	i2l259
  2128  002748                     i2l1287:
  2129                           
  2130                           ;maincode.c: 190:                 CCPR2H = 7;
  2131  002748  0E07               	movlw	7
  2132  00274A  0103               	movlb	3	; () banked
  2133  00274C  6F45               	movwf	69,b	;volatile
  2134                           
  2135                           ;maincode.c: 191:                 nivel_backlight = 0;
  2136  00274E  0E00               	movlw	0
  2137  002750  6E12               	movwf	_nivel_backlight^(0+1280),c
  2138                           
  2139                           ;maincode.c: 192:                 break;
  2140  002752  EF93  F014         	goto	i2l259
  2141  002756                     i2l1289:
  2142                           
  2143                           ;maincode.c: 194:                 CCPR2H = 14;
  2144  002756  0E0E               	movlw	14
  2145  002758  0103               	movlb	3	; () banked
  2146  00275A  6F45               	movwf	69,b	;volatile
  2147                           
  2148                           ;maincode.c: 195:                 nivel_backlight = 1;
  2149  00275C  0E01               	movlw	1
  2150  00275E  6E12               	movwf	_nivel_backlight^(0+1280),c
  2151                           
  2152                           ;maincode.c: 196:                 break;
  2153  002760  EF93  F014         	goto	i2l259
  2154  002764                     i2l1291:
  2155                           
  2156                           ;maincode.c: 198:                 CCPR2H = 21;
  2157  002764  0E15               	movlw	21
  2158  002766  0103               	movlb	3	; () banked
  2159  002768  6F45               	movwf	69,b	;volatile
  2160                           
  2161                           ;maincode.c: 199:                 nivel_backlight = 2;
  2162  00276A  0E02               	movlw	2
  2163  00276C  6E12               	movwf	_nivel_backlight^(0+1280),c
  2164                           
  2165                           ;maincode.c: 200:                 break;
  2166  00276E  EF93  F014         	goto	i2l259
  2167  002772                     i2l1293:
  2168                           
  2169                           ;maincode.c: 202:                 CCPR2H = 28;
  2170  002772  0E1C               	movlw	28
  2171  002774  0103               	movlb	3	; () banked
  2172  002776  6F45               	movwf	69,b	;volatile
  2173                           
  2174                           ;maincode.c: 203:                 nivel_backlight = 3;
  2175  002778  0E03               	movlw	3
  2176  00277A  6E12               	movwf	_nivel_backlight^(0+1280),c
  2177                           
  2178                           ;maincode.c: 204:                 break;
  2179  00277C  EF93  F014         	goto	i2l259
  2180  002780                     i2l1295:
  2181                           
  2182                           ;maincode.c: 206:                 CCPR2H = 35;
  2183  002780  0E23               	movlw	35
  2184  002782  0103               	movlb	3	; () banked
  2185  002784  6F45               	movwf	69,b	;volatile
  2186                           
  2187                           ;maincode.c: 207:                 nivel_backlight = 4;
  2188  002786  0E04               	movlw	4
  2189  002788  6E12               	movwf	_nivel_backlight^(0+1280),c
  2190                           
  2191                           ;maincode.c: 208:                 break;
  2192  00278A  EF93  F014         	goto	i2l259
  2193  00278E                     i2l1297:
  2194                           
  2195                           ;maincode.c: 210:                 CCPR2H = 42;
  2196  00278E  0E2A               	movlw	42
  2197  002790  0103               	movlb	3	; () banked
  2198  002792  6F45               	movwf	69,b	;volatile
  2199                           
  2200                           ;maincode.c: 211:                 nivel_backlight = 5;
  2201  002794  0E05               	movlw	5
  2202  002796  6E12               	movwf	_nivel_backlight^(0+1280),c
  2203                           
  2204                           ;maincode.c: 212:                 break;
  2205  002798  EF93  F014         	goto	i2l259
  2206  00279C                     i2l1299:
  2207                           
  2208                           ;maincode.c: 214:                 CCPR2H = 49;
  2209  00279C  0E31               	movlw	49
  2210  00279E  0103               	movlb	3	; () banked
  2211  0027A0  6F45               	movwf	69,b	;volatile
  2212                           
  2213                           ;maincode.c: 215:                 nivel_backlight = 6;
  2214  0027A2  0E06               	movlw	6
  2215  0027A4  6E12               	movwf	_nivel_backlight^(0+1280),c
  2216                           
  2217                           ;maincode.c: 216:                 break;
  2218  0027A6  EF93  F014         	goto	i2l259
  2219  0027AA                     i2l1301:
  2220                           
  2221                           ;maincode.c: 218:                 CCPR2H = 56;
  2222  0027AA  0E38               	movlw	56
  2223  0027AC  0103               	movlb	3	; () banked
  2224  0027AE  6F45               	movwf	69,b	;volatile
  2225                           
  2226                           ;maincode.c: 219:                 nivel_backlight = 7;
  2227  0027B0  0E07               	movlw	7
  2228  0027B2  6E12               	movwf	_nivel_backlight^(0+1280),c
  2229                           
  2230                           ;maincode.c: 220:                 break;
  2231  0027B4  EF93  F014         	goto	i2l259
  2232  0027B8                     i2l1303:
  2233                           
  2234                           ;maincode.c: 222:                 CCPR2H = 62;
  2235  0027B8  0E3E               	movlw	62
  2236  0027BA  0103               	movlb	3	; () banked
  2237  0027BC  6F45               	movwf	69,b	;volatile
  2238                           
  2239                           ;maincode.c: 223:                 nivel_backlight = 8;
  2240  0027BE  0E08               	movlw	8
  2241  0027C0  6E12               	movwf	_nivel_backlight^(0+1280),c
  2242                           
  2243                           ;maincode.c: 224:                 break;
  2244  0027C2  EF93  F014         	goto	i2l259
  2245  0027C6                     i2l1307:
  2246  0027C6  5012               	movf	_nivel_backlight^(0+1280),w,c
  2247  0027C8  6E03               	movwf	??_INT2_ISR^(0+1280),c
  2248  0027CA  6A04               	clrf	(??_INT2_ISR+1)^(0+1280),c
  2249                           
  2250                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2251                           ; Switch size 1, requested type "simple"
  2252                           ; Number of cases is 1, Range of values is 0 to 0
  2253                           ; switch strategies available:
  2254                           ; Name         Instructions Cycles
  2255                           ; simple_byte            4     3 (average)
  2256                           ;	Chosen strategy is simple_byte
  2257  0027CC  5004               	movf	(??_INT2_ISR+1)^(0+1280),w,c
  2258  0027CE  0A00               	xorlw	0	; case 0
  2259  0027D0  B4D8               	btfsc	status,2,c
  2260  0027D2  EFED  F013         	goto	i2l1549
  2261  0027D6  EF93  F014         	goto	i2l259
  2262  0027DA                     i2l1549:
  2263                           
  2264                           ; Switch size 1, requested type "simple"
  2265                           ; Number of cases is 10, Range of values is 0 to 9
  2266                           ; switch strategies available:
  2267                           ; Name         Instructions Cycles
  2268                           ; simple_byte           31    16 (average)
  2269                           ;	Chosen strategy is simple_byte
  2270  0027DA  5003               	movf	??_INT2_ISR^(0+1280),w,c
  2271  0027DC  0A00               	xorlw	0	; case 0
  2272  0027DE  B4D8               	btfsc	status,2,c
  2273  0027E0  EF9D  F013         	goto	i2l1285
  2274  0027E4  0A01               	xorlw	1	; case 1
  2275  0027E6  B4D8               	btfsc	status,2,c
  2276  0027E8  EFA4  F013         	goto	i2l1287
  2277  0027EC  0A03               	xorlw	3	; case 2
  2278  0027EE  B4D8               	btfsc	status,2,c
  2279  0027F0  EFAB  F013         	goto	i2l1289
  2280  0027F4  0A01               	xorlw	1	; case 3
  2281  0027F6  B4D8               	btfsc	status,2,c
  2282  0027F8  EFB2  F013         	goto	i2l1291
  2283  0027FC  0A07               	xorlw	7	; case 4
  2284  0027FE  B4D8               	btfsc	status,2,c
  2285  002800  EFB9  F013         	goto	i2l1293
  2286  002804  0A01               	xorlw	1	; case 5
  2287  002806  B4D8               	btfsc	status,2,c
  2288  002808  EFC0  F013         	goto	i2l1295
  2289  00280C  0A03               	xorlw	3	; case 6
  2290  00280E  B4D8               	btfsc	status,2,c
  2291  002810  EFC7  F013         	goto	i2l1297
  2292  002814  0A01               	xorlw	1	; case 7
  2293  002816  B4D8               	btfsc	status,2,c
  2294  002818  EFCE  F013         	goto	i2l1299
  2295  00281C  0A0F               	xorlw	15	; case 8
  2296  00281E  B4D8               	btfsc	status,2,c
  2297  002820  EFD5  F013         	goto	i2l1301
  2298  002824  0A01               	xorlw	1	; case 9
  2299  002826  B4D8               	btfsc	status,2,c
  2300  002828  EFDC  F013         	goto	i2l1303
  2301  00282C  EF93  F014         	goto	i2l259
  2302  002830                     i2l1309:
  2303                           
  2304                           ;maincode.c: 230:                 CCPR1H = 0;
  2305  002830  0E00               	movlw	0
  2306  002832  0103               	movlb	3	; () banked
  2307  002834  6F41               	movwf	65,b	;volatile
  2308                           
  2309                           ;maincode.c: 231:                 nivel_contraste = 9;
  2310  002836  0E09               	movlw	9
  2311  002838  6E13               	movwf	_nivel_contraste^(0+1280),c
  2312                           
  2313                           ;maincode.c: 232:                 break;
  2314  00283A  EF93  F014         	goto	i2l259
  2315  00283E                     i2l1311:
  2316                           
  2317                           ;maincode.c: 234:                 CCPR1H = 7;
  2318  00283E  0E07               	movlw	7
  2319  002840  0103               	movlb	3	; () banked
  2320  002842  6F41               	movwf	65,b	;volatile
  2321                           
  2322                           ;maincode.c: 235:                 nivel_contraste = 0;
  2323  002844  0E00               	movlw	0
  2324  002846  6E13               	movwf	_nivel_contraste^(0+1280),c
  2325                           
  2326                           ;maincode.c: 236:                 break;
  2327  002848  EF93  F014         	goto	i2l259
  2328  00284C                     i2l1313:
  2329                           
  2330                           ;maincode.c: 238:                 CCPR1H = 14;
  2331  00284C  0E0E               	movlw	14
  2332  00284E  0103               	movlb	3	; () banked
  2333  002850  6F41               	movwf	65,b	;volatile
  2334                           
  2335                           ;maincode.c: 239:                 nivel_contraste = 1;
  2336  002852  0E01               	movlw	1
  2337  002854  6E13               	movwf	_nivel_contraste^(0+1280),c
  2338                           
  2339                           ;maincode.c: 240:                 break;
  2340  002856  EF93  F014         	goto	i2l259
  2341  00285A                     i2l1315:
  2342                           
  2343                           ;maincode.c: 242:                 CCPR1H = 21;
  2344  00285A  0E15               	movlw	21
  2345  00285C  0103               	movlb	3	; () banked
  2346  00285E  6F41               	movwf	65,b	;volatile
  2347                           
  2348                           ;maincode.c: 243:                 nivel_contraste = 2;
  2349  002860  0E02               	movlw	2
  2350  002862  6E13               	movwf	_nivel_contraste^(0+1280),c
  2351                           
  2352                           ;maincode.c: 244:                 break;
  2353  002864  EF93  F014         	goto	i2l259
  2354  002868                     i2l1317:
  2355                           
  2356                           ;maincode.c: 246:                 CCPR1H = 28;
  2357  002868  0E1C               	movlw	28
  2358  00286A  0103               	movlb	3	; () banked
  2359  00286C  6F41               	movwf	65,b	;volatile
  2360                           
  2361                           ;maincode.c: 247:                 nivel_contraste = 3;
  2362  00286E  0E03               	movlw	3
  2363  002870  6E13               	movwf	_nivel_contraste^(0+1280),c
  2364                           
  2365                           ;maincode.c: 248:                 break;
  2366  002872  EF93  F014         	goto	i2l259
  2367  002876                     i2l1319:
  2368                           
  2369                           ;maincode.c: 250:                 CCPR1H = 35;
  2370  002876  0E23               	movlw	35
  2371  002878  0103               	movlb	3	; () banked
  2372  00287A  6F41               	movwf	65,b	;volatile
  2373                           
  2374                           ;maincode.c: 251:                 nivel_contraste = 4;
  2375  00287C  0E04               	movlw	4
  2376  00287E  6E13               	movwf	_nivel_contraste^(0+1280),c
  2377                           
  2378                           ;maincode.c: 252:                 break;
  2379  002880  EF93  F014         	goto	i2l259
  2380  002884                     i2l1321:
  2381                           
  2382                           ;maincode.c: 254:                 CCPR1H = 42;
  2383  002884  0E2A               	movlw	42
  2384  002886  0103               	movlb	3	; () banked
  2385  002888  6F41               	movwf	65,b	;volatile
  2386                           
  2387                           ;maincode.c: 255:                 nivel_contraste = 5;
  2388  00288A  0E05               	movlw	5
  2389  00288C  6E13               	movwf	_nivel_contraste^(0+1280),c
  2390                           
  2391                           ;maincode.c: 256:                 break;
  2392  00288E  EF93  F014         	goto	i2l259
  2393  002892                     i2l1323:
  2394                           
  2395                           ;maincode.c: 258:                 CCPR1H = 49;
  2396  002892  0E31               	movlw	49
  2397  002894  0103               	movlb	3	; () banked
  2398  002896  6F41               	movwf	65,b	;volatile
  2399                           
  2400                           ;maincode.c: 259:                 nivel_contraste = 6;
  2401  002898  0E06               	movlw	6
  2402  00289A  6E13               	movwf	_nivel_contraste^(0+1280),c
  2403                           
  2404                           ;maincode.c: 260:                 break;
  2405  00289C  EF93  F014         	goto	i2l259
  2406  0028A0                     i2l1325:
  2407                           
  2408                           ;maincode.c: 262:                 CCPR1H = 56;
  2409  0028A0  0E38               	movlw	56
  2410  0028A2  0103               	movlb	3	; () banked
  2411  0028A4  6F41               	movwf	65,b	;volatile
  2412                           
  2413                           ;maincode.c: 263:                 nivel_contraste = 7;
  2414  0028A6  0E07               	movlw	7
  2415  0028A8  6E13               	movwf	_nivel_contraste^(0+1280),c
  2416                           
  2417                           ;maincode.c: 264:                 break;
  2418  0028AA  EF93  F014         	goto	i2l259
  2419  0028AE                     i2l1327:
  2420                           
  2421                           ;maincode.c: 266:                 CCPR1H = 62;
  2422  0028AE  0E3E               	movlw	62
  2423  0028B0  0103               	movlb	3	; () banked
  2424  0028B2  6F41               	movwf	65,b	;volatile
  2425                           
  2426                           ;maincode.c: 267:                 nivel_contraste = 8;
  2427  0028B4  0E08               	movlw	8
  2428  0028B6  6E13               	movwf	_nivel_contraste^(0+1280),c
  2429                           
  2430                           ;maincode.c: 268:                 break;
  2431  0028B8  EF93  F014         	goto	i2l259
  2432  0028BC                     i2l1331:
  2433  0028BC  5013               	movf	_nivel_contraste^(0+1280),w,c
  2434  0028BE  6E03               	movwf	??_INT2_ISR^(0+1280),c
  2435  0028C0  6A04               	clrf	(??_INT2_ISR+1)^(0+1280),c
  2436                           
  2437                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2438                           ; Switch size 1, requested type "simple"
  2439                           ; Number of cases is 1, Range of values is 0 to 0
  2440                           ; switch strategies available:
  2441                           ; Name         Instructions Cycles
  2442                           ; simple_byte            4     3 (average)
  2443                           ;	Chosen strategy is simple_byte
  2444  0028C2  5004               	movf	(??_INT2_ISR+1)^(0+1280),w,c
  2445  0028C4  0A00               	xorlw	0	; case 0
  2446  0028C6  B4D8               	btfsc	status,2,c
  2447  0028C8  EF68  F014         	goto	i2l1551
  2448  0028CC  EF93  F014         	goto	i2l259
  2449  0028D0                     i2l1551:
  2450                           
  2451                           ; Switch size 1, requested type "simple"
  2452                           ; Number of cases is 10, Range of values is 0 to 9
  2453                           ; switch strategies available:
  2454                           ; Name         Instructions Cycles
  2455                           ; simple_byte           31    16 (average)
  2456                           ;	Chosen strategy is simple_byte
  2457  0028D0  5003               	movf	??_INT2_ISR^(0+1280),w,c
  2458  0028D2  0A00               	xorlw	0	; case 0
  2459  0028D4  B4D8               	btfsc	status,2,c
  2460  0028D6  EF18  F014         	goto	i2l1309
  2461  0028DA  0A01               	xorlw	1	; case 1
  2462  0028DC  B4D8               	btfsc	status,2,c
  2463  0028DE  EF1F  F014         	goto	i2l1311
  2464  0028E2  0A03               	xorlw	3	; case 2
  2465  0028E4  B4D8               	btfsc	status,2,c
  2466  0028E6  EF26  F014         	goto	i2l1313
  2467  0028EA  0A01               	xorlw	1	; case 3
  2468  0028EC  B4D8               	btfsc	status,2,c
  2469  0028EE  EF2D  F014         	goto	i2l1315
  2470  0028F2  0A07               	xorlw	7	; case 4
  2471  0028F4  B4D8               	btfsc	status,2,c
  2472  0028F6  EF34  F014         	goto	i2l1317
  2473  0028FA  0A01               	xorlw	1	; case 5
  2474  0028FC  B4D8               	btfsc	status,2,c
  2475  0028FE  EF3B  F014         	goto	i2l1319
  2476  002902  0A03               	xorlw	3	; case 6
  2477  002904  B4D8               	btfsc	status,2,c
  2478  002906  EF42  F014         	goto	i2l1321
  2479  00290A  0A01               	xorlw	1	; case 7
  2480  00290C  B4D8               	btfsc	status,2,c
  2481  00290E  EF49  F014         	goto	i2l1323
  2482  002912  0A0F               	xorlw	15	; case 8
  2483  002914  B4D8               	btfsc	status,2,c
  2484  002916  EF50  F014         	goto	i2l1325
  2485  00291A  0A01               	xorlw	1	; case 9
  2486  00291C  B4D8               	btfsc	status,2,c
  2487  00291E  EF57  F014         	goto	i2l1327
  2488  002922  EF93  F014         	goto	i2l259
  2489  002926                     i2l259:
  2490  002926  0011               	retfie		f
  2491  002928                     __end_of_INT2_ISR:
  2492                           	callstack 0
  2493                           
  2494                           ;
  2495                           ; Interrupt Vector Table @ 0x8
  2496                           ;
  2497                           
  2498                           	psect	ivt0x8
  2499  000008                     __pivt0x8:
  2500                           	callstack 0
  2501  000008                     ivt0x8_base:
  2502                           	callstack 0
  2503                           
  2504                           ; Vector 0 : SWINT
  2505  000008  0040               	dw	ivt0x8_undefint shr (0+2)
  2506                           
  2507                           ; Vector 1 : HLVD
  2508  00000A  0040               	dw	ivt0x8_undefint shr (0+2)
  2509                           
  2510                           ; Vector 2 : OSF
  2511  00000C  0040               	dw	ivt0x8_undefint shr (0+2)
  2512                           
  2513                           ; Vector 3 : CSW
  2514  00000E  0040               	dw	ivt0x8_undefint shr (0+2)
  2515                           
  2516                           ; Vector 4 : Undefined
  2517  000010  0040               	dw	ivt0x8_undefint shr (0+2)
  2518                           
  2519                           ; Vector 5 : CLC1
  2520  000012  0040               	dw	ivt0x8_undefint shr (0+2)
  2521                           
  2522                           ; Vector 6 : Undefined
  2523  000014  0040               	dw	ivt0x8_undefint shr (0+2)
  2524                           
  2525                           ; Vector 7 : IOC
  2526  000016  0040               	dw	ivt0x8_undefint shr (0+2)
  2527                           
  2528                           ; Vector 8 : INT0
  2529  000018  0B2E               	dw	_INT0_ISR shr (0+2)
  2530                           
  2531                           ; Vector 9 : ZCD
  2532  00001A  0040               	dw	ivt0x8_undefint shr (0+2)
  2533                           
  2534                           ; Vector 10 : AD
  2535  00001C  0040               	dw	ivt0x8_undefint shr (0+2)
  2536                           
  2537                           ; Vector 11 : ACT
  2538  00001E  0040               	dw	ivt0x8_undefint shr (0+2)
  2539                           
  2540                           ; Vector 12 : CMP1
  2541  000020  0040               	dw	ivt0x8_undefint shr (0+2)
  2542                           
  2543                           ; Vector 13 : SMT1
  2544  000022  0040               	dw	ivt0x8_undefint shr (0+2)
  2545                           
  2546                           ; Vector 14 : SMT1PRA
  2547  000024  0040               	dw	ivt0x8_undefint shr (0+2)
  2548                           
  2549                           ; Vector 15 : SMT1PRW
  2550  000026  0040               	dw	ivt0x8_undefint shr (0+2)
  2551                           
  2552                           ; Vector 16 : ADT
  2553  000028  0040               	dw	ivt0x8_undefint shr (0+2)
  2554                           
  2555                           ; Vector 17 : Undefined
  2556  00002A  0040               	dw	ivt0x8_undefint shr (0+2)
  2557                           
  2558                           ; Vector 18 : Undefined
  2559  00002C  0040               	dw	ivt0x8_undefint shr (0+2)
  2560                           
  2561                           ; Vector 19 : Undefined
  2562  00002E  0040               	dw	ivt0x8_undefint shr (0+2)
  2563                           
  2564                           ; Vector 20 : DMA1SCNT
  2565  000030  0040               	dw	ivt0x8_undefint shr (0+2)
  2566                           
  2567                           ; Vector 21 : DMA1DCNT
  2568  000032  0040               	dw	ivt0x8_undefint shr (0+2)
  2569                           
  2570                           ; Vector 22 : DMA1OR
  2571  000034  0040               	dw	ivt0x8_undefint shr (0+2)
  2572                           
  2573                           ; Vector 23 : DMA1A
  2574  000036  0040               	dw	ivt0x8_undefint shr (0+2)
  2575                           
  2576                           ; Vector 24 : SPI1RX
  2577  000038  0040               	dw	ivt0x8_undefint shr (0+2)
  2578                           
  2579                           ; Vector 25 : SPI1TX
  2580  00003A  0040               	dw	ivt0x8_undefint shr (0+2)
  2581                           
  2582                           ; Vector 26 : SPI1
  2583  00003C  0040               	dw	ivt0x8_undefint shr (0+2)
  2584                           
  2585                           ; Vector 27 : TMR2
  2586  00003E  0040               	dw	ivt0x8_undefint shr (0+2)
  2587                           
  2588                           ; Vector 28 : TMR1
  2589  000040  0040               	dw	ivt0x8_undefint shr (0+2)
  2590                           
  2591                           ; Vector 29 : TMR1G
  2592  000042  0040               	dw	ivt0x8_undefint shr (0+2)
  2593                           
  2594                           ; Vector 30 : CCP1
  2595  000044  0040               	dw	ivt0x8_undefint shr (0+2)
  2596                           
  2597                           ; Vector 31 : TMR0
  2598  000046  0040               	dw	ivt0x8_undefint shr (0+2)
  2599                           
  2600                           ; Vector 32 : U1RX
  2601  000048  0040               	dw	ivt0x8_undefint shr (0+2)
  2602                           
  2603                           ; Vector 33 : U1TX
  2604  00004A  0040               	dw	ivt0x8_undefint shr (0+2)
  2605                           
  2606                           ; Vector 34 : U1E
  2607  00004C  0040               	dw	ivt0x8_undefint shr (0+2)
  2608                           
  2609                           ; Vector 35 : U1
  2610  00004E  0040               	dw	ivt0x8_undefint shr (0+2)
  2611                           
  2612                           ; Vector 36 : Undefined
  2613  000050  0040               	dw	ivt0x8_undefint shr (0+2)
  2614                           
  2615                           ; Vector 37 : Undefined
  2616  000052  0040               	dw	ivt0x8_undefint shr (0+2)
  2617                           
  2618                           ; Vector 38 : PWM1PR
  2619  000054  0040               	dw	ivt0x8_undefint shr (0+2)
  2620                           
  2621                           ; Vector 39 : PWM1
  2622  000056  0040               	dw	ivt0x8_undefint shr (0+2)
  2623                           
  2624                           ; Vector 40 : SPI2RX
  2625  000058  0040               	dw	ivt0x8_undefint shr (0+2)
  2626                           
  2627                           ; Vector 41 : SPI2TX
  2628  00005A  0040               	dw	ivt0x8_undefint shr (0+2)
  2629                           
  2630                           ; Vector 42 : SPI2
  2631  00005C  0040               	dw	ivt0x8_undefint shr (0+2)
  2632                           
  2633                           ; Vector 43 : Undefined
  2634  00005E  0040               	dw	ivt0x8_undefint shr (0+2)
  2635                           
  2636                           ; Vector 44 : TMR3
  2637  000060  0040               	dw	ivt0x8_undefint shr (0+2)
  2638                           
  2639                           ; Vector 45 : TMR3G
  2640  000062  0040               	dw	ivt0x8_undefint shr (0+2)
  2641                           
  2642                           ; Vector 46 : PWM2PR
  2643  000064  0040               	dw	ivt0x8_undefint shr (0+2)
  2644                           
  2645                           ; Vector 47 : PWM2
  2646  000066  0040               	dw	ivt0x8_undefint shr (0+2)
  2647                           
  2648                           ; Vector 48 : INT1
  2649  000068  0948               	dw	_INT1_ISR shr (0+2)
  2650                           
  2651                           ; Vector 49 : CLC2
  2652  00006A  0040               	dw	ivt0x8_undefint shr (0+2)
  2653                           
  2654                           ; Vector 50 : CWG1
  2655  00006C  0040               	dw	ivt0x8_undefint shr (0+2)
  2656                           
  2657                           ; Vector 51 : NCO1
  2658  00006E  0040               	dw	ivt0x8_undefint shr (0+2)
  2659                           
  2660                           ; Vector 52 : DMA2SCNT
  2661  000070  0040               	dw	ivt0x8_undefint shr (0+2)
  2662                           
  2663                           ; Vector 53 : DMA2DCNT
  2664  000072  0040               	dw	ivt0x8_undefint shr (0+2)
  2665                           
  2666                           ; Vector 54 : DMA2OR
  2667  000074  0040               	dw	ivt0x8_undefint shr (0+2)
  2668                           
  2669                           ; Vector 55 : DMA2A
  2670  000076  0040               	dw	ivt0x8_undefint shr (0+2)
  2671                           
  2672                           ; Vector 56 : I2C1RX
  2673  000078  0040               	dw	ivt0x8_undefint shr (0+2)
  2674                           
  2675                           ; Vector 57 : I2C1TX
  2676  00007A  0040               	dw	ivt0x8_undefint shr (0+2)
  2677                           
  2678                           ; Vector 58 : I2C1
  2679  00007C  0040               	dw	ivt0x8_undefint shr (0+2)
  2680                           
  2681                           ; Vector 59 : I2C1E
  2682  00007E  0040               	dw	ivt0x8_undefint shr (0+2)
  2683                           
  2684                           ; Vector 60 : Undefined
  2685  000080  0040               	dw	ivt0x8_undefint shr (0+2)
  2686                           
  2687                           ; Vector 61 : CLC3
  2688  000082  0040               	dw	ivt0x8_undefint shr (0+2)
  2689                           
  2690                           ; Vector 62 : PWM3PR
  2691  000084  0040               	dw	ivt0x8_undefint shr (0+2)
  2692                           
  2693                           ; Vector 63 : PWM3
  2694  000086  0040               	dw	ivt0x8_undefint shr (0+2)
  2695                           
  2696                           ; Vector 64 : U2RX
  2697  000088  0040               	dw	ivt0x8_undefint shr (0+2)
  2698                           
  2699                           ; Vector 65 : U2TX
  2700  00008A  0040               	dw	ivt0x8_undefint shr (0+2)
  2701                           
  2702                           ; Vector 66 : U2E
  2703  00008C  0040               	dw	ivt0x8_undefint shr (0+2)
  2704                           
  2705                           ; Vector 67 : U2
  2706  00008E  0040               	dw	ivt0x8_undefint shr (0+2)
  2707                           
  2708                           ; Vector 68 : TMR5
  2709  000090  0040               	dw	ivt0x8_undefint shr (0+2)
  2710                           
  2711                           ; Vector 69 : TMR5G
  2712  000092  0040               	dw	ivt0x8_undefint shr (0+2)
  2713                           
  2714                           ; Vector 70 : CCP2
  2715  000094  0040               	dw	ivt0x8_undefint shr (0+2)
  2716                           
  2717                           ; Vector 71 : SCAN
  2718  000096  0040               	dw	ivt0x8_undefint shr (0+2)
  2719                           
  2720                           ; Vector 72 : U3RX
  2721  000098  0040               	dw	ivt0x8_undefint shr (0+2)
  2722                           
  2723                           ; Vector 73 : U3TX
  2724  00009A  0040               	dw	ivt0x8_undefint shr (0+2)
  2725                           
  2726                           ; Vector 74 : U3E
  2727  00009C  0040               	dw	ivt0x8_undefint shr (0+2)
  2728                           
  2729                           ; Vector 75 : U3
  2730  00009E  0040               	dw	ivt0x8_undefint shr (0+2)
  2731                           
  2732                           ; Vector 76 : Undefined
  2733  0000A0  0040               	dw	ivt0x8_undefint shr (0+2)
  2734                           
  2735                           ; Vector 77 : CLC4
  2736  0000A2  0040               	dw	ivt0x8_undefint shr (0+2)
  2737                           
  2738                           ; Vector 78 : Undefined
  2739  0000A4  0040               	dw	ivt0x8_undefint shr (0+2)
  2740                           
  2741                           ; Vector 79 : Undefined
  2742  0000A6  0040               	dw	ivt0x8_undefint shr (0+2)
  2743                           
  2744                           ; Vector 80 : INT2
  2745  0000A8  09C9               	dw	_INT2_ISR shr (0+2)
  2746                           
  2747                           ; Vector 81 : CLC5
  2748  0000AA  0040               	dw	ivt0x8_undefint shr (0+2)
  2749                           
  2750                           ; Vector 82 : CWG2
  2751  0000AC  0040               	dw	ivt0x8_undefint shr (0+2)
  2752                           
  2753                           ; Vector 83 : NCO2
  2754  0000AE  0040               	dw	ivt0x8_undefint shr (0+2)
  2755                           
  2756                           ; Vector 84 : DMA3SCNT
  2757  0000B0  0040               	dw	ivt0x8_undefint shr (0+2)
  2758                           
  2759                           ; Vector 85 : DMA3DCNT
  2760  0000B2  0040               	dw	ivt0x8_undefint shr (0+2)
  2761                           
  2762                           ; Vector 86 : DMA3OR
  2763  0000B4  0040               	dw	ivt0x8_undefint shr (0+2)
  2764                           
  2765                           ; Vector 87 : DMA3A
  2766  0000B6  0040               	dw	ivt0x8_undefint shr (0+2)
  2767                           
  2768                           ; Vector 88 : CCP3
  2769  0000B8  0040               	dw	ivt0x8_undefint shr (0+2)
  2770                           
  2771                           ; Vector 89 : CLC6
  2772  0000BA  0040               	dw	ivt0x8_undefint shr (0+2)
  2773                           
  2774                           ; Vector 90 : CWG3
  2775  0000BC  0040               	dw	ivt0x8_undefint shr (0+2)
  2776                           
  2777                           ; Vector 91 : TMR4
  2778  0000BE  0040               	dw	ivt0x8_undefint shr (0+2)
  2779                           
  2780                           ; Vector 92 : DMA4SCNT
  2781  0000C0  0040               	dw	ivt0x8_undefint shr (0+2)
  2782                           
  2783                           ; Vector 93 : DMA4DCNT
  2784  0000C2  0040               	dw	ivt0x8_undefint shr (0+2)
  2785                           
  2786                           ; Vector 94 : DMA4OR
  2787  0000C4  0040               	dw	ivt0x8_undefint shr (0+2)
  2788                           
  2789                           ; Vector 95 : DMA4A
  2790  0000C6  0040               	dw	ivt0x8_undefint shr (0+2)
  2791                           
  2792                           ; Vector 96 : U4RX
  2793  0000C8  0040               	dw	ivt0x8_undefint shr (0+2)
  2794                           
  2795                           ; Vector 97 : U4TX
  2796  0000CA  0040               	dw	ivt0x8_undefint shr (0+2)
  2797                           
  2798                           ; Vector 98 : U4E
  2799  0000CC  0040               	dw	ivt0x8_undefint shr (0+2)
  2800                           
  2801                           ; Vector 99 : U4
  2802  0000CE  0040               	dw	ivt0x8_undefint shr (0+2)
  2803                           
  2804                           ; Vector 100 : DMA5SCNT
  2805  0000D0  0040               	dw	ivt0x8_undefint shr (0+2)
  2806                           
  2807                           ; Vector 101 : DMA5DCNT
  2808  0000D2  0040               	dw	ivt0x8_undefint shr (0+2)
  2809                           
  2810                           ; Vector 102 : DMA5OR
  2811  0000D4  0040               	dw	ivt0x8_undefint shr (0+2)
  2812                           
  2813                           ; Vector 103 : DMA5A
  2814  0000D6  0040               	dw	ivt0x8_undefint shr (0+2)
  2815                           
  2816                           ; Vector 104 : U5RX
  2817  0000D8  0040               	dw	ivt0x8_undefint shr (0+2)
  2818                           
  2819                           ; Vector 105 : U5TX
  2820  0000DA  0040               	dw	ivt0x8_undefint shr (0+2)
  2821                           
  2822                           ; Vector 106 : U5E
  2823  0000DC  0040               	dw	ivt0x8_undefint shr (0+2)
  2824                           
  2825                           ; Vector 107 : U5
  2826  0000DE  0040               	dw	ivt0x8_undefint shr (0+2)
  2827                           
  2828                           ; Vector 108 : DMA6SCNT
  2829  0000E0  0040               	dw	ivt0x8_undefint shr (0+2)
  2830                           
  2831                           ; Vector 109 : DMA6DCNT
  2832  0000E2  0040               	dw	ivt0x8_undefint shr (0+2)
  2833                           
  2834                           ; Vector 110 : DMA6OR
  2835  0000E4  0040               	dw	ivt0x8_undefint shr (0+2)
  2836                           
  2837                           ; Vector 111 : DMA6A
  2838  0000E6  0040               	dw	ivt0x8_undefint shr (0+2)
  2839                           
  2840                           ; Vector 112 : Undefined
  2841  0000E8  0040               	dw	ivt0x8_undefint shr (0+2)
  2842                           
  2843                           ; Vector 113 : CLC7
  2844  0000EA  0040               	dw	ivt0x8_undefint shr (0+2)
  2845                           
  2846                           ; Vector 114 : CMP2
  2847  0000EC  0040               	dw	ivt0x8_undefint shr (0+2)
  2848                           
  2849                           ; Vector 115 : NCO3
  2850  0000EE  0040               	dw	ivt0x8_undefint shr (0+2)
  2851                           
  2852                           ; Vector 116 : Undefined
  2853  0000F0  0040               	dw	ivt0x8_undefint shr (0+2)
  2854                           
  2855                           ; Vector 117 : Undefined
  2856  0000F2  0040               	dw	ivt0x8_undefint shr (0+2)
  2857                           
  2858                           ; Vector 118 : Undefined
  2859  0000F4  0040               	dw	ivt0x8_undefint shr (0+2)
  2860                           
  2861                           ; Vector 119 : Undefined
  2862  0000F6  0040               	dw	ivt0x8_undefint shr (0+2)
  2863                           
  2864                           ; Vector 120 : NVM
  2865  0000F8  0040               	dw	ivt0x8_undefint shr (0+2)
  2866                           
  2867                           ; Vector 121 : CLC8
  2868  0000FA  0040               	dw	ivt0x8_undefint shr (0+2)
  2869                           
  2870                           ; Vector 122 : CRC
  2871  0000FC  0040               	dw	ivt0x8_undefint shr (0+2)
  2872                           
  2873                           ; Vector 123 : TMR6
  2874  0000FE  0040               	dw	ivt0x8_undefint shr (0+2)
  2875  000100                     ivt0x8_undefint:
  2876                           	callstack 0
  2877  000100  00FF               	reset	
  2878                           
  2879                           	psect	rparam
  2880  0000                     
  2881                           	psect	idloc
  2882                           
  2883                           ;Config register IDLOC0 @ 0x200000
  2884                           ;	unspecified, using default values
  2885  200000                     	org	2097152
  2886  200000  0FFF               	dw	4095
  2887                           
  2888                           ;Config register IDLOC1 @ 0x200002
  2889                           ;	unspecified, using default values
  2890  200002                     	org	2097154
  2891  200002  0FFF               	dw	4095
  2892                           
  2893                           ;Config register IDLOC2 @ 0x200004
  2894                           ;	unspecified, using default values
  2895  200004                     	org	2097156
  2896  200004  0FFF               	dw	4095
  2897                           
  2898                           ;Config register IDLOC3 @ 0x200006
  2899                           ;	unspecified, using default values
  2900  200006                     	org	2097158
  2901  200006  0FFF               	dw	4095
  2902                           
  2903                           ;Config register IDLOC4 @ 0x200008
  2904                           ;	unspecified, using default values
  2905  200008                     	org	2097160
  2906  200008  0FFF               	dw	4095
  2907                           
  2908                           ;Config register IDLOC5 @ 0x20000A
  2909                           ;	unspecified, using default values
  2910  20000A                     	org	2097162
  2911  20000A  0FFF               	dw	4095
  2912                           
  2913                           ;Config register IDLOC6 @ 0x20000C
  2914                           ;	unspecified, using default values
  2915  20000C                     	org	2097164
  2916  20000C  0FFF               	dw	4095
  2917                           
  2918                           ;Config register IDLOC7 @ 0x20000E
  2919                           ;	unspecified, using default values
  2920  20000E                     	org	2097166
  2921  20000E  0FFF               	dw	4095
  2922                           
  2923                           ;Config register IDLOC8 @ 0x200010
  2924                           ;	unspecified, using default values
  2925  200010                     	org	2097168
  2926  200010  0FFF               	dw	4095
  2927                           
  2928                           ;Config register IDLOC9 @ 0x200012
  2929                           ;	unspecified, using default values
  2930  200012                     	org	2097170
  2931  200012  0FFF               	dw	4095
  2932                           
  2933                           ;Config register IDLOC10 @ 0x200014
  2934                           ;	unspecified, using default values
  2935  200014                     	org	2097172
  2936  200014  0FFF               	dw	4095
  2937                           
  2938                           ;Config register IDLOC11 @ 0x200016
  2939                           ;	unspecified, using default values
  2940  200016                     	org	2097174
  2941  200016  0FFF               	dw	4095
  2942                           
  2943                           ;Config register IDLOC12 @ 0x200018
  2944                           ;	unspecified, using default values
  2945  200018                     	org	2097176
  2946  200018  0FFF               	dw	4095
  2947                           
  2948                           ;Config register IDLOC13 @ 0x20001A
  2949                           ;	unspecified, using default values
  2950  20001A                     	org	2097178
  2951  20001A  0FFF               	dw	4095
  2952                           
  2953                           ;Config register IDLOC14 @ 0x20001C
  2954                           ;	unspecified, using default values
  2955  20001C                     	org	2097180
  2956  20001C  0FFF               	dw	4095
  2957                           
  2958                           ;Config register IDLOC15 @ 0x20001E
  2959                           ;	unspecified, using default values
  2960  20001E                     	org	2097182
  2961  20001E  0FFF               	dw	4095
  2962                           
  2963                           ;Config register IDLOC16 @ 0x200020
  2964                           ;	unspecified, using default values
  2965  200020                     	org	2097184
  2966  200020  0FFF               	dw	4095
  2967                           
  2968                           ;Config register IDLOC17 @ 0x200022
  2969                           ;	unspecified, using default values
  2970  200022                     	org	2097186
  2971  200022  0FFF               	dw	4095
  2972                           
  2973                           ;Config register IDLOC18 @ 0x200024
  2974                           ;	unspecified, using default values
  2975  200024                     	org	2097188
  2976  200024  0FFF               	dw	4095
  2977                           
  2978                           ;Config register IDLOC19 @ 0x200026
  2979                           ;	unspecified, using default values
  2980  200026                     	org	2097190
  2981  200026  0FFF               	dw	4095
  2982                           
  2983                           ;Config register IDLOC20 @ 0x200028
  2984                           ;	unspecified, using default values
  2985  200028                     	org	2097192
  2986  200028  0FFF               	dw	4095
  2987                           
  2988                           ;Config register IDLOC21 @ 0x20002A
  2989                           ;	unspecified, using default values
  2990  20002A                     	org	2097194
  2991  20002A  0FFF               	dw	4095
  2992                           
  2993                           ;Config register IDLOC22 @ 0x20002C
  2994                           ;	unspecified, using default values
  2995  20002C                     	org	2097196
  2996  20002C  0FFF               	dw	4095
  2997                           
  2998                           ;Config register IDLOC23 @ 0x20002E
  2999                           ;	unspecified, using default values
  3000  20002E                     	org	2097198
  3001  20002E  0FFF               	dw	4095
  3002                           
  3003                           ;Config register IDLOC24 @ 0x200030
  3004                           ;	unspecified, using default values
  3005  200030                     	org	2097200
  3006  200030  0FFF               	dw	4095
  3007                           
  3008                           ;Config register IDLOC25 @ 0x200032
  3009                           ;	unspecified, using default values
  3010  200032                     	org	2097202
  3011  200032  0FFF               	dw	4095
  3012                           
  3013                           ;Config register IDLOC26 @ 0x200034
  3014                           ;	unspecified, using default values
  3015  200034                     	org	2097204
  3016  200034  0FFF               	dw	4095
  3017                           
  3018                           ;Config register IDLOC27 @ 0x200036
  3019                           ;	unspecified, using default values
  3020  200036                     	org	2097206
  3021  200036  0FFF               	dw	4095
  3022                           
  3023                           ;Config register IDLOC28 @ 0x200038
  3024                           ;	unspecified, using default values
  3025  200038                     	org	2097208
  3026  200038  0FFF               	dw	4095
  3027                           
  3028                           ;Config register IDLOC29 @ 0x20003A
  3029                           ;	unspecified, using default values
  3030  20003A                     	org	2097210
  3031  20003A  0FFF               	dw	4095
  3032                           
  3033                           ;Config register IDLOC30 @ 0x20003C
  3034                           ;	unspecified, using default values
  3035  20003C                     	org	2097212
  3036  20003C  0FFF               	dw	4095
  3037                           
  3038                           ;Config register IDLOC31 @ 0x20003E
  3039                           ;	unspecified, using default values
  3040  20003E                     	org	2097214
  3041  20003E  0FFF               	dw	4095
  3042                           
  3043                           	psect	config
  3044                           
  3045                           ;Config register CONFIG1 @ 0x300000
  3046                           ;	External Oscillator Selection
  3047                           ;	FEXTOSC = ECH, EC (external clock) above 8 MHz
  3048                           ;	Reset Oscillator Selection
  3049                           ;	RSTOSC = EXTOSC, EXTOSC operating per FEXTOSC bits (device manufacturing default)
  3050  300000                     	org	3145728
  3051  300000  FF                 	db	255
  3052                           
  3053                           ;Config register CONFIG2 @ 0x300001
  3054                           ;	Clock out Enable bit
  3055                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
  3056                           ;	PRLOCKED One-Way Set Enable bit
  3057                           ;	PR1WAY = ON, PRLOCKED bit can be cleared and set only once
  3058                           ;	Clock Switch Enable bit
  3059                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
  3060                           ;	Fail-Safe Clock Monitor Enable bit
  3061                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
  3062  300001                     	org	3145729
  3063  300001  FF                 	db	255
  3064                           
  3065                           ;Config register CONFIG3 @ 0x300002
  3066                           ;	MCLR Enable bit
  3067                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
  3068                           ;	Power-up timer selection bits
  3069                           ;	PWRTS = PWRT_16, PWRT set at 16ms
  3070                           ;	Multi-vector enable bit
  3071                           ;	MVECEN = ON, Multi-vector enabled, Vector table used for interrupts
  3072                           ;	IVTLOCK bit One-way set enable bit
  3073                           ;	IVT1WAY = ON, IVTLOCKED bit can be cleared and set only once
  3074                           ;	Low Power BOR Enable bit
  3075                           ;	LPBOREN = OFF, Low-Power BOR disabled
  3076                           ;	Brown-out Reset Enable bits
  3077                           ;	BOREN = OFF, Brown-out Reset disabled
  3078  300002                     	org	3145730
  3079  300002  3B                 	db	59
  3080                           
  3081                           ;Config register CONFIG4 @ 0x300003
  3082                           ;	Brown-out Reset Voltage Selection bits
  3083                           ;	BORV = VBOR_1P9, Brown-out Reset Voltage (VBOR) set to 1.9V
  3084                           ;	ZCD Disable bit
  3085                           ;	ZCD = OFF, ZCD module is disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCD
      +                          CON
  3086                           ;	PPSLOCK bit One-Way Set Enable bit
  3087                           ;	PPS1WAY = ON, PPSLOCKED bit can be cleared and set only once; PPS registers remain loc
      +                          ked after one clear/set cycle
  3088                           ;	Stack Full/Underflow Reset Enable bit
  3089                           ;	STVREN = ON, Stack full/underflow will cause Reset
  3090                           ;	Low Voltage Programming Enable bit
  3091                           ;	LVP = OFF, HV on MCLR/VPP must be used for programming
  3092                           ;	Extended Instruction Set Enable bit
  3093                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
  3094  300003                     	org	3145731
  3095  300003  DF                 	db	223
  3096                           
  3097                           ;Config register CONFIG5 @ 0x300004
  3098                           ;	WDT Period selection bits
  3099                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  3100                           ;	WDT operating mode
  3101                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
  3102  300004                     	org	3145732
  3103  300004  9F                 	db	159
  3104                           
  3105                           ;Config register CONFIG6 @ 0x300005
  3106                           ;	WDT Window Select bits
  3107                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
  3108                           ;	WDT input clock selector
  3109                           ;	WDTCCS = SC, Software Control
  3110  300005                     	org	3145733
  3111  300005  FF                 	db	255
  3112                           
  3113                           ;Config register CONFIG7 @ 0x300006
  3114                           ;	Boot Block Size selection bits
  3115                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
  3116                           ;	Boot Block enable bit
  3117                           ;	BBEN = OFF, Boot block disabled
  3118                           ;	Storage Area Flash enable bit
  3119                           ;	SAFEN = OFF, SAF disabled
  3120                           ;	Background Debugger
  3121                           ;	DEBUG = OFF, Background Debugger disabled
  3122  300006                     	org	3145734
  3123  300006  FF                 	db	255
  3124                           
  3125                           ;Config register CONFIG8 @ 0x300007
  3126                           ;	Boot Block Write Protection bit
  3127                           ;	WRTB = OFF, Boot Block not Write protected
  3128                           ;	Configuration Register Write Protection bit
  3129                           ;	WRTC = OFF, Configuration registers not Write protected
  3130                           ;	Data EEPROM Write Protection bit
  3131                           ;	WRTD = OFF, Data EEPROM not Write protected
  3132                           ;	SAF Write protection bit
  3133                           ;	WRTSAF = OFF, SAF not Write Protected
  3134                           ;	Application Block write protection bit
  3135                           ;	WRTAPP = OFF, Application Block not write protected
  3136  300007                     	org	3145735
  3137  300007  FF                 	db	255
  3138                           
  3139                           ; Padding undefined space
  3140  300008                     	org	3145736
  3141  300008  FF                 	db	255
  3142                           
  3143                           ;Config register CONFIG10 @ 0x300009
  3144                           ;	PFM and Data EEPROM Code Protection bit
  3145                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
  3146  300009                     	org	3145737
  3147  300009  FF                 	db	255
  3148                           tosu	equ	0x4FF
  3149                           tosh	equ	0x4FE
  3150                           tosl	equ	0x4FD
  3151                           stkptr	equ	0x4FC
  3152                           pclatu	equ	0x4FB
  3153                           pclath	equ	0x4FA
  3154                           pcl	equ	0x4F9
  3155                           tblptru	equ	0x4F8
  3156                           tblptrh	equ	0x4F7
  3157                           tblptrl	equ	0x4F6
  3158                           tablat	equ	0x4F5
  3159                           prodh	equ	0x4F4
  3160                           prodl	equ	0x4F3
  3161                           indf0	equ	0x4EF
  3162                           postinc0	equ	0x4EE
  3163                           postdec0	equ	0x4ED
  3164                           preinc0	equ	0x4EC
  3165                           plusw0	equ	0x4EB
  3166                           fsr0h	equ	0x4EA
  3167                           fsr0l	equ	0x4E9
  3168                           wreg	equ	0x4E8
  3169                           indf1	equ	0x4E7
  3170                           postinc1	equ	0x4E6
  3171                           postdec1	equ	0x4E5
  3172                           preinc1	equ	0x4E4
  3173                           plusw1	equ	0x4E3
  3174                           fsr1h	equ	0x4E2
  3175                           fsr1l	equ	0x4E1
  3176                           bsr	equ	0x4E0
  3177                           indf2	equ	0x4DF
  3178                           postinc2	equ	0x4DE
  3179                           postdec2	equ	0x4DD
  3180                           preinc2	equ	0x4DC
  3181                           plusw2	equ	0x4DB
  3182                           fsr2h	equ	0x4DA
  3183                           fsr2l	equ	0x4D9
  3184                           status	equ	0x4D8

Data Sizes:
    Strings     28
    Constant    0
    Data        2
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     16      19
    BANK5           160      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0
    BANK32          256      0       0
    BANK33          256      0       0
    BANK34          256      0       0
    BANK35          256      0       0
    BANK36          256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_2(CODE[14]), STR_1(CODE[14]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_2(CODE[14]), STR_1(CODE[14]), 

    ESCRIBE_MENSAJE2@cadena	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_2(CODE[14]), STR_1(CODE[14]), 


Critical Paths under _main in COMRAM

    _main->_ESCRIBE_MENSAJE2
    _configuro->_LCD_INIT
    _LCD_INIT->_CURSOR_ONOFF
    _LCD_INIT->_LCD_CONFIG
    _LCD_CONFIG->_ENVIA_LCD_CMD
    _CURSOR_ONOFF->_ENVIA_LCD_CMD
    _CURSOR_HOME->_ENVIA_LCD_CMD
    _BORRAR_LCD->_ENVIA_LCD_CMD
    _POS_CURSOR->_ENVIA_LCD_CMD
    _ENVIA_LCD_CMD->_ENVIA_NIBBLE
    _ENVIA_LCD_CMD->_LEER_LCD
    _ESCRIBE_MENSAJE2->_strlen
    _ENVIA_CHAR->_ENVIA_NIBBLE
    _ENVIA_CHAR->_LEER_LCD

Critical Paths under _INT0_ISR in COMRAM

    None.

Critical Paths under _INT1_ISR in COMRAM

    None.

Critical Paths under _INT2_ISR in COMRAM

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT0_ISR in BANK5

    None.

Critical Paths under _INT1_ISR in BANK5

    None.

Critical Paths under _INT2_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT0_ISR in BANK6

    None.

Critical Paths under _INT1_ISR in BANK6

    None.

Critical Paths under _INT2_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT0_ISR in BANK7

    None.

Critical Paths under _INT1_ISR in BANK7

    None.

Critical Paths under _INT2_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INT0_ISR in BANK8

    None.

Critical Paths under _INT1_ISR in BANK8

    None.

Critical Paths under _INT2_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INT0_ISR in BANK9

    None.

Critical Paths under _INT1_ISR in BANK9

    None.

Critical Paths under _INT2_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INT0_ISR in BANK10

    None.

Critical Paths under _INT1_ISR in BANK10

    None.

Critical Paths under _INT2_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INT0_ISR in BANK11

    None.

Critical Paths under _INT1_ISR in BANK11

    None.

Critical Paths under _INT2_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INT0_ISR in BANK12

    None.

Critical Paths under _INT1_ISR in BANK12

    None.

Critical Paths under _INT2_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INT0_ISR in BANK13

    None.

Critical Paths under _INT1_ISR in BANK13

    None.

Critical Paths under _INT2_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INT0_ISR in BANK14

    None.

Critical Paths under _INT1_ISR in BANK14

    None.

Critical Paths under _INT2_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INT0_ISR in BANK15

    None.

Critical Paths under _INT1_ISR in BANK15

    None.

Critical Paths under _INT2_ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INT0_ISR in BANK16

    None.

Critical Paths under _INT1_ISR in BANK16

    None.

Critical Paths under _INT2_ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INT0_ISR in BANK17

    None.

Critical Paths under _INT1_ISR in BANK17

    None.

Critical Paths under _INT2_ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INT0_ISR in BANK18

    None.

Critical Paths under _INT1_ISR in BANK18

    None.

Critical Paths under _INT2_ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INT0_ISR in BANK19

    None.

Critical Paths under _INT1_ISR in BANK19

    None.

Critical Paths under _INT2_ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INT0_ISR in BANK20

    None.

Critical Paths under _INT1_ISR in BANK20

    None.

Critical Paths under _INT2_ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INT0_ISR in BANK21

    None.

Critical Paths under _INT1_ISR in BANK21

    None.

Critical Paths under _INT2_ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INT0_ISR in BANK22

    None.

Critical Paths under _INT1_ISR in BANK22

    None.

Critical Paths under _INT2_ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INT0_ISR in BANK23

    None.

Critical Paths under _INT1_ISR in BANK23

    None.

Critical Paths under _INT2_ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INT0_ISR in BANK24

    None.

Critical Paths under _INT1_ISR in BANK24

    None.

Critical Paths under _INT2_ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INT0_ISR in BANK25

    None.

Critical Paths under _INT1_ISR in BANK25

    None.

Critical Paths under _INT2_ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _INT0_ISR in BANK26

    None.

Critical Paths under _INT1_ISR in BANK26

    None.

Critical Paths under _INT2_ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _INT0_ISR in BANK27

    None.

Critical Paths under _INT1_ISR in BANK27

    None.

Critical Paths under _INT2_ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _INT0_ISR in BANK28

    None.

Critical Paths under _INT1_ISR in BANK28

    None.

Critical Paths under _INT2_ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _INT0_ISR in BANK29

    None.

Critical Paths under _INT1_ISR in BANK29

    None.

Critical Paths under _INT2_ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _INT0_ISR in BANK30

    None.

Critical Paths under _INT1_ISR in BANK30

    None.

Critical Paths under _INT2_ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _INT0_ISR in BANK31

    None.

Critical Paths under _INT1_ISR in BANK31

    None.

Critical Paths under _INT2_ISR in BANK31

    None.

Critical Paths under _main in BANK32

    None.

Critical Paths under _INT0_ISR in BANK32

    None.

Critical Paths under _INT1_ISR in BANK32

    None.

Critical Paths under _INT2_ISR in BANK32

    None.

Critical Paths under _main in BANK33

    None.

Critical Paths under _INT0_ISR in BANK33

    None.

Critical Paths under _INT1_ISR in BANK33

    None.

Critical Paths under _INT2_ISR in BANK33

    None.

Critical Paths under _main in BANK34

    None.

Critical Paths under _INT0_ISR in BANK34

    None.

Critical Paths under _INT1_ISR in BANK34

    None.

Critical Paths under _INT2_ISR in BANK34

    None.

Critical Paths under _main in BANK35

    None.

Critical Paths under _INT0_ISR in BANK35

    None.

Critical Paths under _INT1_ISR in BANK35

    None.

Critical Paths under _INT2_ISR in BANK35

    None.

Critical Paths under _main in BANK36

    None.

Critical Paths under _INT0_ISR in BANK36

    None.

Critical Paths under _INT1_ISR in BANK36

    None.

Critical Paths under _INT2_ISR in BANK36

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    1437
                                             14 COMRAM     2     2      0
                   _ESCRIBE_MENSAJE2
                         _POS_CURSOR
                          _configuro
 ---------------------------------------------------------------------------------
 (1) _configuro                                            0     0      0     525
                           _LCD_INIT
 ---------------------------------------------------------------------------------
 (2) _LCD_INIT                                             1     1      0     525
                                              8 COMRAM     1     1      0
                         _BORRAR_LCD
                        _CURSOR_HOME
                       _CURSOR_ONOFF
                         _LCD_CONFIG
 ---------------------------------------------------------------------------------
 (3) _LCD_CONFIG                                           1     1      0     135
                                              7 COMRAM     1     1      0
                      _ENVIA_LCD_CMD
                       _ENVIA_NIBBLE
 ---------------------------------------------------------------------------------
 (3) _CURSOR_ONOFF                                         1     1      0     150
                                              7 COMRAM     1     1      0
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (3) _CURSOR_HOME                                          0     0      0     120
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (3) _BORRAR_LCD                                           0     0      0     120
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (1) _POS_CURSOR                                           2     1      1     360
                                              7 COMRAM     2     1      1
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (4) _ENVIA_LCD_CMD                                        2     2      0     120
                                              5 COMRAM     2     2      0
                       _ENVIA_NIBBLE
                           _LEER_LCD
 ---------------------------------------------------------------------------------
 (1) _ESCRIBE_MENSAJE2                                     6     4      2     552
                                              8 COMRAM     6     4      2
                         _ENVIA_CHAR
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strlen                                               4     2      2     166
                                              4 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _ENVIA_CHAR                                           2     2      0     120
                                              5 COMRAM     2     2      0
                       _ENVIA_NIBBLE
                           _LEER_LCD
 ---------------------------------------------------------------------------------
 (5) _LEER_LCD                                             1     1      0      45
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _ENVIA_NIBBLE                                         1     1      0      15
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _INT0_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _INT1_ISR                                             2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _INT2_ISR                                             2     2      0       0
                                              2 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ESCRIBE_MENSAJE2
     _ENVIA_CHAR
       _ENVIA_NIBBLE
       _LEER_LCD
     _strlen
   _POS_CURSOR
     _ENVIA_LCD_CMD
       _ENVIA_NIBBLE
       _LEER_LCD
   _configuro
     _LCD_INIT
       _BORRAR_LCD
         _ENVIA_LCD_CMD
       _CURSOR_HOME
         _ENVIA_LCD_CMD
       _CURSOR_ONOFF
         _ENVIA_LCD_CMD
       _LCD_CONFIG
         _ENVIA_LCD_CMD
         _ENVIA_NIBBLE

 _INT0_ISR (ROOT)

 _INT1_ISR (ROOT)

 _INT2_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0       0      69        0.0%
EEDATA             400      0       0       0        0.0%
BITBIGSFRlhhhll    15E      0       0      92        0.0%
BITBIGSFR_1        100      0       0      68        0.0%
BITBANK36          100      0       0      66        0.0%
BANK36             100      0       0      67        0.0%
BITBANK35          100      0       0      64        0.0%
BANK35             100      0       0      65        0.0%
BITBANK34          100      0       0      62        0.0%
BANK34             100      0       0      63        0.0%
BITBANK33          100      0       0      60        0.0%
BANK33             100      0       0      61        0.0%
BITBANK32          100      0       0      58        0.0%
BANK32             100      0       0      59        0.0%
BITBANK31          100      0       0      56        0.0%
BANK31             100      0       0      57        0.0%
BITBANK30          100      0       0      54        0.0%
BANK30             100      0       0      55        0.0%
BITBANK29          100      0       0      52        0.0%
BANK29             100      0       0      53        0.0%
BITBANK28          100      0       0      50        0.0%
BANK28             100      0       0      51        0.0%
BITBANK27          100      0       0      48        0.0%
BANK27             100      0       0      49        0.0%
BITBANK26          100      0       0      46        0.0%
BANK26             100      0       0      47        0.0%
BITBANK25          100      0       0      44        0.0%
BANK25             100      0       0      45        0.0%
BITBANK24          100      0       0      42        0.0%
BANK24             100      0       0      43        0.0%
BITBANK23          100      0       0      40        0.0%
BANK23             100      0       0      41        0.0%
BITBANK22          100      0       0      38        0.0%
BANK22             100      0       0      39        0.0%
BITBANK21          100      0       0      36        0.0%
BANK21             100      0       0      37        0.0%
BITBANK20          100      0       0      34        0.0%
BANK20             100      0       0      35        0.0%
BITBANK19          100      0       0      32        0.0%
BANK19             100      0       0      33        0.0%
BITBANK18          100      0       0      30        0.0%
BANK18             100      0       0      31        0.0%
BITBANK17          100      0       0      28        0.0%
BANK17             100      0       0      29        0.0%
BITBANK16          100      0       0      26        0.0%
BANK16             100      0       0      27        0.0%
BITBANK15          100      0       0      24        0.0%
BANK15             100      0       0      25        0.0%
BITBANK14          100      0       0      22        0.0%
BANK14             100      0       0      23        0.0%
BITBANK13          100      0       0      20        0.0%
BANK13             100      0       0      21        0.0%
BITBANK12          100      0       0      18        0.0%
BANK12             100      0       0      19        0.0%
BITBANK11          100      0       0      16        0.0%
BANK11             100      0       0      17        0.0%
BITBANK10          100      0       0      14        0.0%
BANK10             100      0       0      15        0.0%
BITBANK9           100      0       0      12        0.0%
BANK9              100      0       0      13        0.0%
BITBANK8           100      0       0      10        0.0%
BANK8              100      0       0      11        0.0%
BITBANK7           100      0       0       8        0.0%
BANK7              100      0       0       9        0.0%
BITBANK6           100      0       0       6        0.0%
BANK6              100      0       0       7        0.0%
BITBIGSFRlhhhll     E2      0       0      90        0.0%
BITBIGSFRlhhhll     C1      0       0      86        0.0%
BITBIGSFRll         AD      0       0      95        0.0%
BITBANK5            A0      0       0       4        0.0%
BANK5               A0      0       0       5        0.0%
BITBIGSFRlhhhhl     76      0       0      82        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     10      13       1       20.0%
BITBIGSFRlhhhll     2A      0       0      91        0.0%
BITBIGSFRhhhh       29      0       0      70        0.0%
BITBIGSFRlhhhll     19      0       0      88        0.0%
BITBIGSFRlhhhhl      F      0       0      83        0.0%
BITBIGSFRlhhhhh      8      0       0      76        0.0%
BITBIGSFRlhhhlh      7      0       0      84        0.0%
BITBIGSFRlhhhhh      6      0       0      79        0.0%
BITBIGSFRlhhhll      6      0       0      85        0.0%
BITBIGSFRhhlh        5      0       0      72        0.0%
BITBIGSFRlhhhhh      4      0       0      78        0.0%
BITBIGSFRlhhhhh      4      0       0      81        0.0%
BITBIGSFRhhhl        4      0       0      71        0.0%
BITBIGSFRlhhhhh      3      0       0      77        0.0%
BITBIGSFRhlh         3      0       0      74        0.0%
BITBIGSFRlhhhhh      3      0       0      80        0.0%
BITBIGSFRlhl         3      0       0      94        0.0%
BITBIGSFRlhhhll      1      0       0      87        0.0%
BITBIGSFRlhhhll      1      0       0      89        0.0%
BITBIGSFRlhhl        1      0       0      93        0.0%
BITBIGSFRhhll        1      0       0      73        0.0%
BITBIGSFRhll         1      0       0      75        0.0%
BIGSFR_1             0      0       0     200        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      13      96        0.0%
DATA                 0      0      13       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Wed Jun 07 17:35:47 2023

                      l26 2BB8                        l71 2C54                        l39 2CFA  
                      l80 2CF2                        l56 2CB6                        l74 2D02  
                      l83 2C20                        l68 2B3C                        l77 2AEA  
                      l87 29EE                        l89 2A2A                        l97 2BEC  
                      u10 2A2A                        u11 2A26                        u20 2C9A  
                      u21 2C96                        u30 2CB0                        u31 2CAC  
           ENVIA_CHAR@aux 0507                       l182 29B4                       l187 2A30  
                     l941 29B6                       l951 29C8                       l943 29BA  
                     l961 29E2                       l953 29CE                       l945 29BC  
                     l971 2A08                       l963 29E4                       l955 29D0  
                     l947 29BE                       l939 2B7E                       l981 2CE6  
                     l973 2A12                       l965 29F0                       l957 29D8  
                     l949 29C0                       l983 2CE8                       l967 29F8  
                     l959 29DA                       l991 2BF6                       l985 2CF0  
                     l969 29FE                       l977 2A18                       l993 2BFA  
                     l979 2CDA                       l995 2C02                       l987 2BF0  
                     l997 2C04                       l989 2BF2                       l999 2C06  
                     u200 2B3C                       u201 2B38                       u217 2A68  
                     u170 2B72                       u307 29D2                       u171 2B6E  
                     u227 2A82                       u180 2B92                       u317 29DC  
                     u181 2B8E                       u237 2BC0                       u190 2BB0  
                     u327 29F2                       u191 2BAC                       u247 2BD4  
                     u337 2A02                       u257 2AA8                       u347 2A0C  
                     u267 2ABA                       u357 2CEA                       u277 2BFC  
                     u287 2C30                       u297 29C2               LEER_LCD@aux 0505  
                     wreg 0004E8              ?_CURSOR_HOME 0501            ??_ENVIA_NIBBLE 0505  
          ENVIA_CHAR@dato 0506                      l1001 2C08                      l1003 2C0E  
                    l1011 2C8A                      l1005 2C14                      l1013 2C9A  
                    l1021 2A98                      l1101 2928                      l1007 2C1A  
                    l1015 2CA0                      l1031 2AC6                      l1023 2A9C  
                    l1111 2948                      l1103 2940                      l1009 2CF4  
                    l1017 2CB0                      l1041 2AE4                      l1033 2ACC  
                    l1025 2AA2                      l1121 2952                      l1113 294A  
                    l1105 2942                      l1051 2C36                      l1043 2C24  
                    l1019 2CFC                      l1035 2AD2                      l1027 2AB2  
                    l1131 295C                      l1123 2954                      l1115 294C  
                    l1107 2944                      l1061 2C48                      l1053 2C38  
                    l1045 2C26                      l1037 2AD8                      l1029 2AC0  
                    l1141 29AA                      l1133 295E                      l1125 2956  
                    l1117 294E                      l1109 2946                      l1063 2C4E  
                    l1055 2C3A                      l1047 2C2A                      l1039 2ADE  
                    l1143 29AE                      l1135 2960                      l1127 2958  
                    l1119 2950                      l1057 2C3C                      l1049 2C2E  
                    l1145 29B0                      l1137 2962                      l1129 295A  
                    l1059 2C42                      l1075 2BBA                      l1139 2964  
                    l1421 2B3E                      l1077 2BCA                      l1423 2B4A  
                    l1431 2B82                      l1079 2BCE                      l1425 2B4E  
                    l1441 2AFC                      l1433 2B92                      l1427 2B72  
                    l1443 2AFC                      l1435 2B9E                      l1451 2A2C  
                    l1445 2B04                      l1437 2BB0                      l1461 2A76  
                    l1453 2A3A                      l1447 2B28                      l1439 2AEC  
                    l1463 2A78                      l1455 2A46                      l1449 2B2A  
                    l1457 2A5C                      l1459 2A5E                      STR_1 2501  
                    STR_2 250F                      _LATD 0004C1                      _T2PR 000323  
                    _main 2A2C                      start 0102             ?_CURSOR_ONOFF 0501  
            ___param_bank 000000           ??_ENVIA_LCD_CMD 0506          __end_of_LCD_INIT 2BEE  
        __end_of_LEER_LCD 2A2C          __end_of_INT0_ISR 2CD8          __end_of_INT1_ISR 2724  
        __end_of_INT2_ISR 2928                     ?_main 0501                     _T2CON 000324  
                   i2l228 2722                     i2l259 2926                     i2l197 2CD6  
                   _OSCEN 0000B3                     _PORTD 0004D1                     _TRISD 0004C9  
             ?_POS_CURSOR 0508                     tablat 0004F5                     status 0004D8  
          ??_CURSOR_ONOFF 0508           __initialization 2C56              __end_of_main 2A98  
                  ??_main 050F             __activetblptr 000003                    _CCPR1H 000341  
                  _CCPR2H 000345                    _CCPR1L 000340                    _CCPR2L 000344  
                  _ANSELD 000418                    _RC1PPS 000212                    _RC2PPS 000213  
                  i2l1211 2CBA                    i2l1301 27AA                    i2l1213 2CCA  
                  i2l1311 283E                    i2l1303 27B8                    i2l1231 256E  
                  i2l1223 2536                    i2l1215 2CD2                    i2l1321 2884  
                  i2l1313 284C                    i2l1241 25B4                    i2l1233 257C  
                  i2l1225 2544                    i2l1217 2520                    i2l1209 2CB8  
                  i2l1323 2892                    i2l1315 285A                    i2l1307 27C6  
                  i2l1331 28BC                    i2l1251 2648                    i2l1235 258A  
                  i2l1227 2552                    i2l1219 2522                    i2l1325 28A0  
                  i2l1317 2868                    i2l1309 2830                    i2l1261 268E  
                  i2l1253 2656                    i2l1237 2598                    i2l1229 2560  
                  i2l1245 25C2                    i2l1327 28AE                    i2l1319 2876  
                  i2l1263 269C                    i2l1255 2664                    i2l1247 262C  
                  i2l1239 25A6                    i2l1281 2726                    i2l1265 26AA  
                  i2l1257 2672                    i2l1249 263A                    i2l1291 2764  
                  i2l1259 2680                    i2l1293 2772                    i2l1285 273A  
                  i2l1269 26B8                    i2l1551 28D0                    i2l1295 2780  
                  i2l1287 2748                    i2l1279 2724                    i2l1297 278E  
                  i2l1289 2756                    i2l1545 25D6                    i2l1299 279C  
                  i2l1547 26CC                    i2l1549 27DA                    _OSCFRQ 0000B1  
    __end_of_ENVIA_NIBBLE 2CF4                    _ajuste 0511                    isa$std 000001  
                  _strlen 2B3E              __pdataCOMRAM 0511              __mediumconst 0000  
                  tblptrh 0004F7                    tblptrl 0004F6                    tblptru 0004F8  
            ??_BORRAR_LCD 0508                 ?_LCD_INIT 0501                 ?_LEER_LCD 0501  
              __accesstop 0560   __end_of__initialization 2C82                 ?_INT0_ISR 0501  
               ?_INT1_ISR 0501                 ?_INT2_ISR 0501              ??_LCD_CONFIG 0508  
           ___rparam_used 000001              ??_ENVIA_CHAR 0506            __pcstackCOMRAM 0501  
          ivt0x8_undefint 0100        __end_of_BORRAR_LCD 2D04          _ESCRIBE_MENSAJE2 2AEC  
        ENVIA_LCD_CMD@aux 0507      __end_of_CURSOR_ONOFF 2CB8        __end_of_LCD_CONFIG 2AEC  
      __end_of_ENVIA_CHAR 2C56                ??_LCD_INIT 0509                ??_LEER_LCD 0505  
        ENVIA_NIBBLE@dato 0505                ??_INT0_ISR 0501                ??_INT1_ISR 0501  
              ??_INT2_ISR 0503                   IVTBASEH 00045E                   IVTBASEL 00045D  
                 IVTBASEU 00045F                   _CCP1CON 000342                   _CCP2CON 000346  
         _nivel_backlight 0512                   ?_strlen 0505                   _INT0PPS 00023E  
                 _INT1PPS 00023F                   _INT2PPS 000240                   _OSCCON1 0000AD  
                 i2u14_40 2CCA                   i2u14_41 2CC6                   i2u15_40 2532  
                 i2u15_41 252E                   i2u16_40 2736                   i2u16_41 2732  
            ??_POS_CURSOR 0509                   __Hparam 0000                   __Lparam 0000  
         _nivel_contraste 0513         __end_of_configuro 29B6              __psmallconst 2500  
   __end_of_ENVIA_LCD_CMD 2C22                   __pcinit 2C56        __end_of_POS_CURSOR 2BBA  
                 __ramtop 2500                   __ptext0 2A2C                   __ptext1 2928  
                 __ptext2 2BBA                   __ptext3 2A98                   __ptext4 2C88  
                 __ptext5 2CF4                   __ptext6 2CFC                   __ptext7 2B80  
                 __ptext8 2BEE                   __ptext9 2AEC                 _PIE10bits 0004A8  
            _ENVIA_NIBBLE 2CD8      end_of_initialization 2C82                 _PIR10bits 0004B8  
                 strlen@a 0507                   strlen@s 0505         ESCRIBE_MENSAJE2@i 050E  
               _TRISBbits 0004C7                 _TRISCbits 0004C8                 _TRISFbits 0004CB  
__end_of_ESCRIBE_MENSAJE2 2B3E              _CURSOR_ONOFF 2C88        CURSOR_ONOFF@estado 0508  
           __pidataCOMRAM 2D04            __end_of_strlen 2B80             ??_CURSOR_HOME 0508  
     start_initialization 2C56                ivt0x8_base 0008         ENVIA_LCD_CMD@dato 0506  
                ??_strlen 0507               __pbssCOMRAM 0513       __end_of_CURSOR_HOME 2CFC  
               _configuro 2928               __smallconst 2500                  _T2CLKCON 000326  
                _LCD_INIT 2BBA                  _LEER_LCD 29B6                  _INT0_ISR 2CB8  
                _INT1_ISR 2520                  _INT2_ISR 2724                  _LATDbits 0004C1  
                _LATFbits 0004C3                  _PIE1bits 00049F                  _PIE6bits 0004A4  
                _PIR1bits 0004AF                  _PIR6bits 0004B4            POS_CURSOR@fila 0509  
              ?_configuro 0501    ESCRIBE_MENSAJE2@cadena 0509                  _WPUBbits 000409  
             _CURSOR_HOME 2CF4               _INTCON0bits 0004D6                  __Hrparam 0000  
       ?_ESCRIBE_MENSAJE2 0509                  __Lrparam 0000        ??_ESCRIBE_MENSAJE2 050B  
              _ANSELBbits 000408                _ANSELCbits 000410                _ANSELFbits 000428  
                __pivt0x8 0008                  __ptext10 2B3E                  __ptext11 2C22  
                __ptext12 29B6                  __ptext13 2CD8                  __ptext14 2CB8  
                __ptext15 2520                  __ptext16 2724                _BORRAR_LCD 2CFC  
              _LCD_CONFIG 2A98                _ENVIA_CHAR 2C22                  isa$xinst 000000  
           _ENVIA_LCD_CMD 2BEE               ??_configuro 050A                  intlevel2 0000  
          ?_ENVIA_LCD_CMD 0501       ESCRIBE_MENSAJE2@tam 050D               ?_BORRAR_LCD 0501  
           ?_ENVIA_NIBBLE 0501                _POS_CURSOR 2B80               ?_LCD_CONFIG 0501  
             ?_ENVIA_CHAR 0501         POS_CURSOR@columna 0508  
