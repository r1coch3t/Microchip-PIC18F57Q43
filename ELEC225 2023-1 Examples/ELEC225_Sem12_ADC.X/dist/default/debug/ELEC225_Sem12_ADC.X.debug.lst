

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Mon Jun 19 12:21:49 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	18F57Q43
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=2
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1
    22                           	psect	text13,global,reloc=2,class=CODE,delta=1
    23                           	psect	text14,global,reloc=2,class=CODE,delta=1
    24                           	psect	text15,global,reloc=2,class=CODE,delta=1
    25                           	psect	text16,global,reloc=2,class=CODE,delta=1
    26                           	psect	text17,global,reloc=2,class=CODE,delta=1
    27                           	psect	text18,global,reloc=2,class=CODE,delta=1
    28                           	psect	text19,global,reloc=2,class=CODE,delta=1
    29                           	psect	text20,global,reloc=2,class=CODE,delta=1
    30                           	psect	text21,global,reloc=2,class=CODE,delta=1
    31                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    32                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    33                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    34                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    35   000000                     
    36                           ; Generated 17/06/2022 GMT
    37                           ; 
    38                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    39                           ; All rights reserved.
    40                           ; 
    41                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    42                           ; 
    43                           ; Redistribution and use in source and binary forms, with or without modification, are
    44                           ; permitted provided that the following conditions are met:
    45                           ; 
    46                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    47                           ;        conditions and the following disclaimer.
    48                           ; 
    49                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    50                           ;        of conditions and the following disclaimer in the documentation and/or other
    51                           ;        materials provided with the distribution. Publication is not required when
    52                           ;        this file is used in an embedded application.
    53                           ; 
    54                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    55                           ;        software without specific prior written permission.
    56                           ; 
    57                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    58                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    59                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    60                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    61                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    62                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    63                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    64                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    65                           ; 
    66                           ; 
    67                           ; Code-generator required, PIC18F57Q43 Definitions
    68                           ; 
    69                           ; SFR Addresses
    70   000000                     _U1CON1	set	684
    71   000000                     _U1CON2	set	685
    72   000000                     _LATD	set	1217
    73   000000                     _OSCCON1	set	173
    74   000000                     _OSCFRQ	set	177
    75   000000                     _OSCEN	set	179
    76   000000                     _RF0PPS	set	553
    77   000000                     _U1CON0	set	683
    78   000000                     _U1BRGL	set	686
    79   000000                     _U1BRGH	set	687
    80   000000                     _ADCON0bits	set	1011
    81   000000                     _ANSELA	set	1024
    82   000000                     _TRISA	set	1222
    83   000000                     _TRISD	set	1225
    84   000000                     _TRISB	set	1223
    85   000000                     _ANSELB	set	1032
    86   000000                     _ANSELD	set	1048
    87   000000                     _PORTD	set	1233
    88   000000                     _TRISFbits	set	1227
    89   000000                     _TRISE	set	1226
    90   000000                     _ANSELE	set	1056
    91   000000                     _ANSELFbits	set	1064
    92   000000                     _LATDbits	set	1217
    93   000000                     _U1ERRIRbits	set	690
    94   000000                     _ADRESL	set	1002
    95   000000                     _ADRESH	set	1003
    96   000000                     _ADPCH	set	1004
    97   000000                     _U1TXB	set	675
    98                           
    99                           	psect	smallconst
   100   002600                     __psmallconst:
   101                           	callstack 0
   102   002600  00                 	db	0
   103   002601                     STR_2:
   104                           
   105                           ; BSR set to: 3
   106   002601  54                 	db	84	;'T'
   107   002602  61                 	db	97	;'a'
   108   002603  6C                 	db	108	;'l'
   109   002604  6C                 	db	108	;'l'
   110   002605  65                 	db	101	;'e'
   111   002606  72                 	db	114	;'r'
   112   002607  20                 	db	32
   113   002608  64                 	db	100	;'d'
   114   002609  65                 	db	101	;'e'
   115   00260A  20                 	db	32
   116   00260B  4D                 	db	77	;'M'
   117   00260C  69                 	db	105	;'i'
   118   00260D  63                 	db	99	;'c'
   119   00260E  72                 	db	114	;'r'
   120   00260F  6F                 	db	111	;'o'
   121   002610  00                 	db	0
   122   002611                     STR_6:
   123                           
   124                           ; BSR set to: 3
   125   002611  43                 	db	67	;'C'
   126   002612  61                 	db	97	;'a'
   127   002613  6E                 	db	110	;'n'
   128   002614  61                 	db	97	;'a'
   129   002615  6C                 	db	108	;'l'
   130   002616  20                 	db	32
   131   002617  41                 	db	65	;'A'
   132   002618  4E                 	db	78	;'N'
   133   002619  2D                 	db	45
   134   00261A  30                 	db	48	;'0'
   135   00261B  3A                 	db	58	;':'
   136   00261C  00                 	db	0
   137   00261D                     STR_8:
   138                           
   139                           ; BSR set to: 3
   140   00261D  43                 	db	67	;'C'
   141   00261E  61                 	db	97	;'a'
   142   00261F  6E                 	db	110	;'n'
   143   002620  61                 	db	97	;'a'
   144   002621  6C                 	db	108	;'l'
   145   002622  20                 	db	32
   146   002623  41                 	db	65	;'A'
   147   002624  4E                 	db	78	;'N'
   148   002625  2D                 	db	45
   149   002626  31                 	db	49	;'1'
   150   002627  3A                 	db	58	;':'
   151   002628  00                 	db	0
   152   002629                     STR_1:
   153                           
   154                           ; BSR set to: 3
   155   002629  53                 	db	83	;'S'
   156   00262A  65                 	db	101	;'e'
   157   00262B  6D                 	db	109	;'m'
   158   00262C  61                 	db	97	;'a'
   159   00262D  6E                 	db	110	;'n'
   160   00262E  61                 	db	97	;'a'
   161   00262F  20                 	db	32
   162   002630  31                 	db	49	;'1'
   163   002631  32                 	db	50	;'2'
   164   002632  00                 	db	0
   165   002633  00                 	db	0	; dummy byte at the end
   166   000000                     
   167                           ; #config settings
   168                           
   169                           	psect	cinit
   170   002C76                     __pcinit:
   171                           	callstack 0
   172   002C76                     start_initialization:
   173                           	callstack 0
   174   002C76                     __initialization:
   175                           	callstack 0
   176                           
   177                           ; Clear objects allocated to COMRAM (5 bytes)
   178   002C76  6A13               	clrf	(__pbssCOMRAM+4)& (0+255),c
   179   002C78  6A12               	clrf	(__pbssCOMRAM+3)& (0+255),c
   180   002C7A  6A11               	clrf	(__pbssCOMRAM+2)& (0+255),c
   181   002C7C  6A10               	clrf	(__pbssCOMRAM+1)& (0+255),c
   182   002C7E  6A0F               	clrf	__pbssCOMRAM& (0+255),c
   183   002C80                     end_of_initialization:
   184                           	callstack 0
   185   002C80                     __end_of__initialization:
   186                           	callstack 0
   187   002C80  0E00               	movlw	low (__Lsmallconst shr (0+16))
   188   002C82  6EF8               	movwf	tblptru,c
   189   002C84  0E26               	movlw	high __Lsmallconst
   190   002C86  6EF7               	movwf	tblptrh,c
   191   002C88  0100               	movlb	0
   192   002C8A  EF1A  F013         	goto	_main	;jump to C main() function
   193                           
   194                           	psect	bssCOMRAM
   195   00050F                     __pbssCOMRAM:
   196                           	callstack 0
   197   00050F                     _unidad:
   198                           	callstack 0
   199   00050F                     	ds	1
   200   000510                     _decena:
   201                           	callstack 0
   202   000510                     	ds	1
   203   000511                     _centena:
   204                           	callstack 0
   205   000511                     	ds	1
   206   000512                     _millar:
   207                           	callstack 0
   208   000512                     	ds	1
   209   000513                     _diezmillar:
   210                           	callstack 0
   211   000513                     	ds	1
   212                           
   213                           	psect	cstackCOMRAM
   214   000501                     __pcstackCOMRAM:
   215                           	callstack 0
   216   000501                     ?_strlen:
   217                           	callstack 0
   218   000501                     ?_ADC_GetValue:
   219                           	callstack 0
   220   000501                     ?___lwmod:
   221                           	callstack 0
   222   000501                     UART1_Data_Send@dato:
   223                           	callstack 0
   224   000501                     ENVIA_NIBBLE@dato:
   225                           	callstack 0
   226   000501                     LEER_LCD@aux:
   227                           	callstack 0
   228   000501                     ___lwmod@dividend:
   229                           	callstack 0
   230   000501                     strlen@s:
   231                           	callstack 0
   232                           
   233                           ; 2 bytes @ 0x0
   234   000501                     	ds	1
   235   000502                     ENVIA_CHAR@dato:
   236                           	callstack 0
   237   000502                     ENVIA_LCD_CMD@dato:
   238                           	callstack 0
   239                           
   240                           ; 1 bytes @ 0x1
   241   000502                     	ds	1
   242   000503                     ??_ADC_GetValue:
   243   000503                     ENVIA_CHAR@aux:
   244                           	callstack 0
   245   000503                     ENVIA_LCD_CMD@aux:
   246                           	callstack 0
   247   000503                     ___lwmod@divisor:
   248                           	callstack 0
   249   000503                     strlen@a:
   250                           	callstack 0
   251                           
   252                           ; 2 bytes @ 0x2
   253   000503                     	ds	1
   254   000504                     ??_LCD_CONFIG:
   255   000504                     POS_CURSOR@columna:
   256                           	callstack 0
   257   000504                     CURSOR_ONOFF@estado:
   258                           	callstack 0
   259                           
   260                           ; 1 bytes @ 0x3
   261   000504                     	ds	1
   262   000505                     ??_LCD_INIT:
   263   000505                     ADC_GetValue@canal:
   264                           	callstack 0
   265   000505                     POS_CURSOR@fila:
   266                           	callstack 0
   267   000505                     ___lwmod@counter:
   268                           	callstack 0
   269   000505                     UART1_String_Send@cadena:
   270                           	callstack 0
   271   000505                     ESCRIBE_MENSAJE2@cadena:
   272                           	callstack 0
   273                           
   274                           ; 2 bytes @ 0x4
   275   000505                     	ds	1
   276   000506                     ?___lwdiv:
   277                           	callstack 0
   278   000506                     ___lwdiv@dividend:
   279                           	callstack 0
   280                           
   281                           ; 2 bytes @ 0x5
   282   000506                     	ds	1
   283   000507                     ??_ESCRIBE_MENSAJE2:
   284   000507                     ??_UART1_String_Send:
   285                           
   286                           ; 1 bytes @ 0x6
   287   000507                     	ds	1
   288   000508                     ___lwdiv@divisor:
   289                           	callstack 0
   290                           
   291                           ; 2 bytes @ 0x7
   292   000508                     	ds	1
   293   000509                     UART1_String_Send@tam:
   294                           	callstack 0
   295   000509                     ESCRIBE_MENSAJE2@tam:
   296                           	callstack 0
   297                           
   298                           ; 1 bytes @ 0x8
   299   000509                     	ds	1
   300   00050A                     UART1_String_Send@i:
   301                           	callstack 0
   302   00050A                     ESCRIBE_MENSAJE2@i:
   303                           	callstack 0
   304   00050A                     ___lwdiv@quotient:
   305                           	callstack 0
   306                           
   307                           ; 2 bytes @ 0x9
   308   00050A                     	ds	1
   309   00050B                     
   310                           ; 1 bytes @ 0xA
   311   00050B                     	ds	1
   312   00050C                     ___lwdiv@counter:
   313                           	callstack 0
   314                           
   315                           ; 1 bytes @ 0xB
   316   00050C                     	ds	1
   317   00050D                     convierte@numero:
   318                           	callstack 0
   319                           
   320                           ; 2 bytes @ 0xC
   321   00050D                     	ds	2
   322   00050F                     
   323                           ; 1 bytes @ 0xE
   324 ;;
   325 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   326 ;;
   327 ;; *************** function _main *****************
   328 ;; Defined at:
   329 ;;		line 87 in file "maincode1.c"
   330 ;; Parameters:    Size  Location     Type
   331 ;;		None
   332 ;; Auto vars:     Size  Location     Type
   333 ;;		None
   334 ;; Return value:  Size  Location     Type
   335 ;;                  1    wreg      void 
   336 ;; Registers used:
   337 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   338 ;; Tracked objects:
   339 ;;		On entry : 0/0
   340 ;;		On exit  : 0/0
   341 ;;		Unchanged: 0/0
   342 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   343 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   344 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   345 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   346 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   347 ;;Total ram usage:        0 bytes
   348 ;; Hardware stack levels required when called: 5
   349 ;; This function calls:
   350 ;;		_ADC_GetValue
   351 ;;		_ENVIA_CHAR
   352 ;;		_ESCRIBE_MENSAJE2
   353 ;;		_POS_CURSOR
   354 ;;		_UART1_Data_Send
   355 ;;		_UART1_NewLine
   356 ;;		_UART1_String_Send
   357 ;;		_configuro
   358 ;;		_convierte
   359 ;;		_pantallazo
   360 ;; This function is called by:
   361 ;;		Startup code after reset
   362 ;; This function uses a non-reentrant model
   363 ;;
   364                           
   365                           	psect	text0
   366   002634                     __ptext0:
   367                           	callstack 0
   368   002634                     _main:
   369                           	callstack 122
   370   002634                     
   371                           ;maincode1.c: 88:     configuro();
   372   002634  EC9A  F014         	call	_configuro	;wreg free
   373   002638                     
   374                           ;maincode1.c: 89:     pantallazo();
   375   002638  ECC9  F014         	call	_pantallazo	;wreg free
   376   00263C                     l1357:
   377                           
   378                           ;maincode1.c: 91:         convierte(ADC_GetValue(0));
   379   00263C  0E00               	movlw	0
   380   00263E  EC03  F016         	call	_ADC_GetValue
   381   002642  C501  F50D         	movff	?_ADC_GetValue,convierte@numero
   382   002646  C502  F50E         	movff	?_ADC_GetValue+1,convierte@numero+1
   383   00264A  EC9A  F013         	call	_convierte	;wreg free
   384   00264E                     
   385                           ;maincode1.c: 92:         POS_CURSOR(1,0);
   386   00264E  0E00               	movlw	0
   387   002650  6E04               	movwf	POS_CURSOR@columna^(0+1280),c
   388   002652  0E01               	movlw	1
   389   002654  EC65  F015         	call	_POS_CURSOR
   390   002658                     
   391                           ;maincode1.c: 93:         ESCRIBE_MENSAJE2("AN-0:");
   392   002658  0E17               	movlw	low (STR_6+6)
   393   00265A  6E05               	movwf	ESCRIBE_MENSAJE2@cadena^(0+1280),c
   394   00265C  0E26               	movlw	high (STR_6+6)
   395   00265E  6E06               	movwf	(ESCRIBE_MENSAJE2@cadena+1)^(0+1280),c
   396   002660  EC40  F015         	call	_ESCRIBE_MENSAJE2	;wreg free
   397                           
   398                           ;maincode1.c: 94:         ENVIA_CHAR(millar+0x30);
   399   002664  5012               	movf	_millar^(0+1280),w,c
   400   002666  0F30               	addlw	48
   401   002668  EC9F  F015         	call	_ENVIA_CHAR
   402                           
   403                           ;maincode1.c: 95:         ENVIA_CHAR(centena+0x30);
   404   00266C  5011               	movf	_centena^(0+1280),w,c
   405   00266E  0F30               	addlw	48
   406   002670  EC9F  F015         	call	_ENVIA_CHAR
   407                           
   408                           ;maincode1.c: 96:         ENVIA_CHAR(decena+0x30);
   409   002674  5010               	movf	_decena^(0+1280),w,c
   410   002676  0F30               	addlw	48
   411   002678  EC9F  F015         	call	_ENVIA_CHAR
   412                           
   413                           ;maincode1.c: 97:         ENVIA_CHAR(unidad+0x30);
   414   00267C  500F               	movf	_unidad^(0+1280),w,c
   415   00267E  0F30               	addlw	48
   416   002680  EC9F  F015         	call	_ENVIA_CHAR
   417   002684                     
   418                           ;maincode1.c: 98:         UART1_String_Send("Canal AN-0:");
   419   002684  0E11               	movlw	low STR_6
   420   002686  6E05               	movwf	UART1_String_Send@cadena^(0+1280),c
   421   002688  0E26               	movlw	high STR_6
   422   00268A  6E06               	movwf	(UART1_String_Send@cadena+1)^(0+1280),c
   423   00268C  EC1B  F015         	call	_UART1_String_Send	;wreg free
   424   002690                     
   425                           ;maincode1.c: 99:         UART1_Data_Send(millar+0x30);
   426   002690  5012               	movf	_millar^(0+1280),w,c
   427   002692  0F30               	addlw	48
   428   002694  EC47  F016         	call	_UART1_Data_Send
   429   002698                     
   430                           ;maincode1.c: 100:         UART1_Data_Send(centena+0x30);
   431   002698  5011               	movf	_centena^(0+1280),w,c
   432   00269A  0F30               	addlw	48
   433   00269C  EC47  F016         	call	_UART1_Data_Send
   434   0026A0                     
   435                           ;maincode1.c: 101:         UART1_Data_Send(decena+0x30);
   436   0026A0  5010               	movf	_decena^(0+1280),w,c
   437   0026A2  0F30               	addlw	48
   438   0026A4  EC47  F016         	call	_UART1_Data_Send
   439   0026A8                     
   440                           ;maincode1.c: 102:         UART1_Data_Send(unidad+0x30);
   441   0026A8  500F               	movf	_unidad^(0+1280),w,c
   442   0026AA  0F30               	addlw	48
   443   0026AC  EC47  F016         	call	_UART1_Data_Send
   444   0026B0                     
   445                           ;maincode1.c: 103:         UART1_NewLine();
   446   0026B0  EC19  F016         	call	_UART1_NewLine	;wreg free
   447   0026B4                     
   448                           ;maincode1.c: 104:         convierte(ADC_GetValue(1));
   449   0026B4  0E01               	movlw	1
   450   0026B6  EC03  F016         	call	_ADC_GetValue
   451   0026BA  C501  F50D         	movff	?_ADC_GetValue,convierte@numero
   452   0026BE  C502  F50E         	movff	?_ADC_GetValue+1,convierte@numero+1
   453   0026C2  EC9A  F013         	call	_convierte	;wreg free
   454   0026C6                     
   455                           ;maincode1.c: 105:         POS_CURSOR(2,0);
   456   0026C6  0E00               	movlw	0
   457   0026C8  6E04               	movwf	POS_CURSOR@columna^(0+1280),c
   458   0026CA  0E02               	movlw	2
   459   0026CC  EC65  F015         	call	_POS_CURSOR
   460   0026D0                     
   461                           ;maincode1.c: 106:         ESCRIBE_MENSAJE2("AN-1:");
   462   0026D0  0E23               	movlw	low (STR_8+6)
   463   0026D2  6E05               	movwf	ESCRIBE_MENSAJE2@cadena^(0+1280),c
   464   0026D4  0E26               	movlw	high (STR_8+6)
   465   0026D6  6E06               	movwf	(ESCRIBE_MENSAJE2@cadena+1)^(0+1280),c
   466   0026D8  EC40  F015         	call	_ESCRIBE_MENSAJE2	;wreg free
   467   0026DC                     
   468                           ;maincode1.c: 107:         ENVIA_CHAR(millar+0x30);
   469   0026DC  5012               	movf	_millar^(0+1280),w,c
   470   0026DE  0F30               	addlw	48
   471   0026E0  EC9F  F015         	call	_ENVIA_CHAR
   472   0026E4                     
   473                           ;maincode1.c: 108:         ENVIA_CHAR(centena+0x30);
   474   0026E4  5011               	movf	_centena^(0+1280),w,c
   475   0026E6  0F30               	addlw	48
   476   0026E8  EC9F  F015         	call	_ENVIA_CHAR
   477   0026EC                     
   478                           ;maincode1.c: 109:         ENVIA_CHAR(decena+0x30);
   479   0026EC  5010               	movf	_decena^(0+1280),w,c
   480   0026EE  0F30               	addlw	48
   481   0026F0  EC9F  F015         	call	_ENVIA_CHAR
   482   0026F4                     
   483                           ;maincode1.c: 110:         ENVIA_CHAR(unidad+0x30);
   484   0026F4  500F               	movf	_unidad^(0+1280),w,c
   485   0026F6  0F30               	addlw	48
   486   0026F8  EC9F  F015         	call	_ENVIA_CHAR
   487   0026FC                     
   488                           ;maincode1.c: 111:         UART1_String_Send("Canal AN-1:");
   489   0026FC  0E1D               	movlw	low STR_8
   490   0026FE  6E05               	movwf	UART1_String_Send@cadena^(0+1280),c
   491   002700  0E26               	movlw	high STR_8
   492   002702  6E06               	movwf	(UART1_String_Send@cadena+1)^(0+1280),c
   493   002704  EC1B  F015         	call	_UART1_String_Send	;wreg free
   494   002708                     
   495                           ;maincode1.c: 112:         UART1_Data_Send(millar+0x30);
   496   002708  5012               	movf	_millar^(0+1280),w,c
   497   00270A  0F30               	addlw	48
   498   00270C  EC47  F016         	call	_UART1_Data_Send
   499   002710                     
   500                           ;maincode1.c: 113:         UART1_Data_Send(centena+0x30);
   501   002710  5011               	movf	_centena^(0+1280),w,c
   502   002712  0F30               	addlw	48
   503   002714  EC47  F016         	call	_UART1_Data_Send
   504   002718                     
   505                           ;maincode1.c: 114:         UART1_Data_Send(decena+0x30);
   506   002718  5010               	movf	_decena^(0+1280),w,c
   507   00271A  0F30               	addlw	48
   508   00271C  EC47  F016         	call	_UART1_Data_Send
   509   002720                     
   510                           ;maincode1.c: 115:         UART1_Data_Send(unidad+0x30);
   511   002720  500F               	movf	_unidad^(0+1280),w,c
   512   002722  0F30               	addlw	48
   513   002724  EC47  F016         	call	_UART1_Data_Send
   514   002728                     
   515                           ;maincode1.c: 116:         UART1_NewLine();
   516   002728  EC19  F016         	call	_UART1_NewLine	;wreg free
   517   00272C  EF1E  F013         	goto	l1357
   518   002730  EFFE  F0FF         	goto	start
   519   002734                     __end_of_main:
   520                           	callstack 0
   521                           
   522 ;; *************** function _pantallazo *****************
   523 ;; Defined at:
   524 ;;		line 73 in file "maincode1.c"
   525 ;; Parameters:    Size  Location     Type
   526 ;;		None
   527 ;; Auto vars:     Size  Location     Type
   528 ;;		None
   529 ;; Return value:  Size  Location     Type
   530 ;;                  1    wreg      void 
   531 ;; Registers used:
   532 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   533 ;; Tracked objects:
   534 ;;		On entry : 0/0
   535 ;;		On exit  : 0/0
   536 ;;		Unchanged: 0/0
   537 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   538 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   539 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   540 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   541 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   542 ;;Total ram usage:        0 bytes
   543 ;; Hardware stack levels used: 1
   544 ;; Hardware stack levels required when called: 3
   545 ;; This function calls:
   546 ;;		_BORRAR_LCD
   547 ;;		_ESCRIBE_MENSAJE2
   548 ;;		_POS_CURSOR
   549 ;;		_UART1_NewLine
   550 ;;		_UART1_String_Send
   551 ;; This function is called by:
   552 ;;		_main
   553 ;; This function uses a non-reentrant model
   554 ;;
   555                           
   556                           	psect	text1
   557   002992                     __ptext1:
   558                           	callstack 0
   559   002992                     _pantallazo:
   560                           	callstack 123
   561   002992                     
   562                           ;maincode1.c: 74:     POS_CURSOR(1,0);
   563   002992  0E00               	movlw	0
   564   002994  6E04               	movwf	POS_CURSOR@columna^(0+1280),c
   565   002996  0E01               	movlw	1
   566   002998  EC65  F015         	call	_POS_CURSOR
   567   00299C                     
   568                           ;maincode1.c: 75:     ESCRIBE_MENSAJE2("Semana 12");
   569   00299C  0E29               	movlw	low STR_1
   570   00299E  6E05               	movwf	ESCRIBE_MENSAJE2@cadena^(0+1280),c
   571   0029A0  0E26               	movlw	high STR_1
   572   0029A2  6E06               	movwf	(ESCRIBE_MENSAJE2@cadena+1)^(0+1280),c
   573   0029A4  EC40  F015         	call	_ESCRIBE_MENSAJE2	;wreg free
   574   0029A8                     
   575                           ;maincode1.c: 76:     POS_CURSOR(2,0);
   576   0029A8  0E00               	movlw	0
   577   0029AA  6E04               	movwf	POS_CURSOR@columna^(0+1280),c
   578   0029AC  0E02               	movlw	2
   579   0029AE  EC65  F015         	call	_POS_CURSOR
   580                           
   581                           ;maincode1.c: 77:     ESCRIBE_MENSAJE2("Taller de Micro");
   582   0029B2  0E01               	movlw	low STR_2
   583   0029B4  6E05               	movwf	ESCRIBE_MENSAJE2@cadena^(0+1280),c
   584   0029B6  0E26               	movlw	high STR_2
   585   0029B8  6E06               	movwf	(ESCRIBE_MENSAJE2@cadena+1)^(0+1280),c
   586   0029BA  EC40  F015         	call	_ESCRIBE_MENSAJE2	;wreg free
   587                           
   588                           ;maincode1.c: 78:     UART1_String_Send("Semana 12");
   589   0029BE  0E29               	movlw	low STR_1
   590   0029C0  6E05               	movwf	UART1_String_Send@cadena^(0+1280),c
   591   0029C2  0E26               	movlw	high STR_1
   592   0029C4  6E06               	movwf	(UART1_String_Send@cadena+1)^(0+1280),c
   593   0029C6  EC1B  F015         	call	_UART1_String_Send	;wreg free
   594   0029CA                     
   595                           ;maincode1.c: 79:     UART1_NewLine();
   596   0029CA  EC19  F016         	call	_UART1_NewLine	;wreg free
   597   0029CE                     
   598                           ;maincode1.c: 80:     UART1_String_Send("Taller de Micro");
   599   0029CE  0E01               	movlw	low STR_2
   600   0029D0  6E05               	movwf	UART1_String_Send@cadena^(0+1280),c
   601   0029D2  0E26               	movlw	high STR_2
   602   0029D4  6E06               	movwf	(UART1_String_Send@cadena+1)^(0+1280),c
   603   0029D6  EC1B  F015         	call	_UART1_String_Send	;wreg free
   604   0029DA                     
   605                           ;maincode1.c: 82:     BORRAR_LCD();
   606   0029DA  EC57  F016         	call	_BORRAR_LCD	;wreg free
   607   0029DE                     
   608                           ;maincode1.c: 83:     UART1_NewLine();
   609   0029DE  EC19  F016         	call	_UART1_NewLine	;wreg free
   610   0029E2  0012               	return		;funcret
   611   0029E4                     __end_of_pantallazo:
   612                           	callstack 0
   613                           
   614 ;; *************** function _UART1_String_Send *****************
   615 ;; Defined at:
   616 ;;		line 62 in file "maincode1.c"
   617 ;; Parameters:    Size  Location     Type
   618 ;;  cadena          2    4[COMRAM] PTR const unsigned char 
   619 ;;		 -> STR_8(12), STR_6(12), STR_4(16), STR_3(10), 
   620 ;; Auto vars:     Size  Location     Type
   621 ;;  i               1    9[COMRAM] unsigned char 
   622 ;;  tam             1    8[COMRAM] unsigned char 
   623 ;; Return value:  Size  Location     Type
   624 ;;                  1    wreg      void 
   625 ;; Registers used:
   626 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   627 ;; Tracked objects:
   628 ;;		On entry : 0/0
   629 ;;		On exit  : 0/0
   630 ;;		Unchanged: 0/0
   631 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   632 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   633 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   634 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   635 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   636 ;;Total ram usage:        6 bytes
   637 ;; Hardware stack levels used: 1
   638 ;; Hardware stack levels required when called: 1
   639 ;; This function calls:
   640 ;;		_UART1_Data_Send
   641 ;;		_strlen
   642 ;; This function is called by:
   643 ;;		_pantallazo
   644 ;;		_main
   645 ;; This function uses a non-reentrant model
   646 ;;
   647                           
   648                           	psect	text2
   649   002A36                     __ptext2:
   650                           	callstack 0
   651   002A36                     _UART1_String_Send:
   652                           	callstack 124
   653   002A36                     
   654                           ;maincode1.c: 66:     tam = strlen(cadena);
   655   002A36  C505  F501         	movff	UART1_String_Send@cadena,strlen@s
   656   002A3A  C506  F502         	movff	UART1_String_Send@cadena+1,strlen@s+1
   657   002A3E  EC82  F015         	call	_strlen	;wreg free
   658   002A42  5001               	movf	?_strlen^(0+1280),w,c
   659   002A44  6E09               	movwf	UART1_String_Send@tam^(0+1280),c
   660   002A46                     
   661                           ;maincode1.c: 67:  for(i = 0; i<tam; i++)
   662   002A46  0E00               	movlw	0
   663   002A48  6E0A               	movwf	UART1_String_Send@i^(0+1280),c
   664   002A4A  EF36  F015         	goto	l1269
   665   002A4E                     l1265:
   666                           
   667                           ;maincode1.c: 68:  {;maincode1.c: 69:         UART1_Data_Send(cadena[i]);
   668   002A4E  500A               	movf	UART1_String_Send@i^(0+1280),w,c
   669   002A50  2405               	addwf	UART1_String_Send@cadena^(0+1280),w,c
   670   002A52  6E07               	movwf	??_UART1_String_Send^(0+1280),c
   671   002A54  0E00               	movlw	0
   672   002A56  2006               	addwfc	(UART1_String_Send@cadena+1)^(0+1280),w,c
   673   002A58  6E08               	movwf	(??_UART1_String_Send+1)^(0+1280),c
   674   002A5A  C507  F4F6         	movff	??_UART1_String_Send,tblptrl
   675   002A5E  C508  F4F7         	movff	??_UART1_String_Send+1,tblptrh
   676   002A62                     	if	0	;tblptru may be non-zero
   677   002A62                     	endif
   678   002A62                     	if	0	;tblptru may be non-zero
   679   002A62                     	endif
   680   002A62  0008               	tblrd		*
   681   002A64  50F5               	movf	tablat,w,c
   682   002A66  EC47  F016         	call	_UART1_Data_Send
   683   002A6A                     
   684                           ;maincode1.c: 70:  }
   685   002A6A  2A0A               	incf	UART1_String_Send@i^(0+1280),f,c
   686   002A6C                     l1269:
   687   002A6C  5009               	movf	UART1_String_Send@tam^(0+1280),w,c
   688   002A6E  5C0A               	subwf	UART1_String_Send@i^(0+1280),w,c
   689   002A70  A0D8               	btfss	status,0,c
   690   002A72  EF3D  F015         	goto	u261
   691   002A76  EF3F  F015         	goto	u260
   692   002A7A                     u261:
   693   002A7A  EF27  F015         	goto	l1265
   694   002A7E                     u260:
   695   002A7E  0012               	return		;funcret
   696   002A80                     __end_of_UART1_String_Send:
   697                           	callstack 0
   698                           
   699 ;; *************** function _UART1_Data_Send *****************
   700 ;; Defined at:
   701 ;;		line 50 in file "maincode1.c"
   702 ;; Parameters:    Size  Location     Type
   703 ;;  dato            1    wreg     unsigned char 
   704 ;; Auto vars:     Size  Location     Type
   705 ;;  dato            1    0[COMRAM] unsigned char 
   706 ;; Return value:  Size  Location     Type
   707 ;;                  1    wreg      void 
   708 ;; Registers used:
   709 ;;		wreg
   710 ;; Tracked objects:
   711 ;;		On entry : 0/0
   712 ;;		On exit  : 0/0
   713 ;;		Unchanged: 0/0
   714 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   715 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   716 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   717 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   718 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   719 ;;Total ram usage:        1 bytes
   720 ;; Hardware stack levels used: 1
   721 ;; This function calls:
   722 ;;		Nothing
   723 ;; This function is called by:
   724 ;;		_UART1_String_Send
   725 ;;		_main
   726 ;; This function uses a non-reentrant model
   727 ;;
   728                           
   729                           	psect	text3
   730   002C8E                     __ptext3:
   731                           	callstack 0
   732   002C8E                     _UART1_Data_Send:
   733                           	callstack 124
   734                           
   735                           ;incstack = 0
   736                           ;UART1_Data_Send@dato stored from wreg
   737   002C8E  6E01               	movwf	UART1_Data_Send@dato^(0+1280),c
   738   002C90                     
   739                           ;maincode1.c: 51:     U1TXB = dato;
   740   002C90  C501  F2A3         	movff	UART1_Data_Send@dato,675	;volatile
   741   002C94                     l87:
   742   002C94  0102               	movlb	2	; () banked
   743   002C96  AFB2               	btfss	178,7,b	;volatile
   744   002C98  EF50  F016         	goto	u21
   745   002C9C  EF52  F016         	goto	u20
   746   002CA0                     u21:
   747   002CA0  EF4A  F016         	goto	l87
   748   002CA4                     u20:
   749   002CA4                     
   750                           ; BSR set to: 2
   751   002CA4  0012               	return		;funcret
   752   002CA6                     __end_of_UART1_Data_Send:
   753                           	callstack 0
   754                           
   755 ;; *************** function _UART1_NewLine *****************
   756 ;; Defined at:
   757 ;;		line 55 in file "maincode1.c"
   758 ;; Parameters:    Size  Location     Type
   759 ;;		None
   760 ;; Auto vars:     Size  Location     Type
   761 ;;		None
   762 ;; Return value:  Size  Location     Type
   763 ;;                  1    wreg      void 
   764 ;; Registers used:
   765 ;;		wreg, status,2
   766 ;; Tracked objects:
   767 ;;		On entry : 0/0
   768 ;;		On exit  : 0/0
   769 ;;		Unchanged: 0/0
   770 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   771 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   772 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   773 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   774 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   775 ;;Total ram usage:        0 bytes
   776 ;; Hardware stack levels used: 1
   777 ;; This function calls:
   778 ;;		Nothing
   779 ;; This function is called by:
   780 ;;		_pantallazo
   781 ;;		_main
   782 ;; This function uses a non-reentrant model
   783 ;;
   784                           
   785                           	psect	text4
   786   002C32                     __ptext4:
   787                           	callstack 0
   788   002C32                     _UART1_NewLine:
   789                           	callstack 125
   790   002C32                     
   791                           ;maincode1.c: 56:     U1TXB = 0x0A;
   792   002C32  0E0A               	movlw	10
   793   002C34  0102               	movlb	2	; () banked
   794   002C36  6FA3               	movwf	163,b	;volatile
   795   002C38                     l93:
   796                           
   797                           ; BSR set to: 2
   798   002C38  AFB2               	btfss	178,7,b	;volatile
   799   002C3A  EF21  F016         	goto	u61
   800   002C3E  EF23  F016         	goto	u60
   801   002C42                     u61:
   802   002C42  EF1C  F016         	goto	l93
   803   002C46                     u60:
   804   002C46                     
   805                           ; BSR set to: 2
   806                           ;maincode1.c: 58:     U1TXB = 0x0D;
   807   002C46  0E0D               	movlw	13
   808   002C48  6FA3               	movwf	163,b	;volatile
   809   002C4A                     l96:
   810                           
   811                           ; BSR set to: 2
   812   002C4A  AFB2               	btfss	178,7,b	;volatile
   813   002C4C  EF2A  F016         	goto	u71
   814   002C50  EF2C  F016         	goto	u70
   815   002C54                     u71:
   816   002C54  EF25  F016         	goto	l96
   817   002C58                     u70:
   818   002C58                     
   819                           ; BSR set to: 2
   820   002C58  0012               	return		;funcret
   821   002C5A                     __end_of_UART1_NewLine:
   822                           	callstack 0
   823                           
   824 ;; *************** function _POS_CURSOR *****************
   825 ;; Defined at:
   826 ;;		line 5 in file "LCD.c"
   827 ;; Parameters:    Size  Location     Type
   828 ;;  fila            1    wreg     unsigned char 
   829 ;;  columna         1    3[COMRAM] unsigned char 
   830 ;; Auto vars:     Size  Location     Type
   831 ;;  fila            1    4[COMRAM] unsigned char 
   832 ;; Return value:  Size  Location     Type
   833 ;;                  1    wreg      void 
   834 ;; Registers used:
   835 ;;		wreg, status,2, status,0, cstack
   836 ;; Tracked objects:
   837 ;;		On entry : 0/0
   838 ;;		On exit  : 0/0
   839 ;;		Unchanged: 0/0
   840 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   841 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   842 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   843 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   844 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   845 ;;Total ram usage:        2 bytes
   846 ;; Hardware stack levels used: 1
   847 ;; Hardware stack levels required when called: 2
   848 ;; This function calls:
   849 ;;		_ENVIA_LCD_CMD
   850 ;; This function is called by:
   851 ;;		_pantallazo
   852 ;;		_main
   853 ;; This function uses a non-reentrant model
   854 ;;
   855                           
   856                           	psect	text5
   857   002ACA                     __ptext5:
   858                           	callstack 0
   859   002ACA                     _POS_CURSOR:
   860                           	callstack 123
   861                           
   862                           ; BSR set to: 2
   863                           ;incstack = 0
   864                           ;POS_CURSOR@fila stored from wreg
   865   002ACA  6E05               	movwf	POS_CURSOR@fila^(0+1280),c
   866   002ACC                     
   867                           ;LCD.c: 5: void POS_CURSOR(unsigned char fila,unsigned char columna);LCD.c: 6: {;LCD.c: 
      +                          7:  if(fila == 1)
   868   002ACC  0405               	decf	POS_CURSOR@fila^(0+1280),w,c
   869   002ACE  A4D8               	btfss	status,2,c
   870   002AD0  EF6C  F015         	goto	u271
   871   002AD4  EF6E  F015         	goto	u270
   872   002AD8                     u271:
   873   002AD8  EF74  F015         	goto	l1275
   874   002ADC                     u270:
   875   002ADC                     
   876                           ;LCD.c: 8:  {;LCD.c: 9:   ENVIA_LCD_CMD(0x80+columna);
   877   002ADC  5004               	movf	POS_CURSOR@columna^(0+1280),w,c
   878   002ADE  0F80               	addlw	128
   879   002AE0  ECB9  F015         	call	_ENVIA_LCD_CMD
   880                           
   881                           ;LCD.c: 10:  }
   882   002AE4  EF81  F015         	goto	l142
   883   002AE8                     l1275:
   884   002AE8  0E02               	movlw	2
   885   002AEA  1805               	xorwf	POS_CURSOR@fila^(0+1280),w,c
   886   002AEC  A4D8               	btfss	status,2,c
   887   002AEE  EF7B  F015         	goto	u281
   888   002AF2  EF7D  F015         	goto	u280
   889   002AF6                     u281:
   890   002AF6  EF81  F015         	goto	l142
   891   002AFA                     u280:
   892   002AFA                     
   893                           ;LCD.c: 12:  {;LCD.c: 13:   ENVIA_LCD_CMD(0xC0+columna);
   894   002AFA  5004               	movf	POS_CURSOR@columna^(0+1280),w,c
   895   002AFC  0FC0               	addlw	192
   896   002AFE  ECB9  F015         	call	_ENVIA_LCD_CMD
   897   002B02                     l142:
   898   002B02  0012               	return		;funcret
   899   002B04                     __end_of_POS_CURSOR:
   900                           	callstack 0
   901                           
   902 ;; *************** function _ESCRIBE_MENSAJE2 *****************
   903 ;; Defined at:
   904 ;;		line 69 in file "LCD.c"
   905 ;; Parameters:    Size  Location     Type
   906 ;;  cadena          2    4[COMRAM] PTR const unsigned char 
   907 ;;		 -> STR_7(6), STR_5(6), STR_2(16), STR_1(10), 
   908 ;; Auto vars:     Size  Location     Type
   909 ;;  i               1    9[COMRAM] unsigned char 
   910 ;;  tam             1    8[COMRAM] unsigned char 
   911 ;; Return value:  Size  Location     Type
   912 ;;                  1    wreg      void 
   913 ;; Registers used:
   914 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   915 ;; Tracked objects:
   916 ;;		On entry : 0/0
   917 ;;		On exit  : 0/0
   918 ;;		Unchanged: 0/0
   919 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   920 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   921 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   922 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   923 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   924 ;;Total ram usage:        6 bytes
   925 ;; Hardware stack levels used: 1
   926 ;; Hardware stack levels required when called: 2
   927 ;; This function calls:
   928 ;;		_ENVIA_CHAR
   929 ;;		_strlen
   930 ;; This function is called by:
   931 ;;		_pantallazo
   932 ;;		_main
   933 ;; This function uses a non-reentrant model
   934 ;;
   935                           
   936                           	psect	text6
   937   002A80                     __ptext6:
   938                           	callstack 0
   939   002A80                     _ESCRIBE_MENSAJE2:
   940                           	callstack 123
   941   002A80                     
   942                           ;LCD.c: 69: void ESCRIBE_MENSAJE2(const char *cadena);LCD.c: 70: {;LCD.c: 71:     unsign
      +                          ed char tam;;LCD.c: 72:     tam = strlen(cadena);
   943   002A80  C505  F501         	movff	ESCRIBE_MENSAJE2@cadena,strlen@s
   944   002A84  C506  F502         	movff	ESCRIBE_MENSAJE2@cadena+1,strlen@s+1
   945   002A88  EC82  F015         	call	_strlen	;wreg free
   946   002A8C  5001               	movf	?_strlen^(0+1280),w,c
   947   002A8E  6E09               	movwf	ESCRIBE_MENSAJE2@tam^(0+1280),c
   948   002A90                     
   949                           ;LCD.c: 74:  for(i = 0; i<tam; i++)
   950   002A90  0E00               	movlw	0
   951   002A92  6E0A               	movwf	ESCRIBE_MENSAJE2@i^(0+1280),c
   952   002A94  EF5B  F015         	goto	l1289
   953   002A98                     l1285:
   954                           
   955                           ;LCD.c: 75:  {;LCD.c: 76:   ENVIA_CHAR(cadena[i]);
   956   002A98  500A               	movf	ESCRIBE_MENSAJE2@i^(0+1280),w,c
   957   002A9A  2405               	addwf	ESCRIBE_MENSAJE2@cadena^(0+1280),w,c
   958   002A9C  6E07               	movwf	??_ESCRIBE_MENSAJE2^(0+1280),c
   959   002A9E  0E00               	movlw	0
   960   002AA0  2006               	addwfc	(ESCRIBE_MENSAJE2@cadena+1)^(0+1280),w,c
   961   002AA2  6E08               	movwf	(??_ESCRIBE_MENSAJE2+1)^(0+1280),c
   962   002AA4  C507  F4F6         	movff	??_ESCRIBE_MENSAJE2,tblptrl
   963   002AA8  C508  F4F7         	movff	??_ESCRIBE_MENSAJE2+1,tblptrh
   964   002AAC                     	if	0	;tblptru may be non-zero
   965   002AAC                     	endif
   966   002AAC                     	if	0	;tblptru may be non-zero
   967   002AAC                     	endif
   968   002AAC  0008               	tblrd		*
   969   002AAE  50F5               	movf	tablat,w,c
   970   002AB0  EC9F  F015         	call	_ENVIA_CHAR
   971   002AB4                     
   972                           ;LCD.c: 77:  }
   973   002AB4  2A0A               	incf	ESCRIBE_MENSAJE2@i^(0+1280),f,c
   974   002AB6                     l1289:
   975   002AB6  5009               	movf	ESCRIBE_MENSAJE2@tam^(0+1280),w,c
   976   002AB8  5C0A               	subwf	ESCRIBE_MENSAJE2@i^(0+1280),w,c
   977   002ABA  A0D8               	btfss	status,0,c
   978   002ABC  EF62  F015         	goto	u291
   979   002AC0  EF64  F015         	goto	u290
   980   002AC4                     u291:
   981   002AC4  EF4C  F015         	goto	l1285
   982   002AC8                     u290:
   983   002AC8  0012               	return		;funcret
   984   002ACA                     __end_of_ESCRIBE_MENSAJE2:
   985                           	callstack 0
   986                           
   987 ;; *************** function _strlen *****************
   988 ;; Defined at:
   989 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\strlen.c"
   990 ;; Parameters:    Size  Location     Type
   991 ;;  s               2    0[COMRAM] PTR const unsigned char 
   992 ;;		 -> STR_8(12), STR_7(6), STR_6(12), STR_5(6), 
   993 ;;		 -> STR_4(16), STR_3(10), STR_2(16), STR_1(10), 
   994 ;; Auto vars:     Size  Location     Type
   995 ;;  a               2    2[COMRAM] PTR const unsigned char 
   996 ;;		 -> STR_8(12), STR_7(6), STR_6(12), STR_5(6), 
   997 ;;		 -> STR_4(16), STR_3(10), STR_2(16), STR_1(10), 
   998 ;; Return value:  Size  Location     Type
   999 ;;                  2    0[COMRAM] unsigned int 
  1000 ;; Registers used:
  1001 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  1002 ;; Tracked objects:
  1003 ;;		On entry : 0/0
  1004 ;;		On exit  : 0/0
  1005 ;;		Unchanged: 0/0
  1006 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1007 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1008 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1009 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1010 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1011 ;;Total ram usage:        4 bytes
  1012 ;; Hardware stack levels used: 1
  1013 ;; This function calls:
  1014 ;;		Nothing
  1015 ;; This function is called by:
  1016 ;;		_UART1_String_Send
  1017 ;;		_ESCRIBE_MENSAJE2
  1018 ;; This function uses a non-reentrant model
  1019 ;;
  1020                           
  1021                           	psect	text7
  1022   002B04                     __ptext7:
  1023                           	callstack 0
  1024   002B04                     _strlen:
  1025                           	callstack 124
  1026   002B04  C501  F503         	movff	strlen@s,strlen@a
  1027   002B08  C502  F504         	movff	strlen@s+1,strlen@a+1
  1028   002B0C  EF8A  F015         	goto	l1253
  1029   002B10                     l1251:
  1030   002B10  4A01               	infsnz	strlen@s^(0+1280),f,c
  1031   002B12  2A02               	incf	(strlen@s+1)^(0+1280),f,c
  1032   002B14                     l1253:
  1033   002B14  C501  F4F6         	movff	strlen@s,tblptrl
  1034   002B18  C502  F4F7         	movff	strlen@s+1,tblptrh
  1035   002B1C                     	if	0	;tblptru may be non-zero
  1036   002B1C                     	endif
  1037   002B1C                     	if	0	;tblptru may be non-zero
  1038   002B1C                     	endif
  1039   002B1C  0008               	tblrd		*
  1040   002B1E  50F5               	movf	tablat,w,c
  1041   002B20  0900               	iorlw	0
  1042   002B22  A4D8               	btfss	status,2,c
  1043   002B24  EF96  F015         	goto	u251
  1044   002B28  EF98  F015         	goto	u250
  1045   002B2C                     u251:
  1046   002B2C  EF88  F015         	goto	l1251
  1047   002B30                     u250:
  1048   002B30  5003               	movf	strlen@a^(0+1280),w,c
  1049   002B32  5C01               	subwf	strlen@s^(0+1280),w,c
  1050   002B34  6E01               	movwf	?_strlen^(0+1280),c
  1051   002B36  5004               	movf	(strlen@a+1)^(0+1280),w,c
  1052   002B38  5802               	subwfb	(strlen@s+1)^(0+1280),w,c
  1053   002B3A  6E02               	movwf	(?_strlen+1)^(0+1280),c
  1054   002B3C  0012               	return		;funcret
  1055   002B3E                     __end_of_strlen:
  1056                           	callstack 0
  1057                           
  1058 ;; *************** function _ENVIA_CHAR *****************
  1059 ;; Defined at:
  1060 ;;		line 80 in file "LCD.c"
  1061 ;; Parameters:    Size  Location     Type
  1062 ;;  dato            1    wreg     unsigned char 
  1063 ;; Auto vars:     Size  Location     Type
  1064 ;;  dato            1    1[COMRAM] unsigned char 
  1065 ;;  aux             1    2[COMRAM] unsigned char 
  1066 ;; Return value:  Size  Location     Type
  1067 ;;                  1    wreg      void 
  1068 ;; Registers used:
  1069 ;;		wreg, status,2, status,0, cstack
  1070 ;; Tracked objects:
  1071 ;;		On entry : 0/0
  1072 ;;		On exit  : 0/0
  1073 ;;		Unchanged: 0/0
  1074 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1075 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1076 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1077 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1078 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1079 ;;Total ram usage:        2 bytes
  1080 ;; Hardware stack levels used: 1
  1081 ;; Hardware stack levels required when called: 1
  1082 ;; This function calls:
  1083 ;;		_ENVIA_NIBBLE
  1084 ;;		_LEER_LCD
  1085 ;; This function is called by:
  1086 ;;		_main
  1087 ;;		_ESCRIBE_MENSAJE2
  1088 ;;		_ESCRIBE_MENSAJE
  1089 ;;		_GENERACARACTER
  1090 ;; This function uses a non-reentrant model
  1091 ;;
  1092                           
  1093                           	psect	text8
  1094   002B3E                     __ptext8:
  1095                           	callstack 0
  1096   002B3E                     _ENVIA_CHAR:
  1097                           	callstack 123
  1098                           
  1099                           ;incstack = 0
  1100                           ;ENVIA_CHAR@dato stored from wreg
  1101   002B3E  6E02               	movwf	ENVIA_CHAR@dato^(0+1280),c
  1102   002B40                     
  1103                           ;LCD.c: 80: void ENVIA_CHAR(unsigned char dato);LCD.c: 81: {;LCD.c: 82:  unsigned char a
      +                          ux;;LCD.c: 83:  LATDbits.LATD0 = 1;
  1104   002B40  80C1               	bsf	193,0,c	;volatile
  1105   002B42                     
  1106                           ;LCD.c: 84:  LEER_LCD();
  1107   002B42  EC2F  F014         	call	_LEER_LCD	;wreg free
  1108   002B46                     
  1109                           ;LCD.c: 85:  TRISD = 0x00;
  1110   002B46  0E00               	movlw	0
  1111   002B48  6EC9               	movwf	201,c	;volatile
  1112   002B4A                     
  1113                           ;LCD.c: 86:     _delay((unsigned long)((100)*(4000000UL/4000000.0)));
  1114   002B4A  0E21               	movlw	33
  1115   002B4C                     u377:
  1116   002B4C  2EE8               	decfsz	wreg,f,c
  1117   002B4E  D7FE               	bra	u377
  1118   002B50  F000               	nop	
  1119   002B52                     
  1120                           ;LCD.c: 87:  LATDbits.LATD1 = 0;
  1121   002B52  92C1               	bcf	193,1,c	;volatile
  1122   002B54                     
  1123                           ;LCD.c: 88:  LATDbits.LATD2 = 0;
  1124   002B54  94C1               	bcf	193,2,c	;volatile
  1125   002B56                     
  1126                           ;LCD.c: 89:  LATDbits.LATD0 = 1;
  1127   002B56  80C1               	bsf	193,0,c	;volatile
  1128   002B58                     
  1129                           ;LCD.c: 90:  aux = dato & 0xF0;
  1130   002B58  5002               	movf	ENVIA_CHAR@dato^(0+1280),w,c
  1131   002B5A  0BF0               	andlw	240
  1132   002B5C  6E03               	movwf	ENVIA_CHAR@aux^(0+1280),c
  1133   002B5E                     
  1134                           ;LCD.c: 91:  ENVIA_NIBBLE(aux);
  1135   002B5E  5003               	movf	ENVIA_CHAR@aux^(0+1280),w,c
  1136   002B60  EC2D  F016         	call	_ENVIA_NIBBLE
  1137   002B64                     
  1138                           ;LCD.c: 92:  aux = dato << 4;
  1139   002B64  3802               	swapf	ENVIA_CHAR@dato^(0+1280),w,c
  1140   002B66  0BF0               	andlw	240
  1141   002B68  6E03               	movwf	ENVIA_CHAR@aux^(0+1280),c
  1142   002B6A                     
  1143                           ;LCD.c: 93:  ENVIA_NIBBLE(aux);
  1144   002B6A  5003               	movf	ENVIA_CHAR@aux^(0+1280),w,c
  1145   002B6C  EC2D  F016         	call	_ENVIA_NIBBLE
  1146   002B70  0012               	return		;funcret
  1147   002B72                     __end_of_ENVIA_CHAR:
  1148                           	callstack 0
  1149                           
  1150 ;; *************** function _convierte *****************
  1151 ;; Defined at:
  1152 ;;		line 42 in file "maincode1.c"
  1153 ;; Parameters:    Size  Location     Type
  1154 ;;  numero          2   12[COMRAM] unsigned int 
  1155 ;; Auto vars:     Size  Location     Type
  1156 ;;		None
  1157 ;; Return value:  Size  Location     Type
  1158 ;;                  1    wreg      void 
  1159 ;; Registers used:
  1160 ;;		wreg, status,2, status,0, cstack
  1161 ;; Tracked objects:
  1162 ;;		On entry : 0/0
  1163 ;;		On exit  : 0/0
  1164 ;;		Unchanged: 0/0
  1165 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1166 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1167 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1168 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1169 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1170 ;;Total ram usage:        2 bytes
  1171 ;; Hardware stack levels used: 1
  1172 ;; Hardware stack levels required when called: 1
  1173 ;; This function calls:
  1174 ;;		___lwdiv
  1175 ;;		___lwmod
  1176 ;; This function is called by:
  1177 ;;		_main
  1178 ;; This function uses a non-reentrant model
  1179 ;;
  1180                           
  1181                           	psect	text9
  1182   002734                     __ptext9:
  1183                           	callstack 0
  1184   002734                     _convierte:
  1185                           	callstack 125
  1186   002734                     
  1187                           ;maincode1.c: 43:     diezmillar = numero / 10000;
  1188   002734  C50D  F506         	movff	convierte@numero,___lwdiv@dividend
  1189   002738  C50E  F507         	movff	convierte@numero+1,___lwdiv@dividend+1
  1190   00273C  0E27               	movlw	39
  1191   00273E  6E09               	movwf	(___lwdiv@divisor+1)^(0+1280),c
  1192   002740  0E10               	movlw	16
  1193   002742  6E08               	movwf	___lwdiv@divisor^(0+1280),c
  1194   002744  ECF5  F013         	call	___lwdiv	;wreg free
  1195   002748  5006               	movf	?___lwdiv^(0+1280),w,c
  1196   00274A  6E13               	movwf	_diezmillar^(0+1280),c
  1197                           
  1198                           ;maincode1.c: 44:     millar = (numero % 10000) / 1000;
  1199   00274C  0E27               	movlw	39
  1200   00274E  6E04               	movwf	(___lwmod@divisor+1)^(0+1280),c
  1201   002750  0E10               	movlw	16
  1202   002752  6E03               	movwf	___lwmod@divisor^(0+1280),c
  1203   002754  C50D  F501         	movff	convierte@numero,___lwmod@dividend
  1204   002758  C50E  F502         	movff	convierte@numero+1,___lwmod@dividend+1
  1205   00275C  EC68  F014         	call	___lwmod	;wreg free
  1206   002760  C501  F506         	movff	?___lwmod,___lwdiv@dividend
  1207   002764  C502  F507         	movff	?___lwmod+1,___lwdiv@dividend+1
  1208   002768  0E03               	movlw	3
  1209   00276A  6E09               	movwf	(___lwdiv@divisor+1)^(0+1280),c
  1210   00276C  0EE8               	movlw	232
  1211   00276E  6E08               	movwf	___lwdiv@divisor^(0+1280),c
  1212   002770  ECF5  F013         	call	___lwdiv	;wreg free
  1213   002774  5006               	movf	?___lwdiv^(0+1280),w,c
  1214   002776  6E12               	movwf	_millar^(0+1280),c
  1215                           
  1216                           ;maincode1.c: 45:     centena = (numero % 1000) / 100;
  1217   002778  0E03               	movlw	3
  1218   00277A  6E04               	movwf	(___lwmod@divisor+1)^(0+1280),c
  1219   00277C  0EE8               	movlw	232
  1220   00277E  6E03               	movwf	___lwmod@divisor^(0+1280),c
  1221   002780  C50D  F501         	movff	convierte@numero,___lwmod@dividend
  1222   002784  C50E  F502         	movff	convierte@numero+1,___lwmod@dividend+1
  1223   002788  EC68  F014         	call	___lwmod	;wreg free
  1224   00278C  C501  F506         	movff	?___lwmod,___lwdiv@dividend
  1225   002790  C502  F507         	movff	?___lwmod+1,___lwdiv@dividend+1
  1226   002794  0E00               	movlw	0
  1227   002796  6E09               	movwf	(___lwdiv@divisor+1)^(0+1280),c
  1228   002798  0E64               	movlw	100
  1229   00279A  6E08               	movwf	___lwdiv@divisor^(0+1280),c
  1230   00279C  ECF5  F013         	call	___lwdiv	;wreg free
  1231   0027A0  5006               	movf	?___lwdiv^(0+1280),w,c
  1232   0027A2  6E11               	movwf	_centena^(0+1280),c
  1233                           
  1234                           ;maincode1.c: 46:     decena = (numero % 100) / 10;
  1235   0027A4  0E00               	movlw	0
  1236   0027A6  6E04               	movwf	(___lwmod@divisor+1)^(0+1280),c
  1237   0027A8  0E64               	movlw	100
  1238   0027AA  6E03               	movwf	___lwmod@divisor^(0+1280),c
  1239   0027AC  C50D  F501         	movff	convierte@numero,___lwmod@dividend
  1240   0027B0  C50E  F502         	movff	convierte@numero+1,___lwmod@dividend+1
  1241   0027B4  EC68  F014         	call	___lwmod	;wreg free
  1242   0027B8  C501  F506         	movff	?___lwmod,___lwdiv@dividend
  1243   0027BC  C502  F507         	movff	?___lwmod+1,___lwdiv@dividend+1
  1244   0027C0  0E00               	movlw	0
  1245   0027C2  6E09               	movwf	(___lwdiv@divisor+1)^(0+1280),c
  1246   0027C4  0E0A               	movlw	10
  1247   0027C6  6E08               	movwf	___lwdiv@divisor^(0+1280),c
  1248   0027C8  ECF5  F013         	call	___lwdiv	;wreg free
  1249   0027CC  5006               	movf	?___lwdiv^(0+1280),w,c
  1250   0027CE  6E10               	movwf	_decena^(0+1280),c
  1251                           
  1252                           ;maincode1.c: 47:     unidad = numero % 10;
  1253   0027D0  C50D  F501         	movff	convierte@numero,___lwmod@dividend
  1254   0027D4  C50E  F502         	movff	convierte@numero+1,___lwmod@dividend+1
  1255   0027D8  0E00               	movlw	0
  1256   0027DA  6E04               	movwf	(___lwmod@divisor+1)^(0+1280),c
  1257   0027DC  0E0A               	movlw	10
  1258   0027DE  6E03               	movwf	___lwmod@divisor^(0+1280),c
  1259   0027E0  EC68  F014         	call	___lwmod	;wreg free
  1260   0027E4  5001               	movf	?___lwmod^(0+1280),w,c
  1261   0027E6  6E0F               	movwf	_unidad^(0+1280),c
  1262   0027E8  0012               	return		;funcret
  1263   0027EA                     __end_of_convierte:
  1264                           	callstack 0
  1265                           
  1266 ;; *************** function ___lwmod *****************
  1267 ;; Defined at:
  1268 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\lwmod.c"
  1269 ;; Parameters:    Size  Location     Type
  1270 ;;  dividend        2    0[COMRAM] unsigned int 
  1271 ;;  divisor         2    2[COMRAM] unsigned int 
  1272 ;; Auto vars:     Size  Location     Type
  1273 ;;  counter         1    4[COMRAM] unsigned char 
  1274 ;; Return value:  Size  Location     Type
  1275 ;;                  2    0[COMRAM] unsigned int 
  1276 ;; Registers used:
  1277 ;;		wreg, status,2, status,0
  1278 ;; Tracked objects:
  1279 ;;		On entry : 0/0
  1280 ;;		On exit  : 0/0
  1281 ;;		Unchanged: 0/0
  1282 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1283 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1284 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1285 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1286 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1287 ;;Total ram usage:        5 bytes
  1288 ;; Hardware stack levels used: 1
  1289 ;; This function calls:
  1290 ;;		Nothing
  1291 ;; This function is called by:
  1292 ;;		_convierte
  1293 ;; This function uses a non-reentrant model
  1294 ;;
  1295                           
  1296                           	psect	text10
  1297   0028D0                     __ptext10:
  1298                           	callstack 0
  1299   0028D0                     ___lwmod:
  1300                           	callstack 125
  1301   0028D0  5003               	movf	___lwmod@divisor^(0+1280),w,c
  1302   0028D2  1004               	iorwf	(___lwmod@divisor+1)^(0+1280),w,c
  1303   0028D4  B4D8               	btfsc	status,2,c
  1304   0028D6  EF6F  F014         	goto	u331
  1305   0028DA  EF71  F014         	goto	u330
  1306   0028DE                     u331:
  1307   0028DE  EF95  F014         	goto	l717
  1308   0028E2                     u330:
  1309   0028E2  0E01               	movlw	1
  1310   0028E4  6E05               	movwf	___lwmod@counter^(0+1280),c
  1311   0028E6  EF79  F014         	goto	l1319
  1312   0028EA                     l1317:
  1313   0028EA  90D8               	bcf	status,0,c
  1314   0028EC  3603               	rlcf	___lwmod@divisor^(0+1280),f,c
  1315   0028EE  3604               	rlcf	(___lwmod@divisor+1)^(0+1280),f,c
  1316   0028F0  2A05               	incf	___lwmod@counter^(0+1280),f,c
  1317   0028F2                     l1319:
  1318   0028F2  AE04               	btfss	(___lwmod@divisor+1)^(0+1280),7,c
  1319   0028F4  EF7E  F014         	goto	u341
  1320   0028F8  EF80  F014         	goto	u340
  1321   0028FC                     u341:
  1322   0028FC  EF75  F014         	goto	l1317
  1323   002900                     u340:
  1324   002900                     l1321:
  1325   002900  5003               	movf	___lwmod@divisor^(0+1280),w,c
  1326   002902  5C01               	subwf	___lwmod@dividend^(0+1280),w,c
  1327   002904  5004               	movf	(___lwmod@divisor+1)^(0+1280),w,c
  1328   002906  5802               	subwfb	(___lwmod@dividend+1)^(0+1280),w,c
  1329   002908  A0D8               	btfss	status,0,c
  1330   00290A  EF89  F014         	goto	u351
  1331   00290E  EF8B  F014         	goto	u350
  1332   002912                     u351:
  1333   002912  EF8F  F014         	goto	l1325
  1334   002916                     u350:
  1335   002916  5003               	movf	___lwmod@divisor^(0+1280),w,c
  1336   002918  5E01               	subwf	___lwmod@dividend^(0+1280),f,c
  1337   00291A  5004               	movf	(___lwmod@divisor+1)^(0+1280),w,c
  1338   00291C  5A02               	subwfb	(___lwmod@dividend+1)^(0+1280),f,c
  1339   00291E                     l1325:
  1340   00291E  90D8               	bcf	status,0,c
  1341   002920  3204               	rrcf	(___lwmod@divisor+1)^(0+1280),f,c
  1342   002922  3203               	rrcf	___lwmod@divisor^(0+1280),f,c
  1343   002924  2E05               	decfsz	___lwmod@counter^(0+1280),f,c
  1344   002926  EF80  F014         	goto	l1321
  1345   00292A                     l717:
  1346   00292A  C501  F501         	movff	___lwmod@dividend,?___lwmod
  1347   00292E  C502  F502         	movff	___lwmod@dividend+1,?___lwmod+1
  1348   002932  0012               	return		;funcret
  1349   002934                     __end_of___lwmod:
  1350                           	callstack 0
  1351                           
  1352 ;; *************** function ___lwdiv *****************
  1353 ;; Defined at:
  1354 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\lwdiv.c"
  1355 ;; Parameters:    Size  Location     Type
  1356 ;;  dividend        2    5[COMRAM] unsigned int 
  1357 ;;  divisor         2    7[COMRAM] unsigned int 
  1358 ;; Auto vars:     Size  Location     Type
  1359 ;;  quotient        2    9[COMRAM] unsigned int 
  1360 ;;  counter         1   11[COMRAM] unsigned char 
  1361 ;; Return value:  Size  Location     Type
  1362 ;;                  2    5[COMRAM] unsigned int 
  1363 ;; Registers used:
  1364 ;;		wreg, status,2, status,0
  1365 ;; Tracked objects:
  1366 ;;		On entry : 0/0
  1367 ;;		On exit  : 0/0
  1368 ;;		Unchanged: 0/0
  1369 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1370 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1371 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1372 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1373 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1374 ;;Total ram usage:        7 bytes
  1375 ;; Hardware stack levels used: 1
  1376 ;; This function calls:
  1377 ;;		Nothing
  1378 ;; This function is called by:
  1379 ;;		_convierte
  1380 ;; This function uses a non-reentrant model
  1381 ;;
  1382                           
  1383                           	psect	text11
  1384   0027EA                     __ptext11:
  1385                           	callstack 0
  1386   0027EA                     ___lwdiv:
  1387                           	callstack 125
  1388   0027EA  0E00               	movlw	0
  1389   0027EC  6E0B               	movwf	(___lwdiv@quotient+1)^(0+1280),c
  1390   0027EE  0E00               	movlw	0
  1391   0027F0  6E0A               	movwf	___lwdiv@quotient^(0+1280),c
  1392   0027F2  5008               	movf	___lwdiv@divisor^(0+1280),w,c
  1393   0027F4  1009               	iorwf	(___lwdiv@divisor+1)^(0+1280),w,c
  1394   0027F6  B4D8               	btfsc	status,2,c
  1395   0027F8  EF00  F014         	goto	u301
  1396   0027FC  EF02  F014         	goto	u300
  1397   002800                     u301:
  1398   002800  EF2A  F014         	goto	l707
  1399   002804                     u300:
  1400   002804  0E01               	movlw	1
  1401   002806  6E0C               	movwf	___lwdiv@counter^(0+1280),c
  1402   002808  EF0A  F014         	goto	l1299
  1403   00280C                     l1297:
  1404   00280C  90D8               	bcf	status,0,c
  1405   00280E  3608               	rlcf	___lwdiv@divisor^(0+1280),f,c
  1406   002810  3609               	rlcf	(___lwdiv@divisor+1)^(0+1280),f,c
  1407   002812  2A0C               	incf	___lwdiv@counter^(0+1280),f,c
  1408   002814                     l1299:
  1409   002814  AE09               	btfss	(___lwdiv@divisor+1)^(0+1280),7,c
  1410   002816  EF0F  F014         	goto	u311
  1411   00281A  EF11  F014         	goto	u310
  1412   00281E                     u311:
  1413   00281E  EF06  F014         	goto	l1297
  1414   002822                     u310:
  1415   002822                     l1301:
  1416   002822  90D8               	bcf	status,0,c
  1417   002824  360A               	rlcf	___lwdiv@quotient^(0+1280),f,c
  1418   002826  360B               	rlcf	(___lwdiv@quotient+1)^(0+1280),f,c
  1419   002828  5008               	movf	___lwdiv@divisor^(0+1280),w,c
  1420   00282A  5C06               	subwf	___lwdiv@dividend^(0+1280),w,c
  1421   00282C  5009               	movf	(___lwdiv@divisor+1)^(0+1280),w,c
  1422   00282E  5807               	subwfb	(___lwdiv@dividend+1)^(0+1280),w,c
  1423   002830  A0D8               	btfss	status,0,c
  1424   002832  EF1D  F014         	goto	u321
  1425   002836  EF1F  F014         	goto	u320
  1426   00283A                     u321:
  1427   00283A  EF24  F014         	goto	l1309
  1428   00283E                     u320:
  1429   00283E  5008               	movf	___lwdiv@divisor^(0+1280),w,c
  1430   002840  5E06               	subwf	___lwdiv@dividend^(0+1280),f,c
  1431   002842  5009               	movf	(___lwdiv@divisor+1)^(0+1280),w,c
  1432   002844  5A07               	subwfb	(___lwdiv@dividend+1)^(0+1280),f,c
  1433   002846  800A               	bsf	___lwdiv@quotient^(0+1280),0,c
  1434   002848                     l1309:
  1435   002848  90D8               	bcf	status,0,c
  1436   00284A  3209               	rrcf	(___lwdiv@divisor+1)^(0+1280),f,c
  1437   00284C  3208               	rrcf	___lwdiv@divisor^(0+1280),f,c
  1438   00284E  2E0C               	decfsz	___lwdiv@counter^(0+1280),f,c
  1439   002850  EF11  F014         	goto	l1301
  1440   002854                     l707:
  1441   002854  C50A  F506         	movff	___lwdiv@quotient,?___lwdiv
  1442   002858  C50B  F507         	movff	___lwdiv@quotient+1,?___lwdiv+1
  1443   00285C  0012               	return		;funcret
  1444   00285E                     __end_of___lwdiv:
  1445                           	callstack 0
  1446                           
  1447 ;; *************** function _configuro *****************
  1448 ;; Defined at:
  1449 ;;		line 9 in file "maincode1.c"
  1450 ;; Parameters:    Size  Location     Type
  1451 ;;		None
  1452 ;; Auto vars:     Size  Location     Type
  1453 ;;		None
  1454 ;; Return value:  Size  Location     Type
  1455 ;;                  1    wreg      void 
  1456 ;; Registers used:
  1457 ;;		wreg, status,2, status,0, cstack
  1458 ;; Tracked objects:
  1459 ;;		On entry : 0/0
  1460 ;;		On exit  : 0/0
  1461 ;;		Unchanged: 0/0
  1462 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1463 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1464 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1465 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1466 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1467 ;;Total ram usage:        0 bytes
  1468 ;; Hardware stack levels used: 1
  1469 ;; Hardware stack levels required when called: 4
  1470 ;; This function calls:
  1471 ;;		_LCD_INIT
  1472 ;; This function is called by:
  1473 ;;		_main
  1474 ;; This function uses a non-reentrant model
  1475 ;;
  1476                           
  1477                           	psect	text12
  1478   002934                     __ptext12:
  1479                           	callstack 0
  1480   002934                     _configuro:
  1481                           	callstack 122
  1482   002934                     
  1483                           ;maincode1.c: 10:     OSCCON1 = 0x60;
  1484   002934  0E60               	movlw	96
  1485   002936  0100               	movlb	0	; () banked
  1486   002938  6FAD               	movwf	173,b	;volatile
  1487                           
  1488                           ;maincode1.c: 11:     OSCFRQ = 0x02;
  1489   00293A  0E02               	movlw	2
  1490   00293C  6FB1               	movwf	177,b	;volatile
  1491                           
  1492                           ;maincode1.c: 12:     OSCEN = 0x40;
  1493   00293E  0E40               	movlw	64
  1494   002940  6FB3               	movwf	179,b	;volatile
  1495   002942                     
  1496                           ; BSR set to: 0
  1497                           ;maincode1.c: 13:     TRISA = 0xFF;
  1498   002942  68C6               	setf	198,c	;volatile
  1499   002944                     
  1500                           ; BSR set to: 0
  1501                           ;maincode1.c: 14:     ANSELA = 0xFF;
  1502   002944  0104               	movlb	4	; () banked
  1503   002946  6900               	setf	0,b	;volatile
  1504   002948                     
  1505                           ; BSR set to: 4
  1506                           ;maincode1.c: 15:     TRISB = 0xFF;
  1507   002948  68C7               	setf	199,c	;volatile
  1508                           
  1509                           ;maincode1.c: 16:     ANSELB = 0xEE;
  1510   00294A  0EEE               	movlw	238
  1511   00294C  6F08               	movwf	8,b	;volatile
  1512                           
  1513                           ;maincode1.c: 17:     TRISD = 0x00;
  1514   00294E  0E00               	movlw	0
  1515   002950  6EC9               	movwf	201,c	;volatile
  1516                           
  1517                           ;maincode1.c: 18:     ANSELD = 0x00;
  1518   002952  0E00               	movlw	0
  1519   002954  6F18               	movwf	24,b	;volatile
  1520                           
  1521                           ;maincode1.c: 19:     TRISE = 0xFC;
  1522   002956  0EFC               	movlw	252
  1523   002958  6ECA               	movwf	202,c	;volatile
  1524                           
  1525                           ;maincode1.c: 20:     ANSELE = 0xFC;
  1526   00295A  0EFC               	movlw	252
  1527   00295C  6F20               	movwf	32,b	;volatile
  1528                           
  1529                           ;maincode1.c: 21:     ADCON0bits.FM = 1;
  1530   00295E  0103               	movlb	3	; () banked
  1531   002960  51F3               	movf	243,w,b	;volatile
  1532   002962  0BF3               	andlw	-13
  1533   002964  0904               	iorlw	4
  1534   002966  6FF3               	movwf	243,b	;volatile
  1535   002968                     
  1536                           ; BSR set to: 3
  1537                           ;maincode1.c: 22:     ADCON0bits.CS = 1;
  1538   002968  89F3               	bsf	243,4,b	;volatile
  1539   00296A                     
  1540                           ; BSR set to: 3
  1541                           ;maincode1.c: 23:     ADCON0bits.ADON = 1;
  1542   00296A  8FF3               	bsf	243,7,b	;volatile
  1543   00296C                     
  1544                           ; BSR set to: 3
  1545                           ;maincode1.c: 24:     TRISFbits.TRISF0 = 0;
  1546   00296C  90CB               	bcf	203,0,c	;volatile
  1547   00296E                     
  1548                           ; BSR set to: 3
  1549                           ;maincode1.c: 25:     ANSELFbits.ANSELF0 = 0;
  1550   00296E  0104               	movlb	4	; () banked
  1551   002970  9128               	bcf	40,0,b	;volatile
  1552                           
  1553                           ;maincode1.c: 26:     U1BRGH = 00;
  1554   002972  0E00               	movlw	0
  1555   002974  0102               	movlb	2	; () banked
  1556   002976  6FAF               	movwf	175,b	;volatile
  1557                           
  1558                           ;maincode1.c: 27:     U1BRGL = 25;
  1559   002978  0E19               	movlw	25
  1560   00297A  6FAE               	movwf	174,b	;volatile
  1561                           
  1562                           ;maincode1.c: 28:     U1CON0 = 0x30;
  1563   00297C  0E30               	movlw	48
  1564   00297E  6FAB               	movwf	171,b	;volatile
  1565                           
  1566                           ;maincode1.c: 29:     RF0PPS = 0x20;
  1567   002980  0E20               	movlw	32
  1568   002982  6F29               	movwf	41,b	;volatile
  1569                           
  1570                           ;maincode1.c: 30:     U1CON2 = 0x00;
  1571   002984  0E00               	movlw	0
  1572   002986  6FAD               	movwf	173,b	;volatile
  1573                           
  1574                           ;maincode1.c: 31:     U1CON1 = 0x80;
  1575   002988  0E80               	movlw	128
  1576   00298A  6FAC               	movwf	172,b	;volatile
  1577   00298C                     
  1578                           ; BSR set to: 2
  1579                           ;maincode1.c: 32:     LCD_INIT();
  1580   00298C  ECD3  F015         	call	_LCD_INIT	;wreg free
  1581   002990  0012               	return		;funcret
  1582   002992                     __end_of_configuro:
  1583                           	callstack 0
  1584                           
  1585 ;; *************** function _LCD_INIT *****************
  1586 ;; Defined at:
  1587 ;;		line 184 in file "LCD.c"
  1588 ;; Parameters:    Size  Location     Type
  1589 ;;		None
  1590 ;; Auto vars:     Size  Location     Type
  1591 ;;		None
  1592 ;; Return value:  Size  Location     Type
  1593 ;;                  1    wreg      void 
  1594 ;; Registers used:
  1595 ;;		wreg, status,2, status,0, cstack
  1596 ;; Tracked objects:
  1597 ;;		On entry : 0/0
  1598 ;;		On exit  : 0/0
  1599 ;;		Unchanged: 0/0
  1600 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1601 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1602 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1603 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1604 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1605 ;;Total ram usage:        1 bytes
  1606 ;; Hardware stack levels used: 1
  1607 ;; Hardware stack levels required when called: 3
  1608 ;; This function calls:
  1609 ;;		_BORRAR_LCD
  1610 ;;		_CURSOR_HOME
  1611 ;;		_CURSOR_ONOFF
  1612 ;;		_LCD_CONFIG
  1613 ;; This function is called by:
  1614 ;;		_configuro
  1615 ;; This function uses a non-reentrant model
  1616 ;;
  1617                           
  1618                           	psect	text13
  1619   002BA6                     __ptext13:
  1620                           	callstack 0
  1621   002BA6                     _LCD_INIT:
  1622                           	callstack 122
  1623   002BA6                     
  1624                           ;LCD.c: 185:     _delay((unsigned long)((15)*(4000000UL/4000.0)));
  1625   002BA6  0E14               	movlw	20
  1626   002BA8  6E05               	movwf	??_LCD_INIT^(0+1280),c
  1627   002BAA  0E7A               	movlw	122
  1628   002BAC                     u387:
  1629   002BAC  2EE8               	decfsz	wreg,f,c
  1630   002BAE  D7FE               	bra	u387
  1631   002BB0  2E05               	decfsz	??_LCD_INIT^(0+1280),f,c
  1632   002BB2  D7FC               	bra	u387
  1633   002BB4                     
  1634                           ;LCD.c: 186:     LCD_CONFIG();
  1635   002BB4  ECF2  F014         	call	_LCD_CONFIG	;wreg free
  1636   002BB8                     
  1637                           ;LCD.c: 187:     _delay((unsigned long)((15)*(4000000UL/4000.0)));
  1638   002BB8  0E14               	movlw	20
  1639   002BBA  6E05               	movwf	??_LCD_INIT^(0+1280),c
  1640   002BBC  0E7A               	movlw	122
  1641   002BBE                     u397:
  1642   002BBE  2EE8               	decfsz	wreg,f,c
  1643   002BC0  D7FE               	bra	u397
  1644   002BC2  2E05               	decfsz	??_LCD_INIT^(0+1280),f,c
  1645   002BC4  D7FC               	bra	u397
  1646                           
  1647                           ;LCD.c: 188:     BORRAR_LCD();
  1648   002BC6  EC57  F016         	call	_BORRAR_LCD	;wreg free
  1649                           
  1650                           ;LCD.c: 189:     CURSOR_HOME();
  1651   002BCA  EC53  F016         	call	_CURSOR_HOME	;wreg free
  1652                           
  1653                           ;LCD.c: 190:     CURSOR_ONOFF(1);
  1654   002BCE  0E01               	movlw	1
  1655   002BD0  ECEB  F015         	call	_CURSOR_ONOFF
  1656   002BD4  0012               	return		;funcret
  1657   002BD6                     __end_of_LCD_INIT:
  1658                           	callstack 0
  1659                           
  1660 ;; *************** function _LCD_CONFIG *****************
  1661 ;; Defined at:
  1662 ;;		line 101 in file "LCD.c"
  1663 ;; Parameters:    Size  Location     Type
  1664 ;;		None
  1665 ;; Auto vars:     Size  Location     Type
  1666 ;;		None
  1667 ;; Return value:  Size  Location     Type
  1668 ;;                  1    wreg      void 
  1669 ;; Registers used:
  1670 ;;		wreg, status,2, status,0, cstack
  1671 ;; Tracked objects:
  1672 ;;		On entry : 0/0
  1673 ;;		On exit  : 0/0
  1674 ;;		Unchanged: 0/0
  1675 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1676 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1677 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1678 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1679 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1680 ;;Total ram usage:        1 bytes
  1681 ;; Hardware stack levels used: 1
  1682 ;; Hardware stack levels required when called: 2
  1683 ;; This function calls:
  1684 ;;		_ENVIA_LCD_CMD
  1685 ;;		_ENVIA_NIBBLE
  1686 ;; This function is called by:
  1687 ;;		_LCD_INIT
  1688 ;; This function uses a non-reentrant model
  1689 ;;
  1690                           
  1691                           	psect	text14
  1692   0029E4                     __ptext14:
  1693                           	callstack 0
  1694   0029E4                     _LCD_CONFIG:
  1695                           	callstack 122
  1696   0029E4                     
  1697                           ;LCD.c: 103:  LATDbits.LATD0 = 0;
  1698   0029E4  90C1               	bcf	193,0,c	;volatile
  1699                           
  1700                           ;LCD.c: 104:  LATDbits.LATD1 = 0;
  1701   0029E6  92C1               	bcf	193,1,c	;volatile
  1702   0029E8                     
  1703                           ;LCD.c: 105:  ENVIA_NIBBLE(0x30);
  1704   0029E8  0E30               	movlw	48
  1705   0029EA  EC2D  F016         	call	_ENVIA_NIBBLE
  1706   0029EE                     
  1707                           ;LCD.c: 106:     _delay((unsigned long)((2)*(4000000UL/4000.0)));
  1708   0029EE  0E03               	movlw	3
  1709   0029F0  6E04               	movwf	??_LCD_CONFIG^(0+1280),c
  1710   0029F2  0E98               	movlw	152
  1711   0029F4                     u407:
  1712   0029F4  2EE8               	decfsz	wreg,f,c
  1713   0029F6  D7FE               	bra	u407
  1714   0029F8  2E04               	decfsz	??_LCD_CONFIG^(0+1280),f,c
  1715   0029FA  D7FC               	bra	u407
  1716   0029FC                     
  1717                           ;LCD.c: 107:  ENVIA_NIBBLE(0x30);
  1718   0029FC  0E30               	movlw	48
  1719   0029FE  EC2D  F016         	call	_ENVIA_NIBBLE
  1720                           
  1721                           ;LCD.c: 108:     _delay((unsigned long)((100)*(4000000UL/4000000.0)));
  1722   002A02  0E21               	movlw	33
  1723   002A04                     u417:
  1724   002A04  2EE8               	decfsz	wreg,f,c
  1725   002A06  D7FE               	bra	u417
  1726   002A08  F000               	nop	
  1727   002A0A                     
  1728                           ;LCD.c: 109:     ENVIA_NIBBLE(0x30);
  1729   002A0A  0E30               	movlw	48
  1730   002A0C  EC2D  F016         	call	_ENVIA_NIBBLE
  1731   002A10                     
  1732                           ;LCD.c: 110:  ENVIA_NIBBLE(0x20);
  1733   002A10  0E20               	movlw	32
  1734   002A12  EC2D  F016         	call	_ENVIA_NIBBLE
  1735   002A16                     
  1736                           ;LCD.c: 111:  ENVIA_LCD_CMD(0x01);
  1737   002A16  0E01               	movlw	1
  1738   002A18  ECB9  F015         	call	_ENVIA_LCD_CMD
  1739   002A1C                     
  1740                           ;LCD.c: 112:  ENVIA_LCD_CMD(0x28);
  1741   002A1C  0E28               	movlw	40
  1742   002A1E  ECB9  F015         	call	_ENVIA_LCD_CMD
  1743   002A22                     
  1744                           ;LCD.c: 113:  ENVIA_LCD_CMD(0x0F);
  1745   002A22  0E0F               	movlw	15
  1746   002A24  ECB9  F015         	call	_ENVIA_LCD_CMD
  1747   002A28                     
  1748                           ;LCD.c: 114:  ENVIA_LCD_CMD(0x06);
  1749   002A28  0E06               	movlw	6
  1750   002A2A  ECB9  F015         	call	_ENVIA_LCD_CMD
  1751   002A2E                     
  1752                           ;LCD.c: 115:  ENVIA_LCD_CMD(0x01);
  1753   002A2E  0E01               	movlw	1
  1754   002A30  ECB9  F015         	call	_ENVIA_LCD_CMD
  1755   002A34  0012               	return		;funcret
  1756   002A36                     __end_of_LCD_CONFIG:
  1757                           	callstack 0
  1758                           
  1759 ;; *************** function _CURSOR_ONOFF *****************
  1760 ;; Defined at:
  1761 ;;		line 54 in file "LCD.c"
  1762 ;; Parameters:    Size  Location     Type
  1763 ;;  estado          1    wreg     unsigned char 
  1764 ;; Auto vars:     Size  Location     Type
  1765 ;;  estado          1    3[COMRAM] unsigned char 
  1766 ;; Return value:  Size  Location     Type
  1767 ;;                  1    wreg      void 
  1768 ;; Registers used:
  1769 ;;		wreg, status,2, status,0, cstack
  1770 ;; Tracked objects:
  1771 ;;		On entry : 0/0
  1772 ;;		On exit  : 0/0
  1773 ;;		Unchanged: 0/0
  1774 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1775 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1776 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1777 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1778 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1779 ;;Total ram usage:        1 bytes
  1780 ;; Hardware stack levels used: 1
  1781 ;; Hardware stack levels required when called: 2
  1782 ;; This function calls:
  1783 ;;		_ENVIA_LCD_CMD
  1784 ;; This function is called by:
  1785 ;;		_LCD_INIT
  1786 ;; This function uses a non-reentrant model
  1787 ;;
  1788                           
  1789                           	psect	text15
  1790   002BD6                     __ptext15:
  1791                           	callstack 0
  1792   002BD6                     _CURSOR_ONOFF:
  1793                           	callstack 122
  1794                           
  1795                           ;incstack = 0
  1796                           ;CURSOR_ONOFF@estado stored from wreg
  1797   002BD6  6E04               	movwf	CURSOR_ONOFF@estado^(0+1280),c
  1798   002BD8                     
  1799                           ;LCD.c: 54: void CURSOR_ONOFF(unsigned char estado);LCD.c: 55: {;LCD.c: 56:  if(estado =
      +                          = 0) ENVIA_LCD_CMD(0x0E);
  1800   002BD8  5004               	movf	CURSOR_ONOFF@estado^(0+1280),w,c
  1801   002BDA  A4D8               	btfss	status,2,c
  1802   002BDC  EFF2  F015         	goto	u41
  1803   002BE0  EFF4  F015         	goto	u40
  1804   002BE4                     u41:
  1805   002BE4  EFF7  F015         	goto	l1005
  1806   002BE8                     u40:
  1807   002BE8  0E0E               	movlw	14
  1808   002BEA  ECB9  F015         	call	_ENVIA_LCD_CMD
  1809   002BEE                     l1005:
  1810                           
  1811                           ;LCD.c: 57:  if(estado == 1) ENVIA_LCD_CMD(0x0C);
  1812   002BEE  0404               	decf	CURSOR_ONOFF@estado^(0+1280),w,c
  1813   002BF0  A4D8               	btfss	status,2,c
  1814   002BF2  EFFD  F015         	goto	u51
  1815   002BF6  EFFF  F015         	goto	u50
  1816   002BFA                     u51:
  1817   002BFA  EF02  F016         	goto	l172
  1818   002BFE                     u50:
  1819   002BFE  0E0C               	movlw	12
  1820   002C00  ECB9  F015         	call	_ENVIA_LCD_CMD
  1821   002C04                     l172:
  1822   002C04  0012               	return		;funcret
  1823   002C06                     __end_of_CURSOR_ONOFF:
  1824                           	callstack 0
  1825                           
  1826 ;; *************** function _CURSOR_HOME *****************
  1827 ;; Defined at:
  1828 ;;		line 29 in file "LCD.c"
  1829 ;; Parameters:    Size  Location     Type
  1830 ;;		None
  1831 ;; Auto vars:     Size  Location     Type
  1832 ;;		None
  1833 ;; Return value:  Size  Location     Type
  1834 ;;                  1    wreg      void 
  1835 ;; Registers used:
  1836 ;;		wreg, status,2, status,0, cstack
  1837 ;; Tracked objects:
  1838 ;;		On entry : 0/0
  1839 ;;		On exit  : 0/0
  1840 ;;		Unchanged: 0/0
  1841 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1842 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1843 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1844 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1845 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1846 ;;Total ram usage:        0 bytes
  1847 ;; Hardware stack levels used: 1
  1848 ;; Hardware stack levels required when called: 2
  1849 ;; This function calls:
  1850 ;;		_ENVIA_LCD_CMD
  1851 ;; This function is called by:
  1852 ;;		_LCD_INIT
  1853 ;; This function uses a non-reentrant model
  1854 ;;
  1855                           
  1856                           	psect	text16
  1857   002CA6                     __ptext16:
  1858                           	callstack 0
  1859   002CA6                     _CURSOR_HOME:
  1860                           	callstack 122
  1861   002CA6                     
  1862                           ;LCD.c: 31:  ENVIA_LCD_CMD(0x02);
  1863   002CA6  0E02               	movlw	2
  1864   002CA8  ECB9  F015         	call	_ENVIA_LCD_CMD
  1865   002CAC  0012               	return		;funcret
  1866   002CAE                     __end_of_CURSOR_HOME:
  1867                           	callstack 0
  1868                           
  1869 ;; *************** function _BORRAR_LCD *****************
  1870 ;; Defined at:
  1871 ;;		line 96 in file "LCD.c"
  1872 ;; Parameters:    Size  Location     Type
  1873 ;;		None
  1874 ;; Auto vars:     Size  Location     Type
  1875 ;;		None
  1876 ;; Return value:  Size  Location     Type
  1877 ;;                  1    wreg      void 
  1878 ;; Registers used:
  1879 ;;		wreg, status,2, status,0, cstack
  1880 ;; Tracked objects:
  1881 ;;		On entry : 0/0
  1882 ;;		On exit  : 0/0
  1883 ;;		Unchanged: 0/0
  1884 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1885 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1886 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1887 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1888 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1889 ;;Total ram usage:        0 bytes
  1890 ;; Hardware stack levels used: 1
  1891 ;; Hardware stack levels required when called: 2
  1892 ;; This function calls:
  1893 ;;		_ENVIA_LCD_CMD
  1894 ;; This function is called by:
  1895 ;;		_pantallazo
  1896 ;;		_LCD_INIT
  1897 ;; This function uses a non-reentrant model
  1898 ;;
  1899                           
  1900                           	psect	text17
  1901   002CAE                     __ptext17:
  1902                           	callstack 0
  1903   002CAE                     _BORRAR_LCD:
  1904                           	callstack 123
  1905   002CAE                     
  1906                           ;LCD.c: 98:  ENVIA_LCD_CMD(0x01);
  1907   002CAE  0E01               	movlw	1
  1908   002CB0  ECB9  F015         	call	_ENVIA_LCD_CMD
  1909   002CB4  0012               	return		;funcret
  1910   002CB6                     __end_of_BORRAR_LCD:
  1911                           	callstack 0
  1912                           
  1913 ;; *************** function _ENVIA_LCD_CMD *****************
  1914 ;; Defined at:
  1915 ;;		line 128 in file "LCD.c"
  1916 ;; Parameters:    Size  Location     Type
  1917 ;;  dato            1    wreg     unsigned char 
  1918 ;; Auto vars:     Size  Location     Type
  1919 ;;  dato            1    1[COMRAM] unsigned char 
  1920 ;;  aux             1    2[COMRAM] unsigned char 
  1921 ;; Return value:  Size  Location     Type
  1922 ;;                  1    wreg      void 
  1923 ;; Registers used:
  1924 ;;		wreg, status,2, status,0, cstack
  1925 ;; Tracked objects:
  1926 ;;		On entry : 0/0
  1927 ;;		On exit  : 0/0
  1928 ;;		Unchanged: 0/0
  1929 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1930 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1931 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1932 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1933 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1934 ;;Total ram usage:        2 bytes
  1935 ;; Hardware stack levels used: 1
  1936 ;; Hardware stack levels required when called: 1
  1937 ;; This function calls:
  1938 ;;		_ENVIA_NIBBLE
  1939 ;;		_LEER_LCD
  1940 ;; This function is called by:
  1941 ;;		_POS_CURSOR
  1942 ;;		_CURSOR_HOME
  1943 ;;		_CURSOR_ONOFF
  1944 ;;		_BORRAR_LCD
  1945 ;;		_LCD_CONFIG
  1946 ;;		_BLINK_CURSOR
  1947 ;;		_DISPLAY_ONOFF
  1948 ;;		_CURSOR_SHIFTLEFT
  1949 ;;		_CURSOR_SHIFTRIGHT
  1950 ;;		_DISPLAY_SHIFTLEFT
  1951 ;;		_DISPLAY_SHIFTRIGHT
  1952 ;;		_GENERACARACTER
  1953 ;; This function uses a non-reentrant model
  1954 ;;
  1955                           
  1956                           	psect	text18
  1957   002B72                     __ptext18:
  1958                           	callstack 0
  1959   002B72                     _ENVIA_LCD_CMD:
  1960                           	callstack 123
  1961                           
  1962                           ;incstack = 0
  1963                           ;ENVIA_LCD_CMD@dato stored from wreg
  1964   002B72  6E02               	movwf	ENVIA_LCD_CMD@dato^(0+1280),c
  1965   002B74                     
  1966                           ;LCD.c: 128: void ENVIA_LCD_CMD(unsigned char dato);LCD.c: 129: {;LCD.c: 130:  unsigned 
      +                          char aux;;LCD.c: 131:  LATDbits.LATD0 = 0;
  1967   002B74  90C1               	bcf	193,0,c	;volatile
  1968   002B76                     
  1969                           ;LCD.c: 132:  LEER_LCD();
  1970   002B76  EC2F  F014         	call	_LEER_LCD	;wreg free
  1971   002B7A                     
  1972                           ;LCD.c: 133:  TRISD = 0b00000000;
  1973   002B7A  0E00               	movlw	0
  1974   002B7C  6EC9               	movwf	201,c	;volatile
  1975   002B7E                     
  1976                           ;LCD.c: 134:     _delay((unsigned long)((100)*(4000000UL/4000000.0)));
  1977   002B7E  0E21               	movlw	33
  1978   002B80                     u427:
  1979   002B80  2EE8               	decfsz	wreg,f,c
  1980   002B82  D7FE               	bra	u427
  1981   002B84  F000               	nop	
  1982   002B86                     
  1983                           ;LCD.c: 135:     LATDbits.LATD1 = 0;
  1984   002B86  92C1               	bcf	193,1,c	;volatile
  1985   002B88                     
  1986                           ;LCD.c: 136:  LATDbits.LATD2 = 0;
  1987   002B88  94C1               	bcf	193,2,c	;volatile
  1988   002B8A                     
  1989                           ;LCD.c: 137:  LATDbits.LATD0 = 0;
  1990   002B8A  90C1               	bcf	193,0,c	;volatile
  1991   002B8C                     
  1992                           ;LCD.c: 138:  aux = dato & 0xF0;
  1993   002B8C  5002               	movf	ENVIA_LCD_CMD@dato^(0+1280),w,c
  1994   002B8E  0BF0               	andlw	240
  1995   002B90  6E03               	movwf	ENVIA_LCD_CMD@aux^(0+1280),c
  1996   002B92                     
  1997                           ;LCD.c: 139:  ENVIA_NIBBLE(aux);
  1998   002B92  5003               	movf	ENVIA_LCD_CMD@aux^(0+1280),w,c
  1999   002B94  EC2D  F016         	call	_ENVIA_NIBBLE
  2000   002B98                     
  2001                           ;LCD.c: 140:  aux = dato<<4;
  2002   002B98  3802               	swapf	ENVIA_LCD_CMD@dato^(0+1280),w,c
  2003   002B9A  0BF0               	andlw	240
  2004   002B9C  6E03               	movwf	ENVIA_LCD_CMD@aux^(0+1280),c
  2005   002B9E                     
  2006                           ;LCD.c: 141:  ENVIA_NIBBLE(aux);
  2007   002B9E  5003               	movf	ENVIA_LCD_CMD@aux^(0+1280),w,c
  2008   002BA0  EC2D  F016         	call	_ENVIA_NIBBLE
  2009   002BA4  0012               	return		;funcret
  2010   002BA6                     __end_of_ENVIA_LCD_CMD:
  2011                           	callstack 0
  2012                           
  2013 ;; *************** function _LEER_LCD *****************
  2014 ;; Defined at:
  2015 ;;		line 144 in file "LCD.c"
  2016 ;; Parameters:    Size  Location     Type
  2017 ;;		None
  2018 ;; Auto vars:     Size  Location     Type
  2019 ;;  aux             1    0[COMRAM] unsigned char 
  2020 ;; Return value:  Size  Location     Type
  2021 ;;                  1    wreg      void 
  2022 ;; Registers used:
  2023 ;;		wreg, status,2, status,0
  2024 ;; Tracked objects:
  2025 ;;		On entry : 0/0
  2026 ;;		On exit  : 0/0
  2027 ;;		Unchanged: 0/0
  2028 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2029 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2030 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2031 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2032 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2033 ;;Total ram usage:        1 bytes
  2034 ;; Hardware stack levels used: 1
  2035 ;; This function calls:
  2036 ;;		Nothing
  2037 ;; This function is called by:
  2038 ;;		_ENVIA_CHAR
  2039 ;;		_ENVIA_LCD_CMD
  2040 ;; This function uses a non-reentrant model
  2041 ;;
  2042                           
  2043                           	psect	text19
  2044   00285E                     __ptext19:
  2045                           	callstack 0
  2046   00285E                     _LEER_LCD:
  2047                           	callstack 123
  2048   00285E                     
  2049                           ;LCD.c: 146:  unsigned char aux;;LCD.c: 147:  TRISD = 0xF8;
  2050   00285E  0EF8               	movlw	248
  2051   002860  6EC9               	movwf	201,c	;volatile
  2052   002862                     
  2053                           ;LCD.c: 148:  LATDbits.LATD0 = 0;
  2054   002862  90C1               	bcf	193,0,c	;volatile
  2055   002864                     
  2056                           ;LCD.c: 149:  LATDbits.LATD1 = 1;
  2057   002864  82C1               	bsf	193,1,c	;volatile
  2058   002866                     
  2059                           ;LCD.c: 150:  LATDbits.LATD2 = 1;
  2060   002866  84C1               	bsf	193,2,c	;volatile
  2061   002868                     
  2062                           ;LCD.c: 151:     _delay((unsigned long)((100)*(4000000UL/4000000.0)));
  2063   002868  0E21               	movlw	33
  2064   00286A                     u437:
  2065   00286A  2EE8               	decfsz	wreg,f,c
  2066   00286C  D7FE               	bra	u437
  2067   00286E  F000               	nop	
  2068   002870                     
  2069                           ;LCD.c: 152:  aux = PORTD;
  2070   002870  C4D1 F501          	movff	1233,LEER_LCD@aux	;volatile
  2071   002874                     
  2072                           ;LCD.c: 153:  LATDbits.LATD2 = 0;
  2073   002874  94C1               	bcf	193,2,c	;volatile
  2074   002876                     
  2075                           ;LCD.c: 154:     _delay((unsigned long)((100)*(4000000UL/4000000.0)));
  2076   002876  0E21               	movlw	33
  2077   002878                     u447:
  2078   002878  2EE8               	decfsz	wreg,f,c
  2079   00287A  D7FE               	bra	u447
  2080   00287C  F000               	nop	
  2081   00287E                     
  2082                           ;LCD.c: 155:  LATDbits.LATD2 = 1;
  2083   00287E  84C1               	bsf	193,2,c	;volatile
  2084   002880                     
  2085                           ;LCD.c: 156:     _delay((unsigned long)((100)*(4000000UL/4000000.0)));
  2086   002880  0E21               	movlw	33
  2087   002882                     u457:
  2088   002882  2EE8               	decfsz	wreg,f,c
  2089   002884  D7FE               	bra	u457
  2090   002886  F000               	nop	
  2091   002888                     
  2092                           ;LCD.c: 157:  LATDbits.LATD2 = 0;
  2093   002888  94C1               	bcf	193,2,c	;volatile
  2094   00288A                     l917:
  2095                           
  2096                           ;LCD.c: 158:  aux = aux & 0x80;
  2097   00288A  5001               	movf	LEER_LCD@aux^(0+1280),w,c
  2098   00288C  0B80               	andlw	128
  2099   00288E  6E01               	movwf	LEER_LCD@aux^(0+1280),c
  2100                           
  2101                           ;LCD.c: 159:  while(aux == 0x80)
  2102   002890  EF5E  F014         	goto	l931
  2103   002894                     l203:
  2104                           
  2105                           ;LCD.c: 160:         {;LCD.c: 161:             LATDbits.LATD2 = 1;
  2106   002894  84C1               	bsf	193,2,c	;volatile
  2107   002896                     
  2108                           ;LCD.c: 162:             _delay((unsigned long)((100)*(4000000UL/4000000.0)));
  2109   002896  0E21               	movlw	33
  2110   002898                     u467:
  2111   002898  2EE8               	decfsz	wreg,f,c
  2112   00289A  D7FE               	bra	u467
  2113   00289C  F000               	nop	
  2114   00289E                     
  2115                           ;LCD.c: 163:             aux = PORTD;
  2116   00289E  C4D1 F501          	movff	1233,LEER_LCD@aux	;volatile
  2117   0028A2                     
  2118                           ;LCD.c: 164:             LATDbits.LATD2 = 0;
  2119   0028A2  94C1               	bcf	193,2,c	;volatile
  2120                           
  2121                           ;LCD.c: 165:             _delay((unsigned long)((100)*(4000000UL/4000000.0)));
  2122   0028A4  0E21               	movlw	33
  2123   0028A6                     u477:
  2124   0028A6  2EE8               	decfsz	wreg,f,c
  2125   0028A8  D7FE               	bra	u477
  2126   0028AA  F000               	nop	
  2127   0028AC                     
  2128                           ;LCD.c: 166:             LATDbits.LATD2 = 1;
  2129   0028AC  84C1               	bsf	193,2,c	;volatile
  2130                           
  2131                           ;LCD.c: 167:             _delay((unsigned long)((100)*(4000000UL/4000000.0)));
  2132   0028AE  0E21               	movlw	33
  2133   0028B0                     u487:
  2134   0028B0  2EE8               	decfsz	wreg,f,c
  2135   0028B2  D7FE               	bra	u487
  2136   0028B4  F000               	nop	
  2137   0028B6                     
  2138                           ;LCD.c: 168:             LATDbits.LATD2 = 0;
  2139   0028B6  94C1               	bcf	193,2,c	;volatile
  2140   0028B8  EF45  F014         	goto	l917
  2141   0028BC                     l931:
  2142                           
  2143                           ;LCD.c: 159:  while(aux == 0x80)
  2144   0028BC  0E80               	movlw	128
  2145   0028BE  1801               	xorwf	LEER_LCD@aux^(0+1280),w,c
  2146   0028C0  B4D8               	btfsc	status,2,c
  2147   0028C2  EF65  F014         	goto	u11
  2148   0028C6  EF67  F014         	goto	u10
  2149   0028CA                     u11:
  2150   0028CA  EF4A  F014         	goto	l203
  2151   0028CE                     u10:
  2152   0028CE  0012               	return		;funcret
  2153   0028D0                     __end_of_LEER_LCD:
  2154                           	callstack 0
  2155                           
  2156 ;; *************** function _ENVIA_NIBBLE *****************
  2157 ;; Defined at:
  2158 ;;		line 118 in file "LCD.c"
  2159 ;; Parameters:    Size  Location     Type
  2160 ;;  dato            1    wreg     unsigned char 
  2161 ;; Auto vars:     Size  Location     Type
  2162 ;;  dato            1    0[COMRAM] unsigned char 
  2163 ;; Return value:  Size  Location     Type
  2164 ;;                  1    wreg      void 
  2165 ;; Registers used:
  2166 ;;		wreg, status,2, status,0
  2167 ;; Tracked objects:
  2168 ;;		On entry : 0/0
  2169 ;;		On exit  : 0/0
  2170 ;;		Unchanged: 0/0
  2171 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2172 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2173 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2174 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2175 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2176 ;;Total ram usage:        1 bytes
  2177 ;; Hardware stack levels used: 1
  2178 ;; This function calls:
  2179 ;;		Nothing
  2180 ;; This function is called by:
  2181 ;;		_ENVIA_CHAR
  2182 ;;		_LCD_CONFIG
  2183 ;;		_ENVIA_LCD_CMD
  2184 ;; This function uses a non-reentrant model
  2185 ;;
  2186                           
  2187                           	psect	text20
  2188   002C5A                     __ptext20:
  2189                           	callstack 0
  2190   002C5A                     _ENVIA_NIBBLE:
  2191                           	callstack 123
  2192                           
  2193                           ;incstack = 0
  2194                           ;ENVIA_NIBBLE@dato stored from wreg
  2195   002C5A  6E01               	movwf	ENVIA_NIBBLE@dato^(0+1280),c
  2196   002C5C                     
  2197                           ;LCD.c: 118: void ENVIA_NIBBLE(unsigned char dato);LCD.c: 119: {;LCD.c: 120:  LATD &= 0x
      +                          0F;
  2198   002C5C  0E0F               	movlw	15
  2199   002C5E  16C1               	andwf	193,f,c	;volatile
  2200                           
  2201                           ;LCD.c: 121:  dato &= 0xF0;
  2202   002C60  0EF0               	movlw	240
  2203   002C62  1601               	andwf	ENVIA_NIBBLE@dato^(0+1280),f,c
  2204                           
  2205                           ;LCD.c: 122:  LATD|= dato;
  2206   002C64  5001               	movf	ENVIA_NIBBLE@dato^(0+1280),w,c	;volatile
  2207   002C66  12C1               	iorwf	193,f,c	;volatile
  2208   002C68                     
  2209                           ;LCD.c: 123:  LATDbits.LATD2 = 1;
  2210   002C68  84C1               	bsf	193,2,c	;volatile
  2211   002C6A                     
  2212                           ;LCD.c: 124:     _delay((unsigned long)((100)*(4000000UL/4000000.0)));
  2213   002C6A  0E21               	movlw	33
  2214   002C6C                     u497:
  2215   002C6C  2EE8               	decfsz	wreg,f,c
  2216   002C6E  D7FE               	bra	u497
  2217   002C70  F000               	nop	
  2218   002C72                     
  2219                           ;LCD.c: 125:  LATDbits.LATD2 = 0;
  2220   002C72  94C1               	bcf	193,2,c	;volatile
  2221   002C74  0012               	return		;funcret
  2222   002C76                     __end_of_ENVIA_NIBBLE:
  2223                           	callstack 0
  2224                           
  2225 ;; *************** function _ADC_GetValue *****************
  2226 ;; Defined at:
  2227 ;;		line 35 in file "maincode1.c"
  2228 ;; Parameters:    Size  Location     Type
  2229 ;;  canal           1    wreg     unsigned char 
  2230 ;; Auto vars:     Size  Location     Type
  2231 ;;  canal           1    4[COMRAM] unsigned char 
  2232 ;; Return value:  Size  Location     Type
  2233 ;;                  2    0[COMRAM] unsigned int 
  2234 ;; Registers used:
  2235 ;;		wreg, status,2, status,0
  2236 ;; Tracked objects:
  2237 ;;		On entry : 0/0
  2238 ;;		On exit  : 0/0
  2239 ;;		Unchanged: 0/0
  2240 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2241 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2242 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2243 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2244 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2245 ;;Total ram usage:        5 bytes
  2246 ;; Hardware stack levels used: 1
  2247 ;; This function calls:
  2248 ;;		Nothing
  2249 ;; This function is called by:
  2250 ;;		_main
  2251 ;; This function uses a non-reentrant model
  2252 ;;
  2253                           
  2254                           	psect	text21
  2255   002C06                     __ptext21:
  2256                           	callstack 0
  2257   002C06                     _ADC_GetValue:
  2258                           	callstack 126
  2259                           
  2260                           ;incstack = 0
  2261                           ;ADC_GetValue@canal stored from wreg
  2262   002C06  6E05               	movwf	ADC_GetValue@canal^(0+1280),c
  2263   002C08                     
  2264                           ;maincode1.c: 36:     ADPCH = canal;
  2265   002C08  C505  F3EC         	movff	ADC_GetValue@canal,1004	;volatile
  2266   002C0C                     
  2267                           ;maincode1.c: 37:     ADCON0bits.GO = 1;
  2268   002C0C  0103               	movlb	3	; () banked
  2269   002C0E  81F3               	bsf	243,0,b	;volatile
  2270   002C10                     l78:
  2271                           
  2272                           ; BSR set to: 3
  2273   002C10  B1F3               	btfsc	243,0,b	;volatile
  2274   002C12  EF0D  F016         	goto	u361
  2275   002C16  EF0F  F016         	goto	u360
  2276   002C1A                     u361:
  2277   002C1A  EF08  F016         	goto	l78
  2278   002C1E                     u360:
  2279   002C1E                     
  2280                           ; BSR set to: 3
  2281                           ;maincode1.c: 39:     return ((ADRESH << 8) + ADRESL);
  2282   002C1E  51EB               	movf	235,w,b	;volatile
  2283   002C20  6E04               	movwf	(??_ADC_GetValue+1)^(0+1280),c
  2284   002C22  6A03               	clrf	??_ADC_GetValue^(0+1280),c
  2285   002C24  51EA               	movf	234,w,b	;volatile
  2286   002C26  2403               	addwf	??_ADC_GetValue^(0+1280),w,c
  2287   002C28  6E01               	movwf	?_ADC_GetValue^(0+1280),c
  2288   002C2A  0E00               	movlw	0
  2289   002C2C  2004               	addwfc	(??_ADC_GetValue+1)^(0+1280),w,c
  2290   002C2E  6E02               	movwf	(?_ADC_GetValue+1)^(0+1280),c
  2291   002C30                     
  2292                           ; BSR set to: 3
  2293   002C30  0012               	return		;funcret
  2294   002C32                     __end_of_ADC_GetValue:
  2295                           	callstack 0
  2296                           
  2297                           	psect	rparam
  2298   000000                     
  2299                           	psect	idloc
  2300                           
  2301                           ;Config register IDLOC0 @ 0x200000
  2302                           ;	unspecified, using default values
  2303   200000                     	org	2097152
  2304   200000  0FFF               	dw	4095
  2305                           
  2306                           ;Config register IDLOC1 @ 0x200002
  2307                           ;	unspecified, using default values
  2308   200002                     	org	2097154
  2309   200002  0FFF               	dw	4095
  2310                           
  2311                           ;Config register IDLOC2 @ 0x200004
  2312                           ;	unspecified, using default values
  2313   200004                     	org	2097156
  2314   200004  0FFF               	dw	4095
  2315                           
  2316                           ;Config register IDLOC3 @ 0x200006
  2317                           ;	unspecified, using default values
  2318   200006                     	org	2097158
  2319   200006  0FFF               	dw	4095
  2320                           
  2321                           ;Config register IDLOC4 @ 0x200008
  2322                           ;	unspecified, using default values
  2323   200008                     	org	2097160
  2324   200008  0FFF               	dw	4095
  2325                           
  2326                           ;Config register IDLOC5 @ 0x20000A
  2327                           ;	unspecified, using default values
  2328   20000A                     	org	2097162
  2329   20000A  0FFF               	dw	4095
  2330                           
  2331                           ;Config register IDLOC6 @ 0x20000C
  2332                           ;	unspecified, using default values
  2333   20000C                     	org	2097164
  2334   20000C  0FFF               	dw	4095
  2335                           
  2336                           ;Config register IDLOC7 @ 0x20000E
  2337                           ;	unspecified, using default values
  2338   20000E                     	org	2097166
  2339   20000E  0FFF               	dw	4095
  2340                           
  2341                           ;Config register IDLOC8 @ 0x200010
  2342                           ;	unspecified, using default values
  2343   200010                     	org	2097168
  2344   200010  0FFF               	dw	4095
  2345                           
  2346                           ;Config register IDLOC9 @ 0x200012
  2347                           ;	unspecified, using default values
  2348   200012                     	org	2097170
  2349   200012  0FFF               	dw	4095
  2350                           
  2351                           ;Config register IDLOC10 @ 0x200014
  2352                           ;	unspecified, using default values
  2353   200014                     	org	2097172
  2354   200014  0FFF               	dw	4095
  2355                           
  2356                           ;Config register IDLOC11 @ 0x200016
  2357                           ;	unspecified, using default values
  2358   200016                     	org	2097174
  2359   200016  0FFF               	dw	4095
  2360                           
  2361                           ;Config register IDLOC12 @ 0x200018
  2362                           ;	unspecified, using default values
  2363   200018                     	org	2097176
  2364   200018  0FFF               	dw	4095
  2365                           
  2366                           ;Config register IDLOC13 @ 0x20001A
  2367                           ;	unspecified, using default values
  2368   20001A                     	org	2097178
  2369   20001A  0FFF               	dw	4095
  2370                           
  2371                           ;Config register IDLOC14 @ 0x20001C
  2372                           ;	unspecified, using default values
  2373   20001C                     	org	2097180
  2374   20001C  0FFF               	dw	4095
  2375                           
  2376                           ;Config register IDLOC15 @ 0x20001E
  2377                           ;	unspecified, using default values
  2378   20001E                     	org	2097182
  2379   20001E  0FFF               	dw	4095
  2380                           
  2381                           ;Config register IDLOC16 @ 0x200020
  2382                           ;	unspecified, using default values
  2383   200020                     	org	2097184
  2384   200020  0FFF               	dw	4095
  2385                           
  2386                           ;Config register IDLOC17 @ 0x200022
  2387                           ;	unspecified, using default values
  2388   200022                     	org	2097186
  2389   200022  0FFF               	dw	4095
  2390                           
  2391                           ;Config register IDLOC18 @ 0x200024
  2392                           ;	unspecified, using default values
  2393   200024                     	org	2097188
  2394   200024  0FFF               	dw	4095
  2395                           
  2396                           ;Config register IDLOC19 @ 0x200026
  2397                           ;	unspecified, using default values
  2398   200026                     	org	2097190
  2399   200026  0FFF               	dw	4095
  2400                           
  2401                           ;Config register IDLOC20 @ 0x200028
  2402                           ;	unspecified, using default values
  2403   200028                     	org	2097192
  2404   200028  0FFF               	dw	4095
  2405                           
  2406                           ;Config register IDLOC21 @ 0x20002A
  2407                           ;	unspecified, using default values
  2408   20002A                     	org	2097194
  2409   20002A  0FFF               	dw	4095
  2410                           
  2411                           ;Config register IDLOC22 @ 0x20002C
  2412                           ;	unspecified, using default values
  2413   20002C                     	org	2097196
  2414   20002C  0FFF               	dw	4095
  2415                           
  2416                           ;Config register IDLOC23 @ 0x20002E
  2417                           ;	unspecified, using default values
  2418   20002E                     	org	2097198
  2419   20002E  0FFF               	dw	4095
  2420                           
  2421                           ;Config register IDLOC24 @ 0x200030
  2422                           ;	unspecified, using default values
  2423   200030                     	org	2097200
  2424   200030  0FFF               	dw	4095
  2425                           
  2426                           ;Config register IDLOC25 @ 0x200032
  2427                           ;	unspecified, using default values
  2428   200032                     	org	2097202
  2429   200032  0FFF               	dw	4095
  2430                           
  2431                           ;Config register IDLOC26 @ 0x200034
  2432                           ;	unspecified, using default values
  2433   200034                     	org	2097204
  2434   200034  0FFF               	dw	4095
  2435                           
  2436                           ;Config register IDLOC27 @ 0x200036
  2437                           ;	unspecified, using default values
  2438   200036                     	org	2097206
  2439   200036  0FFF               	dw	4095
  2440                           
  2441                           ;Config register IDLOC28 @ 0x200038
  2442                           ;	unspecified, using default values
  2443   200038                     	org	2097208
  2444   200038  0FFF               	dw	4095
  2445                           
  2446                           ;Config register IDLOC29 @ 0x20003A
  2447                           ;	unspecified, using default values
  2448   20003A                     	org	2097210
  2449   20003A  0FFF               	dw	4095
  2450                           
  2451                           ;Config register IDLOC30 @ 0x20003C
  2452                           ;	unspecified, using default values
  2453   20003C                     	org	2097212
  2454   20003C  0FFF               	dw	4095
  2455                           
  2456                           ;Config register IDLOC31 @ 0x20003E
  2457                           ;	unspecified, using default values
  2458   20003E                     	org	2097214
  2459   20003E  0FFF               	dw	4095
  2460                           
  2461                           	psect	config
  2462                           
  2463                           ;Config register CONFIG1 @ 0x300000
  2464                           ;	External Oscillator Selection
  2465                           ;	FEXTOSC = ECH, EC (external clock) above 8 MHz
  2466                           ;	Reset Oscillator Selection
  2467                           ;	RSTOSC = EXTOSC, EXTOSC operating per FEXTOSC bits (device manufacturing default)
  2468   300000                     	org	3145728
  2469   300000  FF                 	db	255
  2470                           
  2471                           ;Config register CONFIG2 @ 0x300001
  2472                           ;	Clock out Enable bit
  2473                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
  2474                           ;	PRLOCKED One-Way Set Enable bit
  2475                           ;	PR1WAY = ON, PRLOCKED bit can be cleared and set only once
  2476                           ;	Clock Switch Enable bit
  2477                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
  2478                           ;	Fail-Safe Clock Monitor Enable bit
  2479                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
  2480   300001                     	org	3145729
  2481   300001  FF                 	db	255
  2482                           
  2483                           ;Config register CONFIG3 @ 0x300002
  2484                           ;	MCLR Enable bit
  2485                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
  2486                           ;	Power-up timer selection bits
  2487                           ;	PWRTS = PWRT_16, PWRT set at 16ms
  2488                           ;	Multi-vector enable bit
  2489                           ;	MVECEN = ON, Multi-vector enabled, Vector table used for interrupts
  2490                           ;	IVTLOCK bit One-way set enable bit
  2491                           ;	IVT1WAY = ON, IVTLOCKED bit can be cleared and set only once
  2492                           ;	Low Power BOR Enable bit
  2493                           ;	LPBOREN = OFF, Low-Power BOR disabled
  2494                           ;	Brown-out Reset Enable bits
  2495                           ;	BOREN = OFF, Brown-out Reset disabled
  2496   300002                     	org	3145730
  2497   300002  3B                 	db	59
  2498                           
  2499                           ;Config register CONFIG4 @ 0x300003
  2500                           ;	Brown-out Reset Voltage Selection bits
  2501                           ;	BORV = VBOR_1P9, Brown-out Reset Voltage (VBOR) set to 1.9V
  2502                           ;	ZCD Disable bit
  2503                           ;	ZCD = OFF, ZCD module is disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCD
      +                          CON
  2504                           ;	PPSLOCK bit One-Way Set Enable bit
  2505                           ;	PPS1WAY = ON, PPSLOCKED bit can be cleared and set only once; PPS registers remain loc
      +                          ked after one clear/set cycle
  2506                           ;	Stack Full/Underflow Reset Enable bit
  2507                           ;	STVREN = ON, Stack full/underflow will cause Reset
  2508                           ;	Low Voltage Programming Enable bit
  2509                           ;	LVP = OFF, HV on MCLR/VPP must be used for programming
  2510                           ;	Extended Instruction Set Enable bit
  2511                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
  2512   300003                     	org	3145731
  2513   300003  DF                 	db	223
  2514                           
  2515                           ;Config register CONFIG5 @ 0x300004
  2516                           ;	WDT Period selection bits
  2517                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  2518                           ;	WDT operating mode
  2519                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
  2520   300004                     	org	3145732
  2521   300004  9F                 	db	159
  2522                           
  2523                           ;Config register CONFIG6 @ 0x300005
  2524                           ;	WDT Window Select bits
  2525                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
  2526                           ;	WDT input clock selector
  2527                           ;	WDTCCS = SC, Software Control
  2528   300005                     	org	3145733
  2529   300005  FF                 	db	255
  2530                           
  2531                           ;Config register CONFIG7 @ 0x300006
  2532                           ;	Boot Block Size selection bits
  2533                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
  2534                           ;	Boot Block enable bit
  2535                           ;	BBEN = OFF, Boot block disabled
  2536                           ;	Storage Area Flash enable bit
  2537                           ;	SAFEN = OFF, SAF disabled
  2538                           ;	Background Debugger
  2539                           ;	DEBUG = OFF, Background Debugger disabled
  2540   300006                     	org	3145734
  2541   300006  FF                 	db	255
  2542                           
  2543                           ;Config register CONFIG8 @ 0x300007
  2544                           ;	Boot Block Write Protection bit
  2545                           ;	WRTB = OFF, Boot Block not Write protected
  2546                           ;	Configuration Register Write Protection bit
  2547                           ;	WRTC = OFF, Configuration registers not Write protected
  2548                           ;	Data EEPROM Write Protection bit
  2549                           ;	WRTD = OFF, Data EEPROM not Write protected
  2550                           ;	SAF Write protection bit
  2551                           ;	WRTSAF = OFF, SAF not Write Protected
  2552                           ;	Application Block write protection bit
  2553                           ;	WRTAPP = OFF, Application Block not write protected
  2554   300007                     	org	3145735
  2555   300007  FF                 	db	255
  2556                           
  2557                           ; Padding undefined space
  2558   300008                     	org	3145736
  2559   300008  FF                 	db	255
  2560                           
  2561                           ;Config register CONFIG10 @ 0x300009
  2562                           ;	PFM and Data EEPROM Code Protection bit
  2563                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
  2564   300009                     	org	3145737
  2565   300009  FF                 	db	255
  2566                           tosu	equ	0x4FF
  2567                           tosh	equ	0x4FE
  2568                           tosl	equ	0x4FD
  2569                           stkptr	equ	0x4FC
  2570                           pclatu	equ	0x4FB
  2571                           pclath	equ	0x4FA
  2572                           pcl	equ	0x4F9
  2573                           tblptru	equ	0x4F8
  2574                           tblptrh	equ	0x4F7
  2575                           tblptrl	equ	0x4F6
  2576                           tablat	equ	0x4F5
  2577                           prodh	equ	0x4F4
  2578                           prodl	equ	0x4F3
  2579                           indf0	equ	0x4EF
  2580                           postinc0	equ	0x4EE
  2581                           postdec0	equ	0x4ED
  2582                           preinc0	equ	0x4EC
  2583                           plusw0	equ	0x4EB
  2584                           fsr0h	equ	0x4EA
  2585                           fsr0l	equ	0x4E9
  2586                           wreg	equ	0x4E8
  2587                           indf1	equ	0x4E7
  2588                           postinc1	equ	0x4E6
  2589                           postdec1	equ	0x4E5
  2590                           preinc1	equ	0x4E4
  2591                           plusw1	equ	0x4E3
  2592                           fsr1h	equ	0x4E2
  2593                           fsr1l	equ	0x4E1
  2594                           bsr	equ	0x4E0
  2595                           indf2	equ	0x4DF
  2596                           postinc2	equ	0x4DE
  2597                           postdec2	equ	0x4DD
  2598                           preinc2	equ	0x4DC
  2599                           plusw2	equ	0x4DB
  2600                           fsr2h	equ	0x4DA
  2601                           fsr2l	equ	0x4D9
  2602                           status	equ	0x4D8

Data Sizes:
    Strings     50
    Constant    0
    Data        0
    BSS         5
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     14      19
    BANK5           160      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0
    BANK32          256      0       0
    BANK33          256      0       0
    BANK34          256      0       0
    BANK35          256      0       0
    BANK36          256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_8(CODE[12]), STR_7(CODE[6]), STR_6(CODE[12]), STR_5(CODE[6]), 
		 -> STR_4(CODE[16]), STR_3(CODE[10]), STR_2(CODE[16]), STR_1(CODE[10]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_8(CODE[12]), STR_7(CODE[6]), STR_6(CODE[12]), STR_5(CODE[6]), 
		 -> STR_4(CODE[16]), STR_3(CODE[10]), STR_2(CODE[16]), STR_1(CODE[10]), 

    ESCRIBE_MENSAJE2@cadena	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_7(CODE[6]), STR_5(CODE[6]), STR_2(CODE[16]), STR_1(CODE[10]), 

    UART1_String_Send@cadena	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_8(CODE[12]), STR_6(CODE[12]), STR_4(CODE[16]), STR_3(CODE[10]), 


Critical Paths under _main in COMRAM

    _main->_convierte
    _pantallazo->_ESCRIBE_MENSAJE2
    _pantallazo->_UART1_String_Send
    _UART1_String_Send->_strlen
    _POS_CURSOR->_ENVIA_LCD_CMD
    _ESCRIBE_MENSAJE2->_strlen
    _ENVIA_CHAR->_ENVIA_NIBBLE
    _ENVIA_CHAR->_LEER_LCD
    _convierte->___lwdiv
    ___lwdiv->___lwmod
    _configuro->_LCD_INIT
    _LCD_INIT->_CURSOR_ONOFF
    _LCD_INIT->_LCD_CONFIG
    _LCD_CONFIG->_ENVIA_LCD_CMD
    _CURSOR_ONOFF->_ENVIA_LCD_CMD
    _CURSOR_HOME->_ENVIA_LCD_CMD
    _BORRAR_LCD->_ENVIA_LCD_CMD
    _ENVIA_LCD_CMD->_ENVIA_NIBBLE
    _ENVIA_LCD_CMD->_LEER_LCD

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _main in BANK32

    None.

Critical Paths under _main in BANK33

    None.

Critical Paths under _main in BANK34

    None.

Critical Paths under _main in BANK35

    None.

Critical Paths under _main in BANK36

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    6535
                       _ADC_GetValue
                         _ENVIA_CHAR
                   _ESCRIBE_MENSAJE2
                         _POS_CURSOR
                    _UART1_Data_Send
                      _UART1_NewLine
                  _UART1_String_Send
                          _configuro
                          _convierte
                         _pantallazo
 ---------------------------------------------------------------------------------
 (1) _pantallazo                                           0     0      0    2087
                         _BORRAR_LCD
                   _ESCRIBE_MENSAJE2
                         _POS_CURSOR
                      _UART1_NewLine
                  _UART1_String_Send
 ---------------------------------------------------------------------------------
 (2) _UART1_String_Send                                    6     4      2     675
                                              4 COMRAM     6     4      2
                    _UART1_Data_Send
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _UART1_Data_Send                                      1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _UART1_NewLine                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _POS_CURSOR                                           2     1      1     512
                                              3 COMRAM     2     1      1
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _ESCRIBE_MENSAJE2                                     6     4      2     780
                                              4 COMRAM     6     4      2
                         _ENVIA_CHAR
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _strlen                                               4     2      2     242
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (3) _ENVIA_CHAR                                           2     2      0     120
                                              1 COMRAM     2     2      0
                       _ENVIA_NIBBLE
                           _LEER_LCD
 ---------------------------------------------------------------------------------
 (1) _convierte                                            2     0      2    1799
                                             12 COMRAM     2     0      2
                       _ADC_GetValue (ARG)
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     767
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     770
                                              5 COMRAM     7     3      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (1) _configuro                                            0     0      0     525
                           _LCD_INIT
 ---------------------------------------------------------------------------------
 (2) _LCD_INIT                                             1     1      0     525
                                              4 COMRAM     1     1      0
                         _BORRAR_LCD
                        _CURSOR_HOME
                       _CURSOR_ONOFF
                         _LCD_CONFIG
 ---------------------------------------------------------------------------------
 (3) _LCD_CONFIG                                           1     1      0     135
                                              3 COMRAM     1     1      0
                      _ENVIA_LCD_CMD
                       _ENVIA_NIBBLE
 ---------------------------------------------------------------------------------
 (3) _CURSOR_ONOFF                                         1     1      0     150
                                              3 COMRAM     1     1      0
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (3) _CURSOR_HOME                                          0     0      0     120
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _BORRAR_LCD                                           0     0      0     120
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (3) _ENVIA_LCD_CMD                                        2     2      0     120
                                              1 COMRAM     2     2      0
                       _ENVIA_NIBBLE
                           _LEER_LCD
 ---------------------------------------------------------------------------------
 (4) _LEER_LCD                                             1     1      0      45
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _ENVIA_NIBBLE                                         1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ADC_GetValue                                         5     3      2      22
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_GetValue
   _ENVIA_CHAR
     _ENVIA_NIBBLE
     _LEER_LCD
   _ESCRIBE_MENSAJE2
     _ENVIA_CHAR
     _strlen
   _POS_CURSOR
     _ENVIA_LCD_CMD
       _ENVIA_NIBBLE
       _LEER_LCD
   _UART1_Data_Send
   _UART1_NewLine
   _UART1_String_Send
     _UART1_Data_Send
     _strlen
   _configuro
     _LCD_INIT
       _BORRAR_LCD
         _ENVIA_LCD_CMD
       _CURSOR_HOME
         _ENVIA_LCD_CMD
       _CURSOR_ONOFF
         _ENVIA_LCD_CMD
       _LCD_CONFIG
         _ENVIA_LCD_CMD
         _ENVIA_NIBBLE
   _convierte
     _ADC_GetValue (ARG)
     ___lwdiv (ARG)
       ___lwmod (ARG)
     ___lwmod (ARG)
   _pantallazo
     _BORRAR_LCD
     _ESCRIBE_MENSAJE2
     _POS_CURSOR
     _UART1_NewLine
     _UART1_String_Send

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0       0      69        0.0%
EEDATA             400      0       0       0        0.0%
BITBIGSFRhhhlll    175      0       0      85        0.0%
BITBIGSFRhhhlll    137      0       0      81        0.0%
BITBIGSFR_1        100      0       0      68        0.0%
BITBANK36          100      0       0      66        0.0%
BANK36             100      0       0      67        0.0%
BITBANK35          100      0       0      64        0.0%
BANK35             100      0       0      65        0.0%
BITBANK34          100      0       0      62        0.0%
BANK34             100      0       0      63        0.0%
BITBANK33          100      0       0      60        0.0%
BANK33             100      0       0      61        0.0%
BITBANK32          100      0       0      58        0.0%
BANK32             100      0       0      59        0.0%
BITBANK31          100      0       0      56        0.0%
BANK31             100      0       0      57        0.0%
BITBANK30          100      0       0      54        0.0%
BANK30             100      0       0      55        0.0%
BITBANK29          100      0       0      52        0.0%
BANK29             100      0       0      53        0.0%
BITBANK28          100      0       0      50        0.0%
BANK28             100      0       0      51        0.0%
BITBANK27          100      0       0      48        0.0%
BANK27             100      0       0      49        0.0%
BITBANK26          100      0       0      46        0.0%
BANK26             100      0       0      47        0.0%
BITBANK25          100      0       0      44        0.0%
BANK25             100      0       0      45        0.0%
BITBANK24          100      0       0      42        0.0%
BANK24             100      0       0      43        0.0%
BITBANK23          100      0       0      40        0.0%
BANK23             100      0       0      41        0.0%
BITBANK22          100      0       0      38        0.0%
BANK22             100      0       0      39        0.0%
BITBANK21          100      0       0      36        0.0%
BANK21             100      0       0      37        0.0%
BITBANK20          100      0       0      34        0.0%
BANK20             100      0       0      35        0.0%
BITBANK19          100      0       0      32        0.0%
BANK19             100      0       0      33        0.0%
BITBANK18          100      0       0      30        0.0%
BANK18             100      0       0      31        0.0%
BITBANK17          100      0       0      28        0.0%
BANK17             100      0       0      29        0.0%
BITBANK16          100      0       0      26        0.0%
BANK16             100      0       0      27        0.0%
BITBANK15          100      0       0      24        0.0%
BANK15             100      0       0      25        0.0%
BITBANK14          100      0       0      22        0.0%
BANK14             100      0       0      23        0.0%
BITBANK13          100      0       0      20        0.0%
BANK13             100      0       0      21        0.0%
BITBANK12          100      0       0      18        0.0%
BANK12             100      0       0      19        0.0%
BITBANK11          100      0       0      16        0.0%
BANK11             100      0       0      17        0.0%
BITBANK10          100      0       0      14        0.0%
BANK10             100      0       0      15        0.0%
BITBANK9           100      0       0      12        0.0%
BANK9              100      0       0      13        0.0%
BITBANK8           100      0       0      10        0.0%
BANK8              100      0       0      11        0.0%
BITBANK7           100      0       0       8        0.0%
BANK7              100      0       0       9        0.0%
BITBANK6           100      0       0       6        0.0%
BANK6              100      0       0       7        0.0%
BITBIGSFRl          AD      0       0      88        0.0%
BITBANK5            A0      0       0       4        0.0%
BANK5               A0      0       0       5        0.0%
BITBIGSFRhhhlhh     98      0       0      74        0.0%
BITBIGSFRhhhlll     79      0       0      84        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      E      13       1       20.0%
BITBIGSFRhhhhhh     2E      0       0      70        0.0%
BITBIGSFRhhhlhh      F      0       0      77        0.0%
BITBIGSFRhhhllh      C      0       0      79        0.0%
BITBIGSFRhhhlll      7      0       0      83        0.0%
BITBIGSFRhhhlhh      7      0       0      75        0.0%
BITBIGSFRhhhlhh      7      0       0      76        0.0%
BITBIGSFRhhhlhl      7      0       0      78        0.0%
BITBIGSFRhhhlll      6      0       0      80        0.0%
BITBIGSFRhhhhhl      5      0       0      71        0.0%
BITBIGSFRhhhlhh      4      0       0      73        0.0%
BITBIGSFRhl          3      0       0      87        0.0%
BITBIGSFRhhhlll      2      0       0      82        0.0%
BITBIGSFRhhhhl       1      0       0      72        0.0%
BITBIGSFRhhl         1      0       0      86        0.0%
BIGSFR_1             0      0       0     200        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      13      89        0.0%
DATA                 0      0      13       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Mon Jun 19 12:21:49 2023

                       l81 2C30                         l90 2CA4                         l75 2990  
                       l84 27E8                         l93 2C38                         l78 2C10  
                       l87 2C94                         l96 2C4A                         l99 2C58  
                       u10 28CE                         u11 28CA                         u20 2CA4  
                       u21 2CA0                         u40 2BE8                         u41 2BE4  
                       u50 2BFE                         u51 2BFA                         u60 2C46  
                       u61 2C42                         u70 2C58                         u71 2C54  
            ENVIA_CHAR@aux 0503                        l105 2A7E                        l203 2894  
                      l108 29E2                        l205 28CE                        l213 2BD4  
                      l142 2B02                        l155 2CAC                        l172 2C04  
                      l190 2CB4                        l184 2AC8                        l193 2A34  
                      l187 2B70                        l196 2C74                        l199 2BA4  
                      l714 285C                        l707 2854                        l724 2932  
                      l901 2866                        l717 292A                        l911 287E  
                      l903 2868                        l921 289E                        l913 2880  
                      l905 2870                        l923 28A2                        l931 28BC  
                      l915 2888                        l907 2874                        l933 2C5C  
                      l925 28AC                        l917 288A                        l909 2876  
                      l941 2B74                        l935 2C68                        l927 28B6  
                      l919 2896                        l951 2B88                        l943 2B76  
                      l937 2C6A                        l961 2B9E                        l953 2B8A  
                      l945 2B7A                        l939 2C72                        l955 2B8C  
                      l947 2B7E                        l963 2C90                        l957 2B92  
                      l949 2B86                        l981 2B46                        l893 2B3C  
                      l895 285E                        l959 2B98                        l975 2CAE  
                      l991 2B58                        l983 2B4A                        l897 2862  
                      l993 2B5E                        l985 2B52                        l977 2B40  
                      l899 2864                        l995 2B64                        l987 2B54  
                      l979 2B42                        l997 2B6A                        l989 2B56  
                      l999 2CA6                        u300 2804                        u301 2800  
                      u310 2822                        u311 281E                        u320 283E  
                      u321 283A                        u330 28E2                        u250 2B30  
                      u331 28DE                        u251 2B2C                        u340 2900  
                      u260 2A7E                        u341 28FC                        u261 2A7A  
                      u350 2916                        u270 2ADC                        u407 29F4  
                      u351 2912                        u271 2AD8                        u360 2C1E  
                      u280 2AFA                        u361 2C1A                        u417 2A04  
                      u281 2AF6                        u290 2AC8                        u427 2B80  
                      u291 2AC4                        u437 286A                        u447 2878  
                      u457 2882                        u377 2B4C                        u467 2898  
                      u387 2BAC                        u477 28A6                        u397 2BBE  
                      u487 28B0                        u497 2C6C                LEER_LCD@aux 0501  
                      wreg 04E8            _UART1_Data_Send 2C8E               ?_CURSOR_HOME 0501  
           ??_ENVIA_NIBBLE 0501             ENVIA_CHAR@dato 0502                       l1001 2BD8  
                     l1003 2BE8                       l1011 29E8                       l1005 2BEE  
                     l1021 2A16                       l1013 29EE                       l1007 2BFE  
                     l1023 2A1C                       l1015 29FC                       l1031 2BA6  
                     l1111 2934                       l1025 2A22                       l1017 2A0A  
                     l1009 29E4                       l1033 2BB4                       l1121 296A  
                     l1113 2942                       l1027 2A28                       l1019 2A10  
                     l1035 2BB8                       l1123 296C                       l1115 2944  
                     l1029 2A2E                       l1125 296E                       l1117 2948  
                     l1301 2822                       l1037 2C32                       l1127 298C  
                     l1119 2968                       l1311 284E                       l1303 2828  
                     l1039 2C46                       l1305 283E                       l1321 2900  
                     l1313 28D0                       l1331 2C0C                       l1307 2846  
                     l1323 2916                       l1315 28E2                       l1251 2B10  
                     l1333 2C1E                       l1309 2848                       l1325 291E  
                     l1317 28EA                       l1253 2B14                       l1261 2A36  
                     l1341 299C                       l1327 2924                       l1319 28F2  
                     l1255 2B30                       l1271 2ACC                       l1263 2A46  
                     l1351 29DE                       l1343 29A8                       l1329 2C08  
                     l1337 2734                       l1249 2B04                       l1281 2A90  
                     l1273 2ADC                       l1265 2A4E                       l1345 29CA  
                     l1361 2658                       l1353 2634                       l1291 27EA  
                     l1283 2A90                       l1275 2AE8                       l1267 2A6A  
                     l1259 2A36                       l1347 29CE                       l1339 2992  
                     l1371 26A8                       l1363 2684                       l1355 2638  
                     l1293 27F2                       l1285 2A98                       l1277 2AFA  
                     l1269 2A6C                       l1349 29DA                       l1381 26DC  
                     l1373 26B0                       l1365 2690                       l1357 263C  
                     l1295 2804                       l1287 2AB4                       l1279 2A80  
                     l1391 2708                       l1383 26E4                       l1375 26B4  
                     l1367 2698                       l1359 264E                       l1297 280C  
                     l1289 2AB6                       l1393 2710                       l1385 26EC  
                     l1377 26C6                       l1369 26A0                       l1299 2814  
                     l1395 2718                       l1387 26F4                       l1379 26D0  
                     l1397 2720                       l1389 26FC                       l1399 2728  
                     STR_1 2629                       STR_2 2601                       STR_3 2629  
                     STR_4 2601                       STR_5 2617                       STR_6 2611  
                     STR_7 2623                       STR_8 261D                       _LATD 04C1  
    __end_of_UART1_NewLine 2C5A                       _main 2634                       start FFFC  
            ?_CURSOR_ONOFF 0501               ___param_bank 0000            ??_ENVIA_LCD_CMD 0502  
         __end_of_LCD_INIT 2BD6           __end_of_LEER_LCD 28D0          ADC_GetValue@canal 0505  
                    ?_main 0501                      _ADPCH 03EC            __end_of___lwdiv 285E  
          __end_of___lwmod 2934                      _U1TXB 02A3                      _OSCEN 00B3  
                    _PORTD 04D1                      _TRISA 04C6                      _TRISB 04C7  
                    _TRISD 04C9                      _TRISE 04CA                ?_POS_CURSOR 0504  
                    tablat 04F5                      status 04D8               _ADC_GetValue 2C06  
           ??_CURSOR_ONOFF 0504            __initialization 2C76               __end_of_main 2734  
  __end_of_UART1_Data_Send 2CA6                     ??_main 050F              __activetblptr 0001  
                   _ADRESH 03EB                     _ADRESL 03EA                     _ANSELA 0400  
                   _ANSELB 0408                     _ANSELD 0418                     _ANSELE 0420  
                   _U1CON0 02AB                     _U1CON1 02AC                     _U1CON2 02AD  
                   _U1BRGH 02AF                     _U1BRGL 02AE                     _RF0PPS 0229  
                   _OSCFRQ 00B1                     _decena 0510       __end_of_ENVIA_NIBBLE 2C76  
                ??___lwdiv 050A                  ??___lwmod 0505                     _millar 0512  
                   isa$std 0001                     _unidad 050F                     _strlen 2B04  
             __mediumconst 0000                     tblptrh 04F7                     tblptrl 04F6  
                   tblptru 04F8        UART1_Data_Send@dato 0501               ??_BORRAR_LCD 0504  
                ?_LCD_INIT 0501                  ?_LEER_LCD 0501                 __accesstop 0560  
  __end_of__initialization 2C80               ??_LCD_CONFIG 0504              ___rparam_used 0001  
             ??_ENVIA_CHAR 0502             __pcstackCOMRAM 0501         __end_of_BORRAR_LCD 2CB6  
         ?_UART1_Data_Send 0501           _ESCRIBE_MENSAJE2 2A80           ENVIA_LCD_CMD@aux 0503  
     __end_of_CURSOR_ONOFF 2C06         __end_of_LCD_CONFIG 2A36         __end_of_ENVIA_CHAR 2B72  
               ??_LCD_INIT 0505                 ??_LEER_LCD 0501           ENVIA_NIBBLE@dato 0501  
                  ?_strlen 0501                 _diezmillar 0513                    _OSCCON1 00AD  
             ??_POS_CURSOR 0505                    __Hparam 0000                    __Lparam 0000  
        __end_of_configuro 2992                    ___lwdiv 27EA                    ___lwmod 28D0  
             __psmallconst 2600      __end_of_ENVIA_LCD_CMD 2BA6          __end_of_convierte 27EA  
                  __pcinit 2C76         __end_of_POS_CURSOR 2B04                    __ramtop 2600  
                  _centena 0511                    __ptext0 2634                    __ptext1 2992  
                  __ptext2 2A36                    __ptext3 2C8E                    __ptext4 2C32  
                  __ptext5 2ACA                    __ptext6 2A80                    __ptext7 2B04  
                  __ptext8 2B3E                    __ptext9 2734                 _pantallazo 2992  
             _ENVIA_NIBBLE 2C5A       end_of_initialization 2C80                    strlen@a 0503  
                  strlen@s 0501          ESCRIBE_MENSAJE2@i 050A                  _TRISFbits 04CB  
            _UART1_NewLine 2C32   __end_of_ESCRIBE_MENSAJE2 2ACA               _CURSOR_ONOFF 2BD6  
       CURSOR_ONOFF@estado 0504             __end_of_strlen 2B3E              ??_CURSOR_HOME 0504  
      start_initialization 2C76                ?_pantallazo 0501          _UART1_String_Send 2A36  
       ?_UART1_String_Send 0505             ?_UART1_NewLine 0501          ENVIA_LCD_CMD@dato 0502  
      ??_UART1_String_Send 0507       UART1_String_Send@tam 0509                   ??_strlen 0503  
__end_of_UART1_String_Send 2A80                __pbssCOMRAM 050F        __end_of_CURSOR_HOME 2CAE  
            ?_ADC_GetValue 0501           ___lwdiv@dividend 0506                   ?___lwdiv 0506  
                 ?___lwmod 0501                  _configuro 2934                __smallconst 2600  
                _convierte 2734            convierte@numero 050D           ___lwdiv@quotient 050A  
          ??_UART1_NewLine 0501                _U1ERRIRbits 02B2                   _LCD_INIT 2BA6  
           ??_ADC_GetValue 0503                   _LEER_LCD 285E                   _LATDbits 04C1  
           POS_CURSOR@fila 0505                 ?_configuro 0501                 _ADCON0bits 03F3  
   ESCRIBE_MENSAJE2@cadena 0505                 ?_convierte 050D                _CURSOR_HOME 2CA6  
        ??_UART1_Data_Send 0501                   __Hrparam 0000          ?_ESCRIBE_MENSAJE2 0505  
                 __Lrparam 0000               __Lsmallconst 2600         ??_ESCRIBE_MENSAJE2 0507  
               _ANSELFbits 0428               ??_pantallazo 050B            ___lwdiv@divisor 0508  
          ___lwdiv@counter 050C                   __ptext10 28D0                   __ptext11 27EA  
                 __ptext20 2C5A                   __ptext12 2934                   __ptext21 2C06  
                 __ptext13 2BA6                   __ptext14 29E4                   __ptext15 2BD6  
                 __ptext16 2CA6                   __ptext17 2CAE                   __ptext18 2B72  
                 __ptext19 285E                 _BORRAR_LCD 2CAE    UART1_String_Send@cadena 0505  
               _LCD_CONFIG 29E4                 _ENVIA_CHAR 2B3E                   isa$xinst 0000  
       __end_of_pantallazo 29E4              _ENVIA_LCD_CMD 2B72                ??_configuro 0506  
     __end_of_ADC_GetValue 2C32                ??_convierte 050F         UART1_String_Send@i 050A  
         ___lwmod@dividend 0501             ?_ENVIA_LCD_CMD 0501            ___lwmod@divisor 0503  
          ___lwmod@counter 0505        ESCRIBE_MENSAJE2@tam 0509                ?_BORRAR_LCD 0501  
            ?_ENVIA_NIBBLE 0501                 _POS_CURSOR 2ACA                ?_LCD_CONFIG 0501  
              ?_ENVIA_CHAR 0501          POS_CURSOR@columna 0504  
