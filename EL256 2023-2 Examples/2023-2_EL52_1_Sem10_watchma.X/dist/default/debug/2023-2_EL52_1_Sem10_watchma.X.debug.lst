

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Thu Oct 19 15:54:13 2023

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og9 
     1                           	processor	18F57Q43
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    28                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    29                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    30   000000                     
    31                           ; Generated 18/07/2023 GMT
    32                           ; 
    33                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    34                           ; All rights reserved.
    35                           ; 
    36                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    37                           ; 
    38                           ; Redistribution and use in source and binary forms, with or without modification, are
    39                           ; permitted provided that the following conditions are met:
    40                           ; 
    41                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    42                           ;        conditions and the following disclaimer.
    43                           ; 
    44                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    45                           ;        of conditions and the following disclaimer in the documentation and/or other
    46                           ;        materials provided with the distribution. Publication is not required when
    47                           ;        this file is used in an embedded application.
    48                           ; 
    49                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    50                           ;        software without specific prior written permission.
    51                           ; 
    52                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    53                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    54                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    55                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    56                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    57                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    58                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    59                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    60                           ; 
    61                           ; 
    62                           ; Code-generator required, PIC18F57Q43 Definitions
    63                           ; 
    64                           ; SFR Addresses
    65   000000                     
    66                           	psect	idataCOMRAM
    67   00286A                     __pidataCOMRAM:
    68                           	callstack 0
    69                           
    70                           ;initializer for _minutos
    71   00286A  30                 	db	48
    72                           
    73                           ;initializer for _horas
    74   00286B  0F                 	db	15
    75   000000                     _LATD	set	1217
    76   000000                     _OSCCON1	set	173
    77   000000                     _OSCFRQ	set	177
    78   000000                     _OSCEN	set	179
    79   000000                     _ANSELD	set	1048
    80   000000                     _TRISD	set	1225
    81   000000                     _PORTD	set	1233
    82   000000                     _LATDbits	set	1217
    83                           
    84                           	psect	smallconst
    85   002500                     __psmallconst:
    86                           	callstack 0
    87   002500  00                 	db	0
    88   002501                     STR_1:
    89   002501  52                 	db	82	;'R'
    90   002502  65                 	db	101	;'e'
    91   002503  6C                 	db	108	;'l'
    92   002504  6F                 	db	111	;'o'
    93   002505  6A                 	db	106	;'j'
    94   002506  61                 	db	97	;'a'
    95   002507  7A                 	db	122	;'z'
    96   002508  6F                 	db	111	;'o'
    97   002509  20                 	db	32
    98   00250A  55                 	db	85	;'U'
    99   00250B  50                 	db	80	;'P'
   100   00250C  43                 	db	67	;'C'
   101   00250D  00                 	db	0
   102   00250E  00                 	db	0	; dummy byte at the end
   103   000000                     
   104                           ; #config settings
   105                           
   106                           	psect	cinit
   107   00270E                     __pcinit:
   108                           	callstack 0
   109   00270E                     start_initialization:
   110                           	callstack 0
   111   00270E                     __initialization:
   112                           	callstack 0
   113                           
   114                           ; Initialize objects allocated to COMRAM (2 bytes)
   115                           ; load TBLPTR registers with __pidataCOMRAM
   116   00270E  0E6A               	movlw	low __pidataCOMRAM
   117   002710  6EF6               	movwf	tblptrl,c
   118   002712  0E28               	movlw	high __pidataCOMRAM
   119   002714  6EF7               	movwf	tblptrh,c
   120   002716  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   121   002718  6EF8               	movwf	tblptru,c
   122   00271A  0009               	tblrd		*+	;fetch initializer
   123   00271C  C4F5 F50F          	movff	tablat,__pdataCOMRAM
   124   002720  0009               	tblrd		*+	;fetch initializer
   125   002722  C4F5 F510          	movff	tablat,__pdataCOMRAM+1
   126                           
   127                           ; Clear objects allocated to COMRAM (5 bytes)
   128   002726  6A0E               	clrf	(__pbssCOMRAM+4)& (0+255),c
   129   002728  6A0D               	clrf	(__pbssCOMRAM+3)& (0+255),c
   130   00272A  6A0C               	clrf	(__pbssCOMRAM+2)& (0+255),c
   131   00272C  6A0B               	clrf	(__pbssCOMRAM+1)& (0+255),c
   132   00272E  6A0A               	clrf	__pbssCOMRAM& (0+255),c
   133   002730                     end_of_initialization:
   134                           	callstack 0
   135   002730                     __end_of__initialization:
   136                           	callstack 0
   137   002730  0E00               	movlw	low (__Lsmallconst shr (0+16))
   138   002732  6EF8               	movwf	tblptru,c
   139   002734  0E25               	movlw	high __Lsmallconst
   140   002736  6EF7               	movwf	tblptrh,c
   141   002738  0100               	movlb	0
   142   00273A  EF88  F012         	goto	_main	;jump to C main() function
   143                           
   144                           	psect	bssCOMRAM
   145   00050A                     __pbssCOMRAM:
   146                           	callstack 0
   147   00050A                     _unidad:
   148                           	callstack 0
   149   00050A                     	ds	1
   150   00050B                     _decena:
   151                           	callstack 0
   152   00050B                     	ds	1
   153   00050C                     _centena:
   154                           	callstack 0
   155   00050C                     	ds	1
   156   00050D                     _centesimas:
   157                           	callstack 0
   158   00050D                     	ds	1
   159   00050E                     _segundos:
   160                           	callstack 0
   161   00050E                     	ds	1
   162                           
   163                           	psect	dataCOMRAM
   164   00050F                     __pdataCOMRAM:
   165                           	callstack 0
   166   00050F                     _minutos:
   167                           	callstack 0
   168   00050F                     	ds	1
   169   000510                     _horas:
   170                           	callstack 0
   171   000510                     	ds	1
   172                           
   173                           	psect	cstackCOMRAM
   174   000501                     __pcstackCOMRAM:
   175                           	callstack 0
   176   000501                     ENVIA_NIBBLE@dato:
   177                           	callstack 0
   178   000501                     LEER_LCD@aux:
   179                           	callstack 0
   180   000501                     ___lbmod@divisor:
   181                           	callstack 0
   182                           
   183                           ; 1 bytes @ 0x0
   184   000501                     	ds	1
   185   000502                     ENVIA_CHAR@dato:
   186                           	callstack 0
   187   000502                     ENVIA_LCD_CMD@dato:
   188                           	callstack 0
   189   000502                     ___lbmod@dividend:
   190                           	callstack 0
   191                           
   192                           ; 1 bytes @ 0x1
   193   000502                     	ds	1
   194   000503                     ENVIA_CHAR@aux:
   195                           	callstack 0
   196   000503                     ENVIA_LCD_CMD@aux:
   197                           	callstack 0
   198   000503                     ___lbmod@counter:
   199                           	callstack 0
   200                           
   201                           ; 1 bytes @ 0x2
   202   000503                     	ds	1
   203   000504                     ??_LCD_CONFIG:
   204   000504                     POS_CURSOR@columna:
   205                           	callstack 0
   206   000504                     CURSOR_ONOFF@estado:
   207                           	callstack 0
   208   000504                     ESCRIBE_MENSAJE@cadena:
   209                           	callstack 0
   210   000504                     ___lbmod@rem:
   211                           	callstack 0
   212                           
   213                           ; 1 bytes @ 0x3
   214   000504                     	ds	1
   215   000505                     ??_lcd_init:
   216   000505                     POS_CURSOR@fila:
   217                           	callstack 0
   218   000505                     ESCRIBE_MENSAJE@tam:
   219                           	callstack 0
   220   000505                     ___lbdiv@divisor:
   221                           	callstack 0
   222                           
   223                           ; 1 bytes @ 0x4
   224   000505                     	ds	1
   225   000506                     ??_ESCRIBE_MENSAJE:
   226   000506                     ___lbdiv@dividend:
   227                           	callstack 0
   228                           
   229                           ; 1 bytes @ 0x5
   230   000506                     	ds	1
   231   000507                     ESCRIBE_MENSAJE@i:
   232                           	callstack 0
   233   000507                     ___lbdiv@counter:
   234                           	callstack 0
   235                           
   236                           ; 1 bytes @ 0x6
   237   000507                     	ds	1
   238   000508                     ___lbdiv@quotient:
   239                           	callstack 0
   240                           
   241                           ; 1 bytes @ 0x7
   242   000508                     	ds	1
   243   000509                     convierte@numero:
   244                           	callstack 0
   245                           
   246                           ; 1 bytes @ 0x8
   247   000509                     	ds	1
   248   00050A                     
   249                           ; 1 bytes @ 0x9
   250 ;;
   251 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   252 ;;
   253 ;; *************** function _main *****************
   254 ;; Defined at:
   255 ;;		line 32 in file "maincode01.c"
   256 ;; Parameters:    Size  Location     Type
   257 ;;		None
   258 ;; Auto vars:     Size  Location     Type
   259 ;;		None
   260 ;; Return value:  Size  Location     Type
   261 ;;                  1    wreg      void 
   262 ;; Registers used:
   263 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   264 ;; Tracked objects:
   265 ;;		On entry : 0/0
   266 ;;		On exit  : 0/0
   267 ;;		Unchanged: 0/0
   268 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   269 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   270 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   271 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   272 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   273 ;;Total ram usage:        0 bytes
   274 ;; Hardware stack levels required when called: 4
   275 ;; This function calls:
   276 ;;		_ENVIA_CHAR
   277 ;;		_ESCRIBE_MENSAJE
   278 ;;		_POS_CURSOR
   279 ;;		_configuro
   280 ;;		_convierte
   281 ;;		_lcd_init
   282 ;; This function is called by:
   283 ;;		Startup code after reset
   284 ;; This function uses a non-reentrant model
   285 ;;
   286                           
   287                           	psect	text0
   288   002510                     __ptext0:
   289                           	callstack 0
   290   002510                     _main:
   291                           	callstack 123
   292                           
   293                           ;maincode01.c: 33:     configuro();
   294                           
   295                           ;incstack = 0
   296   002510  EC25  F014         	call	_configuro	;wreg free
   297                           
   298                           ; BSR set to: 0
   299                           ;maincode01.c: 34:     lcd_init();
   300   002514  ECB7  F013         	call	_lcd_init	;wreg free
   301                           
   302                           ;maincode01.c: 35:     POS_CURSOR(1,2);
   303   002518  0E02               	movlw	2
   304   00251A  6E04               	movwf	POS_CURSOR@columna^(0+1280),c
   305   00251C  0E01               	movlw	1
   306   00251E  ECF7  F013         	call	_POS_CURSOR
   307                           
   308                           ;maincode01.c: 36:     ESCRIBE_MENSAJE("Relojazo UPC",12);
   309   002522  0E01               	movlw	low STR_1
   310   002524  6E04               	movwf	ESCRIBE_MENSAJE@cadena^(0+1280),c
   311   002526  0E0C               	movlw	12
   312   002528  6E05               	movwf	ESCRIBE_MENSAJE@tam^(0+1280),c
   313   00252A  ECE3  F013         	call	_ESCRIBE_MENSAJE	;wreg free
   314   00252E                     l1117:
   315                           
   316                           ;maincode01.c: 38:         POS_CURSOR(2,2);
   317   00252E  0E02               	movlw	2
   318   002530  6E04               	movwf	POS_CURSOR@columna^(0+1280),c
   319   002532  0E02               	movlw	2
   320   002534  ECF7  F013         	call	_POS_CURSOR
   321                           
   322                           ;maincode01.c: 39:         convierte(horas);
   323   002538  0E0F               	movlw	15
   324   00253A  EC9F  F013         	call	_convierte
   325                           
   326                           ;maincode01.c: 40:         ENVIA_CHAR(decena+0x30);
   327   00253E  500B               	movf	_decena^(0+1280),w,c
   328   002540  0F30               	addlw	48
   329   002542  EC6D  F013         	call	_ENVIA_CHAR
   330                           
   331                           ;maincode01.c: 41:         ENVIA_CHAR(unidad+0x30);
   332   002546  500A               	movf	_unidad^(0+1280),w,c
   333   002548  0F30               	addlw	48
   334   00254A  EC6D  F013         	call	_ENVIA_CHAR
   335                           
   336                           ;maincode01.c: 42:         ENVIA_CHAR(':');
   337   00254E  0E3A               	movlw	58
   338   002550  EC6D  F013         	call	_ENVIA_CHAR
   339                           
   340                           ;maincode01.c: 43:         convierte(minutos);
   341   002554  0E30               	movlw	48
   342   002556  EC9F  F013         	call	_convierte
   343                           
   344                           ;maincode01.c: 44:         ENVIA_CHAR(decena+0x30);
   345   00255A  500B               	movf	_decena^(0+1280),w,c
   346   00255C  0F30               	addlw	48
   347   00255E  EC6D  F013         	call	_ENVIA_CHAR
   348                           
   349                           ;maincode01.c: 45:         ENVIA_CHAR(unidad+0x30);
   350   002562  500A               	movf	_unidad^(0+1280),w,c
   351   002564  0F30               	addlw	48
   352   002566  EC6D  F013         	call	_ENVIA_CHAR
   353                           
   354                           ;maincode01.c: 46:         ENVIA_CHAR(':');
   355   00256A  0E3A               	movlw	58
   356   00256C  EC6D  F013         	call	_ENVIA_CHAR
   357                           
   358                           ;maincode01.c: 47:         convierte(segundos);
   359   002570  0E00               	movlw	0
   360   002572  EC9F  F013         	call	_convierte
   361                           
   362                           ;maincode01.c: 48:         ENVIA_CHAR(decena+0x30);
   363   002576  500B               	movf	_decena^(0+1280),w,c
   364   002578  0F30               	addlw	48
   365   00257A  EC6D  F013         	call	_ENVIA_CHAR
   366                           
   367                           ;maincode01.c: 49:         ENVIA_CHAR(unidad+0x30);
   368   00257E  500A               	movf	_unidad^(0+1280),w,c
   369   002580  0F30               	addlw	48
   370   002582  EC6D  F013         	call	_ENVIA_CHAR
   371                           
   372                           ;maincode01.c: 50:         ENVIA_CHAR(':');
   373   002586  0E3A               	movlw	58
   374   002588  EC6D  F013         	call	_ENVIA_CHAR
   375                           
   376                           ;maincode01.c: 51:         convierte(centesimas);
   377   00258C  0E00               	movlw	0
   378   00258E  EC9F  F013         	call	_convierte
   379                           
   380                           ;maincode01.c: 52:         ENVIA_CHAR(decena+0x30);
   381   002592  500B               	movf	_decena^(0+1280),w,c
   382   002594  0F30               	addlw	48
   383   002596  EC6D  F013         	call	_ENVIA_CHAR
   384                           
   385                           ;maincode01.c: 53:         ENVIA_CHAR(unidad+0x30);
   386   00259A  500A               	movf	_unidad^(0+1280),w,c
   387   00259C  0F30               	addlw	48
   388   00259E  EC6D  F013         	call	_ENVIA_CHAR
   389                           
   390                           ;maincode01.c: 54:         ENVIA_CHAR(':');
   391   0025A2  0E3A               	movlw	58
   392   0025A4  EC6D  F013         	call	_ENVIA_CHAR
   393   0025A8  D7C2               	goto	l1117
   394   0025AA                     __end_of_main:
   395                           	callstack 0
   396                           
   397 ;; *************** function _lcd_init *****************
   398 ;; Defined at:
   399 ;;		line 16 in file "maincode01.c"
   400 ;; Parameters:    Size  Location     Type
   401 ;;		None
   402 ;; Auto vars:     Size  Location     Type
   403 ;;		None
   404 ;; Return value:  Size  Location     Type
   405 ;;                  1    wreg      void 
   406 ;; Registers used:
   407 ;;		wreg, status,2, status,0, cstack
   408 ;; Tracked objects:
   409 ;;		On entry : 3F/0
   410 ;;		On exit  : 0/0
   411 ;;		Unchanged: 0/0
   412 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   413 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   414 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   415 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   416 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   417 ;;Total ram usage:        1 bytes
   418 ;; Hardware stack levels used: 1
   419 ;; Hardware stack levels required when called: 3
   420 ;; This function calls:
   421 ;;		_BORRAR_LCD
   422 ;;		_CURSOR_HOME
   423 ;;		_CURSOR_ONOFF
   424 ;;		_LCD_CONFIG
   425 ;; This function is called by:
   426 ;;		_main
   427 ;; This function uses a non-reentrant model
   428 ;;
   429                           
   430                           	psect	text1
   431   00276E                     __ptext1:
   432                           	callstack 0
   433   00276E                     _lcd_init:
   434                           	callstack 123
   435                           
   436                           ; BSR set to: 0
   437                           ;maincode01.c: 17:     TRISD = 0x00;
   438                           
   439                           ;incstack = 0
   440   00276E  0E00               	movlw	0
   441   002770  6EC9               	movwf	201,c	;volatile
   442                           
   443                           ;maincode01.c: 18:     ANSELD = 0x00;
   444   002772  0E00               	movlw	0
   445   002774  0104               	movlb	4	; () banked
   446   002776  6F18               	movwf	24,b	;volatile
   447                           
   448                           ; BSR set to: 4
   449                           ;maincode01.c: 19:     LCD_CONFIG();
   450   002778  EC06  F013         	call	_LCD_CONFIG	;wreg free
   451                           
   452                           ;maincode01.c: 20:     _delay((unsigned long)((23)*(32000000UL/4000.0)));
   453   00277C  0EEF               	movlw	239
   454   00277E  6E05               	movwf	??_lcd_init^(0+1280),c
   455   002780  0EF5               	movlw	245
   456   002782                     u187:
   457   002782  2EE8               	decfsz	wreg,f,c
   458   002784  D7FE               	bra	u187
   459   002786  2E05               	decfsz	??_lcd_init^(0+1280),f,c
   460   002788  D7FC               	bra	u187
   461   00278A  0000               	nop	
   462                           
   463                           ;maincode01.c: 21:     BORRAR_LCD();
   464   00278C  EC31  F014         	call	_BORRAR_LCD	;wreg free
   465                           
   466                           ;maincode01.c: 22:     CURSOR_HOME();
   467   002790  EC2D  F014         	call	_CURSOR_HOME	;wreg free
   468                           
   469                           ;maincode01.c: 23:     CURSOR_ONOFF(1);
   470   002794  0E01               	movlw	1
   471   002796  EC09  F014         	call	_CURSOR_ONOFF
   472   00279A  0012               	return		;funcret
   473   00279C                     __end_of_lcd_init:
   474                           	callstack 0
   475                           
   476 ;; *************** function _LCD_CONFIG *****************
   477 ;; Defined at:
   478 ;;		line 72 in file "LCD.c"
   479 ;; Parameters:    Size  Location     Type
   480 ;;		None
   481 ;; Auto vars:     Size  Location     Type
   482 ;;		None
   483 ;; Return value:  Size  Location     Type
   484 ;;                  1    wreg      void 
   485 ;; Registers used:
   486 ;;		wreg, status,2, status,0, cstack
   487 ;; Tracked objects:
   488 ;;		On entry : 3F/4
   489 ;;		On exit  : 0/0
   490 ;;		Unchanged: 0/0
   491 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   492 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   493 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   494 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   495 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   496 ;;Total ram usage:        1 bytes
   497 ;; Hardware stack levels used: 1
   498 ;; Hardware stack levels required when called: 2
   499 ;; This function calls:
   500 ;;		_ENVIA_LCD_CMD
   501 ;;		_ENVIA_NIBBLE
   502 ;; This function is called by:
   503 ;;		_lcd_init
   504 ;; This function uses a non-reentrant model
   505 ;;
   506                           
   507                           	psect	text2
   508   00260C                     __ptext2:
   509                           	callstack 0
   510   00260C                     _LCD_CONFIG:
   511                           	callstack 123
   512                           
   513                           ; BSR set to: 4
   514                           ;LCD.c: 74:  LATDbits.LATD0 = 0;
   515                           
   516                           ;incstack = 0
   517   00260C  90C1               	bcf	193,0,c	;volatile
   518                           
   519                           ;LCD.c: 75:  LATDbits.LATD1 = 0;
   520   00260E  92C1               	bcf	193,1,c	;volatile
   521                           
   522                           ; BSR set to: 4
   523                           ;LCD.c: 76:  ENVIA_NIBBLE(0x30);
   524   002610  0E30               	movlw	48
   525   002612  EC17  F014         	call	_ENVIA_NIBBLE
   526                           
   527                           ;LCD.c: 77:         _delay(24000);
   528   002616  0E20               	movlw	32
   529   002618  6E04               	movwf	??_LCD_CONFIG^(0+1280),c
   530   00261A  0E2A               	movlw	42
   531   00261C                     u197:
   532   00261C  2EE8               	decfsz	wreg,f,c
   533   00261E  D7FE               	bra	u197
   534   002620  2E04               	decfsz	??_LCD_CONFIG^(0+1280),f,c
   535   002622  D7FC               	bra	u197
   536                           
   537                           ;LCD.c: 78:         _delay(24000);
   538   002624  0E20               	movlw	32
   539   002626  6E04               	movwf	??_LCD_CONFIG^(0+1280),c
   540   002628  0E2A               	movlw	42
   541   00262A                     u207:
   542   00262A  2EE8               	decfsz	wreg,f,c
   543   00262C  D7FE               	bra	u207
   544   00262E  2E04               	decfsz	??_LCD_CONFIG^(0+1280),f,c
   545   002630  D7FC               	bra	u207
   546                           
   547                           ;LCD.c: 81:  ENVIA_NIBBLE(0x30);
   548   002632  0E30               	movlw	48
   549   002634  EC17  F014         	call	_ENVIA_NIBBLE
   550                           
   551                           ;LCD.c: 83:  _delay(1200);
   552   002638  0EF0               	movlw	240
   553   00263A                     u217:
   554   00263A  D000               	nop2	
   555   00263C  2EE8               	decfsz	wreg,f,c
   556   00263E  D7FD               	bra	u217
   557                           
   558                           ;LCD.c: 84:         ENVIA_NIBBLE(0x30);
   559   002640  0E30               	movlw	48
   560   002642  EC17  F014         	call	_ENVIA_NIBBLE
   561                           
   562                           ;LCD.c: 85:  ENVIA_NIBBLE(0x20);
   563   002646  0E20               	movlw	32
   564   002648  EC17  F014         	call	_ENVIA_NIBBLE
   565                           
   566                           ;LCD.c: 86:  ENVIA_LCD_CMD(0x01);
   567   00264C  0E01               	movlw	1
   568   00264E  EC53  F013         	call	_ENVIA_LCD_CMD
   569                           
   570                           ;LCD.c: 87:  ENVIA_LCD_CMD(0x28);
   571   002652  0E28               	movlw	40
   572   002654  EC53  F013         	call	_ENVIA_LCD_CMD
   573                           
   574                           ;LCD.c: 88:  ENVIA_LCD_CMD(0x0F);
   575   002658  0E0F               	movlw	15
   576   00265A  EC53  F013         	call	_ENVIA_LCD_CMD
   577                           
   578                           ;LCD.c: 89:  ENVIA_LCD_CMD(0x06);
   579   00265E  0E06               	movlw	6
   580   002660  EC53  F013         	call	_ENVIA_LCD_CMD
   581                           
   582                           ;LCD.c: 90:  ENVIA_LCD_CMD(0x01);
   583   002664  0E01               	movlw	1
   584   002666  EC53  F013         	call	_ENVIA_LCD_CMD
   585   00266A  0012               	return		;funcret
   586   00266C                     __end_of_LCD_CONFIG:
   587                           	callstack 0
   588                           
   589 ;; *************** function _CURSOR_ONOFF *****************
   590 ;; Defined at:
   591 ;;		line 35 in file "LCD.c"
   592 ;; Parameters:    Size  Location     Type
   593 ;;  estado          1    wreg     unsigned char 
   594 ;; Auto vars:     Size  Location     Type
   595 ;;  estado          1    3[COMRAM] unsigned char 
   596 ;; Return value:  Size  Location     Type
   597 ;;                  1    wreg      void 
   598 ;; Registers used:
   599 ;;		wreg, status,2, status,0, cstack
   600 ;; Tracked objects:
   601 ;;		On entry : 0/4
   602 ;;		On exit  : 0/0
   603 ;;		Unchanged: 0/0
   604 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   605 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   606 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   607 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   608 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   609 ;;Total ram usage:        1 bytes
   610 ;; Hardware stack levels used: 1
   611 ;; Hardware stack levels required when called: 2
   612 ;; This function calls:
   613 ;;		_ENVIA_LCD_CMD
   614 ;; This function is called by:
   615 ;;		_lcd_init
   616 ;; This function uses a non-reentrant model
   617 ;;
   618                           
   619                           	psect	text3
   620   002812                     __ptext3:
   621                           	callstack 0
   622   002812                     _CURSOR_ONOFF:
   623                           	callstack 123
   624                           
   625                           ;incstack = 0
   626                           ;CURSOR_ONOFF@estado stored from wreg
   627   002812  6E04               	movwf	CURSOR_ONOFF@estado^(0+1280),c
   628                           
   629                           ;LCD.c: 35: void CURSOR_ONOFF(unsigned char estado);LCD.c: 36: {;LCD.c: 37:  if(estado =
      +                          = 0) ENVIA_LCD_CMD(0x0E);
   630   002814  5004               	movf	CURSOR_ONOFF@estado^(0+1280),w,c
   631   002816  A4D8               	btfss	status,2,c
   632   002818  D003               	goto	l907
   633   00281A  0E0E               	movlw	14
   634   00281C  EC53  F013         	call	_ENVIA_LCD_CMD
   635   002820                     l907:
   636                           
   637                           ;LCD.c: 38:  if(estado == 1) ENVIA_LCD_CMD(0x0C);
   638   002820  0404               	decf	CURSOR_ONOFF@estado^(0+1280),w,c
   639   002822  A4D8               	btfss	status,2,c
   640   002824  0012               	return	
   641   002826  0E0C               	movlw	12
   642   002828  EC53  F013         	call	_ENVIA_LCD_CMD
   643   00282C  0012               	return		;funcret
   644   00282E                     __end_of_CURSOR_ONOFF:
   645                           	callstack 0
   646                           
   647 ;; *************** function _CURSOR_HOME *****************
   648 ;; Defined at:
   649 ;;		line 30 in file "LCD.c"
   650 ;; Parameters:    Size  Location     Type
   651 ;;		None
   652 ;; Auto vars:     Size  Location     Type
   653 ;;		None
   654 ;; Return value:  Size  Location     Type
   655 ;;                  1    wreg      void 
   656 ;; Registers used:
   657 ;;		wreg, status,2, status,0, cstack
   658 ;; Tracked objects:
   659 ;;		On entry : 0/4
   660 ;;		On exit  : 0/0
   661 ;;		Unchanged: 0/0
   662 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   663 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   664 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   665 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   666 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   667 ;;Total ram usage:        0 bytes
   668 ;; Hardware stack levels used: 1
   669 ;; Hardware stack levels required when called: 2
   670 ;; This function calls:
   671 ;;		_ENVIA_LCD_CMD
   672 ;; This function is called by:
   673 ;;		_lcd_init
   674 ;; This function uses a non-reentrant model
   675 ;;
   676                           
   677                           	psect	text4
   678   00285A                     __ptext4:
   679                           	callstack 0
   680   00285A                     _CURSOR_HOME:
   681                           	callstack 123
   682                           
   683                           ;LCD.c: 32:  ENVIA_LCD_CMD(0x02);
   684                           
   685                           ;incstack = 0
   686   00285A  0E02               	movlw	2
   687   00285C  EC53  F013         	call	_ENVIA_LCD_CMD
   688   002860  0012               	return		;funcret
   689   002862                     __end_of_CURSOR_HOME:
   690                           	callstack 0
   691                           
   692 ;; *************** function _BORRAR_LCD *****************
   693 ;; Defined at:
   694 ;;		line 67 in file "LCD.c"
   695 ;; Parameters:    Size  Location     Type
   696 ;;		None
   697 ;; Auto vars:     Size  Location     Type
   698 ;;		None
   699 ;; Return value:  Size  Location     Type
   700 ;;                  1    wreg      void 
   701 ;; Registers used:
   702 ;;		wreg, status,2, status,0, cstack
   703 ;; Tracked objects:
   704 ;;		On entry : 0/4
   705 ;;		On exit  : 0/0
   706 ;;		Unchanged: 0/0
   707 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   708 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   709 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   710 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   711 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   712 ;;Total ram usage:        0 bytes
   713 ;; Hardware stack levels used: 1
   714 ;; Hardware stack levels required when called: 2
   715 ;; This function calls:
   716 ;;		_ENVIA_LCD_CMD
   717 ;; This function is called by:
   718 ;;		_lcd_init
   719 ;; This function uses a non-reentrant model
   720 ;;
   721                           
   722                           	psect	text5
   723   002862                     __ptext5:
   724                           	callstack 0
   725   002862                     _BORRAR_LCD:
   726                           	callstack 123
   727                           
   728                           ;LCD.c: 69:  ENVIA_LCD_CMD(0x01);
   729                           
   730                           ;incstack = 0
   731   002862  0E01               	movlw	1
   732   002864  EC53  F013         	call	_ENVIA_LCD_CMD
   733   002868  0012               	return		;funcret
   734   00286A                     __end_of_BORRAR_LCD:
   735                           	callstack 0
   736                           
   737 ;; *************** function _convierte *****************
   738 ;; Defined at:
   739 ;;		line 26 in file "maincode01.c"
   740 ;; Parameters:    Size  Location     Type
   741 ;;  numero          1    wreg     unsigned char 
   742 ;; Auto vars:     Size  Location     Type
   743 ;;  numero          1    8[COMRAM] unsigned char 
   744 ;; Return value:  Size  Location     Type
   745 ;;                  1    wreg      void 
   746 ;; Registers used:
   747 ;;		wreg, status,2, status,0, cstack
   748 ;; Tracked objects:
   749 ;;		On entry : 0/0
   750 ;;		On exit  : 0/0
   751 ;;		Unchanged: 0/0
   752 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   753 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   754 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   755 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   756 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   757 ;;Total ram usage:        1 bytes
   758 ;; Hardware stack levels used: 1
   759 ;; Hardware stack levels required when called: 1
   760 ;; This function calls:
   761 ;;		___lbdiv
   762 ;;		___lbmod
   763 ;; This function is called by:
   764 ;;		_main
   765 ;; This function uses a non-reentrant model
   766 ;;
   767                           
   768                           	psect	text6
   769   00273E                     __ptext6:
   770                           	callstack 0
   771   00273E                     _convierte:
   772                           	callstack 125
   773                           
   774                           ;incstack = 0
   775                           ;convierte@numero stored from wreg
   776   00273E  6E09               	movwf	convierte@numero^(0+1280),c
   777                           
   778                           ;maincode01.c: 27:     centena = numero /100;
   779   002740  0E64               	movlw	100
   780   002742  6E05               	movwf	___lbdiv@divisor^(0+1280),c
   781   002744  5009               	movf	convierte@numero^(0+1280),w,c
   782   002746  EC36  F013         	call	___lbdiv
   783   00274A  6E0C               	movwf	_centena^(0+1280),c
   784                           
   785                           ;maincode01.c: 28:     decena = (numero % 100) / 10;
   786   00274C  0E0A               	movlw	10
   787   00274E  6E05               	movwf	___lbdiv@divisor^(0+1280),c
   788   002750  0E64               	movlw	100
   789   002752  6E01               	movwf	___lbmod@divisor^(0+1280),c
   790   002754  5009               	movf	convierte@numero^(0+1280),w,c
   791   002756  ECCE  F013         	call	___lbmod
   792   00275A  EC36  F013         	call	___lbdiv
   793   00275E  6E0B               	movwf	_decena^(0+1280),c
   794                           
   795                           ;maincode01.c: 29:     unidad = numero % 10;
   796   002760  0E0A               	movlw	10
   797   002762  6E01               	movwf	___lbmod@divisor^(0+1280),c
   798   002764  5009               	movf	convierte@numero^(0+1280),w,c
   799   002766  ECCE  F013         	call	___lbmod
   800   00276A  6E0A               	movwf	_unidad^(0+1280),c
   801   00276C  0012               	return		;funcret
   802   00276E                     __end_of_convierte:
   803                           	callstack 0
   804                           
   805 ;; *************** function ___lbmod *****************
   806 ;; Defined at:
   807 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\lbmod.c"
   808 ;; Parameters:    Size  Location     Type
   809 ;;  dividend        1    wreg     unsigned char 
   810 ;;  divisor         1    0[COMRAM] unsigned char 
   811 ;; Auto vars:     Size  Location     Type
   812 ;;  dividend        1    1[COMRAM] unsigned char 
   813 ;;  rem             1    3[COMRAM] unsigned char 
   814 ;;  counter         1    2[COMRAM] unsigned char 
   815 ;; Return value:  Size  Location     Type
   816 ;;                  1    wreg      unsigned char 
   817 ;; Registers used:
   818 ;;		wreg, status,2, status,0
   819 ;; Tracked objects:
   820 ;;		On entry : 0/0
   821 ;;		On exit  : 0/0
   822 ;;		Unchanged: 0/0
   823 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   824 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   825 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   826 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   827 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   828 ;;Total ram usage:        4 bytes
   829 ;; Hardware stack levels used: 1
   830 ;; This function calls:
   831 ;;		Nothing
   832 ;; This function is called by:
   833 ;;		_convierte
   834 ;; This function uses a non-reentrant model
   835 ;;
   836                           
   837                           	psect	text7
   838   00279C                     __ptext7:
   839                           	callstack 0
   840   00279C                     ___lbmod:
   841                           	callstack 125
   842                           
   843                           ;incstack = 0
   844                           ;___lbmod@dividend stored from wreg
   845   00279C  6E02               	movwf	___lbmod@dividend^(0+1280),c
   846   00279E  0E08               	movlw	8
   847   0027A0  6E03               	movwf	___lbmod@counter^(0+1280),c
   848   0027A2  0E00               	movlw	0
   849   0027A4  6E04               	movwf	___lbmod@rem^(0+1280),c
   850   0027A6                     l1077:
   851   0027A6  90D8               	bcf	status,0,c
   852   0027A8  3402               	rlcf	___lbmod@dividend^(0+1280),w,c
   853   0027AA  3404               	rlcf	___lbmod@rem^(0+1280),w,c
   854   0027AC  6E04               	movwf	___lbmod@rem^(0+1280),c
   855   0027AE  90D8               	bcf	status,0,c
   856   0027B0  3602               	rlcf	___lbmod@dividend^(0+1280),f,c
   857   0027B2  5001               	movf	___lbmod@divisor^(0+1280),w,c
   858   0027B4  5C04               	subwf	___lbmod@rem^(0+1280),w,c
   859   0027B6  A0D8               	btfss	status,0,c
   860   0027B8  D002               	goto	l1085
   861   0027BA  5001               	movf	___lbmod@divisor^(0+1280),w,c
   862   0027BC  5E04               	subwf	___lbmod@rem^(0+1280),f,c
   863   0027BE                     l1085:
   864   0027BE  2E03               	decfsz	___lbmod@counter^(0+1280),f,c
   865   0027C0  D7F2               	goto	l1077
   866   0027C2  5004               	movf	___lbmod@rem^(0+1280),w,c
   867   0027C4  0012               	return		;funcret
   868   0027C6                     __end_of___lbmod:
   869                           	callstack 0
   870                           
   871 ;; *************** function ___lbdiv *****************
   872 ;; Defined at:
   873 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\lbdiv.c"
   874 ;; Parameters:    Size  Location     Type
   875 ;;  dividend        1    wreg     unsigned char 
   876 ;;  divisor         1    4[COMRAM] unsigned char 
   877 ;; Auto vars:     Size  Location     Type
   878 ;;  dividend        1    5[COMRAM] unsigned char 
   879 ;;  quotient        1    7[COMRAM] unsigned char 
   880 ;;  counter         1    6[COMRAM] unsigned char 
   881 ;; Return value:  Size  Location     Type
   882 ;;                  1    wreg      unsigned char 
   883 ;; Registers used:
   884 ;;		wreg, status,2, status,0
   885 ;; Tracked objects:
   886 ;;		On entry : 0/0
   887 ;;		On exit  : 0/0
   888 ;;		Unchanged: 0/0
   889 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   890 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   891 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   892 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   893 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   894 ;;Total ram usage:        4 bytes
   895 ;; Hardware stack levels used: 1
   896 ;; This function calls:
   897 ;;		Nothing
   898 ;; This function is called by:
   899 ;;		_convierte
   900 ;; This function uses a non-reentrant model
   901 ;;
   902                           
   903                           	psect	text8
   904   00266C                     __ptext8:
   905                           	callstack 0
   906   00266C                     ___lbdiv:
   907                           	callstack 125
   908                           
   909                           ;incstack = 0
   910                           ;___lbdiv@dividend stored from wreg
   911   00266C  6E06               	movwf	___lbdiv@dividend^(0+1280),c
   912   00266E  0E00               	movlw	0
   913   002670  6E08               	movwf	___lbdiv@quotient^(0+1280),c
   914   002672  5005               	movf	___lbdiv@divisor^(0+1280),w,c
   915   002674  B4D8               	btfsc	status,2,c
   916   002676  D015               	goto	l1071
   917   002678  0E01               	movlw	1
   918   00267A  6E07               	movwf	___lbdiv@counter^(0+1280),c
   919   00267C  D003               	goto	l1059
   920   00267E                     l1055:
   921   00267E  90D8               	bcf	status,0,c
   922   002680  3605               	rlcf	___lbdiv@divisor^(0+1280),f,c
   923   002682  2A07               	incf	___lbdiv@counter^(0+1280),f,c
   924   002684                     l1059:
   925   002684  AE05               	btfss	___lbdiv@divisor^(0+1280),7,c
   926   002686  D7FB               	goto	l1055
   927   002688                     u120:
   928   002688  90D8               	bcf	status,0,c
   929   00268A  3608               	rlcf	___lbdiv@quotient^(0+1280),f,c
   930   00268C  5005               	movf	___lbdiv@divisor^(0+1280),w,c
   931   00268E  5C06               	subwf	___lbdiv@dividend^(0+1280),w,c
   932   002690  A0D8               	btfss	status,0,c
   933   002692  D003               	goto	l1067
   934   002694  5005               	movf	___lbdiv@divisor^(0+1280),w,c
   935   002696  5E06               	subwf	___lbdiv@dividend^(0+1280),f,c
   936   002698  8008               	bsf	___lbdiv@quotient^(0+1280),0,c
   937   00269A                     l1067:
   938   00269A  90D8               	bcf	status,0,c
   939   00269C  3205               	rrcf	___lbdiv@divisor^(0+1280),f,c
   940   00269E  2E07               	decfsz	___lbdiv@counter^(0+1280),f,c
   941   0026A0  D7F3               	goto	u120
   942   0026A2                     l1071:
   943   0026A2  5008               	movf	___lbdiv@quotient^(0+1280),w,c
   944   0026A4  0012               	return		;funcret
   945   0026A6                     __end_of___lbdiv:
   946                           	callstack 0
   947                           
   948 ;; *************** function _configuro *****************
   949 ;; Defined at:
   950 ;;		line 9 in file "maincode01.c"
   951 ;; Parameters:    Size  Location     Type
   952 ;;		None
   953 ;; Auto vars:     Size  Location     Type
   954 ;;		None
   955 ;; Return value:  Size  Location     Type
   956 ;;                  1    wreg      void 
   957 ;; Registers used:
   958 ;;		wreg, status,2
   959 ;; Tracked objects:
   960 ;;		On entry : 0/0
   961 ;;		On exit  : 3F/0
   962 ;;		Unchanged: 0/0
   963 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   964 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   965 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   966 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   967 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   968 ;;Total ram usage:        0 bytes
   969 ;; Hardware stack levels used: 1
   970 ;; This function calls:
   971 ;;		Nothing
   972 ;; This function is called by:
   973 ;;		_main
   974 ;; This function uses a non-reentrant model
   975 ;;
   976                           
   977                           	psect	text9
   978   00284A                     __ptext9:
   979                           	callstack 0
   980   00284A                     _configuro:
   981                           	callstack 126
   982                           
   983                           ;maincode01.c: 11:     OSCCON1 = 0x60;
   984                           
   985                           ;incstack = 0
   986   00284A  0E60               	movlw	96
   987   00284C  0100               	movlb	0	; () banked
   988   00284E  6FAD               	movwf	173,b	;volatile
   989                           
   990                           ;maincode01.c: 12:     OSCFRQ = 0x06;
   991   002850  0E06               	movlw	6
   992   002852  6FB1               	movwf	177,b	;volatile
   993                           
   994                           ;maincode01.c: 13:     OSCEN = 0x40;
   995   002854  0E40               	movlw	64
   996   002856  6FB3               	movwf	179,b	;volatile
   997                           
   998                           ; BSR set to: 0
   999   002858  0012               	return		;funcret
  1000   00285A                     __end_of_configuro:
  1001                           	callstack 0
  1002                           
  1003 ;; *************** function _POS_CURSOR *****************
  1004 ;; Defined at:
  1005 ;;		line 6 in file "LCD.c"
  1006 ;; Parameters:    Size  Location     Type
  1007 ;;  fila            1    wreg     unsigned char 
  1008 ;;  columna         1    3[COMRAM] unsigned char 
  1009 ;; Auto vars:     Size  Location     Type
  1010 ;;  fila            1    4[COMRAM] unsigned char 
  1011 ;; Return value:  Size  Location     Type
  1012 ;;                  1    wreg      void 
  1013 ;; Registers used:
  1014 ;;		wreg, status,2, status,0, cstack
  1015 ;; Tracked objects:
  1016 ;;		On entry : 0/0
  1017 ;;		On exit  : 0/0
  1018 ;;		Unchanged: 0/0
  1019 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1020 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1021 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1022 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1023 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1024 ;;Total ram usage:        2 bytes
  1025 ;; Hardware stack levels used: 1
  1026 ;; Hardware stack levels required when called: 2
  1027 ;; This function calls:
  1028 ;;		_ENVIA_LCD_CMD
  1029 ;; This function is called by:
  1030 ;;		_main
  1031 ;; This function uses a non-reentrant model
  1032 ;;
  1033                           
  1034                           	psect	text10
  1035   0027EE                     __ptext10:
  1036                           	callstack 0
  1037   0027EE                     _POS_CURSOR:
  1038                           	callstack 124
  1039                           
  1040                           ; BSR set to: 0
  1041                           ;incstack = 0
  1042                           ;POS_CURSOR@fila stored from wreg
  1043   0027EE  6E05               	movwf	POS_CURSOR@fila^(0+1280),c
  1044                           
  1045                           ;LCD.c: 6: void POS_CURSOR(unsigned char fila,unsigned char columna);LCD.c: 7: {;LCD.c: 
      +                          8:  if(fila == 1)
  1046   0027F0  0405               	decf	POS_CURSOR@fila^(0+1280),w,c
  1047   0027F2  A4D8               	btfss	status,2,c
  1048   0027F4  D005               	goto	l1097
  1049                           
  1050                           ;LCD.c: 9:  {;LCD.c: 10:   ENVIA_LCD_CMD(0x80+columna);
  1051   0027F6  5004               	movf	POS_CURSOR@columna^(0+1280),w,c
  1052   0027F8  0F80               	addlw	128
  1053   0027FA  EC53  F013         	call	_ENVIA_LCD_CMD
  1054                           
  1055                           ;LCD.c: 11:  }
  1056   0027FE  0012               	return	
  1057   002800                     l1097:
  1058   002800  0E02               	movlw	2
  1059   002802  1805               	xorwf	POS_CURSOR@fila^(0+1280),w,c
  1060   002804  A4D8               	btfss	status,2,c
  1061   002806  0012               	return	
  1062                           
  1063                           ;LCD.c: 13:  {;LCD.c: 14:   ENVIA_LCD_CMD(0xC0+columna);
  1064   002808  5004               	movf	POS_CURSOR@columna^(0+1280),w,c
  1065   00280A  0FC0               	addlw	192
  1066   00280C  EC53  F013         	call	_ENVIA_LCD_CMD
  1067   002810  0012               	return		;funcret
  1068   002812                     __end_of_POS_CURSOR:
  1069                           	callstack 0
  1070                           
  1071 ;; *************** function _ENVIA_LCD_CMD *****************
  1072 ;; Defined at:
  1073 ;;		line 104 in file "LCD.c"
  1074 ;; Parameters:    Size  Location     Type
  1075 ;;  dato            1    wreg     unsigned char 
  1076 ;; Auto vars:     Size  Location     Type
  1077 ;;  dato            1    1[COMRAM] unsigned char 
  1078 ;;  aux             1    2[COMRAM] unsigned char 
  1079 ;; Return value:  Size  Location     Type
  1080 ;;                  1    wreg      void 
  1081 ;; Registers used:
  1082 ;;		wreg, status,2, status,0, cstack
  1083 ;; Tracked objects:
  1084 ;;		On entry : 0/4
  1085 ;;		On exit  : 0/0
  1086 ;;		Unchanged: 0/0
  1087 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1088 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1089 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1090 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1091 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1092 ;;Total ram usage:        2 bytes
  1093 ;; Hardware stack levels used: 1
  1094 ;; Hardware stack levels required when called: 1
  1095 ;; This function calls:
  1096 ;;		_ENVIA_NIBBLE
  1097 ;;		_LEER_LCD
  1098 ;; This function is called by:
  1099 ;;		_POS_CURSOR
  1100 ;;		_CURSOR_HOME
  1101 ;;		_CURSOR_ONOFF
  1102 ;;		_BORRAR_LCD
  1103 ;;		_LCD_CONFIG
  1104 ;; This function uses a non-reentrant model
  1105 ;;
  1106                           
  1107                           	psect	text11
  1108   0026A6                     __ptext11:
  1109                           	callstack 0
  1110   0026A6                     _ENVIA_LCD_CMD:
  1111                           	callstack 123
  1112                           
  1113                           ;incstack = 0
  1114                           ;ENVIA_LCD_CMD@dato stored from wreg
  1115   0026A6  6E02               	movwf	ENVIA_LCD_CMD@dato^(0+1280),c
  1116                           
  1117                           ;LCD.c: 104: void ENVIA_LCD_CMD(unsigned char dato);LCD.c: 105: {;LCD.c: 106:  unsigned 
      +                          char aux;;LCD.c: 107:  LATDbits.LATD0 = 0;
  1118   0026A8  90C1               	bcf	193,0,c	;volatile
  1119                           
  1120                           ;LCD.c: 108:  LEER_LCD();
  1121   0026AA  ECD5  F012         	call	_LEER_LCD	;wreg free
  1122                           
  1123                           ;LCD.c: 109:  TRISD = 0b00000000;
  1124   0026AE  0E00               	movlw	0
  1125   0026B0  6EC9               	movwf	201,c	;volatile
  1126                           
  1127                           ;LCD.c: 111:         _delay(1200);
  1128   0026B2  0EF0               	movlw	240
  1129   0026B4                     u227:
  1130   0026B4  D000               	nop2	
  1131   0026B6  2EE8               	decfsz	wreg,f,c
  1132   0026B8  D7FD               	bra	u227
  1133                           
  1134                           ;LCD.c: 112:         LATDbits.LATD1 = 0;
  1135   0026BA  92C1               	bcf	193,1,c	;volatile
  1136                           
  1137                           ;LCD.c: 113:  LATDbits.LATD2 = 0;
  1138   0026BC  94C1               	bcf	193,2,c	;volatile
  1139                           
  1140                           ;LCD.c: 114:  LATDbits.LATD0 = 0;
  1141   0026BE  90C1               	bcf	193,0,c	;volatile
  1142                           
  1143                           ;LCD.c: 115:  aux = dato & 0xF0;
  1144   0026C0  5002               	movf	ENVIA_LCD_CMD@dato^(0+1280),w,c
  1145   0026C2  0BF0               	andlw	240
  1146   0026C4  6E03               	movwf	ENVIA_LCD_CMD@aux^(0+1280),c
  1147                           
  1148                           ;LCD.c: 116:  ENVIA_NIBBLE(aux);
  1149   0026C6  5003               	movf	ENVIA_LCD_CMD@aux^(0+1280),w,c
  1150   0026C8  EC17  F014         	call	_ENVIA_NIBBLE
  1151                           
  1152                           ;LCD.c: 117:  aux = dato<<4;
  1153   0026CC  3802               	swapf	ENVIA_LCD_CMD@dato^(0+1280),w,c
  1154   0026CE  0BF0               	andlw	240
  1155   0026D0  6E03               	movwf	ENVIA_LCD_CMD@aux^(0+1280),c
  1156                           
  1157                           ;LCD.c: 118:  ENVIA_NIBBLE(aux);
  1158   0026D2  5003               	movf	ENVIA_LCD_CMD@aux^(0+1280),w,c
  1159   0026D4  EC17  F014         	call	_ENVIA_NIBBLE
  1160   0026D8  0012               	return		;funcret
  1161   0026DA                     __end_of_ENVIA_LCD_CMD:
  1162                           	callstack 0
  1163                           
  1164 ;; *************** function _ESCRIBE_MENSAJE *****************
  1165 ;; Defined at:
  1166 ;;		line 41 in file "LCD.c"
  1167 ;; Parameters:    Size  Location     Type
  1168 ;;  cadena          1    3[COMRAM] PTR const unsigned char 
  1169 ;;		 -> STR_1(13), 
  1170 ;;  tam             1    4[COMRAM] unsigned char 
  1171 ;; Auto vars:     Size  Location     Type
  1172 ;;  i               1    6[COMRAM] unsigned char 
  1173 ;; Return value:  Size  Location     Type
  1174 ;;                  1    wreg      void 
  1175 ;; Registers used:
  1176 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1177 ;; Tracked objects:
  1178 ;;		On entry : 0/0
  1179 ;;		On exit  : 0/0
  1180 ;;		Unchanged: 0/0
  1181 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1182 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1183 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1184 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1185 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1186 ;;Total ram usage:        4 bytes
  1187 ;; Hardware stack levels used: 1
  1188 ;; Hardware stack levels required when called: 2
  1189 ;; This function calls:
  1190 ;;		_ENVIA_CHAR
  1191 ;; This function is called by:
  1192 ;;		_main
  1193 ;; This function uses a non-reentrant model
  1194 ;;
  1195                           
  1196                           	psect	text12
  1197   0027C6                     __ptext12:
  1198                           	callstack 0
  1199   0027C6                     _ESCRIBE_MENSAJE:
  1200                           	callstack 124
  1201                           
  1202                           ;LCD.c: 41: void ESCRIBE_MENSAJE(const char *cadena,unsigned char tam);LCD.c: 42: {;LCD.
      +                          c: 43:  unsigned char i = 0;
  1203                           
  1204                           ;incstack = 0
  1205   0027C6  0E00               	movlw	0
  1206   0027C8  6E07               	movwf	ESCRIBE_MENSAJE@i^(0+1280),c
  1207                           
  1208                           ;LCD.c: 44:  for(i = 0; i<tam; i++)
  1209   0027CA  0E00               	movlw	0
  1210   0027CC  6E07               	movwf	ESCRIBE_MENSAJE@i^(0+1280),c
  1211   0027CE  D00A               	goto	l1107
  1212   0027D0                     l1103:
  1213                           
  1214                           ;LCD.c: 45:  {;LCD.c: 46:   ENVIA_CHAR(cadena[i]);
  1215   0027D0  5004               	movf	ESCRIBE_MENSAJE@cadena^(0+1280),w,c
  1216   0027D2  2407               	addwf	ESCRIBE_MENSAJE@i^(0+1280),w,c
  1217   0027D4  6E06               	movwf	??_ESCRIBE_MENSAJE^(0+1280),c
  1218   0027D6  C506  F4F6         	movff	??_ESCRIBE_MENSAJE,tblptrl
  1219   0027DA                     	if	0	;There is only one active tblptr byte
  1220   0027DA                     	endif
  1221   0027DA                     	if	0	;tblptru may be non-zero
  1222   0027DA                     	endif
  1223   0027DA                     	if	0	;tblptru may be non-zero
  1224   0027DA                     	endif
  1225   0027DA  0008               	tblrd		*
  1226   0027DC  50F5               	movf	tablat,w,c
  1227   0027DE  EC6D  F013         	call	_ENVIA_CHAR
  1228                           
  1229                           ;LCD.c: 47:  }
  1230   0027E2  2A07               	incf	ESCRIBE_MENSAJE@i^(0+1280),f,c
  1231   0027E4                     l1107:
  1232   0027E4  5005               	movf	ESCRIBE_MENSAJE@tam^(0+1280),w,c
  1233   0027E6  5C07               	subwf	ESCRIBE_MENSAJE@i^(0+1280),w,c
  1234   0027E8  B0D8               	btfsc	status,0,c
  1235   0027EA  0012               	return	
  1236   0027EC  D7F1               	goto	l1103
  1237   0027EE                     __end_of_ESCRIBE_MENSAJE:
  1238                           	callstack 0
  1239                           
  1240 ;; *************** function _ENVIA_CHAR *****************
  1241 ;; Defined at:
  1242 ;;		line 50 in file "LCD.c"
  1243 ;; Parameters:    Size  Location     Type
  1244 ;;  dato            1    wreg     unsigned char 
  1245 ;; Auto vars:     Size  Location     Type
  1246 ;;  dato            1    1[COMRAM] unsigned char 
  1247 ;;  aux             1    2[COMRAM] unsigned char 
  1248 ;; Return value:  Size  Location     Type
  1249 ;;                  1    wreg      void 
  1250 ;; Registers used:
  1251 ;;		wreg, status,2, status,0, cstack
  1252 ;; Tracked objects:
  1253 ;;		On entry : 0/0
  1254 ;;		On exit  : 0/0
  1255 ;;		Unchanged: 0/0
  1256 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1257 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1258 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1259 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1260 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1261 ;;Total ram usage:        2 bytes
  1262 ;; Hardware stack levels used: 1
  1263 ;; Hardware stack levels required when called: 1
  1264 ;; This function calls:
  1265 ;;		_ENVIA_NIBBLE
  1266 ;;		_LEER_LCD
  1267 ;; This function is called by:
  1268 ;;		_main
  1269 ;;		_ESCRIBE_MENSAJE
  1270 ;; This function uses a non-reentrant model
  1271 ;;
  1272                           
  1273                           	psect	text13
  1274   0026DA                     __ptext13:
  1275                           	callstack 0
  1276   0026DA                     _ENVIA_CHAR:
  1277                           	callstack 124
  1278                           
  1279                           ;incstack = 0
  1280                           ;ENVIA_CHAR@dato stored from wreg
  1281   0026DA  6E02               	movwf	ENVIA_CHAR@dato^(0+1280),c
  1282                           
  1283                           ;LCD.c: 50: void ENVIA_CHAR(unsigned char dato);LCD.c: 51: {;LCD.c: 52:  unsigned char a
      +                          ux;;LCD.c: 53:  LATDbits.LATD0 = 1;
  1284   0026DC  80C1               	bsf	193,0,c	;volatile
  1285                           
  1286                           ;LCD.c: 54:  LEER_LCD();
  1287   0026DE  ECD5  F012         	call	_LEER_LCD	;wreg free
  1288                           
  1289                           ;LCD.c: 55:  TRISD = 0x00;
  1290   0026E2  0E00               	movlw	0
  1291   0026E4  6EC9               	movwf	201,c	;volatile
  1292                           
  1293                           ;LCD.c: 56:         _delay(1200);
  1294   0026E6  0EF0               	movlw	240
  1295   0026E8                     u237:
  1296   0026E8  D000               	nop2	
  1297   0026EA  2EE8               	decfsz	wreg,f,c
  1298   0026EC  D7FD               	bra	u237
  1299                           
  1300                           ;LCD.c: 58:  LATDbits.LATD1 = 0;
  1301   0026EE  92C1               	bcf	193,1,c	;volatile
  1302                           
  1303                           ;LCD.c: 59:  LATDbits.LATD2 = 0;
  1304   0026F0  94C1               	bcf	193,2,c	;volatile
  1305                           
  1306                           ;LCD.c: 60:  LATDbits.LATD0 = 1;
  1307   0026F2  80C1               	bsf	193,0,c	;volatile
  1308                           
  1309                           ;LCD.c: 61:  aux = dato & 0xF0;
  1310   0026F4  5002               	movf	ENVIA_CHAR@dato^(0+1280),w,c
  1311   0026F6  0BF0               	andlw	240
  1312   0026F8  6E03               	movwf	ENVIA_CHAR@aux^(0+1280),c
  1313                           
  1314                           ;LCD.c: 62:  ENVIA_NIBBLE(aux);
  1315   0026FA  5003               	movf	ENVIA_CHAR@aux^(0+1280),w,c
  1316   0026FC  EC17  F014         	call	_ENVIA_NIBBLE
  1317                           
  1318                           ;LCD.c: 63:  aux = dato << 4;
  1319   002700  3802               	swapf	ENVIA_CHAR@dato^(0+1280),w,c
  1320   002702  0BF0               	andlw	240
  1321   002704  6E03               	movwf	ENVIA_CHAR@aux^(0+1280),c
  1322                           
  1323                           ;LCD.c: 64:  ENVIA_NIBBLE(aux);
  1324   002706  5003               	movf	ENVIA_CHAR@aux^(0+1280),w,c
  1325   002708  EC17  F014         	call	_ENVIA_NIBBLE
  1326   00270C  0012               	return		;funcret
  1327   00270E                     __end_of_ENVIA_CHAR:
  1328                           	callstack 0
  1329                           
  1330 ;; *************** function _LEER_LCD *****************
  1331 ;; Defined at:
  1332 ;;		line 121 in file "LCD.c"
  1333 ;; Parameters:    Size  Location     Type
  1334 ;;		None
  1335 ;; Auto vars:     Size  Location     Type
  1336 ;;  aux             1    0[COMRAM] unsigned char 
  1337 ;; Return value:  Size  Location     Type
  1338 ;;                  1    wreg      void 
  1339 ;; Registers used:
  1340 ;;		wreg, status,2, status,0
  1341 ;; Tracked objects:
  1342 ;;		On entry : 0/4
  1343 ;;		On exit  : 0/0
  1344 ;;		Unchanged: 0/0
  1345 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1346 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1347 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1348 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1349 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1350 ;;Total ram usage:        1 bytes
  1351 ;; Hardware stack levels used: 1
  1352 ;; This function calls:
  1353 ;;		Nothing
  1354 ;; This function is called by:
  1355 ;;		_ENVIA_CHAR
  1356 ;;		_ENVIA_LCD_CMD
  1357 ;; This function uses a non-reentrant model
  1358 ;;
  1359                           
  1360                           	psect	text14
  1361   0025AA                     __ptext14:
  1362                           	callstack 0
  1363   0025AA                     _LEER_LCD:
  1364                           	callstack 123
  1365                           
  1366                           ;LCD.c: 123:  unsigned char aux;;LCD.c: 124:  TRISD = 0xF8;
  1367                           
  1368                           ;incstack = 0
  1369   0025AA  0EF8               	movlw	248
  1370   0025AC  6EC9               	movwf	201,c	;volatile
  1371                           
  1372                           ;LCD.c: 125:  LATDbits.LATD0 = 0;
  1373   0025AE  90C1               	bcf	193,0,c	;volatile
  1374                           
  1375                           ;LCD.c: 126:  LATDbits.LATD1 = 1;
  1376   0025B0  82C1               	bsf	193,1,c	;volatile
  1377                           
  1378                           ;LCD.c: 127:  LATDbits.LATD2 = 1;
  1379   0025B2  84C1               	bsf	193,2,c	;volatile
  1380                           
  1381                           ;LCD.c: 128:         _delay(1200);
  1382   0025B4  0EF0               	movlw	240
  1383   0025B6                     u247:
  1384   0025B6  D000               	nop2	
  1385   0025B8  2EE8               	decfsz	wreg,f,c
  1386   0025BA  D7FD               	bra	u247
  1387                           
  1388                           ;LCD.c: 130:  aux = PORTD;
  1389   0025BC  C4D1 F501          	movff	1233,LEER_LCD@aux	;volatile
  1390                           
  1391                           ;LCD.c: 131:  LATDbits.LATD2 = 0;
  1392   0025C0  94C1               	bcf	193,2,c	;volatile
  1393                           
  1394                           ;LCD.c: 132:         _delay(1200);
  1395   0025C2  0EF0               	movlw	240
  1396   0025C4                     u257:
  1397   0025C4  D000               	nop2	
  1398   0025C6  2EE8               	decfsz	wreg,f,c
  1399   0025C8  D7FD               	bra	u257
  1400                           
  1401                           ;LCD.c: 134:  LATDbits.LATD2 = 1;
  1402   0025CA  84C1               	bsf	193,2,c	;volatile
  1403                           
  1404                           ;LCD.c: 135:         _delay(1200);
  1405   0025CC  0EF0               	movlw	240
  1406   0025CE                     u267:
  1407   0025CE  D000               	nop2	
  1408   0025D0  2EE8               	decfsz	wreg,f,c
  1409   0025D2  D7FD               	bra	u267
  1410   0025D4                     l827:
  1411                           
  1412                           ;LCD.c: 137:  LATDbits.LATD2 = 0;
  1413   0025D4  94C1               	bcf	193,2,c	;volatile
  1414                           
  1415                           ;LCD.c: 138:  aux = aux & 0x80;
  1416   0025D6  5001               	movf	LEER_LCD@aux^(0+1280),w,c
  1417   0025D8  0B80               	andlw	128
  1418   0025DA  6E01               	movwf	LEER_LCD@aux^(0+1280),c
  1419                           
  1420                           ;LCD.c: 139:  while(aux == 0x80)
  1421   0025DC  D012               	goto	l843
  1422   0025DE                     l124:
  1423                           
  1424                           ;LCD.c: 140:         {;LCD.c: 141:             LATDbits.LATD2 = 1;
  1425   0025DE  84C1               	bsf	193,2,c	;volatile
  1426                           
  1427                           ;LCD.c: 142:             _delay(1200);
  1428   0025E0  0EF0               	movlw	240
  1429   0025E2                     u277:
  1430   0025E2  D000               	nop2	
  1431   0025E4  2EE8               	decfsz	wreg,f,c
  1432   0025E6  D7FD               	bra	u277
  1433                           
  1434                           ;LCD.c: 143:             aux = PORTD;
  1435   0025E8  C4D1 F501          	movff	1233,LEER_LCD@aux	;volatile
  1436                           
  1437                           ;LCD.c: 144:             LATDbits.LATD2 = 0;
  1438   0025EC  94C1               	bcf	193,2,c	;volatile
  1439                           
  1440                           ;LCD.c: 145:             _delay(1200);
  1441   0025EE  0EF0               	movlw	240
  1442   0025F0                     u287:
  1443   0025F0  D000               	nop2	
  1444   0025F2  2EE8               	decfsz	wreg,f,c
  1445   0025F4  D7FD               	bra	u287
  1446                           
  1447                           ;LCD.c: 146:             LATDbits.LATD2 = 1;
  1448   0025F6  84C1               	bsf	193,2,c	;volatile
  1449                           
  1450                           ;LCD.c: 147:             _delay(1200);
  1451   0025F8  0EF0               	movlw	240
  1452   0025FA                     u297:
  1453   0025FA  D000               	nop2	
  1454   0025FC  2EE8               	decfsz	wreg,f,c
  1455   0025FE  D7FD               	bra	u297
  1456   002600  D7E9               	goto	l827
  1457   002602                     l843:
  1458                           
  1459                           ;LCD.c: 139:  while(aux == 0x80)
  1460   002602  0E80               	movlw	128
  1461   002604  1801               	xorwf	LEER_LCD@aux^(0+1280),w,c
  1462   002606  A4D8               	btfss	status,2,c
  1463   002608  0012               	return	
  1464   00260A  D7E9               	goto	l124
  1465   00260C                     __end_of_LEER_LCD:
  1466                           	callstack 0
  1467                           
  1468 ;; *************** function _ENVIA_NIBBLE *****************
  1469 ;; Defined at:
  1470 ;;		line 93 in file "LCD.c"
  1471 ;; Parameters:    Size  Location     Type
  1472 ;;  dato            1    wreg     unsigned char 
  1473 ;; Auto vars:     Size  Location     Type
  1474 ;;  dato            1    0[COMRAM] unsigned char 
  1475 ;; Return value:  Size  Location     Type
  1476 ;;                  1    wreg      void 
  1477 ;; Registers used:
  1478 ;;		wreg, status,2, status,0
  1479 ;; Tracked objects:
  1480 ;;		On entry : 0/4
  1481 ;;		On exit  : 0/0
  1482 ;;		Unchanged: 0/0
  1483 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1484 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1485 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1486 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1487 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1488 ;;Total ram usage:        1 bytes
  1489 ;; Hardware stack levels used: 1
  1490 ;; This function calls:
  1491 ;;		Nothing
  1492 ;; This function is called by:
  1493 ;;		_ENVIA_CHAR
  1494 ;;		_LCD_CONFIG
  1495 ;;		_ENVIA_LCD_CMD
  1496 ;; This function uses a non-reentrant model
  1497 ;;
  1498                           
  1499                           	psect	text15
  1500   00282E                     __ptext15:
  1501                           	callstack 0
  1502   00282E                     _ENVIA_NIBBLE:
  1503                           	callstack 124
  1504                           
  1505                           ;incstack = 0
  1506                           ;ENVIA_NIBBLE@dato stored from wreg
  1507   00282E  6E01               	movwf	ENVIA_NIBBLE@dato^(0+1280),c
  1508                           
  1509                           ;LCD.c: 93: void ENVIA_NIBBLE(unsigned char dato);LCD.c: 94: {;LCD.c: 95:  LATD &= 0x0F;
  1510   002830  0E0F               	movlw	15
  1511   002832  16C1               	andwf	193,f,c	;volatile
  1512                           
  1513                           ;LCD.c: 96:  dato &= 0xF0;
  1514   002834  0EF0               	movlw	240
  1515   002836  1601               	andwf	ENVIA_NIBBLE@dato^(0+1280),f,c
  1516                           
  1517                           ;LCD.c: 97:  LATD|= dato;
  1518   002838  5001               	movf	ENVIA_NIBBLE@dato^(0+1280),w,c	;volatile
  1519   00283A  12C1               	iorwf	193,f,c	;volatile
  1520                           
  1521                           ;LCD.c: 98:  LATDbits.LATD2 = 1;
  1522   00283C  84C1               	bsf	193,2,c	;volatile
  1523                           
  1524                           ;LCD.c: 100:         _delay(1200);
  1525   00283E  0EF0               	movlw	240
  1526   002840                     u307:
  1527   002840  D000               	nop2	
  1528   002842  2EE8               	decfsz	wreg,f,c
  1529   002844  D7FD               	bra	u307
  1530                           
  1531                           ;LCD.c: 101:  LATDbits.LATD2 = 0;
  1532   002846  94C1               	bcf	193,2,c	;volatile
  1533   002848  0012               	return		;funcret
  1534   00284A                     __end_of_ENVIA_NIBBLE:
  1535                           	callstack 0
  1536                           
  1537                           	psect	rparam
  1538   000000                     
  1539                           	psect	config
  1540                           
  1541                           ;Config register CONFIG1 @ 0x300000
  1542                           ;	External Oscillator Selection
  1543                           ;	FEXTOSC = OFF, Oscillator not enabled
  1544                           ;	Reset Oscillator Selection
  1545                           ;	RSTOSC = EXTOSC, EXTOSC operating per FEXTOSC bits (device manufacturing default)
  1546   300000                     	org	3145728
  1547   300000  FC                 	db	252
  1548                           
  1549                           ;Config register CONFIG2 @ 0x300001
  1550                           ;	Clock out Enable bit
  1551                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
  1552                           ;	PRLOCKED One-Way Set Enable bit
  1553                           ;	PR1WAY = ON, PRLOCKED bit can be cleared and set only once
  1554                           ;	Clock Switch Enable bit
  1555                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
  1556                           ;	Fail-Safe Clock Monitor Enable bit
  1557                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
  1558   300001                     	org	3145729
  1559   300001  FF                 	db	255
  1560                           
  1561                           ;Config register CONFIG3 @ 0x300002
  1562                           ;	MCLR Enable bit
  1563                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
  1564                           ;	Power-up timer selection bits
  1565                           ;	PWRTS = PWRT_64, PWRT set at 64ms
  1566                           ;	Multi-vector enable bit
  1567                           ;	MVECEN = ON, Multi-vector enabled, Vector table used for interrupts
  1568                           ;	IVTLOCK bit One-way set enable bit
  1569                           ;	IVT1WAY = ON, IVTLOCKED bit can be cleared and set only once
  1570                           ;	Low Power BOR Enable bit
  1571                           ;	LPBOREN = OFF, Low-Power BOR disabled
  1572                           ;	Brown-out Reset Enable bits
  1573                           ;	BOREN = OFF, Brown-out Reset disabled
  1574   300002                     	org	3145730
  1575   300002  3D                 	db	61
  1576                           
  1577                           ;Config register CONFIG4 @ 0x300003
  1578                           ;	Brown-out Reset Voltage Selection bits
  1579                           ;	BORV = VBOR_1P9, Brown-out Reset Voltage (VBOR) set to 1.9V
  1580                           ;	ZCD Disable bit
  1581                           ;	ZCD = OFF, ZCD module is disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCD
      +                          CON
  1582                           ;	PPSLOCK bit One-Way Set Enable bit
  1583                           ;	PPS1WAY = ON, PPSLOCKED bit can be cleared and set only once; PPS registers remain loc
      +                          ked after one clear/set cycle
  1584                           ;	Stack Full/Underflow Reset Enable bit
  1585                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1586                           ;	Low Voltage Programming Enable bit
  1587                           ;	LVP = OFF, HV on MCLR/VPP must be used for programming
  1588                           ;	Extended Instruction Set Enable bit
  1589                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
  1590   300003                     	org	3145731
  1591   300003  DF                 	db	223
  1592                           
  1593                           ;Config register CONFIG5 @ 0x300004
  1594                           ;	WDT Period selection bits
  1595                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  1596                           ;	WDT operating mode
  1597                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
  1598   300004                     	org	3145732
  1599   300004  9F                 	db	159
  1600                           
  1601                           ;Config register CONFIG6 @ 0x300005
  1602                           ;	WDT Window Select bits
  1603                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
  1604                           ;	WDT input clock selector
  1605                           ;	WDTCCS = SC, Software Control
  1606   300005                     	org	3145733
  1607   300005  FF                 	db	255
  1608                           
  1609                           ;Config register CONFIG7 @ 0x300006
  1610                           ;	Boot Block Size selection bits
  1611                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
  1612                           ;	Boot Block enable bit
  1613                           ;	BBEN = OFF, Boot block disabled
  1614                           ;	Storage Area Flash enable bit
  1615                           ;	SAFEN = OFF, SAF disabled
  1616                           ;	Background Debugger
  1617                           ;	DEBUG = OFF, Background Debugger disabled
  1618   300006                     	org	3145734
  1619   300006  FF                 	db	255
  1620                           
  1621                           ;Config register CONFIG8 @ 0x300007
  1622                           ;	Boot Block Write Protection bit
  1623                           ;	WRTB = OFF, Boot Block not Write protected
  1624                           ;	Configuration Register Write Protection bit
  1625                           ;	WRTC = OFF, Configuration registers not Write protected
  1626                           ;	Data EEPROM Write Protection bit
  1627                           ;	WRTD = OFF, Data EEPROM not Write protected
  1628                           ;	SAF Write protection bit
  1629                           ;	WRTSAF = OFF, SAF not Write Protected
  1630                           ;	Application Block write protection bit
  1631                           ;	WRTAPP = OFF, Application Block not write protected
  1632   300007                     	org	3145735
  1633   300007  FF                 	db	255
  1634                           
  1635                           ;Config register CONFIG10 @ 0x300009
  1636                           ;	PFM and Data EEPROM Code Protection bit
  1637                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
  1638   300009                     	org	3145737
  1639   300009  FF                 	db	255
  1640                           tosu	equ	0x4FF
  1641                           tosh	equ	0x4FE
  1642                           tosl	equ	0x4FD
  1643                           stkptr	equ	0x4FC
  1644                           pclatu	equ	0x4FB
  1645                           pclath	equ	0x4FA
  1646                           pcl	equ	0x4F9
  1647                           tblptru	equ	0x4F8
  1648                           tblptrh	equ	0x4F7
  1649                           tblptrl	equ	0x4F6
  1650                           tablat	equ	0x4F5
  1651                           prodh	equ	0x4F4
  1652                           prodl	equ	0x4F3
  1653                           indf0	equ	0x4EF
  1654                           postinc0	equ	0x4EE
  1655                           postdec0	equ	0x4ED
  1656                           preinc0	equ	0x4EC
  1657                           plusw0	equ	0x4EB
  1658                           fsr0h	equ	0x4EA
  1659                           fsr0l	equ	0x4E9
  1660                           wreg	equ	0x4E8
  1661                           indf1	equ	0x4E7
  1662                           postinc1	equ	0x4E6
  1663                           postdec1	equ	0x4E5
  1664                           preinc1	equ	0x4E4
  1665                           plusw1	equ	0x4E3
  1666                           fsr1h	equ	0x4E2
  1667                           fsr1l	equ	0x4E1
  1668                           bsr	equ	0x4E0
  1669                           indf2	equ	0x4DF
  1670                           postinc2	equ	0x4DE
  1671                           postdec2	equ	0x4DD
  1672                           preinc2	equ	0x4DC
  1673                           plusw2	equ	0x4DB
  1674                           fsr2h	equ	0x4DA
  1675                           fsr2l	equ	0x4D9
  1676                           status	equ	0x4D8

Data Sizes:
    Strings     13
    Constant    0
    Data        2
    BSS         5
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      9      16
    BANK5           160      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0
    BANK32          256      0       0
    BANK33          256      0       0
    BANK34          256      0       0
    BANK35          256      0       0
    BANK36          256      0       0

Pointer List with Targets:

    ESCRIBE_MENSAJE@cadena	PTR const unsigned char  size(1) Largest target is 13
		 -> STR_1(CODE[13]), 


Critical Paths under _main in COMRAM

    _main->_convierte
    _lcd_init->_CURSOR_ONOFF
    _lcd_init->_LCD_CONFIG
    _LCD_CONFIG->_ENVIA_LCD_CMD
    _CURSOR_ONOFF->_ENVIA_LCD_CMD
    _CURSOR_HOME->_ENVIA_LCD_CMD
    _BORRAR_LCD->_ENVIA_LCD_CMD
    _convierte->___lbdiv
    ___lbdiv->___lbmod
    _POS_CURSOR->_ENVIA_LCD_CMD
    _ENVIA_LCD_CMD->_ENVIA_NIBBLE
    _ENVIA_LCD_CMD->_LEER_LCD
    _ESCRIBE_MENSAJE->_ENVIA_CHAR
    _ENVIA_CHAR->_ENVIA_NIBBLE
    _ENVIA_CHAR->_LEER_LCD

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _main in BANK32

    None.

Critical Paths under _main in BANK33

    None.

Critical Paths under _main in BANK34

    None.

Critical Paths under _main in BANK35

    None.

Critical Paths under _main in BANK36

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    2059
                         _ENVIA_CHAR
                    _ESCRIBE_MENSAJE
                         _POS_CURSOR
                          _configuro
                          _convierte
                           _lcd_init
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             1     1      0     525
                                              4 COMRAM     1     1      0
                         _BORRAR_LCD
                        _CURSOR_HOME
                       _CURSOR_ONOFF
                         _LCD_CONFIG
 ---------------------------------------------------------------------------------
 (2) _LCD_CONFIG                                           1     1      0     135
                                              3 COMRAM     1     1      0
                      _ENVIA_LCD_CMD
                       _ENVIA_NIBBLE
 ---------------------------------------------------------------------------------
 (2) _CURSOR_ONOFF                                         1     1      0     150
                                              3 COMRAM     1     1      0
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _CURSOR_HOME                                          0     0      0     120
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _BORRAR_LCD                                           0     0      0     120
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (1) _convierte                                            1     1      0     691
                                              8 COMRAM     1     1      0
                            ___lbdiv
                            ___lbmod
 ---------------------------------------------------------------------------------
 (2) ___lbmod                                              4     3      1     311
                                              0 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (2) ___lbdiv                                              4     3      1     314
                                              4 COMRAM     4     3      1
                            ___lbmod (ARG)
 ---------------------------------------------------------------------------------
 (1) _configuro                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _POS_CURSOR                                           2     1      1     360
                                              3 COMRAM     2     1      1
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (3) _ENVIA_LCD_CMD                                        2     2      0     120
                                              1 COMRAM     2     2      0
                       _ENVIA_NIBBLE
                           _LEER_LCD
 ---------------------------------------------------------------------------------
 (1) _ESCRIBE_MENSAJE                                      4     2      2     363
                                              3 COMRAM     4     2      2
                         _ENVIA_CHAR
 ---------------------------------------------------------------------------------
 (2) _ENVIA_CHAR                                           2     2      0     120
                                              1 COMRAM     2     2      0
                       _ENVIA_NIBBLE
                           _LEER_LCD
 ---------------------------------------------------------------------------------
 (4) _LEER_LCD                                             1     1      0      45
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _ENVIA_NIBBLE                                         1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ENVIA_CHAR
     _ENVIA_NIBBLE
     _LEER_LCD
   _ESCRIBE_MENSAJE
     _ENVIA_CHAR
   _POS_CURSOR
     _ENVIA_LCD_CMD
       _ENVIA_NIBBLE
       _LEER_LCD
   _configuro
   _convierte
     ___lbdiv
       ___lbmod (ARG)
     ___lbmod
   _lcd_init
     _BORRAR_LCD
       _ENVIA_LCD_CMD
     _CURSOR_HOME
       _ENVIA_LCD_CMD
     _CURSOR_ONOFF
       _ENVIA_LCD_CMD
     _LCD_CONFIG
       _ENVIA_LCD_CMD
       _ENVIA_NIBBLE

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0       0      69        0.0%
EEDATA             400      0       0       0        0.0%
BITBIGSFRhhhll     364      0       0      74        0.0%
BITBIGSFR_1        100      0       0      68        0.0%
BITBANK36          100      0       0      66        0.0%
BANK36             100      0       0      67        0.0%
BITBANK35          100      0       0      64        0.0%
BANK35             100      0       0      65        0.0%
BITBANK34          100      0       0      62        0.0%
BANK34             100      0       0      63        0.0%
BITBANK33          100      0       0      60        0.0%
BANK33             100      0       0      61        0.0%
BITBANK32          100      0       0      58        0.0%
BANK32             100      0       0      59        0.0%
BITBANK31          100      0       0      56        0.0%
BANK31             100      0       0      57        0.0%
BITBANK30          100      0       0      54        0.0%
BANK30             100      0       0      55        0.0%
BITBANK29          100      0       0      52        0.0%
BANK29             100      0       0      53        0.0%
BITBANK28          100      0       0      50        0.0%
BANK28             100      0       0      51        0.0%
BITBANK27          100      0       0      48        0.0%
BANK27             100      0       0      49        0.0%
BITBANK26          100      0       0      46        0.0%
BANK26             100      0       0      47        0.0%
BITBANK25          100      0       0      44        0.0%
BANK25             100      0       0      45        0.0%
BITBANK24          100      0       0      42        0.0%
BANK24             100      0       0      43        0.0%
BITBANK23          100      0       0      40        0.0%
BANK23             100      0       0      41        0.0%
BITBANK22          100      0       0      38        0.0%
BANK22             100      0       0      39        0.0%
BITBANK21          100      0       0      36        0.0%
BANK21             100      0       0      37        0.0%
BITBANK20          100      0       0      34        0.0%
BANK20             100      0       0      35        0.0%
BITBANK19          100      0       0      32        0.0%
BANK19             100      0       0      33        0.0%
BITBANK18          100      0       0      30        0.0%
BANK18             100      0       0      31        0.0%
BITBANK17          100      0       0      28        0.0%
BANK17             100      0       0      29        0.0%
BITBANK16          100      0       0      26        0.0%
BANK16             100      0       0      27        0.0%
BITBANK15          100      0       0      24        0.0%
BANK15             100      0       0      25        0.0%
BITBANK14          100      0       0      22        0.0%
BANK14             100      0       0      23        0.0%
BITBANK13          100      0       0      20        0.0%
BANK13             100      0       0      21        0.0%
BITBANK12          100      0       0      18        0.0%
BANK12             100      0       0      19        0.0%
BITBANK11          100      0       0      16        0.0%
BANK11             100      0       0      17        0.0%
BITBANK10          100      0       0      14        0.0%
BANK10             100      0       0      15        0.0%
BITBANK9           100      0       0      12        0.0%
BANK9              100      0       0      13        0.0%
BITBANK8           100      0       0      10        0.0%
BANK8              100      0       0      11        0.0%
BITBANK7           100      0       0       8        0.0%
BANK7              100      0       0       9        0.0%
BITBANK6           100      0       0       6        0.0%
BANK6              100      0       0       7        0.0%
BITBIGSFRl          AD      0       0      77        0.0%
BITBIGSFRhhhlhl     A8      0       0      73        0.0%
BITBANK5            A0      0       0       4        0.0%
BANK5               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      9      10       1       16.8%
BITBIGSFRhhhhh      2E      0       0      70        0.0%
BITBIGSFRhhhlhh      7      0       0      72        0.0%
BITBIGSFRhhhhl       7      0       0      71        0.0%
BITBIGSFRhl          3      0       0      76        0.0%
BITBIGSFRhhl         1      0       0      75        0.0%
BIGSFR_1             0      0       0     200        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      10      78        0.0%
DATA                 0      0      10       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Thu Oct 19 15:54:13 2023

          ENVIA_CHAR@aux 0503                      l124 25DE                      l843 2602  
                    l827 25D4                      l907 2820                      u120 2688  
                    u207 262A                      u217 263A                      u307 2840  
                    u227 26B4                      u237 26E8                      u247 25B6  
                    u257 25C4                      u267 25CE                      u187 2782  
                    u277 25E2                      u197 261C                      u287 25F0  
                    u297 25FA              LEER_LCD@aux 0501                      wreg 04E8  
           ?_CURSOR_HOME 0501           ??_ENVIA_NIBBLE 0501           ENVIA_CHAR@dato 0502  
                   l1103 27D0                     l1107 27E4                     l1117 252E  
                   l1055 267E                     l1071 26A2                     l1067 269A  
                   l1059 2684                     l1085 27BE                     l1077 27A6  
                   l1097 2800                     STR_1 2501                     _LATD 04C1  
                   _main 2510                     start FFFC            ?_CURSOR_ONOFF 0501  
           ___param_bank 0000          ??_ENVIA_LCD_CMD 0502         __end_of_LEER_LCD 260C  
                  ?_main 0501          __end_of___lbdiv 26A6          __end_of___lbmod 27C6  
                  _OSCEN 00B3                    _PORTD 04D1                    _TRISD 04C9  
                  _horas 0510              ?_POS_CURSOR 0504                    tablat 04F5  
                  status 04D8          ___lbdiv@divisor 0505          ___lbdiv@counter 0507  
         ??_CURSOR_ONOFF 0504          __initialization 270E             __end_of_main 25AA  
        _ESCRIBE_MENSAJE 27C6                   ??_main 050A            __activetblptr 0001  
                 _ANSELD 0418                   _OSCFRQ 00B1         __end_of_lcd_init 279C  
                 _decena 050B                ??___lbdiv 0506     __end_of_ENVIA_NIBBLE 284A  
              ??___lbmod 0502                   isa$std 0001                   _unidad 050A  
           __pdataCOMRAM 050F             __mediumconst 0000                   tblptrh 04F7  
                 tblptrl 04F6                   tblptru 04F8             ??_BORRAR_LCD 0504  
       ___lbdiv@dividend 0506          ___lbmod@divisor 0501                ?_LEER_LCD 0501  
             __accesstop 0560  __end_of__initialization 2730          ___lbmod@counter 0503  
           ??_LCD_CONFIG 0504            ___rparam_used 0001             ??_ENVIA_CHAR 0502  
__end_of_ESCRIBE_MENSAJE 27EE           __pcstackCOMRAM 0501       __end_of_BORRAR_LCD 286A  
       ___lbdiv@quotient 0508         ENVIA_LCD_CMD@aux 0503     __end_of_CURSOR_ONOFF 282E  
     __end_of_LCD_CONFIG 266C       __end_of_ENVIA_CHAR 270E               ??_LEER_LCD 0501  
       ENVIA_NIBBLE@dato 0501               _centesimas 050D                  _OSCCON1 00AD  
           ??_POS_CURSOR 0505                ?_lcd_init 0501                  __Hparam 0000  
                __Lparam 0000         ?_ESCRIBE_MENSAJE 0504        __end_of_configuro 285A  
                ___lbdiv 266C                  ___lbmod 279C             __psmallconst 2500  
  __end_of_ENVIA_LCD_CMD 26DA        __end_of_convierte 276E                  __pcinit 270E  
     __end_of_POS_CURSOR 2812                  __ramtop 2500                  _centena 050C  
                __ptext0 2510                  __ptext1 276E                  __ptext2 260C  
                __ptext3 2812                  __ptext4 285A                  __ptext5 2862  
                __ptext6 273E                  __ptext7 279C                  __ptext8 266C  
                __ptext9 284A                  _minutos 050F               ??_lcd_init 0505  
           _ENVIA_NIBBLE 282E     end_of_initialization 2730         ___lbmod@dividend 0502  
            ___lbmod@rem 0504             _CURSOR_ONOFF 2812       CURSOR_ONOFF@estado 0504  
          __pidataCOMRAM 286A            ??_CURSOR_HOME 0504      start_initialization 270E  
      ENVIA_LCD_CMD@dato 0502              __pbssCOMRAM 050A      __end_of_CURSOR_HOME 2862  
               ?___lbdiv 0505                 ?___lbmod 0501                _configuro 284A  
            __smallconst 2500                _convierte 273E          convierte@numero 0509  
               _LEER_LCD 25AA                 _LATDbits 04C1         ESCRIBE_MENSAJE@i 0507  
         POS_CURSOR@fila 0505               ?_configuro 0501               ?_convierte 0501  
            _CURSOR_HOME 285A                 __Hrparam 0000                 __Lrparam 0000  
           __Lsmallconst 2500                 __ptext10 27EE                 __ptext11 26A6  
               __ptext12 27C6                 __ptext13 26DA                 __ptext14 25AA  
               __ptext15 282E               _BORRAR_LCD 2862                 _lcd_init 276E  
             _LCD_CONFIG 260C               _ENVIA_CHAR 26DA                 _segundos 050E  
               isa$xinst 0000            _ENVIA_LCD_CMD 26A6              ??_configuro 0501  
            ??_convierte 0509        ??_ESCRIBE_MENSAJE 0506    ESCRIBE_MENSAJE@cadena 0504  
         ?_ENVIA_LCD_CMD 0501              ?_BORRAR_LCD 0501            ?_ENVIA_NIBBLE 0501  
             _POS_CURSOR 27EE              ?_LCD_CONFIG 0501       ESCRIBE_MENSAJE@tam 0505  
            ?_ENVIA_CHAR 0501        POS_CURSOR@columna 0504  
