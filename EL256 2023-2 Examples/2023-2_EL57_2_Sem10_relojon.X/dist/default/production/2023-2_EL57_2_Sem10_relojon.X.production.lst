

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Wed Oct 18 23:41:24 2023

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F57Q43
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=4,class=CODE,delta=1
    28                           	psect	text17,global,reloc=4,class=CODE,delta=1
    29                           	psect	text18,global,reloc=4,class=CODE,delta=1
    30                           	psect	text19,global,reloc=4,class=CODE,delta=1
    31                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
    32                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    33                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    34                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    35   000000                     
    36                           ; Generated 18/07/2023 GMT
    37                           ; 
    38                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    39                           ; All rights reserved.
    40                           ; 
    41                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    42                           ; 
    43                           ; Redistribution and use in source and binary forms, with or without modification, are
    44                           ; permitted provided that the following conditions are met:
    45                           ; 
    46                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    47                           ;        conditions and the following disclaimer.
    48                           ; 
    49                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    50                           ;        of conditions and the following disclaimer in the documentation and/or other
    51                           ;        materials provided with the distribution. Publication is not required when
    52                           ;        this file is used in an embedded application.
    53                           ; 
    54                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    55                           ;        software without specific prior written permission.
    56                           ; 
    57                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    58                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    59                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    60                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    61                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    62                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    63                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    64                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    65                           ; 
    66                           ; 
    67                           ; Code-generator required, PIC18F57Q43 Definitions
    68                           ; 
    69                           ; SFR Addresses
    70   000000                     
    71                           	psect	idataCOMRAM
    72   002AE4                     __pidataCOMRAM:
    73                           	callstack 0
    74                           
    75                           ;initializer for _centesimas
    76   002AE4  0A                 	db	10
    77                           
    78                           ;initializer for _segundos
    79   002AE5  0A                 	db	10
    80                           
    81                           ;initializer for _minutos
    82   002AE6  0A                 	db	10
    83                           
    84                           ;initializer for _horas
    85   002AE7  0A                 	db	10
    86   000000                     _LATD	set	1217
    87   000000                     _OSCCON1	set	173
    88   000000                     _LATDbits	set	1217
    89   000000                     _TRISB	set	1223
    90   000000                     _TRISD	set	1225
    91   000000                     _PORTD	set	1233
    92   000000                     _INTCON0bits	set	1238
    93   000000                     _OSCFRQ	set	177
    94   000000                     _OSCEN	set	179
    95   000000                     _T1CON	set	798
    96   000000                     _T1CLK	set	801
    97   000000                     _ANSELB	set	1032
    98   000000                     _ANSELD	set	1048
    99   000000                     _PIE1bits	set	1183
   100   000000                     _WPUB	set	1033
   101   000000                     _CCPR1L	set	832
   102   000000                     _CCPR1H	set	833
   103   000000                     _CCP1CON	set	834
   104   000000                     _PIE3bits	set	1185
   105   000000                     _PIE6bits	set	1188
   106   000000                     _PIR1bits	set	1199
   107   000000                     _PIR3bits	set	1201
   108   000000                     _PIR6bits	set	1204
   109                           
   110                           	psect	smallconst
   111   002500                     __psmallconst:
   112                           	callstack 0
   113   002500  00                 	db	0
   114   002501                     STR_1:
   115   002501  52                 	db	82	;'R'
   116   002502  65                 	db	101	;'e'
   117   002503  6C                 	db	108	;'l'
   118   002504  6F                 	db	111	;'o'
   119   002505  6A                 	db	106	;'j'
   120   002506  6F                 	db	111	;'o'
   121   002507  6E                 	db	110	;'n'
   122   002508  20                 	db	32
   123   002509  55                 	db	85	;'U'
   124   00250A  50                 	db	80	;'P'
   125   00250B  43                 	db	67	;'C'
   126   00250C  00                 	db	0
   127   00250D  00                 	db	0	; dummy byte at the end
   128   000000                     
   129                           ; #config settings
   130                           
   131                           	psect	cinit
   132   002900                     __pcinit:
   133                           	callstack 0
   134   002900                     start_initialization:
   135                           	callstack 0
   136   002900                     __initialization:
   137                           	callstack 0
   138                           
   139                           ; Initialize objects allocated to COMRAM (4 bytes)
   140                           ; load TBLPTR registers with __pidataCOMRAM
   141   002900  0EE4               	movlw	low __pidataCOMRAM
   142   002902  6EF6               	movwf	tblptrl,c
   143   002904  0E2A               	movlw	high __pidataCOMRAM
   144   002906  6EF7               	movwf	tblptrh,c
   145   002908  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   146   00290A  6EF8               	movwf	tblptru,c
   147   00290C  EE01  F110         	lfsr	0,__pdataCOMRAM
   148   002910  EE10 F004          	lfsr	1,4
   149   002914                     copy_data0:
   150   002914  0009               	tblrd		*+
   151   002916  C4F5 F4EE          	movff	tablat,postinc0
   152   00291A  50E5               	movf	postdec1,w,c
   153   00291C  50E1               	movf	fsr1l,w,c
   154   00291E  E1FA               	bnz	copy_data0
   155                           
   156                           ; Clear objects allocated to COMRAM (3 bytes)
   157   002920  6A16               	clrf	(__pbssCOMRAM+2)& (0+255),c
   158   002922  6A15               	clrf	(__pbssCOMRAM+1)& (0+255),c
   159   002924  6A14               	clrf	__pbssCOMRAM& (0+255),c
   160                           
   161                           ;
   162                           ; Setup IVTBASE
   163                           ;
   164   002926  0104               	movlb	4
   165   002928  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
   166   00292A  6F5D               	movwf	93,b
   167   00292C  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
   168   00292E  6F5E               	movwf	94,b
   169   002930  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
   170   002932  6F5F               	movwf	95,b
   171   002934                     end_of_initialization:
   172                           	callstack 0
   173   002934                     __end_of__initialization:
   174                           	callstack 0
   175   002934  0E00               	movlw	low (__Lsmallconst shr (0+16))
   176   002936  6EF8               	movwf	tblptru,c
   177   002938  0E25               	movlw	high __Lsmallconst
   178   00293A  6EF7               	movwf	tblptrh,c
   179   00293C  0100               	movlb	0
   180   00293E  EF41  F013         	goto	_main	;jump to C main() function
   181                           
   182                           	psect	bssCOMRAM
   183   000514                     __pbssCOMRAM:
   184                           	callstack 0
   185   000514                     _unidad:
   186                           	callstack 0
   187   000514                     	ds	1
   188   000515                     _decena:
   189                           	callstack 0
   190   000515                     	ds	1
   191   000516                     _centena:
   192                           	callstack 0
   193   000516                     	ds	1
   194                           
   195                           	psect	dataCOMRAM
   196   000510                     __pdataCOMRAM:
   197                           	callstack 0
   198   000510                     _centesimas:
   199                           	callstack 0
   200   000510                     	ds	1
   201   000511                     _segundos:
   202                           	callstack 0
   203   000511                     	ds	1
   204   000512                     _minutos:
   205                           	callstack 0
   206   000512                     	ds	1
   207   000513                     _horas:
   208                           	callstack 0
   209   000513                     	ds	1
   210                           
   211                           	psect	cstackCOMRAM
   212   000501                     __pcstackCOMRAM:
   213                           	callstack 0
   214   000501                     ?___awmod:
   215                           	callstack 0
   216   000501                     ENVIA_NIBBLE@dato:
   217                           	callstack 0
   218   000501                     LEER_LCD@aux:
   219                           	callstack 0
   220   000501                     ___awmod@dividend:
   221                           	callstack 0
   222                           
   223                           ; 2 bytes @ 0x0
   224   000501                     	ds	1
   225   000502                     ENVIA_CHAR@dato:
   226                           	callstack 0
   227   000502                     ENVIA_LCD_CMD@dato:
   228                           	callstack 0
   229                           
   230                           ; 1 bytes @ 0x1
   231   000502                     	ds	1
   232   000503                     ENVIA_CHAR@aux:
   233                           	callstack 0
   234   000503                     ENVIA_LCD_CMD@aux:
   235                           	callstack 0
   236   000503                     ___awmod@divisor:
   237                           	callstack 0
   238                           
   239                           ; 2 bytes @ 0x2
   240   000503                     	ds	1
   241   000504                     ??_LCD_CONFIG:
   242   000504                     POS_CURSOR@columna:
   243                           	callstack 0
   244   000504                     CURSOR_ONOFF@estado:
   245                           	callstack 0
   246   000504                     ESCRIBE_MENSAJE@cadena:
   247                           	callstack 0
   248                           
   249                           ; 1 bytes @ 0x3
   250   000504                     	ds	1
   251   000505                     ??_lcd_init:
   252   000505                     POS_CURSOR@fila:
   253                           	callstack 0
   254   000505                     ESCRIBE_MENSAJE@tam:
   255                           	callstack 0
   256   000505                     ___awmod@counter:
   257                           	callstack 0
   258                           
   259                           ; 1 bytes @ 0x4
   260   000505                     	ds	1
   261   000506                     ??_ESCRIBE_MENSAJE:
   262   000506                     ___awmod@sign:
   263                           	callstack 0
   264                           
   265                           ; 1 bytes @ 0x5
   266   000506                     	ds	1
   267   000507                     ?___awdiv:
   268                           	callstack 0
   269   000507                     ESCRIBE_MENSAJE@i:
   270                           	callstack 0
   271   000507                     ___awdiv@dividend:
   272                           	callstack 0
   273                           
   274                           ; 2 bytes @ 0x6
   275   000507                     	ds	2
   276   000509                     ___awdiv@divisor:
   277                           	callstack 0
   278                           
   279                           ; 2 bytes @ 0x8
   280   000509                     	ds	2
   281   00050B                     ___awdiv@counter:
   282                           	callstack 0
   283                           
   284                           ; 1 bytes @ 0xA
   285   00050B                     	ds	1
   286   00050C                     ___awdiv@sign:
   287                           	callstack 0
   288                           
   289                           ; 1 bytes @ 0xB
   290   00050C                     	ds	1
   291   00050D                     ___awdiv@quotient:
   292                           	callstack 0
   293                           
   294                           ; 2 bytes @ 0xC
   295   00050D                     	ds	2
   296   00050F                     convierte@numero:
   297                           	callstack 0
   298                           
   299                           ; 1 bytes @ 0xE
   300   00050F                     	ds	1
   301   000510                     
   302                           ; 1 bytes @ 0xF
   303 ;;
   304 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   305 ;;
   306 ;; *************** function _main *****************
   307 ;; Defined at:
   308 ;;		line 53 in file "maincode02.c"
   309 ;; Parameters:    Size  Location     Type
   310 ;;		None
   311 ;; Auto vars:     Size  Location     Type
   312 ;;		None
   313 ;; Return value:  Size  Location     Type
   314 ;;                  1    wreg      void 
   315 ;; Registers used:
   316 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   317 ;; Tracked objects:
   318 ;;		On entry : 0/0
   319 ;;		On exit  : 0/0
   320 ;;		Unchanged: 0/0
   321 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   322 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   323 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   324 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   325 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   326 ;;Total ram usage:        0 bytes
   327 ;; Hardware stack levels required when called: 5
   328 ;; This function calls:
   329 ;;		_ENVIA_CHAR
   330 ;;		_ESCRIBE_MENSAJE
   331 ;;		_POS_CURSOR
   332 ;;		_configuro
   333 ;;		_convierte
   334 ;;		_lcd_init
   335 ;; This function is called by:
   336 ;;		Startup code after reset
   337 ;; This function uses a non-reentrant model
   338 ;;
   339                           
   340                           	psect	text0
   341   002682                     __ptext0:
   342                           	callstack 0
   343   002682                     _main:
   344                           	callstack 122
   345   002682                     
   346                           ;maincode02.c: 54:     configuro();
   347   002682  EC5E  F014         	call	_configuro	;wreg free
   348   002686                     
   349                           ;maincode02.c: 55:     lcd_init();
   350   002686  EC24  F015         	call	_lcd_init	;wreg free
   351   00268A                     
   352                           ;maincode02.c: 56:     POS_CURSOR(1,2);
   353   00268A  0E02               	movlw	2
   354   00268C  6E04               	movwf	POS_CURSOR@columna^(0+1280),c
   355   00268E  0E01               	movlw	1
   356   002690  ECA1  F014         	call	_POS_CURSOR
   357   002694                     
   358                           ;maincode02.c: 57:     ESCRIBE_MENSAJE("Relojon UPC",11);
   359   002694  0E01               	movlw	low STR_1
   360   002696  6E04               	movwf	ESCRIBE_MENSAJE@cadena^(0+1280),c
   361   002698  0E0B               	movlw	11
   362   00269A  6E05               	movwf	ESCRIBE_MENSAJE@tam^(0+1280),c
   363   00269C  ECD8  F014         	call	_ESCRIBE_MENSAJE	;wreg free
   364   0026A0                     l1347:
   365                           
   366                           ;maincode02.c: 59:         POS_CURSOR(2,2);
   367   0026A0  0E02               	movlw	2
   368   0026A2  6E04               	movwf	POS_CURSOR@columna^(0+1280),c
   369   0026A4  0E02               	movlw	2
   370   0026A6  ECA1  F014         	call	_POS_CURSOR
   371   0026AA                     
   372                           ;maincode02.c: 60:         convierte(horas);
   373   0026AA  5013               	movf	_horas^(0+1280),w,c
   374   0026AC  EC31  F014         	call	_convierte
   375   0026B0                     
   376                           ;maincode02.c: 61:         ENVIA_CHAR(decena+0x30);
   377   0026B0  5015               	movf	_decena^(0+1280),w,c
   378   0026B2  0F30               	addlw	48
   379   0026B4  ECF2  F014         	call	_ENVIA_CHAR
   380   0026B8                     
   381                           ;maincode02.c: 62:         ENVIA_CHAR(unidad+0x30);
   382   0026B8  5014               	movf	_unidad^(0+1280),w,c
   383   0026BA  0F30               	addlw	48
   384   0026BC  ECF2  F014         	call	_ENVIA_CHAR
   385   0026C0                     
   386                           ;maincode02.c: 63:         ENVIA_CHAR(':');
   387   0026C0  0E3A               	movlw	58
   388   0026C2  ECF2  F014         	call	_ENVIA_CHAR
   389   0026C6                     
   390                           ;maincode02.c: 64:         convierte(minutos);
   391   0026C6  5012               	movf	_minutos^(0+1280),w,c
   392   0026C8  EC31  F014         	call	_convierte
   393   0026CC                     
   394                           ;maincode02.c: 65:         ENVIA_CHAR(decena+0x30);
   395   0026CC  5015               	movf	_decena^(0+1280),w,c
   396   0026CE  0F30               	addlw	48
   397   0026D0  ECF2  F014         	call	_ENVIA_CHAR
   398   0026D4                     
   399                           ;maincode02.c: 66:         ENVIA_CHAR(unidad+0x30);
   400   0026D4  5014               	movf	_unidad^(0+1280),w,c
   401   0026D6  0F30               	addlw	48
   402   0026D8  ECF2  F014         	call	_ENVIA_CHAR
   403   0026DC                     
   404                           ;maincode02.c: 67:         ENVIA_CHAR(':');
   405   0026DC  0E3A               	movlw	58
   406   0026DE  ECF2  F014         	call	_ENVIA_CHAR
   407   0026E2                     
   408                           ;maincode02.c: 68:         convierte(segundos);
   409   0026E2  5011               	movf	_segundos^(0+1280),w,c
   410   0026E4  EC31  F014         	call	_convierte
   411   0026E8                     
   412                           ;maincode02.c: 69:         ENVIA_CHAR(decena+0x30);
   413   0026E8  5015               	movf	_decena^(0+1280),w,c
   414   0026EA  0F30               	addlw	48
   415   0026EC  ECF2  F014         	call	_ENVIA_CHAR
   416   0026F0                     
   417                           ;maincode02.c: 70:         ENVIA_CHAR(unidad+0x30);
   418   0026F0  5014               	movf	_unidad^(0+1280),w,c
   419   0026F2  0F30               	addlw	48
   420   0026F4  ECF2  F014         	call	_ENVIA_CHAR
   421   0026F8                     
   422                           ;maincode02.c: 71:         ENVIA_CHAR(':');
   423   0026F8  0E3A               	movlw	58
   424   0026FA  ECF2  F014         	call	_ENVIA_CHAR
   425   0026FE                     
   426                           ;maincode02.c: 72:         convierte(centesimas);
   427   0026FE  5010               	movf	_centesimas^(0+1280),w,c
   428   002700  EC31  F014         	call	_convierte
   429   002704                     
   430                           ;maincode02.c: 73:         ENVIA_CHAR(decena+0x30);
   431   002704  5015               	movf	_decena^(0+1280),w,c
   432   002706  0F30               	addlw	48
   433   002708  ECF2  F014         	call	_ENVIA_CHAR
   434   00270C                     
   435                           ;maincode02.c: 74:         ENVIA_CHAR(unidad+0x30);
   436   00270C  5014               	movf	_unidad^(0+1280),w,c
   437   00270E  0F30               	addlw	48
   438   002710  ECF2  F014         	call	_ENVIA_CHAR
   439   002714  EF50  F013         	goto	l1347
   440   002718  EF81  F000         	goto	start
   441   00271C                     __end_of_main:
   442                           	callstack 0
   443                           
   444 ;; *************** function _lcd_init *****************
   445 ;; Defined at:
   446 ;;		line 37 in file "maincode02.c"
   447 ;; Parameters:    Size  Location     Type
   448 ;;		None
   449 ;; Auto vars:     Size  Location     Type
   450 ;;		None
   451 ;; Return value:  Size  Location     Type
   452 ;;                  1    wreg      void 
   453 ;; Registers used:
   454 ;;		wreg, status,2, status,0, cstack
   455 ;; Tracked objects:
   456 ;;		On entry : 0/0
   457 ;;		On exit  : 0/0
   458 ;;		Unchanged: 0/0
   459 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   460 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   461 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   462 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   463 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   464 ;;Total ram usage:        1 bytes
   465 ;; Hardware stack levels used: 1
   466 ;; Hardware stack levels required when called: 4
   467 ;; This function calls:
   468 ;;		_BORRAR_LCD
   469 ;;		_CURSOR_HOME
   470 ;;		_CURSOR_ONOFF
   471 ;;		_LCD_CONFIG
   472 ;; This function is called by:
   473 ;;		_main
   474 ;; This function uses a non-reentrant model
   475 ;;
   476                           
   477                           	psect	text1
   478   002A48                     __ptext1:
   479                           	callstack 0
   480   002A48                     _lcd_init:
   481                           	callstack 122
   482   002A48                     
   483                           ;maincode02.c: 38:     TRISD = 0x00;
   484   002A48  0E00               	movlw	0
   485   002A4A  6EC9               	movwf	201,c	;volatile
   486                           
   487                           ;maincode02.c: 39:     ANSELD = 0x00;
   488   002A4C  0E00               	movlw	0
   489   002A4E  0104               	movlb	4	; () banked
   490   002A50  6F18               	movwf	24,b	;volatile
   491   002A52                     
   492                           ; BSR set to: 4
   493                           ;maincode02.c: 40:     LCD_CONFIG();
   494   002A52  EC01  F014         	call	_LCD_CONFIG	;wreg free
   495   002A56                     
   496                           ;maincode02.c: 41:     _delay((unsigned long)((21)*(32000000UL/4000.0)));
   497   002A56  0EDB               	movlw	219
   498   002A58  6E05               	movwf	??_lcd_init^(0+1280),c
   499   002A5A  0E2D               	movlw	45
   500   002A5C                     u457:
   501   002A5C  2EE8               	decfsz	wreg,f,c
   502   002A5E  D7FE               	bra	u457
   503   002A60  2E05               	decfsz	??_lcd_init^(0+1280),f,c
   504   002A62  D7FC               	bra	u457
   505   002A64  0000               	nop	
   506   002A66                     
   507                           ;maincode02.c: 42:     BORRAR_LCD();
   508   002A66  EC6E  F015         	call	_BORRAR_LCD	;wreg free
   509   002A6A                     
   510                           ;maincode02.c: 43:     CURSOR_HOME();
   511   002A6A  EC6A  F015         	call	_CURSOR_HOME	;wreg free
   512   002A6E                     
   513                           ;maincode02.c: 44:     CURSOR_ONOFF(1);
   514   002A6E  0E01               	movlw	1
   515   002A70  EC0C  F015         	call	_CURSOR_ONOFF
   516   002A74  0012               	return		;funcret
   517   002A76                     __end_of_lcd_init:
   518                           	callstack 0
   519                           
   520 ;; *************** function _LCD_CONFIG *****************
   521 ;; Defined at:
   522 ;;		line 72 in file "LCD.c"
   523 ;; Parameters:    Size  Location     Type
   524 ;;		None
   525 ;; Auto vars:     Size  Location     Type
   526 ;;		None
   527 ;; Return value:  Size  Location     Type
   528 ;;                  1    wreg      void 
   529 ;; Registers used:
   530 ;;		wreg, status,2, status,0, cstack
   531 ;; Tracked objects:
   532 ;;		On entry : 0/0
   533 ;;		On exit  : 0/0
   534 ;;		Unchanged: 0/0
   535 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   536 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   537 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   538 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   539 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   540 ;;Total ram usage:        1 bytes
   541 ;; Hardware stack levels used: 1
   542 ;; Hardware stack levels required when called: 3
   543 ;; This function calls:
   544 ;;		_ENVIA_LCD_CMD
   545 ;;		_ENVIA_NIBBLE
   546 ;; This function is called by:
   547 ;;		_lcd_init
   548 ;; This function uses a non-reentrant model
   549 ;;
   550                           
   551                           	psect	text2
   552   002802                     __ptext2:
   553                           	callstack 0
   554   002802                     _LCD_CONFIG:
   555                           	callstack 122
   556   002802                     
   557                           ;LCD.c: 74:  LATDbits.LATD0 = 0;
   558   002802  90C1               	bcf	193,0,c	;volatile
   559                           
   560                           ;LCD.c: 75:  LATDbits.LATD1 = 0;
   561   002804  92C1               	bcf	193,1,c	;volatile
   562   002806                     
   563                           ;LCD.c: 76:  ENVIA_NIBBLE(0x30);
   564   002806  0E30               	movlw	48
   565   002808  EC5C  F015         	call	_ENVIA_NIBBLE
   566   00280C                     
   567                           ;LCD.c: 77:         _delay(24000);
   568   00280C  0E20               	movlw	32
   569   00280E  6E04               	movwf	??_LCD_CONFIG^(0+1280),c
   570   002810  0E2A               	movlw	42
   571   002812                     u467:
   572   002812  2EE8               	decfsz	wreg,f,c
   573   002814  D7FE               	bra	u467
   574   002816  2E04               	decfsz	??_LCD_CONFIG^(0+1280),f,c
   575   002818  D7FC               	bra	u467
   576   00281A                     
   577                           ;LCD.c: 78:         _delay(24000);
   578   00281A  0E20               	movlw	32
   579   00281C  6E04               	movwf	??_LCD_CONFIG^(0+1280),c
   580   00281E  0E2A               	movlw	42
   581   002820                     u477:
   582   002820  2EE8               	decfsz	wreg,f,c
   583   002822  D7FE               	bra	u477
   584   002824  2E04               	decfsz	??_LCD_CONFIG^(0+1280),f,c
   585   002826  D7FC               	bra	u477
   586                           
   587                           ;LCD.c: 81:  ENVIA_NIBBLE(0x30);
   588   002828  0E30               	movlw	48
   589   00282A  EC5C  F015         	call	_ENVIA_NIBBLE
   590   00282E                     
   591                           ;LCD.c: 83:  _delay(1200);
   592   00282E  0EF0               	movlw	240
   593   002830                     u487:
   594   002830  D000               	nop2	
   595   002832  2EE8               	decfsz	wreg,f,c
   596   002834  D7FD               	bra	u487
   597   002836                     
   598                           ;LCD.c: 84:         ENVIA_NIBBLE(0x30);
   599   002836  0E30               	movlw	48
   600   002838  EC5C  F015         	call	_ENVIA_NIBBLE
   601   00283C                     
   602                           ;LCD.c: 85:  ENVIA_NIBBLE(0x20);
   603   00283C  0E20               	movlw	32
   604   00283E  EC5C  F015         	call	_ENVIA_NIBBLE
   605   002842                     
   606                           ;LCD.c: 86:  ENVIA_LCD_CMD(0x01);
   607   002842  0E01               	movlw	1
   608   002844  ECBE  F014         	call	_ENVIA_LCD_CMD
   609   002848                     
   610                           ;LCD.c: 87:  ENVIA_LCD_CMD(0x28);
   611   002848  0E28               	movlw	40
   612   00284A  ECBE  F014         	call	_ENVIA_LCD_CMD
   613   00284E                     
   614                           ;LCD.c: 88:  ENVIA_LCD_CMD(0x0F);
   615   00284E  0E0F               	movlw	15
   616   002850  ECBE  F014         	call	_ENVIA_LCD_CMD
   617   002854                     
   618                           ;LCD.c: 89:  ENVIA_LCD_CMD(0x06);
   619   002854  0E06               	movlw	6
   620   002856  ECBE  F014         	call	_ENVIA_LCD_CMD
   621   00285A                     
   622                           ;LCD.c: 90:  ENVIA_LCD_CMD(0x01);
   623   00285A  0E01               	movlw	1
   624   00285C  ECBE  F014         	call	_ENVIA_LCD_CMD
   625   002860  0012               	return		;funcret
   626   002862                     __end_of_LCD_CONFIG:
   627                           	callstack 0
   628                           
   629 ;; *************** function _CURSOR_ONOFF *****************
   630 ;; Defined at:
   631 ;;		line 35 in file "LCD.c"
   632 ;; Parameters:    Size  Location     Type
   633 ;;  estado          1    wreg     unsigned char 
   634 ;; Auto vars:     Size  Location     Type
   635 ;;  estado          1    3[COMRAM] unsigned char 
   636 ;; Return value:  Size  Location     Type
   637 ;;                  1    wreg      void 
   638 ;; Registers used:
   639 ;;		wreg, status,2, status,0, cstack
   640 ;; Tracked objects:
   641 ;;		On entry : 0/0
   642 ;;		On exit  : 0/0
   643 ;;		Unchanged: 0/0
   644 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   645 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   646 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   647 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   648 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   649 ;;Total ram usage:        1 bytes
   650 ;; Hardware stack levels used: 1
   651 ;; Hardware stack levels required when called: 3
   652 ;; This function calls:
   653 ;;		_ENVIA_LCD_CMD
   654 ;; This function is called by:
   655 ;;		_lcd_init
   656 ;; This function uses a non-reentrant model
   657 ;;
   658                           
   659                           	psect	text3
   660   002A18                     __ptext3:
   661                           	callstack 0
   662   002A18                     _CURSOR_ONOFF:
   663                           	callstack 122
   664                           
   665                           ;incstack = 0
   666                           ;CURSOR_ONOFF@estado stored from wreg
   667   002A18  6E04               	movwf	CURSOR_ONOFF@estado^(0+1280),c
   668   002A1A                     
   669                           ;LCD.c: 35: void CURSOR_ONOFF(unsigned char estado);LCD.c: 36: {;LCD.c: 37:  if(estado =
      +                          = 0) ENVIA_LCD_CMD(0x0E);
   670   002A1A  5004               	movf	CURSOR_ONOFF@estado^(0+1280),w,c
   671   002A1C  A4D8               	btfss	status,2,c
   672   002A1E  EF13  F015         	goto	u21
   673   002A22  EF15  F015         	goto	u20
   674   002A26                     u21:
   675   002A26  EF18  F015         	goto	l943
   676   002A2A                     u20:
   677   002A2A  0E0E               	movlw	14
   678   002A2C  ECBE  F014         	call	_ENVIA_LCD_CMD
   679   002A30                     l943:
   680                           
   681                           ;LCD.c: 38:  if(estado == 1) ENVIA_LCD_CMD(0x0C);
   682   002A30  0404               	decf	CURSOR_ONOFF@estado^(0+1280),w,c
   683   002A32  A4D8               	btfss	status,2,c
   684   002A34  EF1E  F015         	goto	u31
   685   002A38  EF20  F015         	goto	u30
   686   002A3C                     u31:
   687   002A3C  EF23  F015         	goto	l42
   688   002A40                     u30:
   689   002A40  0E0C               	movlw	12
   690   002A42  ECBE  F014         	call	_ENVIA_LCD_CMD
   691   002A46                     l42:
   692   002A46  0012               	return		;funcret
   693   002A48                     __end_of_CURSOR_ONOFF:
   694                           	callstack 0
   695                           
   696 ;; *************** function _CURSOR_HOME *****************
   697 ;; Defined at:
   698 ;;		line 30 in file "LCD.c"
   699 ;; Parameters:    Size  Location     Type
   700 ;;		None
   701 ;; Auto vars:     Size  Location     Type
   702 ;;		None
   703 ;; Return value:  Size  Location     Type
   704 ;;                  1    wreg      void 
   705 ;; Registers used:
   706 ;;		wreg, status,2, status,0, cstack
   707 ;; Tracked objects:
   708 ;;		On entry : 0/0
   709 ;;		On exit  : 0/0
   710 ;;		Unchanged: 0/0
   711 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   712 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   713 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   714 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   715 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   716 ;;Total ram usage:        0 bytes
   717 ;; Hardware stack levels used: 1
   718 ;; Hardware stack levels required when called: 3
   719 ;; This function calls:
   720 ;;		_ENVIA_LCD_CMD
   721 ;; This function is called by:
   722 ;;		_lcd_init
   723 ;; This function uses a non-reentrant model
   724 ;;
   725                           
   726                           	psect	text4
   727   002AD4                     __ptext4:
   728                           	callstack 0
   729   002AD4                     _CURSOR_HOME:
   730                           	callstack 122
   731   002AD4                     
   732                           ;LCD.c: 32:  ENVIA_LCD_CMD(0x02);
   733   002AD4  0E02               	movlw	2
   734   002AD6  ECBE  F014         	call	_ENVIA_LCD_CMD
   735   002ADA  0012               	return		;funcret
   736   002ADC                     __end_of_CURSOR_HOME:
   737                           	callstack 0
   738                           
   739 ;; *************** function _BORRAR_LCD *****************
   740 ;; Defined at:
   741 ;;		line 67 in file "LCD.c"
   742 ;; Parameters:    Size  Location     Type
   743 ;;		None
   744 ;; Auto vars:     Size  Location     Type
   745 ;;		None
   746 ;; Return value:  Size  Location     Type
   747 ;;                  1    wreg      void 
   748 ;; Registers used:
   749 ;;		wreg, status,2, status,0, cstack
   750 ;; Tracked objects:
   751 ;;		On entry : 0/0
   752 ;;		On exit  : 0/0
   753 ;;		Unchanged: 0/0
   754 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   755 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   756 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   757 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   758 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   759 ;;Total ram usage:        0 bytes
   760 ;; Hardware stack levels used: 1
   761 ;; Hardware stack levels required when called: 3
   762 ;; This function calls:
   763 ;;		_ENVIA_LCD_CMD
   764 ;; This function is called by:
   765 ;;		_lcd_init
   766 ;; This function uses a non-reentrant model
   767 ;;
   768                           
   769                           	psect	text5
   770   002ADC                     __ptext5:
   771                           	callstack 0
   772   002ADC                     _BORRAR_LCD:
   773                           	callstack 122
   774   002ADC                     
   775                           ;LCD.c: 69:  ENVIA_LCD_CMD(0x01);
   776   002ADC  0E01               	movlw	1
   777   002ADE  ECBE  F014         	call	_ENVIA_LCD_CMD
   778   002AE2  0012               	return		;funcret
   779   002AE4                     __end_of_BORRAR_LCD:
   780                           	callstack 0
   781                           
   782 ;; *************** function _convierte *****************
   783 ;; Defined at:
   784 ;;		line 47 in file "maincode02.c"
   785 ;; Parameters:    Size  Location     Type
   786 ;;  numero          1    wreg     unsigned char 
   787 ;; Auto vars:     Size  Location     Type
   788 ;;  numero          1   14[COMRAM] unsigned char 
   789 ;; Return value:  Size  Location     Type
   790 ;;                  1    wreg      void 
   791 ;; Registers used:
   792 ;;		wreg, status,2, status,0, cstack
   793 ;; Tracked objects:
   794 ;;		On entry : 0/0
   795 ;;		On exit  : 0/0
   796 ;;		Unchanged: 0/0
   797 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   798 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   799 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   800 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   801 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   802 ;;Total ram usage:        1 bytes
   803 ;; Hardware stack levels used: 1
   804 ;; Hardware stack levels required when called: 2
   805 ;; This function calls:
   806 ;;		___awdiv
   807 ;;		___awmod
   808 ;; This function is called by:
   809 ;;		_main
   810 ;; This function uses a non-reentrant model
   811 ;;
   812                           
   813                           	psect	text6
   814   002862                     __ptext6:
   815                           	callstack 0
   816   002862                     _convierte:
   817                           	callstack 124
   818                           
   819                           ;incstack = 0
   820                           ;convierte@numero stored from wreg
   821   002862  6E0F               	movwf	convierte@numero^(0+1280),c
   822   002864                     
   823                           ;maincode02.c: 48:     centena = numero / 100;
   824   002864  C50F  F507         	movff	convierte@numero,___awdiv@dividend
   825   002868  6A08               	clrf	(___awdiv@dividend+1)^(0+1280),c
   826   00286A  0E00               	movlw	0
   827   00286C  6E0A               	movwf	(___awdiv@divisor+1)^(0+1280),c
   828   00286E  0E64               	movlw	100
   829   002870  6E09               	movwf	___awdiv@divisor^(0+1280),c
   830   002872  EC87  F012         	call	___awdiv	;wreg free
   831   002876  5007               	movf	?___awdiv^(0+1280),w,c
   832   002878  6E16               	movwf	_centena^(0+1280),c
   833                           
   834                           ;maincode02.c: 49:     decena = (numero % 100) / 10;
   835   00287A  0E00               	movlw	0
   836   00287C  6E04               	movwf	(___awmod@divisor+1)^(0+1280),c
   837   00287E  0E64               	movlw	100
   838   002880  6E03               	movwf	___awmod@divisor^(0+1280),c
   839   002882  C50F  F501         	movff	convierte@numero,___awmod@dividend
   840   002886  6A02               	clrf	(___awmod@dividend+1)^(0+1280),c
   841   002888  ECE9  F012         	call	___awmod	;wreg free
   842   00288C  C501  F507         	movff	?___awmod,___awdiv@dividend
   843   002890  C502  F508         	movff	?___awmod+1,___awdiv@dividend+1
   844   002894  0E00               	movlw	0
   845   002896  6E0A               	movwf	(___awdiv@divisor+1)^(0+1280),c
   846   002898  0E0A               	movlw	10
   847   00289A  6E09               	movwf	___awdiv@divisor^(0+1280),c
   848   00289C  EC87  F012         	call	___awdiv	;wreg free
   849   0028A0  5007               	movf	?___awdiv^(0+1280),w,c
   850   0028A2  6E15               	movwf	_decena^(0+1280),c
   851                           
   852                           ;maincode02.c: 50:     unidad = numero % 10;
   853   0028A4  C50F  F501         	movff	convierte@numero,___awmod@dividend
   854   0028A8  6A02               	clrf	(___awmod@dividend+1)^(0+1280),c
   855   0028AA  0E00               	movlw	0
   856   0028AC  6E04               	movwf	(___awmod@divisor+1)^(0+1280),c
   857   0028AE  0E0A               	movlw	10
   858   0028B0  6E03               	movwf	___awmod@divisor^(0+1280),c
   859   0028B2  ECE9  F012         	call	___awmod	;wreg free
   860   0028B6  5001               	movf	?___awmod^(0+1280),w,c
   861   0028B8  6E14               	movwf	_unidad^(0+1280),c
   862   0028BA  0012               	return		;funcret
   863   0028BC                     __end_of_convierte:
   864                           	callstack 0
   865                           
   866 ;; *************** function ___awmod *****************
   867 ;; Defined at:
   868 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awmod.c"
   869 ;; Parameters:    Size  Location     Type
   870 ;;  dividend        2    0[COMRAM] int 
   871 ;;  divisor         2    2[COMRAM] int 
   872 ;; Auto vars:     Size  Location     Type
   873 ;;  sign            1    5[COMRAM] unsigned char 
   874 ;;  counter         1    4[COMRAM] unsigned char 
   875 ;; Return value:  Size  Location     Type
   876 ;;                  2    0[COMRAM] int 
   877 ;; Registers used:
   878 ;;		wreg, status,2, status,0
   879 ;; Tracked objects:
   880 ;;		On entry : 0/0
   881 ;;		On exit  : 0/0
   882 ;;		Unchanged: 0/0
   883 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   884 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   885 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   886 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   887 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   888 ;;Total ram usage:        6 bytes
   889 ;; Hardware stack levels used: 1
   890 ;; Hardware stack levels required when called: 1
   891 ;; This function calls:
   892 ;;		Nothing
   893 ;; This function is called by:
   894 ;;		_convierte
   895 ;; This function uses a non-reentrant model
   896 ;;
   897                           
   898                           	psect	text7
   899   0025D2                     __ptext7:
   900                           	callstack 0
   901   0025D2                     ___awmod:
   902                           	callstack 124
   903   0025D2  0E00               	movlw	0
   904   0025D4  6E06               	movwf	___awmod@sign^(0+1280),c
   905   0025D6  BE02               	btfsc	(___awmod@dividend+1)^(0+1280),7,c
   906   0025D8  EFF2  F012         	goto	u360
   907   0025DC  EFF0  F012         	goto	u361
   908   0025E0                     u361:
   909   0025E0  EFF8  F012         	goto	l1293
   910   0025E4                     u360:
   911   0025E4  6C01               	negf	___awmod@dividend^(0+1280),c
   912   0025E6  1E02               	comf	(___awmod@dividend+1)^(0+1280),f,c
   913   0025E8  B0D8               	btfsc	status,0,c
   914   0025EA  2A02               	incf	(___awmod@dividend+1)^(0+1280),f,c
   915   0025EC  0E01               	movlw	1
   916   0025EE  6E06               	movwf	___awmod@sign^(0+1280),c
   917   0025F0                     l1293:
   918   0025F0  BE04               	btfsc	(___awmod@divisor+1)^(0+1280),7,c
   919   0025F2  EFFF  F012         	goto	u370
   920   0025F6  EFFD  F012         	goto	u371
   921   0025FA                     u371:
   922   0025FA  EF03  F013         	goto	l1297
   923   0025FE                     u370:
   924   0025FE  6C03               	negf	___awmod@divisor^(0+1280),c
   925   002600  1E04               	comf	(___awmod@divisor+1)^(0+1280),f,c
   926   002602  B0D8               	btfsc	status,0,c
   927   002604  2A04               	incf	(___awmod@divisor+1)^(0+1280),f,c
   928   002606                     l1297:
   929   002606  5003               	movf	___awmod@divisor^(0+1280),w,c
   930   002608  1004               	iorwf	(___awmod@divisor+1)^(0+1280),w,c
   931   00260A  B4D8               	btfsc	status,2,c
   932   00260C  EF0A  F013         	goto	u381
   933   002610  EF0C  F013         	goto	u380
   934   002614                     u381:
   935   002614  EF30  F013         	goto	l1313
   936   002618                     u380:
   937   002618  0E01               	movlw	1
   938   00261A  6E05               	movwf	___awmod@counter^(0+1280),c
   939   00261C  EF14  F013         	goto	l1303
   940   002620                     l1301:
   941   002620  90D8               	bcf	status,0,c
   942   002622  3603               	rlcf	___awmod@divisor^(0+1280),f,c
   943   002624  3604               	rlcf	(___awmod@divisor+1)^(0+1280),f,c
   944   002626  2A05               	incf	___awmod@counter^(0+1280),f,c
   945   002628                     l1303:
   946   002628  AE04               	btfss	(___awmod@divisor+1)^(0+1280),7,c
   947   00262A  EF19  F013         	goto	u391
   948   00262E  EF1B  F013         	goto	u390
   949   002632                     u391:
   950   002632  EF10  F013         	goto	l1301
   951   002636                     u390:
   952   002636                     l1305:
   953   002636  5003               	movf	___awmod@divisor^(0+1280),w,c
   954   002638  5C01               	subwf	___awmod@dividend^(0+1280),w,c
   955   00263A  5004               	movf	(___awmod@divisor+1)^(0+1280),w,c
   956   00263C  5802               	subwfb	(___awmod@dividend+1)^(0+1280),w,c
   957   00263E  A0D8               	btfss	status,0,c
   958   002640  EF24  F013         	goto	u401
   959   002644  EF26  F013         	goto	u400
   960   002648                     u401:
   961   002648  EF2A  F013         	goto	l1309
   962   00264C                     u400:
   963   00264C  5003               	movf	___awmod@divisor^(0+1280),w,c
   964   00264E  5E01               	subwf	___awmod@dividend^(0+1280),f,c
   965   002650  5004               	movf	(___awmod@divisor+1)^(0+1280),w,c
   966   002652  5A02               	subwfb	(___awmod@dividend+1)^(0+1280),f,c
   967   002654                     l1309:
   968   002654  90D8               	bcf	status,0,c
   969   002656  3204               	rrcf	(___awmod@divisor+1)^(0+1280),f,c
   970   002658  3203               	rrcf	___awmod@divisor^(0+1280),f,c
   971   00265A  2E05               	decfsz	___awmod@counter^(0+1280),f,c
   972   00265C  EF1B  F013         	goto	l1305
   973   002660                     l1313:
   974   002660  5006               	movf	___awmod@sign^(0+1280),w,c
   975   002662  B4D8               	btfsc	status,2,c
   976   002664  EF36  F013         	goto	u411
   977   002668  EF38  F013         	goto	u410
   978   00266C                     u411:
   979   00266C  EF3C  F013         	goto	l1317
   980   002670                     u410:
   981   002670  6C01               	negf	___awmod@dividend^(0+1280),c
   982   002672  1E02               	comf	(___awmod@dividend+1)^(0+1280),f,c
   983   002674  B0D8               	btfsc	status,0,c
   984   002676  2A02               	incf	(___awmod@dividend+1)^(0+1280),f,c
   985   002678                     l1317:
   986   002678  C501  F501         	movff	___awmod@dividend,?___awmod
   987   00267C  C502  F502         	movff	___awmod@dividend+1,?___awmod+1
   988   002680  0012               	return		;funcret
   989   002682                     __end_of___awmod:
   990                           	callstack 0
   991                           
   992 ;; *************** function ___awdiv *****************
   993 ;; Defined at:
   994 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awdiv.c"
   995 ;; Parameters:    Size  Location     Type
   996 ;;  dividend        2    6[COMRAM] int 
   997 ;;  divisor         2    8[COMRAM] int 
   998 ;; Auto vars:     Size  Location     Type
   999 ;;  quotient        2   12[COMRAM] int 
  1000 ;;  sign            1   11[COMRAM] unsigned char 
  1001 ;;  counter         1   10[COMRAM] unsigned char 
  1002 ;; Return value:  Size  Location     Type
  1003 ;;                  2    6[COMRAM] int 
  1004 ;; Registers used:
  1005 ;;		wreg, status,2, status,0
  1006 ;; Tracked objects:
  1007 ;;		On entry : 0/0
  1008 ;;		On exit  : 0/0
  1009 ;;		Unchanged: 0/0
  1010 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1011 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1012 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1013 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1014 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1015 ;;Total ram usage:        8 bytes
  1016 ;; Hardware stack levels used: 1
  1017 ;; Hardware stack levels required when called: 1
  1018 ;; This function calls:
  1019 ;;		Nothing
  1020 ;; This function is called by:
  1021 ;;		_convierte
  1022 ;; This function uses a non-reentrant model
  1023 ;;
  1024                           
  1025                           	psect	text8
  1026   00250E                     __ptext8:
  1027                           	callstack 0
  1028   00250E                     ___awdiv:
  1029                           	callstack 124
  1030   00250E  0E00               	movlw	0
  1031   002510  6E0C               	movwf	___awdiv@sign^(0+1280),c
  1032   002512  BE0A               	btfsc	(___awdiv@divisor+1)^(0+1280),7,c
  1033   002514  EF90  F012         	goto	u300
  1034   002518  EF8E  F012         	goto	u301
  1035   00251C                     u301:
  1036   00251C  EF96  F012         	goto	l1249
  1037   002520                     u300:
  1038   002520  6C09               	negf	___awdiv@divisor^(0+1280),c
  1039   002522  1E0A               	comf	(___awdiv@divisor+1)^(0+1280),f,c
  1040   002524  B0D8               	btfsc	status,0,c
  1041   002526  2A0A               	incf	(___awdiv@divisor+1)^(0+1280),f,c
  1042   002528  0E01               	movlw	1
  1043   00252A  6E0C               	movwf	___awdiv@sign^(0+1280),c
  1044   00252C                     l1249:
  1045   00252C  BE08               	btfsc	(___awdiv@dividend+1)^(0+1280),7,c
  1046   00252E  EF9D  F012         	goto	u310
  1047   002532  EF9B  F012         	goto	u311
  1048   002536                     u311:
  1049   002536  EFA3  F012         	goto	l1255
  1050   00253A                     u310:
  1051   00253A  6C07               	negf	___awdiv@dividend^(0+1280),c
  1052   00253C  1E08               	comf	(___awdiv@dividend+1)^(0+1280),f,c
  1053   00253E  B0D8               	btfsc	status,0,c
  1054   002540  2A08               	incf	(___awdiv@dividend+1)^(0+1280),f,c
  1055   002542  0E01               	movlw	1
  1056   002544  1A0C               	xorwf	___awdiv@sign^(0+1280),f,c
  1057   002546                     l1255:
  1058   002546  0E00               	movlw	0
  1059   002548  6E0E               	movwf	(___awdiv@quotient+1)^(0+1280),c
  1060   00254A  0E00               	movlw	0
  1061   00254C  6E0D               	movwf	___awdiv@quotient^(0+1280),c
  1062   00254E  5009               	movf	___awdiv@divisor^(0+1280),w,c
  1063   002550  100A               	iorwf	(___awdiv@divisor+1)^(0+1280),w,c
  1064   002552  B4D8               	btfsc	status,2,c
  1065   002554  EFAE  F012         	goto	u321
  1066   002558  EFB0  F012         	goto	u320
  1067   00255C                     u321:
  1068   00255C  EFD8  F012         	goto	l1277
  1069   002560                     u320:
  1070   002560  0E01               	movlw	1
  1071   002562  6E0B               	movwf	___awdiv@counter^(0+1280),c
  1072   002564  EFB8  F012         	goto	l1263
  1073   002568                     l1261:
  1074   002568  90D8               	bcf	status,0,c
  1075   00256A  3609               	rlcf	___awdiv@divisor^(0+1280),f,c
  1076   00256C  360A               	rlcf	(___awdiv@divisor+1)^(0+1280),f,c
  1077   00256E  2A0B               	incf	___awdiv@counter^(0+1280),f,c
  1078   002570                     l1263:
  1079   002570  AE0A               	btfss	(___awdiv@divisor+1)^(0+1280),7,c
  1080   002572  EFBD  F012         	goto	u331
  1081   002576  EFBF  F012         	goto	u330
  1082   00257A                     u331:
  1083   00257A  EFB4  F012         	goto	l1261
  1084   00257E                     u330:
  1085   00257E                     l1265:
  1086   00257E  90D8               	bcf	status,0,c
  1087   002580  360D               	rlcf	___awdiv@quotient^(0+1280),f,c
  1088   002582  360E               	rlcf	(___awdiv@quotient+1)^(0+1280),f,c
  1089   002584  5009               	movf	___awdiv@divisor^(0+1280),w,c
  1090   002586  5C07               	subwf	___awdiv@dividend^(0+1280),w,c
  1091   002588  500A               	movf	(___awdiv@divisor+1)^(0+1280),w,c
  1092   00258A  5808               	subwfb	(___awdiv@dividend+1)^(0+1280),w,c
  1093   00258C  A0D8               	btfss	status,0,c
  1094   00258E  EFCB  F012         	goto	u341
  1095   002592  EFCD  F012         	goto	u340
  1096   002596                     u341:
  1097   002596  EFD2  F012         	goto	l1273
  1098   00259A                     u340:
  1099   00259A  5009               	movf	___awdiv@divisor^(0+1280),w,c
  1100   00259C  5E07               	subwf	___awdiv@dividend^(0+1280),f,c
  1101   00259E  500A               	movf	(___awdiv@divisor+1)^(0+1280),w,c
  1102   0025A0  5A08               	subwfb	(___awdiv@dividend+1)^(0+1280),f,c
  1103   0025A2  800D               	bsf	___awdiv@quotient^(0+1280),0,c
  1104   0025A4                     l1273:
  1105   0025A4  90D8               	bcf	status,0,c
  1106   0025A6  320A               	rrcf	(___awdiv@divisor+1)^(0+1280),f,c
  1107   0025A8  3209               	rrcf	___awdiv@divisor^(0+1280),f,c
  1108   0025AA  2E0B               	decfsz	___awdiv@counter^(0+1280),f,c
  1109   0025AC  EFBF  F012         	goto	l1265
  1110   0025B0                     l1277:
  1111   0025B0  500C               	movf	___awdiv@sign^(0+1280),w,c
  1112   0025B2  B4D8               	btfsc	status,2,c
  1113   0025B4  EFDE  F012         	goto	u351
  1114   0025B8  EFE0  F012         	goto	u350
  1115   0025BC                     u351:
  1116   0025BC  EFE4  F012         	goto	l1281
  1117   0025C0                     u350:
  1118   0025C0  6C0D               	negf	___awdiv@quotient^(0+1280),c
  1119   0025C2  1E0E               	comf	(___awdiv@quotient+1)^(0+1280),f,c
  1120   0025C4  B0D8               	btfsc	status,0,c
  1121   0025C6  2A0E               	incf	(___awdiv@quotient+1)^(0+1280),f,c
  1122   0025C8                     l1281:
  1123   0025C8  C50D  F507         	movff	___awdiv@quotient,?___awdiv
  1124   0025CC  C50E  F508         	movff	___awdiv@quotient+1,?___awdiv+1
  1125   0025D0  0012               	return		;funcret
  1126   0025D2                     __end_of___awdiv:
  1127                           	callstack 0
  1128                           
  1129 ;; *************** function _configuro *****************
  1130 ;; Defined at:
  1131 ;;		line 9 in file "maincode02.c"
  1132 ;; Parameters:    Size  Location     Type
  1133 ;;		None
  1134 ;; Auto vars:     Size  Location     Type
  1135 ;;		None
  1136 ;; Return value:  Size  Location     Type
  1137 ;;                  1    wreg      void 
  1138 ;; Registers used:
  1139 ;;		wreg, status,2
  1140 ;; Tracked objects:
  1141 ;;		On entry : 0/0
  1142 ;;		On exit  : 0/0
  1143 ;;		Unchanged: 0/0
  1144 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1145 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1146 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1147 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1148 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1149 ;;Total ram usage:        0 bytes
  1150 ;; Hardware stack levels used: 1
  1151 ;; Hardware stack levels required when called: 1
  1152 ;; This function calls:
  1153 ;;		Nothing
  1154 ;; This function is called by:
  1155 ;;		_main
  1156 ;; This function uses a non-reentrant model
  1157 ;;
  1158                           
  1159                           	psect	text9
  1160   0028BC                     __ptext9:
  1161                           	callstack 0
  1162   0028BC                     _configuro:
  1163                           	callstack 125
  1164   0028BC                     
  1165                           ;maincode02.c: 11:     OSCCON1 = 0x60;
  1166   0028BC  0E60               	movlw	96
  1167   0028BE  0100               	movlb	0	; () banked
  1168   0028C0  6FAD               	movwf	173,b	;volatile
  1169                           
  1170                           ;maincode02.c: 12:     OSCFRQ = 0x06;
  1171   0028C2  0E06               	movlw	6
  1172   0028C4  6FB1               	movwf	177,b	;volatile
  1173                           
  1174                           ;maincode02.c: 13:     OSCEN = 0x40;
  1175   0028C6  0E40               	movlw	64
  1176   0028C8  6FB3               	movwf	179,b	;volatile
  1177   0028CA                     
  1178                           ; BSR set to: 0
  1179                           ;maincode02.c: 15:     TRISB = 0xFF;
  1180   0028CA  68C7               	setf	199,c	;volatile
  1181                           
  1182                           ;maincode02.c: 16:     ANSELB = 0xFC;
  1183   0028CC  0EFC               	movlw	252
  1184   0028CE  0104               	movlb	4	; () banked
  1185   0028D0  6F08               	movwf	8,b	;volatile
  1186                           
  1187                           ;maincode02.c: 17:     WPUB = 0x03;
  1188   0028D2  0E03               	movlw	3
  1189   0028D4  6F09               	movwf	9,b	;volatile
  1190                           
  1191                           ;maincode02.c: 19:     T1CLK = 0x01;
  1192   0028D6  0E01               	movlw	1
  1193   0028D8  0103               	movlb	3	; () banked
  1194   0028DA  6F21               	movwf	33,b	;volatile
  1195                           
  1196                           ;maincode02.c: 20:     T1CON = 0x33;
  1197   0028DC  0E33               	movlw	51
  1198   0028DE  6F1E               	movwf	30,b	;volatile
  1199                           
  1200                           ;maincode02.c: 22:     CCP1CON = 0x81;
  1201   0028E0  0E81               	movlw	129
  1202   0028E2  6F42               	movwf	66,b	;volatile
  1203                           
  1204                           ;maincode02.c: 23:     CCPR1H = 0x27;
  1205   0028E4  0E27               	movlw	39
  1206   0028E6  6F41               	movwf	65,b	;volatile
  1207                           
  1208                           ;maincode02.c: 24:     CCPR1L = 0x10;
  1209   0028E8  0E10               	movlw	16
  1210   0028EA  6F40               	movwf	64,b	;volatile
  1211   0028EC                     
  1212                           ; BSR set to: 3
  1213                           ;maincode02.c: 26:     INTCON0bits.INT0EDG = 0;
  1214   0028EC  90D6               	bcf	214,0,c	;volatile
  1215   0028EE                     
  1216                           ; BSR set to: 3
  1217                           ;maincode02.c: 27:     INTCON0bits.INT1EDG = 0;
  1218   0028EE  92D6               	bcf	214,1,c	;volatile
  1219   0028F0                     
  1220                           ; BSR set to: 3
  1221                           ;maincode02.c: 28:     PIE1bits.INT0IE = 1;
  1222   0028F0  809F               	bsf	159,0,c	;volatile
  1223   0028F2                     
  1224                           ; BSR set to: 3
  1225                           ;maincode02.c: 29:     PIE6bits.INT1IE = 1;
  1226   0028F2  80A4               	bsf	164,0,c	;volatile
  1227   0028F4                     
  1228                           ; BSR set to: 3
  1229                           ;maincode02.c: 30:     PIE3bits.CCP1IE = 1;
  1230   0028F4  8CA1               	bsf	161,6,c	;volatile
  1231   0028F6                     
  1232                           ; BSR set to: 3
  1233                           ;maincode02.c: 31:     PIR1bits.INT0IF = 0;
  1234   0028F6  90AF               	bcf	175,0,c	;volatile
  1235   0028F8                     
  1236                           ; BSR set to: 3
  1237                           ;maincode02.c: 32:     PIR6bits.INT1IF = 0;
  1238   0028F8  90B4               	bcf	180,0,c	;volatile
  1239   0028FA                     
  1240                           ; BSR set to: 3
  1241                           ;maincode02.c: 33:     PIR3bits.CCP1IF = 0;
  1242   0028FA  9CB1               	bcf	177,6,c	;volatile
  1243   0028FC                     
  1244                           ; BSR set to: 3
  1245                           ;maincode02.c: 34:     INTCON0bits.GIE = 1;
  1246   0028FC  8ED6               	bsf	214,7,c	;volatile
  1247   0028FE                     
  1248                           ; BSR set to: 3
  1249   0028FE  0012               	return		;funcret
  1250   002900                     __end_of_configuro:
  1251                           	callstack 0
  1252                           
  1253 ;; *************** function _POS_CURSOR *****************
  1254 ;; Defined at:
  1255 ;;		line 6 in file "LCD.c"
  1256 ;; Parameters:    Size  Location     Type
  1257 ;;  fila            1    wreg     unsigned char 
  1258 ;;  columna         1    3[COMRAM] unsigned char 
  1259 ;; Auto vars:     Size  Location     Type
  1260 ;;  fila            1    4[COMRAM] unsigned char 
  1261 ;; Return value:  Size  Location     Type
  1262 ;;                  1    wreg      void 
  1263 ;; Registers used:
  1264 ;;		wreg, status,2, status,0, cstack
  1265 ;; Tracked objects:
  1266 ;;		On entry : 0/0
  1267 ;;		On exit  : 0/0
  1268 ;;		Unchanged: 0/0
  1269 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1270 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1271 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1272 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1273 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1274 ;;Total ram usage:        2 bytes
  1275 ;; Hardware stack levels used: 1
  1276 ;; Hardware stack levels required when called: 3
  1277 ;; This function calls:
  1278 ;;		_ENVIA_LCD_CMD
  1279 ;; This function is called by:
  1280 ;;		_main
  1281 ;; This function uses a non-reentrant model
  1282 ;;
  1283                           
  1284                           	psect	text10
  1285   002942                     __ptext10:
  1286                           	callstack 0
  1287   002942                     _POS_CURSOR:
  1288                           	callstack 123
  1289                           
  1290                           ; BSR set to: 3
  1291                           ;incstack = 0
  1292                           ;POS_CURSOR@fila stored from wreg
  1293   002942  6E05               	movwf	POS_CURSOR@fila^(0+1280),c
  1294   002944                     
  1295                           ;LCD.c: 6: void POS_CURSOR(unsigned char fila,unsigned char columna);LCD.c: 7: {;LCD.c: 
      +                          8:  if(fila == 1)
  1296   002944  0405               	decf	POS_CURSOR@fila^(0+1280),w,c
  1297   002946  A4D8               	btfss	status,2,c
  1298   002948  EFA8  F014         	goto	u421
  1299   00294C  EFAA  F014         	goto	u420
  1300   002950                     u421:
  1301   002950  EFB0  F014         	goto	l1325
  1302   002954                     u420:
  1303   002954                     
  1304                           ;LCD.c: 9:  {;LCD.c: 10:   ENVIA_LCD_CMD(0x80+columna);
  1305   002954  5004               	movf	POS_CURSOR@columna^(0+1280),w,c
  1306   002956  0F80               	addlw	128
  1307   002958  ECBE  F014         	call	_ENVIA_LCD_CMD
  1308                           
  1309                           ;LCD.c: 11:  }
  1310   00295C  EFBD  F014         	goto	l24
  1311   002960                     l1325:
  1312   002960  0E02               	movlw	2
  1313   002962  1805               	xorwf	POS_CURSOR@fila^(0+1280),w,c
  1314   002964  A4D8               	btfss	status,2,c
  1315   002966  EFB7  F014         	goto	u431
  1316   00296A  EFB9  F014         	goto	u430
  1317   00296E                     u431:
  1318   00296E  EFBD  F014         	goto	l24
  1319   002972                     u430:
  1320   002972                     
  1321                           ;LCD.c: 13:  {;LCD.c: 14:   ENVIA_LCD_CMD(0xC0+columna);
  1322   002972  5004               	movf	POS_CURSOR@columna^(0+1280),w,c
  1323   002974  0FC0               	addlw	192
  1324   002976  ECBE  F014         	call	_ENVIA_LCD_CMD
  1325   00297A                     l24:
  1326   00297A  0012               	return		;funcret
  1327   00297C                     __end_of_POS_CURSOR:
  1328                           	callstack 0
  1329                           
  1330 ;; *************** function _ENVIA_LCD_CMD *****************
  1331 ;; Defined at:
  1332 ;;		line 104 in file "LCD.c"
  1333 ;; Parameters:    Size  Location     Type
  1334 ;;  dato            1    wreg     unsigned char 
  1335 ;; Auto vars:     Size  Location     Type
  1336 ;;  dato            1    1[COMRAM] unsigned char 
  1337 ;;  aux             1    2[COMRAM] unsigned char 
  1338 ;; Return value:  Size  Location     Type
  1339 ;;                  1    wreg      void 
  1340 ;; Registers used:
  1341 ;;		wreg, status,2, status,0, cstack
  1342 ;; Tracked objects:
  1343 ;;		On entry : 0/0
  1344 ;;		On exit  : 0/0
  1345 ;;		Unchanged: 0/0
  1346 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1347 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1348 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1349 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1350 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1351 ;;Total ram usage:        2 bytes
  1352 ;; Hardware stack levels used: 1
  1353 ;; Hardware stack levels required when called: 2
  1354 ;; This function calls:
  1355 ;;		_ENVIA_NIBBLE
  1356 ;;		_LEER_LCD
  1357 ;; This function is called by:
  1358 ;;		_POS_CURSOR
  1359 ;;		_CURSOR_HOME
  1360 ;;		_CURSOR_ONOFF
  1361 ;;		_BORRAR_LCD
  1362 ;;		_LCD_CONFIG
  1363 ;;		_BLINK_CURSOR
  1364 ;;		_DISPLAY_ONOFF
  1365 ;;		_GENERACARACTER
  1366 ;; This function uses a non-reentrant model
  1367 ;;
  1368                           
  1369                           	psect	text11
  1370   00297C                     __ptext11:
  1371                           	callstack 0
  1372   00297C                     _ENVIA_LCD_CMD:
  1373                           	callstack 122
  1374                           
  1375                           ;incstack = 0
  1376                           ;ENVIA_LCD_CMD@dato stored from wreg
  1377   00297C  6E02               	movwf	ENVIA_LCD_CMD@dato^(0+1280),c
  1378   00297E                     
  1379                           ;LCD.c: 104: void ENVIA_LCD_CMD(unsigned char dato);LCD.c: 105: {;LCD.c: 106:  unsigned 
      +                          char aux;;LCD.c: 107:  LATDbits.LATD0 = 0;
  1380   00297E  90C1               	bcf	193,0,c	;volatile
  1381   002980                     
  1382                           ;LCD.c: 108:  LEER_LCD();
  1383   002980  ECC8  F013         	call	_LEER_LCD	;wreg free
  1384   002984                     
  1385                           ;LCD.c: 109:  TRISD = 0b00000000;
  1386   002984  0E00               	movlw	0
  1387   002986  6EC9               	movwf	201,c	;volatile
  1388   002988                     
  1389                           ;LCD.c: 111:         _delay(1200);
  1390   002988  0EF0               	movlw	240
  1391   00298A                     u497:
  1392   00298A  D000               	nop2	
  1393   00298C  2EE8               	decfsz	wreg,f,c
  1394   00298E  D7FD               	bra	u497
  1395   002990                     
  1396                           ;LCD.c: 112:         LATDbits.LATD1 = 0;
  1397   002990  92C1               	bcf	193,1,c	;volatile
  1398   002992                     
  1399                           ;LCD.c: 113:  LATDbits.LATD2 = 0;
  1400   002992  94C1               	bcf	193,2,c	;volatile
  1401   002994                     
  1402                           ;LCD.c: 114:  LATDbits.LATD0 = 0;
  1403   002994  90C1               	bcf	193,0,c	;volatile
  1404   002996                     
  1405                           ;LCD.c: 115:  aux = dato & 0xF0;
  1406   002996  5002               	movf	ENVIA_LCD_CMD@dato^(0+1280),w,c
  1407   002998  0BF0               	andlw	240
  1408   00299A  6E03               	movwf	ENVIA_LCD_CMD@aux^(0+1280),c
  1409   00299C                     
  1410                           ;LCD.c: 116:  ENVIA_NIBBLE(aux);
  1411   00299C  5003               	movf	ENVIA_LCD_CMD@aux^(0+1280),w,c
  1412   00299E  EC5C  F015         	call	_ENVIA_NIBBLE
  1413   0029A2                     
  1414                           ;LCD.c: 117:  aux = dato<<4;
  1415   0029A2  3802               	swapf	ENVIA_LCD_CMD@dato^(0+1280),w,c
  1416   0029A4  0BF0               	andlw	240
  1417   0029A6  6E03               	movwf	ENVIA_LCD_CMD@aux^(0+1280),c
  1418   0029A8                     
  1419                           ;LCD.c: 118:  ENVIA_NIBBLE(aux);
  1420   0029A8  5003               	movf	ENVIA_LCD_CMD@aux^(0+1280),w,c
  1421   0029AA  EC5C  F015         	call	_ENVIA_NIBBLE
  1422   0029AE  0012               	return		;funcret
  1423   0029B0                     __end_of_ENVIA_LCD_CMD:
  1424                           	callstack 0
  1425                           
  1426 ;; *************** function _ESCRIBE_MENSAJE *****************
  1427 ;; Defined at:
  1428 ;;		line 41 in file "LCD.c"
  1429 ;; Parameters:    Size  Location     Type
  1430 ;;  cadena          1    3[COMRAM] PTR const unsigned char 
  1431 ;;		 -> STR_1(12), 
  1432 ;;  tam             1    4[COMRAM] unsigned char 
  1433 ;; Auto vars:     Size  Location     Type
  1434 ;;  i               1    6[COMRAM] unsigned char 
  1435 ;; Return value:  Size  Location     Type
  1436 ;;                  1    wreg      void 
  1437 ;; Registers used:
  1438 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1439 ;; Tracked objects:
  1440 ;;		On entry : 0/0
  1441 ;;		On exit  : 0/0
  1442 ;;		Unchanged: 0/0
  1443 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1444 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1445 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1446 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1447 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1448 ;;Total ram usage:        4 bytes
  1449 ;; Hardware stack levels used: 1
  1450 ;; Hardware stack levels required when called: 3
  1451 ;; This function calls:
  1452 ;;		_ENVIA_CHAR
  1453 ;; This function is called by:
  1454 ;;		_main
  1455 ;; This function uses a non-reentrant model
  1456 ;;
  1457                           
  1458                           	psect	text12
  1459   0029B0                     __ptext12:
  1460                           	callstack 0
  1461   0029B0                     _ESCRIBE_MENSAJE:
  1462                           	callstack 123
  1463   0029B0                     
  1464                           ;LCD.c: 41: void ESCRIBE_MENSAJE(const char *cadena,unsigned char tam);LCD.c: 42: {;LCD.
      +                          c: 43:  unsigned char i = 0;
  1465   0029B0  0E00               	movlw	0
  1466   0029B2  6E07               	movwf	ESCRIBE_MENSAJE@i^(0+1280),c
  1467                           
  1468                           ;LCD.c: 44:  for(i = 0; i<tam; i++)
  1469   0029B4  0E00               	movlw	0
  1470   0029B6  6E07               	movwf	ESCRIBE_MENSAJE@i^(0+1280),c
  1471   0029B8  EFE8  F014         	goto	l1335
  1472   0029BC                     l1331:
  1473                           
  1474                           ;LCD.c: 45:  {;LCD.c: 46:   ENVIA_CHAR(cadena[i]);
  1475   0029BC  5004               	movf	ESCRIBE_MENSAJE@cadena^(0+1280),w,c
  1476   0029BE  2407               	addwf	ESCRIBE_MENSAJE@i^(0+1280),w,c
  1477   0029C0  6E06               	movwf	??_ESCRIBE_MENSAJE^(0+1280),c
  1478   0029C2  C506  F4F6         	movff	??_ESCRIBE_MENSAJE,tblptrl
  1479   0029C6                     	if	0	;There is only one active tblptr byte
  1480   0029C6                     	endif
  1481   0029C6                     	if	0	;tblptru may be non-zero
  1482   0029C6                     	endif
  1483   0029C6                     	if	0	;tblptru may be non-zero
  1484   0029C6                     	endif
  1485   0029C6  0008               	tblrd		*
  1486   0029C8  50F5               	movf	tablat,w,c
  1487   0029CA  ECF2  F014         	call	_ENVIA_CHAR
  1488   0029CE                     
  1489                           ;LCD.c: 47:  }
  1490   0029CE  2A07               	incf	ESCRIBE_MENSAJE@i^(0+1280),f,c
  1491   0029D0                     l1335:
  1492   0029D0  5005               	movf	ESCRIBE_MENSAJE@tam^(0+1280),w,c
  1493   0029D2  5C07               	subwf	ESCRIBE_MENSAJE@i^(0+1280),w,c
  1494   0029D4  A0D8               	btfss	status,0,c
  1495   0029D6  EFEF  F014         	goto	u441
  1496   0029DA  EFF1  F014         	goto	u440
  1497   0029DE                     u441:
  1498   0029DE  EFDE  F014         	goto	l1331
  1499   0029E2                     u440:
  1500   0029E2  0012               	return		;funcret
  1501   0029E4                     __end_of_ESCRIBE_MENSAJE:
  1502                           	callstack 0
  1503                           
  1504 ;; *************** function _ENVIA_CHAR *****************
  1505 ;; Defined at:
  1506 ;;		line 50 in file "LCD.c"
  1507 ;; Parameters:    Size  Location     Type
  1508 ;;  dato            1    wreg     unsigned char 
  1509 ;; Auto vars:     Size  Location     Type
  1510 ;;  dato            1    1[COMRAM] unsigned char 
  1511 ;;  aux             1    2[COMRAM] unsigned char 
  1512 ;; Return value:  Size  Location     Type
  1513 ;;                  1    wreg      void 
  1514 ;; Registers used:
  1515 ;;		wreg, status,2, status,0, cstack
  1516 ;; Tracked objects:
  1517 ;;		On entry : 0/0
  1518 ;;		On exit  : 0/0
  1519 ;;		Unchanged: 0/0
  1520 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1521 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1522 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1523 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1524 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1525 ;;Total ram usage:        2 bytes
  1526 ;; Hardware stack levels used: 1
  1527 ;; Hardware stack levels required when called: 2
  1528 ;; This function calls:
  1529 ;;		_ENVIA_NIBBLE
  1530 ;;		_LEER_LCD
  1531 ;; This function is called by:
  1532 ;;		_ESCRIBE_MENSAJE
  1533 ;;		_main
  1534 ;;		_GENERACARACTER
  1535 ;; This function uses a non-reentrant model
  1536 ;;
  1537                           
  1538                           	psect	text13
  1539   0029E4                     __ptext13:
  1540                           	callstack 0
  1541   0029E4                     _ENVIA_CHAR:
  1542                           	callstack 123
  1543                           
  1544                           ;incstack = 0
  1545                           ;ENVIA_CHAR@dato stored from wreg
  1546   0029E4  6E02               	movwf	ENVIA_CHAR@dato^(0+1280),c
  1547   0029E6                     
  1548                           ;LCD.c: 50: void ENVIA_CHAR(unsigned char dato);LCD.c: 51: {;LCD.c: 52:  unsigned char a
      +                          ux;;LCD.c: 53:  LATDbits.LATD0 = 1;
  1549   0029E6  80C1               	bsf	193,0,c	;volatile
  1550   0029E8                     
  1551                           ;LCD.c: 54:  LEER_LCD();
  1552   0029E8  ECC8  F013         	call	_LEER_LCD	;wreg free
  1553   0029EC                     
  1554                           ;LCD.c: 55:  TRISD = 0x00;
  1555   0029EC  0E00               	movlw	0
  1556   0029EE  6EC9               	movwf	201,c	;volatile
  1557   0029F0                     
  1558                           ;LCD.c: 56:         _delay(1200);
  1559   0029F0  0EF0               	movlw	240
  1560   0029F2                     u507:
  1561   0029F2  D000               	nop2	
  1562   0029F4  2EE8               	decfsz	wreg,f,c
  1563   0029F6  D7FD               	bra	u507
  1564   0029F8                     
  1565                           ;LCD.c: 58:  LATDbits.LATD1 = 0;
  1566   0029F8  92C1               	bcf	193,1,c	;volatile
  1567   0029FA                     
  1568                           ;LCD.c: 59:  LATDbits.LATD2 = 0;
  1569   0029FA  94C1               	bcf	193,2,c	;volatile
  1570   0029FC                     
  1571                           ;LCD.c: 60:  LATDbits.LATD0 = 1;
  1572   0029FC  80C1               	bsf	193,0,c	;volatile
  1573   0029FE                     
  1574                           ;LCD.c: 61:  aux = dato & 0xF0;
  1575   0029FE  5002               	movf	ENVIA_CHAR@dato^(0+1280),w,c
  1576   002A00  0BF0               	andlw	240
  1577   002A02  6E03               	movwf	ENVIA_CHAR@aux^(0+1280),c
  1578   002A04                     
  1579                           ;LCD.c: 62:  ENVIA_NIBBLE(aux);
  1580   002A04  5003               	movf	ENVIA_CHAR@aux^(0+1280),w,c
  1581   002A06  EC5C  F015         	call	_ENVIA_NIBBLE
  1582   002A0A                     
  1583                           ;LCD.c: 63:  aux = dato << 4;
  1584   002A0A  3802               	swapf	ENVIA_CHAR@dato^(0+1280),w,c
  1585   002A0C  0BF0               	andlw	240
  1586   002A0E  6E03               	movwf	ENVIA_CHAR@aux^(0+1280),c
  1587   002A10                     
  1588                           ;LCD.c: 64:  ENVIA_NIBBLE(aux);
  1589   002A10  5003               	movf	ENVIA_CHAR@aux^(0+1280),w,c
  1590   002A12  EC5C  F015         	call	_ENVIA_NIBBLE
  1591   002A16  0012               	return		;funcret
  1592   002A18                     __end_of_ENVIA_CHAR:
  1593                           	callstack 0
  1594                           
  1595 ;; *************** function _LEER_LCD *****************
  1596 ;; Defined at:
  1597 ;;		line 121 in file "LCD.c"
  1598 ;; Parameters:    Size  Location     Type
  1599 ;;		None
  1600 ;; Auto vars:     Size  Location     Type
  1601 ;;  aux             1    0[COMRAM] unsigned char 
  1602 ;; Return value:  Size  Location     Type
  1603 ;;                  1    wreg      void 
  1604 ;; Registers used:
  1605 ;;		wreg, status,2, status,0
  1606 ;; Tracked objects:
  1607 ;;		On entry : 0/0
  1608 ;;		On exit  : 0/0
  1609 ;;		Unchanged: 0/0
  1610 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1611 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1612 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1613 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1614 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1615 ;;Total ram usage:        1 bytes
  1616 ;; Hardware stack levels used: 1
  1617 ;; Hardware stack levels required when called: 1
  1618 ;; This function calls:
  1619 ;;		Nothing
  1620 ;; This function is called by:
  1621 ;;		_ENVIA_CHAR
  1622 ;;		_ENVIA_LCD_CMD
  1623 ;; This function uses a non-reentrant model
  1624 ;;
  1625                           
  1626                           	psect	text14
  1627   002790                     __ptext14:
  1628                           	callstack 0
  1629   002790                     _LEER_LCD:
  1630                           	callstack 122
  1631   002790                     
  1632                           ;LCD.c: 123:  unsigned char aux;;LCD.c: 124:  TRISD = 0xF8;
  1633   002790  0EF8               	movlw	248
  1634   002792  6EC9               	movwf	201,c	;volatile
  1635   002794                     
  1636                           ;LCD.c: 125:  LATDbits.LATD0 = 0;
  1637   002794  90C1               	bcf	193,0,c	;volatile
  1638   002796                     
  1639                           ;LCD.c: 126:  LATDbits.LATD1 = 1;
  1640   002796  82C1               	bsf	193,1,c	;volatile
  1641   002798                     
  1642                           ;LCD.c: 127:  LATDbits.LATD2 = 1;
  1643   002798  84C1               	bsf	193,2,c	;volatile
  1644   00279A                     
  1645                           ;LCD.c: 128:         _delay(1200);
  1646   00279A  0EF0               	movlw	240
  1647   00279C                     u517:
  1648   00279C  D000               	nop2	
  1649   00279E  2EE8               	decfsz	wreg,f,c
  1650   0027A0  D7FD               	bra	u517
  1651   0027A2                     
  1652                           ;LCD.c: 130:  aux = PORTD;
  1653   0027A2  C4D1 F501          	movff	1233,LEER_LCD@aux	;volatile
  1654   0027A6                     
  1655                           ;LCD.c: 131:  LATDbits.LATD2 = 0;
  1656   0027A6  94C1               	bcf	193,2,c	;volatile
  1657   0027A8                     
  1658                           ;LCD.c: 132:         _delay(1200);
  1659   0027A8  0EF0               	movlw	240
  1660   0027AA                     u527:
  1661   0027AA  D000               	nop2	
  1662   0027AC  2EE8               	decfsz	wreg,f,c
  1663   0027AE  D7FD               	bra	u527
  1664   0027B0                     
  1665                           ;LCD.c: 134:  LATDbits.LATD2 = 1;
  1666   0027B0  84C1               	bsf	193,2,c	;volatile
  1667   0027B2                     
  1668                           ;LCD.c: 135:         _delay(1200);
  1669   0027B2  0EF0               	movlw	240
  1670   0027B4                     u537:
  1671   0027B4  D000               	nop2	
  1672   0027B6  2EE8               	decfsz	wreg,f,c
  1673   0027B8  D7FD               	bra	u537
  1674   0027BA                     
  1675                           ;LCD.c: 137:  LATDbits.LATD2 = 0;
  1676   0027BA  94C1               	bcf	193,2,c	;volatile
  1677   0027BC                     l891:
  1678                           
  1679                           ;LCD.c: 138:  aux = aux & 0x80;
  1680   0027BC  5001               	movf	LEER_LCD@aux^(0+1280),w,c
  1681   0027BE  0B80               	andlw	128
  1682   0027C0  6E01               	movwf	LEER_LCD@aux^(0+1280),c
  1683                           
  1684                           ;LCD.c: 139:  while(aux == 0x80)
  1685   0027C2  EFF7  F013         	goto	l905
  1686   0027C6                     l67:
  1687                           
  1688                           ;LCD.c: 140:         {;LCD.c: 141:             LATDbits.LATD2 = 1;
  1689   0027C6  84C1               	bsf	193,2,c	;volatile
  1690   0027C8                     
  1691                           ;LCD.c: 142:             _delay(1200);
  1692   0027C8  0EF0               	movlw	240
  1693   0027CA                     u547:
  1694   0027CA  D000               	nop2	
  1695   0027CC  2EE8               	decfsz	wreg,f,c
  1696   0027CE  D7FD               	bra	u547
  1697   0027D0                     
  1698                           ;LCD.c: 143:             aux = PORTD;
  1699   0027D0  C4D1 F501          	movff	1233,LEER_LCD@aux	;volatile
  1700   0027D4                     
  1701                           ;LCD.c: 144:             LATDbits.LATD2 = 0;
  1702   0027D4  94C1               	bcf	193,2,c	;volatile
  1703                           
  1704                           ;LCD.c: 145:             _delay(1200);
  1705   0027D6  0EF0               	movlw	240
  1706   0027D8                     u557:
  1707   0027D8  D000               	nop2	
  1708   0027DA  2EE8               	decfsz	wreg,f,c
  1709   0027DC  D7FD               	bra	u557
  1710   0027DE                     
  1711                           ;LCD.c: 146:             LATDbits.LATD2 = 1;
  1712   0027DE  84C1               	bsf	193,2,c	;volatile
  1713                           
  1714                           ;LCD.c: 147:             _delay(1200);
  1715   0027E0  0EF0               	movlw	240
  1716   0027E2                     u567:
  1717   0027E2  D000               	nop2	
  1718   0027E4  2EE8               	decfsz	wreg,f,c
  1719   0027E6  D7FD               	bra	u567
  1720   0027E8                     
  1721                           ;LCD.c: 148:             LATDbits.LATD2 = 0;
  1722   0027E8  94C1               	bcf	193,2,c	;volatile
  1723   0027EA  EFDE  F013         	goto	l891
  1724   0027EE                     l905:
  1725                           
  1726                           ;LCD.c: 139:  while(aux == 0x80)
  1727   0027EE  0E80               	movlw	128
  1728   0027F0  1801               	xorwf	LEER_LCD@aux^(0+1280),w,c
  1729   0027F2  B4D8               	btfsc	status,2,c
  1730   0027F4  EFFE  F013         	goto	u11
  1731   0027F8  EF00  F014         	goto	u10
  1732   0027FC                     u11:
  1733   0027FC  EFE3  F013         	goto	l67
  1734   002800                     u10:
  1735   002800  0012               	return		;funcret
  1736   002802                     __end_of_LEER_LCD:
  1737                           	callstack 0
  1738                           
  1739 ;; *************** function _ENVIA_NIBBLE *****************
  1740 ;; Defined at:
  1741 ;;		line 93 in file "LCD.c"
  1742 ;; Parameters:    Size  Location     Type
  1743 ;;  dato            1    wreg     unsigned char 
  1744 ;; Auto vars:     Size  Location     Type
  1745 ;;  dato            1    0[COMRAM] unsigned char 
  1746 ;; Return value:  Size  Location     Type
  1747 ;;                  1    wreg      void 
  1748 ;; Registers used:
  1749 ;;		wreg, status,2, status,0
  1750 ;; Tracked objects:
  1751 ;;		On entry : 0/0
  1752 ;;		On exit  : 0/0
  1753 ;;		Unchanged: 0/0
  1754 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1755 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1756 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1757 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1758 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1759 ;;Total ram usage:        1 bytes
  1760 ;; Hardware stack levels used: 1
  1761 ;; Hardware stack levels required when called: 1
  1762 ;; This function calls:
  1763 ;;		Nothing
  1764 ;; This function is called by:
  1765 ;;		_ENVIA_CHAR
  1766 ;;		_LCD_CONFIG
  1767 ;;		_ENVIA_LCD_CMD
  1768 ;; This function uses a non-reentrant model
  1769 ;;
  1770                           
  1771                           	psect	text15
  1772   002AB8                     __ptext15:
  1773                           	callstack 0
  1774   002AB8                     _ENVIA_NIBBLE:
  1775                           	callstack 123
  1776                           
  1777                           ;incstack = 0
  1778                           ;ENVIA_NIBBLE@dato stored from wreg
  1779   002AB8  6E01               	movwf	ENVIA_NIBBLE@dato^(0+1280),c
  1780   002ABA                     
  1781                           ;LCD.c: 93: void ENVIA_NIBBLE(unsigned char dato);LCD.c: 94: {;LCD.c: 95:  LATD &= 0x0F;
  1782   002ABA  0E0F               	movlw	15
  1783   002ABC  16C1               	andwf	193,f,c	;volatile
  1784                           
  1785                           ;LCD.c: 96:  dato &= 0xF0;
  1786   002ABE  0EF0               	movlw	240
  1787   002AC0  1601               	andwf	ENVIA_NIBBLE@dato^(0+1280),f,c
  1788                           
  1789                           ;LCD.c: 97:  LATD|= dato;
  1790   002AC2  5001               	movf	ENVIA_NIBBLE@dato^(0+1280),w,c	;volatile
  1791   002AC4  12C1               	iorwf	193,f,c	;volatile
  1792   002AC6                     
  1793                           ;LCD.c: 98:  LATDbits.LATD2 = 1;
  1794   002AC6  84C1               	bsf	193,2,c	;volatile
  1795   002AC8                     
  1796                           ;LCD.c: 100:         _delay(1200);
  1797   002AC8  0EF0               	movlw	240
  1798   002ACA                     u577:
  1799   002ACA  D000               	nop2	
  1800   002ACC  2EE8               	decfsz	wreg,f,c
  1801   002ACE  D7FD               	bra	u577
  1802   002AD0                     
  1803                           ;LCD.c: 101:  LATDbits.LATD2 = 0;
  1804   002AD0  94C1               	bcf	193,2,c	;volatile
  1805   002AD2  0012               	return		;funcret
  1806   002AD4                     __end_of_ENVIA_NIBBLE:
  1807                           	callstack 0
  1808                           
  1809 ;; *************** function _CCP1_ISR *****************
  1810 ;; Defined at:
  1811 ;;		line 78 in file "maincode02.c"
  1812 ;; Parameters:    Size  Location     Type
  1813 ;;		None
  1814 ;; Auto vars:     Size  Location     Type
  1815 ;;		None
  1816 ;; Return value:  Size  Location     Type
  1817 ;;                  1    wreg      void 
  1818 ;; Registers used:
  1819 ;;		wreg, status,2, status,0
  1820 ;; Tracked objects:
  1821 ;;		On entry : 0/0
  1822 ;;		On exit  : 0/0
  1823 ;;		Unchanged: 0/0
  1824 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1825 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1826 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1827 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1828 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1829 ;;Total ram usage:        0 bytes
  1830 ;; Hardware stack levels used: 1
  1831 ;; This function calls:
  1832 ;;		Nothing
  1833 ;; This function is called by:
  1834 ;;		Interrupt level 2
  1835 ;; This function uses a non-reentrant model
  1836 ;;
  1837                           
  1838                           	psect	text16
  1839   00271C                     __ptext16:
  1840                           	callstack 0
  1841   00271C                     _CCP1_ISR:
  1842                           	callstack 122
  1843   00271C                     
  1844                           ;maincode02.c: 79:     PIR3bits.CCP1IF = 0;
  1845   00271C  9CB1               	bcf	177,6,c	;volatile
  1846   00271E                     
  1847                           ;maincode02.c: 80:     if(centesimas == 99){
  1848   00271E  0E63               	movlw	99
  1849   002720  1810               	xorwf	_centesimas^(0+1280),w,c
  1850   002722  A4D8               	btfss	status,2,c
  1851   002724  EF96  F013         	goto	i2u24_41
  1852   002728  EF98  F013         	goto	i2u24_40
  1853   00272C                     i2u24_41:
  1854   00272C  EFC6  F013         	goto	i2l1223
  1855   002730                     i2u24_40:
  1856   002730                     
  1857                           ;maincode02.c: 81:         centesimas = 0;
  1858   002730  0E00               	movlw	0
  1859   002732  6E10               	movwf	_centesimas^(0+1280),c
  1860   002734                     
  1861                           ;maincode02.c: 82:         if(segundos == 59){
  1862   002734  0E3B               	movlw	59
  1863   002736  1811               	xorwf	_segundos^(0+1280),w,c
  1864   002738  A4D8               	btfss	status,2,c
  1865   00273A  EFA1  F013         	goto	i2u25_41
  1866   00273E  EFA3  F013         	goto	i2u25_40
  1867   002742                     i2u25_41:
  1868   002742  EFC3  F013         	goto	i2l1221
  1869   002746                     i2u25_40:
  1870   002746                     
  1871                           ;maincode02.c: 83:             segundos = 0;
  1872   002746  0E00               	movlw	0
  1873   002748  6E11               	movwf	_segundos^(0+1280),c
  1874   00274A                     
  1875                           ;maincode02.c: 84:             if(minutos == 59){
  1876   00274A  0E3B               	movlw	59
  1877   00274C  1812               	xorwf	_minutos^(0+1280),w,c
  1878   00274E  A4D8               	btfss	status,2,c
  1879   002750  EFAC  F013         	goto	i2u26_41
  1880   002754  EFAE  F013         	goto	i2u26_40
  1881   002758                     i2u26_41:
  1882   002758  EFC0  F013         	goto	i2l1219
  1883   00275C                     i2u26_40:
  1884   00275C                     
  1885                           ;maincode02.c: 85:                 minutos = 0;
  1886   00275C  0E00               	movlw	0
  1887   00275E  6E12               	movwf	_minutos^(0+1280),c
  1888   002760                     
  1889                           ;maincode02.c: 86:                 if(horas == 23){
  1890   002760  0E17               	movlw	23
  1891   002762  1813               	xorwf	_horas^(0+1280),w,c
  1892   002764  A4D8               	btfss	status,2,c
  1893   002766  EFB7  F013         	goto	i2u27_41
  1894   00276A  EFB9  F013         	goto	i2u27_40
  1895   00276E                     i2u27_41:
  1896   00276E  EFBD  F013         	goto	i2l1217
  1897   002772                     i2u27_40:
  1898   002772                     
  1899                           ;maincode02.c: 87:                     horas = 0;
  1900   002772  0E00               	movlw	0
  1901   002774  6E13               	movwf	_horas^(0+1280),c
  1902                           
  1903                           ;maincode02.c: 88:                 }
  1904   002776  EFC7  F013         	goto	i2l174
  1905   00277A                     i2l1217:
  1906                           
  1907                           ;maincode02.c: 90:                     horas++;
  1908   00277A  2A13               	incf	_horas^(0+1280),f,c
  1909   00277C  EFC7  F013         	goto	i2l174
  1910   002780                     i2l1219:
  1911                           
  1912                           ;maincode02.c: 94:                 minutos++;
  1913   002780  2A12               	incf	_minutos^(0+1280),f,c
  1914   002782  EFC7  F013         	goto	i2l174
  1915   002786                     i2l1221:
  1916                           
  1917                           ;maincode02.c: 98:             segundos++;
  1918   002786  2A11               	incf	_segundos^(0+1280),f,c
  1919   002788  EFC7  F013         	goto	i2l174
  1920   00278C                     i2l1223:
  1921                           
  1922                           ;maincode02.c: 102:         centesimas++;
  1923   00278C  2A10               	incf	_centesimas^(0+1280),f,c
  1924   00278E                     i2l174:
  1925   00278E  0011               	retfie		f
  1926   002790                     __end_of_CCP1_ISR:
  1927                           	callstack 0
  1928                           
  1929 ;; *************** function _INT0_ISR *****************
  1930 ;; Defined at:
  1931 ;;		line 106 in file "maincode02.c"
  1932 ;; Parameters:    Size  Location     Type
  1933 ;;		None
  1934 ;; Auto vars:     Size  Location     Type
  1935 ;;		None
  1936 ;; Return value:  Size  Location     Type
  1937 ;;                  1    wreg      void 
  1938 ;; Registers used:
  1939 ;;		wreg, status,2, status,0
  1940 ;; Tracked objects:
  1941 ;;		On entry : 0/0
  1942 ;;		On exit  : 0/0
  1943 ;;		Unchanged: 0/0
  1944 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1945 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1946 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1947 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1948 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1949 ;;Total ram usage:        0 bytes
  1950 ;; Hardware stack levels used: 1
  1951 ;; This function calls:
  1952 ;;		Nothing
  1953 ;; This function is called by:
  1954 ;;		Interrupt level 2
  1955 ;; This function uses a non-reentrant model
  1956 ;;
  1957                           
  1958                           	psect	text17
  1959   002A78                     __ptext17:
  1960                           	callstack 0
  1961   002A78                     _INT0_ISR:
  1962                           	callstack 122
  1963   002A78                     
  1964                           ;maincode02.c: 107:     PIR1bits.INT0IF = 0;
  1965   002A78  90AF               	bcf	175,0,c	;volatile
  1966   002A7A                     
  1967                           ;maincode02.c: 108:     if(horas == 23){
  1968   002A7A  0E17               	movlw	23
  1969   002A7C  1813               	xorwf	_horas^(0+1280),w,c
  1970   002A7E  A4D8               	btfss	status,2,c
  1971   002A80  EF44  F015         	goto	i2u28_41
  1972   002A84  EF46  F015         	goto	i2u28_40
  1973   002A88                     i2u28_41:
  1974   002A88  EF4A  F015         	goto	i2l1231
  1975   002A8C                     i2u28_40:
  1976   002A8C                     
  1977                           ;maincode02.c: 109:         horas = 0;
  1978   002A8C  0E00               	movlw	0
  1979   002A8E  6E13               	movwf	_horas^(0+1280),c
  1980                           
  1981                           ;maincode02.c: 110:     }
  1982   002A90  EF4B  F015         	goto	i2l181
  1983   002A94                     i2l1231:
  1984                           
  1985                           ;maincode02.c: 112:         horas++;
  1986   002A94  2A13               	incf	_horas^(0+1280),f,c
  1987   002A96                     i2l181:
  1988   002A96  0011               	retfie		f
  1989   002A98                     __end_of_INT0_ISR:
  1990                           	callstack 0
  1991                           
  1992 ;; *************** function _INT1_ISR *****************
  1993 ;; Defined at:
  1994 ;;		line 116 in file "maincode02.c"
  1995 ;; Parameters:    Size  Location     Type
  1996 ;;		None
  1997 ;; Auto vars:     Size  Location     Type
  1998 ;;		None
  1999 ;; Return value:  Size  Location     Type
  2000 ;;                  1    wreg      void 
  2001 ;; Registers used:
  2002 ;;		wreg, status,2, status,0
  2003 ;; Tracked objects:
  2004 ;;		On entry : 0/0
  2005 ;;		On exit  : 0/0
  2006 ;;		Unchanged: 0/0
  2007 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2008 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2009 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2010 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2011 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2012 ;;Total ram usage:        0 bytes
  2013 ;; Hardware stack levels used: 1
  2014 ;; This function calls:
  2015 ;;		Nothing
  2016 ;; This function is called by:
  2017 ;;		Interrupt level 2
  2018 ;; This function uses a non-reentrant model
  2019 ;;
  2020                           
  2021                           	psect	text18
  2022   002A98                     __ptext18:
  2023                           	callstack 0
  2024   002A98                     _INT1_ISR:
  2025                           	callstack 122
  2026   002A98                     
  2027                           ;maincode02.c: 117:     PIR6bits.INT1IF = 0;
  2028   002A98  90B4               	bcf	180,0,c	;volatile
  2029   002A9A                     
  2030                           ;maincode02.c: 118:     if(minutos == 59){
  2031   002A9A  0E3B               	movlw	59
  2032   002A9C  1812               	xorwf	_minutos^(0+1280),w,c
  2033   002A9E  A4D8               	btfss	status,2,c
  2034   002AA0  EF54  F015         	goto	i2u29_41
  2035   002AA4  EF56  F015         	goto	i2u29_40
  2036   002AA8                     i2u29_41:
  2037   002AA8  EF5A  F015         	goto	i2l1239
  2038   002AAC                     i2u29_40:
  2039   002AAC                     
  2040                           ;maincode02.c: 119:         minutos = 0;
  2041   002AAC  0E00               	movlw	0
  2042   002AAE  6E12               	movwf	_minutos^(0+1280),c
  2043                           
  2044                           ;maincode02.c: 120:     }
  2045   002AB0  EF5B  F015         	goto	i2l188
  2046   002AB4                     i2l1239:
  2047                           
  2048                           ;maincode02.c: 122:         minutos++;
  2049   002AB4  2A12               	incf	_minutos^(0+1280),f,c
  2050   002AB6                     i2l188:
  2051   002AB6  0011               	retfie		f
  2052   002AB8                     __end_of_INT1_ISR:
  2053                           	callstack 0
  2054                           
  2055 ;; *************** function _DEFAULT_ISR *****************
  2056 ;; Defined at:
  2057 ;;		line 126 in file "maincode02.c"
  2058 ;; Parameters:    Size  Location     Type
  2059 ;;		None
  2060 ;; Auto vars:     Size  Location     Type
  2061 ;;		None
  2062 ;; Return value:  Size  Location     Type
  2063 ;;                  1    wreg      void 
  2064 ;; Registers used:
  2065 ;;		None
  2066 ;; Tracked objects:
  2067 ;;		On entry : 0/0
  2068 ;;		On exit  : 0/0
  2069 ;;		Unchanged: 0/0
  2070 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2071 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2072 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2073 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2074 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2075 ;;Total ram usage:        0 bytes
  2076 ;; Hardware stack levels used: 1
  2077 ;; This function calls:
  2078 ;;		Nothing
  2079 ;; This function is called by:
  2080 ;;		Interrupt level 2
  2081 ;; This function uses a non-reentrant model
  2082 ;;
  2083                           
  2084                           	psect	text19
  2085   002AE8                     __ptext19:
  2086                           	callstack 0
  2087   002AE8                     _DEFAULT_ISR:
  2088                           	callstack 122
  2089   002AE8  0011               	retfie		f
  2090   002AEA                     __end_of_DEFAULT_ISR:
  2091                           	callstack 0
  2092                           
  2093                           ;
  2094                           ; Interrupt Vector Table @ 0x8
  2095                           ;
  2096                           
  2097                           	psect	ivt0x8
  2098   000008                     __pivt0x8:
  2099                           	callstack 0
  2100   000008                     ivt0x8_base:
  2101                           	callstack 0
  2102                           
  2103                           ; Vector 0 : SWINT
  2104   000008  0ABA               	dw	_DEFAULT_ISR shr (0+2)
  2105                           
  2106                           ; Vector 1 : HLVD
  2107   00000A  0ABA               	dw	_DEFAULT_ISR shr (0+2)
  2108                           
  2109                           ; Vector 2 : OSF
  2110   00000C  0ABA               	dw	_DEFAULT_ISR shr (0+2)
  2111                           
  2112                           ; Vector 3 : CSW
  2113   00000E  0ABA               	dw	_DEFAULT_ISR shr (0+2)
  2114                           
  2115                           ; Vector 4 : Undefined
  2116   000010  0040               	dw	ivt0x8_undefint shr (0+2)
  2117                           
  2118                           ; Vector 5 : CLC1
  2119   000012  0ABA               	dw	_DEFAULT_ISR shr (0+2)
  2120                           
  2121                           ; Vector 6 : Undefined
  2122   000014  0040               	dw	ivt0x8_undefint shr (0+2)
  2123                           
  2124                           ; Vector 7 : IOC
  2125   000016  0ABA               	dw	_DEFAULT_ISR shr (0+2)
  2126                           
  2127                           ; Vector 8 : INT0
  2128   000018  0A9E               	dw	_INT0_ISR shr (0+2)
  2129                           
  2130                           ; Vector 9 : ZCD
  2131   00001A  0ABA               	dw	_DEFAULT_ISR shr (0+2)
  2132                           
  2133                           ; Vector 10 : AD
  2134   00001C  0ABA               	dw	_DEFAULT_ISR shr (0+2)
  2135                           
  2136                           ; Vector 11 : ACT
  2137   00001E  0ABA               	dw	_DEFAULT_ISR shr (0+2)
  2138                           
  2139                           ; Vector 12 : CMP1
  2140   000020  0ABA               	dw	_DEFAULT_ISR shr (0+2)
  2141                           
  2142                           ; Vector 13 : SMT1
  2143   000022  0ABA               	dw	_DEFAULT_ISR shr (0+2)
  2144                           
  2145                           ; Vector 14 : SMT1PRA
  2146   000024  0ABA               	dw	_DEFAULT_ISR shr (0+2)
  2147                           
  2148                           ; Vector 15 : SMT1PRW
  2149   000026  0ABA               	dw	_DEFAULT_ISR shr (0+2)
  2150                           
  2151                           ; Vector 16 : ADT
  2152   000028  0ABA               	dw	_DEFAULT_ISR shr (0+2)
  2153                           
  2154                           ; Vector 17 : Undefined
  2155   00002A  0040               	dw	ivt0x8_undefint shr (0+2)
  2156                           
  2157                           ; Vector 18 : Undefined
  2158   00002C  0040               	dw	ivt0x8_undefint shr (0+2)
  2159                           
  2160                           ; Vector 19 : Undefined
  2161   00002E  0040               	dw	ivt0x8_undefint shr (0+2)
  2162                           
  2163                           ; Vector 20 : DMA1SCNT
  2164   000030  0ABA               	dw	_DEFAULT_ISR shr (0+2)
  2165                           
  2166                           ; Vector 21 : DMA1DCNT
  2167   000032  0ABA               	dw	_DEFAULT_ISR shr (0+2)
  2168                           
  2169                           ; Vector 22 : DMA1OR
  2170   000034  0ABA               	dw	_DEFAULT_ISR shr (0+2)
  2171                           
  2172                           ; Vector 23 : DMA1A
  2173   000036  0ABA               	dw	_DEFAULT_ISR shr (0+2)
  2174                           
  2175                           ; Vector 24 : SPI1RX
  2176   000038  0ABA               	dw	_DEFAULT_ISR shr (0+2)
  2177                           
  2178                           ; Vector 25 : SPI1TX
  2179   00003A  0ABA               	dw	_DEFAULT_ISR shr (0+2)
  2180                           
  2181                           ; Vector 26 : SPI1
  2182   00003C  0ABA               	dw	_DEFAULT_ISR shr (0+2)
  2183                           
  2184                           ; Vector 27 : TMR2
  2185   00003E  0ABA               	dw	_DEFAULT_ISR shr (0+2)
  2186                           
  2187                           ; Vector 28 : TMR1
  2188   000040  0ABA               	dw	_DEFAULT_ISR shr (0+2)
  2189                           
  2190                           ; Vector 29 : TMR1G
  2191   000042  0ABA               	dw	_DEFAULT_ISR shr (0+2)
  2192                           
  2193                           ; Vector 30 : CCP1
  2194   000044  09C7               	dw	_CCP1_ISR shr (0+2)
  2195                           
  2196                           ; Vector 31 : TMR0
  2197   000046  0ABA               	dw	_DEFAULT_ISR shr (0+2)
  2198                           
  2199                           ; Vector 32 : U1RX
  2200   000048  0ABA               	dw	_DEFAULT_ISR shr (0+2)
  2201                           
  2202                           ; Vector 33 : U1TX
  2203   00004A  0ABA               	dw	_DEFAULT_ISR shr (0+2)
  2204                           
  2205                           ; Vector 34 : U1E
  2206   00004C  0ABA               	dw	_DEFAULT_ISR shr (0+2)
  2207                           
  2208                           ; Vector 35 : U1
  2209   00004E  0ABA               	dw	_DEFAULT_ISR shr (0+2)
  2210                           
  2211                           ; Vector 36 : Undefined
  2212   000050  0040               	dw	ivt0x8_undefint shr (0+2)
  2213                           
  2214                           ; Vector 37 : Undefined
  2215   000052  0040               	dw	ivt0x8_undefint shr (0+2)
  2216                           
  2217                           ; Vector 38 : PWM1PR
  2218   000054  0ABA               	dw	_DEFAULT_ISR shr (0+2)
  2219                           
  2220                           ; Vector 39 : PWM1
  2221   000056  0ABA               	dw	_DEFAULT_ISR shr (0+2)
  2222                           
  2223                           ; Vector 40 : SPI2RX
  2224   000058  0ABA               	dw	_DEFAULT_ISR shr (0+2)
  2225                           
  2226                           ; Vector 41 : SPI2TX
  2227   00005A  0ABA               	dw	_DEFAULT_ISR shr (0+2)
  2228                           
  2229                           ; Vector 42 : SPI2
  2230   00005C  0ABA               	dw	_DEFAULT_ISR shr (0+2)
  2231                           
  2232                           ; Vector 43 : Undefined
  2233   00005E  0040               	dw	ivt0x8_undefint shr (0+2)
  2234                           
  2235                           ; Vector 44 : TMR3
  2236   000060  0ABA               	dw	_DEFAULT_ISR shr (0+2)
  2237                           
  2238                           ; Vector 45 : TMR3G
  2239   000062  0ABA               	dw	_DEFAULT_ISR shr (0+2)
  2240                           
  2241                           ; Vector 46 : PWM2PR
  2242   000064  0ABA               	dw	_DEFAULT_ISR shr (0+2)
  2243                           
  2244                           ; Vector 47 : PWM2
  2245   000066  0ABA               	dw	_DEFAULT_ISR shr (0+2)
  2246                           
  2247                           ; Vector 48 : INT1
  2248   000068  0AA6               	dw	_INT1_ISR shr (0+2)
  2249                           
  2250                           ; Vector 49 : CLC2
  2251   00006A  0ABA               	dw	_DEFAULT_ISR shr (0+2)
  2252                           
  2253                           ; Vector 50 : CWG1
  2254   00006C  0ABA               	dw	_DEFAULT_ISR shr (0+2)
  2255                           
  2256                           ; Vector 51 : NCO1
  2257   00006E  0ABA               	dw	_DEFAULT_ISR shr (0+2)
  2258                           
  2259                           ; Vector 52 : DMA2SCNT
  2260   000070  0ABA               	dw	_DEFAULT_ISR shr (0+2)
  2261                           
  2262                           ; Vector 53 : DMA2DCNT
  2263   000072  0ABA               	dw	_DEFAULT_ISR shr (0+2)
  2264                           
  2265                           ; Vector 54 : DMA2OR
  2266   000074  0ABA               	dw	_DEFAULT_ISR shr (0+2)
  2267                           
  2268                           ; Vector 55 : DMA2A
  2269   000076  0ABA               	dw	_DEFAULT_ISR shr (0+2)
  2270                           
  2271                           ; Vector 56 : I2C1RX
  2272   000078  0ABA               	dw	_DEFAULT_ISR shr (0+2)
  2273                           
  2274                           ; Vector 57 : I2C1TX
  2275   00007A  0ABA               	dw	_DEFAULT_ISR shr (0+2)
  2276                           
  2277                           ; Vector 58 : I2C1
  2278   00007C  0ABA               	dw	_DEFAULT_ISR shr (0+2)
  2279                           
  2280                           ; Vector 59 : I2C1E
  2281   00007E  0ABA               	dw	_DEFAULT_ISR shr (0+2)
  2282                           
  2283                           ; Vector 60 : Undefined
  2284   000080  0040               	dw	ivt0x8_undefint shr (0+2)
  2285                           
  2286                           ; Vector 61 : CLC3
  2287   000082  0ABA               	dw	_DEFAULT_ISR shr (0+2)
  2288                           
  2289                           ; Vector 62 : PWM3PR
  2290   000084  0ABA               	dw	_DEFAULT_ISR shr (0+2)
  2291                           
  2292                           ; Vector 63 : PWM3
  2293   000086  0ABA               	dw	_DEFAULT_ISR shr (0+2)
  2294                           
  2295                           ; Vector 64 : U2RX
  2296   000088  0ABA               	dw	_DEFAULT_ISR shr (0+2)
  2297                           
  2298                           ; Vector 65 : U2TX
  2299   00008A  0ABA               	dw	_DEFAULT_ISR shr (0+2)
  2300                           
  2301                           ; Vector 66 : U2E
  2302   00008C  0ABA               	dw	_DEFAULT_ISR shr (0+2)
  2303                           
  2304                           ; Vector 67 : U2
  2305   00008E  0ABA               	dw	_DEFAULT_ISR shr (0+2)
  2306                           
  2307                           ; Vector 68 : TMR5
  2308   000090  0ABA               	dw	_DEFAULT_ISR shr (0+2)
  2309                           
  2310                           ; Vector 69 : TMR5G
  2311   000092  0ABA               	dw	_DEFAULT_ISR shr (0+2)
  2312                           
  2313                           ; Vector 70 : CCP2
  2314   000094  0ABA               	dw	_DEFAULT_ISR shr (0+2)
  2315                           
  2316                           ; Vector 71 : SCAN
  2317   000096  0ABA               	dw	_DEFAULT_ISR shr (0+2)
  2318                           
  2319                           ; Vector 72 : U3RX
  2320   000098  0ABA               	dw	_DEFAULT_ISR shr (0+2)
  2321                           
  2322                           ; Vector 73 : U3TX
  2323   00009A  0ABA               	dw	_DEFAULT_ISR shr (0+2)
  2324                           
  2325                           ; Vector 74 : U3E
  2326   00009C  0ABA               	dw	_DEFAULT_ISR shr (0+2)
  2327                           
  2328                           ; Vector 75 : U3
  2329   00009E  0ABA               	dw	_DEFAULT_ISR shr (0+2)
  2330                           
  2331                           ; Vector 76 : Undefined
  2332   0000A0  0040               	dw	ivt0x8_undefint shr (0+2)
  2333                           
  2334                           ; Vector 77 : CLC4
  2335   0000A2  0ABA               	dw	_DEFAULT_ISR shr (0+2)
  2336                           
  2337                           ; Vector 78 : Undefined
  2338   0000A4  0040               	dw	ivt0x8_undefint shr (0+2)
  2339                           
  2340                           ; Vector 79 : Undefined
  2341   0000A6  0040               	dw	ivt0x8_undefint shr (0+2)
  2342                           
  2343                           ; Vector 80 : INT2
  2344   0000A8  0ABA               	dw	_DEFAULT_ISR shr (0+2)
  2345                           
  2346                           ; Vector 81 : CLC5
  2347   0000AA  0ABA               	dw	_DEFAULT_ISR shr (0+2)
  2348                           
  2349                           ; Vector 82 : CWG2
  2350   0000AC  0ABA               	dw	_DEFAULT_ISR shr (0+2)
  2351                           
  2352                           ; Vector 83 : NCO2
  2353   0000AE  0ABA               	dw	_DEFAULT_ISR shr (0+2)
  2354                           
  2355                           ; Vector 84 : DMA3SCNT
  2356   0000B0  0ABA               	dw	_DEFAULT_ISR shr (0+2)
  2357                           
  2358                           ; Vector 85 : DMA3DCNT
  2359   0000B2  0ABA               	dw	_DEFAULT_ISR shr (0+2)
  2360                           
  2361                           ; Vector 86 : DMA3OR
  2362   0000B4  0ABA               	dw	_DEFAULT_ISR shr (0+2)
  2363                           
  2364                           ; Vector 87 : DMA3A
  2365   0000B6  0ABA               	dw	_DEFAULT_ISR shr (0+2)
  2366                           
  2367                           ; Vector 88 : CCP3
  2368   0000B8  0ABA               	dw	_DEFAULT_ISR shr (0+2)
  2369                           
  2370                           ; Vector 89 : CLC6
  2371   0000BA  0ABA               	dw	_DEFAULT_ISR shr (0+2)
  2372                           
  2373                           ; Vector 90 : CWG3
  2374   0000BC  0ABA               	dw	_DEFAULT_ISR shr (0+2)
  2375                           
  2376                           ; Vector 91 : TMR4
  2377   0000BE  0ABA               	dw	_DEFAULT_ISR shr (0+2)
  2378                           
  2379                           ; Vector 92 : DMA4SCNT
  2380   0000C0  0ABA               	dw	_DEFAULT_ISR shr (0+2)
  2381                           
  2382                           ; Vector 93 : DMA4DCNT
  2383   0000C2  0ABA               	dw	_DEFAULT_ISR shr (0+2)
  2384                           
  2385                           ; Vector 94 : DMA4OR
  2386   0000C4  0ABA               	dw	_DEFAULT_ISR shr (0+2)
  2387                           
  2388                           ; Vector 95 : DMA4A
  2389   0000C6  0ABA               	dw	_DEFAULT_ISR shr (0+2)
  2390                           
  2391                           ; Vector 96 : U4RX
  2392   0000C8  0ABA               	dw	_DEFAULT_ISR shr (0+2)
  2393                           
  2394                           ; Vector 97 : U4TX
  2395   0000CA  0ABA               	dw	_DEFAULT_ISR shr (0+2)
  2396                           
  2397                           ; Vector 98 : U4E
  2398   0000CC  0ABA               	dw	_DEFAULT_ISR shr (0+2)
  2399                           
  2400                           ; Vector 99 : U4
  2401   0000CE  0ABA               	dw	_DEFAULT_ISR shr (0+2)
  2402                           
  2403                           ; Vector 100 : DMA5SCNT
  2404   0000D0  0ABA               	dw	_DEFAULT_ISR shr (0+2)
  2405                           
  2406                           ; Vector 101 : DMA5DCNT
  2407   0000D2  0ABA               	dw	_DEFAULT_ISR shr (0+2)
  2408                           
  2409                           ; Vector 102 : DMA5OR
  2410   0000D4  0ABA               	dw	_DEFAULT_ISR shr (0+2)
  2411                           
  2412                           ; Vector 103 : DMA5A
  2413   0000D6  0ABA               	dw	_DEFAULT_ISR shr (0+2)
  2414                           
  2415                           ; Vector 104 : U5RX
  2416   0000D8  0ABA               	dw	_DEFAULT_ISR shr (0+2)
  2417                           
  2418                           ; Vector 105 : U5TX
  2419   0000DA  0ABA               	dw	_DEFAULT_ISR shr (0+2)
  2420                           
  2421                           ; Vector 106 : U5E
  2422   0000DC  0ABA               	dw	_DEFAULT_ISR shr (0+2)
  2423                           
  2424                           ; Vector 107 : U5
  2425   0000DE  0ABA               	dw	_DEFAULT_ISR shr (0+2)
  2426                           
  2427                           ; Vector 108 : DMA6SCNT
  2428   0000E0  0ABA               	dw	_DEFAULT_ISR shr (0+2)
  2429                           
  2430                           ; Vector 109 : DMA6DCNT
  2431   0000E2  0ABA               	dw	_DEFAULT_ISR shr (0+2)
  2432                           
  2433                           ; Vector 110 : DMA6OR
  2434   0000E4  0ABA               	dw	_DEFAULT_ISR shr (0+2)
  2435                           
  2436                           ; Vector 111 : DMA6A
  2437   0000E6  0ABA               	dw	_DEFAULT_ISR shr (0+2)
  2438                           
  2439                           ; Vector 112 : Undefined
  2440   0000E8  0040               	dw	ivt0x8_undefint shr (0+2)
  2441                           
  2442                           ; Vector 113 : CLC7
  2443   0000EA  0ABA               	dw	_DEFAULT_ISR shr (0+2)
  2444                           
  2445                           ; Vector 114 : CMP2
  2446   0000EC  0ABA               	dw	_DEFAULT_ISR shr (0+2)
  2447                           
  2448                           ; Vector 115 : NCO3
  2449   0000EE  0ABA               	dw	_DEFAULT_ISR shr (0+2)
  2450                           
  2451                           ; Vector 116 : Undefined
  2452   0000F0  0040               	dw	ivt0x8_undefint shr (0+2)
  2453                           
  2454                           ; Vector 117 : Undefined
  2455   0000F2  0040               	dw	ivt0x8_undefint shr (0+2)
  2456                           
  2457                           ; Vector 118 : Undefined
  2458   0000F4  0040               	dw	ivt0x8_undefint shr (0+2)
  2459                           
  2460                           ; Vector 119 : Undefined
  2461   0000F6  0040               	dw	ivt0x8_undefint shr (0+2)
  2462                           
  2463                           ; Vector 120 : NVM
  2464   0000F8  0ABA               	dw	_DEFAULT_ISR shr (0+2)
  2465                           
  2466                           ; Vector 121 : CLC8
  2467   0000FA  0ABA               	dw	_DEFAULT_ISR shr (0+2)
  2468                           
  2469                           ; Vector 122 : CRC
  2470   0000FC  0ABA               	dw	_DEFAULT_ISR shr (0+2)
  2471                           
  2472                           ; Vector 123 : TMR6
  2473   0000FE  0ABA               	dw	_DEFAULT_ISR shr (0+2)
  2474   000100                     ivt0x8_undefint:
  2475                           	callstack 0
  2476   000100  00FF               	reset	
  2477                           
  2478                           	psect	rparam
  2479   000000                     
  2480                           	psect	config
  2481                           
  2482                           ;Config register CONFIG1 @ 0x300000
  2483                           ;	External Oscillator Selection
  2484                           ;	FEXTOSC = OFF, Oscillator not enabled
  2485                           ;	Reset Oscillator Selection
  2486                           ;	RSTOSC = EXTOSC, EXTOSC operating per FEXTOSC bits (device manufacturing default)
  2487   300000                     	org	3145728
  2488   300000  FC                 	db	252
  2489                           
  2490                           ;Config register CONFIG2 @ 0x300001
  2491                           ;	Clock out Enable bit
  2492                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
  2493                           ;	PRLOCKED One-Way Set Enable bit
  2494                           ;	PR1WAY = ON, PRLOCKED bit can be cleared and set only once
  2495                           ;	Clock Switch Enable bit
  2496                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
  2497                           ;	Fail-Safe Clock Monitor Enable bit
  2498                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
  2499   300001                     	org	3145729
  2500   300001  FF                 	db	255
  2501                           
  2502                           ;Config register CONFIG3 @ 0x300002
  2503                           ;	MCLR Enable bit
  2504                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
  2505                           ;	Power-up timer selection bits
  2506                           ;	PWRTS = PWRT_64, PWRT set at 64ms
  2507                           ;	Multi-vector enable bit
  2508                           ;	MVECEN = ON, Multi-vector enabled, Vector table used for interrupts
  2509                           ;	IVTLOCK bit One-way set enable bit
  2510                           ;	IVT1WAY = ON, IVTLOCKED bit can be cleared and set only once
  2511                           ;	Low Power BOR Enable bit
  2512                           ;	LPBOREN = OFF, Low-Power BOR disabled
  2513                           ;	Brown-out Reset Enable bits
  2514                           ;	BOREN = OFF, Brown-out Reset disabled
  2515   300002                     	org	3145730
  2516   300002  3D                 	db	61
  2517                           
  2518                           ;Config register CONFIG4 @ 0x300003
  2519                           ;	Brown-out Reset Voltage Selection bits
  2520                           ;	BORV = VBOR_1P9, Brown-out Reset Voltage (VBOR) set to 1.9V
  2521                           ;	ZCD Disable bit
  2522                           ;	ZCD = OFF, ZCD module is disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCD
      +                          CON
  2523                           ;	PPSLOCK bit One-Way Set Enable bit
  2524                           ;	PPS1WAY = ON, PPSLOCKED bit can be cleared and set only once; PPS registers remain loc
      +                          ked after one clear/set cycle
  2525                           ;	Stack Full/Underflow Reset Enable bit
  2526                           ;	STVREN = ON, Stack full/underflow will cause Reset
  2527                           ;	Low Voltage Programming Enable bit
  2528                           ;	LVP = OFF, HV on MCLR/VPP must be used for programming
  2529                           ;	Extended Instruction Set Enable bit
  2530                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
  2531   300003                     	org	3145731
  2532   300003  DF                 	db	223
  2533                           
  2534                           ;Config register CONFIG5 @ 0x300004
  2535                           ;	WDT Period selection bits
  2536                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  2537                           ;	WDT operating mode
  2538                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
  2539   300004                     	org	3145732
  2540   300004  9F                 	db	159
  2541                           
  2542                           ;Config register CONFIG6 @ 0x300005
  2543                           ;	WDT Window Select bits
  2544                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
  2545                           ;	WDT input clock selector
  2546                           ;	WDTCCS = SC, Software Control
  2547   300005                     	org	3145733
  2548   300005  FF                 	db	255
  2549                           
  2550                           ;Config register CONFIG7 @ 0x300006
  2551                           ;	Boot Block Size selection bits
  2552                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
  2553                           ;	Boot Block enable bit
  2554                           ;	BBEN = OFF, Boot block disabled
  2555                           ;	Storage Area Flash enable bit
  2556                           ;	SAFEN = OFF, SAF disabled
  2557                           ;	Background Debugger
  2558                           ;	DEBUG = OFF, Background Debugger disabled
  2559   300006                     	org	3145734
  2560   300006  FF                 	db	255
  2561                           
  2562                           ;Config register CONFIG8 @ 0x300007
  2563                           ;	Boot Block Write Protection bit
  2564                           ;	WRTB = OFF, Boot Block not Write protected
  2565                           ;	Configuration Register Write Protection bit
  2566                           ;	WRTC = OFF, Configuration registers not Write protected
  2567                           ;	Data EEPROM Write Protection bit
  2568                           ;	WRTD = OFF, Data EEPROM not Write protected
  2569                           ;	SAF Write protection bit
  2570                           ;	WRTSAF = OFF, SAF not Write Protected
  2571                           ;	Application Block write protection bit
  2572                           ;	WRTAPP = OFF, Application Block not write protected
  2573   300007                     	org	3145735
  2574   300007  FF                 	db	255
  2575                           
  2576                           ;Config register CONFIG10 @ 0x300009
  2577                           ;	PFM and Data EEPROM Code Protection bit
  2578                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
  2579   300009                     	org	3145737
  2580   300009  FF                 	db	255
  2581                           tosu	equ	0x4FF
  2582                           tosh	equ	0x4FE
  2583                           tosl	equ	0x4FD
  2584                           stkptr	equ	0x4FC
  2585                           pclatu	equ	0x4FB
  2586                           pclath	equ	0x4FA
  2587                           pcl	equ	0x4F9
  2588                           tblptru	equ	0x4F8
  2589                           tblptrh	equ	0x4F7
  2590                           tblptrl	equ	0x4F6
  2591                           tablat	equ	0x4F5
  2592                           prodh	equ	0x4F4
  2593                           prodl	equ	0x4F3
  2594                           indf0	equ	0x4EF
  2595                           postinc0	equ	0x4EE
  2596                           postdec0	equ	0x4ED
  2597                           preinc0	equ	0x4EC
  2598                           plusw0	equ	0x4EB
  2599                           fsr0h	equ	0x4EA
  2600                           fsr0l	equ	0x4E9
  2601                           wreg	equ	0x4E8
  2602                           indf1	equ	0x4E7
  2603                           postinc1	equ	0x4E6
  2604                           postdec1	equ	0x4E5
  2605                           preinc1	equ	0x4E4
  2606                           plusw1	equ	0x4E3
  2607                           fsr1h	equ	0x4E2
  2608                           fsr1l	equ	0x4E1
  2609                           bsr	equ	0x4E0
  2610                           indf2	equ	0x4DF
  2611                           postinc2	equ	0x4DE
  2612                           postdec2	equ	0x4DD
  2613                           preinc2	equ	0x4DC
  2614                           plusw2	equ	0x4DB
  2615                           fsr2h	equ	0x4DA
  2616                           fsr2l	equ	0x4D9
  2617                           status	equ	0x4D8

Data Sizes:
    Strings     12
    Constant    0
    Data        4
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     15      22
    BANK5           160      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0
    BANK32          256      0       0
    BANK33          256      0       0
    BANK34          256      0       0
    BANK35          256      0       0
    BANK36          256      0       0

Pointer List with Targets:

    ESCRIBE_MENSAJE@cadena	PTR const unsigned char  size(1) Largest target is 12
		 -> STR_1(CODE[12]), 


Critical Paths under _main in COMRAM

    _main->_convierte
    _lcd_init->_CURSOR_ONOFF
    _lcd_init->_LCD_CONFIG
    _LCD_CONFIG->_ENVIA_LCD_CMD
    _CURSOR_ONOFF->_ENVIA_LCD_CMD
    _CURSOR_HOME->_ENVIA_LCD_CMD
    _BORRAR_LCD->_ENVIA_LCD_CMD
    _convierte->___awdiv
    ___awdiv->___awmod
    _POS_CURSOR->_ENVIA_LCD_CMD
    _ENVIA_LCD_CMD->_ENVIA_NIBBLE
    _ENVIA_LCD_CMD->_LEER_LCD
    _ESCRIBE_MENSAJE->_ENVIA_CHAR
    _ENVIA_CHAR->_ENVIA_NIBBLE
    _ENVIA_CHAR->_LEER_LCD

Critical Paths under _CCP1_ISR in COMRAM

    None.

Critical Paths under _INT0_ISR in COMRAM

    None.

Critical Paths under _INT1_ISR in COMRAM

    None.

Critical Paths under _DEFAULT_ISR in COMRAM

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _CCP1_ISR in BANK5

    None.

Critical Paths under _INT0_ISR in BANK5

    None.

Critical Paths under _INT1_ISR in BANK5

    None.

Critical Paths under _DEFAULT_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _CCP1_ISR in BANK6

    None.

Critical Paths under _INT0_ISR in BANK6

    None.

Critical Paths under _INT1_ISR in BANK6

    None.

Critical Paths under _DEFAULT_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _CCP1_ISR in BANK7

    None.

Critical Paths under _INT0_ISR in BANK7

    None.

Critical Paths under _INT1_ISR in BANK7

    None.

Critical Paths under _DEFAULT_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _CCP1_ISR in BANK8

    None.

Critical Paths under _INT0_ISR in BANK8

    None.

Critical Paths under _INT1_ISR in BANK8

    None.

Critical Paths under _DEFAULT_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _CCP1_ISR in BANK9

    None.

Critical Paths under _INT0_ISR in BANK9

    None.

Critical Paths under _INT1_ISR in BANK9

    None.

Critical Paths under _DEFAULT_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _CCP1_ISR in BANK10

    None.

Critical Paths under _INT0_ISR in BANK10

    None.

Critical Paths under _INT1_ISR in BANK10

    None.

Critical Paths under _DEFAULT_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _CCP1_ISR in BANK11

    None.

Critical Paths under _INT0_ISR in BANK11

    None.

Critical Paths under _INT1_ISR in BANK11

    None.

Critical Paths under _DEFAULT_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _CCP1_ISR in BANK12

    None.

Critical Paths under _INT0_ISR in BANK12

    None.

Critical Paths under _INT1_ISR in BANK12

    None.

Critical Paths under _DEFAULT_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _CCP1_ISR in BANK13

    None.

Critical Paths under _INT0_ISR in BANK13

    None.

Critical Paths under _INT1_ISR in BANK13

    None.

Critical Paths under _DEFAULT_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _CCP1_ISR in BANK14

    None.

Critical Paths under _INT0_ISR in BANK14

    None.

Critical Paths under _INT1_ISR in BANK14

    None.

Critical Paths under _DEFAULT_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _CCP1_ISR in BANK15

    None.

Critical Paths under _INT0_ISR in BANK15

    None.

Critical Paths under _INT1_ISR in BANK15

    None.

Critical Paths under _DEFAULT_ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _CCP1_ISR in BANK16

    None.

Critical Paths under _INT0_ISR in BANK16

    None.

Critical Paths under _INT1_ISR in BANK16

    None.

Critical Paths under _DEFAULT_ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _CCP1_ISR in BANK17

    None.

Critical Paths under _INT0_ISR in BANK17

    None.

Critical Paths under _INT1_ISR in BANK17

    None.

Critical Paths under _DEFAULT_ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _CCP1_ISR in BANK18

    None.

Critical Paths under _INT0_ISR in BANK18

    None.

Critical Paths under _INT1_ISR in BANK18

    None.

Critical Paths under _DEFAULT_ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _CCP1_ISR in BANK19

    None.

Critical Paths under _INT0_ISR in BANK19

    None.

Critical Paths under _INT1_ISR in BANK19

    None.

Critical Paths under _DEFAULT_ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _CCP1_ISR in BANK20

    None.

Critical Paths under _INT0_ISR in BANK20

    None.

Critical Paths under _INT1_ISR in BANK20

    None.

Critical Paths under _DEFAULT_ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _CCP1_ISR in BANK21

    None.

Critical Paths under _INT0_ISR in BANK21

    None.

Critical Paths under _INT1_ISR in BANK21

    None.

Critical Paths under _DEFAULT_ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _CCP1_ISR in BANK22

    None.

Critical Paths under _INT0_ISR in BANK22

    None.

Critical Paths under _INT1_ISR in BANK22

    None.

Critical Paths under _DEFAULT_ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _CCP1_ISR in BANK23

    None.

Critical Paths under _INT0_ISR in BANK23

    None.

Critical Paths under _INT1_ISR in BANK23

    None.

Critical Paths under _DEFAULT_ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _CCP1_ISR in BANK24

    None.

Critical Paths under _INT0_ISR in BANK24

    None.

Critical Paths under _INT1_ISR in BANK24

    None.

Critical Paths under _DEFAULT_ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _CCP1_ISR in BANK25

    None.

Critical Paths under _INT0_ISR in BANK25

    None.

Critical Paths under _INT1_ISR in BANK25

    None.

Critical Paths under _DEFAULT_ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _CCP1_ISR in BANK26

    None.

Critical Paths under _INT0_ISR in BANK26

    None.

Critical Paths under _INT1_ISR in BANK26

    None.

Critical Paths under _DEFAULT_ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _CCP1_ISR in BANK27

    None.

Critical Paths under _INT0_ISR in BANK27

    None.

Critical Paths under _INT1_ISR in BANK27

    None.

Critical Paths under _DEFAULT_ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _CCP1_ISR in BANK28

    None.

Critical Paths under _INT0_ISR in BANK28

    None.

Critical Paths under _INT1_ISR in BANK28

    None.

Critical Paths under _DEFAULT_ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _CCP1_ISR in BANK29

    None.

Critical Paths under _INT0_ISR in BANK29

    None.

Critical Paths under _INT1_ISR in BANK29

    None.

Critical Paths under _DEFAULT_ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _CCP1_ISR in BANK30

    None.

Critical Paths under _INT0_ISR in BANK30

    None.

Critical Paths under _INT1_ISR in BANK30

    None.

Critical Paths under _DEFAULT_ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _CCP1_ISR in BANK31

    None.

Critical Paths under _INT0_ISR in BANK31

    None.

Critical Paths under _INT1_ISR in BANK31

    None.

Critical Paths under _DEFAULT_ISR in BANK31

    None.

Critical Paths under _main in BANK32

    None.

Critical Paths under _CCP1_ISR in BANK32

    None.

Critical Paths under _INT0_ISR in BANK32

    None.

Critical Paths under _INT1_ISR in BANK32

    None.

Critical Paths under _DEFAULT_ISR in BANK32

    None.

Critical Paths under _main in BANK33

    None.

Critical Paths under _CCP1_ISR in BANK33

    None.

Critical Paths under _INT0_ISR in BANK33

    None.

Critical Paths under _INT1_ISR in BANK33

    None.

Critical Paths under _DEFAULT_ISR in BANK33

    None.

Critical Paths under _main in BANK34

    None.

Critical Paths under _CCP1_ISR in BANK34

    None.

Critical Paths under _INT0_ISR in BANK34

    None.

Critical Paths under _INT1_ISR in BANK34

    None.

Critical Paths under _DEFAULT_ISR in BANK34

    None.

Critical Paths under _main in BANK35

    None.

Critical Paths under _CCP1_ISR in BANK35

    None.

Critical Paths under _INT0_ISR in BANK35

    None.

Critical Paths under _INT1_ISR in BANK35

    None.

Critical Paths under _DEFAULT_ISR in BANK35

    None.

Critical Paths under _main in BANK36

    None.

Critical Paths under _CCP1_ISR in BANK36

    None.

Critical Paths under _INT0_ISR in BANK36

    None.

Critical Paths under _INT1_ISR in BANK36

    None.

Critical Paths under _DEFAULT_ISR in BANK36

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    2638
                         _ENVIA_CHAR
                    _ESCRIBE_MENSAJE
                         _POS_CURSOR
                          _configuro
                          _convierte
                           _lcd_init
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             1     1      0     525
                                              4 COMRAM     1     1      0
                         _BORRAR_LCD
                        _CURSOR_HOME
                       _CURSOR_ONOFF
                         _LCD_CONFIG
 ---------------------------------------------------------------------------------
 (2) _LCD_CONFIG                                           1     1      0     135
                                              3 COMRAM     1     1      0
                      _ENVIA_LCD_CMD
                       _ENVIA_NIBBLE
 ---------------------------------------------------------------------------------
 (2) _CURSOR_ONOFF                                         1     1      0     150
                                              3 COMRAM     1     1      0
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _CURSOR_HOME                                          0     0      0     120
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _BORRAR_LCD                                           0     0      0     120
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (1) _convierte                                            1     1      0    1270
                                             14 COMRAM     1     1      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     600
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     604
                                              6 COMRAM     8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (1) _configuro                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _POS_CURSOR                                           2     1      1     360
                                              3 COMRAM     2     1      1
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (3) _ENVIA_LCD_CMD                                        2     2      0     120
                                              1 COMRAM     2     2      0
                       _ENVIA_NIBBLE
                           _LEER_LCD
 ---------------------------------------------------------------------------------
 (1) _ESCRIBE_MENSAJE                                      4     2      2     363
                                              3 COMRAM     4     2      2
                         _ENVIA_CHAR
 ---------------------------------------------------------------------------------
 (2) _ENVIA_CHAR                                           2     2      0     120
                                              1 COMRAM     2     2      0
                       _ENVIA_NIBBLE
                           _LEER_LCD
 ---------------------------------------------------------------------------------
 (4) _LEER_LCD                                             1     1      0      45
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _ENVIA_NIBBLE                                         1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _CCP1_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _INT0_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _INT1_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _DEFAULT_ISR                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ENVIA_CHAR
     _ENVIA_NIBBLE
     _LEER_LCD
   _ESCRIBE_MENSAJE
     _ENVIA_CHAR
   _POS_CURSOR
     _ENVIA_LCD_CMD
       _ENVIA_NIBBLE
       _LEER_LCD
   _configuro
   _convierte
     ___awdiv
       ___awmod (ARG)
     ___awmod
   _lcd_init
     _BORRAR_LCD
       _ENVIA_LCD_CMD
     _CURSOR_HOME
       _ENVIA_LCD_CMD
     _CURSOR_ONOFF
       _ENVIA_LCD_CMD
     _LCD_CONFIG
       _ENVIA_LCD_CMD
       _ENVIA_NIBBLE

 _CCP1_ISR (ROOT)

 _INT0_ISR (ROOT)

 _INT1_ISR (ROOT)

 _DEFAULT_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0       0      70        0.0%
EEDATA             400      0       0       0        0.0%
BITBIGSFRlhhhll    26A      0       0      87        0.0%
BITBIGSFR_1        100      0       0      69        0.0%
BITBANK36          100      0       0      67        0.0%
BANK36             100      0       0      68        0.0%
BITBANK35          100      0       0      65        0.0%
BANK35             100      0       0      66        0.0%
BITBANK34          100      0       0      63        0.0%
BANK34             100      0       0      64        0.0%
BITBANK33          100      0       0      61        0.0%
BANK33             100      0       0      62        0.0%
BITBANK32          100      0       0      59        0.0%
BANK32             100      0       0      60        0.0%
BITBANK31          100      0       0      57        0.0%
BANK31             100      0       0      58        0.0%
BITBANK30          100      0       0      55        0.0%
BANK30             100      0       0      56        0.0%
BITBANK29          100      0       0      53        0.0%
BANK29             100      0       0      54        0.0%
BITBANK28          100      0       0      51        0.0%
BANK28             100      0       0      52        0.0%
BITBANK27          100      0       0      49        0.0%
BANK27             100      0       0      50        0.0%
BITBANK26          100      0       0      46        0.0%
BANK26             100      0       0      47        0.0%
BITBANK25          100      0       0      44        0.0%
BANK25             100      0       0      45        0.0%
BITBANK24          100      0       0      42        0.0%
BANK24             100      0       0      43        0.0%
BITBANK23          100      0       0      40        0.0%
BANK23             100      0       0      41        0.0%
BITBANK22          100      0       0      38        0.0%
BANK22             100      0       0      39        0.0%
BITBANK21          100      0       0      36        0.0%
BANK21             100      0       0      37        0.0%
BITBANK20          100      0       0      34        0.0%
BANK20             100      0       0      35        0.0%
BITBANK19          100      0       0      32        0.0%
BANK19             100      0       0      33        0.0%
BITBANK18          100      0       0      30        0.0%
BANK18             100      0       0      31        0.0%
BITBANK17          100      0       0      28        0.0%
BANK17             100      0       0      29        0.0%
BITBANK16          100      0       0      26        0.0%
BANK16             100      0       0      27        0.0%
BITBANK15          100      0       0      24        0.0%
BANK15             100      0       0      25        0.0%
BITBANK14          100      0       0      22        0.0%
BANK14             100      0       0      23        0.0%
BITBANK13          100      0       0      20        0.0%
BANK13             100      0       0      21        0.0%
BITBANK12          100      0       0      18        0.0%
BANK12             100      0       0      19        0.0%
BITBANK11          100      0       0      16        0.0%
BANK11             100      0       0      17        0.0%
BITBANK10          100      0       0      14        0.0%
BANK10             100      0       0      15        0.0%
BITBANK9           100      0       0      12        0.0%
BANK9              100      0       0      13        0.0%
BITBANK8           100      0       0      10        0.0%
BANK8              100      0       0      11        0.0%
BITBANK7           100      0       0       8        0.0%
BANK7              100      0       0       9        0.0%
BITBANK6           100      0       0       6        0.0%
BANK6              100      0       0       7        0.0%
BITBIGSFRlhhhlh     C5      0       0      84        0.0%
BITBIGSFRll         AD      0       0      90        0.0%
BITBANK5            A0      0       0       4        0.0%
BANK5               A0      0       0       5        0.0%
BITBIGSFRlhhhhl     86      0       0      82        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      F      16       1       23.2%
BITBIGSFRhhhh       29      0       0      71        0.0%
BITBIGSFRlhhhlh     1E      0       0      85        0.0%
BITBIGSFRlhhhhl      E      0       0      83        0.0%
BITBIGSFRlhhhhh      C      0       0      76        0.0%
BITBIGSFRlhhhhh      A      0       0      79        0.0%
BITBIGSFRhhl         7      0       0      73        0.0%
BITBIGSFRhll         5      0       0      75        0.0%
BITBIGSFRhhhl        4      0       0      72        0.0%
BITBIGSFRlhl         3      0       0      89        0.0%
BITBIGSFRlhhhhh      2      0       0      77        0.0%
BITBIGSFRlhhhhh      2      0       0      80        0.0%
BITBIGSFRlhhhll      2      0       0      86        0.0%
BITBIGSFRlhhhhh      1      0       0      78        0.0%
BITBIGSFRlhhhhh      1      0       0      81        0.0%
BITBIGSFRhlh         1      0       0      74        0.0%
BITBIGSFRlhhl        1      0       0      88        0.0%
BIGSFR_1             0      0       0     200        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      16      48        0.0%
DATA                 0      0      16       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Wed Oct 18 23:41:24 2023

                     l24 297A                       l42 2A46                       l51 2A16  
                     l60 2AD2                       l37 2ADA                       l54 2AE2  
                     l63 29AE                       l48 29E2                       l57 2860  
                     l67 27C6                       l69 2800                       u10 2800  
                     u11 27FC                       u20 2A2A                       u21 2A26  
                     u30 2A40                       u31 2A3C             ___awdiv@sign 050C  
          ENVIA_CHAR@aux 0503                      l150 2A74                      l153 28BA  
                    l147 28FE                      l440 2680                      l427 25D0  
                    l901 27E8                      l911 2AC8                      l913 2AD0  
                    l905 27EE                      l921 2988                      l907 2ABA  
                    l931 299C                      l923 2990                      l915 297E  
                    l909 2AC6                      l933 29A2                      l925 2992  
                    l917 2980                      l941 2A2A                      l871 2794  
                    l951 29EC                      l935 29A8                      l927 2994  
                    l919 2984                      l943 2A30                      l881 27A6  
                    l873 2796                      l961 29FE                      l953 29F0  
                    l929 2996                      l937 2AD4                      l945 2A40  
                    l891 27BC                      l883 27A8                      l875 2798  
                    l963 2A04                      l955 29F8                      l947 29E6  
                    l939 2A1A                      l971 2802                      l893 27C8  
                    l885 27B0                      l877 279A                      l869 2790  
                    l965 2A0A                      l957 29FA                      l949 29E8  
                    l981 2836                      l973 2806                      l895 27D0  
                    l887 27B2                      l879 27A2                      l967 2A10  
                    l959 29FC                      l991 2854                      l983 283C  
                    l975 280C                      l897 27D4                      l889 27BA  
                    l969 2ADC                      l993 285A                      l985 2842  
                    l977 281A                      l899 27DE                      l987 2848  
                    l979 282E                      l989 284E                      u300 2520  
                    u301 251C                      u310 253A                      u311 2536  
                    u320 2560                      u400 264C                      u321 255C  
                    u401 2648                      u330 257E                      u410 2670  
                    u331 257A                      u411 266C                      u420 2954  
                    u340 259A                      u421 2950                      u341 2596  
                    u430 2972                      u350 25C0                      u431 296E  
                    u351 25BC                      u440 29E2                      u360 25E4  
                    u441 29DE                      u361 25E0                      u370 25FE  
                    u507 29F2                      u371 25FA                      u380 2618  
                    u517 279C                      u381 2614                      u390 2636  
                    u527 27AA                      u391 2632                      u537 27B4  
                    u457 2A5C                      u547 27CA                      u467 2812  
                    u557 27D8                      u477 2820                      u567 27E2  
                    u487 2830                      u577 2ACA                      u497 298A  
           ___awmod@sign 0506              LEER_LCD@aux 0501                      wreg 04E8  
           ?_CURSOR_HOME 0501           ??_ENVIA_NIBBLE 0501           ENVIA_CHAR@dato 0502  
                   l1101 28F2                     l1111 28FC                     l1103 28F4  
                   l1105 28F6                     l1121 2A6A                     l1113 2A48  
                   l1107 28F8                     l1123 2A6E                     l1115 2A52  
                   l1109 28FA                     l1301 2620                     l1117 2A56  
                   l1311 265A                     l1303 2628                     l1119 2A66  
                   l1321 2944                     l1241 250E                     l1305 2636  
                   l1313 2660                     l1331 29BC                     l1323 2954  
                   l1091 28BC                     l1251 253A                     l1243 2512  
                   l1315 2670                     l1307 264C                     l1333 29CE  
                   l1325 2960                     l1093 28CA                     l1261 2568  
                   l1253 2542                     l1245 2520                     l1317 2678  
                   l1309 2654                     l1341 2686                     l1335 29D0  
                   l1327 2972                     l1095 28EC                     l1271 25A2  
                   l1263 2570                     l1255 2546                     l1247 2528  
                   l1351 26B0                     l1343 268A                     l1329 29B0  
                   l1097 28EE                     l1281 25C8                     l1273 25A4  
                   l1265 257E                     l1257 254E                     l1249 252C  
                   l1337 2864                     l1361 26D4                     l1353 26B8  
                   l1345 2694                     l1099 28F0                     l1275 25AA  
                   l1267 2584                     l1259 2560                     l1291 25EC  
                   l1371 26F8                     l1363 26DC                     l1355 26C0  
                   l1347 26A0                     l1339 2682                     l1269 259A  
                   l1277 25B0                     l1293 25F0                     l1285 25D2  
                   l1373 26FE                     l1365 26E2                     l1357 26C6  
                   l1349 26AA                     l1279 25C0                     l1295 25FE  
                   l1287 25D6                     l1375 2704                     l1367 26E8  
                   l1359 26CC                     l1297 2606                     l1289 25E4  
                   l1377 270C                     l1369 26F0                     l1299 2618  
                   STR_1 2501                     _LATD 04C1                     _WPUB 0409  
                   _main 2682         __end_of_CCP1_ISR 2790                     fsr1l 04E1  
                   start 0102            ?_CURSOR_ONOFF 0501             ___param_bank 0000  
        ??_ENVIA_LCD_CMD 0502         __end_of_LEER_LCD 2802         __end_of_INT0_ISR 2A98  
       __end_of_INT1_ISR 2AB8                    ?_main 0501          __end_of___awdiv 25D2  
        __end_of___awmod 2682                    _T1CLK 0321          ___awdiv@divisor 0509  
                  _T1CON 031E                    i2l181 2A96                    i2l174 278E  
                  i2l193 2AE8                    i2l188 2AB6          ___awdiv@counter 050B  
                  _OSCEN 00B3                    _PORTD 04D1                    _TRISB 04C7  
                  _TRISD 04C9                    _horas 0513              ?_POS_CURSOR 0504  
                  tablat 04F5                    status 04D8           ??_CURSOR_ONOFF 0504  
        __initialization 2900             __end_of_main 271C          _ESCRIBE_MENSAJE 29B0  
                 ??_main 0510            __activetblptr 0001                   _CCPR1H 0341  
                 _CCPR1L 0340         ___awdiv@dividend 0507                   _ANSELB 0408  
                 _ANSELD 0418                   i2l1201 271E                   i2l1211 275C  
                 i2l1203 2730                   i2l1213 2760                   i2l1221 2786  
                 i2l1205 2734                   i2l1231 2A94                   i2l1215 2772  
                 i2l1207 2746                   i2l1223 278C                   i2l1233 2A98  
                 i2l1225 2A78                   i2l1217 277A                   i2l1209 274A  
                 i2l1235 2A9A                   i2l1227 2A7A                   i2l1219 2780  
                 i2l1237 2AAC                   i2l1229 2A8C                   i2l1239 2AB4  
                 i2l1199 271C                   _OSCFRQ 00B1         __end_of_lcd_init 2A76  
              ??___awdiv 050B                   _decena 0515                ??___awmod 0505  
   __end_of_ENVIA_NIBBLE 2AD4         ___awdiv@quotient 050D          ___awmod@divisor 0503  
                 isa$std 0001          ___awmod@counter 0505                   _unidad 0514  
              ?_CCP1_ISR 0501             __pdataCOMRAM 0510             __mediumconst 0000  
                 tblptrh 04F7                   tblptrl 04F6                   tblptru 04F8  
           ??_BORRAR_LCD 0504                ?_LEER_LCD 0501               __accesstop 0560  
__end_of__initialization 2934                ?_INT0_ISR 0501                ?_INT1_ISR 0501  
           ??_LCD_CONFIG 0504            ___rparam_used 0001             ??_ENVIA_CHAR 0502  
__end_of_ESCRIBE_MENSAJE 29E4           __pcstackCOMRAM 0501           ivt0x8_undefint 0100  
     __end_of_BORRAR_LCD 2AE4               ??_CCP1_ISR 0501         ENVIA_LCD_CMD@aux 0503  
   __end_of_CURSOR_ONOFF 2A48       __end_of_LCD_CONFIG 2862       __end_of_ENVIA_CHAR 2A18  
             ??_LEER_LCD 0501         ENVIA_NIBBLE@dato 0501               ??_INT0_ISR 0501  
             ??_INT1_ISR 0501                  IVTBASEH 045E                  IVTBASEL 045D  
                IVTBASEU 045F               _centesimas 0510                  _CCP1CON 0342  
          ??_DEFAULT_ISR 0501                  _OSCCON1 00AD                  i2u24_40 2730  
                i2u24_41 272C                  i2u25_40 2746                  i2u25_41 2742  
                i2u26_40 275C                  i2u26_41 2758                  i2u27_40 2772  
                i2u27_41 276E                  i2u28_40 2A8C                  i2u28_41 2A88  
                i2u29_40 2AAC                  i2u29_41 2AA8             ??_POS_CURSOR 0505  
              ?_lcd_init 0501                  __Hparam 0000                  __Lparam 0000  
       ?_ESCRIBE_MENSAJE 0504        __end_of_configuro 2900                  ___awdiv 250E  
                ___awmod 25D2             __psmallconst 2500    __end_of_ENVIA_LCD_CMD 29B0  
      __end_of_convierte 28BC                  __pcinit 2900       __end_of_POS_CURSOR 297C  
                __ramtop 2500                  _centena 0516                  __ptext0 2682  
                __ptext1 2A48                  __ptext2 2802                  __ptext3 2A18  
                __ptext4 2AD4                  __ptext5 2ADC                  __ptext6 2862  
                __ptext7 25D2                  __ptext8 250E                  __ptext9 28BC  
       ___awmod@dividend 0501                  _minutos 0512               ??_lcd_init 0505  
           _ENVIA_NIBBLE 2AB8      __end_of_DEFAULT_ISR 2AEA     end_of_initialization 2934  
                postdec1 04E5                  postinc0 04EE             _CURSOR_ONOFF 2A18  
     CURSOR_ONOFF@estado 0504            __pidataCOMRAM 2AE4              _DEFAULT_ISR 2AE8  
          ??_CURSOR_HOME 0504      start_initialization 2900               ivt0x8_base 0008  
      ENVIA_LCD_CMD@dato 0502              __pbssCOMRAM 0514      __end_of_CURSOR_HOME 2ADC  
               ?___awdiv 0507                 ?___awmod 0501                _configuro 28BC  
            __smallconst 2500                _convierte 2862                 _CCP1_ISR 271C  
        convierte@numero 050F                 _LEER_LCD 2790                 _INT0_ISR 2A78  
               _INT1_ISR 2A98                 _LATDbits 04C1                 _PIE1bits 049F  
               _PIE3bits 04A1                 _PIE6bits 04A4                 _PIR1bits 04AF  
               _PIR3bits 04B1                 _PIR6bits 04B4         ESCRIBE_MENSAJE@i 0507  
         POS_CURSOR@fila 0505               ?_configuro 0501               ?_convierte 0501  
            _CURSOR_HOME 2AD4              _INTCON0bits 04D6                copy_data0 2914  
               __Hrparam 0000                 __Lrparam 0000             __Lsmallconst 2500  
           ?_DEFAULT_ISR 0501                 __pivt0x8 0008                 __ptext10 2942  
               __ptext11 297C                 __ptext12 29B0                 __ptext13 29E4  
               __ptext14 2790                 __ptext15 2AB8                 __ptext16 271C  
               __ptext17 2A78                 __ptext18 2A98                 __ptext19 2AE8  
             _BORRAR_LCD 2ADC                 _lcd_init 2A48               _LCD_CONFIG 2802  
             _ENVIA_CHAR 29E4                 _segundos 0511                 isa$xinst 0000  
          _ENVIA_LCD_CMD 297C              ??_configuro 0501              ??_convierte 050F  
      ??_ESCRIBE_MENSAJE 0506                 intlevel2 0000    ESCRIBE_MENSAJE@cadena 0504  
         ?_ENVIA_LCD_CMD 0501              ?_BORRAR_LCD 0501            ?_ENVIA_NIBBLE 0501  
             _POS_CURSOR 2942              ?_LCD_CONFIG 0501       ESCRIBE_MENSAJE@tam 0505  
            ?_ENVIA_CHAR 0501        POS_CURSOR@columna 0504  
