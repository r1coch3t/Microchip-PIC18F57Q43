

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Thu Oct 26 02:07:32 2023

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F57Q43
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=4,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=4,class=CODE,delta=1
    30                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
    31                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    32                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    33                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    34   000000                     
    35                           ; Generated 17/10/2023 GMT
    36                           ; 
    37                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    38                           ; All rights reserved.
    39                           ; 
    40                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    41                           ; 
    42                           ; Redistribution and use in source and binary forms, with or without modification, are
    43                           ; permitted provided that the following conditions are met:
    44                           ; 
    45                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    46                           ;        conditions and the following disclaimer.
    47                           ; 
    48                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    49                           ;        of conditions and the following disclaimer in the documentation and/or other
    50                           ;        materials provided with the distribution. Publication is not required when
    51                           ;        this file is used in an embedded application.
    52                           ; 
    53                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    54                           ;        software without specific prior written permission.
    55                           ; 
    56                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    57                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    58                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    59                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    60                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    61                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    62                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    63                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    64                           ; 
    65                           ; 
    66                           ; Code-generator required, PIC18F57Q43 Definitions
    67                           ; 
    68                           ; SFR Addresses
    69   000000                     
    70                           	psect	idataCOMRAM
    71   002B56                     __pidataCOMRAM:
    72                           	callstack 0
    73                           
    74                           ;initializer for _posicion
    75   002B56  03E8               	dw	1000
    76   000000                     _PORTCbits	set	1232
    77   000000                     _TRISCbits	set	1224
    78   000000                     _LATD	set	1217
    79   000000                     _OSCCON1	set	173
    80   000000                     _LATDbits	set	1217
    81   000000                     _TRISBbits	set	1223
    82   000000                     _TRISD	set	1225
    83   000000                     _PORTBbits	set	1231
    84   000000                     _PORTD	set	1233
    85   000000                     _INTCON0bits	set	1238
    86   000000                     _OSCFRQ	set	177
    87   000000                     _OSCEN	set	179
    88   000000                     _TMR0L	set	792
    89   000000                     _TMR0H	set	793
    90   000000                     _T0CON0	set	794
    91   000000                     _ANSELBbits	set	1032
    92   000000                     _ANSELCbits	set	1040
    93   000000                     _WPUBbits	set	1033
    94   000000                     _ANSELD	set	1048
    95   000000                     _PIE3bits	set	1185
    96   000000                     _PIR3bits	set	1201
    97   000000                     _T0CON1	set	795
    98   000000                     _LATCbits	set	1216
    99                           
   100                           	psect	smallconst
   101   002500                     __psmallconst:
   102                           	callstack 0
   103   002500  00                 	db	0
   104   002501                     STR_4:
   105   002501  50                 	db	80	;'P'
   106   002502  6F                 	db	111	;'o'
   107   002503  73                 	db	115	;'s'
   108   002504  69                 	db	105	;'i'
   109   002505  63                 	db	99	;'c'
   110   002506  69                 	db	105	;'i'
   111   002507  6F                 	db	111	;'o'
   112   002508  6E                 	db	110	;'n'
   113   002509  3A                 	db	58	;':'
   114   00250A  30                 	db	48	;'0'
   115   00250B  30                 	db	48	;'0'
   116   00250C  30                 	db	48	;'0'
   117   00250D  30                 	db	48	;'0'
   118   00250E  00                 	db	0
   119   00250F                     STR_1:
   120   00250F  53                 	db	83	;'S'
   121   002510  65                 	db	101	;'e'
   122   002511  72                 	db	114	;'r'
   123   002512  76                 	db	118	;'v'
   124   002513  6F                 	db	111	;'o'
   125   002514  6D                 	db	109	;'m'
   126   002515  6F                 	db	111	;'o'
   127   002516  6E                 	db	110	;'n'
   128   002517  20                 	db	32
   129   002518  55                 	db	85	;'U'
   130   002519  50                 	db	80	;'P'
   131   00251A  43                 	db	67	;'C'
   132   00251B  00                 	db	0
   133   00251C                     STR_2:
   134   00251C  50                 	db	80	;'P'
   135   00251D  6F                 	db	111	;'o'
   136   00251E  73                 	db	115	;'s'
   137   00251F  69                 	db	105	;'i'
   138   002520  63                 	db	99	;'c'
   139   002521  69                 	db	105	;'i'
   140   002522  6F                 	db	111	;'o'
   141   002523  6E                 	db	110	;'n'
   142   002524  3A                 	db	58	;':'
   143   002525  00                 	db	0
   144   002526  00                 	db	0	; dummy byte at the end
   145   000000                     
   146                           ; #config settings
   147                           
   148                           	psect	cinit
   149   00296A                     __pcinit:
   150                           	callstack 0
   151   00296A                     start_initialization:
   152                           	callstack 0
   153   00296A                     __initialization:
   154                           	callstack 0
   155                           
   156                           ; Initialize objects allocated to COMRAM (2 bytes)
   157                           ; load TBLPTR registers with __pidataCOMRAM
   158   00296A  0E56               	movlw	low __pidataCOMRAM
   159   00296C  6EF6               	movwf	tblptrl,c
   160   00296E  0E2B               	movlw	high __pidataCOMRAM
   161   002970  6EF7               	movwf	tblptrh,c
   162   002972  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   163   002974  6EF8               	movwf	tblptru,c
   164   002976  0009               	tblrd		*+	;fetch initializer
   165   002978  C4F5 F522          	movff	tablat,__pdataCOMRAM
   166   00297C  0009               	tblrd		*+	;fetch initializer
   167   00297E  C4F5 F523          	movff	tablat,__pdataCOMRAM+1
   168                           
   169                           ; Clear objects allocated to COMRAM (5 bytes)
   170   002982  6A21               	clrf	(__pbssCOMRAM+4)& (0+255),c
   171   002984  6A20               	clrf	(__pbssCOMRAM+3)& (0+255),c
   172   002986  6A1F               	clrf	(__pbssCOMRAM+2)& (0+255),c
   173   002988  6A1E               	clrf	(__pbssCOMRAM+1)& (0+255),c
   174   00298A  6A1D               	clrf	__pbssCOMRAM& (0+255),c
   175                           
   176                           ;
   177                           ; Setup IVTBASE
   178                           ;
   179   00298C  0104               	movlb	4
   180   00298E  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
   181   002990  6F5D               	movwf	93,b
   182   002992  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
   183   002994  6F5E               	movwf	94,b
   184   002996  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
   185   002998  6F5F               	movwf	95,b
   186   00299A                     end_of_initialization:
   187                           	callstack 0
   188   00299A                     __end_of__initialization:
   189                           	callstack 0
   190   00299A  0E00               	movlw	low (__Lsmallconst shr (0+16))
   191   00299C  6EF8               	movwf	tblptru,c
   192   00299E  0E25               	movlw	high __Lsmallconst
   193   0029A0  6EF7               	movwf	tblptrh,c
   194   0029A2  0100               	movlb	0
   195   0029A4  EF94  F012         	goto	_main	;jump to C main() function
   196                           
   197                           	psect	bssCOMRAM
   198   00051D                     __pbssCOMRAM:
   199                           	callstack 0
   200   00051D                     _unidad:
   201                           	callstack 0
   202   00051D                     	ds	1
   203   00051E                     _decena:
   204                           	callstack 0
   205   00051E                     	ds	1
   206   00051F                     _centena:
   207                           	callstack 0
   208   00051F                     	ds	1
   209   000520                     _millar:
   210                           	callstack 0
   211   000520                     	ds	1
   212   000521                     _diez_millar:
   213                           	callstack 0
   214   000521                     	ds	1
   215                           
   216                           	psect	dataCOMRAM
   217   000522                     __pdataCOMRAM:
   218                           	callstack 0
   219   000522                     _posicion:
   220                           	callstack 0
   221   000522                     	ds	2
   222                           
   223                           	psect	cstackCOMRAM
   224   000501                     __pcstackCOMRAM:
   225                           	callstack 0
   226   000501                     ?_escalamiento:
   227                           	callstack 0
   228   000501                     escalamiento@numero:
   229                           	callstack 0
   230                           
   231                           ; 2 bytes @ 0x0
   232   000501                     	ds	2
   233   000503                     escalamiento@temporal1:
   234                           	callstack 0
   235                           
   236                           ; 2 bytes @ 0x2
   237   000503                     	ds	2
   238   000505                     ??_TMR0_ISR:
   239                           
   240                           ; 1 bytes @ 0x4
   241   000505                     	ds	8
   242   00050D                     ?___lwmod:
   243                           	callstack 0
   244   00050D                     ENVIA_NIBBLE@dato:
   245                           	callstack 0
   246   00050D                     LEER_LCD@aux:
   247                           	callstack 0
   248   00050D                     ___lwmod@dividend:
   249                           	callstack 0
   250                           
   251                           ; 2 bytes @ 0xC
   252   00050D                     	ds	1
   253   00050E                     ENVIA_CHAR@dato:
   254                           	callstack 0
   255   00050E                     ENVIA_LCD_CMD@dato:
   256                           	callstack 0
   257                           
   258                           ; 1 bytes @ 0xD
   259   00050E                     	ds	1
   260   00050F                     ENVIA_CHAR@aux:
   261                           	callstack 0
   262   00050F                     ENVIA_LCD_CMD@aux:
   263                           	callstack 0
   264   00050F                     ___lwmod@divisor:
   265                           	callstack 0
   266                           
   267                           ; 2 bytes @ 0xE
   268   00050F                     	ds	1
   269   000510                     ??_LCD_CONFIG:
   270   000510                     POS_CURSOR@columna:
   271                           	callstack 0
   272   000510                     CURSOR_ONOFF@estado:
   273                           	callstack 0
   274   000510                     ESCRIBE_MENSAJE@cadena:
   275                           	callstack 0
   276                           
   277                           ; 1 bytes @ 0xF
   278   000510                     	ds	1
   279   000511                     ??_lcd_init:
   280   000511                     POS_CURSOR@fila:
   281                           	callstack 0
   282   000511                     ESCRIBE_MENSAJE@tam:
   283                           	callstack 0
   284   000511                     ___lwmod@counter:
   285                           	callstack 0
   286                           
   287                           ; 1 bytes @ 0x10
   288   000511                     	ds	1
   289   000512                     ??_ESCRIBE_MENSAJE:
   290   000512                     ?___lwdiv:
   291                           	callstack 0
   292   000512                     ___lwdiv@dividend:
   293                           	callstack 0
   294                           
   295                           ; 2 bytes @ 0x11
   296   000512                     	ds	1
   297   000513                     ESCRIBE_MENSAJE@i:
   298                           	callstack 0
   299                           
   300                           ; 1 bytes @ 0x12
   301   000513                     	ds	1
   302   000514                     ___lwdiv@divisor:
   303                           	callstack 0
   304                           
   305                           ; 2 bytes @ 0x13
   306   000514                     	ds	2
   307   000516                     ___lwdiv@quotient:
   308                           	callstack 0
   309                           
   310                           ; 2 bytes @ 0x15
   311   000516                     	ds	2
   312   000518                     ___lwdiv@counter:
   313                           	callstack 0
   314                           
   315                           ; 1 bytes @ 0x17
   316   000518                     	ds	1
   317   000519                     convierte@numero:
   318                           	callstack 0
   319                           
   320                           ; 2 bytes @ 0x18
   321   000519                     	ds	2
   322   00051B                     main@x:
   323                           	callstack 0
   324                           
   325                           ; 2 bytes @ 0x1A
   326   00051B                     	ds	2
   327                           
   328 ;;
   329 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   330 ;;
   331 ;; *************** function _main *****************
   332 ;; Defined at:
   333 ;;		line 58 in file "maincode4.c"
   334 ;; Parameters:    Size  Location     Type
   335 ;;		None
   336 ;; Auto vars:     Size  Location     Type
   337 ;;  x               2   26[COMRAM] unsigned int 
   338 ;; Return value:  Size  Location     Type
   339 ;;                  1    wreg      void 
   340 ;; Registers used:
   341 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   342 ;; Tracked objects:
   343 ;;		On entry : 0/0
   344 ;;		On exit  : 0/0
   345 ;;		Unchanged: 0/0
   346 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   347 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   348 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   349 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   350 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   351 ;;Total ram usage:        2 bytes
   352 ;; Hardware stack levels required when called: 6
   353 ;; This function calls:
   354 ;;		_ENVIA_CHAR
   355 ;;		_ESCRIBE_MENSAJE
   356 ;;		_POS_CURSOR
   357 ;;		_configuro
   358 ;;		_convierte
   359 ;;		_lcd_init
   360 ;; This function is called by:
   361 ;;		Startup code after reset
   362 ;; This function uses a non-reentrant model
   363 ;;
   364                           
   365                           	psect	text0
   366   002528                     __ptext0:
   367                           	callstack 0
   368   002528                     _main:
   369                           	callstack 121
   370   002528                     
   371                           ;maincode4.c: 59:     configuro();
   372   002528  EC72  F015         	call	_configuro	;wreg free
   373   00252C                     
   374                           ;maincode4.c: 60:     lcd_init();
   375   00252C  ECF1  F014         	call	_lcd_init	;wreg free
   376   002530                     
   377                           ;maincode4.c: 61:     POS_CURSOR(1,0);
   378   002530  0E00               	movlw	0
   379   002532  6E10               	movwf	POS_CURSOR@columna^(0+1280),c
   380   002534  0E01               	movlw	1
   381   002536  ECD4  F014         	call	_POS_CURSOR
   382   00253A                     
   383                           ;maincode4.c: 62:     ESCRIBE_MENSAJE("Servomon UPC",12);
   384   00253A  0E0F               	movlw	low STR_1
   385   00253C  6E10               	movwf	ESCRIBE_MENSAJE@cadena^(0+1280),c
   386   00253E  0E0C               	movlw	12
   387   002540  6E11               	movwf	ESCRIBE_MENSAJE@tam^(0+1280),c
   388   002542  EC26  F015         	call	_ESCRIBE_MENSAJE	;wreg free
   389   002546                     
   390                           ;maincode4.c: 63:     POS_CURSOR(2,0);
   391   002546  0E00               	movlw	0
   392   002548  6E10               	movwf	POS_CURSOR@columna^(0+1280),c
   393   00254A  0E02               	movlw	2
   394   00254C  ECD4  F014         	call	_POS_CURSOR
   395   002550                     l1248:
   396                           
   397                           ;maincode4.c: 65:         if(PORTBbits.RB4 == 0){
   398   002550  B8CF               	btfsc	207,4,c	;volatile
   399   002552  EFAD  F012         	goto	u311
   400   002556  EFAF  F012         	goto	u310
   401   00255A                     u311:
   402   00255A  EF21  F013         	goto	l1294
   403   00255E                     u310:
   404   00255E                     
   405                           ;maincode4.c: 66:             unsigned int x;;maincode4.c: 67:             for(x=500;x<=
      +                          1500;x+=10){
   406   00255E  0E01               	movlw	1
   407   002560  6E1C               	movwf	(main@x+1)^(0+1280),c
   408   002562  0EF4               	movlw	244
   409   002564  6E1B               	movwf	main@x^(0+1280),c
   410   002566                     l161:
   411                           
   412                           ;maincode4.c: 68:                 posicion = x;
   413   002566  C51B  F522         	movff	main@x,_posicion
   414   00256A  C51C  F523         	movff	main@x+1,_posicion+1
   415   00256E                     
   416                           ;maincode4.c: 69:                 convierte(posicion);
   417   00256E  C522  F519         	movff	_posicion,convierte@numero
   418   002572  C523  F51A         	movff	_posicion+1,convierte@numero+1
   419   002576  EC34  F013         	call	_convierte	;wreg free
   420                           
   421                           ;maincode4.c: 70:                 POS_CURSOR(2,0);
   422   00257A  0E00               	movlw	0
   423   00257C  6E10               	movwf	POS_CURSOR@columna^(0+1280),c
   424   00257E  0E02               	movlw	2
   425   002580  ECD4  F014         	call	_POS_CURSOR
   426   002584                     
   427                           ;maincode4.c: 71:                 ESCRIBE_MENSAJE("Posicion:",9);
   428   002584  0E1C               	movlw	low STR_2
   429   002586  6E10               	movwf	ESCRIBE_MENSAJE@cadena^(0+1280),c
   430   002588  0E09               	movlw	9
   431   00258A  6E11               	movwf	ESCRIBE_MENSAJE@tam^(0+1280),c
   432   00258C  EC26  F015         	call	_ESCRIBE_MENSAJE	;wreg free
   433   002590                     
   434                           ;maincode4.c: 72:                 ENVIA_CHAR(millar+0x30);
   435   002590  5020               	movf	_millar^(0+1280),w,c
   436   002592  0F30               	addlw	48
   437   002594  EC40  F015         	call	_ENVIA_CHAR
   438   002598                     
   439                           ;maincode4.c: 73:                 ENVIA_CHAR(centena+0x30);
   440   002598  501F               	movf	_centena^(0+1280),w,c
   441   00259A  0F30               	addlw	48
   442   00259C  EC40  F015         	call	_ENVIA_CHAR
   443   0025A0                     
   444                           ;maincode4.c: 74:                 ENVIA_CHAR(decena+0x30);
   445   0025A0  501E               	movf	_decena^(0+1280),w,c
   446   0025A2  0F30               	addlw	48
   447   0025A4  EC40  F015         	call	_ENVIA_CHAR
   448   0025A8                     
   449                           ;maincode4.c: 75:                 ENVIA_CHAR(unidad+0x30);
   450   0025A8  501D               	movf	_unidad^(0+1280),w,c
   451   0025AA  0F30               	addlw	48
   452   0025AC  EC40  F015         	call	_ENVIA_CHAR
   453   0025B0                     
   454                           ;maincode4.c: 76:             }
   455   0025B0  0E0A               	movlw	10
   456   0025B2  261B               	addwf	main@x^(0+1280),f,c
   457   0025B4  0E00               	movlw	0
   458   0025B6  221C               	addwfc	(main@x+1)^(0+1280),f,c
   459   0025B8  0EDD               	movlw	221
   460   0025BA  5C1B               	subwf	main@x^(0+1280),w,c
   461   0025BC  0E05               	movlw	5
   462   0025BE  581C               	subwfb	(main@x+1)^(0+1280),w,c
   463   0025C0  A0D8               	btfss	status,0,c
   464   0025C2  EFE5  F012         	goto	u321
   465   0025C6  EFE7  F012         	goto	u320
   466   0025CA                     u321:
   467   0025CA  EFB3  F012         	goto	l161
   468   0025CE                     u320:
   469   0025CE                     
   470                           ;maincode4.c: 77:             for(x=1500;x>500;x-=10){
   471   0025CE  0E05               	movlw	5
   472   0025D0  6E1C               	movwf	(main@x+1)^(0+1280),c
   473   0025D2  0EDC               	movlw	220
   474   0025D4  6E1B               	movwf	main@x^(0+1280),c
   475   0025D6                     l163:
   476                           
   477                           ;maincode4.c: 78:                 posicion = x;
   478   0025D6  C51B  F522         	movff	main@x,_posicion
   479   0025DA  C51C  F523         	movff	main@x+1,_posicion+1
   480   0025DE                     
   481                           ;maincode4.c: 79:                 convierte(posicion);
   482   0025DE  C522  F519         	movff	_posicion,convierte@numero
   483   0025E2  C523  F51A         	movff	_posicion+1,convierte@numero+1
   484   0025E6  EC34  F013         	call	_convierte	;wreg free
   485                           
   486                           ;maincode4.c: 80:                 POS_CURSOR(2,0);
   487   0025EA  0E00               	movlw	0
   488   0025EC  6E10               	movwf	POS_CURSOR@columna^(0+1280),c
   489   0025EE  0E02               	movlw	2
   490   0025F0  ECD4  F014         	call	_POS_CURSOR
   491   0025F4                     
   492                           ;maincode4.c: 81:                 ESCRIBE_MENSAJE("Posicion:",9);
   493   0025F4  0E1C               	movlw	low STR_2
   494   0025F6  6E10               	movwf	ESCRIBE_MENSAJE@cadena^(0+1280),c
   495   0025F8  0E09               	movlw	9
   496   0025FA  6E11               	movwf	ESCRIBE_MENSAJE@tam^(0+1280),c
   497   0025FC  EC26  F015         	call	_ESCRIBE_MENSAJE	;wreg free
   498   002600                     
   499                           ;maincode4.c: 82:                 ENVIA_CHAR(millar+0x30);
   500   002600  5020               	movf	_millar^(0+1280),w,c
   501   002602  0F30               	addlw	48
   502   002604  EC40  F015         	call	_ENVIA_CHAR
   503   002608                     
   504                           ;maincode4.c: 83:                 ENVIA_CHAR(centena+0x30);
   505   002608  501F               	movf	_centena^(0+1280),w,c
   506   00260A  0F30               	addlw	48
   507   00260C  EC40  F015         	call	_ENVIA_CHAR
   508   002610                     
   509                           ;maincode4.c: 84:                 ENVIA_CHAR(decena+0x30);
   510   002610  501E               	movf	_decena^(0+1280),w,c
   511   002612  0F30               	addlw	48
   512   002614  EC40  F015         	call	_ENVIA_CHAR
   513   002618                     
   514                           ;maincode4.c: 85:                 ENVIA_CHAR(unidad+0x30);
   515   002618  501D               	movf	_unidad^(0+1280),w,c
   516   00261A  0F30               	addlw	48
   517   00261C  EC40  F015         	call	_ENVIA_CHAR
   518   002620                     
   519                           ;maincode4.c: 86:             }
   520   002620  0E0A               	movlw	10
   521   002622  5E1B               	subwf	main@x^(0+1280),f,c
   522   002624  0E00               	movlw	0
   523   002626  5A1C               	subwfb	(main@x+1)^(0+1280),f,c
   524   002628  0EF5               	movlw	245
   525   00262A  5C1B               	subwf	main@x^(0+1280),w,c
   526   00262C  0E01               	movlw	1
   527   00262E  581C               	subwfb	(main@x+1)^(0+1280),w,c
   528   002630  B0D8               	btfsc	status,0,c
   529   002632  EF1D  F013         	goto	u331
   530   002636  EF1F  F013         	goto	u330
   531   00263A                     u331:
   532   00263A  EFEB  F012         	goto	l163
   533   00263E                     u330:
   534   00263E  EFA8  F012         	goto	l1248
   535   002642                     l1294:
   536                           
   537                           ;maincode4.c: 89:             posicion = 0;
   538   002642  0E00               	movlw	0
   539   002644  6E23               	movwf	(_posicion+1)^(0+1280),c
   540   002646  0E00               	movlw	0
   541   002648  6E22               	movwf	_posicion^(0+1280),c
   542   00264A                     
   543                           ;maincode4.c: 90:             POS_CURSOR(2,0);
   544   00264A  0E00               	movlw	0
   545   00264C  6E10               	movwf	POS_CURSOR@columna^(0+1280),c
   546   00264E  0E02               	movlw	2
   547   002650  ECD4  F014         	call	_POS_CURSOR
   548   002654                     
   549                           ;maincode4.c: 91:             ESCRIBE_MENSAJE("Posicion:0000",13);
   550   002654  0E01               	movlw	low STR_4
   551   002656  6E10               	movwf	ESCRIBE_MENSAJE@cadena^(0+1280),c
   552   002658  0E0D               	movlw	13
   553   00265A  6E11               	movwf	ESCRIBE_MENSAJE@tam^(0+1280),c
   554   00265C  EC26  F015         	call	_ESCRIBE_MENSAJE	;wreg free
   555   002660  EFA8  F012         	goto	l1248
   556   002664  EF81  F000         	goto	start
   557   002668                     __end_of_main:
   558                           	callstack 0
   559                           
   560 ;; *************** function _lcd_init *****************
   561 ;; Defined at:
   562 ;;		line 34 in file "maincode4.c"
   563 ;; Parameters:    Size  Location     Type
   564 ;;		None
   565 ;; Auto vars:     Size  Location     Type
   566 ;;		None
   567 ;; Return value:  Size  Location     Type
   568 ;;                  1    wreg      void 
   569 ;; Registers used:
   570 ;;		wreg, status,2, status,0, cstack
   571 ;; Tracked objects:
   572 ;;		On entry : 0/0
   573 ;;		On exit  : 0/0
   574 ;;		Unchanged: 0/0
   575 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   576 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   577 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   578 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   579 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   580 ;;Total ram usage:        2 bytes
   581 ;; Hardware stack levels used: 1
   582 ;; Hardware stack levels required when called: 5
   583 ;; This function calls:
   584 ;;		_BORRAR_LCD
   585 ;;		_CURSOR_HOME
   586 ;;		_CURSOR_ONOFF
   587 ;;		_LCD_CONFIG
   588 ;; This function is called by:
   589 ;;		_main
   590 ;; This function uses a non-reentrant model
   591 ;;
   592                           
   593                           	psect	text1
   594   0029E2                     __ptext1:
   595                           	callstack 0
   596   0029E2                     _lcd_init:
   597                           	callstack 121
   598   0029E2                     
   599                           ;maincode4.c: 35:     TRISD = 0x00;
   600   0029E2  0E00               	movlw	0
   601   0029E4  6EC9               	movwf	201,c	;volatile
   602                           
   603                           ;maincode4.c: 36:     ANSELD = 0x00;
   604   0029E6  0E00               	movlw	0
   605   0029E8  0104               	movlb	4	; () banked
   606   0029EA  6F18               	movwf	24,b	;volatile
   607   0029EC                     
   608                           ; BSR set to: 4
   609                           ;maincode4.c: 37:     LCD_CONFIG();
   610   0029EC  EC85  F014         	call	_LCD_CONFIG	;wreg free
   611   0029F0                     
   612                           ;maincode4.c: 38:     _delay((unsigned long)((25)*(32000000UL/4000.0)));
   613   0029F0  0E02               	movlw	2
   614   0029F2  6E12               	movwf	(??_lcd_init+1)^(0+1280),c
   615   0029F4  0E04               	movlw	4
   616   0029F6  6E11               	movwf	??_lcd_init^(0+1280),c
   617   0029F8  0EBA               	movlw	186
   618   0029FA                     u357:
   619   0029FA  2EE8               	decfsz	wreg,f,c
   620   0029FC  D7FE               	bra	u357
   621   0029FE  2E11               	decfsz	??_lcd_init^(0+1280),f,c
   622   002A00  D7FC               	bra	u357
   623   002A02  2E12               	decfsz	(??_lcd_init+1)^(0+1280),f,c
   624   002A04  D7FA               	bra	u357
   625   002A06  D000               	nop2	
   626   002A08                     
   627                           ;maincode4.c: 39:     BORRAR_LCD();
   628   002A08  ECA7  F015         	call	_BORRAR_LCD	;wreg free
   629   002A0C                     
   630                           ;maincode4.c: 40:     CURSOR_HOME();
   631   002A0C  ECA3  F015         	call	_CURSOR_HOME	;wreg free
   632   002A10                     
   633                           ;maincode4.c: 41:     CURSOR_ONOFF(1);
   634   002A10  0E01               	movlw	1
   635   002A12  EC5A  F015         	call	_CURSOR_ONOFF
   636   002A16  0012               	return		;funcret
   637   002A18                     __end_of_lcd_init:
   638                           	callstack 0
   639                           
   640 ;; *************** function _LCD_CONFIG *****************
   641 ;; Defined at:
   642 ;;		line 72 in file "LCD.c"
   643 ;; Parameters:    Size  Location     Type
   644 ;;		None
   645 ;; Auto vars:     Size  Location     Type
   646 ;;		None
   647 ;; Return value:  Size  Location     Type
   648 ;;                  1    wreg      void 
   649 ;; Registers used:
   650 ;;		wreg, status,2, status,0, cstack
   651 ;; Tracked objects:
   652 ;;		On entry : 0/0
   653 ;;		On exit  : 0/0
   654 ;;		Unchanged: 0/0
   655 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   656 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   657 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   658 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   659 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   660 ;;Total ram usage:        1 bytes
   661 ;; Hardware stack levels used: 1
   662 ;; Hardware stack levels required when called: 4
   663 ;; This function calls:
   664 ;;		_ENVIA_LCD_CMD
   665 ;;		_ENVIA_NIBBLE
   666 ;; This function is called by:
   667 ;;		_lcd_init
   668 ;; This function uses a non-reentrant model
   669 ;;
   670                           
   671                           	psect	text2
   672   00290A                     __ptext2:
   673                           	callstack 0
   674   00290A                     _LCD_CONFIG:
   675                           	callstack 121
   676   00290A                     
   677                           ;LCD.c: 74:  LATDbits.LATD0 = 0;
   678   00290A  90C1               	bcf	193,0,c	;volatile
   679                           
   680                           ;LCD.c: 75:  LATDbits.LATD1 = 0;
   681   00290C  92C1               	bcf	193,1,c	;volatile
   682   00290E                     
   683                           ;LCD.c: 76:  ENVIA_NIBBLE(0x30);
   684   00290E  0E30               	movlw	48
   685   002910  EC88  F015         	call	_ENVIA_NIBBLE
   686   002914                     
   687                           ;LCD.c: 77:         _delay(24000);
   688   002914  0E20               	movlw	32
   689   002916  6E10               	movwf	??_LCD_CONFIG^(0+1280),c
   690   002918  0E2A               	movlw	42
   691   00291A                     u367:
   692   00291A  2EE8               	decfsz	wreg,f,c
   693   00291C  D7FE               	bra	u367
   694   00291E  2E10               	decfsz	??_LCD_CONFIG^(0+1280),f,c
   695   002920  D7FC               	bra	u367
   696   002922                     
   697                           ;LCD.c: 78:         _delay(24000);
   698   002922  0E20               	movlw	32
   699   002924  6E10               	movwf	??_LCD_CONFIG^(0+1280),c
   700   002926  0E2A               	movlw	42
   701   002928                     u377:
   702   002928  2EE8               	decfsz	wreg,f,c
   703   00292A  D7FE               	bra	u377
   704   00292C  2E10               	decfsz	??_LCD_CONFIG^(0+1280),f,c
   705   00292E  D7FC               	bra	u377
   706                           
   707                           ;LCD.c: 81:  ENVIA_NIBBLE(0x30);
   708   002930  0E30               	movlw	48
   709   002932  EC88  F015         	call	_ENVIA_NIBBLE
   710   002936                     
   711                           ;LCD.c: 83:  _delay(1200);
   712   002936  0EF0               	movlw	240
   713   002938                     u387:
   714   002938  D000               	nop2	
   715   00293A  2EE8               	decfsz	wreg,f,c
   716   00293C  D7FD               	bra	u387
   717   00293E                     
   718                           ;LCD.c: 84:         ENVIA_NIBBLE(0x30);
   719   00293E  0E30               	movlw	48
   720   002940  EC88  F015         	call	_ENVIA_NIBBLE
   721   002944                     
   722                           ;LCD.c: 85:  ENVIA_NIBBLE(0x20);
   723   002944  0E20               	movlw	32
   724   002946  EC88  F015         	call	_ENVIA_NIBBLE
   725   00294A                     
   726                           ;LCD.c: 86:  ENVIA_LCD_CMD(0x01);
   727   00294A  0E01               	movlw	1
   728   00294C  EC0C  F015         	call	_ENVIA_LCD_CMD
   729   002950                     
   730                           ;LCD.c: 87:  ENVIA_LCD_CMD(0x28);
   731   002950  0E28               	movlw	40
   732   002952  EC0C  F015         	call	_ENVIA_LCD_CMD
   733   002956                     
   734                           ;LCD.c: 88:  ENVIA_LCD_CMD(0x0F);
   735   002956  0E0F               	movlw	15
   736   002958  EC0C  F015         	call	_ENVIA_LCD_CMD
   737   00295C                     
   738                           ;LCD.c: 89:  ENVIA_LCD_CMD(0x06);
   739   00295C  0E06               	movlw	6
   740   00295E  EC0C  F015         	call	_ENVIA_LCD_CMD
   741   002962                     
   742                           ;LCD.c: 90:  ENVIA_LCD_CMD(0x01);
   743   002962  0E01               	movlw	1
   744   002964  EC0C  F015         	call	_ENVIA_LCD_CMD
   745   002968  0012               	return		;funcret
   746   00296A                     __end_of_LCD_CONFIG:
   747                           	callstack 0
   748                           
   749 ;; *************** function _CURSOR_ONOFF *****************
   750 ;; Defined at:
   751 ;;		line 35 in file "LCD.c"
   752 ;; Parameters:    Size  Location     Type
   753 ;;  estado          1    wreg     unsigned char 
   754 ;; Auto vars:     Size  Location     Type
   755 ;;  estado          1   15[COMRAM] unsigned char 
   756 ;; Return value:  Size  Location     Type
   757 ;;                  1    wreg      void 
   758 ;; Registers used:
   759 ;;		wreg, status,2, status,0, cstack
   760 ;; Tracked objects:
   761 ;;		On entry : 0/0
   762 ;;		On exit  : 0/0
   763 ;;		Unchanged: 0/0
   764 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   765 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   766 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   767 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   768 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   769 ;;Total ram usage:        1 bytes
   770 ;; Hardware stack levels used: 1
   771 ;; Hardware stack levels required when called: 4
   772 ;; This function calls:
   773 ;;		_ENVIA_LCD_CMD
   774 ;; This function is called by:
   775 ;;		_lcd_init
   776 ;; This function uses a non-reentrant model
   777 ;;
   778                           
   779                           	psect	text3
   780   002AB4                     __ptext3:
   781                           	callstack 0
   782   002AB4                     _CURSOR_ONOFF:
   783                           	callstack 121
   784                           
   785                           ;incstack = 0
   786                           ;CURSOR_ONOFF@estado stored from wreg
   787   002AB4  6E10               	movwf	CURSOR_ONOFF@estado^(0+1280),c
   788   002AB6                     
   789                           ;LCD.c: 35: void CURSOR_ONOFF(unsigned char estado);LCD.c: 36: {;LCD.c: 37:  if(estado =
      +                          = 0) ENVIA_LCD_CMD(0x0E);
   790   002AB6  5010               	movf	CURSOR_ONOFF@estado^(0+1280),w,c
   791   002AB8  A4D8               	btfss	status,2,c
   792   002ABA  EF61  F015         	goto	u21
   793   002ABE  EF63  F015         	goto	u20
   794   002AC2                     u21:
   795   002AC2  EF66  F015         	goto	l930
   796   002AC6                     u20:
   797   002AC6  0E0E               	movlw	14
   798   002AC8  EC0C  F015         	call	_ENVIA_LCD_CMD
   799   002ACC                     l930:
   800                           
   801                           ;LCD.c: 38:  if(estado == 1) ENVIA_LCD_CMD(0x0C);
   802   002ACC  0410               	decf	CURSOR_ONOFF@estado^(0+1280),w,c
   803   002ACE  A4D8               	btfss	status,2,c
   804   002AD0  EF6C  F015         	goto	u31
   805   002AD4  EF6E  F015         	goto	u30
   806   002AD8                     u31:
   807   002AD8  EF71  F015         	goto	l42
   808   002ADC                     u30:
   809   002ADC  0E0C               	movlw	12
   810   002ADE  EC0C  F015         	call	_ENVIA_LCD_CMD
   811   002AE2                     l42:
   812   002AE2  0012               	return		;funcret
   813   002AE4                     __end_of_CURSOR_ONOFF:
   814                           	callstack 0
   815                           
   816 ;; *************** function _CURSOR_HOME *****************
   817 ;; Defined at:
   818 ;;		line 30 in file "LCD.c"
   819 ;; Parameters:    Size  Location     Type
   820 ;;		None
   821 ;; Auto vars:     Size  Location     Type
   822 ;;		None
   823 ;; Return value:  Size  Location     Type
   824 ;;                  1    wreg      void 
   825 ;; Registers used:
   826 ;;		wreg, status,2, status,0, cstack
   827 ;; Tracked objects:
   828 ;;		On entry : 0/0
   829 ;;		On exit  : 0/0
   830 ;;		Unchanged: 0/0
   831 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   832 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   833 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   834 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   835 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   836 ;;Total ram usage:        0 bytes
   837 ;; Hardware stack levels used: 1
   838 ;; Hardware stack levels required when called: 4
   839 ;; This function calls:
   840 ;;		_ENVIA_LCD_CMD
   841 ;; This function is called by:
   842 ;;		_lcd_init
   843 ;; This function uses a non-reentrant model
   844 ;;
   845                           
   846                           	psect	text4
   847   002B46                     __ptext4:
   848                           	callstack 0
   849   002B46                     _CURSOR_HOME:
   850                           	callstack 121
   851   002B46                     
   852                           ;LCD.c: 32:  ENVIA_LCD_CMD(0x02);
   853   002B46  0E02               	movlw	2
   854   002B48  EC0C  F015         	call	_ENVIA_LCD_CMD
   855   002B4C  0012               	return		;funcret
   856   002B4E                     __end_of_CURSOR_HOME:
   857                           	callstack 0
   858                           
   859 ;; *************** function _BORRAR_LCD *****************
   860 ;; Defined at:
   861 ;;		line 67 in file "LCD.c"
   862 ;; Parameters:    Size  Location     Type
   863 ;;		None
   864 ;; Auto vars:     Size  Location     Type
   865 ;;		None
   866 ;; Return value:  Size  Location     Type
   867 ;;                  1    wreg      void 
   868 ;; Registers used:
   869 ;;		wreg, status,2, status,0, cstack
   870 ;; Tracked objects:
   871 ;;		On entry : 0/0
   872 ;;		On exit  : 0/0
   873 ;;		Unchanged: 0/0
   874 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   875 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   876 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   877 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   878 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   879 ;;Total ram usage:        0 bytes
   880 ;; Hardware stack levels used: 1
   881 ;; Hardware stack levels required when called: 4
   882 ;; This function calls:
   883 ;;		_ENVIA_LCD_CMD
   884 ;; This function is called by:
   885 ;;		_lcd_init
   886 ;; This function uses a non-reentrant model
   887 ;;
   888                           
   889                           	psect	text5
   890   002B4E                     __ptext5:
   891                           	callstack 0
   892   002B4E                     _BORRAR_LCD:
   893                           	callstack 121
   894   002B4E                     
   895                           ;LCD.c: 69:  ENVIA_LCD_CMD(0x01);
   896   002B4E  0E01               	movlw	1
   897   002B50  EC0C  F015         	call	_ENVIA_LCD_CMD
   898   002B54  0012               	return		;funcret
   899   002B56                     __end_of_BORRAR_LCD:
   900                           	callstack 0
   901                           
   902 ;; *************** function _convierte *****************
   903 ;; Defined at:
   904 ;;		line 50 in file "maincode4.c"
   905 ;; Parameters:    Size  Location     Type
   906 ;;  numero          2   24[COMRAM] unsigned int 
   907 ;; Auto vars:     Size  Location     Type
   908 ;;		None
   909 ;; Return value:  Size  Location     Type
   910 ;;                  1    wreg      void 
   911 ;; Registers used:
   912 ;;		wreg, status,2, status,0, cstack
   913 ;; Tracked objects:
   914 ;;		On entry : 0/0
   915 ;;		On exit  : 0/0
   916 ;;		Unchanged: 0/0
   917 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   918 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   919 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   920 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   921 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   922 ;;Total ram usage:        2 bytes
   923 ;; Hardware stack levels used: 1
   924 ;; Hardware stack levels required when called: 3
   925 ;; This function calls:
   926 ;;		___lwdiv
   927 ;;		___lwmod
   928 ;; This function is called by:
   929 ;;		_main
   930 ;; This function uses a non-reentrant model
   931 ;;
   932                           
   933                           	psect	text6
   934   002668                     __ptext6:
   935                           	callstack 0
   936   002668                     _convierte:
   937                           	callstack 123
   938   002668                     
   939                           ;maincode4.c: 51:     diez_millar = numero / 10000;
   940   002668  C519  F512         	movff	convierte@numero,___lwdiv@dividend
   941   00266C  C51A  F513         	movff	convierte@numero+1,___lwdiv@dividend+1
   942   002670  0E27               	movlw	39
   943   002672  6E15               	movwf	(___lwdiv@divisor+1)^(0+1280),c
   944   002674  0E10               	movlw	16
   945   002676  6E14               	movwf	___lwdiv@divisor^(0+1280),c
   946   002678  ECE0  F013         	call	___lwdiv	;wreg free
   947   00267C  5012               	movf	?___lwdiv^(0+1280),w,c
   948   00267E  6E21               	movwf	_diez_millar^(0+1280),c
   949                           
   950                           ;maincode4.c: 52:     millar = (numero % 10000) / 1000;
   951   002680  0E27               	movlw	39
   952   002682  6E10               	movwf	(___lwmod@divisor+1)^(0+1280),c
   953   002684  0E10               	movlw	16
   954   002686  6E0F               	movwf	___lwmod@divisor^(0+1280),c
   955   002688  C519  F50D         	movff	convierte@numero,___lwmod@dividend
   956   00268C  C51A  F50E         	movff	convierte@numero+1,___lwmod@dividend+1
   957   002690  EC53  F014         	call	___lwmod	;wreg free
   958   002694  C50D  F512         	movff	?___lwmod,___lwdiv@dividend
   959   002698  C50E  F513         	movff	?___lwmod+1,___lwdiv@dividend+1
   960   00269C  0E03               	movlw	3
   961   00269E  6E15               	movwf	(___lwdiv@divisor+1)^(0+1280),c
   962   0026A0  0EE8               	movlw	232
   963   0026A2  6E14               	movwf	___lwdiv@divisor^(0+1280),c
   964   0026A4  ECE0  F013         	call	___lwdiv	;wreg free
   965   0026A8  5012               	movf	?___lwdiv^(0+1280),w,c
   966   0026AA  6E20               	movwf	_millar^(0+1280),c
   967                           
   968                           ;maincode4.c: 53:     centena = (numero % 1000) / 100;
   969   0026AC  0E03               	movlw	3
   970   0026AE  6E10               	movwf	(___lwmod@divisor+1)^(0+1280),c
   971   0026B0  0EE8               	movlw	232
   972   0026B2  6E0F               	movwf	___lwmod@divisor^(0+1280),c
   973   0026B4  C519  F50D         	movff	convierte@numero,___lwmod@dividend
   974   0026B8  C51A  F50E         	movff	convierte@numero+1,___lwmod@dividend+1
   975   0026BC  EC53  F014         	call	___lwmod	;wreg free
   976   0026C0  C50D  F512         	movff	?___lwmod,___lwdiv@dividend
   977   0026C4  C50E  F513         	movff	?___lwmod+1,___lwdiv@dividend+1
   978   0026C8  0E00               	movlw	0
   979   0026CA  6E15               	movwf	(___lwdiv@divisor+1)^(0+1280),c
   980   0026CC  0E64               	movlw	100
   981   0026CE  6E14               	movwf	___lwdiv@divisor^(0+1280),c
   982   0026D0  ECE0  F013         	call	___lwdiv	;wreg free
   983   0026D4  5012               	movf	?___lwdiv^(0+1280),w,c
   984   0026D6  6E1F               	movwf	_centena^(0+1280),c
   985                           
   986                           ;maincode4.c: 54:     decena = (numero % 100) / 10;
   987   0026D8  0E00               	movlw	0
   988   0026DA  6E10               	movwf	(___lwmod@divisor+1)^(0+1280),c
   989   0026DC  0E64               	movlw	100
   990   0026DE  6E0F               	movwf	___lwmod@divisor^(0+1280),c
   991   0026E0  C519  F50D         	movff	convierte@numero,___lwmod@dividend
   992   0026E4  C51A  F50E         	movff	convierte@numero+1,___lwmod@dividend+1
   993   0026E8  EC53  F014         	call	___lwmod	;wreg free
   994   0026EC  C50D  F512         	movff	?___lwmod,___lwdiv@dividend
   995   0026F0  C50E  F513         	movff	?___lwmod+1,___lwdiv@dividend+1
   996   0026F4  0E00               	movlw	0
   997   0026F6  6E15               	movwf	(___lwdiv@divisor+1)^(0+1280),c
   998   0026F8  0E0A               	movlw	10
   999   0026FA  6E14               	movwf	___lwdiv@divisor^(0+1280),c
  1000   0026FC  ECE0  F013         	call	___lwdiv	;wreg free
  1001   002700  5012               	movf	?___lwdiv^(0+1280),w,c
  1002   002702  6E1E               	movwf	_decena^(0+1280),c
  1003                           
  1004                           ;maincode4.c: 55:     unidad = numero % 10;
  1005   002704  C519  F50D         	movff	convierte@numero,___lwmod@dividend
  1006   002708  C51A  F50E         	movff	convierte@numero+1,___lwmod@dividend+1
  1007   00270C  0E00               	movlw	0
  1008   00270E  6E10               	movwf	(___lwmod@divisor+1)^(0+1280),c
  1009   002710  0E0A               	movlw	10
  1010   002712  6E0F               	movwf	___lwmod@divisor^(0+1280),c
  1011   002714  EC53  F014         	call	___lwmod	;wreg free
  1012   002718  500D               	movf	?___lwmod^(0+1280),w,c
  1013   00271A  6E1D               	movwf	_unidad^(0+1280),c
  1014   00271C  0012               	return		;funcret
  1015   00271E                     __end_of_convierte:
  1016                           	callstack 0
  1017                           
  1018 ;; *************** function ___lwmod *****************
  1019 ;; Defined at:
  1020 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\lwmod.c"
  1021 ;; Parameters:    Size  Location     Type
  1022 ;;  dividend        2   12[COMRAM] unsigned int 
  1023 ;;  divisor         2   14[COMRAM] unsigned int 
  1024 ;; Auto vars:     Size  Location     Type
  1025 ;;  counter         1   16[COMRAM] unsigned char 
  1026 ;; Return value:  Size  Location     Type
  1027 ;;                  2   12[COMRAM] unsigned int 
  1028 ;; Registers used:
  1029 ;;		wreg, status,2, status,0
  1030 ;; Tracked objects:
  1031 ;;		On entry : 0/0
  1032 ;;		On exit  : 0/0
  1033 ;;		Unchanged: 0/0
  1034 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1035 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1036 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1037 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1038 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1039 ;;Total ram usage:        5 bytes
  1040 ;; Hardware stack levels used: 1
  1041 ;; Hardware stack levels required when called: 2
  1042 ;; This function calls:
  1043 ;;		Nothing
  1044 ;; This function is called by:
  1045 ;;		_convierte
  1046 ;; This function uses a non-reentrant model
  1047 ;;
  1048                           
  1049                           	psect	text7
  1050   0028A6                     __ptext7:
  1051                           	callstack 0
  1052   0028A6                     ___lwmod:
  1053                           	callstack 123
  1054   0028A6  500F               	movf	___lwmod@divisor^(0+1280),w,c
  1055   0028A8  1010               	iorwf	(___lwmod@divisor+1)^(0+1280),w,c
  1056   0028AA  B4D8               	btfsc	status,2,c
  1057   0028AC  EF5A  F014         	goto	u251
  1058   0028B0  EF5C  F014         	goto	u250
  1059   0028B4                     u251:
  1060   0028B4  EF80  F014         	goto	l684
  1061   0028B8                     u250:
  1062   0028B8  0E01               	movlw	1
  1063   0028BA  6E11               	movwf	___lwmod@counter^(0+1280),c
  1064   0028BC  EF64  F014         	goto	l1204
  1065   0028C0                     l1202:
  1066   0028C0  90D8               	bcf	status,0,c
  1067   0028C2  360F               	rlcf	___lwmod@divisor^(0+1280),f,c
  1068   0028C4  3610               	rlcf	(___lwmod@divisor+1)^(0+1280),f,c
  1069   0028C6  2A11               	incf	___lwmod@counter^(0+1280),f,c
  1070   0028C8                     l1204:
  1071   0028C8  AE10               	btfss	(___lwmod@divisor+1)^(0+1280),7,c
  1072   0028CA  EF69  F014         	goto	u261
  1073   0028CE  EF6B  F014         	goto	u260
  1074   0028D2                     u261:
  1075   0028D2  EF60  F014         	goto	l1202
  1076   0028D6                     u260:
  1077   0028D6                     l1206:
  1078   0028D6  500F               	movf	___lwmod@divisor^(0+1280),w,c
  1079   0028D8  5C0D               	subwf	___lwmod@dividend^(0+1280),w,c
  1080   0028DA  5010               	movf	(___lwmod@divisor+1)^(0+1280),w,c
  1081   0028DC  580E               	subwfb	(___lwmod@dividend+1)^(0+1280),w,c
  1082   0028DE  A0D8               	btfss	status,0,c
  1083   0028E0  EF74  F014         	goto	u271
  1084   0028E4  EF76  F014         	goto	u270
  1085   0028E8                     u271:
  1086   0028E8  EF7A  F014         	goto	l1210
  1087   0028EC                     u270:
  1088   0028EC  500F               	movf	___lwmod@divisor^(0+1280),w,c
  1089   0028EE  5E0D               	subwf	___lwmod@dividend^(0+1280),f,c
  1090   0028F0  5010               	movf	(___lwmod@divisor+1)^(0+1280),w,c
  1091   0028F2  5A0E               	subwfb	(___lwmod@dividend+1)^(0+1280),f,c
  1092   0028F4                     l1210:
  1093   0028F4  90D8               	bcf	status,0,c
  1094   0028F6  3210               	rrcf	(___lwmod@divisor+1)^(0+1280),f,c
  1095   0028F8  320F               	rrcf	___lwmod@divisor^(0+1280),f,c
  1096   0028FA  2E11               	decfsz	___lwmod@counter^(0+1280),f,c
  1097   0028FC  EF6B  F014         	goto	l1206
  1098   002900                     l684:
  1099   002900  C50D  F50D         	movff	___lwmod@dividend,?___lwmod
  1100   002904  C50E  F50E         	movff	___lwmod@dividend+1,?___lwmod+1
  1101   002908  0012               	return		;funcret
  1102   00290A                     __end_of___lwmod:
  1103                           	callstack 0
  1104                           
  1105 ;; *************** function ___lwdiv *****************
  1106 ;; Defined at:
  1107 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\lwdiv.c"
  1108 ;; Parameters:    Size  Location     Type
  1109 ;;  dividend        2   17[COMRAM] unsigned int 
  1110 ;;  divisor         2   19[COMRAM] unsigned int 
  1111 ;; Auto vars:     Size  Location     Type
  1112 ;;  quotient        2   21[COMRAM] unsigned int 
  1113 ;;  counter         1   23[COMRAM] unsigned char 
  1114 ;; Return value:  Size  Location     Type
  1115 ;;                  2   17[COMRAM] unsigned int 
  1116 ;; Registers used:
  1117 ;;		wreg, status,2, status,0
  1118 ;; Tracked objects:
  1119 ;;		On entry : 0/0
  1120 ;;		On exit  : 0/0
  1121 ;;		Unchanged: 0/0
  1122 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1123 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1124 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1125 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1126 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1127 ;;Total ram usage:        7 bytes
  1128 ;; Hardware stack levels used: 1
  1129 ;; Hardware stack levels required when called: 2
  1130 ;; This function calls:
  1131 ;;		Nothing
  1132 ;; This function is called by:
  1133 ;;		_convierte
  1134 ;; This function uses a non-reentrant model
  1135 ;;
  1136                           
  1137                           	psect	text8
  1138   0027C0                     __ptext8:
  1139                           	callstack 0
  1140   0027C0                     ___lwdiv:
  1141                           	callstack 123
  1142   0027C0  0E00               	movlw	0
  1143   0027C2  6E17               	movwf	(___lwdiv@quotient+1)^(0+1280),c
  1144   0027C4  0E00               	movlw	0
  1145   0027C6  6E16               	movwf	___lwdiv@quotient^(0+1280),c
  1146   0027C8  5014               	movf	___lwdiv@divisor^(0+1280),w,c
  1147   0027CA  1015               	iorwf	(___lwdiv@divisor+1)^(0+1280),w,c
  1148   0027CC  B4D8               	btfsc	status,2,c
  1149   0027CE  EFEB  F013         	goto	u221
  1150   0027D2  EFED  F013         	goto	u220
  1151   0027D6                     u221:
  1152   0027D6  EF15  F014         	goto	l674
  1153   0027DA                     u220:
  1154   0027DA  0E01               	movlw	1
  1155   0027DC  6E18               	movwf	___lwdiv@counter^(0+1280),c
  1156   0027DE  EFF5  F013         	goto	l1184
  1157   0027E2                     l1182:
  1158   0027E2  90D8               	bcf	status,0,c
  1159   0027E4  3614               	rlcf	___lwdiv@divisor^(0+1280),f,c
  1160   0027E6  3615               	rlcf	(___lwdiv@divisor+1)^(0+1280),f,c
  1161   0027E8  2A18               	incf	___lwdiv@counter^(0+1280),f,c
  1162   0027EA                     l1184:
  1163   0027EA  AE15               	btfss	(___lwdiv@divisor+1)^(0+1280),7,c
  1164   0027EC  EFFA  F013         	goto	u231
  1165   0027F0  EFFC  F013         	goto	u230
  1166   0027F4                     u231:
  1167   0027F4  EFF1  F013         	goto	l1182
  1168   0027F8                     u230:
  1169   0027F8                     l1186:
  1170   0027F8  90D8               	bcf	status,0,c
  1171   0027FA  3616               	rlcf	___lwdiv@quotient^(0+1280),f,c
  1172   0027FC  3617               	rlcf	(___lwdiv@quotient+1)^(0+1280),f,c
  1173   0027FE  5014               	movf	___lwdiv@divisor^(0+1280),w,c
  1174   002800  5C12               	subwf	___lwdiv@dividend^(0+1280),w,c
  1175   002802  5015               	movf	(___lwdiv@divisor+1)^(0+1280),w,c
  1176   002804  5813               	subwfb	(___lwdiv@dividend+1)^(0+1280),w,c
  1177   002806  A0D8               	btfss	status,0,c
  1178   002808  EF08  F014         	goto	u241
  1179   00280C  EF0A  F014         	goto	u240
  1180   002810                     u241:
  1181   002810  EF0F  F014         	goto	l1194
  1182   002814                     u240:
  1183   002814  5014               	movf	___lwdiv@divisor^(0+1280),w,c
  1184   002816  5E12               	subwf	___lwdiv@dividend^(0+1280),f,c
  1185   002818  5015               	movf	(___lwdiv@divisor+1)^(0+1280),w,c
  1186   00281A  5A13               	subwfb	(___lwdiv@dividend+1)^(0+1280),f,c
  1187   00281C  8016               	bsf	___lwdiv@quotient^(0+1280),0,c
  1188   00281E                     l1194:
  1189   00281E  90D8               	bcf	status,0,c
  1190   002820  3215               	rrcf	(___lwdiv@divisor+1)^(0+1280),f,c
  1191   002822  3214               	rrcf	___lwdiv@divisor^(0+1280),f,c
  1192   002824  2E18               	decfsz	___lwdiv@counter^(0+1280),f,c
  1193   002826  EFFC  F013         	goto	l1186
  1194   00282A                     l674:
  1195   00282A  C516  F512         	movff	___lwdiv@quotient,?___lwdiv
  1196   00282E  C517  F513         	movff	___lwdiv@quotient+1,?___lwdiv+1
  1197   002832  0012               	return		;funcret
  1198   002834                     __end_of___lwdiv:
  1199                           	callstack 0
  1200                           
  1201 ;; *************** function _configuro *****************
  1202 ;; Defined at:
  1203 ;;		line 15 in file "maincode4.c"
  1204 ;; Parameters:    Size  Location     Type
  1205 ;;		None
  1206 ;; Auto vars:     Size  Location     Type
  1207 ;;		None
  1208 ;; Return value:  Size  Location     Type
  1209 ;;                  1    wreg      void 
  1210 ;; Registers used:
  1211 ;;		wreg, status,2
  1212 ;; Tracked objects:
  1213 ;;		On entry : 0/0
  1214 ;;		On exit  : 0/0
  1215 ;;		Unchanged: 0/0
  1216 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1217 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1218 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1219 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1220 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1221 ;;Total ram usage:        0 bytes
  1222 ;; Hardware stack levels used: 1
  1223 ;; Hardware stack levels required when called: 2
  1224 ;; This function calls:
  1225 ;;		Nothing
  1226 ;; This function is called by:
  1227 ;;		_main
  1228 ;; This function uses a non-reentrant model
  1229 ;;
  1230                           
  1231                           	psect	text9
  1232   002AE4                     __ptext9:
  1233                           	callstack 0
  1234   002AE4                     _configuro:
  1235                           	callstack 124
  1236   002AE4                     
  1237                           ;maincode4.c: 17:     OSCCON1 = 0x60;
  1238   002AE4  0E60               	movlw	96
  1239   002AE6  0100               	movlb	0	; () banked
  1240   002AE8  6FAD               	movwf	173,b	;volatile
  1241                           
  1242                           ;maincode4.c: 18:     OSCFRQ = 0x06;
  1243   002AEA  0E06               	movlw	6
  1244   002AEC  6FB1               	movwf	177,b	;volatile
  1245                           
  1246                           ;maincode4.c: 19:     OSCEN = 0x40;
  1247   002AEE  0E40               	movlw	64
  1248   002AF0  6FB3               	movwf	179,b	;volatile
  1249   002AF2                     
  1250                           ; BSR set to: 0
  1251                           ;maincode4.c: 21:     TRISBbits.TRISB4 = 1;
  1252   002AF2  88C7               	bsf	199,4,c	;volatile
  1253   002AF4                     
  1254                           ; BSR set to: 0
  1255                           ;maincode4.c: 22:     ANSELBbits.ANSELB4 = 0;
  1256   002AF4  0104               	movlb	4	; () banked
  1257   002AF6  9908               	bcf	8,4,b	;volatile
  1258   002AF8                     
  1259                           ; BSR set to: 4
  1260                           ;maincode4.c: 23:     WPUBbits.WPUB4 = 1;
  1261   002AF8  8909               	bsf	9,4,b	;volatile
  1262   002AFA                     
  1263                           ; BSR set to: 4
  1264                           ;maincode4.c: 24:     TRISCbits.TRISC0 = 0;
  1265   002AFA  90C8               	bcf	200,0,c	;volatile
  1266   002AFC                     
  1267                           ; BSR set to: 4
  1268                           ;maincode4.c: 25:     ANSELCbits.ANSELC0 = 0;
  1269   002AFC  9110               	bcf	16,0,b	;volatile
  1270                           
  1271                           ;maincode4.c: 27:     T0CON0 = 0x90;
  1272   002AFE  0E90               	movlw	144
  1273   002B00  0103               	movlb	3	; () banked
  1274   002B02  6F1A               	movwf	26,b	;volatile
  1275                           
  1276                           ;maincode4.c: 28:     T0CON1 = 0x53;
  1277   002B04  0E53               	movlw	83
  1278   002B06  6F1B               	movwf	27,b	;volatile
  1279   002B08                     
  1280                           ; BSR set to: 3
  1281                           ;maincode4.c: 29:     PIR3bits.TMR0IF = 0;
  1282   002B08  9EB1               	bcf	177,7,c	;volatile
  1283   002B0A                     
  1284                           ; BSR set to: 3
  1285                           ;maincode4.c: 30:     PIE3bits.TMR0IE = 1;
  1286   002B0A  8EA1               	bsf	161,7,c	;volatile
  1287   002B0C                     
  1288                           ; BSR set to: 3
  1289                           ;maincode4.c: 31:     INTCON0bits.GIE = 1;
  1290   002B0C  8ED6               	bsf	214,7,c	;volatile
  1291   002B0E                     
  1292                           ; BSR set to: 3
  1293   002B0E  0012               	return		;funcret
  1294   002B10                     __end_of_configuro:
  1295                           	callstack 0
  1296                           
  1297 ;; *************** function _POS_CURSOR *****************
  1298 ;; Defined at:
  1299 ;;		line 6 in file "LCD.c"
  1300 ;; Parameters:    Size  Location     Type
  1301 ;;  fila            1    wreg     unsigned char 
  1302 ;;  columna         1   15[COMRAM] unsigned char 
  1303 ;; Auto vars:     Size  Location     Type
  1304 ;;  fila            1   16[COMRAM] unsigned char 
  1305 ;; Return value:  Size  Location     Type
  1306 ;;                  1    wreg      void 
  1307 ;; Registers used:
  1308 ;;		wreg, status,2, status,0, cstack
  1309 ;; Tracked objects:
  1310 ;;		On entry : 0/0
  1311 ;;		On exit  : 0/0
  1312 ;;		Unchanged: 0/0
  1313 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1314 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1315 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1316 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1317 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1318 ;;Total ram usage:        2 bytes
  1319 ;; Hardware stack levels used: 1
  1320 ;; Hardware stack levels required when called: 4
  1321 ;; This function calls:
  1322 ;;		_ENVIA_LCD_CMD
  1323 ;; This function is called by:
  1324 ;;		_main
  1325 ;; This function uses a non-reentrant model
  1326 ;;
  1327                           
  1328                           	psect	text10
  1329   0029A8                     __ptext10:
  1330                           	callstack 0
  1331   0029A8                     _POS_CURSOR:
  1332                           	callstack 122
  1333                           
  1334                           ; BSR set to: 3
  1335                           ;incstack = 0
  1336                           ;POS_CURSOR@fila stored from wreg
  1337   0029A8  6E11               	movwf	POS_CURSOR@fila^(0+1280),c
  1338   0029AA                     
  1339                           ;LCD.c: 6: void POS_CURSOR(unsigned char fila,unsigned char columna);LCD.c: 7: {;LCD.c: 
      +                          8:  if(fila == 1)
  1340   0029AA  0411               	decf	POS_CURSOR@fila^(0+1280),w,c
  1341   0029AC  A4D8               	btfss	status,2,c
  1342   0029AE  EFDB  F014         	goto	u281
  1343   0029B2  EFDD  F014         	goto	u280
  1344   0029B6                     u281:
  1345   0029B6  EFE3  F014         	goto	l1218
  1346   0029BA                     u280:
  1347   0029BA                     
  1348                           ;LCD.c: 9:  {;LCD.c: 10:   ENVIA_LCD_CMD(0x80+columna);
  1349   0029BA  5010               	movf	POS_CURSOR@columna^(0+1280),w,c
  1350   0029BC  0F80               	addlw	128
  1351   0029BE  EC0C  F015         	call	_ENVIA_LCD_CMD
  1352                           
  1353                           ;LCD.c: 11:  }
  1354   0029C2  EFF0  F014         	goto	l24
  1355   0029C6                     l1218:
  1356   0029C6  0E02               	movlw	2
  1357   0029C8  1811               	xorwf	POS_CURSOR@fila^(0+1280),w,c
  1358   0029CA  A4D8               	btfss	status,2,c
  1359   0029CC  EFEA  F014         	goto	u291
  1360   0029D0  EFEC  F014         	goto	u290
  1361   0029D4                     u291:
  1362   0029D4  EFF0  F014         	goto	l24
  1363   0029D8                     u290:
  1364   0029D8                     
  1365                           ;LCD.c: 13:  {;LCD.c: 14:   ENVIA_LCD_CMD(0xC0+columna);
  1366   0029D8  5010               	movf	POS_CURSOR@columna^(0+1280),w,c
  1367   0029DA  0FC0               	addlw	192
  1368   0029DC  EC0C  F015         	call	_ENVIA_LCD_CMD
  1369   0029E0                     l24:
  1370   0029E0  0012               	return		;funcret
  1371   0029E2                     __end_of_POS_CURSOR:
  1372                           	callstack 0
  1373                           
  1374 ;; *************** function _ENVIA_LCD_CMD *****************
  1375 ;; Defined at:
  1376 ;;		line 104 in file "LCD.c"
  1377 ;; Parameters:    Size  Location     Type
  1378 ;;  dato            1    wreg     unsigned char 
  1379 ;; Auto vars:     Size  Location     Type
  1380 ;;  dato            1   13[COMRAM] unsigned char 
  1381 ;;  aux             1   14[COMRAM] unsigned char 
  1382 ;; Return value:  Size  Location     Type
  1383 ;;                  1    wreg      void 
  1384 ;; Registers used:
  1385 ;;		wreg, status,2, status,0, cstack
  1386 ;; Tracked objects:
  1387 ;;		On entry : 0/0
  1388 ;;		On exit  : 0/0
  1389 ;;		Unchanged: 0/0
  1390 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1391 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1392 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1393 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1394 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1395 ;;Total ram usage:        2 bytes
  1396 ;; Hardware stack levels used: 1
  1397 ;; Hardware stack levels required when called: 3
  1398 ;; This function calls:
  1399 ;;		_ENVIA_NIBBLE
  1400 ;;		_LEER_LCD
  1401 ;; This function is called by:
  1402 ;;		_POS_CURSOR
  1403 ;;		_CURSOR_HOME
  1404 ;;		_CURSOR_ONOFF
  1405 ;;		_BORRAR_LCD
  1406 ;;		_LCD_CONFIG
  1407 ;;		_BLINK_CURSOR
  1408 ;;		_DISPLAY_ONOFF
  1409 ;;		_GENERACARACTER
  1410 ;; This function uses a non-reentrant model
  1411 ;;
  1412                           
  1413                           	psect	text11
  1414   002A18                     __ptext11:
  1415                           	callstack 0
  1416   002A18                     _ENVIA_LCD_CMD:
  1417                           	callstack 121
  1418                           
  1419                           ;incstack = 0
  1420                           ;ENVIA_LCD_CMD@dato stored from wreg
  1421   002A18  6E0E               	movwf	ENVIA_LCD_CMD@dato^(0+1280),c
  1422   002A1A                     
  1423                           ;LCD.c: 104: void ENVIA_LCD_CMD(unsigned char dato);LCD.c: 105: {;LCD.c: 106:  unsigned 
      +                          char aux;;LCD.c: 107:  LATDbits.LATD0 = 0;
  1424   002A1A  90C1               	bcf	193,0,c	;volatile
  1425   002A1C                     
  1426                           ;LCD.c: 108:  LEER_LCD();
  1427   002A1C  EC1A  F014         	call	_LEER_LCD	;wreg free
  1428   002A20                     
  1429                           ;LCD.c: 109:  TRISD = 0b00000000;
  1430   002A20  0E00               	movlw	0
  1431   002A22  6EC9               	movwf	201,c	;volatile
  1432   002A24                     
  1433                           ;LCD.c: 111:         _delay(1200);
  1434   002A24  0EF0               	movlw	240
  1435   002A26                     u397:
  1436   002A26  D000               	nop2	
  1437   002A28  2EE8               	decfsz	wreg,f,c
  1438   002A2A  D7FD               	bra	u397
  1439   002A2C                     
  1440                           ;LCD.c: 112:         LATDbits.LATD1 = 0;
  1441   002A2C  92C1               	bcf	193,1,c	;volatile
  1442   002A2E                     
  1443                           ;LCD.c: 113:  LATDbits.LATD2 = 0;
  1444   002A2E  94C1               	bcf	193,2,c	;volatile
  1445   002A30                     
  1446                           ;LCD.c: 114:  LATDbits.LATD0 = 0;
  1447   002A30  90C1               	bcf	193,0,c	;volatile
  1448   002A32                     
  1449                           ;LCD.c: 115:  aux = dato & 0xF0;
  1450   002A32  500E               	movf	ENVIA_LCD_CMD@dato^(0+1280),w,c
  1451   002A34  0BF0               	andlw	240
  1452   002A36  6E0F               	movwf	ENVIA_LCD_CMD@aux^(0+1280),c
  1453   002A38                     
  1454                           ;LCD.c: 116:  ENVIA_NIBBLE(aux);
  1455   002A38  500F               	movf	ENVIA_LCD_CMD@aux^(0+1280),w,c
  1456   002A3A  EC88  F015         	call	_ENVIA_NIBBLE
  1457   002A3E                     
  1458                           ;LCD.c: 117:  aux = dato<<4;
  1459   002A3E  380E               	swapf	ENVIA_LCD_CMD@dato^(0+1280),w,c
  1460   002A40  0BF0               	andlw	240
  1461   002A42  6E0F               	movwf	ENVIA_LCD_CMD@aux^(0+1280),c
  1462   002A44                     
  1463                           ;LCD.c: 118:  ENVIA_NIBBLE(aux);
  1464   002A44  500F               	movf	ENVIA_LCD_CMD@aux^(0+1280),w,c
  1465   002A46  EC88  F015         	call	_ENVIA_NIBBLE
  1466   002A4A  0012               	return		;funcret
  1467   002A4C                     __end_of_ENVIA_LCD_CMD:
  1468                           	callstack 0
  1469                           
  1470 ;; *************** function _ESCRIBE_MENSAJE *****************
  1471 ;; Defined at:
  1472 ;;		line 41 in file "LCD.c"
  1473 ;; Parameters:    Size  Location     Type
  1474 ;;  cadena          1   15[COMRAM] PTR const unsigned char 
  1475 ;;		 -> STR_4(14), STR_3(10), STR_2(10), STR_1(13), 
  1476 ;;  tam             1   16[COMRAM] unsigned char 
  1477 ;; Auto vars:     Size  Location     Type
  1478 ;;  i               1   18[COMRAM] unsigned char 
  1479 ;; Return value:  Size  Location     Type
  1480 ;;                  1    wreg      void 
  1481 ;; Registers used:
  1482 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1483 ;; Tracked objects:
  1484 ;;		On entry : 0/0
  1485 ;;		On exit  : 0/0
  1486 ;;		Unchanged: 0/0
  1487 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1488 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1489 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1490 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1491 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1492 ;;Total ram usage:        4 bytes
  1493 ;; Hardware stack levels used: 1
  1494 ;; Hardware stack levels required when called: 4
  1495 ;; This function calls:
  1496 ;;		_ENVIA_CHAR
  1497 ;; This function is called by:
  1498 ;;		_main
  1499 ;; This function uses a non-reentrant model
  1500 ;;
  1501                           
  1502                           	psect	text12
  1503   002A4C                     __ptext12:
  1504                           	callstack 0
  1505   002A4C                     _ESCRIBE_MENSAJE:
  1506                           	callstack 122
  1507   002A4C                     
  1508                           ;LCD.c: 41: void ESCRIBE_MENSAJE(const char *cadena,unsigned char tam);LCD.c: 42: {;LCD.
      +                          c: 43:  unsigned char i = 0;
  1509   002A4C  0E00               	movlw	0
  1510   002A4E  6E13               	movwf	ESCRIBE_MENSAJE@i^(0+1280),c
  1511                           
  1512                           ;LCD.c: 44:  for(i = 0; i<tam; i++)
  1513   002A50  0E00               	movlw	0
  1514   002A52  6E13               	movwf	ESCRIBE_MENSAJE@i^(0+1280),c
  1515   002A54  EF36  F015         	goto	l1228
  1516   002A58                     l1224:
  1517                           
  1518                           ;LCD.c: 45:  {;LCD.c: 46:   ENVIA_CHAR(cadena[i]);
  1519   002A58  5010               	movf	ESCRIBE_MENSAJE@cadena^(0+1280),w,c
  1520   002A5A  2413               	addwf	ESCRIBE_MENSAJE@i^(0+1280),w,c
  1521   002A5C  6E12               	movwf	??_ESCRIBE_MENSAJE^(0+1280),c
  1522   002A5E  C512  F4F6         	movff	??_ESCRIBE_MENSAJE,tblptrl
  1523   002A62                     	if	0	;There is only one active tblptr byte
  1524   002A62                     	endif
  1525   002A62                     	if	0	;tblptru may be non-zero
  1526   002A62                     	endif
  1527   002A62                     	if	0	;tblptru may be non-zero
  1528   002A62                     	endif
  1529   002A62  0008               	tblrd		*
  1530   002A64  50F5               	movf	tablat,w,c
  1531   002A66  EC40  F015         	call	_ENVIA_CHAR
  1532   002A6A                     
  1533                           ;LCD.c: 47:  }
  1534   002A6A  2A13               	incf	ESCRIBE_MENSAJE@i^(0+1280),f,c
  1535   002A6C                     l1228:
  1536   002A6C  5011               	movf	ESCRIBE_MENSAJE@tam^(0+1280),w,c
  1537   002A6E  5C13               	subwf	ESCRIBE_MENSAJE@i^(0+1280),w,c
  1538   002A70  A0D8               	btfss	status,0,c
  1539   002A72  EF3D  F015         	goto	u301
  1540   002A76  EF3F  F015         	goto	u300
  1541   002A7A                     u301:
  1542   002A7A  EF2C  F015         	goto	l1224
  1543   002A7E                     u300:
  1544   002A7E  0012               	return		;funcret
  1545   002A80                     __end_of_ESCRIBE_MENSAJE:
  1546                           	callstack 0
  1547                           
  1548 ;; *************** function _ENVIA_CHAR *****************
  1549 ;; Defined at:
  1550 ;;		line 50 in file "LCD.c"
  1551 ;; Parameters:    Size  Location     Type
  1552 ;;  dato            1    wreg     unsigned char 
  1553 ;; Auto vars:     Size  Location     Type
  1554 ;;  dato            1   13[COMRAM] unsigned char 
  1555 ;;  aux             1   14[COMRAM] unsigned char 
  1556 ;; Return value:  Size  Location     Type
  1557 ;;                  1    wreg      void 
  1558 ;; Registers used:
  1559 ;;		wreg, status,2, status,0, cstack
  1560 ;; Tracked objects:
  1561 ;;		On entry : 0/0
  1562 ;;		On exit  : 0/0
  1563 ;;		Unchanged: 0/0
  1564 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1565 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1566 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1567 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1568 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1569 ;;Total ram usage:        2 bytes
  1570 ;; Hardware stack levels used: 1
  1571 ;; Hardware stack levels required when called: 3
  1572 ;; This function calls:
  1573 ;;		_ENVIA_NIBBLE
  1574 ;;		_LEER_LCD
  1575 ;; This function is called by:
  1576 ;;		_ESCRIBE_MENSAJE
  1577 ;;		_main
  1578 ;;		_GENERACARACTER
  1579 ;; This function uses a non-reentrant model
  1580 ;;
  1581                           
  1582                           	psect	text13
  1583   002A80                     __ptext13:
  1584                           	callstack 0
  1585   002A80                     _ENVIA_CHAR:
  1586                           	callstack 122
  1587                           
  1588                           ;incstack = 0
  1589                           ;ENVIA_CHAR@dato stored from wreg
  1590   002A80  6E0E               	movwf	ENVIA_CHAR@dato^(0+1280),c
  1591   002A82                     
  1592                           ;LCD.c: 50: void ENVIA_CHAR(unsigned char dato);LCD.c: 51: {;LCD.c: 52:  unsigned char a
      +                          ux;;LCD.c: 53:  LATDbits.LATD0 = 1;
  1593   002A82  80C1               	bsf	193,0,c	;volatile
  1594   002A84                     
  1595                           ;LCD.c: 54:  LEER_LCD();
  1596   002A84  EC1A  F014         	call	_LEER_LCD	;wreg free
  1597   002A88                     
  1598                           ;LCD.c: 55:  TRISD = 0x00;
  1599   002A88  0E00               	movlw	0
  1600   002A8A  6EC9               	movwf	201,c	;volatile
  1601   002A8C                     
  1602                           ;LCD.c: 56:         _delay(1200);
  1603   002A8C  0EF0               	movlw	240
  1604   002A8E                     u407:
  1605   002A8E  D000               	nop2	
  1606   002A90  2EE8               	decfsz	wreg,f,c
  1607   002A92  D7FD               	bra	u407
  1608   002A94                     
  1609                           ;LCD.c: 58:  LATDbits.LATD1 = 0;
  1610   002A94  92C1               	bcf	193,1,c	;volatile
  1611   002A96                     
  1612                           ;LCD.c: 59:  LATDbits.LATD2 = 0;
  1613   002A96  94C1               	bcf	193,2,c	;volatile
  1614   002A98                     
  1615                           ;LCD.c: 60:  LATDbits.LATD0 = 1;
  1616   002A98  80C1               	bsf	193,0,c	;volatile
  1617   002A9A                     
  1618                           ;LCD.c: 61:  aux = dato & 0xF0;
  1619   002A9A  500E               	movf	ENVIA_CHAR@dato^(0+1280),w,c
  1620   002A9C  0BF0               	andlw	240
  1621   002A9E  6E0F               	movwf	ENVIA_CHAR@aux^(0+1280),c
  1622   002AA0                     
  1623                           ;LCD.c: 62:  ENVIA_NIBBLE(aux);
  1624   002AA0  500F               	movf	ENVIA_CHAR@aux^(0+1280),w,c
  1625   002AA2  EC88  F015         	call	_ENVIA_NIBBLE
  1626   002AA6                     
  1627                           ;LCD.c: 63:  aux = dato << 4;
  1628   002AA6  380E               	swapf	ENVIA_CHAR@dato^(0+1280),w,c
  1629   002AA8  0BF0               	andlw	240
  1630   002AAA  6E0F               	movwf	ENVIA_CHAR@aux^(0+1280),c
  1631   002AAC                     
  1632                           ;LCD.c: 64:  ENVIA_NIBBLE(aux);
  1633   002AAC  500F               	movf	ENVIA_CHAR@aux^(0+1280),w,c
  1634   002AAE  EC88  F015         	call	_ENVIA_NIBBLE
  1635   002AB2  0012               	return		;funcret
  1636   002AB4                     __end_of_ENVIA_CHAR:
  1637                           	callstack 0
  1638                           
  1639 ;; *************** function _LEER_LCD *****************
  1640 ;; Defined at:
  1641 ;;		line 121 in file "LCD.c"
  1642 ;; Parameters:    Size  Location     Type
  1643 ;;		None
  1644 ;; Auto vars:     Size  Location     Type
  1645 ;;  aux             1   12[COMRAM] unsigned char 
  1646 ;; Return value:  Size  Location     Type
  1647 ;;                  1    wreg      void 
  1648 ;; Registers used:
  1649 ;;		wreg, status,2, status,0
  1650 ;; Tracked objects:
  1651 ;;		On entry : 0/0
  1652 ;;		On exit  : 0/0
  1653 ;;		Unchanged: 0/0
  1654 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1655 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1656 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1657 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1658 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1659 ;;Total ram usage:        1 bytes
  1660 ;; Hardware stack levels used: 1
  1661 ;; Hardware stack levels required when called: 2
  1662 ;; This function calls:
  1663 ;;		Nothing
  1664 ;; This function is called by:
  1665 ;;		_ENVIA_CHAR
  1666 ;;		_ENVIA_LCD_CMD
  1667 ;; This function uses a non-reentrant model
  1668 ;;
  1669                           
  1670                           	psect	text14
  1671   002834                     __ptext14:
  1672                           	callstack 0
  1673   002834                     _LEER_LCD:
  1674                           	callstack 121
  1675   002834                     
  1676                           ;LCD.c: 123:  unsigned char aux;;LCD.c: 124:  TRISD = 0xF8;
  1677   002834  0EF8               	movlw	248
  1678   002836  6EC9               	movwf	201,c	;volatile
  1679   002838                     
  1680                           ;LCD.c: 125:  LATDbits.LATD0 = 0;
  1681   002838  90C1               	bcf	193,0,c	;volatile
  1682   00283A                     
  1683                           ;LCD.c: 126:  LATDbits.LATD1 = 1;
  1684   00283A  82C1               	bsf	193,1,c	;volatile
  1685   00283C                     
  1686                           ;LCD.c: 127:  LATDbits.LATD2 = 1;
  1687   00283C  84C1               	bsf	193,2,c	;volatile
  1688   00283E                     
  1689                           ;LCD.c: 128:         _delay(1200);
  1690   00283E  0EF0               	movlw	240
  1691   002840                     u417:
  1692   002840  D000               	nop2	
  1693   002842  2EE8               	decfsz	wreg,f,c
  1694   002844  D7FD               	bra	u417
  1695   002846                     
  1696                           ;LCD.c: 130:  aux = PORTD;
  1697   002846  C4D1 F50D          	movff	1233,LEER_LCD@aux	;volatile
  1698   00284A                     
  1699                           ;LCD.c: 131:  LATDbits.LATD2 = 0;
  1700   00284A  94C1               	bcf	193,2,c	;volatile
  1701   00284C                     
  1702                           ;LCD.c: 132:         _delay(1200);
  1703   00284C  0EF0               	movlw	240
  1704   00284E                     u427:
  1705   00284E  D000               	nop2	
  1706   002850  2EE8               	decfsz	wreg,f,c
  1707   002852  D7FD               	bra	u427
  1708   002854                     
  1709                           ;LCD.c: 134:  LATDbits.LATD2 = 1;
  1710   002854  84C1               	bsf	193,2,c	;volatile
  1711   002856                     
  1712                           ;LCD.c: 135:         _delay(1200);
  1713   002856  0EF0               	movlw	240
  1714   002858                     u437:
  1715   002858  D000               	nop2	
  1716   00285A  2EE8               	decfsz	wreg,f,c
  1717   00285C  D7FD               	bra	u437
  1718   00285E                     
  1719                           ;LCD.c: 137:  LATDbits.LATD2 = 0;
  1720   00285E  94C1               	bcf	193,2,c	;volatile
  1721   002860                     l878:
  1722                           
  1723                           ;LCD.c: 138:  aux = aux & 0x80;
  1724   002860  500D               	movf	LEER_LCD@aux^(0+1280),w,c
  1725   002862  0B80               	andlw	128
  1726   002864  6E0D               	movwf	LEER_LCD@aux^(0+1280),c
  1727                           
  1728                           ;LCD.c: 139:  while(aux == 0x80)
  1729   002866  EF49  F014         	goto	l892
  1730   00286A                     l67:
  1731                           
  1732                           ;LCD.c: 140:         {;LCD.c: 141:             LATDbits.LATD2 = 1;
  1733   00286A  84C1               	bsf	193,2,c	;volatile
  1734   00286C                     
  1735                           ;LCD.c: 142:             _delay(1200);
  1736   00286C  0EF0               	movlw	240
  1737   00286E                     u447:
  1738   00286E  D000               	nop2	
  1739   002870  2EE8               	decfsz	wreg,f,c
  1740   002872  D7FD               	bra	u447
  1741   002874                     
  1742                           ;LCD.c: 143:             aux = PORTD;
  1743   002874  C4D1 F50D          	movff	1233,LEER_LCD@aux	;volatile
  1744   002878                     
  1745                           ;LCD.c: 144:             LATDbits.LATD2 = 0;
  1746   002878  94C1               	bcf	193,2,c	;volatile
  1747                           
  1748                           ;LCD.c: 145:             _delay(1200);
  1749   00287A  0EF0               	movlw	240
  1750   00287C                     u457:
  1751   00287C  D000               	nop2	
  1752   00287E  2EE8               	decfsz	wreg,f,c
  1753   002880  D7FD               	bra	u457
  1754   002882                     
  1755                           ;LCD.c: 146:             LATDbits.LATD2 = 1;
  1756   002882  84C1               	bsf	193,2,c	;volatile
  1757                           
  1758                           ;LCD.c: 147:             _delay(1200);
  1759   002884  0EF0               	movlw	240
  1760   002886                     u467:
  1761   002886  D000               	nop2	
  1762   002888  2EE8               	decfsz	wreg,f,c
  1763   00288A  D7FD               	bra	u467
  1764   00288C                     
  1765                           ;LCD.c: 148:             LATDbits.LATD2 = 0;
  1766   00288C  94C1               	bcf	193,2,c	;volatile
  1767   00288E  EF30  F014         	goto	l878
  1768   002892                     l892:
  1769                           
  1770                           ;LCD.c: 139:  while(aux == 0x80)
  1771   002892  0E80               	movlw	128
  1772   002894  180D               	xorwf	LEER_LCD@aux^(0+1280),w,c
  1773   002896  B4D8               	btfsc	status,2,c
  1774   002898  EF50  F014         	goto	u11
  1775   00289C  EF52  F014         	goto	u10
  1776   0028A0                     u11:
  1777   0028A0  EF35  F014         	goto	l67
  1778   0028A4                     u10:
  1779   0028A4  0012               	return		;funcret
  1780   0028A6                     __end_of_LEER_LCD:
  1781                           	callstack 0
  1782                           
  1783 ;; *************** function _ENVIA_NIBBLE *****************
  1784 ;; Defined at:
  1785 ;;		line 93 in file "LCD.c"
  1786 ;; Parameters:    Size  Location     Type
  1787 ;;  dato            1    wreg     unsigned char 
  1788 ;; Auto vars:     Size  Location     Type
  1789 ;;  dato            1   12[COMRAM] unsigned char 
  1790 ;; Return value:  Size  Location     Type
  1791 ;;                  1    wreg      void 
  1792 ;; Registers used:
  1793 ;;		wreg, status,2, status,0
  1794 ;; Tracked objects:
  1795 ;;		On entry : 0/0
  1796 ;;		On exit  : 0/0
  1797 ;;		Unchanged: 0/0
  1798 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1799 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1800 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1801 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1802 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1803 ;;Total ram usage:        1 bytes
  1804 ;; Hardware stack levels used: 1
  1805 ;; Hardware stack levels required when called: 2
  1806 ;; This function calls:
  1807 ;;		Nothing
  1808 ;; This function is called by:
  1809 ;;		_ENVIA_CHAR
  1810 ;;		_LCD_CONFIG
  1811 ;;		_ENVIA_LCD_CMD
  1812 ;; This function uses a non-reentrant model
  1813 ;;
  1814                           
  1815                           	psect	text15
  1816   002B10                     __ptext15:
  1817                           	callstack 0
  1818   002B10                     _ENVIA_NIBBLE:
  1819                           	callstack 122
  1820                           
  1821                           ;incstack = 0
  1822                           ;ENVIA_NIBBLE@dato stored from wreg
  1823   002B10  6E0D               	movwf	ENVIA_NIBBLE@dato^(0+1280),c
  1824   002B12                     
  1825                           ;LCD.c: 93: void ENVIA_NIBBLE(unsigned char dato);LCD.c: 94: {;LCD.c: 95:  LATD &= 0x0F;
  1826   002B12  0E0F               	movlw	15
  1827   002B14  16C1               	andwf	193,f,c	;volatile
  1828                           
  1829                           ;LCD.c: 96:  dato &= 0xF0;
  1830   002B16  0EF0               	movlw	240
  1831   002B18  160D               	andwf	ENVIA_NIBBLE@dato^(0+1280),f,c
  1832                           
  1833                           ;LCD.c: 97:  LATD|= dato;
  1834   002B1A  500D               	movf	ENVIA_NIBBLE@dato^(0+1280),w,c	;volatile
  1835   002B1C  12C1               	iorwf	193,f,c	;volatile
  1836   002B1E                     
  1837                           ;LCD.c: 98:  LATDbits.LATD2 = 1;
  1838   002B1E  84C1               	bsf	193,2,c	;volatile
  1839   002B20                     
  1840                           ;LCD.c: 100:         _delay(1200);
  1841   002B20  0EF0               	movlw	240
  1842   002B22                     u477:
  1843   002B22  D000               	nop2	
  1844   002B24  2EE8               	decfsz	wreg,f,c
  1845   002B26  D7FD               	bra	u477
  1846   002B28                     
  1847                           ;LCD.c: 101:  LATDbits.LATD2 = 0;
  1848   002B28  94C1               	bcf	193,2,c	;volatile
  1849   002B2A  0012               	return		;funcret
  1850   002B2C                     __end_of_ENVIA_NIBBLE:
  1851                           	callstack 0
  1852                           
  1853 ;; *************** function _TMR0_ISR *****************
  1854 ;; Defined at:
  1855 ;;		line 96 in file "maincode4.c"
  1856 ;; Parameters:    Size  Location     Type
  1857 ;;		None
  1858 ;; Auto vars:     Size  Location     Type
  1859 ;;		None
  1860 ;; Return value:  Size  Location     Type
  1861 ;;                  1    wreg      void 
  1862 ;; Registers used:
  1863 ;;		wreg, status,2, status,0, cstack
  1864 ;; Tracked objects:
  1865 ;;		On entry : 0/0
  1866 ;;		On exit  : 0/0
  1867 ;;		Unchanged: 0/0
  1868 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1869 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1870 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1871 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1872 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1873 ;;Total ram usage:        8 bytes
  1874 ;; Hardware stack levels used: 1
  1875 ;; Hardware stack levels required when called: 1
  1876 ;; This function calls:
  1877 ;;		_escalamiento
  1878 ;; This function is called by:
  1879 ;;		Interrupt level 2
  1880 ;; This function uses a non-reentrant model
  1881 ;;
  1882                           
  1883                           	psect	text16
  1884   002720                     __ptext16:
  1885                           	callstack 0
  1886   002720                     _TMR0_ISR:
  1887                           	callstack 121
  1888   002720                     
  1889                           ;maincode4.c: 97:     PIR3bits.TMR0IF = 0;
  1890   002720  9EB1               	bcf	177,7,c	;volatile
  1891                           
  1892                           ;maincode4.c: 98:     if(PORTCbits.RC0 == 0){
  1893   002722  B0D0               	btfsc	208,0,c	;volatile
  1894   002724  EF96  F013         	goto	i2u34_41
  1895   002728  EF98  F013         	goto	i2u34_40
  1896   00272C                     i2u34_41:
  1897   00272C  EFB0  F013         	goto	i2l173
  1898   002730                     i2u34_40:
  1899   002730                     
  1900                           ;maincode4.c: 99:         LATCbits.LATC0 = 1;
  1901   002730  80C0               	bsf	192,0,c	;volatile
  1902   002732                     
  1903                           ;maincode4.c: 100:         TMR0H = (escalamiento(posicion) >> 8) & 0x00FF;
  1904   002732  C522  F501         	movff	_posicion,escalamiento@numero
  1905   002736  C523  F502         	movff	_posicion+1,escalamiento@numero+1
  1906   00273A  EC96  F015         	call	_escalamiento	;wreg free
  1907   00273E  C502  F501         	movff	?_escalamiento+1,?_escalamiento
  1908   002742  6A02               	clrf	(?_escalamiento+1)^(0+1280),c
  1909   002744  5001               	movf	?_escalamiento^(0+1280),w,c
  1910   002746  0103               	movlb	3	; () banked
  1911   002748  6F19               	movwf	25,b	;volatile
  1912                           
  1913                           ;maincode4.c: 101:         TMR0L = escalamiento(posicion) & 0x00FF;
  1914   00274A  C522  F501         	movff	_posicion,escalamiento@numero
  1915   00274E  C523  F502         	movff	_posicion+1,escalamiento@numero+1
  1916   002752  EC96  F015         	call	_escalamiento	;wreg free
  1917   002756  5001               	movf	?_escalamiento^(0+1280),w,c
  1918   002758  0103               	movlb	3	; () banked
  1919   00275A  6F18               	movwf	24,b	;volatile
  1920                           
  1921                           ;maincode4.c: 102:     }
  1922   00275C  EFDF  F013         	goto	i2l175
  1923   002760                     i2l173:
  1924                           
  1925                           ;maincode4.c: 104:         LATCbits.LATC0 = 0;
  1926   002760  90C0               	bcf	192,0,c	;volatile
  1927   002762                     
  1928                           ;maincode4.c: 105:         TMR0H = ((45536 + (65535 - escalamiento(posicion)) + 1) >> 8)
      +                           & 0x00FF;
  1929   002762  C522  F501         	movff	_posicion,escalamiento@numero
  1930   002766  C523  F502         	movff	_posicion+1,escalamiento@numero+1
  1931   00276A  EC96  F015         	call	_escalamiento	;wreg free
  1932   00276E  5001               	movf	?_escalamiento^(0+1280),w,c
  1933   002770  6E05               	movwf	??_TMR0_ISR^(0+1280),c
  1934   002772  5002               	movf	(?_escalamiento+1)^(0+1280),w,c
  1935   002774  6E06               	movwf	(??_TMR0_ISR+1)^(0+1280),c
  1936   002776  6A07               	clrf	(??_TMR0_ISR+2)^(0+1280),c
  1937   002778  6A08               	clrf	(??_TMR0_ISR+3)^(0+1280),c
  1938   00277A  5005               	movf	??_TMR0_ISR^(0+1280),w,c
  1939   00277C  08E0               	sublw	224
  1940   00277E  6E09               	movwf	(??_TMR0_ISR+4)^(0+1280),c
  1941   002780  0EB1               	movlw	177
  1942   002782  5406               	subfwb	(??_TMR0_ISR+1)^(0+1280),w,c
  1943   002784  6E0A               	movwf	(??_TMR0_ISR+5)^(0+1280),c
  1944   002786  0E01               	movlw	1
  1945   002788  5407               	subfwb	(??_TMR0_ISR+2)^(0+1280),w,c
  1946   00278A  6E0B               	movwf	(??_TMR0_ISR+6)^(0+1280),c
  1947   00278C  0E00               	movlw	0
  1948   00278E  5408               	subfwb	(??_TMR0_ISR+3)^(0+1280),w,c
  1949   002790  6E0C               	movwf	(??_TMR0_ISR+7)^(0+1280),c
  1950   002792  C50A  F509         	movff	??_TMR0_ISR+5,??_TMR0_ISR+4
  1951   002796  C50B  F50A         	movff	??_TMR0_ISR+6,??_TMR0_ISR+5
  1952   00279A  C50C  F50B         	movff	??_TMR0_ISR+7,??_TMR0_ISR+6
  1953   00279E  6A0C               	clrf	(??_TMR0_ISR+7)^(0+1280),c
  1954   0027A0  BE0B               	btfsc	(??_TMR0_ISR+6)^(0+1280),7,c
  1955   0027A2  680C               	setf	(??_TMR0_ISR+7)^(0+1280),c
  1956   0027A4  5009               	movf	(??_TMR0_ISR+4)^(0+1280),w,c
  1957   0027A6  0103               	movlb	3	; () banked
  1958   0027A8  6F19               	movwf	25,b	;volatile
  1959                           
  1960                           ;maincode4.c: 106:         TMR0L = (45536 + (65535 - escalamiento(posicion)) + 1) & 0x00
      +                          FF;
  1961   0027AA  C522  F501         	movff	_posicion,escalamiento@numero
  1962   0027AE  C523  F502         	movff	_posicion+1,escalamiento@numero+1
  1963   0027B2  EC96  F015         	call	_escalamiento	;wreg free
  1964   0027B6  5001               	movf	?_escalamiento^(0+1280),w,c
  1965   0027B8  08E0               	sublw	224
  1966   0027BA  0103               	movlb	3	; () banked
  1967   0027BC  6F18               	movwf	24,b	;volatile
  1968   0027BE                     i2l175:
  1969                           
  1970                           ; BSR set to: 3
  1971   0027BE  0011               	retfie		f
  1972   0027C0                     __end_of_TMR0_ISR:
  1973                           	callstack 0
  1974                           
  1975 ;; *************** function _escalamiento *****************
  1976 ;; Defined at:
  1977 ;;		line 44 in file "maincode4.c"
  1978 ;; Parameters:    Size  Location     Type
  1979 ;;  numero          2    0[COMRAM] unsigned int 
  1980 ;; Auto vars:     Size  Location     Type
  1981 ;;  temporal1       2    2[COMRAM] unsigned int 
  1982 ;; Return value:  Size  Location     Type
  1983 ;;                  2    0[COMRAM] unsigned int 
  1984 ;; Registers used:
  1985 ;;		wreg, status,2, status,0
  1986 ;; Tracked objects:
  1987 ;;		On entry : 0/0
  1988 ;;		On exit  : 0/0
  1989 ;;		Unchanged: 0/0
  1990 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1991 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1992 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1993 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1994 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1995 ;;Total ram usage:        4 bytes
  1996 ;; Hardware stack levels used: 1
  1997 ;; This function calls:
  1998 ;;		Nothing
  1999 ;; This function is called by:
  2000 ;;		_TMR0_ISR
  2001 ;; This function uses a non-reentrant model
  2002 ;;
  2003                           
  2004                           	psect	text17
  2005   002B2C                     __ptext17:
  2006                           	callstack 0
  2007   002B2C                     _escalamiento:
  2008                           	callstack 121
  2009   002B2C                     
  2010                           ;maincode4.c: 45:     unsigned int temporal1;;maincode4.c: 46:     temporal1 = 65036 - n
      +                          umero;
  2011   002B2C  5001               	movf	escalamiento@numero^(0+1280),w,c
  2012   002B2E  080C               	sublw	12
  2013   002B30  6E03               	movwf	escalamiento@temporal1^(0+1280),c
  2014   002B32  5002               	movf	(escalamiento@numero+1)^(0+1280),w,c
  2015   002B34  A0D8               	btfss	status,0,c
  2016   002B36  2AE8               	incf	wreg,f,c
  2017   002B38  08FE               	sublw	254
  2018   002B3A  6E04               	movwf	(escalamiento@temporal1+1)^(0+1280),c
  2019   002B3C                     
  2020                           ;maincode4.c: 47:     return temporal1;
  2021   002B3C  C503  F501         	movff	escalamiento@temporal1,?_escalamiento
  2022   002B40  C504  F502         	movff	escalamiento@temporal1+1,?_escalamiento+1
  2023   002B44  0012               	return		;funcret
  2024   002B46                     __end_of_escalamiento:
  2025                           	callstack 0
  2026                           
  2027 ;; *************** function _DEFAULT_ISR *****************
  2028 ;; Defined at:
  2029 ;;		line 110 in file "maincode4.c"
  2030 ;; Parameters:    Size  Location     Type
  2031 ;;		None
  2032 ;; Auto vars:     Size  Location     Type
  2033 ;;		None
  2034 ;; Return value:  Size  Location     Type
  2035 ;;                  1    wreg      void 
  2036 ;; Registers used:
  2037 ;;		None
  2038 ;; Tracked objects:
  2039 ;;		On entry : 0/0
  2040 ;;		On exit  : 0/0
  2041 ;;		Unchanged: 0/0
  2042 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2043 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2044 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2045 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2046 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2047 ;;Total ram usage:        0 bytes
  2048 ;; Hardware stack levels used: 1
  2049 ;; This function calls:
  2050 ;;		Nothing
  2051 ;; This function is called by:
  2052 ;;		Interrupt level 2
  2053 ;; This function uses a non-reentrant model
  2054 ;;
  2055                           
  2056                           	psect	text18
  2057   002B58                     __ptext18:
  2058                           	callstack 0
  2059   002B58                     _DEFAULT_ISR:
  2060                           	callstack 122
  2061   002B58  0011               	retfie		f
  2062   002B5A                     __end_of_DEFAULT_ISR:
  2063                           	callstack 0
  2064                           
  2065                           ;
  2066                           ; Interrupt Vector Table @ 0x8
  2067                           ;
  2068                           
  2069                           	psect	ivt0x8
  2070   000008                     __pivt0x8:
  2071                           	callstack 0
  2072   000008                     ivt0x8_base:
  2073                           	callstack 0
  2074                           
  2075                           ; Vector 0 : SWINT
  2076   000008  0AD6               	dw	_DEFAULT_ISR shr (0+2)
  2077                           
  2078                           ; Vector 1 : HLVD
  2079   00000A  0AD6               	dw	_DEFAULT_ISR shr (0+2)
  2080                           
  2081                           ; Vector 2 : OSF
  2082   00000C  0AD6               	dw	_DEFAULT_ISR shr (0+2)
  2083                           
  2084                           ; Vector 3 : CSW
  2085   00000E  0AD6               	dw	_DEFAULT_ISR shr (0+2)
  2086                           
  2087                           ; Vector 4 : Undefined
  2088   000010  0040               	dw	ivt0x8_undefint shr (0+2)
  2089                           
  2090                           ; Vector 5 : CLC1
  2091   000012  0AD6               	dw	_DEFAULT_ISR shr (0+2)
  2092                           
  2093                           ; Vector 6 : Undefined
  2094   000014  0040               	dw	ivt0x8_undefint shr (0+2)
  2095                           
  2096                           ; Vector 7 : IOC
  2097   000016  0AD6               	dw	_DEFAULT_ISR shr (0+2)
  2098                           
  2099                           ; Vector 8 : INT0
  2100   000018  0AD6               	dw	_DEFAULT_ISR shr (0+2)
  2101                           
  2102                           ; Vector 9 : ZCD
  2103   00001A  0AD6               	dw	_DEFAULT_ISR shr (0+2)
  2104                           
  2105                           ; Vector 10 : AD
  2106   00001C  0AD6               	dw	_DEFAULT_ISR shr (0+2)
  2107                           
  2108                           ; Vector 11 : ACT
  2109   00001E  0AD6               	dw	_DEFAULT_ISR shr (0+2)
  2110                           
  2111                           ; Vector 12 : CMP1
  2112   000020  0AD6               	dw	_DEFAULT_ISR shr (0+2)
  2113                           
  2114                           ; Vector 13 : SMT1
  2115   000022  0AD6               	dw	_DEFAULT_ISR shr (0+2)
  2116                           
  2117                           ; Vector 14 : SMT1PRA
  2118   000024  0AD6               	dw	_DEFAULT_ISR shr (0+2)
  2119                           
  2120                           ; Vector 15 : SMT1PRW
  2121   000026  0AD6               	dw	_DEFAULT_ISR shr (0+2)
  2122                           
  2123                           ; Vector 16 : ADT
  2124   000028  0AD6               	dw	_DEFAULT_ISR shr (0+2)
  2125                           
  2126                           ; Vector 17 : Undefined
  2127   00002A  0040               	dw	ivt0x8_undefint shr (0+2)
  2128                           
  2129                           ; Vector 18 : Undefined
  2130   00002C  0040               	dw	ivt0x8_undefint shr (0+2)
  2131                           
  2132                           ; Vector 19 : Undefined
  2133   00002E  0040               	dw	ivt0x8_undefint shr (0+2)
  2134                           
  2135                           ; Vector 20 : DMA1SCNT
  2136   000030  0AD6               	dw	_DEFAULT_ISR shr (0+2)
  2137                           
  2138                           ; Vector 21 : DMA1DCNT
  2139   000032  0AD6               	dw	_DEFAULT_ISR shr (0+2)
  2140                           
  2141                           ; Vector 22 : DMA1OR
  2142   000034  0AD6               	dw	_DEFAULT_ISR shr (0+2)
  2143                           
  2144                           ; Vector 23 : DMA1A
  2145   000036  0AD6               	dw	_DEFAULT_ISR shr (0+2)
  2146                           
  2147                           ; Vector 24 : SPI1RX
  2148   000038  0AD6               	dw	_DEFAULT_ISR shr (0+2)
  2149                           
  2150                           ; Vector 25 : SPI1TX
  2151   00003A  0AD6               	dw	_DEFAULT_ISR shr (0+2)
  2152                           
  2153                           ; Vector 26 : SPI1
  2154   00003C  0AD6               	dw	_DEFAULT_ISR shr (0+2)
  2155                           
  2156                           ; Vector 27 : TMR2
  2157   00003E  0AD6               	dw	_DEFAULT_ISR shr (0+2)
  2158                           
  2159                           ; Vector 28 : TMR1
  2160   000040  0AD6               	dw	_DEFAULT_ISR shr (0+2)
  2161                           
  2162                           ; Vector 29 : TMR1G
  2163   000042  0AD6               	dw	_DEFAULT_ISR shr (0+2)
  2164                           
  2165                           ; Vector 30 : CCP1
  2166   000044  0AD6               	dw	_DEFAULT_ISR shr (0+2)
  2167                           
  2168                           ; Vector 31 : TMR0
  2169   000046  09C8               	dw	_TMR0_ISR shr (0+2)
  2170                           
  2171                           ; Vector 32 : U1RX
  2172   000048  0AD6               	dw	_DEFAULT_ISR shr (0+2)
  2173                           
  2174                           ; Vector 33 : U1TX
  2175   00004A  0AD6               	dw	_DEFAULT_ISR shr (0+2)
  2176                           
  2177                           ; Vector 34 : U1E
  2178   00004C  0AD6               	dw	_DEFAULT_ISR shr (0+2)
  2179                           
  2180                           ; Vector 35 : U1
  2181   00004E  0AD6               	dw	_DEFAULT_ISR shr (0+2)
  2182                           
  2183                           ; Vector 36 : Undefined
  2184   000050  0040               	dw	ivt0x8_undefint shr (0+2)
  2185                           
  2186                           ; Vector 37 : Undefined
  2187   000052  0040               	dw	ivt0x8_undefint shr (0+2)
  2188                           
  2189                           ; Vector 38 : PWM1PR
  2190   000054  0AD6               	dw	_DEFAULT_ISR shr (0+2)
  2191                           
  2192                           ; Vector 39 : PWM1
  2193   000056  0AD6               	dw	_DEFAULT_ISR shr (0+2)
  2194                           
  2195                           ; Vector 40 : SPI2RX
  2196   000058  0AD6               	dw	_DEFAULT_ISR shr (0+2)
  2197                           
  2198                           ; Vector 41 : SPI2TX
  2199   00005A  0AD6               	dw	_DEFAULT_ISR shr (0+2)
  2200                           
  2201                           ; Vector 42 : SPI2
  2202   00005C  0AD6               	dw	_DEFAULT_ISR shr (0+2)
  2203                           
  2204                           ; Vector 43 : Undefined
  2205   00005E  0040               	dw	ivt0x8_undefint shr (0+2)
  2206                           
  2207                           ; Vector 44 : TMR3
  2208   000060  0AD6               	dw	_DEFAULT_ISR shr (0+2)
  2209                           
  2210                           ; Vector 45 : TMR3G
  2211   000062  0AD6               	dw	_DEFAULT_ISR shr (0+2)
  2212                           
  2213                           ; Vector 46 : PWM2PR
  2214   000064  0AD6               	dw	_DEFAULT_ISR shr (0+2)
  2215                           
  2216                           ; Vector 47 : PWM2
  2217   000066  0AD6               	dw	_DEFAULT_ISR shr (0+2)
  2218                           
  2219                           ; Vector 48 : INT1
  2220   000068  0AD6               	dw	_DEFAULT_ISR shr (0+2)
  2221                           
  2222                           ; Vector 49 : CLC2
  2223   00006A  0AD6               	dw	_DEFAULT_ISR shr (0+2)
  2224                           
  2225                           ; Vector 50 : CWG1
  2226   00006C  0AD6               	dw	_DEFAULT_ISR shr (0+2)
  2227                           
  2228                           ; Vector 51 : NCO1
  2229   00006E  0AD6               	dw	_DEFAULT_ISR shr (0+2)
  2230                           
  2231                           ; Vector 52 : DMA2SCNT
  2232   000070  0AD6               	dw	_DEFAULT_ISR shr (0+2)
  2233                           
  2234                           ; Vector 53 : DMA2DCNT
  2235   000072  0AD6               	dw	_DEFAULT_ISR shr (0+2)
  2236                           
  2237                           ; Vector 54 : DMA2OR
  2238   000074  0AD6               	dw	_DEFAULT_ISR shr (0+2)
  2239                           
  2240                           ; Vector 55 : DMA2A
  2241   000076  0AD6               	dw	_DEFAULT_ISR shr (0+2)
  2242                           
  2243                           ; Vector 56 : I2C1RX
  2244   000078  0AD6               	dw	_DEFAULT_ISR shr (0+2)
  2245                           
  2246                           ; Vector 57 : I2C1TX
  2247   00007A  0AD6               	dw	_DEFAULT_ISR shr (0+2)
  2248                           
  2249                           ; Vector 58 : I2C1
  2250   00007C  0AD6               	dw	_DEFAULT_ISR shr (0+2)
  2251                           
  2252                           ; Vector 59 : I2C1E
  2253   00007E  0AD6               	dw	_DEFAULT_ISR shr (0+2)
  2254                           
  2255                           ; Vector 60 : Undefined
  2256   000080  0040               	dw	ivt0x8_undefint shr (0+2)
  2257                           
  2258                           ; Vector 61 : CLC3
  2259   000082  0AD6               	dw	_DEFAULT_ISR shr (0+2)
  2260                           
  2261                           ; Vector 62 : PWM3PR
  2262   000084  0AD6               	dw	_DEFAULT_ISR shr (0+2)
  2263                           
  2264                           ; Vector 63 : PWM3
  2265   000086  0AD6               	dw	_DEFAULT_ISR shr (0+2)
  2266                           
  2267                           ; Vector 64 : U2RX
  2268   000088  0AD6               	dw	_DEFAULT_ISR shr (0+2)
  2269                           
  2270                           ; Vector 65 : U2TX
  2271   00008A  0AD6               	dw	_DEFAULT_ISR shr (0+2)
  2272                           
  2273                           ; Vector 66 : U2E
  2274   00008C  0AD6               	dw	_DEFAULT_ISR shr (0+2)
  2275                           
  2276                           ; Vector 67 : U2
  2277   00008E  0AD6               	dw	_DEFAULT_ISR shr (0+2)
  2278                           
  2279                           ; Vector 68 : TMR5
  2280   000090  0AD6               	dw	_DEFAULT_ISR shr (0+2)
  2281                           
  2282                           ; Vector 69 : TMR5G
  2283   000092  0AD6               	dw	_DEFAULT_ISR shr (0+2)
  2284                           
  2285                           ; Vector 70 : CCP2
  2286   000094  0AD6               	dw	_DEFAULT_ISR shr (0+2)
  2287                           
  2288                           ; Vector 71 : SCAN
  2289   000096  0AD6               	dw	_DEFAULT_ISR shr (0+2)
  2290                           
  2291                           ; Vector 72 : U3RX
  2292   000098  0AD6               	dw	_DEFAULT_ISR shr (0+2)
  2293                           
  2294                           ; Vector 73 : U3TX
  2295   00009A  0AD6               	dw	_DEFAULT_ISR shr (0+2)
  2296                           
  2297                           ; Vector 74 : U3E
  2298   00009C  0AD6               	dw	_DEFAULT_ISR shr (0+2)
  2299                           
  2300                           ; Vector 75 : U3
  2301   00009E  0AD6               	dw	_DEFAULT_ISR shr (0+2)
  2302                           
  2303                           ; Vector 76 : Undefined
  2304   0000A0  0040               	dw	ivt0x8_undefint shr (0+2)
  2305                           
  2306                           ; Vector 77 : CLC4
  2307   0000A2  0AD6               	dw	_DEFAULT_ISR shr (0+2)
  2308                           
  2309                           ; Vector 78 : Undefined
  2310   0000A4  0040               	dw	ivt0x8_undefint shr (0+2)
  2311                           
  2312                           ; Vector 79 : Undefined
  2313   0000A6  0040               	dw	ivt0x8_undefint shr (0+2)
  2314                           
  2315                           ; Vector 80 : INT2
  2316   0000A8  0AD6               	dw	_DEFAULT_ISR shr (0+2)
  2317                           
  2318                           ; Vector 81 : CLC5
  2319   0000AA  0AD6               	dw	_DEFAULT_ISR shr (0+2)
  2320                           
  2321                           ; Vector 82 : CWG2
  2322   0000AC  0AD6               	dw	_DEFAULT_ISR shr (0+2)
  2323                           
  2324                           ; Vector 83 : NCO2
  2325   0000AE  0AD6               	dw	_DEFAULT_ISR shr (0+2)
  2326                           
  2327                           ; Vector 84 : DMA3SCNT
  2328   0000B0  0AD6               	dw	_DEFAULT_ISR shr (0+2)
  2329                           
  2330                           ; Vector 85 : DMA3DCNT
  2331   0000B2  0AD6               	dw	_DEFAULT_ISR shr (0+2)
  2332                           
  2333                           ; Vector 86 : DMA3OR
  2334   0000B4  0AD6               	dw	_DEFAULT_ISR shr (0+2)
  2335                           
  2336                           ; Vector 87 : DMA3A
  2337   0000B6  0AD6               	dw	_DEFAULT_ISR shr (0+2)
  2338                           
  2339                           ; Vector 88 : CCP3
  2340   0000B8  0AD6               	dw	_DEFAULT_ISR shr (0+2)
  2341                           
  2342                           ; Vector 89 : CLC6
  2343   0000BA  0AD6               	dw	_DEFAULT_ISR shr (0+2)
  2344                           
  2345                           ; Vector 90 : CWG3
  2346   0000BC  0AD6               	dw	_DEFAULT_ISR shr (0+2)
  2347                           
  2348                           ; Vector 91 : TMR4
  2349   0000BE  0AD6               	dw	_DEFAULT_ISR shr (0+2)
  2350                           
  2351                           ; Vector 92 : DMA4SCNT
  2352   0000C0  0AD6               	dw	_DEFAULT_ISR shr (0+2)
  2353                           
  2354                           ; Vector 93 : DMA4DCNT
  2355   0000C2  0AD6               	dw	_DEFAULT_ISR shr (0+2)
  2356                           
  2357                           ; Vector 94 : DMA4OR
  2358   0000C4  0AD6               	dw	_DEFAULT_ISR shr (0+2)
  2359                           
  2360                           ; Vector 95 : DMA4A
  2361   0000C6  0AD6               	dw	_DEFAULT_ISR shr (0+2)
  2362                           
  2363                           ; Vector 96 : U4RX
  2364   0000C8  0AD6               	dw	_DEFAULT_ISR shr (0+2)
  2365                           
  2366                           ; Vector 97 : U4TX
  2367   0000CA  0AD6               	dw	_DEFAULT_ISR shr (0+2)
  2368                           
  2369                           ; Vector 98 : U4E
  2370   0000CC  0AD6               	dw	_DEFAULT_ISR shr (0+2)
  2371                           
  2372                           ; Vector 99 : U4
  2373   0000CE  0AD6               	dw	_DEFAULT_ISR shr (0+2)
  2374                           
  2375                           ; Vector 100 : DMA5SCNT
  2376   0000D0  0AD6               	dw	_DEFAULT_ISR shr (0+2)
  2377                           
  2378                           ; Vector 101 : DMA5DCNT
  2379   0000D2  0AD6               	dw	_DEFAULT_ISR shr (0+2)
  2380                           
  2381                           ; Vector 102 : DMA5OR
  2382   0000D4  0AD6               	dw	_DEFAULT_ISR shr (0+2)
  2383                           
  2384                           ; Vector 103 : DMA5A
  2385   0000D6  0AD6               	dw	_DEFAULT_ISR shr (0+2)
  2386                           
  2387                           ; Vector 104 : U5RX
  2388   0000D8  0AD6               	dw	_DEFAULT_ISR shr (0+2)
  2389                           
  2390                           ; Vector 105 : U5TX
  2391   0000DA  0AD6               	dw	_DEFAULT_ISR shr (0+2)
  2392                           
  2393                           ; Vector 106 : U5E
  2394   0000DC  0AD6               	dw	_DEFAULT_ISR shr (0+2)
  2395                           
  2396                           ; Vector 107 : U5
  2397   0000DE  0AD6               	dw	_DEFAULT_ISR shr (0+2)
  2398                           
  2399                           ; Vector 108 : DMA6SCNT
  2400   0000E0  0AD6               	dw	_DEFAULT_ISR shr (0+2)
  2401                           
  2402                           ; Vector 109 : DMA6DCNT
  2403   0000E2  0AD6               	dw	_DEFAULT_ISR shr (0+2)
  2404                           
  2405                           ; Vector 110 : DMA6OR
  2406   0000E4  0AD6               	dw	_DEFAULT_ISR shr (0+2)
  2407                           
  2408                           ; Vector 111 : DMA6A
  2409   0000E6  0AD6               	dw	_DEFAULT_ISR shr (0+2)
  2410                           
  2411                           ; Vector 112 : Undefined
  2412   0000E8  0040               	dw	ivt0x8_undefint shr (0+2)
  2413                           
  2414                           ; Vector 113 : CLC7
  2415   0000EA  0AD6               	dw	_DEFAULT_ISR shr (0+2)
  2416                           
  2417                           ; Vector 114 : CMP2
  2418   0000EC  0AD6               	dw	_DEFAULT_ISR shr (0+2)
  2419                           
  2420                           ; Vector 115 : NCO3
  2421   0000EE  0AD6               	dw	_DEFAULT_ISR shr (0+2)
  2422                           
  2423                           ; Vector 116 : Undefined
  2424   0000F0  0040               	dw	ivt0x8_undefint shr (0+2)
  2425                           
  2426                           ; Vector 117 : Undefined
  2427   0000F2  0040               	dw	ivt0x8_undefint shr (0+2)
  2428                           
  2429                           ; Vector 118 : Undefined
  2430   0000F4  0040               	dw	ivt0x8_undefint shr (0+2)
  2431                           
  2432                           ; Vector 119 : Undefined
  2433   0000F6  0040               	dw	ivt0x8_undefint shr (0+2)
  2434                           
  2435                           ; Vector 120 : NVM
  2436   0000F8  0AD6               	dw	_DEFAULT_ISR shr (0+2)
  2437                           
  2438                           ; Vector 121 : CLC8
  2439   0000FA  0AD6               	dw	_DEFAULT_ISR shr (0+2)
  2440                           
  2441                           ; Vector 122 : CRC
  2442   0000FC  0AD6               	dw	_DEFAULT_ISR shr (0+2)
  2443                           
  2444                           ; Vector 123 : TMR6
  2445   0000FE  0AD6               	dw	_DEFAULT_ISR shr (0+2)
  2446   000100                     ivt0x8_undefint:
  2447                           	callstack 0
  2448   000100  00FF               	reset	
  2449                           
  2450                           	psect	rparam
  2451   000000                     
  2452                           	psect	config
  2453                           
  2454                           ;Config register CONFIG1 @ 0x300000
  2455                           ;	External Oscillator Selection
  2456                           ;	FEXTOSC = OFF, Oscillator not enabled
  2457                           ;	Reset Oscillator Selection
  2458                           ;	RSTOSC = EXTOSC, EXTOSC operating per FEXTOSC bits (device manufacturing default)
  2459   300000                     	org	3145728
  2460   300000  FC                 	db	252
  2461                           
  2462                           ;Config register CONFIG2 @ 0x300001
  2463                           ;	Clock out Enable bit
  2464                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
  2465                           ;	PRLOCKED One-Way Set Enable bit
  2466                           ;	PR1WAY = ON, PRLOCKED bit can be cleared and set only once
  2467                           ;	Clock Switch Enable bit
  2468                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
  2469                           ;	Fail-Safe Clock Monitor Enable bit
  2470                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
  2471   300001                     	org	3145729
  2472   300001  FF                 	db	255
  2473                           
  2474                           ;Config register CONFIG3 @ 0x300002
  2475                           ;	MCLR Enable bit
  2476                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
  2477                           ;	Power-up timer selection bits
  2478                           ;	PWRTS = PWRT_64, PWRT set at 64ms
  2479                           ;	Multi-vector enable bit
  2480                           ;	MVECEN = ON, Multi-vector enabled, Vector table used for interrupts
  2481                           ;	IVTLOCK bit One-way set enable bit
  2482                           ;	IVT1WAY = ON, IVTLOCKED bit can be cleared and set only once
  2483                           ;	Low Power BOR Enable bit
  2484                           ;	LPBOREN = OFF, Low-Power BOR disabled
  2485                           ;	Brown-out Reset Enable bits
  2486                           ;	BOREN = OFF, Brown-out Reset disabled
  2487   300002                     	org	3145730
  2488   300002  3D                 	db	61
  2489                           
  2490                           ;Config register CONFIG4 @ 0x300003
  2491                           ;	Brown-out Reset Voltage Selection bits
  2492                           ;	BORV = VBOR_1P9, Brown-out Reset Voltage (VBOR) set to 1.9V
  2493                           ;	ZCD Disable bit
  2494                           ;	ZCD = OFF, ZCD module is disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCD
      +                          CON
  2495                           ;	PPSLOCK bit One-Way Set Enable bit
  2496                           ;	PPS1WAY = ON, PPSLOCKED bit can be cleared and set only once; PPS registers remain loc
      +                          ked after one clear/set cycle
  2497                           ;	Stack Full/Underflow Reset Enable bit
  2498                           ;	STVREN = ON, Stack full/underflow will cause Reset
  2499                           ;	Low Voltage Programming Enable bit
  2500                           ;	LVP = OFF, HV on MCLR/VPP must be used for programming
  2501                           ;	Extended Instruction Set Enable bit
  2502                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
  2503   300003                     	org	3145731
  2504   300003  DF                 	db	223
  2505                           
  2506                           ;Config register CONFIG5 @ 0x300004
  2507                           ;	WDT Period selection bits
  2508                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  2509                           ;	WDT operating mode
  2510                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
  2511   300004                     	org	3145732
  2512   300004  9F                 	db	159
  2513                           
  2514                           ;Config register CONFIG6 @ 0x300005
  2515                           ;	WDT Window Select bits
  2516                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
  2517                           ;	WDT input clock selector
  2518                           ;	WDTCCS = SC, Software Control
  2519   300005                     	org	3145733
  2520   300005  FF                 	db	255
  2521                           
  2522                           ;Config register CONFIG7 @ 0x300006
  2523                           ;	Boot Block Size selection bits
  2524                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
  2525                           ;	Boot Block enable bit
  2526                           ;	BBEN = OFF, Boot block disabled
  2527                           ;	Storage Area Flash enable bit
  2528                           ;	SAFEN = OFF, SAF disabled
  2529                           ;	Background Debugger
  2530                           ;	DEBUG = OFF, Background Debugger disabled
  2531   300006                     	org	3145734
  2532   300006  FF                 	db	255
  2533                           
  2534                           ;Config register CONFIG8 @ 0x300007
  2535                           ;	Boot Block Write Protection bit
  2536                           ;	WRTB = OFF, Boot Block not Write protected
  2537                           ;	Configuration Register Write Protection bit
  2538                           ;	WRTC = OFF, Configuration registers not Write protected
  2539                           ;	Data EEPROM Write Protection bit
  2540                           ;	WRTD = OFF, Data EEPROM not Write protected
  2541                           ;	SAF Write protection bit
  2542                           ;	WRTSAF = OFF, SAF not Write Protected
  2543                           ;	Application Block write protection bit
  2544                           ;	WRTAPP = OFF, Application Block not write protected
  2545   300007                     	org	3145735
  2546   300007  FF                 	db	255
  2547                           
  2548                           ;Config register CONFIG10 @ 0x300009
  2549                           ;	PFM and Data EEPROM Code Protection bit
  2550                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
  2551   300009                     	org	3145737
  2552   300009  FF                 	db	255
  2553                           tosu	equ	0x4FF
  2554                           tosh	equ	0x4FE
  2555                           tosl	equ	0x4FD
  2556                           stkptr	equ	0x4FC
  2557                           pclatu	equ	0x4FB
  2558                           pclath	equ	0x4FA
  2559                           pcl	equ	0x4F9
  2560                           tblptru	equ	0x4F8
  2561                           tblptrh	equ	0x4F7
  2562                           tblptrl	equ	0x4F6
  2563                           tablat	equ	0x4F5
  2564                           prodh	equ	0x4F4
  2565                           prodl	equ	0x4F3
  2566                           indf0	equ	0x4EF
  2567                           postinc0	equ	0x4EE
  2568                           postdec0	equ	0x4ED
  2569                           preinc0	equ	0x4EC
  2570                           plusw0	equ	0x4EB
  2571                           fsr0h	equ	0x4EA
  2572                           fsr0l	equ	0x4E9
  2573                           wreg	equ	0x4E8
  2574                           indf1	equ	0x4E7
  2575                           postinc1	equ	0x4E6
  2576                           postdec1	equ	0x4E5
  2577                           preinc1	equ	0x4E4
  2578                           plusw1	equ	0x4E3
  2579                           fsr1h	equ	0x4E2
  2580                           fsr1l	equ	0x4E1
  2581                           bsr	equ	0x4E0
  2582                           indf2	equ	0x4DF
  2583                           postinc2	equ	0x4DE
  2584                           postdec2	equ	0x4DD
  2585                           preinc2	equ	0x4DC
  2586                           plusw2	equ	0x4DB
  2587                           fsr2h	equ	0x4DA
  2588                           fsr2l	equ	0x4D9
  2589                           status	equ	0x4D8

Data Sizes:
    Strings     37
    Constant    0
    Data        2
    BSS         5
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     28      35
    BANK5           160      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0
    BANK32          256      0       0
    BANK33          256      0       0
    BANK34          256      0       0
    BANK35          256      0       0
    BANK36          256      0       0

Pointer List with Targets:

    ESCRIBE_MENSAJE@cadena	PTR const unsigned char  size(1) Largest target is 14
		 -> STR_1(CODE[13]), STR_2(CODE[10]), STR_3(CODE[10]), STR_4(CODE[14]), 


Critical Paths under _main in COMRAM

    _main->_convierte
    _lcd_init->_CURSOR_ONOFF
    _lcd_init->_LCD_CONFIG
    _LCD_CONFIG->_ENVIA_LCD_CMD
    _CURSOR_ONOFF->_ENVIA_LCD_CMD
    _CURSOR_HOME->_ENVIA_LCD_CMD
    _BORRAR_LCD->_ENVIA_LCD_CMD
    _convierte->___lwdiv
    ___lwdiv->___lwmod
    _POS_CURSOR->_ENVIA_LCD_CMD
    _ENVIA_LCD_CMD->_ENVIA_NIBBLE
    _ENVIA_LCD_CMD->_LEER_LCD
    _ESCRIBE_MENSAJE->_ENVIA_CHAR
    _ENVIA_CHAR->_ENVIA_NIBBLE
    _ENVIA_CHAR->_LEER_LCD

Critical Paths under _TMR0_ISR in COMRAM

    _TMR0_ISR->_escalamiento

Critical Paths under _DEFAULT_ISR in COMRAM

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _TMR0_ISR in BANK5

    None.

Critical Paths under _DEFAULT_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _TMR0_ISR in BANK6

    None.

Critical Paths under _DEFAULT_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _TMR0_ISR in BANK7

    None.

Critical Paths under _DEFAULT_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _TMR0_ISR in BANK8

    None.

Critical Paths under _DEFAULT_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _TMR0_ISR in BANK9

    None.

Critical Paths under _DEFAULT_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _TMR0_ISR in BANK10

    None.

Critical Paths under _DEFAULT_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _TMR0_ISR in BANK11

    None.

Critical Paths under _DEFAULT_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _TMR0_ISR in BANK12

    None.

Critical Paths under _DEFAULT_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _TMR0_ISR in BANK13

    None.

Critical Paths under _DEFAULT_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _TMR0_ISR in BANK14

    None.

Critical Paths under _DEFAULT_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _TMR0_ISR in BANK15

    None.

Critical Paths under _DEFAULT_ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _TMR0_ISR in BANK16

    None.

Critical Paths under _DEFAULT_ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _TMR0_ISR in BANK17

    None.

Critical Paths under _DEFAULT_ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _TMR0_ISR in BANK18

    None.

Critical Paths under _DEFAULT_ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _TMR0_ISR in BANK19

    None.

Critical Paths under _DEFAULT_ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _TMR0_ISR in BANK20

    None.

Critical Paths under _DEFAULT_ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _TMR0_ISR in BANK21

    None.

Critical Paths under _DEFAULT_ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _TMR0_ISR in BANK22

    None.

Critical Paths under _DEFAULT_ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _TMR0_ISR in BANK23

    None.

Critical Paths under _DEFAULT_ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _TMR0_ISR in BANK24

    None.

Critical Paths under _DEFAULT_ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _TMR0_ISR in BANK25

    None.

Critical Paths under _DEFAULT_ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _TMR0_ISR in BANK26

    None.

Critical Paths under _DEFAULT_ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _TMR0_ISR in BANK27

    None.

Critical Paths under _DEFAULT_ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _TMR0_ISR in BANK28

    None.

Critical Paths under _DEFAULT_ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _TMR0_ISR in BANK29

    None.

Critical Paths under _DEFAULT_ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _TMR0_ISR in BANK30

    None.

Critical Paths under _DEFAULT_ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _TMR0_ISR in BANK31

    None.

Critical Paths under _DEFAULT_ISR in BANK31

    None.

Critical Paths under _main in BANK32

    None.

Critical Paths under _TMR0_ISR in BANK32

    None.

Critical Paths under _DEFAULT_ISR in BANK32

    None.

Critical Paths under _main in BANK33

    None.

Critical Paths under _TMR0_ISR in BANK33

    None.

Critical Paths under _DEFAULT_ISR in BANK33

    None.

Critical Paths under _main in BANK34

    None.

Critical Paths under _TMR0_ISR in BANK34

    None.

Critical Paths under _DEFAULT_ISR in BANK34

    None.

Critical Paths under _main in BANK35

    None.

Critical Paths under _TMR0_ISR in BANK35

    None.

Critical Paths under _DEFAULT_ISR in BANK35

    None.

Critical Paths under _main in BANK36

    None.

Critical Paths under _TMR0_ISR in BANK36

    None.

Critical Paths under _DEFAULT_ISR in BANK36

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    3987
                                             26 COMRAM     2     2      0
                         _ENVIA_CHAR
                    _ESCRIBE_MENSAJE
                         _POS_CURSOR
                          _configuro
                          _convierte
                           _lcd_init
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             2     2      0     525
                                             16 COMRAM     2     2      0
                         _BORRAR_LCD
                        _CURSOR_HOME
                       _CURSOR_ONOFF
                         _LCD_CONFIG
 ---------------------------------------------------------------------------------
 (2) _LCD_CONFIG                                           1     1      0     135
                                             15 COMRAM     1     1      0
                      _ENVIA_LCD_CMD
                       _ENVIA_NIBBLE
 ---------------------------------------------------------------------------------
 (2) _CURSOR_ONOFF                                         1     1      0     150
                                             15 COMRAM     1     1      0
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _CURSOR_HOME                                          0     0      0     120
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _BORRAR_LCD                                           0     0      0     120
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (1) _convierte                                            2     0      2    1799
                                             24 COMRAM     2     0      2
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     767
                                             12 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     770
                                             17 COMRAM     7     3      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (1) _configuro                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _POS_CURSOR                                           2     1      1     588
                                             15 COMRAM     2     1      1
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (3) _ENVIA_LCD_CMD                                        2     2      0     120
                                             13 COMRAM     2     2      0
                       _ENVIA_NIBBLE
                           _LEER_LCD
 ---------------------------------------------------------------------------------
 (1) _ESCRIBE_MENSAJE                                      4     2      2     819
                                             15 COMRAM     4     2      2
                         _ENVIA_CHAR
 ---------------------------------------------------------------------------------
 (2) _ENVIA_CHAR                                           2     2      0     120
                                             13 COMRAM     2     2      0
                       _ENVIA_NIBBLE
                           _LEER_LCD
 ---------------------------------------------------------------------------------
 (4) _LEER_LCD                                             1     1      0      45
                                             12 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _ENVIA_NIBBLE                                         1     1      0      15
                                             12 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _TMR0_ISR                                             8     8      0     349
                                              4 COMRAM     8     8      0
                       _escalamiento
 ---------------------------------------------------------------------------------
 (6) _escalamiento                                         4     2      2     349
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _DEFAULT_ISR                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ENVIA_CHAR
     _ENVIA_NIBBLE
     _LEER_LCD
   _ESCRIBE_MENSAJE
     _ENVIA_CHAR
   _POS_CURSOR
     _ENVIA_LCD_CMD
       _ENVIA_NIBBLE
       _LEER_LCD
   _configuro
   _convierte
     ___lwdiv
       ___lwmod (ARG)
     ___lwmod
   _lcd_init
     _BORRAR_LCD
       _ENVIA_LCD_CMD
     _CURSOR_HOME
       _ENVIA_LCD_CMD
     _CURSOR_ONOFF
       _ENVIA_LCD_CMD
     _LCD_CONFIG
       _ENVIA_LCD_CMD
       _ENVIA_NIBBLE

 _TMR0_ISR (ROOT)
   _escalamiento

 _DEFAULT_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0       0      70        0.0%
EEDATA             400      0       0       0        0.0%
BITBIGSFRlhhhll    264      0       0      81        0.0%
BITBIGSFR_1        100      0       0      69        0.0%
BITBANK36          100      0       0      67        0.0%
BANK36             100      0       0      68        0.0%
BITBANK35          100      0       0      65        0.0%
BANK35             100      0       0      66        0.0%
BITBANK34          100      0       0      63        0.0%
BANK34             100      0       0      64        0.0%
BITBANK33          100      0       0      61        0.0%
BANK33             100      0       0      62        0.0%
BITBANK32          100      0       0      59        0.0%
BANK32             100      0       0      60        0.0%
BITBANK31          100      0       0      57        0.0%
BANK31             100      0       0      58        0.0%
BITBANK30          100      0       0      55        0.0%
BANK30             100      0       0      56        0.0%
BITBANK29          100      0       0      53        0.0%
BANK29             100      0       0      54        0.0%
BITBANK28          100      0       0      51        0.0%
BANK28             100      0       0      52        0.0%
BITBANK27          100      0       0      48        0.0%
BANK27             100      0       0      49        0.0%
BITBANK26          100      0       0      46        0.0%
BANK26             100      0       0      47        0.0%
BITBANK25          100      0       0      44        0.0%
BANK25             100      0       0      45        0.0%
BITBANK24          100      0       0      42        0.0%
BANK24             100      0       0      43        0.0%
BITBANK23          100      0       0      40        0.0%
BANK23             100      0       0      41        0.0%
BITBANK22          100      0       0      38        0.0%
BANK22             100      0       0      39        0.0%
BITBANK21          100      0       0      36        0.0%
BANK21             100      0       0      37        0.0%
BITBANK20          100      0       0      34        0.0%
BANK20             100      0       0      35        0.0%
BITBANK19          100      0       0      32        0.0%
BANK19             100      0       0      33        0.0%
BITBANK18          100      0       0      30        0.0%
BANK18             100      0       0      31        0.0%
BITBANK17          100      0       0      28        0.0%
BANK17             100      0       0      29        0.0%
BITBANK16          100      0       0      26        0.0%
BANK16             100      0       0      27        0.0%
BITBANK15          100      0       0      24        0.0%
BANK15             100      0       0      25        0.0%
BITBANK14          100      0       0      22        0.0%
BANK14             100      0       0      23        0.0%
BITBANK13          100      0       0      20        0.0%
BANK13             100      0       0      21        0.0%
BITBANK12          100      0       0      18        0.0%
BANK12             100      0       0      19        0.0%
BITBANK11          100      0       0      16        0.0%
BANK11             100      0       0      17        0.0%
BITBANK10          100      0       0      14        0.0%
BANK10             100      0       0      15        0.0%
BITBANK9           100      0       0      12        0.0%
BANK9              100      0       0      13        0.0%
BITBANK8           100      0       0      10        0.0%
BANK8              100      0       0      11        0.0%
BITBANK7           100      0       0       8        0.0%
BANK7              100      0       0       9        0.0%
BITBANK6           100      0       0       6        0.0%
BANK6              100      0       0       7        0.0%
BITBIGSFRlhhhlh     EC      0       0      80        0.0%
BITBIGSFRll         AD      0       0      84        0.0%
BITBANK5            A0      0       0       4        0.0%
BANK5               A0      0       0       5        0.0%
BITBIGSFRlhhhhh     88      0       0      77        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     1C      23       1       36.8%
BITBIGSFRhhhh       29      0       0      71        0.0%
BITBIGSFRlhhhhh      F      0       0      76        0.0%
BITBIGSFRlhhhhh      E      0       0      75        0.0%
BITBIGSFRlhhhhh      7      0       0      78        0.0%
BITBIGSFRlhhhhl      6      0       0      79        0.0%
BITBIGSFRhhll        5      0       0      73        0.0%
BITBIGSFRhll         5      0       0      74        0.0%
BITBIGSFRhhhl        4      0       0      72        0.0%
BITBIGSFRlhl         3      0       0      83        0.0%
BITBIGSFRlhhl        1      0       0      82        0.0%
BIGSFR_1             0      0       0     200        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      23      50        0.0%
DATA                 0      0      23       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Thu Oct 26 02:07:32 2023

                     l24 29E0                       l42 2AE2                       l51 2AB2  
                     l60 2B2A                       l37 2B4C                       l54 2B54  
                     l63 2A4A                       l48 2A7E                       l57 2968  
                     l67 286A                       l69 28A4                       u10 28A4  
                     u11 28A0                       u20 2AC6                       u21 2AC2  
                     u30 2ADC                       u31 2AD8            ENVIA_CHAR@aux 050F  
                    l145 2B0E                      l161 2566                      l154 271C  
                    l163 25D6                      l148 2A16                      l900 2B28  
                    l910 2A2C                      l902 2A1A                      l920 2A3E  
                    l912 2A2E                      l904 2A1C                      l681 2832  
                    l922 2A44                      l914 2A30                      l906 2A20  
                    l674 282A                      l930 2ACC                      l691 2908  
                    l860 283A                      l940 2A8C                      l916 2A32  
                    l908 2A24                      l684 2900                      l924 2B46  
                    l932 2ADC                      l870 284C                      l862 283C  
                    l950 2AA0                      l942 2A94                      l934 2A82  
                    l918 2A38                      l926 2AB6                      l880 286C  
                    l872 2854                      l864 283E                      l856 2834  
                    l952 2AA6                      l944 2A96                      l936 2A84  
                    l928 2AC6                      l960 290E                      l882 2874  
                    l874 2856                      l866 2846                      l858 2838  
                    l954 2AAC                      l946 2A98                      l938 2A88  
                    l970 2944                      l962 2914                      l884 2878  
                    l892 2892                      l876 285E                      l868 284A  
                    l948 2A9A                      l956 2B4E                      l980 2962  
                    l972 294A                      l964 2922                      l894 2B12  
                    l886 2882                      l878 2860                      l974 2950  
                    l966 2936                      l958 290A                      l896 2B1E  
                    l888 288C                      l976 2956                      l968 293E  
                    l898 2B20                      l978 295C                      u300 2A7E  
                    u220 27DA                      u301 2A7A                      u221 27D6  
                    u230 27F8                      u310 255E                      u231 27F4  
                    u311 255A                      u240 2814                      u320 25CE  
                    u241 2810                      u321 25CA            ?_escalamiento 0501  
                    u250 28B8                      u330 263E                      u251 28B4  
                    u331 263A                      u260 28D6                      u261 28D2  
                    u270 28EC                      u407 2A8E                      u271 28E8  
                    u280 29BA                      u417 2840                      u281 29B6  
                    u290 29D8                      u427 284E                      u291 29D4  
                    u437 2858                      u357 29FA                      u447 286E  
                    u367 291A                      u457 287C                      u377 2928  
                    u467 2886                      u387 2938                      u477 2B22  
                    u397 2A26              LEER_LCD@aux 050D                      wreg 04E8  
           ?_CURSOR_HOME 0501           ??_ENVIA_NIBBLE 050D           ENVIA_CHAR@dato 050E  
                   l1040 2AF4                     l1200 28B8                     l1050 2B0A  
                   l1042 2AF8                     l1210 28F4                     l1202 28C0  
                   l1220 29D8                     l1052 2B0C                     l1044 2AFA  
                   l1036 2AE4                     l1212 28FA                     l1204 28C8  
                   l1060 2A08                     l1222 2A4C                     l1214 29AA  
                   l1046 2AFC                     l1038 2AF2                     l1206 28D6  
                   l1062 2A0C                     l1054 29E2                     l1224 2A58  
                   l1216 29BA                     l1048 2B08                     l1208 28EC  
                   l1064 2A10                     l1056 29EC                     l1240 252C  
                   l1226 2A6A                     l1218 29C6                     l1058 29F0  
                   l1250 255E                     l1242 2530                     l1228 2A6C  
                   l1180 27DA                     l1236 2668                     l1260 2590  
                   l1244 253A                     l1190 2814                     l1182 27E2  
                   l1270 25B8                     l1262 2598                     l1246 2546  
                   l1238 2528                     l1192 281C                     l1184 27EA  
                   l1176 27C0                     l1280 25F4                     l1272 25CE  
                   l1264 25A0                     l1256 256E                     l1248 2550  
                   l1194 281E                     l1186 27F8                     l1178 27C8  
                   l1290 2620                     l1282 2600                     l1266 25A8  
                   l1258 2584                     l1196 2824                     l1188 27FE  
                   l1292 2628                     l1284 2608                     l1268 25B0  
                   l1198 28A6                     l1286 2610                     l1278 25DE  
                   l1294 2642                     l1296 264A                     l1288 2618  
                   l1298 2654                     STR_1 250F                     STR_2 251C  
                   STR_3 251C                     STR_4 2501                     _LATD 04C1  
                   _main 2528                     start 0102            ?_CURSOR_ONOFF 0501  
           ___param_bank 0000          ??_ENVIA_LCD_CMD 050E         __end_of_LEER_LCD 28A6  
         ??_escalamiento 0503                    ?_main 0501          __end_of___lwdiv 2834  
        __end_of___lwmod 290A                    i2l151 2B44                    i2l180 2B58  
                  i2l173 2760                    i2l175 27BE                    _OSCEN 00B3  
                  _TMR0H 0319                    _TMR0L 0318                    _PORTD 04D1  
                  _TRISD 04C9         __end_of_TMR0_ISR 27C0              ?_POS_CURSOR 0510  
                  main@x 051B                    tablat 04F5                    status 04D8  
         ??_CURSOR_ONOFF 0510          __initialization 296A             __end_of_main 2668  
        _ESCRIBE_MENSAJE 2A4C                   ??_main 051B            __activetblptr 0001  
                 _ANSELD 0418                   _T0CON0 031A                   _T0CON1 031B  
                 i2l1300 2720                   i2l1230 2B2C                   i2l1302 2730  
                 i2l1232 2B3C                   i2l1304 2732                   i2l1306 2762  
  escalamiento@temporal1 0503                   _OSCFRQ 00B1         __end_of_lcd_init 2A18  
                 _decena 051E     __end_of_ENVIA_NIBBLE 2B2C                ??___lwdiv 0516  
              ??___lwmod 0511                   _millar 0520                   isa$std 0001  
                 _unidad 051D             __pdataCOMRAM 0522             __mediumconst 0000  
                 tblptrh 04F7                   tblptrl 04F6                   tblptru 04F8  
           ??_BORRAR_LCD 0510                ?_LEER_LCD 0501               __accesstop 0560  
__end_of__initialization 299A             ??_LCD_CONFIG 0510     __end_of_escalamiento 2B46  
          ___rparam_used 0001             ??_ENVIA_CHAR 050E  __end_of_ESCRIBE_MENSAJE 2A80  
         __pcstackCOMRAM 0501                ?_TMR0_ISR 0501           ivt0x8_undefint 0100  
     __end_of_BORRAR_LCD 2B56         ENVIA_LCD_CMD@aux 050F     __end_of_CURSOR_ONOFF 2AE4  
     __end_of_LCD_CONFIG 296A       __end_of_ENVIA_CHAR 2AB4               ??_LEER_LCD 050D  
       ENVIA_NIBBLE@dato 050D                  IVTBASEH 045E                  IVTBASEL 045D  
                IVTBASEU 045F               ??_TMR0_ISR 0505            ??_DEFAULT_ISR 050D  
                _OSCCON1 00AD                  i2u34_40 2730                  i2u34_41 272C  
           ??_POS_CURSOR 0511                ?_lcd_init 0501                  __Hparam 0000  
                __Lparam 0000         ?_ESCRIBE_MENSAJE 0510        __end_of_configuro 2B10  
                ___lwdiv 27C0                  ___lwmod 28A6             __psmallconst 2500  
  __end_of_ENVIA_LCD_CMD 2A4C        __end_of_convierte 271E                  __pcinit 296A  
     __end_of_POS_CURSOR 29E2                  __ramtop 2500                  _centena 051F  
                __ptext0 2528                  __ptext1 29E2                  __ptext2 290A  
                __ptext3 2AB4                  __ptext4 2B46                  __ptext5 2B4E  
                __ptext6 2668                  __ptext7 28A6                  __ptext8 27C0  
                __ptext9 2AE4               ??_lcd_init 0511             _ENVIA_NIBBLE 2B10  
    __end_of_DEFAULT_ISR 2B5A     end_of_initialization 299A                _PORTBbits 04CF  
              _PORTCbits 04D0             _escalamiento 2B2C                _TRISBbits 04C7  
              _TRISCbits 04C8       escalamiento@numero 0501             _CURSOR_ONOFF 2AB4  
     CURSOR_ONOFF@estado 0510            __pidataCOMRAM 2B56              _DEFAULT_ISR 2B58  
          ??_CURSOR_HOME 0510      start_initialization 296A               ivt0x8_base 0008  
      ENVIA_LCD_CMD@dato 050E              __pbssCOMRAM 051D      __end_of_CURSOR_HOME 2B4E  
       ___lwdiv@dividend 0512                 ?___lwdiv 0512                 ?___lwmod 050D  
              _configuro 2AE4              __smallconst 2500                _convierte 2668  
        convierte@numero 0519              _diez_millar 0521         ___lwdiv@quotient 0516  
               _LEER_LCD 2834                 _LATCbits 04C0                 _LATDbits 04C1  
               _PIE3bits 04A1                 _PIR3bits 04B1                 _TMR0_ISR 2720  
       ESCRIBE_MENSAJE@i 0513           POS_CURSOR@fila 0511               ?_configuro 0501  
             ?_convierte 0519                 _WPUBbits 0409              _CURSOR_HOME 2B46  
            _INTCON0bits 04D6                 __Hrparam 0000                 __Lrparam 0000  
           __Lsmallconst 2500               _ANSELBbits 0408               _ANSELCbits 0410  
           ?_DEFAULT_ISR 0501                 __pivt0x8 0008          ___lwdiv@divisor 0514  
        ___lwdiv@counter 0518                 __ptext10 29A8                 __ptext11 2A18  
               __ptext12 2A4C                 __ptext13 2A80                 __ptext14 2834  
               __ptext15 2B10                 __ptext16 2720                 __ptext17 2B2C  
               __ptext18 2B58               _BORRAR_LCD 2B4E                 _lcd_init 29E2  
             _LCD_CONFIG 290A               _ENVIA_CHAR 2A80                 isa$xinst 0000  
               _posicion 0522            _ENVIA_LCD_CMD 2A18              ??_configuro 050D  
            ??_convierte 051B        ??_ESCRIBE_MENSAJE 0512                 intlevel2 0000  
  ESCRIBE_MENSAJE@cadena 0510         ___lwmod@dividend 050D           ?_ENVIA_LCD_CMD 0501  
        ___lwmod@divisor 050F          ___lwmod@counter 0511              ?_BORRAR_LCD 0501  
          ?_ENVIA_NIBBLE 0501               _POS_CURSOR 29A8              ?_LCD_CONFIG 0501  
     ESCRIBE_MENSAJE@tam 0511              ?_ENVIA_CHAR 0501        POS_CURSOR@columna 0510  
