

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Thu Oct 26 21:38:21 2023

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og9 
     1                           	processor	18F57Q43
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1
    22                           	psect	text13,global,reloc=2,class=CODE,delta=1
    23                           	psect	text14,global,reloc=2,class=CODE,delta=1
    24                           	psect	text15,global,reloc=2,class=CODE,delta=1
    25                           	psect	text16,global,reloc=2,class=CODE,delta=1
    26                           	psect	text17,global,reloc=2,class=CODE,delta=1
    27                           	psect	text18,global,reloc=4,class=CODE,delta=1
    28                           	psect	text19,global,reloc=4,class=CODE,delta=1
    29                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
    30                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    31                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    32                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    33   000000                     
    34                           ; Generated 17/10/2023 GMT
    35                           ; 
    36                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    37                           ; All rights reserved.
    38                           ; 
    39                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    40                           ; 
    41                           ; Redistribution and use in source and binary forms, with or without modification, are
    42                           ; permitted provided that the following conditions are met:
    43                           ; 
    44                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    45                           ;        conditions and the following disclaimer.
    46                           ; 
    47                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    48                           ;        of conditions and the following disclaimer in the documentation and/or other
    49                           ;        materials provided with the distribution. Publication is not required when
    50                           ;        this file is used in an embedded application.
    51                           ; 
    52                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    53                           ;        software without specific prior written permission.
    54                           ; 
    55                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    56                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    57                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    58                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    59                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    60                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    61                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    62                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    63                           ; 
    64                           ; 
    65                           ; Code-generator required, PIC18F57Q43 Definitions
    66                           ; 
    67                           ; SFR Addresses
    68   000000                     _TRISCbits	set	1224
    69   000000                     _LATD	set	1217
    70   000000                     _OSCCON1	set	173
    71   000000                     _LATDbits	set	1217
    72   000000                     _TRISAbits	set	1222
    73   000000                     _TRISBbits	set	1223
    74   000000                     _TRISD	set	1225
    75   000000                     _PORTCbits	set	1232
    76   000000                     _PORTD	set	1233
    77   000000                     _INTCON0bits	set	1238
    78   000000                     _OSCFRQ	set	177
    79   000000                     _OSCEN	set	179
    80   000000                     _TMR0L	set	792
    81   000000                     _TMR0H	set	793
    82   000000                     _T0CON0	set	794
    83   000000                     _ANSELAbits	set	1024
    84   000000                     _ANSELBbits	set	1032
    85   000000                     _ANSELCbits	set	1040
    86   000000                     _WPUBbits	set	1033
    87   000000                     _ANSELD	set	1048
    88   000000                     _PIE3bits	set	1185
    89   000000                     _PIR3bits	set	1201
    90   000000                     _ADRESL	set	1002
    91   000000                     _ADRESH	set	1003
    92   000000                     _ADPCH	set	1004
    93   000000                     _ADCON0bits	set	1011
    94   000000                     _T0CON1	set	795
    95   000000                     _LATCbits	set	1216
    96                           
    97                           	psect	smallconst
    98   002500                     __psmallconst:
    99                           	callstack 0
   100   002500  00                 	db	0
   101   002501                     STR_1:
   102   002501  53                 	db	83	;'S'
   103   002502  65                 	db	101	;'e'
   104   002503  72                 	db	114	;'r'
   105   002504  76                 	db	118	;'v'
   106   002505  69                 	db	105	;'i'
   107   002506  74                 	db	116	;'t'
   108   002507  6F                 	db	111	;'o'
   109   002508  20                 	db	32
   110   002509  55                 	db	85	;'U'
   111   00250A  50                 	db	80	;'P'
   112   00250B  43                 	db	67	;'C'
   113   00250C  69                 	db	105	;'i'
   114   00250D  6E                 	db	110	;'n'
   115   00250E  6F                 	db	111	;'o'
   116   00250F  00                 	db	0
   117   002510  00                 	db	0	; dummy byte at the end
   118   000000                     
   119                           ; #config settings
   120                           
   121                           	psect	cinit
   122   002F84                     __pcinit:
   123                           	callstack 0
   124   002F84                     start_initialization:
   125                           	callstack 0
   126   002F84                     __initialization:
   127                           	callstack 0
   128                           
   129                           ; Clear objects allocated to COMRAM (8 bytes)
   130   002F84  EE01  F142         	lfsr	0,__pbssCOMRAM
   131   002F88  0E08               	movlw	8
   132   002F8A                     clear_0:
   133   002F8A  6AEE               	clrf	postinc0,c
   134   002F8C  06E8               	decf	wreg,f,c
   135   002F8E  E1FD               	bnz	clear_0
   136                           
   137                           ;
   138                           ; Setup IVTBASE
   139                           ;
   140   002F90  0104               	movlb	4
   141   002F92  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
   142   002F94  6F5D               	movwf	93,b
   143   002F96  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
   144   002F98  6F5E               	movwf	94,b
   145   002F9A  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
   146   002F9C  6F5F               	movwf	95,b
   147   002F9E                     end_of_initialization:
   148                           	callstack 0
   149   002F9E                     __end_of__initialization:
   150                           	callstack 0
   151   002F9E  0E00               	movlw	low (__Lsmallconst shr (0+16))
   152   002FA0  6EF8               	movwf	tblptru,c
   153   002FA2  0E25               	movlw	high __Lsmallconst
   154   002FA4  6EF7               	movwf	tblptrh,c
   155   002FA6  0100               	movlb	0
   156   002FA8  EFF3  F015         	goto	_main	;jump to C main() function
   157                           
   158                           	psect	bssCOMRAM
   159   000542                     __pbssCOMRAM:
   160                           	callstack 0
   161   000542                     _temporal:
   162                           	callstack 0
   163   000542                     	ds	4
   164   000546                     _lectura_adc:
   165                           	callstack 0
   166   000546                     	ds	2
   167   000548                     _posicion:
   168                           	callstack 0
   169   000548                     	ds	2
   170                           
   171                           	psect	cstackCOMRAM
   172   000501                     __pcstackCOMRAM:
   173                           	callstack 0
   174   000501                     ??_TMR0_ISR:
   175   000501                     
   176                           ; 1 bytes @ 0x0
   177   000501                     	ds	8
   178   000509                     ?___fltol:
   179                           	callstack 0
   180   000509                     ?___xxtofl:
   181                           	callstack 0
   182   000509                     ENVIA_NIBBLE@dato:
   183                           	callstack 0
   184   000509                     LEER_LCD@aux:
   185                           	callstack 0
   186   000509                     ___fltol@f1:
   187                           	callstack 0
   188   000509                     ___xxtofl@val:
   189                           	callstack 0
   190                           
   191                           ; 4 bytes @ 0x8
   192   000509                     	ds	1
   193   00050A                     ENVIA_CHAR@dato:
   194                           	callstack 0
   195   00050A                     ENVIA_LCD_CMD@dato:
   196                           	callstack 0
   197                           
   198                           ; 1 bytes @ 0x9
   199   00050A                     	ds	1
   200   00050B                     ENVIA_CHAR@aux:
   201                           	callstack 0
   202   00050B                     ENVIA_LCD_CMD@aux:
   203                           	callstack 0
   204                           
   205                           ; 1 bytes @ 0xA
   206   00050B                     	ds	1
   207   00050C                     ??_LCD_CONFIG:
   208   00050C                     POS_CURSOR@columna:
   209                           	callstack 0
   210   00050C                     CURSOR_ONOFF@estado:
   211                           	callstack 0
   212   00050C                     ESCRIBE_MENSAJE@cadena:
   213                           	callstack 0
   214                           
   215                           ; 1 bytes @ 0xB
   216   00050C                     	ds	1
   217   00050D                     ??_lcd_init:
   218   00050D                     ??___fltol:
   219   00050D                     ??___xxtofl:
   220   00050D                     POS_CURSOR@fila:
   221                           	callstack 0
   222   00050D                     ESCRIBE_MENSAJE@tam:
   223                           	callstack 0
   224                           
   225                           ; 1 bytes @ 0xC
   226   00050D                     	ds	1
   227   00050E                     ??_ESCRIBE_MENSAJE:
   228                           
   229                           ; 1 bytes @ 0xD
   230   00050E                     	ds	1
   231   00050F                     ESCRIBE_MENSAJE@i:
   232                           	callstack 0
   233                           
   234                           ; 1 bytes @ 0xE
   235   00050F                     	ds	2
   236   000511                     ___fltol@sign1:
   237                           	callstack 0
   238   000511                     ___xxtofl@sign:
   239                           	callstack 0
   240                           
   241                           ; 1 bytes @ 0x10
   242   000511                     	ds	1
   243   000512                     ___fltol@exp1:
   244                           	callstack 0
   245   000512                     ___xxtofl@exp:
   246                           	callstack 0
   247                           
   248                           ; 1 bytes @ 0x11
   249   000512                     	ds	1
   250   000513                     ___xxtofl@arg:
   251                           	callstack 0
   252                           
   253                           ; 4 bytes @ 0x12
   254   000513                     	ds	4
   255   000517                     ?___fldiv:
   256                           	callstack 0
   257   000517                     ___fldiv@b:
   258                           	callstack 0
   259                           
   260                           ; 4 bytes @ 0x16
   261   000517                     	ds	4
   262   00051B                     ___fldiv@a:
   263                           	callstack 0
   264                           
   265                           ; 4 bytes @ 0x1A
   266   00051B                     	ds	4
   267   00051F                     ??___fldiv:
   268                           
   269                           ; 1 bytes @ 0x1E
   270   00051F                     	ds	4
   271   000523                     ___fldiv@rem:
   272                           	callstack 0
   273                           
   274                           ; 4 bytes @ 0x22
   275   000523                     	ds	4
   276   000527                     ___fldiv@sign:
   277                           	callstack 0
   278                           
   279                           ; 1 bytes @ 0x26
   280   000527                     	ds	1
   281   000528                     ___fldiv@new_exp:
   282                           	callstack 0
   283                           
   284                           ; 2 bytes @ 0x27
   285   000528                     	ds	2
   286   00052A                     ___fldiv@grs:
   287                           	callstack 0
   288                           
   289                           ; 4 bytes @ 0x29
   290   00052A                     	ds	4
   291   00052E                     ___fldiv@bexp:
   292                           	callstack 0
   293                           
   294                           ; 1 bytes @ 0x2D
   295   00052E                     	ds	1
   296   00052F                     ___fldiv@aexp:
   297                           	callstack 0
   298                           
   299                           ; 1 bytes @ 0x2E
   300   00052F                     	ds	1
   301   000530                     ?___fladd:
   302                           	callstack 0
   303   000530                     ___fladd@b:
   304                           	callstack 0
   305                           
   306                           ; 4 bytes @ 0x2F
   307   000530                     	ds	4
   308   000534                     ___fladd@a:
   309                           	callstack 0
   310                           
   311                           ; 4 bytes @ 0x33
   312   000534                     	ds	4
   313   000538                     ??___fladd:
   314                           
   315                           ; 1 bytes @ 0x37
   316   000538                     	ds	4
   317   00053C                     ___fladd@signs:
   318                           	callstack 0
   319                           
   320                           ; 1 bytes @ 0x3B
   321   00053C                     	ds	1
   322   00053D                     ___fladd@aexp:
   323                           	callstack 0
   324                           
   325                           ; 1 bytes @ 0x3C
   326   00053D                     	ds	1
   327   00053E                     ___fladd@bexp:
   328                           	callstack 0
   329                           
   330                           ; 1 bytes @ 0x3D
   331   00053E                     	ds	1
   332   00053F                     ___fladd@grs:
   333                           	callstack 0
   334                           
   335                           ; 1 bytes @ 0x3E
   336   00053F                     	ds	1
   337   000540                     ??_main:
   338                           
   339                           ; 1 bytes @ 0x3F
   340   000540                     	ds	2
   341                           
   342 ;;
   343 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   344 ;;
   345 ;; *************** function _main *****************
   346 ;; Defined at:
   347 ;;		line 52 in file "maincode6.c"
   348 ;; Parameters:    Size  Location     Type
   349 ;;		None
   350 ;; Auto vars:     Size  Location     Type
   351 ;;		None
   352 ;; Return value:  Size  Location     Type
   353 ;;                  1    wreg      void 
   354 ;; Registers used:
   355 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   356 ;; Tracked objects:
   357 ;;		On entry : 0/0
   358 ;;		On exit  : 0/0
   359 ;;		Unchanged: 0/0
   360 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   361 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   362 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   363 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   364 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   365 ;;Total ram usage:        2 bytes
   366 ;; Hardware stack levels required when called: 5
   367 ;; This function calls:
   368 ;;		_ESCRIBE_MENSAJE
   369 ;;		_POS_CURSOR
   370 ;;		___fladd
   371 ;;		___fldiv
   372 ;;		___fltol
   373 ;;		___xxtofl
   374 ;;		_configuro
   375 ;;		_lcd_init
   376 ;;		_tomamuestra_ADC
   377 ;; This function is called by:
   378 ;;		Startup code after reset
   379 ;; This function uses a non-reentrant model
   380 ;;
   381                           
   382                           	psect	text0
   383   002BE6                     __ptext0:
   384                           	callstack 0
   385   002BE6                     _main:
   386                           	callstack 122
   387                           
   388                           ;maincode6.c: 53:     configuro();
   389                           
   390                           ;incstack = 0
   391   002BE6  EC58  F017         	call	_configuro	;wreg free
   392                           
   393                           ; BSR set to: 3
   394                           ;maincode6.c: 54:     lcd_init();
   395   002BEA  ECAC  F017         	call	_lcd_init	;wreg free
   396                           
   397                           ;maincode6.c: 55:     POS_CURSOR(1,0);
   398   002BEE  0E00               	movlw	0
   399   002BF0  6E0C               	movwf	POS_CURSOR@columna^(0+1280),c
   400   002BF2  0E01               	movlw	1
   401   002BF4  ECEA  F017         	call	_POS_CURSOR
   402                           
   403                           ;maincode6.c: 56:     ESCRIBE_MENSAJE("Servito UPCino",14);
   404   002BF8  0E01               	movlw	low STR_1
   405   002BFA  6E0C               	movwf	ESCRIBE_MENSAJE@cadena^(0+1280),c
   406   002BFC  0E0E               	movlw	14
   407   002BFE  6E0D               	movwf	ESCRIBE_MENSAJE@tam^(0+1280),c
   408   002C00  ECD6  F017         	call	_ESCRIBE_MENSAJE	;wreg free
   409   002C04                     l1942:
   410                           
   411                           ;maincode6.c: 58:         tomamuestra_ADC();
   412   002C04  EC18  F018         	call	_tomamuestra_ADC	;wreg free
   413                           
   414                           ; BSR set to: 3
   415                           ;maincode6.c: 60:         lectura_adc = (ADRESH << 8) + ADRESL;
   416   002C08  51EB               	movf	235,w,b	;volatile
   417   002C0A  6E41               	movwf	(??_main+1)^(0+1280),c
   418   002C0C  6A40               	clrf	??_main^(0+1280),c
   419   002C0E  51EA               	movf	234,w,b	;volatile
   420   002C10  2440               	addwf	??_main^(0+1280),w,c
   421   002C12  6E46               	movwf	_lectura_adc^(0+1280),c
   422   002C14  0E00               	movlw	0
   423   002C16  2041               	addwfc	(??_main+1)^(0+1280),w,c
   424   002C18  6E47               	movwf	(_lectura_adc+1)^(0+1280),c
   425                           
   426                           ; BSR set to: 3
   427                           ;maincode6.c: 61:         temporal = (lectura_adc / 2.56) + 700;
   428   002C1A  0E0A               	movlw	10
   429   002C1C  6E1B               	movwf	___fldiv@a^(0+1280),c
   430   002C1E  0ED7               	movlw	215
   431   002C20  6E1C               	movwf	(___fldiv@a+1)^(0+1280),c
   432   002C22  0E23               	movlw	35
   433   002C24  6E1D               	movwf	(___fldiv@a+2)^(0+1280),c
   434   002C26  0E40               	movlw	64
   435   002C28  6E1E               	movwf	(___fldiv@a+3)^(0+1280),c
   436   002C2A  C546  F509         	movff	_lectura_adc,___xxtofl@val
   437   002C2E  C547  F50A         	movff	_lectura_adc+1,___xxtofl@val+1
   438   002C32  6A0B               	clrf	(___xxtofl@val+2)^(0+1280),c
   439   002C34  6A0C               	clrf	(___xxtofl@val+3)^(0+1280),c
   440   002C36  0E00               	movlw	0
   441   002C38  EC53  F015         	call	___xxtofl
   442   002C3C  C509  F517         	movff	?___xxtofl,___fldiv@b
   443   002C40  C50A  F518         	movff	?___xxtofl+1,___fldiv@b+1
   444   002C44  C50B  F519         	movff	?___xxtofl+2,___fldiv@b+2
   445   002C48  C50C  F51A         	movff	?___xxtofl+3,___fldiv@b+3
   446   002C4C  EC0F  F014         	call	___fldiv	;wreg free
   447   002C50  C517  F530         	movff	?___fldiv,___fladd@b
   448   002C54  C518  F531         	movff	?___fldiv+1,___fladd@b+1
   449   002C58  C519  F532         	movff	?___fldiv+2,___fladd@b+2
   450   002C5C  C51A  F533         	movff	?___fldiv+3,___fladd@b+3
   451   002C60  0E00               	movlw	0
   452   002C62  6E34               	movwf	___fladd@a^(0+1280),c
   453   002C64  0E00               	movlw	0
   454   002C66  6E35               	movwf	(___fladd@a+1)^(0+1280),c
   455   002C68  0E2F               	movlw	47
   456   002C6A  6E36               	movwf	(___fladd@a+2)^(0+1280),c
   457   002C6C  0E44               	movlw	68
   458   002C6E  6E37               	movwf	(___fladd@a+3)^(0+1280),c
   459   002C70  EC89  F012         	call	___fladd	;wreg free
   460   002C74  C530  F542         	movff	?___fladd,_temporal
   461   002C78  C531  F543         	movff	?___fladd+1,_temporal+1
   462   002C7C  C532  F544         	movff	?___fladd+2,_temporal+2
   463   002C80  C533  F545         	movff	?___fladd+3,_temporal+3
   464                           
   465                           ;maincode6.c: 62:         posicion = temporal;
   466   002C84  C542  F509         	movff	_temporal,___fltol@f1
   467   002C88  C543  F50A         	movff	_temporal+1,___fltol@f1+1
   468   002C8C  C544  F50B         	movff	_temporal+2,___fltol@f1+2
   469   002C90  C545  F50C         	movff	_temporal+3,___fltol@f1+3
   470   002C94  EC51  F016         	call	___fltol	;wreg free
   471   002C98  C509  F548         	movff	?___fltol,_posicion
   472   002C9C  C50A  F549         	movff	?___fltol+1,_posicion+1
   473   002CA0  D7B1               	goto	l1942
   474   002CA2                     __end_of_main:
   475                           	callstack 0
   476                           
   477 ;; *************** function _tomamuestra_ADC *****************
   478 ;; Defined at:
   479 ;;		line 47 in file "maincode6.c"
   480 ;; Parameters:    Size  Location     Type
   481 ;;		None
   482 ;; Auto vars:     Size  Location     Type
   483 ;;		None
   484 ;; Return value:  Size  Location     Type
   485 ;;                  1    wreg      void 
   486 ;; Registers used:
   487 ;;		None
   488 ;; Tracked objects:
   489 ;;		On entry : 0/3
   490 ;;		On exit  : 3F/3
   491 ;;		Unchanged: 0/0
   492 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   493 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   494 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   495 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   496 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   497 ;;Total ram usage:        0 bytes
   498 ;; Hardware stack levels used: 1
   499 ;; Hardware stack levels required when called: 1
   500 ;; This function calls:
   501 ;;		Nothing
   502 ;; This function is called by:
   503 ;;		_main
   504 ;; This function uses a non-reentrant model
   505 ;;
   506                           
   507                           	psect	text1
   508   003030                     __ptext1:
   509                           	callstack 0
   510   003030                     _tomamuestra_ADC:
   511                           	callstack 125
   512                           
   513                           ;maincode6.c: 48:     ADCON0bits.GO = 1;
   514                           
   515                           ;incstack = 0
   516   003030  0103               	movlb	3	; () banked
   517   003032  81F3               	bsf	243,0,b	;volatile
   518   003034                     l153:
   519                           
   520                           ; BSR set to: 3
   521   003034  A1F3               	btfss	243,0,b	;volatile
   522   003036  0012               	return	
   523   003038  D7FD               	goto	l153
   524   00303A                     __end_of_tomamuestra_ADC:
   525                           	callstack 0
   526                           
   527 ;; *************** function _lcd_init *****************
   528 ;; Defined at:
   529 ;;		line 37 in file "maincode6.c"
   530 ;; Parameters:    Size  Location     Type
   531 ;;		None
   532 ;; Auto vars:     Size  Location     Type
   533 ;;		None
   534 ;; Return value:  Size  Location     Type
   535 ;;                  1    wreg      void 
   536 ;; Registers used:
   537 ;;		wreg, status,2, status,0, cstack
   538 ;; Tracked objects:
   539 ;;		On entry : 3F/3
   540 ;;		On exit  : 0/0
   541 ;;		Unchanged: 0/0
   542 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   543 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   544 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   545 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   546 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   547 ;;Total ram usage:        1 bytes
   548 ;; Hardware stack levels used: 1
   549 ;; Hardware stack levels required when called: 4
   550 ;; This function calls:
   551 ;;		_BORRAR_LCD
   552 ;;		_CURSOR_HOME
   553 ;;		_CURSOR_ONOFF
   554 ;;		_LCD_CONFIG
   555 ;; This function is called by:
   556 ;;		_main
   557 ;; This function uses a non-reentrant model
   558 ;;
   559                           
   560                           	psect	text2
   561   002F58                     __ptext2:
   562                           	callstack 0
   563   002F58                     _lcd_init:
   564                           	callstack 122
   565                           
   566                           ; BSR set to: 3
   567                           ;maincode6.c: 38:     TRISD = 0x00;
   568                           
   569                           ; BSR set to: 3
   570                           ;incstack = 0
   571   002F58  0E00               	movlw	0
   572   002F5A  6EC9               	movwf	201,c	;volatile
   573                           
   574                           ;maincode6.c: 39:     ANSELD = 0x00;
   575   002F5C  0E00               	movlw	0
   576   002F5E  0104               	movlb	4	; () banked
   577   002F60  6F18               	movwf	24,b	;volatile
   578                           
   579                           ; BSR set to: 4
   580                           ;maincode6.c: 40:     LCD_CONFIG();
   581   002F62  EC28  F017         	call	_LCD_CONFIG	;wreg free
   582                           
   583                           ;maincode6.c: 41:     _delay((unsigned long)((19)*(32000000UL/4000.0)));
   584   002F66  0EC6               	movlw	198
   585   002F68  6E0D               	movwf	??_lcd_init^(0+1280),c
   586   002F6A  0E66               	movlw	102
   587   002F6C                     u1707:
   588   002F6C  2EE8               	decfsz	wreg,f,c
   589   002F6E  D7FE               	bra	u1707
   590   002F70  2E0D               	decfsz	??_lcd_init^(0+1280),f,c
   591   002F72  D7FC               	bra	u1707
   592                           
   593                           ;maincode6.c: 42:     BORRAR_LCD();
   594   002F74  EC21  F018         	call	_BORRAR_LCD	;wreg free
   595                           
   596                           ;maincode6.c: 43:     CURSOR_HOME();
   597   002F78  EC1D  F018         	call	_CURSOR_HOME	;wreg free
   598                           
   599                           ;maincode6.c: 44:     CURSOR_ONOFF(1);
   600   002F7C  0E01               	movlw	1
   601   002F7E  ECFC  F017         	call	_CURSOR_ONOFF
   602   002F82  0012               	return		;funcret
   603   002F84                     __end_of_lcd_init:
   604                           	callstack 0
   605                           
   606 ;; *************** function _LCD_CONFIG *****************
   607 ;; Defined at:
   608 ;;		line 72 in file "LCD.c"
   609 ;; Parameters:    Size  Location     Type
   610 ;;		None
   611 ;; Auto vars:     Size  Location     Type
   612 ;;		None
   613 ;; Return value:  Size  Location     Type
   614 ;;                  1    wreg      void 
   615 ;; Registers used:
   616 ;;		wreg, status,2, status,0, cstack
   617 ;; Tracked objects:
   618 ;;		On entry : 3F/4
   619 ;;		On exit  : 0/0
   620 ;;		Unchanged: 0/0
   621 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   622 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   623 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   624 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   625 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   626 ;;Total ram usage:        1 bytes
   627 ;; Hardware stack levels used: 1
   628 ;; Hardware stack levels required when called: 3
   629 ;; This function calls:
   630 ;;		_ENVIA_LCD_CMD
   631 ;;		_ENVIA_NIBBLE
   632 ;; This function is called by:
   633 ;;		_lcd_init
   634 ;; This function uses a non-reentrant model
   635 ;;
   636                           
   637                           	psect	text3
   638   002E50                     __ptext3:
   639                           	callstack 0
   640   002E50                     _LCD_CONFIG:
   641                           	callstack 122
   642                           
   643                           ; BSR set to: 4
   644                           ;LCD.c: 74:  LATDbits.LATD0 = 0;
   645                           
   646                           ;incstack = 0
   647   002E50  90C1               	bcf	193,0,c	;volatile
   648                           
   649                           ;LCD.c: 75:  LATDbits.LATD1 = 0;
   650   002E52  92C1               	bcf	193,1,c	;volatile
   651                           
   652                           ; BSR set to: 4
   653                           ;LCD.c: 76:  ENVIA_NIBBLE(0x30);
   654   002E54  0E30               	movlw	48
   655   002E56  EC0A  F018         	call	_ENVIA_NIBBLE
   656                           
   657                           ;LCD.c: 77:         _delay(24000);
   658   002E5A  0E20               	movlw	32
   659   002E5C  6E0C               	movwf	??_LCD_CONFIG^(0+1280),c
   660   002E5E  0E2A               	movlw	42
   661   002E60                     u1717:
   662   002E60  2EE8               	decfsz	wreg,f,c
   663   002E62  D7FE               	bra	u1717
   664   002E64  2E0C               	decfsz	??_LCD_CONFIG^(0+1280),f,c
   665   002E66  D7FC               	bra	u1717
   666                           
   667                           ;LCD.c: 78:         _delay(24000);
   668   002E68  0E20               	movlw	32
   669   002E6A  6E0C               	movwf	??_LCD_CONFIG^(0+1280),c
   670   002E6C  0E2A               	movlw	42
   671   002E6E                     u1727:
   672   002E6E  2EE8               	decfsz	wreg,f,c
   673   002E70  D7FE               	bra	u1727
   674   002E72  2E0C               	decfsz	??_LCD_CONFIG^(0+1280),f,c
   675   002E74  D7FC               	bra	u1727
   676                           
   677                           ;LCD.c: 81:  ENVIA_NIBBLE(0x30);
   678   002E76  0E30               	movlw	48
   679   002E78  EC0A  F018         	call	_ENVIA_NIBBLE
   680                           
   681                           ;LCD.c: 83:  _delay(1200);
   682   002E7C  0EF0               	movlw	240
   683   002E7E                     u1737:
   684   002E7E  D000               	nop2	
   685   002E80  2EE8               	decfsz	wreg,f,c
   686   002E82  D7FD               	bra	u1737
   687                           
   688                           ;LCD.c: 84:         ENVIA_NIBBLE(0x30);
   689   002E84  0E30               	movlw	48
   690   002E86  EC0A  F018         	call	_ENVIA_NIBBLE
   691                           
   692                           ;LCD.c: 85:  ENVIA_NIBBLE(0x20);
   693   002E8A  0E20               	movlw	32
   694   002E8C  EC0A  F018         	call	_ENVIA_NIBBLE
   695                           
   696                           ;LCD.c: 86:  ENVIA_LCD_CMD(0x01);
   697   002E90  0E01               	movlw	1
   698   002E92  EC78  F017         	call	_ENVIA_LCD_CMD
   699                           
   700                           ;LCD.c: 87:  ENVIA_LCD_CMD(0x28);
   701   002E96  0E28               	movlw	40
   702   002E98  EC78  F017         	call	_ENVIA_LCD_CMD
   703                           
   704                           ;LCD.c: 88:  ENVIA_LCD_CMD(0x0F);
   705   002E9C  0E0F               	movlw	15
   706   002E9E  EC78  F017         	call	_ENVIA_LCD_CMD
   707                           
   708                           ;LCD.c: 89:  ENVIA_LCD_CMD(0x06);
   709   002EA2  0E06               	movlw	6
   710   002EA4  EC78  F017         	call	_ENVIA_LCD_CMD
   711                           
   712                           ;LCD.c: 90:  ENVIA_LCD_CMD(0x01);
   713   002EA8  0E01               	movlw	1
   714   002EAA  EC78  F017         	call	_ENVIA_LCD_CMD
   715   002EAE  0012               	return		;funcret
   716   002EB0                     __end_of_LCD_CONFIG:
   717                           	callstack 0
   718                           
   719 ;; *************** function _CURSOR_ONOFF *****************
   720 ;; Defined at:
   721 ;;		line 35 in file "LCD.c"
   722 ;; Parameters:    Size  Location     Type
   723 ;;  estado          1    wreg     unsigned char 
   724 ;; Auto vars:     Size  Location     Type
   725 ;;  estado          1   11[COMRAM] unsigned char 
   726 ;; Return value:  Size  Location     Type
   727 ;;                  1    wreg      void 
   728 ;; Registers used:
   729 ;;		wreg, status,2, status,0, cstack
   730 ;; Tracked objects:
   731 ;;		On entry : 0/4
   732 ;;		On exit  : 0/0
   733 ;;		Unchanged: 0/0
   734 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   735 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   736 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   737 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   738 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   739 ;;Total ram usage:        1 bytes
   740 ;; Hardware stack levels used: 1
   741 ;; Hardware stack levels required when called: 3
   742 ;; This function calls:
   743 ;;		_ENVIA_LCD_CMD
   744 ;; This function is called by:
   745 ;;		_lcd_init
   746 ;; This function uses a non-reentrant model
   747 ;;
   748                           
   749                           	psect	text4
   750   002FF8                     __ptext4:
   751                           	callstack 0
   752   002FF8                     _CURSOR_ONOFF:
   753                           	callstack 122
   754                           
   755                           ;incstack = 0
   756                           ;CURSOR_ONOFF@estado stored from wreg
   757   002FF8  6E0C               	movwf	CURSOR_ONOFF@estado^(0+1280),c
   758                           
   759                           ;LCD.c: 35: void CURSOR_ONOFF(unsigned char estado);LCD.c: 36: {;LCD.c: 37:  if(estado =
      +                          = 0) ENVIA_LCD_CMD(0x0E);
   760   002FFA  500C               	movf	CURSOR_ONOFF@estado^(0+1280),w,c
   761   002FFC  A4D8               	btfss	status,2,c
   762   002FFE  D003               	goto	l926
   763   003000  0E0E               	movlw	14
   764   003002  EC78  F017         	call	_ENVIA_LCD_CMD
   765   003006                     l926:
   766                           
   767                           ;LCD.c: 38:  if(estado == 1) ENVIA_LCD_CMD(0x0C);
   768   003006  040C               	decf	CURSOR_ONOFF@estado^(0+1280),w,c
   769   003008  A4D8               	btfss	status,2,c
   770   00300A  0012               	return	
   771   00300C  0E0C               	movlw	12
   772   00300E  EC78  F017         	call	_ENVIA_LCD_CMD
   773   003012  0012               	return		;funcret
   774   003014                     __end_of_CURSOR_ONOFF:
   775                           	callstack 0
   776                           
   777 ;; *************** function _CURSOR_HOME *****************
   778 ;; Defined at:
   779 ;;		line 30 in file "LCD.c"
   780 ;; Parameters:    Size  Location     Type
   781 ;;		None
   782 ;; Auto vars:     Size  Location     Type
   783 ;;		None
   784 ;; Return value:  Size  Location     Type
   785 ;;                  1    wreg      void 
   786 ;; Registers used:
   787 ;;		wreg, status,2, status,0, cstack
   788 ;; Tracked objects:
   789 ;;		On entry : 0/4
   790 ;;		On exit  : 0/0
   791 ;;		Unchanged: 0/0
   792 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   793 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   794 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   795 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   796 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   797 ;;Total ram usage:        0 bytes
   798 ;; Hardware stack levels used: 1
   799 ;; Hardware stack levels required when called: 3
   800 ;; This function calls:
   801 ;;		_ENVIA_LCD_CMD
   802 ;; This function is called by:
   803 ;;		_lcd_init
   804 ;; This function uses a non-reentrant model
   805 ;;
   806                           
   807                           	psect	text5
   808   00303A                     __ptext5:
   809                           	callstack 0
   810   00303A                     _CURSOR_HOME:
   811                           	callstack 122
   812                           
   813                           ;LCD.c: 32:  ENVIA_LCD_CMD(0x02);
   814                           
   815                           ;incstack = 0
   816   00303A  0E02               	movlw	2
   817   00303C  EC78  F017         	call	_ENVIA_LCD_CMD
   818   003040  0012               	return		;funcret
   819   003042                     __end_of_CURSOR_HOME:
   820                           	callstack 0
   821                           
   822 ;; *************** function _BORRAR_LCD *****************
   823 ;; Defined at:
   824 ;;		line 67 in file "LCD.c"
   825 ;; Parameters:    Size  Location     Type
   826 ;;		None
   827 ;; Auto vars:     Size  Location     Type
   828 ;;		None
   829 ;; Return value:  Size  Location     Type
   830 ;;                  1    wreg      void 
   831 ;; Registers used:
   832 ;;		wreg, status,2, status,0, cstack
   833 ;; Tracked objects:
   834 ;;		On entry : 0/4
   835 ;;		On exit  : 0/0
   836 ;;		Unchanged: 0/0
   837 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   838 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   839 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   840 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   841 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   842 ;;Total ram usage:        0 bytes
   843 ;; Hardware stack levels used: 1
   844 ;; Hardware stack levels required when called: 3
   845 ;; This function calls:
   846 ;;		_ENVIA_LCD_CMD
   847 ;; This function is called by:
   848 ;;		_lcd_init
   849 ;; This function uses a non-reentrant model
   850 ;;
   851                           
   852                           	psect	text6
   853   003042                     __ptext6:
   854                           	callstack 0
   855   003042                     _BORRAR_LCD:
   856                           	callstack 122
   857                           
   858                           ;LCD.c: 69:  ENVIA_LCD_CMD(0x01);
   859                           
   860                           ;incstack = 0
   861   003042  0E01               	movlw	1
   862   003044  EC78  F017         	call	_ENVIA_LCD_CMD
   863   003048  0012               	return		;funcret
   864   00304A                     __end_of_BORRAR_LCD:
   865                           	callstack 0
   866                           
   867 ;; *************** function _configuro *****************
   868 ;; Defined at:
   869 ;;		line 10 in file "maincode6.c"
   870 ;; Parameters:    Size  Location     Type
   871 ;;		None
   872 ;; Auto vars:     Size  Location     Type
   873 ;;		None
   874 ;; Return value:  Size  Location     Type
   875 ;;                  1    wreg      void 
   876 ;; Registers used:
   877 ;;		wreg, status,2
   878 ;; Tracked objects:
   879 ;;		On entry : 0/0
   880 ;;		On exit  : 3F/3
   881 ;;		Unchanged: 0/0
   882 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   883 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   884 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   885 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   886 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   887 ;;Total ram usage:        0 bytes
   888 ;; Hardware stack levels used: 1
   889 ;; Hardware stack levels required when called: 1
   890 ;; This function calls:
   891 ;;		Nothing
   892 ;; This function is called by:
   893 ;;		_main
   894 ;; This function uses a non-reentrant model
   895 ;;
   896                           
   897                           	psect	text7
   898   002EB0                     __ptext7:
   899                           	callstack 0
   900   002EB0                     _configuro:
   901                           	callstack 125
   902                           
   903                           ;maincode6.c: 12:     OSCCON1 = 0x60;
   904                           
   905                           ;incstack = 0
   906   002EB0  0E60               	movlw	96
   907   002EB2  0100               	movlb	0	; () banked
   908   002EB4  6FAD               	movwf	173,b	;volatile
   909                           
   910                           ;maincode6.c: 13:     OSCFRQ = 0x06;
   911   002EB6  0E06               	movlw	6
   912   002EB8  6FB1               	movwf	177,b	;volatile
   913                           
   914                           ;maincode6.c: 14:     OSCEN = 0x40;
   915   002EBA  0E40               	movlw	64
   916   002EBC  6FB3               	movwf	179,b	;volatile
   917                           
   918                           ; BSR set to: 0
   919                           ;maincode6.c: 16:     TRISBbits.TRISB4 = 1;
   920   002EBE  88C7               	bsf	199,4,c	;volatile
   921                           
   922                           ; BSR set to: 0
   923                           ;maincode6.c: 17:     ANSELBbits.ANSELB4 = 0;
   924   002EC0  0104               	movlb	4	; () banked
   925   002EC2  9908               	bcf	8,4,b	;volatile
   926                           
   927                           ; BSR set to: 4
   928                           ;maincode6.c: 18:     WPUBbits.WPUB4 = 1;
   929   002EC4  8909               	bsf	9,4,b	;volatile
   930                           
   931                           ; BSR set to: 4
   932                           ;maincode6.c: 19:     TRISCbits.TRISC0 = 0;
   933   002EC6  90C8               	bcf	200,0,c	;volatile
   934                           
   935                           ; BSR set to: 4
   936                           ;maincode6.c: 20:     ANSELCbits.ANSELC0 = 0;
   937   002EC8  9110               	bcf	16,0,b	;volatile
   938                           
   939                           ; BSR set to: 4
   940                           ;maincode6.c: 21:     TRISAbits.TRISA0 = 1;
   941   002ECA  80C6               	bsf	198,0,c	;volatile
   942                           
   943                           ; BSR set to: 4
   944                           ;maincode6.c: 22:     ANSELAbits.ANSELA0 = 1;
   945   002ECC  8100               	bsf	0,0,b	;volatile
   946                           
   947                           ;maincode6.c: 24:     T0CON0 = 0x90;
   948   002ECE  0E90               	movlw	144
   949   002ED0  0103               	movlb	3	; () banked
   950   002ED2  6F1A               	movwf	26,b	;volatile
   951                           
   952                           ;maincode6.c: 25:     T0CON1 = 0x43;
   953   002ED4  0E43               	movlw	67
   954   002ED6  6F1B               	movwf	27,b	;volatile
   955                           
   956                           ; BSR set to: 3
   957                           ;maincode6.c: 26:     PIR3bits.TMR0IF = 0;
   958   002ED8  9EB1               	bcf	177,7,c	;volatile
   959                           
   960                           ; BSR set to: 3
   961                           ;maincode6.c: 28:     PIE3bits.TMR0IE = 1;
   962   002EDA  8EA1               	bsf	161,7,c	;volatile
   963                           
   964                           ; BSR set to: 3
   965                           ;maincode6.c: 29:     INTCON0bits.GIE = 1;
   966   002EDC  8ED6               	bsf	214,7,c	;volatile
   967                           
   968                           ;maincode6.c: 31:     ADCON0bits.ADFM = 1;
   969   002EDE  51F3               	movf	243,w,b	;volatile
   970   002EE0  0BF3               	andlw	-13
   971   002EE2  0904               	iorlw	4
   972   002EE4  6FF3               	movwf	243,b	;volatile
   973                           
   974                           ; BSR set to: 3
   975                           ;maincode6.c: 32:     ADCON0bits.CS = 1;
   976   002EE6  89F3               	bsf	243,4,b	;volatile
   977                           
   978                           ;maincode6.c: 33:     ADPCH = 0x00;
   979   002EE8  0E00               	movlw	0
   980   002EEA  6FEC               	movwf	236,b	;volatile
   981                           
   982                           ; BSR set to: 3
   983                           ;maincode6.c: 34:     ADCON0bits.ADON = 1;
   984   002EEC  8FF3               	bsf	243,7,b	;volatile
   985                           
   986                           ; BSR set to: 3
   987   002EEE  0012               	return		;funcret
   988   002EF0                     __end_of_configuro:
   989                           	callstack 0
   990                           
   991 ;; *************** function ___xxtofl *****************
   992 ;; Defined at:
   993 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\xxtofl.c"
   994 ;; Parameters:    Size  Location     Type
   995 ;;  sign            1    wreg     unsigned char 
   996 ;;  val             4    8[COMRAM] long 
   997 ;; Auto vars:     Size  Location     Type
   998 ;;  sign            1   16[COMRAM] unsigned char 
   999 ;;  arg             4   18[COMRAM] unsigned long 
  1000 ;;  exp             1   17[COMRAM] unsigned char 
  1001 ;; Return value:  Size  Location     Type
  1002 ;;                  4    8[COMRAM] unsigned char 
  1003 ;; Registers used:
  1004 ;;		wreg, status,2, status,0
  1005 ;; Tracked objects:
  1006 ;;		On entry : 3F/3
  1007 ;;		On exit  : 0/0
  1008 ;;		Unchanged: 0/0
  1009 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1010 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1011 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1012 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1013 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1014 ;;Total ram usage:       14 bytes
  1015 ;; Hardware stack levels used: 1
  1016 ;; Hardware stack levels required when called: 1
  1017 ;; This function calls:
  1018 ;;		Nothing
  1019 ;; This function is called by:
  1020 ;;		_main
  1021 ;; This function uses a non-reentrant model
  1022 ;;
  1023                           
  1024                           	psect	text8
  1025   002AA6                     __ptext8:
  1026                           	callstack 0
  1027   002AA6                     ___xxtofl:
  1028                           	callstack 125
  1029                           
  1030                           ; BSR set to: 3
  1031                           ;incstack = 0
  1032                           ;___xxtofl@sign stored from wreg
  1033   002AA6  6E11               	movwf	___xxtofl@sign^(0+1280),c
  1034   002AA8  5011               	movf	___xxtofl@sign^(0+1280),w,c
  1035   002AAA  A4D8               	btfss	status,2,c
  1036   002AAC  AE0C               	btfss	(___xxtofl@val+3)^(0+1280),7,c
  1037   002AAE  D01A               	goto	l834
  1038   002AB0  C509  F50D         	movff	___xxtofl@val,??___xxtofl
  1039   002AB4  C50A  F50E         	movff	___xxtofl@val+1,??___xxtofl+1
  1040   002AB8  C50B  F50F         	movff	___xxtofl@val+2,??___xxtofl+2
  1041   002ABC  C50C  F510         	movff	___xxtofl@val+3,??___xxtofl+3
  1042   002AC0  1E0D               	comf	??___xxtofl^(0+1280),f,c
  1043   002AC2  1E0E               	comf	(??___xxtofl+1)^(0+1280),f,c
  1044   002AC4  1E0F               	comf	(??___xxtofl+2)^(0+1280),f,c
  1045   002AC6  1E10               	comf	(??___xxtofl+3)^(0+1280),f,c
  1046   002AC8  2A0D               	incf	??___xxtofl^(0+1280),f,c
  1047   002ACA  0E00               	movlw	0
  1048   002ACC  220E               	addwfc	(??___xxtofl+1)^(0+1280),f,c
  1049   002ACE  220F               	addwfc	(??___xxtofl+2)^(0+1280),f,c
  1050   002AD0  2210               	addwfc	(??___xxtofl+3)^(0+1280),f,c
  1051   002AD2  C50D  F513         	movff	??___xxtofl,___xxtofl@arg
  1052   002AD6  C50E  F514         	movff	??___xxtofl+1,___xxtofl@arg+1
  1053   002ADA  C50F  F515         	movff	??___xxtofl+2,___xxtofl@arg+2
  1054   002ADE  C510  F516         	movff	??___xxtofl+3,___xxtofl@arg+3
  1055   002AE2  D008               	goto	l1894
  1056   002AE4                     l834:
  1057   002AE4  C509  F513         	movff	___xxtofl@val,___xxtofl@arg
  1058   002AE8  C50A  F514         	movff	___xxtofl@val+1,___xxtofl@arg+1
  1059   002AEC  C50B  F515         	movff	___xxtofl@val+2,___xxtofl@arg+2
  1060   002AF0  C50C  F516         	movff	___xxtofl@val+3,___xxtofl@arg+3
  1061   002AF4                     l1894:
  1062   002AF4  5009               	movf	___xxtofl@val^(0+1280),w,c
  1063   002AF6  100A               	iorwf	(___xxtofl@val+1)^(0+1280),w,c
  1064   002AF8  100B               	iorwf	(___xxtofl@val+2)^(0+1280),w,c
  1065   002AFA  100C               	iorwf	(___xxtofl@val+3)^(0+1280),w,c
  1066   002AFC  A4D8               	btfss	status,2,c
  1067   002AFE  D009               	goto	l1900
  1068   002B00  0E00               	movlw	0
  1069   002B02  6E09               	movwf	?___xxtofl^(0+1280),c
  1070   002B04  0E00               	movlw	0
  1071   002B06  6E0A               	movwf	(?___xxtofl+1)^(0+1280),c
  1072   002B08  0E00               	movlw	0
  1073   002B0A  6E0B               	movwf	(?___xxtofl+2)^(0+1280),c
  1074   002B0C  0E00               	movlw	0
  1075   002B0E  6E0C               	movwf	(?___xxtofl+3)^(0+1280),c
  1076   002B10  0012               	return	
  1077   002B12                     l1900:
  1078   002B12  0E96               	movlw	150
  1079   002B14  6E12               	movwf	___xxtofl@exp^(0+1280),c
  1080   002B16  D006               	goto	l1904
  1081   002B18                     l1902:
  1082   002B18  2A12               	incf	___xxtofl@exp^(0+1280),f,c
  1083   002B1A  90D8               	bcf	status,0,c
  1084   002B1C  3216               	rrcf	(___xxtofl@arg+3)^(0+1280),f,c
  1085   002B1E  3215               	rrcf	(___xxtofl@arg+2)^(0+1280),f,c
  1086   002B20  3214               	rrcf	(___xxtofl@arg+1)^(0+1280),f,c
  1087   002B22  3213               	rrcf	___xxtofl@arg^(0+1280),f,c
  1088   002B24                     l1904:
  1089   002B24  0E00               	movlw	0
  1090   002B26  1413               	andwf	___xxtofl@arg^(0+1280),w,c
  1091   002B28  6E0D               	movwf	??___xxtofl^(0+1280),c
  1092   002B2A  0E00               	movlw	0
  1093   002B2C  1414               	andwf	(___xxtofl@arg+1)^(0+1280),w,c
  1094   002B2E  6E0E               	movwf	(??___xxtofl+1)^(0+1280),c
  1095   002B30  0E00               	movlw	0
  1096   002B32  1415               	andwf	(___xxtofl@arg+2)^(0+1280),w,c
  1097   002B34  6E0F               	movwf	(??___xxtofl+2)^(0+1280),c
  1098   002B36  0EFE               	movlw	254
  1099   002B38  1416               	andwf	(___xxtofl@arg+3)^(0+1280),w,c
  1100   002B3A  6E10               	movwf	(??___xxtofl+3)^(0+1280),c
  1101   002B3C  500D               	movf	??___xxtofl^(0+1280),w,c
  1102   002B3E  100E               	iorwf	(??___xxtofl+1)^(0+1280),w,c
  1103   002B40  100F               	iorwf	(??___xxtofl+2)^(0+1280),w,c
  1104   002B42  1010               	iorwf	(??___xxtofl+3)^(0+1280),w,c
  1105   002B44  B4D8               	btfsc	status,2,c
  1106   002B46  D00D               	goto	l841
  1107   002B48  D7E7               	goto	l1902
  1108   002B4A                     l1906:
  1109   002B4A  2A12               	incf	___xxtofl@exp^(0+1280),f,c
  1110   002B4C  0E01               	movlw	1
  1111   002B4E  2613               	addwf	___xxtofl@arg^(0+1280),f,c
  1112   002B50  0E00               	movlw	0
  1113   002B52  2214               	addwfc	(___xxtofl@arg+1)^(0+1280),f,c
  1114   002B54  2215               	addwfc	(___xxtofl@arg+2)^(0+1280),f,c
  1115   002B56  2216               	addwfc	(___xxtofl@arg+3)^(0+1280),f,c
  1116   002B58  90D8               	bcf	status,0,c
  1117   002B5A  3216               	rrcf	(___xxtofl@arg+3)^(0+1280),f,c
  1118   002B5C  3215               	rrcf	(___xxtofl@arg+2)^(0+1280),f,c
  1119   002B5E  3214               	rrcf	(___xxtofl@arg+1)^(0+1280),f,c
  1120   002B60  3213               	rrcf	___xxtofl@arg^(0+1280),f,c
  1121   002B62                     l841:
  1122   002B62  0E00               	movlw	0
  1123   002B64  1413               	andwf	___xxtofl@arg^(0+1280),w,c
  1124   002B66  6E0D               	movwf	??___xxtofl^(0+1280),c
  1125   002B68  0E00               	movlw	0
  1126   002B6A  1414               	andwf	(___xxtofl@arg+1)^(0+1280),w,c
  1127   002B6C  6E0E               	movwf	(??___xxtofl+1)^(0+1280),c
  1128   002B6E  0E00               	movlw	0
  1129   002B70  1415               	andwf	(___xxtofl@arg+2)^(0+1280),w,c
  1130   002B72  6E0F               	movwf	(??___xxtofl+2)^(0+1280),c
  1131   002B74  0EFF               	movlw	255
  1132   002B76  1416               	andwf	(___xxtofl@arg+3)^(0+1280),w,c
  1133   002B78  6E10               	movwf	(??___xxtofl+3)^(0+1280),c
  1134   002B7A  500D               	movf	??___xxtofl^(0+1280),w,c
  1135   002B7C  100E               	iorwf	(??___xxtofl+1)^(0+1280),w,c
  1136   002B7E  100F               	iorwf	(??___xxtofl+2)^(0+1280),w,c
  1137   002B80  1010               	iorwf	(??___xxtofl+3)^(0+1280),w,c
  1138   002B82  B4D8               	btfsc	status,2,c
  1139   002B84  D007               	goto	l1914
  1140   002B86  D7E1               	goto	l1906
  1141   002B88                     l1912:
  1142   002B88  0612               	decf	___xxtofl@exp^(0+1280),f,c
  1143   002B8A  90D8               	bcf	status,0,c
  1144   002B8C  3613               	rlcf	___xxtofl@arg^(0+1280),f,c
  1145   002B8E  3614               	rlcf	(___xxtofl@arg+1)^(0+1280),f,c
  1146   002B90  3615               	rlcf	(___xxtofl@arg+2)^(0+1280),f,c
  1147   002B92  3616               	rlcf	(___xxtofl@arg+3)^(0+1280),f,c
  1148   002B94                     l1914:
  1149   002B94  BE15               	btfsc	(___xxtofl@arg+2)^(0+1280),7,c
  1150   002B96  D003               	goto	u1660
  1151   002B98  0E02               	movlw	2
  1152   002B9A  6012               	cpfslt	___xxtofl@exp^(0+1280),c
  1153   002B9C  D7F5               	goto	l1912
  1154   002B9E                     u1660:
  1155   002B9E  A012               	btfss	___xxtofl@exp^(0+1280),0,c
  1156   002BA0  9E15               	bcf	(___xxtofl@arg+2)^(0+1280),7,c
  1157   002BA2  90D8               	bcf	status,0,c
  1158   002BA4  3212               	rrcf	___xxtofl@exp^(0+1280),f,c
  1159   002BA6  C512  F50D         	movff	___xxtofl@exp,??___xxtofl
  1160   002BAA  6A0E               	clrf	(??___xxtofl+1)^(0+1280),c
  1161   002BAC  6A0F               	clrf	(??___xxtofl+2)^(0+1280),c
  1162   002BAE  6A10               	clrf	(??___xxtofl+3)^(0+1280),c
  1163   002BB0  C50D  F510         	movff	??___xxtofl,??___xxtofl+3
  1164   002BB4  6A0F               	clrf	(??___xxtofl+2)^(0+1280),c
  1165   002BB6  6A0E               	clrf	(??___xxtofl+1)^(0+1280),c
  1166   002BB8  6A0D               	clrf	??___xxtofl^(0+1280),c
  1167   002BBA  500D               	movf	??___xxtofl^(0+1280),w,c
  1168   002BBC  1213               	iorwf	___xxtofl@arg^(0+1280),f,c
  1169   002BBE  500E               	movf	(??___xxtofl+1)^(0+1280),w,c
  1170   002BC0  1214               	iorwf	(___xxtofl@arg+1)^(0+1280),f,c
  1171   002BC2  500F               	movf	(??___xxtofl+2)^(0+1280),w,c
  1172   002BC4  1215               	iorwf	(___xxtofl@arg+2)^(0+1280),f,c
  1173   002BC6  5010               	movf	(??___xxtofl+3)^(0+1280),w,c
  1174   002BC8  1216               	iorwf	(___xxtofl@arg+3)^(0+1280),f,c
  1175   002BCA  5011               	movf	___xxtofl@sign^(0+1280),w,c
  1176   002BCC  A4D8               	btfss	status,2,c
  1177   002BCE  AE0C               	btfss	(___xxtofl@val+3)^(0+1280),7,c
  1178   002BD0  D001               	goto	l1930
  1179   002BD2  8E16               	bsf	(___xxtofl@arg+3)^(0+1280),7,c
  1180   002BD4                     l1930:
  1181   002BD4  C513  F509         	movff	___xxtofl@arg,?___xxtofl
  1182   002BD8  C514  F50A         	movff	___xxtofl@arg+1,?___xxtofl+1
  1183   002BDC  C515  F50B         	movff	___xxtofl@arg+2,?___xxtofl+2
  1184   002BE0  C516  F50C         	movff	___xxtofl@arg+3,?___xxtofl+3
  1185   002BE4  0012               	return		;funcret
  1186   002BE6                     __end_of___xxtofl:
  1187                           	callstack 0
  1188                           
  1189 ;; *************** function ___fltol *****************
  1190 ;; Defined at:
  1191 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\fltol.c"
  1192 ;; Parameters:    Size  Location     Type
  1193 ;;  f1              4    8[COMRAM] unsigned char 
  1194 ;; Auto vars:     Size  Location     Type
  1195 ;;  exp1            1   17[COMRAM] unsigned char 
  1196 ;;  sign1           1   16[COMRAM] unsigned char 
  1197 ;; Return value:  Size  Location     Type
  1198 ;;                  4    8[COMRAM] long 
  1199 ;; Registers used:
  1200 ;;		wreg, status,2, status,0
  1201 ;; Tracked objects:
  1202 ;;		On entry : 0/3
  1203 ;;		On exit  : 0/0
  1204 ;;		Unchanged: 0/0
  1205 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1206 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1207 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1208 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1209 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1210 ;;Total ram usage:       10 bytes
  1211 ;; Hardware stack levels used: 1
  1212 ;; Hardware stack levels required when called: 1
  1213 ;; This function calls:
  1214 ;;		Nothing
  1215 ;; This function is called by:
  1216 ;;		_main
  1217 ;; This function uses a non-reentrant model
  1218 ;;
  1219                           
  1220                           	psect	text9
  1221   002CA2                     __ptext9:
  1222                           	callstack 0
  1223   002CA2                     ___fltol:
  1224                           	callstack 125
  1225                           
  1226                           ;incstack = 0
  1227   002CA2  340B               	rlcf	(___fltol@f1+2)^(0+1280),w,c
  1228   002CA4  340C               	rlcf	(___fltol@f1+3)^(0+1280),w,c
  1229   002CA6  6E12               	movwf	___fltol@exp1^(0+1280),c
  1230   002CA8  5012               	movf	___fltol@exp1^(0+1280),w,c
  1231   002CAA  A4D8               	btfss	status,2,c
  1232   002CAC  D009               	goto	l1850
  1233   002CAE                     u1530:
  1234   002CAE  0E00               	movlw	0
  1235   002CB0  6E09               	movwf	?___fltol^(0+1280),c
  1236   002CB2  0E00               	movlw	0
  1237   002CB4  6E0A               	movwf	(?___fltol+1)^(0+1280),c
  1238   002CB6  0E00               	movlw	0
  1239   002CB8  6E0B               	movwf	(?___fltol+2)^(0+1280),c
  1240   002CBA  0E00               	movlw	0
  1241   002CBC  6E0C               	movwf	(?___fltol+3)^(0+1280),c
  1242   002CBE  0012               	return	
  1243   002CC0                     l1850:
  1244   002CC0  C509  F50D         	movff	___fltol@f1,??___fltol
  1245   002CC4  C50A  F50E         	movff	___fltol@f1+1,??___fltol+1
  1246   002CC8  C50B  F50F         	movff	___fltol@f1+2,??___fltol+2
  1247   002CCC  C50C  F510         	movff	___fltol@f1+3,??___fltol+3
  1248   002CD0  0E20               	movlw	32
  1249   002CD2  D005               	goto	u1540
  1250   002CD4                     u1545:
  1251   002CD4  90D8               	bcf	status,0,c
  1252   002CD6  3210               	rrcf	(??___fltol+3)^(0+1280),f,c
  1253   002CD8  320F               	rrcf	(??___fltol+2)^(0+1280),f,c
  1254   002CDA  320E               	rrcf	(??___fltol+1)^(0+1280),f,c
  1255   002CDC  320D               	rrcf	??___fltol^(0+1280),f,c
  1256   002CDE                     u1540:
  1257   002CDE  2EE8               	decfsz	wreg,f,c
  1258   002CE0  D7F9               	goto	u1545
  1259   002CE2  500D               	movf	??___fltol^(0+1280),w,c
  1260   002CE4  6E11               	movwf	___fltol@sign1^(0+1280),c
  1261   002CE6  8E0B               	bsf	(___fltol@f1+2)^(0+1280),7,c
  1262   002CE8  0EFF               	movlw	255
  1263   002CEA  1609               	andwf	___fltol@f1^(0+1280),f,c
  1264   002CEC  0EFF               	movlw	255
  1265   002CEE  160A               	andwf	(___fltol@f1+1)^(0+1280),f,c
  1266   002CF0  0EFF               	movlw	255
  1267   002CF2  160B               	andwf	(___fltol@f1+2)^(0+1280),f,c
  1268   002CF4  0E00               	movlw	0
  1269   002CF6  160C               	andwf	(___fltol@f1+3)^(0+1280),f,c
  1270   002CF8  0E96               	movlw	150
  1271   002CFA  5E12               	subwf	___fltol@exp1^(0+1280),f,c
  1272   002CFC  AE12               	btfss	___fltol@exp1^(0+1280),7,c
  1273   002CFE  D00D               	goto	l1870
  1274   002D00  5012               	movf	___fltol@exp1^(0+1280),w,c
  1275   002D02  0A80               	xorlw	128
  1276   002D04  0F97               	addlw	151
  1277   002D06  A0D8               	btfss	status,0,c
  1278   002D08  D7D2               	goto	u1530
  1279   002D0A                     l1866:
  1280   002D0A  90D8               	bcf	status,0,c
  1281   002D0C  320C               	rrcf	(___fltol@f1+3)^(0+1280),f,c
  1282   002D0E  320B               	rrcf	(___fltol@f1+2)^(0+1280),f,c
  1283   002D10  320A               	rrcf	(___fltol@f1+1)^(0+1280),f,c
  1284   002D12  3209               	rrcf	___fltol@f1^(0+1280),f,c
  1285   002D14  3E12               	incfsz	___fltol@exp1^(0+1280),f,c
  1286   002D16  D7F9               	goto	l1866
  1287   002D18  D00D               	goto	u1580
  1288   002D1A                     l1870:
  1289   002D1A  0E1F               	movlw	31
  1290   002D1C  6412               	cpfsgt	___fltol@exp1^(0+1280),c
  1291   002D1E  D007               	goto	l1878
  1292   002D20  D7C6               	goto	u1530
  1293   002D22                     l1876:
  1294   002D22  90D8               	bcf	status,0,c
  1295   002D24  3609               	rlcf	___fltol@f1^(0+1280),f,c
  1296   002D26  360A               	rlcf	(___fltol@f1+1)^(0+1280),f,c
  1297   002D28  360B               	rlcf	(___fltol@f1+2)^(0+1280),f,c
  1298   002D2A  360C               	rlcf	(___fltol@f1+3)^(0+1280),f,c
  1299   002D2C  0612               	decf	___fltol@exp1^(0+1280),f,c
  1300   002D2E                     l1878:
  1301   002D2E  5012               	movf	___fltol@exp1^(0+1280),w,c
  1302   002D30  A4D8               	btfss	status,2,c
  1303   002D32  D7F7               	goto	l1876
  1304   002D34                     u1580:
  1305   002D34  5011               	movf	___fltol@sign1^(0+1280),w,c
  1306   002D36  B4D8               	btfsc	status,2,c
  1307   002D38  D008               	goto	l1884
  1308   002D3A  1E0C               	comf	(___fltol@f1+3)^(0+1280),f,c
  1309   002D3C  1E0B               	comf	(___fltol@f1+2)^(0+1280),f,c
  1310   002D3E  1E0A               	comf	(___fltol@f1+1)^(0+1280),f,c
  1311   002D40  6C09               	negf	___fltol@f1^(0+1280),c
  1312   002D42  0E00               	movlw	0
  1313   002D44  220A               	addwfc	(___fltol@f1+1)^(0+1280),f,c
  1314   002D46  220B               	addwfc	(___fltol@f1+2)^(0+1280),f,c
  1315   002D48  220C               	addwfc	(___fltol@f1+3)^(0+1280),f,c
  1316   002D4A                     l1884:
  1317   002D4A  C509  F509         	movff	___fltol@f1,?___fltol
  1318   002D4E  C50A  F50A         	movff	___fltol@f1+1,?___fltol+1
  1319   002D52  C50B  F50B         	movff	___fltol@f1+2,?___fltol+2
  1320   002D56  C50C  F50C         	movff	___fltol@f1+3,?___fltol+3
  1321   002D5A  0012               	return		;funcret
  1322   002D5C                     __end_of___fltol:
  1323                           	callstack 0
  1324                           
  1325 ;; *************** function ___fldiv *****************
  1326 ;; Defined at:
  1327 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcdiv.c"
  1328 ;; Parameters:    Size  Location     Type
  1329 ;;  b               4   22[COMRAM] long 
  1330 ;;  a               4   26[COMRAM] long 
  1331 ;; Auto vars:     Size  Location     Type
  1332 ;;  grs             4   41[COMRAM] unsigned long 
  1333 ;;  rem             4   34[COMRAM] unsigned long 
  1334 ;;  new_exp         2   39[COMRAM] short 
  1335 ;;  aexp            1   46[COMRAM] unsigned char 
  1336 ;;  bexp            1   45[COMRAM] unsigned char 
  1337 ;;  sign            1   38[COMRAM] unsigned char 
  1338 ;; Return value:  Size  Location     Type
  1339 ;;                  4   22[COMRAM] unsigned char 
  1340 ;; Registers used:
  1341 ;;		wreg, status,2, status,0
  1342 ;; Tracked objects:
  1343 ;;		On entry : 0/3
  1344 ;;		On exit  : 0/0
  1345 ;;		Unchanged: 0/0
  1346 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1347 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1348 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1349 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1350 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1351 ;;Total ram usage:       25 bytes
  1352 ;; Hardware stack levels used: 1
  1353 ;; Hardware stack levels required when called: 1
  1354 ;; This function calls:
  1355 ;;		Nothing
  1356 ;; This function is called by:
  1357 ;;		_main
  1358 ;; This function uses a non-reentrant model
  1359 ;;
  1360                           
  1361                           	psect	text10
  1362   00281E                     __ptext10:
  1363                           	callstack 0
  1364   00281E                     ___fldiv:
  1365                           	callstack 125
  1366                           
  1367                           ;incstack = 0
  1368   00281E  501A               	movf	(___fldiv@b+3)^(0+1280),w,c
  1369   002820  0B80               	andlw	128
  1370   002822  6E27               	movwf	___fldiv@sign^(0+1280),c
  1371   002824  501A               	movf	(___fldiv@b+3)^(0+1280),w,c
  1372   002826  241A               	addwf	(___fldiv@b+3)^(0+1280),w,c
  1373   002828  6E2E               	movwf	___fldiv@bexp^(0+1280),c
  1374   00282A  BE19               	btfsc	(___fldiv@b+2)^(0+1280),7,c
  1375   00282C  802E               	bsf	___fldiv@bexp^(0+1280),0,c
  1376   00282E  502E               	movf	___fldiv@bexp^(0+1280),w,c
  1377   002830  B4D8               	btfsc	status,2,c
  1378   002832  D00D               	goto	l1722
  1379   002834  282E               	incf	___fldiv@bexp^(0+1280),w,c
  1380   002836  A4D8               	btfss	status,2,c
  1381   002838  D008               	goto	l1718
  1382   00283A  0E00               	movlw	0
  1383   00283C  6E17               	movwf	___fldiv@b^(0+1280),c
  1384   00283E  0E00               	movlw	0
  1385   002840  6E18               	movwf	(___fldiv@b+1)^(0+1280),c
  1386   002842  0E00               	movlw	0
  1387   002844  6E19               	movwf	(___fldiv@b+2)^(0+1280),c
  1388   002846  0E00               	movlw	0
  1389   002848  6E1A               	movwf	(___fldiv@b+3)^(0+1280),c
  1390   00284A                     l1718:
  1391   00284A  8E19               	bsf	(___fldiv@b+2)^(0+1280),7,c
  1392   00284C  D006               	goto	L1
  1393   00284E                     l1722:
  1394   00284E  0E00               	movlw	0
  1395   002850  6E17               	movwf	___fldiv@b^(0+1280),c
  1396   002852  0E00               	movlw	0
  1397   002854  6E18               	movwf	(___fldiv@b+1)^(0+1280),c
  1398   002856  0E00               	movlw	0
  1399   002858  6E19               	movwf	(___fldiv@b+2)^(0+1280),c
  1400   00285A                     L1:
  1401   00285A  0E00               	movlw	0
  1402   00285C  6E1A               	movwf	(___fldiv@b+3)^(0+1280),c
  1403   00285E  501E               	movf	(___fldiv@a+3)^(0+1280),w,c
  1404   002860  0B80               	andlw	128
  1405   002862  1A27               	xorwf	___fldiv@sign^(0+1280),f,c
  1406   002864  501E               	movf	(___fldiv@a+3)^(0+1280),w,c
  1407   002866  241E               	addwf	(___fldiv@a+3)^(0+1280),w,c
  1408   002868  6E2F               	movwf	___fldiv@aexp^(0+1280),c
  1409   00286A  BE1D               	btfsc	(___fldiv@a+2)^(0+1280),7,c
  1410   00286C  802F               	bsf	___fldiv@aexp^(0+1280),0,c
  1411   00286E  502F               	movf	___fldiv@aexp^(0+1280),w,c
  1412   002870  B4D8               	btfsc	status,2,c
  1413   002872  D00D               	goto	l1742
  1414   002874  282F               	incf	___fldiv@aexp^(0+1280),w,c
  1415   002876  A4D8               	btfss	status,2,c
  1416   002878  D008               	goto	l1738
  1417   00287A  0E00               	movlw	0
  1418   00287C  6E1B               	movwf	___fldiv@a^(0+1280),c
  1419   00287E  0E00               	movlw	0
  1420   002880  6E1C               	movwf	(___fldiv@a+1)^(0+1280),c
  1421   002882  0E00               	movlw	0
  1422   002884  6E1D               	movwf	(___fldiv@a+2)^(0+1280),c
  1423   002886  0E00               	movlw	0
  1424   002888  6E1E               	movwf	(___fldiv@a+3)^(0+1280),c
  1425   00288A                     l1738:
  1426   00288A  8E1D               	bsf	(___fldiv@a+2)^(0+1280),7,c
  1427   00288C  D006               	goto	L2
  1428   00288E                     l1742:
  1429   00288E  0E00               	movlw	0
  1430   002890  6E1B               	movwf	___fldiv@a^(0+1280),c
  1431   002892  0E00               	movlw	0
  1432   002894  6E1C               	movwf	(___fldiv@a+1)^(0+1280),c
  1433   002896  0E00               	movlw	0
  1434   002898  6E1D               	movwf	(___fldiv@a+2)^(0+1280),c
  1435   00289A                     L2:
  1436   00289A  0E00               	movlw	0
  1437   00289C  6E1E               	movwf	(___fldiv@a+3)^(0+1280),c
  1438   00289E  501B               	movf	___fldiv@a^(0+1280),w,c
  1439   0028A0  101C               	iorwf	(___fldiv@a+1)^(0+1280),w,c
  1440   0028A2  101D               	iorwf	(___fldiv@a+2)^(0+1280),w,c
  1441   0028A4  101E               	iorwf	(___fldiv@a+3)^(0+1280),w,c
  1442   0028A6  A4D8               	btfss	status,2,c
  1443   0028A8  D017               	goto	l1756
  1444   0028AA  0E00               	movlw	0
  1445   0028AC  6E17               	movwf	___fldiv@b^(0+1280),c
  1446   0028AE  0E00               	movlw	0
  1447   0028B0  6E18               	movwf	(___fldiv@b+1)^(0+1280),c
  1448   0028B2  0E00               	movlw	0
  1449   0028B4  6E19               	movwf	(___fldiv@b+2)^(0+1280),c
  1450   0028B6  0E00               	movlw	0
  1451   0028B8  6E1A               	movwf	(___fldiv@b+3)^(0+1280),c
  1452   0028BA  0E80               	movlw	128
  1453   0028BC  1219               	iorwf	(___fldiv@b+2)^(0+1280),f,c
  1454   0028BE  0E7F               	movlw	127
  1455   0028C0  121A               	iorwf	(___fldiv@b+3)^(0+1280),f,c
  1456   0028C2                     l1750:
  1457   0028C2  5027               	movf	___fldiv@sign^(0+1280),w,c
  1458   0028C4  121A               	iorwf	(___fldiv@b+3)^(0+1280),f,c
  1459   0028C6  C517  F517         	movff	___fldiv@b,?___fldiv
  1460   0028CA  C518  F518         	movff	___fldiv@b+1,?___fldiv+1
  1461   0028CE  C519  F519         	movff	___fldiv@b+2,?___fldiv+2
  1462   0028D2  C51A  F51A         	movff	___fldiv@b+3,?___fldiv+3
  1463   0028D6  0012               	return	
  1464   0028D8                     l1756:
  1465   0028D8  502E               	movf	___fldiv@bexp^(0+1280),w,c
  1466   0028DA  A4D8               	btfss	status,2,c
  1467   0028DC  D009               	goto	l1764
  1468   0028DE  0E00               	movlw	0
  1469   0028E0  6E17               	movwf	?___fldiv^(0+1280),c
  1470   0028E2  0E00               	movlw	0
  1471   0028E4  6E18               	movwf	(?___fldiv+1)^(0+1280),c
  1472   0028E6  0E00               	movlw	0
  1473   0028E8  6E19               	movwf	(?___fldiv+2)^(0+1280),c
  1474   0028EA  0E00               	movlw	0
  1475   0028EC  6E1A               	movwf	(?___fldiv+3)^(0+1280),c
  1476   0028EE  0012               	return	
  1477   0028F0                     l1764:
  1478   0028F0  502F               	movf	___fldiv@aexp^(0+1280),w,c
  1479   0028F2  C52E  F51F         	movff	___fldiv@bexp,??___fldiv
  1480   0028F6  6A20               	clrf	(??___fldiv+1)^(0+1280),c
  1481   0028F8  5E1F               	subwf	??___fldiv^(0+1280),f,c
  1482   0028FA  0E00               	movlw	0
  1483   0028FC  5A20               	subwfb	(??___fldiv+1)^(0+1280),f,c
  1484   0028FE  0E7F               	movlw	127
  1485   002900  241F               	addwf	??___fldiv^(0+1280),w,c
  1486   002902  6E28               	movwf	___fldiv@new_exp^(0+1280),c
  1487   002904  0E00               	movlw	0
  1488   002906  2020               	addwfc	(??___fldiv+1)^(0+1280),w,c
  1489   002908  6E29               	movwf	(___fldiv@new_exp+1)^(0+1280),c
  1490   00290A  C517  F523         	movff	___fldiv@b,___fldiv@rem
  1491   00290E  C518  F524         	movff	___fldiv@b+1,___fldiv@rem+1
  1492   002912  C519  F525         	movff	___fldiv@b+2,___fldiv@rem+2
  1493   002916  C51A  F526         	movff	___fldiv@b+3,___fldiv@rem+3
  1494   00291A  0E00               	movlw	0
  1495   00291C  6E17               	movwf	___fldiv@b^(0+1280),c
  1496   00291E  0E00               	movlw	0
  1497   002920  6E18               	movwf	(___fldiv@b+1)^(0+1280),c
  1498   002922  0E00               	movlw	0
  1499   002924  6E19               	movwf	(___fldiv@b+2)^(0+1280),c
  1500   002926  0E00               	movlw	0
  1501   002928  6E1A               	movwf	(___fldiv@b+3)^(0+1280),c
  1502   00292A  0E00               	movlw	0
  1503   00292C  6E2A               	movwf	___fldiv@grs^(0+1280),c
  1504   00292E  0E00               	movlw	0
  1505   002930  6E2B               	movwf	(___fldiv@grs+1)^(0+1280),c
  1506   002932  0E00               	movlw	0
  1507   002934  6E2C               	movwf	(___fldiv@grs+2)^(0+1280),c
  1508   002936  0E00               	movlw	0
  1509   002938  6E2D               	movwf	(___fldiv@grs+3)^(0+1280),c
  1510   00293A  0E00               	movlw	0
  1511   00293C  6E2F               	movwf	___fldiv@aexp^(0+1280),c
  1512   00293E  D028               	goto	l763
  1513   002940                     l1774:
  1514   002940  502F               	movf	___fldiv@aexp^(0+1280),w,c
  1515   002942  B4D8               	btfsc	status,2,c
  1516   002944  D011               	goto	l1782
  1517   002946  90D8               	bcf	status,0,c
  1518   002948  3623               	rlcf	___fldiv@rem^(0+1280),f,c
  1519   00294A  3624               	rlcf	(___fldiv@rem+1)^(0+1280),f,c
  1520   00294C  3625               	rlcf	(___fldiv@rem+2)^(0+1280),f,c
  1521   00294E  3626               	rlcf	(___fldiv@rem+3)^(0+1280),f,c
  1522   002950  90D8               	bcf	status,0,c
  1523   002952  3617               	rlcf	___fldiv@b^(0+1280),f,c
  1524   002954  3618               	rlcf	(___fldiv@b+1)^(0+1280),f,c
  1525   002956  3619               	rlcf	(___fldiv@b+2)^(0+1280),f,c
  1526   002958  361A               	rlcf	(___fldiv@b+3)^(0+1280),f,c
  1527   00295A  BE2D               	btfsc	(___fldiv@grs+3)^(0+1280),7,c
  1528   00295C  8017               	bsf	___fldiv@b^(0+1280),0,c
  1529   00295E  90D8               	bcf	status,0,c
  1530   002960  362A               	rlcf	___fldiv@grs^(0+1280),f,c
  1531   002962  362B               	rlcf	(___fldiv@grs+1)^(0+1280),f,c
  1532   002964  362C               	rlcf	(___fldiv@grs+2)^(0+1280),f,c
  1533   002966  362D               	rlcf	(___fldiv@grs+3)^(0+1280),f,c
  1534   002968                     l1782:
  1535   002968  501B               	movf	___fldiv@a^(0+1280),w,c
  1536   00296A  5C23               	subwf	___fldiv@rem^(0+1280),w,c
  1537   00296C  501C               	movf	(___fldiv@a+1)^(0+1280),w,c
  1538   00296E  5824               	subwfb	(___fldiv@rem+1)^(0+1280),w,c
  1539   002970  501D               	movf	(___fldiv@a+2)^(0+1280),w,c
  1540   002972  5825               	subwfb	(___fldiv@rem+2)^(0+1280),w,c
  1541   002974  501E               	movf	(___fldiv@a+3)^(0+1280),w,c
  1542   002976  5826               	subwfb	(___fldiv@rem+3)^(0+1280),w,c
  1543   002978  A0D8               	btfss	status,0,c
  1544   00297A  D009               	goto	l1788
  1545   00297C  8C2D               	bsf	(___fldiv@grs+3)^(0+1280),6,c
  1546   00297E  501B               	movf	___fldiv@a^(0+1280),w,c
  1547   002980  5E23               	subwf	___fldiv@rem^(0+1280),f,c
  1548   002982  501C               	movf	(___fldiv@a+1)^(0+1280),w,c
  1549   002984  5A24               	subwfb	(___fldiv@rem+1)^(0+1280),f,c
  1550   002986  501D               	movf	(___fldiv@a+2)^(0+1280),w,c
  1551   002988  5A25               	subwfb	(___fldiv@rem+2)^(0+1280),f,c
  1552   00298A  501E               	movf	(___fldiv@a+3)^(0+1280),w,c
  1553   00298C  5A26               	subwfb	(___fldiv@rem+3)^(0+1280),f,c
  1554   00298E                     l1788:
  1555   00298E  2A2F               	incf	___fldiv@aexp^(0+1280),f,c
  1556   002990                     l763:
  1557   002990  0E19               	movlw	25
  1558   002992  642F               	cpfsgt	___fldiv@aexp^(0+1280),c
  1559   002994  D7D5               	goto	l1774
  1560   002996  5023               	movf	___fldiv@rem^(0+1280),w,c
  1561   002998  1024               	iorwf	(___fldiv@rem+1)^(0+1280),w,c
  1562   00299A  1025               	iorwf	(___fldiv@rem+2)^(0+1280),w,c
  1563   00299C  1026               	iorwf	(___fldiv@rem+3)^(0+1280),w,c
  1564   00299E  B4D8               	btfsc	status,2,c
  1565   0029A0  D011               	goto	l1800
  1566   0029A2  802A               	bsf	___fldiv@grs^(0+1280),0,c
  1567   0029A4  D00F               	goto	l1800
  1568   0029A6                     l1794:
  1569   0029A6  90D8               	bcf	status,0,c
  1570   0029A8  3617               	rlcf	___fldiv@b^(0+1280),f,c
  1571   0029AA  3618               	rlcf	(___fldiv@b+1)^(0+1280),f,c
  1572   0029AC  3619               	rlcf	(___fldiv@b+2)^(0+1280),f,c
  1573   0029AE  361A               	rlcf	(___fldiv@b+3)^(0+1280),f,c
  1574   0029B0  BE2D               	btfsc	(___fldiv@grs+3)^(0+1280),7,c
  1575   0029B2  8017               	bsf	___fldiv@b^(0+1280),0,c
  1576   0029B4  90D8               	bcf	status,0,c
  1577   0029B6  362A               	rlcf	___fldiv@grs^(0+1280),f,c
  1578   0029B8  362B               	rlcf	(___fldiv@grs+1)^(0+1280),f,c
  1579   0029BA  362C               	rlcf	(___fldiv@grs+2)^(0+1280),f,c
  1580   0029BC  362D               	rlcf	(___fldiv@grs+3)^(0+1280),f,c
  1581   0029BE  0628               	decf	___fldiv@new_exp^(0+1280),f,c
  1582   0029C0  A0D8               	btfss	status,0,c
  1583   0029C2  0629               	decf	(___fldiv@new_exp+1)^(0+1280),f,c
  1584   0029C4                     l1800:
  1585   0029C4  AE19               	btfss	(___fldiv@b+2)^(0+1280),7,c
  1586   0029C6  D7EF               	goto	l1794
  1587   0029C8  0E00               	movlw	0
  1588   0029CA  6E2F               	movwf	___fldiv@aexp^(0+1280),c
  1589   0029CC  AE2D               	btfss	(___fldiv@grs+3)^(0+1280),7,c
  1590   0029CE  D017               	goto	l774
  1591   0029D0  0EFF               	movlw	255
  1592   0029D2  142A               	andwf	___fldiv@grs^(0+1280),w,c
  1593   0029D4  6E1F               	movwf	??___fldiv^(0+1280),c
  1594   0029D6  0EFF               	movlw	255
  1595   0029D8  142B               	andwf	(___fldiv@grs+1)^(0+1280),w,c
  1596   0029DA  6E20               	movwf	(??___fldiv+1)^(0+1280),c
  1597   0029DC  0EFF               	movlw	255
  1598   0029DE  142C               	andwf	(___fldiv@grs+2)^(0+1280),w,c
  1599   0029E0  6E21               	movwf	(??___fldiv+2)^(0+1280),c
  1600   0029E2  0E7F               	movlw	127
  1601   0029E4  142D               	andwf	(___fldiv@grs+3)^(0+1280),w,c
  1602   0029E6  6E22               	movwf	(??___fldiv+3)^(0+1280),c
  1603   0029E8  501F               	movf	??___fldiv^(0+1280),w,c
  1604   0029EA  1020               	iorwf	(??___fldiv+1)^(0+1280),w,c
  1605   0029EC  1021               	iorwf	(??___fldiv+2)^(0+1280),w,c
  1606   0029EE  1022               	iorwf	(??___fldiv+3)^(0+1280),w,c
  1607   0029F0  B4D8               	btfsc	status,2,c
  1608   0029F2  D003               	goto	l775
  1609   0029F4                     u1460:
  1610   0029F4  0E01               	movlw	1
  1611   0029F6  6E2F               	movwf	___fldiv@aexp^(0+1280),c
  1612   0029F8  D002               	goto	l774
  1613   0029FA                     l775:
  1614   0029FA  B017               	btfsc	___fldiv@b^(0+1280),0,c
  1615   0029FC  D7FB               	goto	u1460
  1616   0029FE                     l774:
  1617   0029FE  502F               	movf	___fldiv@aexp^(0+1280),w,c
  1618   002A00  B4D8               	btfsc	status,2,c
  1619   002A02  D01F               	goto	l1820
  1620   002A04  0E01               	movlw	1
  1621   002A06  2617               	addwf	___fldiv@b^(0+1280),f,c
  1622   002A08  0E00               	movlw	0
  1623   002A0A  2218               	addwfc	(___fldiv@b+1)^(0+1280),f,c
  1624   002A0C  2219               	addwfc	(___fldiv@b+2)^(0+1280),f,c
  1625   002A0E  221A               	addwfc	(___fldiv@b+3)^(0+1280),f,c
  1626   002A10  A01A               	btfss	(___fldiv@b+3)^(0+1280),0,c
  1627   002A12  D017               	goto	l1820
  1628   002A14  C517  F51F         	movff	___fldiv@b,??___fldiv
  1629   002A18  C518  F520         	movff	___fldiv@b+1,??___fldiv+1
  1630   002A1C  C519  F521         	movff	___fldiv@b+2,??___fldiv+2
  1631   002A20  C51A  F522         	movff	___fldiv@b+3,??___fldiv+3
  1632   002A24  3422               	rlcf	(??___fldiv+3)^(0+1280),w,c
  1633   002A26  3222               	rrcf	(??___fldiv+3)^(0+1280),f,c
  1634   002A28  3221               	rrcf	(??___fldiv+2)^(0+1280),f,c
  1635   002A2A  3220               	rrcf	(??___fldiv+1)^(0+1280),f,c
  1636   002A2C  321F               	rrcf	??___fldiv^(0+1280),f,c
  1637   002A2E  C51F  F517         	movff	??___fldiv,___fldiv@b
  1638   002A32  C520  F518         	movff	??___fldiv+1,___fldiv@b+1
  1639   002A36  C521  F519         	movff	??___fldiv+2,___fldiv@b+2
  1640   002A3A  C522  F51A         	movff	??___fldiv+3,___fldiv@b+3
  1641   002A3E  4A28               	infsnz	___fldiv@new_exp^(0+1280),f,c
  1642   002A40  2A29               	incf	(___fldiv@new_exp+1)^(0+1280),f,c
  1643   002A42                     l1820:
  1644   002A42  BE29               	btfsc	(___fldiv@new_exp+1)^(0+1280),7,c
  1645   002A44  D010               	goto	l1824
  1646   002A46  5029               	movf	(___fldiv@new_exp+1)^(0+1280),w,c
  1647   002A48  E103               	bnz	u1500
  1648   002A4A  2828               	incf	___fldiv@new_exp^(0+1280),w,c
  1649   002A4C  A0D8               	btfss	status,0,c
  1650   002A4E  D00B               	goto	l1824
  1651   002A50                     u1500:
  1652   002A50  0E00               	movlw	0
  1653   002A52  6E29               	movwf	(___fldiv@new_exp+1)^(0+1280),c
  1654   002A54  6828               	setf	___fldiv@new_exp^(0+1280),c
  1655   002A56  0E00               	movlw	0
  1656   002A58  6E17               	movwf	___fldiv@b^(0+1280),c
  1657   002A5A  0E00               	movlw	0
  1658   002A5C  6E18               	movwf	(___fldiv@b+1)^(0+1280),c
  1659   002A5E  0E00               	movlw	0
  1660   002A60  6E19               	movwf	(___fldiv@b+2)^(0+1280),c
  1661   002A62  0E00               	movlw	0
  1662   002A64  6E1A               	movwf	(___fldiv@b+3)^(0+1280),c
  1663   002A66                     l1824:
  1664   002A66  BE29               	btfsc	(___fldiv@new_exp+1)^(0+1280),7,c
  1665   002A68  D005               	goto	u1510
  1666   002A6A  5029               	movf	(___fldiv@new_exp+1)^(0+1280),w,c
  1667   002A6C  E111               	bnz	l1828
  1668   002A6E  0428               	decf	___fldiv@new_exp^(0+1280),w,c
  1669   002A70  B0D8               	btfsc	status,0,c
  1670   002A72  D00E               	goto	l1828
  1671   002A74                     u1510:
  1672   002A74  0E00               	movlw	0
  1673   002A76  6E29               	movwf	(___fldiv@new_exp+1)^(0+1280),c
  1674   002A78  0E00               	movlw	0
  1675   002A7A  6E28               	movwf	___fldiv@new_exp^(0+1280),c
  1676   002A7C  0E00               	movlw	0
  1677   002A7E  6E17               	movwf	___fldiv@b^(0+1280),c
  1678   002A80  0E00               	movlw	0
  1679   002A82  6E18               	movwf	(___fldiv@b+1)^(0+1280),c
  1680   002A84  0E00               	movlw	0
  1681   002A86  6E19               	movwf	(___fldiv@b+2)^(0+1280),c
  1682   002A88  0E00               	movlw	0
  1683   002A8A  6E1A               	movwf	(___fldiv@b+3)^(0+1280),c
  1684   002A8C  0E00               	movlw	0
  1685   002A8E  6E27               	movwf	___fldiv@sign^(0+1280),c
  1686   002A90                     l1828:
  1687   002A90  C528  F52E         	movff	___fldiv@new_exp,___fldiv@bexp
  1688   002A94  A02E               	btfss	___fldiv@bexp^(0+1280),0,c
  1689   002A96  D002               	goto	l1834
  1690   002A98  8E19               	bsf	(___fldiv@b+2)^(0+1280),7,c
  1691   002A9A  D001               	goto	l1836
  1692   002A9C                     l1834:
  1693   002A9C  9E19               	bcf	(___fldiv@b+2)^(0+1280),7,c
  1694   002A9E                     l1836:
  1695   002A9E  90D8               	bcf	status,0,c
  1696   002AA0  302E               	rrcf	___fldiv@bexp^(0+1280),w,c
  1697   002AA2  6E1A               	movwf	(___fldiv@b+3)^(0+1280),c
  1698   002AA4  D70E               	goto	l1750
  1699   002AA6                     __end_of___fldiv:
  1700                           	callstack 0
  1701                           
  1702 ;; *************** function ___fladd *****************
  1703 ;; Defined at:
  1704 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcadd.c"
  1705 ;; Parameters:    Size  Location     Type
  1706 ;;  b               4   47[COMRAM] unsigned char 
  1707 ;;  a               4   51[COMRAM] unsigned char 
  1708 ;; Auto vars:     Size  Location     Type
  1709 ;;  grs             1   62[COMRAM] unsigned char 
  1710 ;;  bexp            1   61[COMRAM] unsigned char 
  1711 ;;  aexp            1   60[COMRAM] unsigned char 
  1712 ;;  signs           1   59[COMRAM] unsigned char 
  1713 ;; Return value:  Size  Location     Type
  1714 ;;                  4   47[COMRAM] unsigned char 
  1715 ;; Registers used:
  1716 ;;		wreg, status,2, status,0
  1717 ;; Tracked objects:
  1718 ;;		On entry : 0/3
  1719 ;;		On exit  : 0/0
  1720 ;;		Unchanged: 0/0
  1721 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1722 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1723 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1724 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1725 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1726 ;;Total ram usage:       16 bytes
  1727 ;; Hardware stack levels used: 1
  1728 ;; Hardware stack levels required when called: 1
  1729 ;; This function calls:
  1730 ;;		Nothing
  1731 ;; This function is called by:
  1732 ;;		_main
  1733 ;; This function uses a non-reentrant model
  1734 ;;
  1735                           
  1736                           	psect	text11
  1737   002512                     __ptext11:
  1738                           	callstack 0
  1739   002512                     ___fladd:
  1740                           	callstack 125
  1741                           
  1742                           ;incstack = 0
  1743   002512  5033               	movf	(___fladd@b+3)^(0+1280),w,c
  1744   002514  0B80               	andlw	128
  1745   002516  6E3C               	movwf	___fladd@signs^(0+1280),c
  1746   002518  5033               	movf	(___fladd@b+3)^(0+1280),w,c
  1747   00251A  2433               	addwf	(___fladd@b+3)^(0+1280),w,c
  1748   00251C  6E3E               	movwf	___fladd@bexp^(0+1280),c
  1749   00251E  BE32               	btfsc	(___fladd@b+2)^(0+1280),7,c
  1750   002520  803E               	bsf	___fladd@bexp^(0+1280),0,c
  1751   002522  503E               	movf	___fladd@bexp^(0+1280),w,c
  1752   002524  B4D8               	btfsc	status,2,c
  1753   002526  D00D               	goto	l1520
  1754   002528  283E               	incf	___fladd@bexp^(0+1280),w,c
  1755   00252A  A4D8               	btfss	status,2,c
  1756   00252C  D008               	goto	l1516
  1757   00252E  0E00               	movlw	0
  1758   002530  6E30               	movwf	___fladd@b^(0+1280),c
  1759   002532  0E00               	movlw	0
  1760   002534  6E31               	movwf	(___fladd@b+1)^(0+1280),c
  1761   002536  0E00               	movlw	0
  1762   002538  6E32               	movwf	(___fladd@b+2)^(0+1280),c
  1763   00253A  0E00               	movlw	0
  1764   00253C  6E33               	movwf	(___fladd@b+3)^(0+1280),c
  1765   00253E                     l1516:
  1766   00253E  8E32               	bsf	(___fladd@b+2)^(0+1280),7,c
  1767   002540  D006               	goto	L3
  1768   002542                     l1520:
  1769   002542  0E00               	movlw	0
  1770   002544  6E30               	movwf	___fladd@b^(0+1280),c
  1771   002546  0E00               	movlw	0
  1772   002548  6E31               	movwf	(___fladd@b+1)^(0+1280),c
  1773   00254A  0E00               	movlw	0
  1774   00254C  6E32               	movwf	(___fladd@b+2)^(0+1280),c
  1775   00254E                     L3:
  1776   00254E  0E00               	movlw	0
  1777   002550  6E33               	movwf	(___fladd@b+3)^(0+1280),c
  1778   002552  5037               	movf	(___fladd@a+3)^(0+1280),w,c
  1779   002554  0B80               	andlw	128
  1780   002556  6E3D               	movwf	___fladd@aexp^(0+1280),c
  1781   002558  503C               	movf	___fladd@signs^(0+1280),w,c
  1782   00255A  183D               	xorwf	___fladd@aexp^(0+1280),w,c
  1783   00255C  A4D8               	btfss	status,2,c
  1784   00255E  8C3C               	bsf	___fladd@signs^(0+1280),6,c
  1785   002560  5037               	movf	(___fladd@a+3)^(0+1280),w,c
  1786   002562  2437               	addwf	(___fladd@a+3)^(0+1280),w,c
  1787   002564  6E3D               	movwf	___fladd@aexp^(0+1280),c
  1788   002566  BE36               	btfsc	(___fladd@a+2)^(0+1280),7,c
  1789   002568  803D               	bsf	___fladd@aexp^(0+1280),0,c
  1790   00256A  503D               	movf	___fladd@aexp^(0+1280),w,c
  1791   00256C  B4D8               	btfsc	status,2,c
  1792   00256E  D00D               	goto	l1544
  1793   002570  283D               	incf	___fladd@aexp^(0+1280),w,c
  1794   002572  A4D8               	btfss	status,2,c
  1795   002574  D008               	goto	l1540
  1796   002576  0E00               	movlw	0
  1797   002578  6E34               	movwf	___fladd@a^(0+1280),c
  1798   00257A  0E00               	movlw	0
  1799   00257C  6E35               	movwf	(___fladd@a+1)^(0+1280),c
  1800   00257E  0E00               	movlw	0
  1801   002580  6E36               	movwf	(___fladd@a+2)^(0+1280),c
  1802   002582  0E00               	movlw	0
  1803   002584  6E37               	movwf	(___fladd@a+3)^(0+1280),c
  1804   002586                     l1540:
  1805   002586  8E36               	bsf	(___fladd@a+2)^(0+1280),7,c
  1806   002588  D006               	goto	L4
  1807   00258A                     l1544:
  1808   00258A  0E00               	movlw	0
  1809   00258C  6E34               	movwf	___fladd@a^(0+1280),c
  1810   00258E  0E00               	movlw	0
  1811   002590  6E35               	movwf	(___fladd@a+1)^(0+1280),c
  1812   002592  0E00               	movlw	0
  1813   002594  6E36               	movwf	(___fladd@a+2)^(0+1280),c
  1814   002596                     L4:
  1815   002596  0E00               	movlw	0
  1816   002598  6E37               	movwf	(___fladd@a+3)^(0+1280),c
  1817   00259A  503E               	movf	___fladd@bexp^(0+1280),w,c
  1818   00259C  5C3D               	subwf	___fladd@aexp^(0+1280),w,c
  1819   00259E  B0D8               	btfsc	status,0,c
  1820   0025A0  D022               	goto	l1582
  1821   0025A2  AC3C               	btfss	___fladd@signs^(0+1280),6,c
  1822   0025A4  D002               	goto	l1552
  1823   0025A6  0E80               	movlw	128
  1824   0025A8  1A3C               	xorwf	___fladd@signs^(0+1280),f,c
  1825   0025AA                     l1552:
  1826   0025AA  C53E  F53F         	movff	___fladd@bexp,___fladd@grs
  1827   0025AE  C53D  F53E         	movff	___fladd@aexp,___fladd@bexp
  1828   0025B2  C53F  F53D         	movff	___fladd@grs,___fladd@aexp
  1829   0025B6  C530  F53F         	movff	___fladd@b,___fladd@grs
  1830   0025BA  C534  F530         	movff	___fladd@a,___fladd@b
  1831   0025BE  C53F  F534         	movff	___fladd@grs,___fladd@a
  1832   0025C2  C531  F53F         	movff	___fladd@b+1,___fladd@grs
  1833   0025C6  C535  F531         	movff	___fladd@a+1,___fladd@b+1
  1834   0025CA  C53F  F535         	movff	___fladd@grs,___fladd@a+1
  1835   0025CE  C532  F53F         	movff	___fladd@b+2,___fladd@grs
  1836   0025D2  C536  F532         	movff	___fladd@a+2,___fladd@b+2
  1837   0025D6  C53F  F536         	movff	___fladd@grs,___fladd@a+2
  1838   0025DA  C533  F53F         	movff	___fladd@b+3,___fladd@grs
  1839   0025DE  C537  F533         	movff	___fladd@a+3,___fladd@b+3
  1840   0025E2  C53F  F537         	movff	___fladd@grs,___fladd@a+3
  1841   0025E6                     l1582:
  1842   0025E6  0E00               	movlw	0
  1843   0025E8  6E3F               	movwf	___fladd@grs^(0+1280),c
  1844   0025EA  503E               	movf	___fladd@bexp^(0+1280),w,c
  1845   0025EC  C53D  F538         	movff	___fladd@aexp,??___fladd
  1846   0025F0  6A39               	clrf	(??___fladd+1)^(0+1280),c
  1847   0025F2  5E38               	subwf	??___fladd^(0+1280),f,c
  1848   0025F4  0E00               	movlw	0
  1849   0025F6  5A39               	subwfb	(??___fladd+1)^(0+1280),f,c
  1850   0025F8  BE39               	btfsc	(??___fladd+1)^(0+1280),7,c
  1851   0025FA  D02C               	goto	l708
  1852   0025FC  5039               	movf	(??___fladd+1)^(0+1280),w,c
  1853   0025FE  E104               	bnz	u1000
  1854   002600  0E1A               	movlw	26
  1855   002602  5C38               	subwf	??___fladd^(0+1280),w,c
  1856   002604  A0D8               	btfss	status,0,c
  1857   002606  D026               	goto	l708
  1858   002608                     u1000:
  1859   002608  5030               	movf	___fladd@b^(0+1280),w,c
  1860   00260A  1031               	iorwf	(___fladd@b+1)^(0+1280),w,c
  1861   00260C  1032               	iorwf	(___fladd@b+2)^(0+1280),w,c
  1862   00260E  1033               	iorwf	(___fladd@b+3)^(0+1280),w,c
  1863   002610  B4D8               	btfsc	status,2,c
  1864   002612  D002               	goto	u1010
  1865   002614  0E01               	movlw	1
  1866   002616  D001               	goto	u1020
  1867   002618                     u1010:
  1868   002618  0E00               	movlw	0
  1869   00261A                     u1020:
  1870   00261A  6E3F               	movwf	___fladd@grs^(0+1280),c
  1871   00261C  0E00               	movlw	0
  1872   00261E  6E30               	movwf	___fladd@b^(0+1280),c
  1873   002620  0E00               	movlw	0
  1874   002622  6E31               	movwf	(___fladd@b+1)^(0+1280),c
  1875   002624  0E00               	movlw	0
  1876   002626  6E32               	movwf	(___fladd@b+2)^(0+1280),c
  1877   002628  0E00               	movlw	0
  1878   00262A  6E33               	movwf	(___fladd@b+3)^(0+1280),c
  1879   00262C  C53D  F53E         	movff	___fladd@aexp,___fladd@bexp
  1880   002630  D015               	goto	u1050
  1881   002632                     l709:
  1882   002632  A03F               	btfss	___fladd@grs^(0+1280),0,c
  1883   002634  D005               	goto	l1594
  1884   002636  90D8               	bcf	status,0,c
  1885   002638  303F               	rrcf	___fladd@grs^(0+1280),w,c
  1886   00263A  0901               	iorlw	1
  1887   00263C  6E3F               	movwf	___fladd@grs^(0+1280),c
  1888   00263E  D002               	goto	l1596
  1889   002640                     l1594:
  1890   002640  90D8               	bcf	status,0,c
  1891   002642  323F               	rrcf	___fladd@grs^(0+1280),f,c
  1892   002644                     l1596:
  1893   002644  B030               	btfsc	___fladd@b^(0+1280),0,c
  1894   002646  8E3F               	bsf	___fladd@grs^(0+1280),7,c
  1895   002648  3433               	rlcf	(___fladd@b+3)^(0+1280),w,c
  1896   00264A  3233               	rrcf	(___fladd@b+3)^(0+1280),f,c
  1897   00264C  3232               	rrcf	(___fladd@b+2)^(0+1280),f,c
  1898   00264E  3231               	rrcf	(___fladd@b+1)^(0+1280),f,c
  1899   002650  3230               	rrcf	___fladd@b^(0+1280),f,c
  1900   002652  2A3E               	incf	___fladd@bexp^(0+1280),f,c
  1901   002654                     l708:
  1902   002654  503D               	movf	___fladd@aexp^(0+1280),w,c
  1903   002656  5C3E               	subwf	___fladd@bexp^(0+1280),w,c
  1904   002658  A0D8               	btfss	status,0,c
  1905   00265A  D7EB               	goto	l709
  1906   00265C                     u1050:
  1907   00265C  BC3C               	btfsc	___fladd@signs^(0+1280),6,c
  1908   00265E  D028               	goto	l1628
  1909   002660  503E               	movf	___fladd@bexp^(0+1280),w,c
  1910   002662  A4D8               	btfss	status,2,c
  1911   002664  D009               	goto	l1610
  1912   002666  0E00               	movlw	0
  1913   002668  6E30               	movwf	?___fladd^(0+1280),c
  1914   00266A  0E00               	movlw	0
  1915   00266C  6E31               	movwf	(?___fladd+1)^(0+1280),c
  1916   00266E  0E00               	movlw	0
  1917   002670  6E32               	movwf	(?___fladd+2)^(0+1280),c
  1918   002672  0E00               	movlw	0
  1919   002674  6E33               	movwf	(?___fladd+3)^(0+1280),c
  1920   002676  0012               	return	
  1921   002678                     l1610:
  1922   002678  5034               	movf	___fladd@a^(0+1280),w,c
  1923   00267A  2630               	addwf	___fladd@b^(0+1280),f,c
  1924   00267C  5035               	movf	(___fladd@a+1)^(0+1280),w,c
  1925   00267E  2231               	addwfc	(___fladd@b+1)^(0+1280),f,c
  1926   002680  5036               	movf	(___fladd@a+2)^(0+1280),w,c
  1927   002682  2232               	addwfc	(___fladd@b+2)^(0+1280),f,c
  1928   002684  5037               	movf	(___fladd@a+3)^(0+1280),w,c
  1929   002686  2233               	addwfc	(___fladd@b+3)^(0+1280),f,c
  1930   002688  A033               	btfss	(___fladd@b+3)^(0+1280),0,c
  1931   00268A  D071               	goto	u1180
  1932   00268C  A03F               	btfss	___fladd@grs^(0+1280),0,c
  1933   00268E  D005               	goto	l1618
  1934   002690  90D8               	bcf	status,0,c
  1935   002692  303F               	rrcf	___fladd@grs^(0+1280),w,c
  1936   002694  0901               	iorlw	1
  1937   002696  6E3F               	movwf	___fladd@grs^(0+1280),c
  1938   002698  D002               	goto	l1620
  1939   00269A                     l1618:
  1940   00269A  90D8               	bcf	status,0,c
  1941   00269C  323F               	rrcf	___fladd@grs^(0+1280),f,c
  1942   00269E                     l1620:
  1943   00269E  B030               	btfsc	___fladd@b^(0+1280),0,c
  1944   0026A0  8E3F               	bsf	___fladd@grs^(0+1280),7,c
  1945   0026A2  3433               	rlcf	(___fladd@b+3)^(0+1280),w,c
  1946   0026A4  3233               	rrcf	(___fladd@b+3)^(0+1280),f,c
  1947   0026A6  3232               	rrcf	(___fladd@b+2)^(0+1280),f,c
  1948   0026A8  3231               	rrcf	(___fladd@b+1)^(0+1280),f,c
  1949   0026AA  3230               	rrcf	___fladd@b^(0+1280),f,c
  1950   0026AC  2A3E               	incf	___fladd@bexp^(0+1280),f,c
  1951   0026AE  D05F               	goto	u1180
  1952   0026B0                     l1628:
  1953   0026B0  5034               	movf	___fladd@a^(0+1280),w,c
  1954   0026B2  5C30               	subwf	___fladd@b^(0+1280),w,c
  1955   0026B4  5035               	movf	(___fladd@a+1)^(0+1280),w,c
  1956   0026B6  5831               	subwfb	(___fladd@b+1)^(0+1280),w,c
  1957   0026B8  5036               	movf	(___fladd@a+2)^(0+1280),w,c
  1958   0026BA  5832               	subwfb	(___fladd@b+2)^(0+1280),w,c
  1959   0026BC  5033               	movf	(___fladd@b+3)^(0+1280),w,c
  1960   0026BE  0A80               	xorlw	128
  1961   0026C0  6E38               	movwf	??___fladd^(0+1280),c
  1962   0026C2  5037               	movf	(___fladd@a+3)^(0+1280),w,c
  1963   0026C4  0A80               	xorlw	128
  1964   0026C6  5838               	subwfb	??___fladd^(0+1280),w,c
  1965   0026C8  B0D8               	btfsc	status,0,c
  1966   0026CA  D025               	goto	l1638
  1967   0026CC  5030               	movf	___fladd@b^(0+1280),w,c
  1968   0026CE  5C34               	subwf	___fladd@a^(0+1280),w,c
  1969   0026D0  6E38               	movwf	??___fladd^(0+1280),c
  1970   0026D2  5031               	movf	(___fladd@b+1)^(0+1280),w,c
  1971   0026D4  5835               	subwfb	(___fladd@a+1)^(0+1280),w,c
  1972   0026D6  6E39               	movwf	(??___fladd+1)^(0+1280),c
  1973   0026D8  5032               	movf	(___fladd@b+2)^(0+1280),w,c
  1974   0026DA  5836               	subwfb	(___fladd@a+2)^(0+1280),w,c
  1975   0026DC  6E3A               	movwf	(??___fladd+2)^(0+1280),c
  1976   0026DE  5033               	movf	(___fladd@b+3)^(0+1280),w,c
  1977   0026E0  5837               	subwfb	(___fladd@a+3)^(0+1280),w,c
  1978   0026E2  6E3B               	movwf	(??___fladd+3)^(0+1280),c
  1979   0026E4  0EFF               	movlw	255
  1980   0026E6  2438               	addwf	??___fladd^(0+1280),w,c
  1981   0026E8  6E30               	movwf	___fladd@b^(0+1280),c
  1982   0026EA  0EFF               	movlw	255
  1983   0026EC  2039               	addwfc	(??___fladd+1)^(0+1280),w,c
  1984   0026EE  6E31               	movwf	(___fladd@b+1)^(0+1280),c
  1985   0026F0  0EFF               	movlw	255
  1986   0026F2  203A               	addwfc	(??___fladd+2)^(0+1280),w,c
  1987   0026F4  6E32               	movwf	(___fladd@b+2)^(0+1280),c
  1988   0026F6  0EFF               	movlw	255
  1989   0026F8  203B               	addwfc	(??___fladd+3)^(0+1280),w,c
  1990   0026FA  6E33               	movwf	(___fladd@b+3)^(0+1280),c
  1991   0026FC  0E80               	movlw	128
  1992   0026FE  1A3C               	xorwf	___fladd@signs^(0+1280),f,c
  1993   002700  6C3F               	negf	___fladd@grs^(0+1280),c
  1994   002702  503F               	movf	___fladd@grs^(0+1280),w,c
  1995   002704  A4D8               	btfss	status,2,c
  1996   002706  D00F               	goto	l724
  1997   002708  0E01               	movlw	1
  1998   00270A  2630               	addwf	___fladd@b^(0+1280),f,c
  1999   00270C  0E00               	movlw	0
  2000   00270E  2231               	addwfc	(___fladd@b+1)^(0+1280),f,c
  2001   002710  2232               	addwfc	(___fladd@b+2)^(0+1280),f,c
  2002   002712  2233               	addwfc	(___fladd@b+3)^(0+1280),f,c
  2003   002714  D008               	goto	l724
  2004   002716                     l1638:
  2005   002716  5034               	movf	___fladd@a^(0+1280),w,c
  2006   002718  5E30               	subwf	___fladd@b^(0+1280),f,c
  2007   00271A  5035               	movf	(___fladd@a+1)^(0+1280),w,c
  2008   00271C  5A31               	subwfb	(___fladd@b+1)^(0+1280),f,c
  2009   00271E  5036               	movf	(___fladd@a+2)^(0+1280),w,c
  2010   002720  5A32               	subwfb	(___fladd@b+2)^(0+1280),f,c
  2011   002722  5037               	movf	(___fladd@a+3)^(0+1280),w,c
  2012   002724  5A33               	subwfb	(___fladd@b+3)^(0+1280),f,c
  2013   002726                     l724:
  2014   002726  5030               	movf	___fladd@b^(0+1280),w,c
  2015   002728  1031               	iorwf	(___fladd@b+1)^(0+1280),w,c
  2016   00272A  1032               	iorwf	(___fladd@b+2)^(0+1280),w,c
  2017   00272C  1033               	iorwf	(___fladd@b+3)^(0+1280),w,c
  2018   00272E  A4D8               	btfss	status,2,c
  2019   002730  D01C               	goto	l1662
  2020   002732  503F               	movf	___fladd@grs^(0+1280),w,c
  2021   002734  A4D8               	btfss	status,2,c
  2022   002736  D019               	goto	l1662
  2023   002738  0E00               	movlw	0
  2024   00273A  6E30               	movwf	?___fladd^(0+1280),c
  2025   00273C  0E00               	movlw	0
  2026   00273E  6E31               	movwf	(?___fladd+1)^(0+1280),c
  2027   002740  0E00               	movlw	0
  2028   002742  6E32               	movwf	(?___fladd+2)^(0+1280),c
  2029   002744  0E00               	movlw	0
  2030   002746  6E33               	movwf	(?___fladd+3)^(0+1280),c
  2031   002748  0012               	return	
  2032   00274A                     l1646:
  2033   00274A  90D8               	bcf	status,0,c
  2034   00274C  3630               	rlcf	___fladd@b^(0+1280),f,c
  2035   00274E  3631               	rlcf	(___fladd@b+1)^(0+1280),f,c
  2036   002750  3632               	rlcf	(___fladd@b+2)^(0+1280),f,c
  2037   002752  3633               	rlcf	(___fladd@b+3)^(0+1280),f,c
  2038   002754  BE3F               	btfsc	___fladd@grs^(0+1280),7,c
  2039   002756  8030               	bsf	___fladd@b^(0+1280),0,c
  2040   002758  A03F               	btfss	___fladd@grs^(0+1280),0,c
  2041   00275A  D002               	goto	l1656
  2042   00275C  80D8               	bsf	status,0,c
  2043   00275E  D001               	goto	L5
  2044   002760                     l1656:
  2045   002760  90D8               	bcf	status,0,c
  2046   002762                     L5:
  2047   002762  363F               	rlcf	___fladd@grs^(0+1280),f,c
  2048   002764  503E               	movf	___fladd@bexp^(0+1280),w,c
  2049   002766  A4D8               	btfss	status,2,c
  2050   002768  063E               	decf	___fladd@bexp^(0+1280),f,c
  2051   00276A                     l1662:
  2052   00276A  AE32               	btfss	(___fladd@b+2)^(0+1280),7,c
  2053   00276C  D7EE               	goto	l1646
  2054   00276E                     u1180:
  2055   00276E  0E00               	movlw	0
  2056   002770  6E3D               	movwf	___fladd@aexp^(0+1280),c
  2057   002772  AE3F               	btfss	___fladd@grs^(0+1280),7,c
  2058   002774  D00B               	goto	l733
  2059   002776  C53F  F538         	movff	___fladd@grs,??___fladd
  2060   00277A  0E7F               	movlw	127
  2061   00277C  1638               	andwf	??___fladd^(0+1280),f,c
  2062   00277E  B4D8               	btfsc	status,2,c
  2063   002780  D003               	goto	l734
  2064   002782                     u1200:
  2065   002782  0E01               	movlw	1
  2066   002784  6E3D               	movwf	___fladd@aexp^(0+1280),c
  2067   002786  D002               	goto	l733
  2068   002788                     l734:
  2069   002788  B030               	btfsc	___fladd@b^(0+1280),0,c
  2070   00278A  D7FB               	goto	u1200
  2071   00278C                     l733:
  2072   00278C  503D               	movf	___fladd@aexp^(0+1280),w,c
  2073   00278E  B4D8               	btfsc	status,2,c
  2074   002790  D020               	goto	l1682
  2075   002792  0E01               	movlw	1
  2076   002794  2630               	addwf	___fladd@b^(0+1280),f,c
  2077   002796  0E00               	movlw	0
  2078   002798  2231               	addwfc	(___fladd@b+1)^(0+1280),f,c
  2079   00279A  2232               	addwfc	(___fladd@b+2)^(0+1280),f,c
  2080   00279C  2233               	addwfc	(___fladd@b+3)^(0+1280),f,c
  2081   00279E  A033               	btfss	(___fladd@b+3)^(0+1280),0,c
  2082   0027A0  D018               	goto	l1682
  2083   0027A2  C530  F538         	movff	___fladd@b,??___fladd
  2084   0027A6  C531  F539         	movff	___fladd@b+1,??___fladd+1
  2085   0027AA  C532  F53A         	movff	___fladd@b+2,??___fladd+2
  2086   0027AE  C533  F53B         	movff	___fladd@b+3,??___fladd+3
  2087   0027B2  343B               	rlcf	(??___fladd+3)^(0+1280),w,c
  2088   0027B4  323B               	rrcf	(??___fladd+3)^(0+1280),f,c
  2089   0027B6  323A               	rrcf	(??___fladd+2)^(0+1280),f,c
  2090   0027B8  3239               	rrcf	(??___fladd+1)^(0+1280),f,c
  2091   0027BA  3238               	rrcf	??___fladd^(0+1280),f,c
  2092   0027BC  C538  F530         	movff	??___fladd,___fladd@b
  2093   0027C0  C539  F531         	movff	??___fladd+1,___fladd@b+1
  2094   0027C4  C53A  F532         	movff	??___fladd+2,___fladd@b+2
  2095   0027C8  C53B  F533         	movff	??___fladd+3,___fladd@b+3
  2096   0027CC  283E               	incf	___fladd@bexp^(0+1280),w,c
  2097   0027CE  A4D8               	btfss	status,2,c
  2098   0027D0  2A3E               	incf	___fladd@bexp^(0+1280),f,c
  2099   0027D2                     l1682:
  2100   0027D2  283E               	incf	___fladd@bexp^(0+1280),w,c
  2101   0027D4  B4D8               	btfsc	status,2,c
  2102   0027D6  D003               	goto	u1260
  2103   0027D8  503E               	movf	___fladd@bexp^(0+1280),w,c
  2104   0027DA  A4D8               	btfss	status,2,c
  2105   0027DC  D00D               	goto	l1690
  2106   0027DE                     u1260:
  2107   0027DE  0E00               	movlw	0
  2108   0027E0  6E30               	movwf	___fladd@b^(0+1280),c
  2109   0027E2  0E00               	movlw	0
  2110   0027E4  6E31               	movwf	(___fladd@b+1)^(0+1280),c
  2111   0027E6  0E00               	movlw	0
  2112   0027E8  6E32               	movwf	(___fladd@b+2)^(0+1280),c
  2113   0027EA  0E00               	movlw	0
  2114   0027EC  6E33               	movwf	(___fladd@b+3)^(0+1280),c
  2115   0027EE  503E               	movf	___fladd@bexp^(0+1280),w,c
  2116   0027F0  A4D8               	btfss	status,2,c
  2117   0027F2  D002               	goto	l1690
  2118   0027F4  0E00               	movlw	0
  2119   0027F6  6E3C               	movwf	___fladd@signs^(0+1280),c
  2120   0027F8                     l1690:
  2121   0027F8  A03E               	btfss	___fladd@bexp^(0+1280),0,c
  2122   0027FA  D002               	goto	l1694
  2123   0027FC  8E32               	bsf	(___fladd@b+2)^(0+1280),7,c
  2124   0027FE  D001               	goto	l1696
  2125   002800                     l1694:
  2126   002800  9E32               	bcf	(___fladd@b+2)^(0+1280),7,c
  2127   002802                     l1696:
  2128   002802  90D8               	bcf	status,0,c
  2129   002804  303E               	rrcf	___fladd@bexp^(0+1280),w,c
  2130   002806  6E33               	movwf	(___fladd@b+3)^(0+1280),c
  2131   002808  BE3C               	btfsc	___fladd@signs^(0+1280),7,c
  2132   00280A  8E33               	bsf	(___fladd@b+3)^(0+1280),7,c
  2133   00280C  C530  F530         	movff	___fladd@b,?___fladd
  2134   002810  C531  F531         	movff	___fladd@b+1,?___fladd+1
  2135   002814  C532  F532         	movff	___fladd@b+2,?___fladd+2
  2136   002818  C533  F533         	movff	___fladd@b+3,?___fladd+3
  2137   00281C  0012               	return		;funcret
  2138   00281E                     __end_of___fladd:
  2139                           	callstack 0
  2140                           
  2141 ;; *************** function _POS_CURSOR *****************
  2142 ;; Defined at:
  2143 ;;		line 6 in file "LCD.c"
  2144 ;; Parameters:    Size  Location     Type
  2145 ;;  fila            1    wreg     unsigned char 
  2146 ;;  columna         1   11[COMRAM] unsigned char 
  2147 ;; Auto vars:     Size  Location     Type
  2148 ;;  fila            1   12[COMRAM] unsigned char 
  2149 ;; Return value:  Size  Location     Type
  2150 ;;                  1    wreg      void 
  2151 ;; Registers used:
  2152 ;;		wreg, status,2, status,0, cstack
  2153 ;; Tracked objects:
  2154 ;;		On entry : 0/3
  2155 ;;		On exit  : 0/0
  2156 ;;		Unchanged: 0/0
  2157 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2158 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2159 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2160 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2161 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2162 ;;Total ram usage:        2 bytes
  2163 ;; Hardware stack levels used: 1
  2164 ;; Hardware stack levels required when called: 3
  2165 ;; This function calls:
  2166 ;;		_ENVIA_LCD_CMD
  2167 ;; This function is called by:
  2168 ;;		_main
  2169 ;; This function uses a non-reentrant model
  2170 ;;
  2171                           
  2172                           	psect	text12
  2173   002FD4                     __ptext12:
  2174                           	callstack 0
  2175   002FD4                     _POS_CURSOR:
  2176                           	callstack 123
  2177                           
  2178                           ;incstack = 0
  2179                           ;POS_CURSOR@fila stored from wreg
  2180   002FD4  6E0D               	movwf	POS_CURSOR@fila^(0+1280),c
  2181                           
  2182                           ;LCD.c: 6: void POS_CURSOR(unsigned char fila,unsigned char columna);LCD.c: 7: {;LCD.c: 
      +                          8:  if(fila == 1)
  2183   002FD6  040D               	decf	POS_CURSOR@fila^(0+1280),w,c
  2184   002FD8  A4D8               	btfss	status,2,c
  2185   002FDA  D005               	goto	l1492
  2186                           
  2187                           ;LCD.c: 9:  {;LCD.c: 10:   ENVIA_LCD_CMD(0x80+columna);
  2188   002FDC  500C               	movf	POS_CURSOR@columna^(0+1280),w,c
  2189   002FDE  0F80               	addlw	128
  2190   002FE0  EC78  F017         	call	_ENVIA_LCD_CMD
  2191                           
  2192                           ;LCD.c: 11:  }
  2193   002FE4  0012               	return	
  2194   002FE6                     l1492:
  2195   002FE6  0E02               	movlw	2
  2196   002FE8  180D               	xorwf	POS_CURSOR@fila^(0+1280),w,c
  2197   002FEA  A4D8               	btfss	status,2,c
  2198   002FEC  0012               	return	
  2199                           
  2200                           ;LCD.c: 13:  {;LCD.c: 14:   ENVIA_LCD_CMD(0xC0+columna);
  2201   002FEE  500C               	movf	POS_CURSOR@columna^(0+1280),w,c
  2202   002FF0  0FC0               	addlw	192
  2203   002FF2  EC78  F017         	call	_ENVIA_LCD_CMD
  2204   002FF6  0012               	return		;funcret
  2205   002FF8                     __end_of_POS_CURSOR:
  2206                           	callstack 0
  2207                           
  2208 ;; *************** function _ENVIA_LCD_CMD *****************
  2209 ;; Defined at:
  2210 ;;		line 104 in file "LCD.c"
  2211 ;; Parameters:    Size  Location     Type
  2212 ;;  dato            1    wreg     unsigned char 
  2213 ;; Auto vars:     Size  Location     Type
  2214 ;;  dato            1    9[COMRAM] unsigned char 
  2215 ;;  aux             1   10[COMRAM] unsigned char 
  2216 ;; Return value:  Size  Location     Type
  2217 ;;                  1    wreg      void 
  2218 ;; Registers used:
  2219 ;;		wreg, status,2, status,0, cstack
  2220 ;; Tracked objects:
  2221 ;;		On entry : 0/4
  2222 ;;		On exit  : 0/0
  2223 ;;		Unchanged: 0/0
  2224 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2225 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2226 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2227 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2228 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2229 ;;Total ram usage:        2 bytes
  2230 ;; Hardware stack levels used: 1
  2231 ;; Hardware stack levels required when called: 2
  2232 ;; This function calls:
  2233 ;;		_ENVIA_NIBBLE
  2234 ;;		_LEER_LCD
  2235 ;; This function is called by:
  2236 ;;		_POS_CURSOR
  2237 ;;		_CURSOR_HOME
  2238 ;;		_CURSOR_ONOFF
  2239 ;;		_BORRAR_LCD
  2240 ;;		_LCD_CONFIG
  2241 ;; This function uses a non-reentrant model
  2242 ;;
  2243                           
  2244                           	psect	text13
  2245   002EF0                     __ptext13:
  2246                           	callstack 0
  2247   002EF0                     _ENVIA_LCD_CMD:
  2248                           	callstack 122
  2249                           
  2250                           ;incstack = 0
  2251                           ;ENVIA_LCD_CMD@dato stored from wreg
  2252   002EF0  6E0A               	movwf	ENVIA_LCD_CMD@dato^(0+1280),c
  2253                           
  2254                           ;LCD.c: 104: void ENVIA_LCD_CMD(unsigned char dato);LCD.c: 105: {;LCD.c: 106:  unsigned 
      +                          char aux;;LCD.c: 107:  LATDbits.LATD0 = 0;
  2255   002EF2  90C1               	bcf	193,0,c	;volatile
  2256                           
  2257                           ;LCD.c: 108:  LEER_LCD();
  2258   002EF4  ECF7  F016         	call	_LEER_LCD	;wreg free
  2259                           
  2260                           ;LCD.c: 109:  TRISD = 0b00000000;
  2261   002EF8  0E00               	movlw	0
  2262   002EFA  6EC9               	movwf	201,c	;volatile
  2263                           
  2264                           ;LCD.c: 111:         _delay(1200);
  2265   002EFC  0EF0               	movlw	240
  2266   002EFE                     u1747:
  2267   002EFE  D000               	nop2	
  2268   002F00  2EE8               	decfsz	wreg,f,c
  2269   002F02  D7FD               	bra	u1747
  2270                           
  2271                           ;LCD.c: 112:         LATDbits.LATD1 = 0;
  2272   002F04  92C1               	bcf	193,1,c	;volatile
  2273                           
  2274                           ;LCD.c: 113:  LATDbits.LATD2 = 0;
  2275   002F06  94C1               	bcf	193,2,c	;volatile
  2276                           
  2277                           ;LCD.c: 114:  LATDbits.LATD0 = 0;
  2278   002F08  90C1               	bcf	193,0,c	;volatile
  2279                           
  2280                           ;LCD.c: 115:  aux = dato & 0xF0;
  2281   002F0A  500A               	movf	ENVIA_LCD_CMD@dato^(0+1280),w,c
  2282   002F0C  0BF0               	andlw	240
  2283   002F0E  6E0B               	movwf	ENVIA_LCD_CMD@aux^(0+1280),c
  2284                           
  2285                           ;LCD.c: 116:  ENVIA_NIBBLE(aux);
  2286   002F10  500B               	movf	ENVIA_LCD_CMD@aux^(0+1280),w,c
  2287   002F12  EC0A  F018         	call	_ENVIA_NIBBLE
  2288                           
  2289                           ;LCD.c: 117:  aux = dato<<4;
  2290   002F16  380A               	swapf	ENVIA_LCD_CMD@dato^(0+1280),w,c
  2291   002F18  0BF0               	andlw	240
  2292   002F1A  6E0B               	movwf	ENVIA_LCD_CMD@aux^(0+1280),c
  2293                           
  2294                           ;LCD.c: 118:  ENVIA_NIBBLE(aux);
  2295   002F1C  500B               	movf	ENVIA_LCD_CMD@aux^(0+1280),w,c
  2296   002F1E  EC0A  F018         	call	_ENVIA_NIBBLE
  2297   002F22  0012               	return		;funcret
  2298   002F24                     __end_of_ENVIA_LCD_CMD:
  2299                           	callstack 0
  2300                           
  2301 ;; *************** function _ESCRIBE_MENSAJE *****************
  2302 ;; Defined at:
  2303 ;;		line 41 in file "LCD.c"
  2304 ;; Parameters:    Size  Location     Type
  2305 ;;  cadena          1   11[COMRAM] PTR const unsigned char 
  2306 ;;		 -> STR_1(15), 
  2307 ;;  tam             1   12[COMRAM] unsigned char 
  2308 ;; Auto vars:     Size  Location     Type
  2309 ;;  i               1   14[COMRAM] unsigned char 
  2310 ;; Return value:  Size  Location     Type
  2311 ;;                  1    wreg      void 
  2312 ;; Registers used:
  2313 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2314 ;; Tracked objects:
  2315 ;;		On entry : 0/3
  2316 ;;		On exit  : 0/0
  2317 ;;		Unchanged: 0/0
  2318 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2319 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2320 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2321 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2322 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2323 ;;Total ram usage:        4 bytes
  2324 ;; Hardware stack levels used: 1
  2325 ;; Hardware stack levels required when called: 3
  2326 ;; This function calls:
  2327 ;;		_ENVIA_CHAR
  2328 ;; This function is called by:
  2329 ;;		_main
  2330 ;; This function uses a non-reentrant model
  2331 ;;
  2332                           
  2333                           	psect	text14
  2334   002FAC                     __ptext14:
  2335                           	callstack 0
  2336   002FAC                     _ESCRIBE_MENSAJE:
  2337                           	callstack 123
  2338                           
  2339                           ;LCD.c: 41: void ESCRIBE_MENSAJE(const char *cadena,unsigned char tam);LCD.c: 42: {;LCD.
      +                          c: 43:  unsigned char i = 0;
  2340                           
  2341                           ;incstack = 0
  2342   002FAC  0E00               	movlw	0
  2343   002FAE  6E0F               	movwf	ESCRIBE_MENSAJE@i^(0+1280),c
  2344                           
  2345                           ;LCD.c: 44:  for(i = 0; i<tam; i++)
  2346   002FB0  0E00               	movlw	0
  2347   002FB2  6E0F               	movwf	ESCRIBE_MENSAJE@i^(0+1280),c
  2348   002FB4  D00A               	goto	l1502
  2349   002FB6                     l1498:
  2350                           
  2351                           ;LCD.c: 45:  {;LCD.c: 46:   ENVIA_CHAR(cadena[i]);
  2352   002FB6  500C               	movf	ESCRIBE_MENSAJE@cadena^(0+1280),w,c
  2353   002FB8  240F               	addwf	ESCRIBE_MENSAJE@i^(0+1280),w,c
  2354   002FBA  6E0E               	movwf	??_ESCRIBE_MENSAJE^(0+1280),c
  2355   002FBC  C50E  F4F6         	movff	??_ESCRIBE_MENSAJE,tblptrl
  2356   002FC0                     	if	0	;There is only one active tblptr byte
  2357   002FC0                     	endif
  2358   002FC0                     	if	0	;tblptru may be non-zero
  2359   002FC0                     	endif
  2360   002FC0                     	if	0	;tblptru may be non-zero
  2361   002FC0                     	endif
  2362   002FC0  0008               	tblrd		*
  2363   002FC2  50F5               	movf	tablat,w,c
  2364   002FC4  EC92  F017         	call	_ENVIA_CHAR
  2365                           
  2366                           ;LCD.c: 47:  }
  2367   002FC8  2A0F               	incf	ESCRIBE_MENSAJE@i^(0+1280),f,c
  2368   002FCA                     l1502:
  2369   002FCA  500D               	movf	ESCRIBE_MENSAJE@tam^(0+1280),w,c
  2370   002FCC  5C0F               	subwf	ESCRIBE_MENSAJE@i^(0+1280),w,c
  2371   002FCE  B0D8               	btfsc	status,0,c
  2372   002FD0  0012               	return	
  2373   002FD2  D7F1               	goto	l1498
  2374   002FD4                     __end_of_ESCRIBE_MENSAJE:
  2375                           	callstack 0
  2376                           
  2377 ;; *************** function _ENVIA_CHAR *****************
  2378 ;; Defined at:
  2379 ;;		line 50 in file "LCD.c"
  2380 ;; Parameters:    Size  Location     Type
  2381 ;;  dato            1    wreg     unsigned char 
  2382 ;; Auto vars:     Size  Location     Type
  2383 ;;  dato            1    9[COMRAM] unsigned char 
  2384 ;;  aux             1   10[COMRAM] unsigned char 
  2385 ;; Return value:  Size  Location     Type
  2386 ;;                  1    wreg      void 
  2387 ;; Registers used:
  2388 ;;		wreg, status,2, status,0, cstack
  2389 ;; Tracked objects:
  2390 ;;		On entry : 0/3
  2391 ;;		On exit  : 0/0
  2392 ;;		Unchanged: 0/0
  2393 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2394 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2395 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2396 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2397 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2398 ;;Total ram usage:        2 bytes
  2399 ;; Hardware stack levels used: 1
  2400 ;; Hardware stack levels required when called: 2
  2401 ;; This function calls:
  2402 ;;		_ENVIA_NIBBLE
  2403 ;;		_LEER_LCD
  2404 ;; This function is called by:
  2405 ;;		_ESCRIBE_MENSAJE
  2406 ;; This function uses a non-reentrant model
  2407 ;;
  2408                           
  2409                           	psect	text15
  2410   002F24                     __ptext15:
  2411                           	callstack 0
  2412   002F24                     _ENVIA_CHAR:
  2413                           	callstack 123
  2414                           
  2415                           ;incstack = 0
  2416                           ;ENVIA_CHAR@dato stored from wreg
  2417   002F24  6E0A               	movwf	ENVIA_CHAR@dato^(0+1280),c
  2418                           
  2419                           ;LCD.c: 50: void ENVIA_CHAR(unsigned char dato);LCD.c: 51: {;LCD.c: 52:  unsigned char a
      +                          ux;;LCD.c: 53:  LATDbits.LATD0 = 1;
  2420   002F26  80C1               	bsf	193,0,c	;volatile
  2421                           
  2422                           ;LCD.c: 54:  LEER_LCD();
  2423   002F28  ECF7  F016         	call	_LEER_LCD	;wreg free
  2424                           
  2425                           ;LCD.c: 55:  TRISD = 0x00;
  2426   002F2C  0E00               	movlw	0
  2427   002F2E  6EC9               	movwf	201,c	;volatile
  2428                           
  2429                           ;LCD.c: 56:         _delay(1200);
  2430   002F30  0EF0               	movlw	240
  2431   002F32                     u1757:
  2432   002F32  D000               	nop2	
  2433   002F34  2EE8               	decfsz	wreg,f,c
  2434   002F36  D7FD               	bra	u1757
  2435                           
  2436                           ;LCD.c: 58:  LATDbits.LATD1 = 0;
  2437   002F38  92C1               	bcf	193,1,c	;volatile
  2438                           
  2439                           ;LCD.c: 59:  LATDbits.LATD2 = 0;
  2440   002F3A  94C1               	bcf	193,2,c	;volatile
  2441                           
  2442                           ;LCD.c: 60:  LATDbits.LATD0 = 1;
  2443   002F3C  80C1               	bsf	193,0,c	;volatile
  2444                           
  2445                           ;LCD.c: 61:  aux = dato & 0xF0;
  2446   002F3E  500A               	movf	ENVIA_CHAR@dato^(0+1280),w,c
  2447   002F40  0BF0               	andlw	240
  2448   002F42  6E0B               	movwf	ENVIA_CHAR@aux^(0+1280),c
  2449                           
  2450                           ;LCD.c: 62:  ENVIA_NIBBLE(aux);
  2451   002F44  500B               	movf	ENVIA_CHAR@aux^(0+1280),w,c
  2452   002F46  EC0A  F018         	call	_ENVIA_NIBBLE
  2453                           
  2454                           ;LCD.c: 63:  aux = dato << 4;
  2455   002F4A  380A               	swapf	ENVIA_CHAR@dato^(0+1280),w,c
  2456   002F4C  0BF0               	andlw	240
  2457   002F4E  6E0B               	movwf	ENVIA_CHAR@aux^(0+1280),c
  2458                           
  2459                           ;LCD.c: 64:  ENVIA_NIBBLE(aux);
  2460   002F50  500B               	movf	ENVIA_CHAR@aux^(0+1280),w,c
  2461   002F52  EC0A  F018         	call	_ENVIA_NIBBLE
  2462   002F56  0012               	return		;funcret
  2463   002F58                     __end_of_ENVIA_CHAR:
  2464                           	callstack 0
  2465                           
  2466 ;; *************** function _LEER_LCD *****************
  2467 ;; Defined at:
  2468 ;;		line 121 in file "LCD.c"
  2469 ;; Parameters:    Size  Location     Type
  2470 ;;		None
  2471 ;; Auto vars:     Size  Location     Type
  2472 ;;  aux             1    8[COMRAM] unsigned char 
  2473 ;; Return value:  Size  Location     Type
  2474 ;;                  1    wreg      void 
  2475 ;; Registers used:
  2476 ;;		wreg, status,2, status,0
  2477 ;; Tracked objects:
  2478 ;;		On entry : 0/4
  2479 ;;		On exit  : 0/0
  2480 ;;		Unchanged: 0/0
  2481 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2482 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2483 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2484 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2485 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2486 ;;Total ram usage:        1 bytes
  2487 ;; Hardware stack levels used: 1
  2488 ;; Hardware stack levels required when called: 1
  2489 ;; This function calls:
  2490 ;;		Nothing
  2491 ;; This function is called by:
  2492 ;;		_ENVIA_CHAR
  2493 ;;		_ENVIA_LCD_CMD
  2494 ;; This function uses a non-reentrant model
  2495 ;;
  2496                           
  2497                           	psect	text16
  2498   002DEE                     __ptext16:
  2499                           	callstack 0
  2500   002DEE                     _LEER_LCD:
  2501                           	callstack 122
  2502                           
  2503                           ;LCD.c: 123:  unsigned char aux;;LCD.c: 124:  TRISD = 0xF8;
  2504                           
  2505                           ;incstack = 0
  2506   002DEE  0EF8               	movlw	248
  2507   002DF0  6EC9               	movwf	201,c	;volatile
  2508                           
  2509                           ;LCD.c: 125:  LATDbits.LATD0 = 0;
  2510   002DF2  90C1               	bcf	193,0,c	;volatile
  2511                           
  2512                           ;LCD.c: 126:  LATDbits.LATD1 = 1;
  2513   002DF4  82C1               	bsf	193,1,c	;volatile
  2514                           
  2515                           ;LCD.c: 127:  LATDbits.LATD2 = 1;
  2516   002DF6  84C1               	bsf	193,2,c	;volatile
  2517                           
  2518                           ;LCD.c: 128:         _delay(1200);
  2519   002DF8  0EF0               	movlw	240
  2520   002DFA                     u1767:
  2521   002DFA  D000               	nop2	
  2522   002DFC  2EE8               	decfsz	wreg,f,c
  2523   002DFE  D7FD               	bra	u1767
  2524                           
  2525                           ;LCD.c: 130:  aux = PORTD;
  2526   002E00  C4D1 F509          	movff	1233,LEER_LCD@aux	;volatile
  2527                           
  2528                           ;LCD.c: 131:  LATDbits.LATD2 = 0;
  2529   002E04  94C1               	bcf	193,2,c	;volatile
  2530                           
  2531                           ;LCD.c: 132:         _delay(1200);
  2532   002E06  0EF0               	movlw	240
  2533   002E08                     u1777:
  2534   002E08  D000               	nop2	
  2535   002E0A  2EE8               	decfsz	wreg,f,c
  2536   002E0C  D7FD               	bra	u1777
  2537                           
  2538                           ;LCD.c: 134:  LATDbits.LATD2 = 1;
  2539   002E0E  84C1               	bsf	193,2,c	;volatile
  2540                           
  2541                           ;LCD.c: 135:         _delay(1200);
  2542   002E10  0EF0               	movlw	240
  2543   002E12                     u1787:
  2544   002E12  D000               	nop2	
  2545   002E14  2EE8               	decfsz	wreg,f,c
  2546   002E16  D7FD               	bra	u1787
  2547   002E18                     l872:
  2548                           
  2549                           ;LCD.c: 137:  LATDbits.LATD2 = 0;
  2550   002E18  94C1               	bcf	193,2,c	;volatile
  2551                           
  2552                           ;LCD.c: 138:  aux = aux & 0x80;
  2553   002E1A  5009               	movf	LEER_LCD@aux^(0+1280),w,c
  2554   002E1C  0B80               	andlw	128
  2555   002E1E  6E09               	movwf	LEER_LCD@aux^(0+1280),c
  2556                           
  2557                           ;LCD.c: 139:  while(aux == 0x80)
  2558   002E20  D012               	goto	l888
  2559   002E22                     l67:
  2560                           
  2561                           ;LCD.c: 140:         {;LCD.c: 141:             LATDbits.LATD2 = 1;
  2562   002E22  84C1               	bsf	193,2,c	;volatile
  2563                           
  2564                           ;LCD.c: 142:             _delay(1200);
  2565   002E24  0EF0               	movlw	240
  2566   002E26                     u1797:
  2567   002E26  D000               	nop2	
  2568   002E28  2EE8               	decfsz	wreg,f,c
  2569   002E2A  D7FD               	bra	u1797
  2570                           
  2571                           ;LCD.c: 143:             aux = PORTD;
  2572   002E2C  C4D1 F509          	movff	1233,LEER_LCD@aux	;volatile
  2573                           
  2574                           ;LCD.c: 144:             LATDbits.LATD2 = 0;
  2575   002E30  94C1               	bcf	193,2,c	;volatile
  2576                           
  2577                           ;LCD.c: 145:             _delay(1200);
  2578   002E32  0EF0               	movlw	240
  2579   002E34                     u1807:
  2580   002E34  D000               	nop2	
  2581   002E36  2EE8               	decfsz	wreg,f,c
  2582   002E38  D7FD               	bra	u1807
  2583                           
  2584                           ;LCD.c: 146:             LATDbits.LATD2 = 1;
  2585   002E3A  84C1               	bsf	193,2,c	;volatile
  2586                           
  2587                           ;LCD.c: 147:             _delay(1200);
  2588   002E3C  0EF0               	movlw	240
  2589   002E3E                     u1817:
  2590   002E3E  D000               	nop2	
  2591   002E40  2EE8               	decfsz	wreg,f,c
  2592   002E42  D7FD               	bra	u1817
  2593   002E44  D7E9               	goto	l872
  2594   002E46                     l888:
  2595                           
  2596                           ;LCD.c: 139:  while(aux == 0x80)
  2597   002E46  0E80               	movlw	128
  2598   002E48  1809               	xorwf	LEER_LCD@aux^(0+1280),w,c
  2599   002E4A  A4D8               	btfss	status,2,c
  2600   002E4C  0012               	return	
  2601   002E4E  D7E9               	goto	l67
  2602   002E50                     __end_of_LEER_LCD:
  2603                           	callstack 0
  2604                           
  2605 ;; *************** function _ENVIA_NIBBLE *****************
  2606 ;; Defined at:
  2607 ;;		line 93 in file "LCD.c"
  2608 ;; Parameters:    Size  Location     Type
  2609 ;;  dato            1    wreg     unsigned char 
  2610 ;; Auto vars:     Size  Location     Type
  2611 ;;  dato            1    8[COMRAM] unsigned char 
  2612 ;; Return value:  Size  Location     Type
  2613 ;;                  1    wreg      void 
  2614 ;; Registers used:
  2615 ;;		wreg, status,2, status,0
  2616 ;; Tracked objects:
  2617 ;;		On entry : 0/4
  2618 ;;		On exit  : 0/0
  2619 ;;		Unchanged: 0/0
  2620 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2621 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2622 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2623 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2624 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2625 ;;Total ram usage:        1 bytes
  2626 ;; Hardware stack levels used: 1
  2627 ;; Hardware stack levels required when called: 1
  2628 ;; This function calls:
  2629 ;;		Nothing
  2630 ;; This function is called by:
  2631 ;;		_ENVIA_CHAR
  2632 ;;		_LCD_CONFIG
  2633 ;;		_ENVIA_LCD_CMD
  2634 ;; This function uses a non-reentrant model
  2635 ;;
  2636                           
  2637                           	psect	text17
  2638   003014                     __ptext17:
  2639                           	callstack 0
  2640   003014                     _ENVIA_NIBBLE:
  2641                           	callstack 123
  2642                           
  2643                           ;incstack = 0
  2644                           ;ENVIA_NIBBLE@dato stored from wreg
  2645   003014  6E09               	movwf	ENVIA_NIBBLE@dato^(0+1280),c
  2646                           
  2647                           ;LCD.c: 93: void ENVIA_NIBBLE(unsigned char dato);LCD.c: 94: {;LCD.c: 95:  LATD &= 0x0F;
  2648   003016  0E0F               	movlw	15
  2649   003018  16C1               	andwf	193,f,c	;volatile
  2650                           
  2651                           ;LCD.c: 96:  dato &= 0xF0;
  2652   00301A  0EF0               	movlw	240
  2653   00301C  1609               	andwf	ENVIA_NIBBLE@dato^(0+1280),f,c
  2654                           
  2655                           ;LCD.c: 97:  LATD|= dato;
  2656   00301E  5009               	movf	ENVIA_NIBBLE@dato^(0+1280),w,c	;volatile
  2657   003020  12C1               	iorwf	193,f,c	;volatile
  2658                           
  2659                           ;LCD.c: 98:  LATDbits.LATD2 = 1;
  2660   003022  84C1               	bsf	193,2,c	;volatile
  2661                           
  2662                           ;LCD.c: 100:         _delay(1200);
  2663   003024  0EF0               	movlw	240
  2664   003026                     u1827:
  2665   003026  D000               	nop2	
  2666   003028  2EE8               	decfsz	wreg,f,c
  2667   00302A  D7FD               	bra	u1827
  2668                           
  2669                           ;LCD.c: 101:  LATDbits.LATD2 = 0;
  2670   00302C  94C1               	bcf	193,2,c	;volatile
  2671   00302E  0012               	return		;funcret
  2672   003030                     __end_of_ENVIA_NIBBLE:
  2673                           	callstack 0
  2674                           
  2675 ;; *************** function _TMR0_ISR *****************
  2676 ;; Defined at:
  2677 ;;		line 66 in file "maincode6.c"
  2678 ;; Parameters:    Size  Location     Type
  2679 ;;		None
  2680 ;; Auto vars:     Size  Location     Type
  2681 ;;		None
  2682 ;; Return value:  Size  Location     Type
  2683 ;;                  1    wreg      void 
  2684 ;; Registers used:
  2685 ;;		wreg, status,2, status,0
  2686 ;; Tracked objects:
  2687 ;;		On entry : 0/0
  2688 ;;		On exit  : 3F/3
  2689 ;;		Unchanged: 0/0
  2690 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2691 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2692 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2693 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2694 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2695 ;;Total ram usage:        8 bytes
  2696 ;; Hardware stack levels used: 1
  2697 ;; This function calls:
  2698 ;;		Nothing
  2699 ;; This function is called by:
  2700 ;;		Interrupt level 2
  2701 ;; This function uses a non-reentrant model
  2702 ;;
  2703                           
  2704                           	psect	text18
  2705   002D5C                     __ptext18:
  2706                           	callstack 0
  2707   002D5C                     _TMR0_ISR:
  2708                           	callstack 122
  2709                           
  2710                           ;maincode6.c: 67:     PIR3bits.TMR0IF = 0;
  2711                           
  2712                           ;incstack = 0
  2713   002D5C  9EB1               	bcf	177,7,c	;volatile
  2714                           
  2715                           ;maincode6.c: 68:     if(PORTCbits.RC0 == 1){
  2716   002D5E  A0D0               	btfss	208,0,c	;volatile
  2717   002D60  D023               	goto	i2l169
  2718                           
  2719                           ;maincode6.c: 69:         LATCbits.LATC0 = 0;
  2720   002D62  90C0               	bcf	192,0,c	;volatile
  2721                           
  2722                           ;maincode6.c: 70:         TMR0H = (((65535 - (20000- ((65535 - ((65535-posicion)+1))+1))
      +                          )+1) >> 8) & 0x00FF;
  2723   002D64  5048               	movf	_posicion^(0+1280),w,c
  2724   002D66  6E01               	movwf	??_TMR0_ISR^(0+1280),c
  2725   002D68  5049               	movf	(_posicion+1)^(0+1280),w,c
  2726   002D6A  6E02               	movwf	(??_TMR0_ISR+1)^(0+1280),c
  2727   002D6C  6A03               	clrf	(??_TMR0_ISR+2)^(0+1280),c
  2728   002D6E  6A04               	clrf	(??_TMR0_ISR+3)^(0+1280),c
  2729   002D70  0EE0               	movlw	224
  2730   002D72  2401               	addwf	??_TMR0_ISR^(0+1280),w,c
  2731   002D74  6E05               	movwf	(??_TMR0_ISR+4)^(0+1280),c
  2732   002D76  0EB1               	movlw	177
  2733   002D78  2002               	addwfc	(??_TMR0_ISR+1)^(0+1280),w,c
  2734   002D7A  6E06               	movwf	(??_TMR0_ISR+5)^(0+1280),c
  2735   002D7C  0E00               	movlw	0
  2736   002D7E  2003               	addwfc	(??_TMR0_ISR+2)^(0+1280),w,c
  2737   002D80  6E07               	movwf	(??_TMR0_ISR+6)^(0+1280),c
  2738   002D82  0E00               	movlw	0
  2739   002D84  2004               	addwfc	(??_TMR0_ISR+3)^(0+1280),w,c
  2740   002D86  6E08               	movwf	(??_TMR0_ISR+7)^(0+1280),c
  2741   002D88  C506  F505         	movff	??_TMR0_ISR+5,??_TMR0_ISR+4
  2742   002D8C  C507  F506         	movff	??_TMR0_ISR+6,??_TMR0_ISR+5
  2743   002D90  C508  F507         	movff	??_TMR0_ISR+7,??_TMR0_ISR+6
  2744   002D94  6A08               	clrf	(??_TMR0_ISR+7)^(0+1280),c
  2745   002D96  BE07               	btfsc	(??_TMR0_ISR+6)^(0+1280),7,c
  2746   002D98  6808               	setf	(??_TMR0_ISR+7)^(0+1280),c
  2747   002D9A  5005               	movf	(??_TMR0_ISR+4)^(0+1280),w,c
  2748   002D9C  0103               	movlb	3	; () banked
  2749   002D9E  6F19               	movwf	25,b	;volatile
  2750                           
  2751                           ;maincode6.c: 71:         TMR0L = ((65535 - (20000- ((65535 - ((65535-posicion)+1))+1)))
      +                          +1) & 0x00FF;
  2752   002DA0  5048               	movf	_posicion^(0+1280),w,c
  2753   002DA2  0FE0               	addlw	224
  2754   002DA4  6F18               	movwf	24,b	;volatile
  2755                           
  2756                           ;maincode6.c: 72:     }
  2757   002DA6  0011               	retfie		f
  2758   002DA8                     i2l169:
  2759                           
  2760                           ;maincode6.c: 74:         LATCbits.LATC0 = 1;
  2761   002DA8  80C0               	bsf	192,0,c	;volatile
  2762                           
  2763                           ;maincode6.c: 75:         TMR0H = (((65535-posicion)+1) >> 8) & 0x00FF;
  2764   002DAA  5048               	movf	_posicion^(0+1280),w,c
  2765   002DAC  6E01               	movwf	??_TMR0_ISR^(0+1280),c
  2766   002DAE  5049               	movf	(_posicion+1)^(0+1280),w,c
  2767   002DB0  6E02               	movwf	(??_TMR0_ISR+1)^(0+1280),c
  2768   002DB2  6A03               	clrf	(??_TMR0_ISR+2)^(0+1280),c
  2769   002DB4  6A04               	clrf	(??_TMR0_ISR+3)^(0+1280),c
  2770   002DB6  5001               	movf	??_TMR0_ISR^(0+1280),w,c
  2771   002DB8  0800               	sublw	0
  2772   002DBA  6E05               	movwf	(??_TMR0_ISR+4)^(0+1280),c
  2773   002DBC  0E00               	movlw	0
  2774   002DBE  5402               	subfwb	(??_TMR0_ISR+1)^(0+1280),w,c
  2775   002DC0  6E06               	movwf	(??_TMR0_ISR+5)^(0+1280),c
  2776   002DC2  0E01               	movlw	1
  2777   002DC4  5403               	subfwb	(??_TMR0_ISR+2)^(0+1280),w,c
  2778   002DC6  6E07               	movwf	(??_TMR0_ISR+6)^(0+1280),c
  2779   002DC8  0E00               	movlw	0
  2780   002DCA  5404               	subfwb	(??_TMR0_ISR+3)^(0+1280),w,c
  2781   002DCC  6E08               	movwf	(??_TMR0_ISR+7)^(0+1280),c
  2782   002DCE  C506  F505         	movff	??_TMR0_ISR+5,??_TMR0_ISR+4
  2783   002DD2  C507  F506         	movff	??_TMR0_ISR+6,??_TMR0_ISR+5
  2784   002DD6  C508  F507         	movff	??_TMR0_ISR+7,??_TMR0_ISR+6
  2785   002DDA  6A08               	clrf	(??_TMR0_ISR+7)^(0+1280),c
  2786   002DDC  BE07               	btfsc	(??_TMR0_ISR+6)^(0+1280),7,c
  2787   002DDE  6808               	setf	(??_TMR0_ISR+7)^(0+1280),c
  2788   002DE0  5005               	movf	(??_TMR0_ISR+4)^(0+1280),w,c
  2789   002DE2  0103               	movlb	3	; () banked
  2790   002DE4  6F19               	movwf	25,b	;volatile
  2791                           
  2792                           ;maincode6.c: 76:         TMR0L = ((65535-posicion)+1) & 0x00FF;
  2793   002DE6  5048               	movf	_posicion^(0+1280),w,c
  2794   002DE8  0800               	sublw	0
  2795   002DEA  6F18               	movwf	24,b	;volatile
  2796                           
  2797                           ; BSR set to: 3
  2798   002DEC  0011               	retfie		f
  2799   002DEE                     __end_of_TMR0_ISR:
  2800                           	callstack 0
  2801                           
  2802 ;; *************** function _DEFAULT_ISR *****************
  2803 ;; Defined at:
  2804 ;;		line 80 in file "maincode6.c"
  2805 ;; Parameters:    Size  Location     Type
  2806 ;;		None
  2807 ;; Auto vars:     Size  Location     Type
  2808 ;;		None
  2809 ;; Return value:  Size  Location     Type
  2810 ;;                  1    wreg      void 
  2811 ;; Registers used:
  2812 ;;		None
  2813 ;; Tracked objects:
  2814 ;;		On entry : 0/0
  2815 ;;		On exit  : 0/0
  2816 ;;		Unchanged: 0/0
  2817 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2818 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2819 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2820 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2821 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2822 ;;Total ram usage:        0 bytes
  2823 ;; Hardware stack levels used: 1
  2824 ;; This function calls:
  2825 ;;		Nothing
  2826 ;; This function is called by:
  2827 ;;		Interrupt level 2
  2828 ;; This function uses a non-reentrant model
  2829 ;;
  2830                           
  2831                           	psect	text19
  2832   00304C                     __ptext19:
  2833                           	callstack 0
  2834   00304C                     _DEFAULT_ISR:
  2835                           	callstack 122
  2836                           
  2837                           ; BSR set to: 3
  2838                           ;incstack = 0
  2839   00304C  0011               	retfie		f
  2840   00304E                     __end_of_DEFAULT_ISR:
  2841                           	callstack 0
  2842                           
  2843                           ;
  2844                           ; Interrupt Vector Table @ 0x8
  2845                           ;
  2846                           
  2847                           	psect	ivt0x8
  2848   000008                     __pivt0x8:
  2849                           	callstack 0
  2850   000008                     ivt0x8_base:
  2851                           	callstack 0
  2852                           
  2853                           ; Vector 0 : SWINT
  2854   000008  0C13               	dw	_DEFAULT_ISR shr (0+2)
  2855                           
  2856                           ; Vector 1 : HLVD
  2857   00000A  0C13               	dw	_DEFAULT_ISR shr (0+2)
  2858                           
  2859                           ; Vector 2 : OSF
  2860   00000C  0C13               	dw	_DEFAULT_ISR shr (0+2)
  2861                           
  2862                           ; Vector 3 : CSW
  2863   00000E  0C13               	dw	_DEFAULT_ISR shr (0+2)
  2864                           
  2865                           ; Vector 4 : Undefined
  2866   000010  0040               	dw	ivt0x8_undefint shr (0+2)
  2867                           
  2868                           ; Vector 5 : CLC1
  2869   000012  0C13               	dw	_DEFAULT_ISR shr (0+2)
  2870                           
  2871                           ; Vector 6 : Undefined
  2872   000014  0040               	dw	ivt0x8_undefint shr (0+2)
  2873                           
  2874                           ; Vector 7 : IOC
  2875   000016  0C13               	dw	_DEFAULT_ISR shr (0+2)
  2876                           
  2877                           ; Vector 8 : INT0
  2878   000018  0C13               	dw	_DEFAULT_ISR shr (0+2)
  2879                           
  2880                           ; Vector 9 : ZCD
  2881   00001A  0C13               	dw	_DEFAULT_ISR shr (0+2)
  2882                           
  2883                           ; Vector 10 : AD
  2884   00001C  0C13               	dw	_DEFAULT_ISR shr (0+2)
  2885                           
  2886                           ; Vector 11 : ACT
  2887   00001E  0C13               	dw	_DEFAULT_ISR shr (0+2)
  2888                           
  2889                           ; Vector 12 : CMP1
  2890   000020  0C13               	dw	_DEFAULT_ISR shr (0+2)
  2891                           
  2892                           ; Vector 13 : SMT1
  2893   000022  0C13               	dw	_DEFAULT_ISR shr (0+2)
  2894                           
  2895                           ; Vector 14 : SMT1PRA
  2896   000024  0C13               	dw	_DEFAULT_ISR shr (0+2)
  2897                           
  2898                           ; Vector 15 : SMT1PRW
  2899   000026  0C13               	dw	_DEFAULT_ISR shr (0+2)
  2900                           
  2901                           ; Vector 16 : ADT
  2902   000028  0C13               	dw	_DEFAULT_ISR shr (0+2)
  2903                           
  2904                           ; Vector 17 : Undefined
  2905   00002A  0040               	dw	ivt0x8_undefint shr (0+2)
  2906                           
  2907                           ; Vector 18 : Undefined
  2908   00002C  0040               	dw	ivt0x8_undefint shr (0+2)
  2909                           
  2910                           ; Vector 19 : Undefined
  2911   00002E  0040               	dw	ivt0x8_undefint shr (0+2)
  2912                           
  2913                           ; Vector 20 : DMA1SCNT
  2914   000030  0C13               	dw	_DEFAULT_ISR shr (0+2)
  2915                           
  2916                           ; Vector 21 : DMA1DCNT
  2917   000032  0C13               	dw	_DEFAULT_ISR shr (0+2)
  2918                           
  2919                           ; Vector 22 : DMA1OR
  2920   000034  0C13               	dw	_DEFAULT_ISR shr (0+2)
  2921                           
  2922                           ; Vector 23 : DMA1A
  2923   000036  0C13               	dw	_DEFAULT_ISR shr (0+2)
  2924                           
  2925                           ; Vector 24 : SPI1RX
  2926   000038  0C13               	dw	_DEFAULT_ISR shr (0+2)
  2927                           
  2928                           ; Vector 25 : SPI1TX
  2929   00003A  0C13               	dw	_DEFAULT_ISR shr (0+2)
  2930                           
  2931                           ; Vector 26 : SPI1
  2932   00003C  0C13               	dw	_DEFAULT_ISR shr (0+2)
  2933                           
  2934                           ; Vector 27 : TMR2
  2935   00003E  0C13               	dw	_DEFAULT_ISR shr (0+2)
  2936                           
  2937                           ; Vector 28 : TMR1
  2938   000040  0C13               	dw	_DEFAULT_ISR shr (0+2)
  2939                           
  2940                           ; Vector 29 : TMR1G
  2941   000042  0C13               	dw	_DEFAULT_ISR shr (0+2)
  2942                           
  2943                           ; Vector 30 : CCP1
  2944   000044  0C13               	dw	_DEFAULT_ISR shr (0+2)
  2945                           
  2946                           ; Vector 31 : TMR0
  2947   000046  0B57               	dw	_TMR0_ISR shr (0+2)
  2948                           
  2949                           ; Vector 32 : U1RX
  2950   000048  0C13               	dw	_DEFAULT_ISR shr (0+2)
  2951                           
  2952                           ; Vector 33 : U1TX
  2953   00004A  0C13               	dw	_DEFAULT_ISR shr (0+2)
  2954                           
  2955                           ; Vector 34 : U1E
  2956   00004C  0C13               	dw	_DEFAULT_ISR shr (0+2)
  2957                           
  2958                           ; Vector 35 : U1
  2959   00004E  0C13               	dw	_DEFAULT_ISR shr (0+2)
  2960                           
  2961                           ; Vector 36 : Undefined
  2962   000050  0040               	dw	ivt0x8_undefint shr (0+2)
  2963                           
  2964                           ; Vector 37 : Undefined
  2965   000052  0040               	dw	ivt0x8_undefint shr (0+2)
  2966                           
  2967                           ; Vector 38 : PWM1PR
  2968   000054  0C13               	dw	_DEFAULT_ISR shr (0+2)
  2969                           
  2970                           ; Vector 39 : PWM1
  2971   000056  0C13               	dw	_DEFAULT_ISR shr (0+2)
  2972                           
  2973                           ; Vector 40 : SPI2RX
  2974   000058  0C13               	dw	_DEFAULT_ISR shr (0+2)
  2975                           
  2976                           ; Vector 41 : SPI2TX
  2977   00005A  0C13               	dw	_DEFAULT_ISR shr (0+2)
  2978                           
  2979                           ; Vector 42 : SPI2
  2980   00005C  0C13               	dw	_DEFAULT_ISR shr (0+2)
  2981                           
  2982                           ; Vector 43 : Undefined
  2983   00005E  0040               	dw	ivt0x8_undefint shr (0+2)
  2984                           
  2985                           ; Vector 44 : TMR3
  2986   000060  0C13               	dw	_DEFAULT_ISR shr (0+2)
  2987                           
  2988                           ; Vector 45 : TMR3G
  2989   000062  0C13               	dw	_DEFAULT_ISR shr (0+2)
  2990                           
  2991                           ; Vector 46 : PWM2PR
  2992   000064  0C13               	dw	_DEFAULT_ISR shr (0+2)
  2993                           
  2994                           ; Vector 47 : PWM2
  2995   000066  0C13               	dw	_DEFAULT_ISR shr (0+2)
  2996                           
  2997                           ; Vector 48 : INT1
  2998   000068  0C13               	dw	_DEFAULT_ISR shr (0+2)
  2999                           
  3000                           ; Vector 49 : CLC2
  3001   00006A  0C13               	dw	_DEFAULT_ISR shr (0+2)
  3002                           
  3003                           ; Vector 50 : CWG1
  3004   00006C  0C13               	dw	_DEFAULT_ISR shr (0+2)
  3005                           
  3006                           ; Vector 51 : NCO1
  3007   00006E  0C13               	dw	_DEFAULT_ISR shr (0+2)
  3008                           
  3009                           ; Vector 52 : DMA2SCNT
  3010   000070  0C13               	dw	_DEFAULT_ISR shr (0+2)
  3011                           
  3012                           ; Vector 53 : DMA2DCNT
  3013   000072  0C13               	dw	_DEFAULT_ISR shr (0+2)
  3014                           
  3015                           ; Vector 54 : DMA2OR
  3016   000074  0C13               	dw	_DEFAULT_ISR shr (0+2)
  3017                           
  3018                           ; Vector 55 : DMA2A
  3019   000076  0C13               	dw	_DEFAULT_ISR shr (0+2)
  3020                           
  3021                           ; Vector 56 : I2C1RX
  3022   000078  0C13               	dw	_DEFAULT_ISR shr (0+2)
  3023                           
  3024                           ; Vector 57 : I2C1TX
  3025   00007A  0C13               	dw	_DEFAULT_ISR shr (0+2)
  3026                           
  3027                           ; Vector 58 : I2C1
  3028   00007C  0C13               	dw	_DEFAULT_ISR shr (0+2)
  3029                           
  3030                           ; Vector 59 : I2C1E
  3031   00007E  0C13               	dw	_DEFAULT_ISR shr (0+2)
  3032                           
  3033                           ; Vector 60 : Undefined
  3034   000080  0040               	dw	ivt0x8_undefint shr (0+2)
  3035                           
  3036                           ; Vector 61 : CLC3
  3037   000082  0C13               	dw	_DEFAULT_ISR shr (0+2)
  3038                           
  3039                           ; Vector 62 : PWM3PR
  3040   000084  0C13               	dw	_DEFAULT_ISR shr (0+2)
  3041                           
  3042                           ; Vector 63 : PWM3
  3043   000086  0C13               	dw	_DEFAULT_ISR shr (0+2)
  3044                           
  3045                           ; Vector 64 : U2RX
  3046   000088  0C13               	dw	_DEFAULT_ISR shr (0+2)
  3047                           
  3048                           ; Vector 65 : U2TX
  3049   00008A  0C13               	dw	_DEFAULT_ISR shr (0+2)
  3050                           
  3051                           ; Vector 66 : U2E
  3052   00008C  0C13               	dw	_DEFAULT_ISR shr (0+2)
  3053                           
  3054                           ; Vector 67 : U2
  3055   00008E  0C13               	dw	_DEFAULT_ISR shr (0+2)
  3056                           
  3057                           ; Vector 68 : TMR5
  3058   000090  0C13               	dw	_DEFAULT_ISR shr (0+2)
  3059                           
  3060                           ; Vector 69 : TMR5G
  3061   000092  0C13               	dw	_DEFAULT_ISR shr (0+2)
  3062                           
  3063                           ; Vector 70 : CCP2
  3064   000094  0C13               	dw	_DEFAULT_ISR shr (0+2)
  3065                           
  3066                           ; Vector 71 : SCAN
  3067   000096  0C13               	dw	_DEFAULT_ISR shr (0+2)
  3068                           
  3069                           ; Vector 72 : U3RX
  3070   000098  0C13               	dw	_DEFAULT_ISR shr (0+2)
  3071                           
  3072                           ; Vector 73 : U3TX
  3073   00009A  0C13               	dw	_DEFAULT_ISR shr (0+2)
  3074                           
  3075                           ; Vector 74 : U3E
  3076   00009C  0C13               	dw	_DEFAULT_ISR shr (0+2)
  3077                           
  3078                           ; Vector 75 : U3
  3079   00009E  0C13               	dw	_DEFAULT_ISR shr (0+2)
  3080                           
  3081                           ; Vector 76 : Undefined
  3082   0000A0  0040               	dw	ivt0x8_undefint shr (0+2)
  3083                           
  3084                           ; Vector 77 : CLC4
  3085   0000A2  0C13               	dw	_DEFAULT_ISR shr (0+2)
  3086                           
  3087                           ; Vector 78 : Undefined
  3088   0000A4  0040               	dw	ivt0x8_undefint shr (0+2)
  3089                           
  3090                           ; Vector 79 : Undefined
  3091   0000A6  0040               	dw	ivt0x8_undefint shr (0+2)
  3092                           
  3093                           ; Vector 80 : INT2
  3094   0000A8  0C13               	dw	_DEFAULT_ISR shr (0+2)
  3095                           
  3096                           ; Vector 81 : CLC5
  3097   0000AA  0C13               	dw	_DEFAULT_ISR shr (0+2)
  3098                           
  3099                           ; Vector 82 : CWG2
  3100   0000AC  0C13               	dw	_DEFAULT_ISR shr (0+2)
  3101                           
  3102                           ; Vector 83 : NCO2
  3103   0000AE  0C13               	dw	_DEFAULT_ISR shr (0+2)
  3104                           
  3105                           ; Vector 84 : DMA3SCNT
  3106   0000B0  0C13               	dw	_DEFAULT_ISR shr (0+2)
  3107                           
  3108                           ; Vector 85 : DMA3DCNT
  3109   0000B2  0C13               	dw	_DEFAULT_ISR shr (0+2)
  3110                           
  3111                           ; Vector 86 : DMA3OR
  3112   0000B4  0C13               	dw	_DEFAULT_ISR shr (0+2)
  3113                           
  3114                           ; Vector 87 : DMA3A
  3115   0000B6  0C13               	dw	_DEFAULT_ISR shr (0+2)
  3116                           
  3117                           ; Vector 88 : CCP3
  3118   0000B8  0C13               	dw	_DEFAULT_ISR shr (0+2)
  3119                           
  3120                           ; Vector 89 : CLC6
  3121   0000BA  0C13               	dw	_DEFAULT_ISR shr (0+2)
  3122                           
  3123                           ; Vector 90 : CWG3
  3124   0000BC  0C13               	dw	_DEFAULT_ISR shr (0+2)
  3125                           
  3126                           ; Vector 91 : TMR4
  3127   0000BE  0C13               	dw	_DEFAULT_ISR shr (0+2)
  3128                           
  3129                           ; Vector 92 : DMA4SCNT
  3130   0000C0  0C13               	dw	_DEFAULT_ISR shr (0+2)
  3131                           
  3132                           ; Vector 93 : DMA4DCNT
  3133   0000C2  0C13               	dw	_DEFAULT_ISR shr (0+2)
  3134                           
  3135                           ; Vector 94 : DMA4OR
  3136   0000C4  0C13               	dw	_DEFAULT_ISR shr (0+2)
  3137                           
  3138                           ; Vector 95 : DMA4A
  3139   0000C6  0C13               	dw	_DEFAULT_ISR shr (0+2)
  3140                           
  3141                           ; Vector 96 : U4RX
  3142   0000C8  0C13               	dw	_DEFAULT_ISR shr (0+2)
  3143                           
  3144                           ; Vector 97 : U4TX
  3145   0000CA  0C13               	dw	_DEFAULT_ISR shr (0+2)
  3146                           
  3147                           ; Vector 98 : U4E
  3148   0000CC  0C13               	dw	_DEFAULT_ISR shr (0+2)
  3149                           
  3150                           ; Vector 99 : U4
  3151   0000CE  0C13               	dw	_DEFAULT_ISR shr (0+2)
  3152                           
  3153                           ; Vector 100 : DMA5SCNT
  3154   0000D0  0C13               	dw	_DEFAULT_ISR shr (0+2)
  3155                           
  3156                           ; Vector 101 : DMA5DCNT
  3157   0000D2  0C13               	dw	_DEFAULT_ISR shr (0+2)
  3158                           
  3159                           ; Vector 102 : DMA5OR
  3160   0000D4  0C13               	dw	_DEFAULT_ISR shr (0+2)
  3161                           
  3162                           ; Vector 103 : DMA5A
  3163   0000D6  0C13               	dw	_DEFAULT_ISR shr (0+2)
  3164                           
  3165                           ; Vector 104 : U5RX
  3166   0000D8  0C13               	dw	_DEFAULT_ISR shr (0+2)
  3167                           
  3168                           ; Vector 105 : U5TX
  3169   0000DA  0C13               	dw	_DEFAULT_ISR shr (0+2)
  3170                           
  3171                           ; Vector 106 : U5E
  3172   0000DC  0C13               	dw	_DEFAULT_ISR shr (0+2)
  3173                           
  3174                           ; Vector 107 : U5
  3175   0000DE  0C13               	dw	_DEFAULT_ISR shr (0+2)
  3176                           
  3177                           ; Vector 108 : DMA6SCNT
  3178   0000E0  0C13               	dw	_DEFAULT_ISR shr (0+2)
  3179                           
  3180                           ; Vector 109 : DMA6DCNT
  3181   0000E2  0C13               	dw	_DEFAULT_ISR shr (0+2)
  3182                           
  3183                           ; Vector 110 : DMA6OR
  3184   0000E4  0C13               	dw	_DEFAULT_ISR shr (0+2)
  3185                           
  3186                           ; Vector 111 : DMA6A
  3187   0000E6  0C13               	dw	_DEFAULT_ISR shr (0+2)
  3188                           
  3189                           ; Vector 112 : Undefined
  3190   0000E8  0040               	dw	ivt0x8_undefint shr (0+2)
  3191                           
  3192                           ; Vector 113 : CLC7
  3193   0000EA  0C13               	dw	_DEFAULT_ISR shr (0+2)
  3194                           
  3195                           ; Vector 114 : CMP2
  3196   0000EC  0C13               	dw	_DEFAULT_ISR shr (0+2)
  3197                           
  3198                           ; Vector 115 : NCO3
  3199   0000EE  0C13               	dw	_DEFAULT_ISR shr (0+2)
  3200                           
  3201                           ; Vector 116 : Undefined
  3202   0000F0  0040               	dw	ivt0x8_undefint shr (0+2)
  3203                           
  3204                           ; Vector 117 : Undefined
  3205   0000F2  0040               	dw	ivt0x8_undefint shr (0+2)
  3206                           
  3207                           ; Vector 118 : Undefined
  3208   0000F4  0040               	dw	ivt0x8_undefint shr (0+2)
  3209                           
  3210                           ; Vector 119 : Undefined
  3211   0000F6  0040               	dw	ivt0x8_undefint shr (0+2)
  3212                           
  3213                           ; Vector 120 : NVM
  3214   0000F8  0C13               	dw	_DEFAULT_ISR shr (0+2)
  3215                           
  3216                           ; Vector 121 : CLC8
  3217   0000FA  0C13               	dw	_DEFAULT_ISR shr (0+2)
  3218                           
  3219                           ; Vector 122 : CRC
  3220   0000FC  0C13               	dw	_DEFAULT_ISR shr (0+2)
  3221                           
  3222                           ; Vector 123 : TMR6
  3223   0000FE  0C13               	dw	_DEFAULT_ISR shr (0+2)
  3224   000100                     ivt0x8_undefint:
  3225                           	callstack 0
  3226   000100  00FF               	reset	
  3227                           
  3228                           	psect	rparam
  3229   000000                     
  3230                           	psect	config
  3231                           
  3232                           ;Config register CONFIG1 @ 0x300000
  3233                           ;	External Oscillator Selection
  3234                           ;	FEXTOSC = OFF, Oscillator not enabled
  3235                           ;	Reset Oscillator Selection
  3236                           ;	RSTOSC = EXTOSC, EXTOSC operating per FEXTOSC bits (device manufacturing default)
  3237   300000                     	org	3145728
  3238   300000  FC                 	db	252
  3239                           
  3240                           ;Config register CONFIG2 @ 0x300001
  3241                           ;	Clock out Enable bit
  3242                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
  3243                           ;	PRLOCKED One-Way Set Enable bit
  3244                           ;	PR1WAY = ON, PRLOCKED bit can be cleared and set only once
  3245                           ;	Clock Switch Enable bit
  3246                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
  3247                           ;	Fail-Safe Clock Monitor Enable bit
  3248                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
  3249   300001                     	org	3145729
  3250   300001  FF                 	db	255
  3251                           
  3252                           ;Config register CONFIG3 @ 0x300002
  3253                           ;	MCLR Enable bit
  3254                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
  3255                           ;	Power-up timer selection bits
  3256                           ;	PWRTS = PWRT_64, PWRT set at 64ms
  3257                           ;	Multi-vector enable bit
  3258                           ;	MVECEN = ON, Multi-vector enabled, Vector table used for interrupts
  3259                           ;	IVTLOCK bit One-way set enable bit
  3260                           ;	IVT1WAY = ON, IVTLOCKED bit can be cleared and set only once
  3261                           ;	Low Power BOR Enable bit
  3262                           ;	LPBOREN = OFF, Low-Power BOR disabled
  3263                           ;	Brown-out Reset Enable bits
  3264                           ;	BOREN = OFF, Brown-out Reset disabled
  3265   300002                     	org	3145730
  3266   300002  3D                 	db	61
  3267                           
  3268                           ;Config register CONFIG4 @ 0x300003
  3269                           ;	Brown-out Reset Voltage Selection bits
  3270                           ;	BORV = VBOR_1P9, Brown-out Reset Voltage (VBOR) set to 1.9V
  3271                           ;	ZCD Disable bit
  3272                           ;	ZCD = OFF, ZCD module is disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCD
      +                          CON
  3273                           ;	PPSLOCK bit One-Way Set Enable bit
  3274                           ;	PPS1WAY = ON, PPSLOCKED bit can be cleared and set only once; PPS registers remain loc
      +                          ked after one clear/set cycle
  3275                           ;	Stack Full/Underflow Reset Enable bit
  3276                           ;	STVREN = ON, Stack full/underflow will cause Reset
  3277                           ;	Low Voltage Programming Enable bit
  3278                           ;	LVP = OFF, HV on MCLR/VPP must be used for programming
  3279                           ;	Extended Instruction Set Enable bit
  3280                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
  3281   300003                     	org	3145731
  3282   300003  DF                 	db	223
  3283                           
  3284                           ;Config register CONFIG5 @ 0x300004
  3285                           ;	WDT Period selection bits
  3286                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  3287                           ;	WDT operating mode
  3288                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
  3289   300004                     	org	3145732
  3290   300004  9F                 	db	159
  3291                           
  3292                           ;Config register CONFIG6 @ 0x300005
  3293                           ;	WDT Window Select bits
  3294                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
  3295                           ;	WDT input clock selector
  3296                           ;	WDTCCS = SC, Software Control
  3297   300005                     	org	3145733
  3298   300005  FF                 	db	255
  3299                           
  3300                           ;Config register CONFIG7 @ 0x300006
  3301                           ;	Boot Block Size selection bits
  3302                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
  3303                           ;	Boot Block enable bit
  3304                           ;	BBEN = OFF, Boot block disabled
  3305                           ;	Storage Area Flash enable bit
  3306                           ;	SAFEN = OFF, SAF disabled
  3307                           ;	Background Debugger
  3308                           ;	DEBUG = OFF, Background Debugger disabled
  3309   300006                     	org	3145734
  3310   300006  FF                 	db	255
  3311                           
  3312                           ;Config register CONFIG8 @ 0x300007
  3313                           ;	Boot Block Write Protection bit
  3314                           ;	WRTB = OFF, Boot Block not Write protected
  3315                           ;	Configuration Register Write Protection bit
  3316                           ;	WRTC = OFF, Configuration registers not Write protected
  3317                           ;	Data EEPROM Write Protection bit
  3318                           ;	WRTD = OFF, Data EEPROM not Write protected
  3319                           ;	SAF Write protection bit
  3320                           ;	WRTSAF = OFF, SAF not Write Protected
  3321                           ;	Application Block write protection bit
  3322                           ;	WRTAPP = OFF, Application Block not write protected
  3323   300007                     	org	3145735
  3324   300007  FF                 	db	255
  3325                           
  3326                           ;Config register CONFIG10 @ 0x300009
  3327                           ;	PFM and Data EEPROM Code Protection bit
  3328                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
  3329   300009                     	org	3145737
  3330   300009  FF                 	db	255
  3331                           tosu	equ	0x4FF
  3332                           tosh	equ	0x4FE
  3333                           tosl	equ	0x4FD
  3334                           stkptr	equ	0x4FC
  3335                           pclatu	equ	0x4FB
  3336                           pclath	equ	0x4FA
  3337                           pcl	equ	0x4F9
  3338                           tblptru	equ	0x4F8
  3339                           tblptrh	equ	0x4F7
  3340                           tblptrl	equ	0x4F6
  3341                           tablat	equ	0x4F5
  3342                           prodh	equ	0x4F4
  3343                           prodl	equ	0x4F3
  3344                           indf0	equ	0x4EF
  3345                           postinc0	equ	0x4EE
  3346                           postdec0	equ	0x4ED
  3347                           preinc0	equ	0x4EC
  3348                           plusw0	equ	0x4EB
  3349                           fsr0h	equ	0x4EA
  3350                           fsr0l	equ	0x4E9
  3351                           wreg	equ	0x4E8
  3352                           indf1	equ	0x4E7
  3353                           postinc1	equ	0x4E6
  3354                           postdec1	equ	0x4E5
  3355                           preinc1	equ	0x4E4
  3356                           plusw1	equ	0x4E3
  3357                           fsr1h	equ	0x4E2
  3358                           fsr1l	equ	0x4E1
  3359                           bsr	equ	0x4E0
  3360                           indf2	equ	0x4DF
  3361                           postinc2	equ	0x4DE
  3362                           postdec2	equ	0x4DD
  3363                           preinc2	equ	0x4DC
  3364                           plusw2	equ	0x4DB
  3365                           fsr2h	equ	0x4DA
  3366                           fsr2l	equ	0x4D9
  3367                           status	equ	0x4D8

Data Sizes:
    Strings     15
    Constant    0
    Data        0
    BSS         8
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     65      73
    BANK5           160      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0
    BANK32          256      0       0
    BANK33          256      0       0
    BANK34          256      0       0
    BANK35          256      0       0
    BANK36          256      0       0

Pointer List with Targets:

    ESCRIBE_MENSAJE@cadena	PTR const unsigned char  size(1) Largest target is 15
		 -> STR_1(CODE[15]), 


Critical Paths under _main in COMRAM

    _main->___fladd
    _lcd_init->_CURSOR_ONOFF
    _lcd_init->_LCD_CONFIG
    _LCD_CONFIG->_ENVIA_LCD_CMD
    _CURSOR_ONOFF->_ENVIA_LCD_CMD
    _CURSOR_HOME->_ENVIA_LCD_CMD
    _BORRAR_LCD->_ENVIA_LCD_CMD
    ___fldiv->___xxtofl
    ___fladd->___fldiv
    _POS_CURSOR->_ENVIA_LCD_CMD
    _ENVIA_LCD_CMD->_ENVIA_NIBBLE
    _ENVIA_LCD_CMD->_LEER_LCD
    _ESCRIBE_MENSAJE->_ENVIA_CHAR
    _ENVIA_CHAR->_ENVIA_NIBBLE
    _ENVIA_CHAR->_LEER_LCD

Critical Paths under _TMR0_ISR in COMRAM

    None.

Critical Paths under _DEFAULT_ISR in COMRAM

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _TMR0_ISR in BANK5

    None.

Critical Paths under _DEFAULT_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _TMR0_ISR in BANK6

    None.

Critical Paths under _DEFAULT_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _TMR0_ISR in BANK7

    None.

Critical Paths under _DEFAULT_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _TMR0_ISR in BANK8

    None.

Critical Paths under _DEFAULT_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _TMR0_ISR in BANK9

    None.

Critical Paths under _DEFAULT_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _TMR0_ISR in BANK10

    None.

Critical Paths under _DEFAULT_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _TMR0_ISR in BANK11

    None.

Critical Paths under _DEFAULT_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _TMR0_ISR in BANK12

    None.

Critical Paths under _DEFAULT_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _TMR0_ISR in BANK13

    None.

Critical Paths under _DEFAULT_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _TMR0_ISR in BANK14

    None.

Critical Paths under _DEFAULT_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _TMR0_ISR in BANK15

    None.

Critical Paths under _DEFAULT_ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _TMR0_ISR in BANK16

    None.

Critical Paths under _DEFAULT_ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _TMR0_ISR in BANK17

    None.

Critical Paths under _DEFAULT_ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _TMR0_ISR in BANK18

    None.

Critical Paths under _DEFAULT_ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _TMR0_ISR in BANK19

    None.

Critical Paths under _DEFAULT_ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _TMR0_ISR in BANK20

    None.

Critical Paths under _DEFAULT_ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _TMR0_ISR in BANK21

    None.

Critical Paths under _DEFAULT_ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _TMR0_ISR in BANK22

    None.

Critical Paths under _DEFAULT_ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _TMR0_ISR in BANK23

    None.

Critical Paths under _DEFAULT_ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _TMR0_ISR in BANK24

    None.

Critical Paths under _DEFAULT_ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _TMR0_ISR in BANK25

    None.

Critical Paths under _DEFAULT_ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _TMR0_ISR in BANK26

    None.

Critical Paths under _DEFAULT_ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _TMR0_ISR in BANK27

    None.

Critical Paths under _DEFAULT_ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _TMR0_ISR in BANK28

    None.

Critical Paths under _DEFAULT_ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _TMR0_ISR in BANK29

    None.

Critical Paths under _DEFAULT_ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _TMR0_ISR in BANK30

    None.

Critical Paths under _DEFAULT_ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _TMR0_ISR in BANK31

    None.

Critical Paths under _DEFAULT_ISR in BANK31

    None.

Critical Paths under _main in BANK32

    None.

Critical Paths under _TMR0_ISR in BANK32

    None.

Critical Paths under _DEFAULT_ISR in BANK32

    None.

Critical Paths under _main in BANK33

    None.

Critical Paths under _TMR0_ISR in BANK33

    None.

Critical Paths under _DEFAULT_ISR in BANK33

    None.

Critical Paths under _main in BANK34

    None.

Critical Paths under _TMR0_ISR in BANK34

    None.

Critical Paths under _DEFAULT_ISR in BANK34

    None.

Critical Paths under _main in BANK35

    None.

Critical Paths under _TMR0_ISR in BANK35

    None.

Critical Paths under _DEFAULT_ISR in BANK35

    None.

Critical Paths under _main in BANK36

    None.

Critical Paths under _TMR0_ISR in BANK36

    None.

Critical Paths under _DEFAULT_ISR in BANK36

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    5662
                                             63 COMRAM     2     2      0
                    _ESCRIBE_MENSAJE
                         _POS_CURSOR
                            ___fladd
                            ___fldiv
                            ___fltol
                           ___xxtofl
                          _configuro
                           _lcd_init
                    _tomamuestra_ADC
 ---------------------------------------------------------------------------------
 (1) _tomamuestra_ADC                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             1     1      0     525
                                             12 COMRAM     1     1      0
                         _BORRAR_LCD
                        _CURSOR_HOME
                       _CURSOR_ONOFF
                         _LCD_CONFIG
 ---------------------------------------------------------------------------------
 (2) _LCD_CONFIG                                           1     1      0     135
                                             11 COMRAM     1     1      0
                      _ENVIA_LCD_CMD
                       _ENVIA_NIBBLE
 ---------------------------------------------------------------------------------
 (2) _CURSOR_ONOFF                                         1     1      0     150
                                             11 COMRAM     1     1      0
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _CURSOR_HOME                                          0     0      0     120
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _BORRAR_LCD                                           0     0      0     120
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (1) _configuro                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     398
                                              8 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (1) ___fltol                                             10     6      4     305
                                              8 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (1) ___fldiv                                             25    17      8    1399
                                             22 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) ___fladd                                             16     8      8    2388
                                             47 COMRAM    16     8      8
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _POS_CURSOR                                           2     1      1     284
                                             11 COMRAM     2     1      1
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (3) _ENVIA_LCD_CMD                                        2     2      0     120
                                              9 COMRAM     2     2      0
                       _ENVIA_NIBBLE
                           _LEER_LCD
 ---------------------------------------------------------------------------------
 (1) _ESCRIBE_MENSAJE                                      4     2      2     363
                                             11 COMRAM     4     2      2
                         _ENVIA_CHAR
 ---------------------------------------------------------------------------------
 (2) _ENVIA_CHAR                                           2     2      0     120
                                              9 COMRAM     2     2      0
                       _ENVIA_NIBBLE
                           _LEER_LCD
 ---------------------------------------------------------------------------------
 (4) _LEER_LCD                                             1     1      0      45
                                              8 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _ENVIA_NIBBLE                                         1     1      0      15
                                              8 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _TMR0_ISR                                             8     8      0       0
                                              0 COMRAM     8     8      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _DEFAULT_ISR                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ESCRIBE_MENSAJE
     _ENVIA_CHAR
       _ENVIA_NIBBLE
       _LEER_LCD
   _POS_CURSOR
     _ENVIA_LCD_CMD
       _ENVIA_NIBBLE
       _LEER_LCD
   ___fladd
     ___fldiv (ARG)
       ___xxtofl (ARG)
     ___xxtofl (ARG)
   ___fldiv
   ___fltol
   ___xxtofl
   _configuro
   _lcd_init
     _BORRAR_LCD
       _ENVIA_LCD_CMD
     _CURSOR_HOME
       _ENVIA_LCD_CMD
     _CURSOR_ONOFF
       _ENVIA_LCD_CMD
     _LCD_CONFIG
       _ENVIA_LCD_CMD
       _ENVIA_NIBBLE
   _tomamuestra_ADC

 _TMR0_ISR (ROOT)

 _DEFAULT_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0       0      70        0.0%
EEDATA             400      0       0       0        0.0%
BITBIGSFRlhhhll    264      0       0      84        0.0%
BITBIGSFR_1        100      0       0      69        0.0%
BITBANK36          100      0       0      67        0.0%
BANK36             100      0       0      68        0.0%
BITBANK35          100      0       0      65        0.0%
BANK35             100      0       0      66        0.0%
BITBANK34          100      0       0      63        0.0%
BANK34             100      0       0      64        0.0%
BITBANK33          100      0       0      61        0.0%
BANK33             100      0       0      62        0.0%
BITBANK32          100      0       0      59        0.0%
BANK32             100      0       0      60        0.0%
BITBANK31          100      0       0      57        0.0%
BANK31             100      0       0      58        0.0%
BITBANK30          100      0       0      55        0.0%
BANK30             100      0       0      56        0.0%
BITBANK29          100      0       0      53        0.0%
BANK29             100      0       0      54        0.0%
BITBANK28          100      0       0      51        0.0%
BANK28             100      0       0      52        0.0%
BITBANK27          100      0       0      49        0.0%
BANK27             100      0       0      50        0.0%
BITBANK26          100      0       0      47        0.0%
BANK26             100      0       0      48        0.0%
BITBANK25          100      0       0      45        0.0%
BANK25             100      0       0      46        0.0%
BITBANK24          100      0       0      42        0.0%
BANK24             100      0       0      43        0.0%
BITBANK23          100      0       0      40        0.0%
BANK23             100      0       0      41        0.0%
BITBANK22          100      0       0      38        0.0%
BANK22             100      0       0      39        0.0%
BITBANK21          100      0       0      36        0.0%
BANK21             100      0       0      37        0.0%
BITBANK20          100      0       0      34        0.0%
BANK20             100      0       0      35        0.0%
BITBANK19          100      0       0      32        0.0%
BANK19             100      0       0      33        0.0%
BITBANK18          100      0       0      30        0.0%
BANK18             100      0       0      31        0.0%
BITBANK17          100      0       0      28        0.0%
BANK17             100      0       0      29        0.0%
BITBANK16          100      0       0      26        0.0%
BANK16             100      0       0      27        0.0%
BITBANK15          100      0       0      24        0.0%
BANK15             100      0       0      25        0.0%
BITBANK14          100      0       0      22        0.0%
BANK14             100      0       0      23        0.0%
BITBANK13          100      0       0      20        0.0%
BANK13             100      0       0      21        0.0%
BITBANK12          100      0       0      18        0.0%
BANK12             100      0       0      19        0.0%
BITBANK11          100      0       0      16        0.0%
BANK11             100      0       0      17        0.0%
BITBANK10          100      0       0      14        0.0%
BANK10             100      0       0      15        0.0%
BITBANK9           100      0       0      12        0.0%
BANK9              100      0       0      13        0.0%
BITBANK8           100      0       0      10        0.0%
BANK8              100      0       0      11        0.0%
BITBANK7           100      0       0       8        0.0%
BANK7              100      0       0       9        0.0%
BITBANK6           100      0       0       6        0.0%
BANK6              100      0       0       7        0.0%
BITBIGSFRlhhhll     CE      0       0      83        0.0%
BITBIGSFRll         AD      0       0      87        0.0%
BITBANK5            A0      0       0       4        0.0%
BANK5               A0      0       0       5        0.0%
BITBIGSFRlhhhhh     88      0       0      77        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     41      49       1       76.8%
BITBIGSFRhhhh       29      0       0      71        0.0%
BITBIGSFRlhhhhh      F      0       0      76        0.0%
BITBIGSFRlhhhhh      E      0       0      75        0.0%
BITBIGSFRlhhhll      C      0       0      81        0.0%
BITBIGSFRlhhhlh      7      0       0      80        0.0%
BITBIGSFRlhhhhh      7      0       0      78        0.0%
BITBIGSFRlhhhll      6      0       0      82        0.0%
BITBIGSFRlhhhhl      6      0       0      79        0.0%
BITBIGSFRhhl         6      0       0      73        0.0%
BITBIGSFRhhhl        4      0       0      72        0.0%
BITBIGSFRhll         4      0       0      74        0.0%
BITBIGSFRlhl         3      0       0      86        0.0%
BITBIGSFRlhhl        1      0       0      85        0.0%
BIGSFR_1             0      0       0     200        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      49      44        0.0%
DATA                 0      0      49       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Thu Oct 26 21:38:21 2023

           ___fldiv@aexp 052F             ___fldiv@bexp 052E             ___fldiv@sign 0527  
                     l67 2E22            ENVIA_CHAR@aux 050B                      l153 3034  
                    l724 2726                      l708 2654                      l733 278C  
                    l709 2632                      l734 2788                      l841 2B62  
                    l834 2AE4                      l763 2990                      l774 29FE  
                    l926 3006                      l775 29FA                      l872 2E18  
                    l888 2E46              LEER_LCD@aux 0509                      wreg 04E8  
           ?_CURSOR_HOME 0501           ??_ENVIA_NIBBLE 0509             ___fltol@exp1 0512  
         ENVIA_CHAR@dato 050A                     l1502 2FCA                     l1520 2542  
                   l1610 2678                     l1620 269E                     l1540 2586  
                   l1516 253E                     l1552 25AA                     l1544 258A  
                   l1800 29C4                     l1618 269A                     l1722 284E  
                   l1492 2FE6                     l1628 26B0                     l1820 2A42  
                   l1900 2B12                     l1646 274A                     l1662 276A  
                   l1638 2716                     l1582 25E6                     l1750 28C2  
                   l1742 288E                     l1718 284A                     l1902 2B18  
                   l1656 2760                     l1824 2A66                     l1912 2B88  
                   l1904 2B24                     l1498 2FB6                     l1690 27F8  
                   l1682 27D2                     l1594 2640                     l1834 2A9C  
                   l1738 288A                     l1850 2CC0                     l1930 2BD4  
                   l1914 2B94                     l1906 2B4A                     l1596 2644  
                   l1836 2A9E                     l1828 2A90                     l1764 28F0  
                   l1756 28D8                     l1694 2800                     l1782 2968  
                   l1774 2940                     l1870 2D1A                     l1942 2C04  
                   l1696 2802                     l1794 29A6                     l1866 2D0A  
                   l1788 298E                     l1884 2D4A                     l1876 2D22  
                   l1878 2D2E                     l1894 2AF4                     STR_1 2501  
                   u1000 2608                     u1010 2618                     u1020 261A  
                   u1200 2782                     u1050 265C                     u1260 27DE  
                   u1180 276E                     u1500 2A50                     u1510 2A74  
                   _LATD 04C1                     u1530 2CAE                     u1460 29F4  
                   u1540 2CDE                     u1545 2CD4                     u1707 2F6C  
                   u1580 2D34                     u1660 2B9E                     u1717 2E60  
                   u1807 2E34                     u1727 2E6E                     u1817 2E3E  
                   u1737 2E7E                     u1827 3026                     u1747 2EFE  
                   u1757 2F32                     u1767 2DFA                     u1777 2E08  
                   u1787 2E12                     u1797 2E26                     _main 2BE6  
                   start 0102          ___fldiv@new_exp 0528            ?_CURSOR_ONOFF 0501  
      ??_tomamuestra_ADC 0509             ___param_bank 0000          ??_ENVIA_LCD_CMD 050A  
       __end_of_LEER_LCD 2E50            ___fltol@sign1 0511          __end_of___fladd 281E  
                  ?_main 0501                    _ADPCH 03EC          __end_of___fldiv 2AA6  
        __end_of___fltol 2D5C                    i2l169 2DA8                    _OSCEN 00B3  
                  _TMR0H 0319                    _TMR0L 0318                    _PORTD 04D1  
                  _TRISD 04C9         __end_of_TMR0_ISR 2DEE              ?_POS_CURSOR 050C  
                  tablat 04F5                    status 04D8           ??_CURSOR_ONOFF 050C  
        __initialization 2F84             __end_of_main 2CA2          _ESCRIBE_MENSAJE 2FAC  
                 ??_main 0540            __activetblptr 0001                   _ADRESH 03EB  
                 _ADRESL 03EA                   _ANSELD 0418                   _T0CON0 031A  
                 _T0CON1 031B                   _OSCFRQ 00B1         __end_of___xxtofl 2BE6  
       __end_of_lcd_init 2F84                ??___fladd 0538                ??___fldiv 051F  
   __end_of_ENVIA_NIBBLE 3030                ??___fltol 050D                   clear_0 2F8A  
                 isa$std 0001             __mediumconst 0000                   tblptrh 04F7  
                 tblptrl 04F6                   tblptru 04F8             ??_BORRAR_LCD 050C  
           ___xxtofl@arg 0513             ___xxtofl@exp 0512             ___xxtofl@val 0509  
              ?_LEER_LCD 0501               __accesstop 0560  __end_of__initialization 2F9E  
           ??_LCD_CONFIG 050C            ___rparam_used 0001             ??_ENVIA_CHAR 050A  
             ___fltol@f1 0509  __end_of_ESCRIBE_MENSAJE 2FD4           __pcstackCOMRAM 0501  
              ?_TMR0_ISR 0501           ivt0x8_undefint 0100       __end_of_BORRAR_LCD 304A  
       ENVIA_LCD_CMD@aux 050B     __end_of_CURSOR_ONOFF 3014       __end_of_LCD_CONFIG 2EB0  
     __end_of_ENVIA_CHAR 2F58          _tomamuestra_ADC 3030               ??_LEER_LCD 0509  
       ENVIA_NIBBLE@dato 0509                  IVTBASEH 045E                  IVTBASEL 045D  
                IVTBASEU 045F               ??_TMR0_ISR 0501            ??_DEFAULT_ISR 0509  
              ?___xxtofl 0509                  _OSCCON1 00AD             ??_POS_CURSOR 050D  
              ?_lcd_init 0501                  __Hparam 0000                  __Lparam 0000  
       ?_ESCRIBE_MENSAJE 050C        __end_of_configuro 2EF0                  ___fladd 2512  
                ___fldiv 281E                  ___fltol 2CA2             __psmallconst 2500  
  __end_of_ENVIA_LCD_CMD 2F24                  __pcinit 2F84       __end_of_POS_CURSOR 2FF8  
                __ramtop 2500                  __ptext0 2BE6                  __ptext1 3030  
                __ptext2 2F58                  __ptext3 2E50                  __ptext4 2FF8  
                __ptext5 303A                  __ptext6 3042                  __ptext7 2EB0  
                __ptext8 2AA6                  __ptext9 2CA2  __end_of_tomamuestra_ADC 303A  
             ??___xxtofl 050D               ??_lcd_init 050D             _ENVIA_NIBBLE 3014  
    __end_of_DEFAULT_ISR 304E     end_of_initialization 2F9E                  postinc0 04EE  
              _PORTCbits 04D0              ___fladd@grs 053F            ___xxtofl@sign 0511  
              _TRISAbits 04C6                _TRISBbits 04C7                _TRISCbits 04C8  
            ___fldiv@grs 052A              ___fldiv@rem 0523             _CURSOR_ONOFF 2FF8  
     CURSOR_ONOFF@estado 050C              _DEFAULT_ISR 304C            ??_CURSOR_HOME 050C  
       ?_tomamuestra_ADC 0501      start_initialization 2F84               ivt0x8_base 0008  
      ENVIA_LCD_CMD@dato 050A                ___fladd@a 0534                ___fladd@b 0530  
              ___fldiv@a 051B                ___fldiv@b 0517              __pbssCOMRAM 0542  
    __end_of_CURSOR_HOME 3042                 ?___fladd 0530                 ?___fldiv 0517  
               ?___fltol 0509                _configuro 2EB0              __smallconst 2500  
               _LEER_LCD 2DEE                 _LATCbits 04C0                 _LATDbits 04C1  
               _PIE3bits 04A1                 _PIR3bits 04B1                 _TMR0_ISR 2D5C  
       ESCRIBE_MENSAJE@i 050F           POS_CURSOR@fila 050D               ?_configuro 0501  
             _ADCON0bits 03F3                 _WPUBbits 0409              _CURSOR_HOME 303A  
            _INTCON0bits 04D6                 __Hrparam 0000              _lectura_adc 0546  
               __Lrparam 0000             __Lsmallconst 2500               _ANSELAbits 0400  
             _ANSELBbits 0408               _ANSELCbits 0410             ?_DEFAULT_ISR 0501  
               ___xxtofl 2AA6                 __pivt0x8 0008                 __ptext10 281E  
               __ptext11 2512                 __ptext12 2FD4                 __ptext13 2EF0  
               __ptext14 2FAC                 __ptext15 2F24                 __ptext16 2DEE  
               __ptext17 3014                 __ptext18 2D5C                 __ptext19 304C  
             _BORRAR_LCD 3042                 _lcd_init 2F58               _LCD_CONFIG 2E50  
             _ENVIA_CHAR 2F24                 isa$xinst 0000                 _temporal 0542  
               _posicion 0548            _ENVIA_LCD_CMD 2EF0              ??_configuro 0509  
      ??_ESCRIBE_MENSAJE 050E                 intlevel2 0000    ESCRIBE_MENSAJE@cadena 050C  
         ?_ENVIA_LCD_CMD 0501              ?_BORRAR_LCD 0501            ?_ENVIA_NIBBLE 0501  
          ___fladd@signs 053C               _POS_CURSOR 2FD4             ___fladd@aexp 053D  
           ___fladd@bexp 053E              ?_LCD_CONFIG 0501       ESCRIBE_MENSAJE@tam 050D  
            ?_ENVIA_CHAR 0501        POS_CURSOR@columna 050C  
