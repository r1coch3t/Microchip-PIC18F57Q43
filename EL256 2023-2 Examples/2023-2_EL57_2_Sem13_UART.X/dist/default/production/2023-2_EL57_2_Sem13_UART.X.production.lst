

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Wed Nov 08 20:51:26 2023

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F57Q43
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1
    22                           	psect	text13,global,reloc=2,class=CODE,delta=1
    23                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text16,global,reloc=2,class=CODE,delta=1
    26                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text18,global,reloc=2,class=CODE,delta=1
    28                           	psect	text19,global,reloc=2,class=CODE,delta=1
    29                           	psect	text20,global,reloc=2,class=CODE,delta=1
    30                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    31                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    32                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    33   000000                     
    34                           ; Generated 17/10/2023 GMT
    35                           ; 
    36                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    37                           ; All rights reserved.
    38                           ; 
    39                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    40                           ; 
    41                           ; Redistribution and use in source and binary forms, with or without modification, are
    42                           ; permitted provided that the following conditions are met:
    43                           ; 
    44                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    45                           ;        conditions and the following disclaimer.
    46                           ; 
    47                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    48                           ;        of conditions and the following disclaimer in the documentation and/or other
    49                           ;        materials provided with the distribution. Publication is not required when
    50                           ;        this file is used in an embedded application.
    51                           ; 
    52                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    53                           ;        software without specific prior written permission.
    54                           ; 
    55                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    56                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    57                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    58                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    59                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    60                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    61                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    62                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    63                           ; 
    64                           ; 
    65                           ; Code-generator required, PIC18F57Q43 Definitions
    66                           ; 
    67                           ; SFR Addresses
    68   000000                     _U1CON2	set	685
    69   000000                     _U1CON1	set	684
    70   000000                     _TRISCbits	set	1224
    71   000000                     _TRISBbits	set	1223
    72   000000                     _LATD	set	1217
    73   000000                     _OSCCON1	set	173
    74   000000                     _ANSELD	set	1048
    75   000000                     _LATDbits	set	1217
    76   000000                     _TRISAbits	set	1222
    77   000000                     _TRISD	set	1225
    78   000000                     _TRISFbits	set	1227
    79   000000                     _PORTD	set	1233
    80   000000                     _ANSELFbits	set	1064
    81   000000                     _OSCFRQ	set	177
    82   000000                     _OSCEN	set	179
    83   000000                     _RF0PPS	set	553
    84   000000                     _U1CON0	set	683
    85   000000                     _U1BRGL	set	686
    86   000000                     _U1BRGH	set	687
    87   000000                     _ADPCH	set	1004
    88   000000                     _ADCON0bits	set	1011
    89   000000                     _ANSELAbits	set	1024
    90   000000                     _ANSELBbits	set	1032
    91   000000                     _ANSELCbits	set	1040
    92   000000                     _WPUBbits	set	1033
    93   000000                     _U1ERRIRbits	set	690
    94   000000                     _U1TXB	set	675
    95   000000                     _ADRESL	set	1002
    96   000000                     _ADRESH	set	1003
    97                           
    98                           	psect	smallconst
    99   002500                     __psmallconst:
   100                           	callstack 0
   101   002500  00                 	db	0
   102   002501                     STR_3:
   103   002501  53                 	db	83	;'S'
   104   002502  69                 	db	105	;'i'
   105   002503  73                 	db	115	;'s'
   106   002504  74                 	db	116	;'t'
   107   002505  65                 	db	101	;'e'
   108   002506  6D                 	db	109	;'m'
   109   002507  61                 	db	97	;'a'
   110   002508  20                 	db	32
   111   002509  61                 	db	97	;'a'
   112   00250A  72                 	db	114	;'r'
   113   00250B  72                 	db	114	;'r'
   114   00250C  61                 	db	97	;'a'
   115   00250D  6E                 	db	110	;'n'
   116   00250E  63                 	db	99	;'c'
   117   00250F  61                 	db	97	;'a'
   118   002510  64                 	db	100	;'d'
   119   002511  6F                 	db	111	;'o'
   120   002512  21                 	db	33
   121   002513  00                 	db	0
   122   002514                     STR_2:
   123   002514  41                 	db	65	;'A'
   124   002515  72                 	db	114	;'r'
   125   002516  72                 	db	114	;'r'
   126   002517  61                 	db	97	;'a'
   127   002518  6E                 	db	110	;'n'
   128   002519  63                 	db	99	;'c'
   129   00251A  61                 	db	97	;'a'
   130   00251B  6E                 	db	110	;'n'
   131   00251C  64                 	db	100	;'d'
   132   00251D  6F                 	db	111	;'o'
   133   00251E  20                 	db	32
   134   00251F  73                 	db	115	;'s'
   135   002520  69                 	db	105	;'i'
   136   002521  73                 	db	115	;'s'
   137   002522  74                 	db	116	;'t'
   138   002523  65                 	db	101	;'e'
   139   002524  6D                 	db	109	;'m'
   140   002525  61                 	db	97	;'a'
   141   002526  00                 	db	0
   142   002527                     STR_1:
   143   002527  48                 	db	72	;'H'
   144   002528  6F                 	db	111	;'o'
   145   002529  6C                 	db	108	;'l'
   146   00252A  61                 	db	97	;'a'
   147   00252B  20                 	db	32
   148   00252C  53                 	db	83	;'S'
   149   00252D  65                 	db	101	;'e'
   150   00252E  6D                 	db	109	;'m'
   151   00252F  61                 	db	97	;'a'
   152   002530  6E                 	db	110	;'n'
   153   002531  61                 	db	97	;'a'
   154   002532  20                 	db	32
   155   002533  31                 	db	49	;'1'
   156   002534  33                 	db	51	;'3'
   157   002535  00                 	db	0
   158   002536                     STR_8:
   159   002536  43                 	db	67	;'C'
   160   002537  6F                 	db	111	;'o'
   161   002538  6C                 	db	108	;'l'
   162   002539  6F                 	db	111	;'o'
   163   00253A  72                 	db	114	;'r'
   164   00253B  20                 	db	32
   165   00253C  41                 	db	65	;'A'
   166   00253D  6D                 	db	109	;'m'
   167   00253E  61                 	db	97	;'a'
   168   00253F  72                 	db	114	;'r'
   169   002540  69                 	db	105	;'i'
   170   002541  6C                 	db	108	;'l'
   171   002542  6C                 	db	108	;'l'
   172   002543  6F                 	db	111	;'o'
   173   002544  00                 	db	0
   174   002545                     STR_4:
   175   002545  43                 	db	67	;'C'
   176   002546  61                 	db	97	;'a'
   177   002547  6E                 	db	110	;'n'
   178   002548  61                 	db	97	;'a'
   179   002549  6C                 	db	108	;'l'
   180   00254A  20                 	db	32
   181   00254B  41                 	db	65	;'A'
   182   00254C  4E                 	db	78	;'N'
   183   00254D  41                 	db	65	;'A'
   184   00254E  30                 	db	48	;'0'
   185   00254F  3A                 	db	58	;':'
   186   002550  00                 	db	0
   187   002551                     STR_6:
   188   002551  43                 	db	67	;'C'
   189   002552  6F                 	db	111	;'o'
   190   002553  6C                 	db	108	;'l'
   191   002554  6F                 	db	111	;'o'
   192   002555  72                 	db	114	;'r'
   193   002556  20                 	db	32
   194   002557  56                 	db	86	;'V'
   195   002558  65                 	db	101	;'e'
   196   002559  72                 	db	114	;'r'
   197   00255A  64                 	db	100	;'d'
   198   00255B  65                 	db	101	;'e'
   199   00255C  00                 	db	0
   200   00255D                     STR_14:
   201   00255D  43                 	db	67	;'C'
   202   00255E  6F                 	db	111	;'o'
   203   00255F  6C                 	db	108	;'l'
   204   002560  6F                 	db	111	;'o'
   205   002561  72                 	db	114	;'r'
   206   002562  20                 	db	32
   207   002563  4E                 	db	78	;'N'
   208   002564  65                 	db	101	;'e'
   209   002565  67                 	db	103	;'g'
   210   002566  72                 	db	114	;'r'
   211   002567  6F                 	db	111	;'o'
   212   002568  00                 	db	0
   213   002569                     STR_10:
   214   002569  43                 	db	67	;'C'
   215   00256A  6F                 	db	111	;'o'
   216   00256B  6C                 	db	108	;'l'
   217   00256C  6F                 	db	111	;'o'
   218   00256D  72                 	db	114	;'r'
   219   00256E  20                 	db	32
   220   00256F  41                 	db	65	;'A'
   221   002570  7A                 	db	122	;'z'
   222   002571  75                 	db	117	;'u'
   223   002572  6C                 	db	108	;'l'
   224   002573  00                 	db	0
   225   002574                     STR_12:
   226   002574  43                 	db	67	;'C'
   227   002575  6F                 	db	111	;'o'
   228   002576  6C                 	db	108	;'l'
   229   002577  6F                 	db	111	;'o'
   230   002578  72                 	db	114	;'r'
   231   002579  20                 	db	32
   232   00257A  52                 	db	82	;'R'
   233   00257B  6F                 	db	111	;'o'
   234   00257C  6A                 	db	106	;'j'
   235   00257D  6F                 	db	111	;'o'
   236   00257E  00                 	db	0
   237   00257F                     STR_5:
   238   00257F  20                 	db	32
   239   002580  20                 	db	32
   240   002581  20                 	db	32
   241   002582  20                 	db	32
   242   002583  56                 	db	86	;'V'
   243   002584  65                 	db	101	;'e'
   244   002585  72                 	db	114	;'r'
   245   002586  64                 	db	100	;'d'
   246   002587  65                 	db	101	;'e'
   247   002588  00                 	db	0
   248   002589                     STR_9:
   249   002589  20                 	db	32
   250   00258A  20                 	db	32
   251   00258B  20                 	db	32
   252   00258C  20                 	db	32
   253   00258D  20                 	db	32
   254   00258E  41                 	db	65	;'A'
   255   00258F  7A                 	db	122	;'z'
   256   002590  75                 	db	117	;'u'
   257   002591  6C                 	db	108	;'l'
   258   002592  00                 	db	0
   259   002593                     STR_11:
   260   002593  20                 	db	32
   261   002594  20                 	db	32
   262   002595  20                 	db	32
   263   002596  20                 	db	32
   264   002597  20                 	db	32
   265   002598  52                 	db	82	;'R'
   266   002599  6F                 	db	111	;'o'
   267   00259A  6A                 	db	106	;'j'
   268   00259B  6F                 	db	111	;'o'
   269   00259C  00                 	db	0
   270   00259D                     STR_13:
   271   00259D  20                 	db	32
   272   00259E  20                 	db	32
   273   00259F  20                 	db	32
   274   0025A0  20                 	db	32
   275   0025A1  4E                 	db	78	;'N'
   276   0025A2  65                 	db	101	;'e'
   277   0025A3  67                 	db	103	;'g'
   278   0025A4  72                 	db	114	;'r'
   279   0025A5  6F                 	db	111	;'o'
   280   0025A6  00                 	db	0
   281   0025A7  00                 	db	0	; dummy byte at the end
   282   000000                     
   283                           ; #config settings
   284                           
   285                           	psect	cinit
   286   002D82                     __pcinit:
   287                           	callstack 0
   288   002D82                     start_initialization:
   289                           	callstack 0
   290   002D82                     __initialization:
   291                           	callstack 0
   292                           
   293                           ; Clear objects allocated to COMRAM (2 bytes)
   294   002D82  6A1A               	clrf	(__pbssCOMRAM+1)& (0+255),c
   295   002D84  6A19               	clrf	__pbssCOMRAM& (0+255),c
   296   002D86                     end_of_initialization:
   297                           	callstack 0
   298   002D86                     __end_of__initialization:
   299                           	callstack 0
   300   002D86  0100               	movlb	0
   301   002D88  EFD4  F012         	goto	_main	;jump to C main() function
   302                           
   303                           	psect	bssCOMRAM
   304   000519                     __pbssCOMRAM:
   305                           	callstack 0
   306   000519                     _lectura_ADC:
   307                           	callstack 0
   308   000519                     	ds	2
   309                           
   310                           	psect	cstackCOMRAM
   311   000501                     __pcstackCOMRAM:
   312                           	callstack 0
   313   000501                     ?_strlen:
   314                           	callstack 0
   315   000501                     ?_tomamuestra_ADC:
   316                           	callstack 0
   317   000501                     ?___lwmod:
   318                           	callstack 0
   319   000501                     ENVIA_NIBBLE@dato:
   320                           	callstack 0
   321   000501                     LEER_LCD@aux:
   322                           	callstack 0
   323   000501                     U1_BYTE_SEND@dato:
   324                           	callstack 0
   325   000501                     strlen@s:
   326                           	callstack 0
   327   000501                     ___lwmod@dividend:
   328                           	callstack 0
   329                           
   330                           ; 2 bytes @ 0x0
   331   000501                     	ds	1
   332   000502                     ENVIA_CHAR@dato:
   333                           	callstack 0
   334   000502                     ENVIA_LCD_CMD@dato:
   335                           	callstack 0
   336                           
   337                           ; 1 bytes @ 0x1
   338   000502                     	ds	1
   339   000503                     ??_tomamuestra_ADC:
   340   000503                     ENVIA_CHAR@aux:
   341                           	callstack 0
   342   000503                     ENVIA_LCD_CMD@aux:
   343                           	callstack 0
   344   000503                     strlen@a:
   345                           	callstack 0
   346   000503                     ___lwmod@divisor:
   347                           	callstack 0
   348                           
   349                           ; 2 bytes @ 0x2
   350   000503                     	ds	1
   351   000504                     ??_LCD_CONFIG:
   352   000504                     POS_CURSOR@columna:
   353                           	callstack 0
   354   000504                     CURSOR_ONOFF@estado:
   355                           	callstack 0
   356   000504                     ESCRIBE_MENSAJE2@cadena:
   357                           	callstack 0
   358   000504                     U1_STRING_SEND@cadena:
   359                           	callstack 0
   360                           
   361                           ; 1 bytes @ 0x3
   362   000504                     	ds	1
   363   000505                     ??_ESCRIBE_MENSAJE2:
   364   000505                     ??_LCD_INIT:
   365   000505                     ??_U1_STRING_SEND:
   366   000505                     POS_CURSOR@fila:
   367                           	callstack 0
   368   000505                     ___lwmod@counter:
   369                           	callstack 0
   370                           
   371                           ; 1 bytes @ 0x4
   372   000505                     	ds	1
   373   000506                     ?___lwdiv:
   374                           	callstack 0
   375   000506                     ESCRIBE_MENSAJE2@tam:
   376                           	callstack 0
   377   000506                     U1_STRING_SEND@tam:
   378                           	callstack 0
   379   000506                     ___lwdiv@dividend:
   380                           	callstack 0
   381                           
   382                           ; 2 bytes @ 0x5
   383   000506                     	ds	1
   384   000507                     ESCRIBE_MENSAJE2@i:
   385                           	callstack 0
   386   000507                     U1_STRING_SEND@i:
   387                           	callstack 0
   388                           
   389                           ; 1 bytes @ 0x6
   390   000507                     	ds	1
   391   000508                     ___lwdiv@divisor:
   392                           	callstack 0
   393                           
   394                           ; 2 bytes @ 0x7
   395   000508                     	ds	2
   396   00050A                     ___lwdiv@quotient:
   397                           	callstack 0
   398                           
   399                           ; 2 bytes @ 0x9
   400   00050A                     	ds	2
   401   00050C                     ___lwdiv@counter:
   402                           	callstack 0
   403                           
   404                           ; 1 bytes @ 0xB
   405   00050C                     	ds	1
   406   00050D                     LCD_ESCRIBE_VAR_INT@numero:
   407                           	callstack 0
   408                           
   409                           ; 2 bytes @ 0xC
   410   00050D                     	ds	2
   411   00050F                     LCD_ESCRIBE_VAR_INT@n_digitos:
   412                           	callstack 0
   413                           
   414                           ; 1 bytes @ 0xE
   415   00050F                     	ds	1
   416   000510                     ??_LCD_ESCRIBE_VAR_INT:
   417                           
   418                           ; 1 bytes @ 0xF
   419   000510                     	ds	2
   420   000512                     LCD_ESCRIBE_VAR_INT@d_millar:
   421                           	callstack 0
   422                           
   423                           ; 1 bytes @ 0x11
   424   000512                     	ds	1
   425   000513                     LCD_ESCRIBE_VAR_INT@millar:
   426                           	callstack 0
   427                           
   428                           ; 1 bytes @ 0x12
   429   000513                     	ds	1
   430   000514                     LCD_ESCRIBE_VAR_INT@centena:
   431                           	callstack 0
   432                           
   433                           ; 1 bytes @ 0x13
   434   000514                     	ds	1
   435   000515                     LCD_ESCRIBE_VAR_INT@decena:
   436                           	callstack 0
   437                           
   438                           ; 1 bytes @ 0x14
   439   000515                     	ds	1
   440   000516                     LCD_ESCRIBE_VAR_INT@unidad:
   441                           	callstack 0
   442                           
   443                           ; 1 bytes @ 0x15
   444   000516                     	ds	1
   445   000517                     ??_main:
   446                           
   447                           ; 1 bytes @ 0x16
   448   000517                     	ds	2
   449                           
   450 ;;
   451 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   452 ;;
   453 ;; *************** function _main *****************
   454 ;; Defined at:
   455 ;;		line 77 in file "maincode3.c"
   456 ;; Parameters:    Size  Location     Type
   457 ;;		None
   458 ;; Auto vars:     Size  Location     Type
   459 ;;		None
   460 ;; Return value:  Size  Location     Type
   461 ;;                  1    wreg      void 
   462 ;; Registers used:
   463 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   464 ;; Tracked objects:
   465 ;;		On entry : 0/0
   466 ;;		On exit  : 0/0
   467 ;;		Unchanged: 0/0
   468 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   469 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   470 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   471 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   472 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   473 ;;Total ram usage:        2 bytes
   474 ;; Hardware stack levels required when called: 5
   475 ;; This function calls:
   476 ;;		_ESCRIBE_MENSAJE2
   477 ;;		_LCD_ESCRIBE_VAR_INT
   478 ;;		_POS_CURSOR
   479 ;;		_U1_NEW_LINE
   480 ;;		_U1_STRING_SEND
   481 ;;		_configuro
   482 ;;		_tomamuestra_ADC
   483 ;; This function is called by:
   484 ;;		Startup code after reset
   485 ;; This function uses a non-reentrant model
   486 ;;
   487                           
   488                           	psect	text0
   489   0025A8                     __ptext0:
   490                           	callstack 0
   491   0025A8                     _main:
   492                           	callstack 122
   493   0025A8                     
   494                           ;maincode3.c: 78:     configuro();
   495   0025A8  EC5A  F015         	call	_configuro	;wreg free
   496                           
   497                           ;maincode3.c: 79:     POS_CURSOR(1,0);
   498   0025AC  0E00               	movlw	0
   499   0025AE  6E04               	movwf	POS_CURSOR@columna^(0+1280),c
   500   0025B0  0E01               	movlw	1
   501   0025B2  EC78  F014         	call	_POS_CURSOR
   502   0025B6                     
   503                           ;maincode3.c: 80:     ESCRIBE_MENSAJE2("Hola Semana 13");
   504   0025B6  0E27               	movlw	low STR_1
   505   0025B8  6E04               	movwf	ESCRIBE_MENSAJE2@cadena^(0+1280),c
   506   0025BA  ECD7  F015         	call	_ESCRIBE_MENSAJE2	;wreg free
   507   0025BE                     
   508                           ;maincode3.c: 81:     U1_STRING_SEND("Arrancando sistema");
   509   0025BE  0E14               	movlw	low STR_2
   510   0025C0  6E04               	movwf	U1_STRING_SEND@cadena^(0+1280),c
   511   0025C2  ECB5  F015         	call	_U1_STRING_SEND	;wreg free
   512   0025C6                     
   513                           ;maincode3.c: 82:     U1_NEW_LINE();
   514   0025C6  EC80  F016         	call	_U1_NEW_LINE	;wreg free
   515   0025CA                     
   516                           ;maincode3.c: 83:     _delay((unsigned long)((3000)*(32000000UL/4000.0)));
   517   0025CA  0E7A               	movlw	122
   518   0025CC  6E18               	movwf	(??_main+1)^(0+1280),c
   519   0025CE  0EC1               	movlw	193
   520   0025D0  6E17               	movwf	??_main^(0+1280),c
   521   0025D2  0E82               	movlw	130
   522   0025D4                     u587:
   523   0025D4  2EE8               	decfsz	wreg,f,c
   524   0025D6  D7FE               	bra	u587
   525   0025D8  2E17               	decfsz	??_main^(0+1280),f,c
   526   0025DA  D7FC               	bra	u587
   527   0025DC  2E18               	decfsz	(??_main+1)^(0+1280),f,c
   528   0025DE  D7FA               	bra	u587
   529   0025E0                     
   530                           ;maincode3.c: 84:     U1_STRING_SEND("Sistema arrancado!");
   531   0025E0  0E01               	movlw	low STR_3
   532   0025E2  6E04               	movwf	U1_STRING_SEND@cadena^(0+1280),c
   533   0025E4  ECB5  F015         	call	_U1_STRING_SEND	;wreg free
   534   0025E8                     
   535                           ;maincode3.c: 85:     U1_NEW_LINE();
   536   0025E8  EC80  F016         	call	_U1_NEW_LINE	;wreg free
   537   0025EC                     
   538                           ;maincode3.c: 86:     _delay((unsigned long)((3000)*(32000000UL/4000.0)));
   539   0025EC  0E7A               	movlw	122
   540   0025EE  6E18               	movwf	(??_main+1)^(0+1280),c
   541   0025F0  0EC1               	movlw	193
   542   0025F2  6E17               	movwf	??_main^(0+1280),c
   543   0025F4  0E82               	movlw	130
   544   0025F6                     u597:
   545   0025F6  2EE8               	decfsz	wreg,f,c
   546   0025F8  D7FE               	bra	u597
   547   0025FA  2E17               	decfsz	??_main^(0+1280),f,c
   548   0025FC  D7FC               	bra	u597
   549   0025FE  2E18               	decfsz	(??_main+1)^(0+1280),f,c
   550   002600  D7FA               	bra	u597
   551   002602                     l1527:
   552                           
   553                           ;maincode3.c: 88:         lectura_ADC = tomamuestra_ADC();
   554   002602  EC94  F016         	call	_tomamuestra_ADC	;wreg free
   555   002606  C501  F519         	movff	?_tomamuestra_ADC,_lectura_ADC
   556   00260A  C502  F51A         	movff	?_tomamuestra_ADC+1,_lectura_ADC+1
   557   00260E                     
   558                           ;maincode3.c: 89:         POS_CURSOR(1,0);
   559   00260E  0E00               	movlw	0
   560   002610  6E04               	movwf	POS_CURSOR@columna^(0+1280),c
   561   002612  0E01               	movlw	1
   562   002614  EC78  F014         	call	_POS_CURSOR
   563   002618                     
   564                           ;maincode3.c: 90:         ESCRIBE_MENSAJE2("Canal ANA0:");
   565   002618  0E45               	movlw	low STR_4
   566   00261A  6E04               	movwf	ESCRIBE_MENSAJE2@cadena^(0+1280),c
   567   00261C  ECD7  F015         	call	_ESCRIBE_MENSAJE2	;wreg free
   568                           
   569                           ;maincode3.c: 91:         LCD_ESCRIBE_VAR_INT(lectura_ADC, 5);
   570   002620  C519  F50D         	movff	_lectura_ADC,LCD_ESCRIBE_VAR_INT@numero
   571   002624  C51A  F50E         	movff	_lectura_ADC+1,LCD_ESCRIBE_VAR_INT@numero+1
   572   002628  0E05               	movlw	5
   573   00262A  6E0F               	movwf	LCD_ESCRIBE_VAR_INT@n_digitos^(0+1280),c
   574   00262C  ECB4  F013         	call	_LCD_ESCRIBE_VAR_INT	;wreg free
   575   002630                     
   576                           ;maincode3.c: 92:         if(lectura_ADC >= 0 && lectura_ADC < 400){
   577   002630  0E90               	movlw	144
   578   002632  5C19               	subwf	_lectura_ADC^(0+1280),w,c
   579   002634  0E01               	movlw	1
   580   002636  581A               	subwfb	(_lectura_ADC+1)^(0+1280),w,c
   581   002638  B0D8               	btfsc	status,0,c
   582   00263A  EF21  F013         	goto	u511
   583   00263E  EF23  F013         	goto	u510
   584   002642                     u511:
   585   002642  EF34  F013         	goto	l1543
   586   002646                     u510:
   587   002646                     
   588                           ;maincode3.c: 93:             POS_CURSOR(2,0);
   589   002646  0E00               	movlw	0
   590   002648  6E04               	movwf	POS_CURSOR@columna^(0+1280),c
   591   00264A  0E02               	movlw	2
   592   00264C  EC78  F014         	call	_POS_CURSOR
   593   002650                     
   594                           ;maincode3.c: 94:             ESCRIBE_MENSAJE2("    Verde");
   595   002650  0E7F               	movlw	low STR_5
   596   002652  6E04               	movwf	ESCRIBE_MENSAJE2@cadena^(0+1280),c
   597   002654  ECD7  F015         	call	_ESCRIBE_MENSAJE2	;wreg free
   598   002658                     
   599                           ;maincode3.c: 95:             U1_STRING_SEND("Color Verde");
   600   002658  0E51               	movlw	low STR_6
   601   00265A  6E04               	movwf	U1_STRING_SEND@cadena^(0+1280),c
   602   00265C  ECB5  F015         	call	_U1_STRING_SEND	;wreg free
   603   002660                     l1541:
   604                           
   605                           ;maincode3.c: 96:             U1_NEW_LINE();
   606   002660  EC80  F016         	call	_U1_NEW_LINE	;wreg free
   607                           
   608                           ;maincode3.c: 97:         }
   609   002664  EF01  F013         	goto	l1527
   610   002668                     l1543:
   611   002668  0E90               	movlw	144
   612   00266A  5C19               	subwf	_lectura_ADC^(0+1280),w,c
   613   00266C  0E01               	movlw	1
   614   00266E  581A               	subwfb	(_lectura_ADC+1)^(0+1280),w,c
   615   002670  A0D8               	btfss	status,0,c
   616   002672  EF3D  F013         	goto	u521
   617   002676  EF3F  F013         	goto	u520
   618   00267A                     u521:
   619   00267A  EF59  F013         	goto	l1555
   620   00267E                     u520:
   621   00267E  0E20               	movlw	32
   622   002680  5C19               	subwf	_lectura_ADC^(0+1280),w,c
   623   002682  0E03               	movlw	3
   624   002684  581A               	subwfb	(_lectura_ADC+1)^(0+1280),w,c
   625   002686  B0D8               	btfsc	status,0,c
   626   002688  EF48  F013         	goto	u531
   627   00268C  EF4A  F013         	goto	u530
   628   002690                     u531:
   629   002690  EF59  F013         	goto	l1555
   630   002694                     u530:
   631   002694                     
   632                           ;maincode3.c: 99:             POS_CURSOR(2,0);
   633   002694  0E00               	movlw	0
   634   002696  6E04               	movwf	POS_CURSOR@columna^(0+1280),c
   635   002698  0E02               	movlw	2
   636   00269A  EC78  F014         	call	_POS_CURSOR
   637   00269E                     
   638                           ;maincode3.c: 100:             ESCRIBE_MENSAJE2(" Amarillo");
   639   00269E  0E3B               	movlw	low (STR_8+5)
   640   0026A0  6E04               	movwf	ESCRIBE_MENSAJE2@cadena^(0+1280),c
   641   0026A2  ECD7  F015         	call	_ESCRIBE_MENSAJE2	;wreg free
   642   0026A6                     
   643                           ;maincode3.c: 101:             U1_STRING_SEND("Color Amarillo");
   644   0026A6  0E36               	movlw	low STR_8
   645   0026A8  6E04               	movwf	U1_STRING_SEND@cadena^(0+1280),c
   646   0026AA  ECB5  F015         	call	_U1_STRING_SEND	;wreg free
   647   0026AE  EF30  F013         	goto	l1541
   648   0026B2                     l1555:
   649   0026B2  0E20               	movlw	32
   650   0026B4  5C19               	subwf	_lectura_ADC^(0+1280),w,c
   651   0026B6  0E03               	movlw	3
   652   0026B8  581A               	subwfb	(_lectura_ADC+1)^(0+1280),w,c
   653   0026BA  A0D8               	btfss	status,0,c
   654   0026BC  EF62  F013         	goto	u541
   655   0026C0  EF64  F013         	goto	u540
   656   0026C4                     u541:
   657   0026C4  EF7E  F013         	goto	l1567
   658   0026C8                     u540:
   659   0026C8  0EB0               	movlw	176
   660   0026CA  5C19               	subwf	_lectura_ADC^(0+1280),w,c
   661   0026CC  0E04               	movlw	4
   662   0026CE  581A               	subwfb	(_lectura_ADC+1)^(0+1280),w,c
   663   0026D0  B0D8               	btfsc	status,0,c
   664   0026D2  EF6D  F013         	goto	u551
   665   0026D6  EF6F  F013         	goto	u550
   666   0026DA                     u551:
   667   0026DA  EF7E  F013         	goto	l1567
   668   0026DE                     u550:
   669   0026DE                     
   670                           ;maincode3.c: 105:             POS_CURSOR(2,0);
   671   0026DE  0E00               	movlw	0
   672   0026E0  6E04               	movwf	POS_CURSOR@columna^(0+1280),c
   673   0026E2  0E02               	movlw	2
   674   0026E4  EC78  F014         	call	_POS_CURSOR
   675   0026E8                     
   676                           ;maincode3.c: 106:             ESCRIBE_MENSAJE2("     Azul");
   677   0026E8  0E89               	movlw	low STR_9
   678   0026EA  6E04               	movwf	ESCRIBE_MENSAJE2@cadena^(0+1280),c
   679   0026EC  ECD7  F015         	call	_ESCRIBE_MENSAJE2	;wreg free
   680   0026F0                     
   681                           ;maincode3.c: 107:             U1_STRING_SEND("Color Azul");
   682   0026F0  0E69               	movlw	low STR_10
   683   0026F2  6E04               	movwf	U1_STRING_SEND@cadena^(0+1280),c
   684   0026F4  ECB5  F015         	call	_U1_STRING_SEND	;wreg free
   685   0026F8  EF30  F013         	goto	l1541
   686   0026FC                     l1567:
   687   0026FC  0EB0               	movlw	176
   688   0026FE  5C19               	subwf	_lectura_ADC^(0+1280),w,c
   689   002700  0E04               	movlw	4
   690   002702  581A               	subwfb	(_lectura_ADC+1)^(0+1280),w,c
   691   002704  A0D8               	btfss	status,0,c
   692   002706  EF87  F013         	goto	u561
   693   00270A  EF89  F013         	goto	u560
   694   00270E                     u561:
   695   00270E  EFA3  F013         	goto	l1579
   696   002712                     u560:
   697   002712  0E40               	movlw	64
   698   002714  5C19               	subwf	_lectura_ADC^(0+1280),w,c
   699   002716  0E06               	movlw	6
   700   002718  581A               	subwfb	(_lectura_ADC+1)^(0+1280),w,c
   701   00271A  B0D8               	btfsc	status,0,c
   702   00271C  EF92  F013         	goto	u571
   703   002720  EF94  F013         	goto	u570
   704   002724                     u571:
   705   002724  EFA3  F013         	goto	l1579
   706   002728                     u570:
   707   002728                     
   708                           ;maincode3.c: 111:             POS_CURSOR(2,0);
   709   002728  0E00               	movlw	0
   710   00272A  6E04               	movwf	POS_CURSOR@columna^(0+1280),c
   711   00272C  0E02               	movlw	2
   712   00272E  EC78  F014         	call	_POS_CURSOR
   713   002732                     
   714                           ;maincode3.c: 112:             ESCRIBE_MENSAJE2("     Rojo");
   715   002732  0E93               	movlw	low STR_11
   716   002734  6E04               	movwf	ESCRIBE_MENSAJE2@cadena^(0+1280),c
   717   002736  ECD7  F015         	call	_ESCRIBE_MENSAJE2	;wreg free
   718   00273A                     
   719                           ;maincode3.c: 113:             U1_STRING_SEND("Color Rojo");
   720   00273A  0E74               	movlw	low STR_12
   721   00273C  6E04               	movwf	U1_STRING_SEND@cadena^(0+1280),c
   722   00273E  ECB5  F015         	call	_U1_STRING_SEND	;wreg free
   723   002742  EF30  F013         	goto	l1541
   724   002746                     l1579:
   725                           
   726                           ;maincode3.c: 117:             POS_CURSOR(2,0);
   727   002746  0E00               	movlw	0
   728   002748  6E04               	movwf	POS_CURSOR@columna^(0+1280),c
   729   00274A  0E02               	movlw	2
   730   00274C  EC78  F014         	call	_POS_CURSOR
   731   002750                     
   732                           ;maincode3.c: 118:             ESCRIBE_MENSAJE2("    Negro");
   733   002750  0E9D               	movlw	low STR_13
   734   002752  6E04               	movwf	ESCRIBE_MENSAJE2@cadena^(0+1280),c
   735   002754  ECD7  F015         	call	_ESCRIBE_MENSAJE2	;wreg free
   736   002758                     
   737                           ;maincode3.c: 119:             U1_STRING_SEND("Color Negro");
   738   002758  0E5D               	movlw	low STR_14
   739   00275A  6E04               	movwf	U1_STRING_SEND@cadena^(0+1280),c
   740   00275C  ECB5  F015         	call	_U1_STRING_SEND	;wreg free
   741   002760  EF30  F013         	goto	l1541
   742   002764  EFFE  F0FF         	goto	start
   743   002768                     __end_of_main:
   744                           	callstack 0
   745                           
   746 ;; *************** function _tomamuestra_ADC *****************
   747 ;; Defined at:
   748 ;;		line 71 in file "maincode3.c"
   749 ;; Parameters:    Size  Location     Type
   750 ;;		None
   751 ;; Auto vars:     Size  Location     Type
   752 ;;		None
   753 ;; Return value:  Size  Location     Type
   754 ;;                  2    0[COMRAM] unsigned int 
   755 ;; Registers used:
   756 ;;		wreg, status,2, status,0
   757 ;; Tracked objects:
   758 ;;		On entry : 0/0
   759 ;;		On exit  : 0/0
   760 ;;		Unchanged: 0/0
   761 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   762 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   763 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   764 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   765 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   766 ;;Total ram usage:        4 bytes
   767 ;; Hardware stack levels used: 1
   768 ;; This function calls:
   769 ;;		Nothing
   770 ;; This function is called by:
   771 ;;		_main
   772 ;; This function uses a non-reentrant model
   773 ;;
   774                           
   775                           	psect	text1
   776   002D28                     __ptext1:
   777                           	callstack 0
   778   002D28                     _tomamuestra_ADC:
   779                           	callstack 126
   780   002D28                     
   781                           ;maincode3.c: 72:     ADCON0bits.GO = 1;
   782   002D28  0103               	movlb	3	; () banked
   783   002D2A  81F3               	bsf	243,0,b	;volatile
   784   002D2C                     l220:
   785                           
   786                           ; BSR set to: 3
   787   002D2C  B1F3               	btfsc	243,0,b	;volatile
   788   002D2E  EF9B  F016         	goto	u501
   789   002D32  EF9D  F016         	goto	u500
   790   002D36                     u501:
   791   002D36  EF96  F016         	goto	l220
   792   002D3A                     u500:
   793   002D3A                     
   794                           ; BSR set to: 3
   795                           ;maincode3.c: 74:     return (ADRESH << 8) + ADRESL;
   796   002D3A  51EB               	movf	235,w,b	;volatile
   797   002D3C  6E04               	movwf	(??_tomamuestra_ADC+1)^(0+1280),c
   798   002D3E  6A03               	clrf	??_tomamuestra_ADC^(0+1280),c
   799   002D40  51EA               	movf	234,w,b	;volatile
   800   002D42  2403               	addwf	??_tomamuestra_ADC^(0+1280),w,c
   801   002D44  6E01               	movwf	?_tomamuestra_ADC^(0+1280),c
   802   002D46  0E00               	movlw	0
   803   002D48  2004               	addwfc	(??_tomamuestra_ADC+1)^(0+1280),w,c
   804   002D4A  6E02               	movwf	(?_tomamuestra_ADC+1)^(0+1280),c
   805   002D4C                     
   806                           ; BSR set to: 3
   807   002D4C  0012               	return		;funcret
   808   002D4E                     __end_of_tomamuestra_ADC:
   809                           	callstack 0
   810                           
   811 ;; *************** function _configuro *****************
   812 ;; Defined at:
   813 ;;		line 9 in file "maincode3.c"
   814 ;; Parameters:    Size  Location     Type
   815 ;;		None
   816 ;; Auto vars:     Size  Location     Type
   817 ;;		None
   818 ;; Return value:  Size  Location     Type
   819 ;;                  1    wreg      void 
   820 ;; Registers used:
   821 ;;		wreg, status,2, status,0, cstack
   822 ;; Tracked objects:
   823 ;;		On entry : 0/0
   824 ;;		On exit  : 0/0
   825 ;;		Unchanged: 0/0
   826 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   827 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   828 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   829 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   830 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   831 ;;Total ram usage:        0 bytes
   832 ;; Hardware stack levels used: 1
   833 ;; Hardware stack levels required when called: 4
   834 ;; This function calls:
   835 ;;		_LCD_INIT
   836 ;; This function is called by:
   837 ;;		_main
   838 ;; This function uses a non-reentrant model
   839 ;;
   840                           
   841                           	psect	text2
   842   002AB4                     __ptext2:
   843                           	callstack 0
   844   002AB4                     _configuro:
   845                           	callstack 122
   846   002AB4                     
   847                           ;maincode3.c: 11:     OSCCON1 = 0x60;
   848   002AB4  0E60               	movlw	96
   849   002AB6  0100               	movlb	0	; () banked
   850   002AB8  6FAD               	movwf	173,b	;volatile
   851                           
   852                           ;maincode3.c: 12:     OSCFRQ = 0x06;
   853   002ABA  0E06               	movlw	6
   854   002ABC  6FB1               	movwf	177,b	;volatile
   855                           
   856                           ;maincode3.c: 13:     OSCEN = 0x40;
   857   002ABE  0E40               	movlw	64
   858   002AC0  6FB3               	movwf	179,b	;volatile
   859   002AC2                     
   860                           ; BSR set to: 0
   861                           ;maincode3.c: 15:     TRISAbits.TRISA0 = 1;
   862   002AC2  80C6               	bsf	198,0,c	;volatile
   863   002AC4                     
   864                           ; BSR set to: 0
   865                           ;maincode3.c: 16:     ANSELAbits.ANSELA0 = 1;
   866   002AC4  0104               	movlb	4	; () banked
   867   002AC6  8100               	bsf	0,0,b	;volatile
   868   002AC8                     
   869                           ; BSR set to: 4
   870                           ;maincode3.c: 17:     TRISBbits.TRISB0 = 1;
   871   002AC8  80C7               	bsf	199,0,c	;volatile
   872   002ACA                     
   873                           ; BSR set to: 4
   874                           ;maincode3.c: 18:     ANSELBbits.ANSELB0 = 0;
   875   002ACA  9108               	bcf	8,0,b	;volatile
   876   002ACC                     
   877                           ; BSR set to: 4
   878                           ;maincode3.c: 19:     WPUBbits.WPUB0 = 1;
   879   002ACC  8109               	bsf	9,0,b	;volatile
   880   002ACE                     
   881                           ; BSR set to: 4
   882                           ;maincode3.c: 20:     TRISBbits.TRISB1 = 1;
   883   002ACE  82C7               	bsf	199,1,c	;volatile
   884   002AD0                     
   885                           ; BSR set to: 4
   886                           ;maincode3.c: 21:     ANSELBbits.ANSELB1 = 0;
   887   002AD0  9308               	bcf	8,1,b	;volatile
   888   002AD2                     
   889                           ; BSR set to: 4
   890                           ;maincode3.c: 22:     WPUBbits.WPUB1 = 1;
   891   002AD2  8309               	bsf	9,1,b	;volatile
   892   002AD4                     
   893                           ; BSR set to: 4
   894                           ;maincode3.c: 23:     TRISCbits.TRISC0 = 0;
   895   002AD4  90C8               	bcf	200,0,c	;volatile
   896   002AD6                     
   897                           ; BSR set to: 4
   898                           ;maincode3.c: 24:     ANSELCbits.ANSELC0 = 0;
   899   002AD6  9110               	bcf	16,0,b	;volatile
   900   002AD8                     
   901                           ; BSR set to: 4
   902                           ;maincode3.c: 25:     TRISCbits.TRISC1 = 0;
   903   002AD8  92C8               	bcf	200,1,c	;volatile
   904   002ADA                     
   905                           ; BSR set to: 4
   906                           ;maincode3.c: 26:     ANSELCbits.ANSELC1 = 0;
   907   002ADA  9310               	bcf	16,1,b	;volatile
   908   002ADC                     
   909                           ; BSR set to: 4
   910                           ;maincode3.c: 27:     TRISFbits.TRISF0 = 0;
   911   002ADC  90CB               	bcf	203,0,c	;volatile
   912   002ADE                     
   913                           ; BSR set to: 4
   914                           ;maincode3.c: 28:     ANSELFbits.ANSELF0 = 0;
   915   002ADE  9128               	bcf	40,0,b	;volatile
   916   002AE0                     
   917                           ; BSR set to: 4
   918                           ;maincode3.c: 29:     TRISFbits.TRISF1 = 1;
   919   002AE0  82CB               	bsf	203,1,c	;volatile
   920   002AE2                     
   921                           ; BSR set to: 4
   922                           ;maincode3.c: 30:     ANSELFbits.ANSELF1 = 0;
   923   002AE2  9328               	bcf	40,1,b	;volatile
   924                           
   925                           ;maincode3.c: 32:     ADCON0bits.ADFM = 1;
   926   002AE4  0103               	movlb	3	; () banked
   927   002AE6  51F3               	movf	243,w,b	;volatile
   928   002AE8  0BF3               	andlw	-13
   929   002AEA  0904               	iorlw	4
   930   002AEC  6FF3               	movwf	243,b	;volatile
   931   002AEE                     
   932                           ; BSR set to: 3
   933                           ;maincode3.c: 33:     ADCON0bits.CS = 1;
   934   002AEE  89F3               	bsf	243,4,b	;volatile
   935                           
   936                           ;maincode3.c: 34:     ADPCH = 0x00;
   937   002AF0  0E00               	movlw	0
   938   002AF2  6FEC               	movwf	236,b	;volatile
   939   002AF4                     
   940                           ; BSR set to: 3
   941                           ;maincode3.c: 35:     ADCON0bits.ADON = 1;
   942   002AF4  8FF3               	bsf	243,7,b	;volatile
   943                           
   944                           ;maincode3.c: 37:     U1BRGH = 0;
   945   002AF6  0E00               	movlw	0
   946   002AF8  0102               	movlb	2	; () banked
   947   002AFA  6FAF               	movwf	175,b	;volatile
   948                           
   949                           ;maincode3.c: 38:     U1BRGL = 207;
   950   002AFC  0ECF               	movlw	207
   951   002AFE  6FAE               	movwf	174,b	;volatile
   952                           
   953                           ;maincode3.c: 39:     U1CON0 = 0x20;
   954   002B00  0E20               	movlw	32
   955   002B02  6FAB               	movwf	171,b	;volatile
   956                           
   957                           ;maincode3.c: 40:     U1CON1 = 0x80;
   958   002B04  0E80               	movlw	128
   959   002B06  6FAC               	movwf	172,b	;volatile
   960                           
   961                           ;maincode3.c: 41:     U1CON2 = 0x00;
   962   002B08  0E00               	movlw	0
   963   002B0A  6FAD               	movwf	173,b	;volatile
   964                           
   965                           ;maincode3.c: 42:     RF0PPS = 0x20;
   966   002B0C  0E20               	movlw	32
   967   002B0E  6F29               	movwf	41,b	;volatile
   968   002B10                     
   969                           ; BSR set to: 2
   970                           ;maincode3.c: 44:     LCD_INIT();
   971   002B10  ECF9  F015         	call	_LCD_INIT	;wreg free
   972   002B14  0012               	return		;funcret
   973   002B16                     __end_of_configuro:
   974                           	callstack 0
   975                           
   976 ;; *************** function _LCD_INIT *****************
   977 ;; Defined at:
   978 ;;		line 192 in file "LCD.c"
   979 ;; Parameters:    Size  Location     Type
   980 ;;		None
   981 ;; Auto vars:     Size  Location     Type
   982 ;;		None
   983 ;; Return value:  Size  Location     Type
   984 ;;                  1    wreg      void 
   985 ;; Registers used:
   986 ;;		wreg, status,2, status,0, cstack
   987 ;; Tracked objects:
   988 ;;		On entry : 0/0
   989 ;;		On exit  : 0/0
   990 ;;		Unchanged: 0/0
   991 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   992 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   993 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   994 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   995 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   996 ;;Total ram usage:        1 bytes
   997 ;; Hardware stack levels used: 1
   998 ;; Hardware stack levels required when called: 3
   999 ;; This function calls:
  1000 ;;		_BORRAR_LCD
  1001 ;;		_CURSOR_HOME
  1002 ;;		_CURSOR_ONOFF
  1003 ;;		_LCD_CONFIG
  1004 ;; This function is called by:
  1005 ;;		_configuro
  1006 ;; This function uses a non-reentrant model
  1007 ;;
  1008                           
  1009                           	psect	text3
  1010   002BF2                     __ptext3:
  1011                           	callstack 0
  1012   002BF2                     _LCD_INIT:
  1013                           	callstack 122
  1014   002BF2                     
  1015                           ;LCD.c: 193:     TRISD = 0x00;
  1016   002BF2  0E00               	movlw	0
  1017   002BF4  6EC9               	movwf	201,c	;volatile
  1018                           
  1019                           ;LCD.c: 194:     ANSELD = 0x00;
  1020   002BF6  0E00               	movlw	0
  1021   002BF8  0104               	movlb	4	; () banked
  1022   002BFA  6F18               	movwf	24,b	;volatile
  1023   002BFC                     
  1024                           ; BSR set to: 4
  1025                           ;LCD.c: 195:     _delay((unsigned long)((15)*(32000000UL/4000.0)));
  1026   002BFC  0E9C               	movlw	156
  1027   002BFE  6E05               	movwf	??_LCD_INIT^(0+1280),c
  1028   002C00  0ED7               	movlw	215
  1029   002C02                     u607:
  1030   002C02  2EE8               	decfsz	wreg,f,c
  1031   002C04  D7FE               	bra	u607
  1032   002C06  2E05               	decfsz	??_LCD_INIT^(0+1280),f,c
  1033   002C08  D7FC               	bra	u607
  1034   002C0A  0000               	nop	
  1035   002C0C                     
  1036                           ;LCD.c: 196:     LCD_CONFIG();
  1037   002C0C  EC8B  F015         	call	_LCD_CONFIG	;wreg free
  1038   002C10                     
  1039                           ;LCD.c: 197:     _delay((unsigned long)((15)*(32000000UL/4000.0)));
  1040   002C10  0E9C               	movlw	156
  1041   002C12  6E05               	movwf	??_LCD_INIT^(0+1280),c
  1042   002C14  0ED7               	movlw	215
  1043   002C16                     u617:
  1044   002C16  2EE8               	decfsz	wreg,f,c
  1045   002C18  D7FE               	bra	u617
  1046   002C1A  2E05               	decfsz	??_LCD_INIT^(0+1280),f,c
  1047   002C1C  D7FC               	bra	u617
  1048   002C1E  0000               	nop	
  1049   002C20                     
  1050                           ;LCD.c: 198:     BORRAR_LCD();
  1051   002C20  ECCA  F016         	call	_BORRAR_LCD	;wreg free
  1052   002C24                     
  1053                           ;LCD.c: 199:     CURSOR_HOME();
  1054   002C24  ECC6  F016         	call	_CURSOR_HOME	;wreg free
  1055   002C28                     
  1056                           ;LCD.c: 200:     CURSOR_ONOFF(1);
  1057   002C28  0E01               	movlw	1
  1058   002C2A  EC68  F016         	call	_CURSOR_ONOFF
  1059   002C2E  0012               	return		;funcret
  1060   002C30                     __end_of_LCD_INIT:
  1061                           	callstack 0
  1062                           
  1063 ;; *************** function _LCD_CONFIG *****************
  1064 ;; Defined at:
  1065 ;;		line 109 in file "LCD.c"
  1066 ;; Parameters:    Size  Location     Type
  1067 ;;		None
  1068 ;; Auto vars:     Size  Location     Type
  1069 ;;		None
  1070 ;; Return value:  Size  Location     Type
  1071 ;;                  1    wreg      void 
  1072 ;; Registers used:
  1073 ;;		wreg, status,2, status,0, cstack
  1074 ;; Tracked objects:
  1075 ;;		On entry : 0/0
  1076 ;;		On exit  : 0/0
  1077 ;;		Unchanged: 0/0
  1078 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1079 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1080 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1081 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1082 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1083 ;;Total ram usage:        1 bytes
  1084 ;; Hardware stack levels used: 1
  1085 ;; Hardware stack levels required when called: 2
  1086 ;; This function calls:
  1087 ;;		_ENVIA_LCD_CMD
  1088 ;;		_ENVIA_NIBBLE
  1089 ;; This function is called by:
  1090 ;;		_LCD_INIT
  1091 ;; This function uses a non-reentrant model
  1092 ;;
  1093                           
  1094                           	psect	text4
  1095   002B16                     __ptext4:
  1096                           	callstack 0
  1097   002B16                     _LCD_CONFIG:
  1098                           	callstack 122
  1099   002B16                     
  1100                           ;LCD.c: 111:  LATDbits.LATD0 = 0;
  1101   002B16  90C1               	bcf	193,0,c	;volatile
  1102                           
  1103                           ;LCD.c: 112:  LATDbits.LATD1 = 0;
  1104   002B18  92C1               	bcf	193,1,c	;volatile
  1105   002B1A                     
  1106                           ;LCD.c: 113:  ENVIA_NIBBLE(0x30);
  1107   002B1A  0E30               	movlw	48
  1108   002B1C  ECA7  F016         	call	_ENVIA_NIBBLE
  1109   002B20                     
  1110                           ;LCD.c: 114:     _delay((unsigned long)((2)*(32000000UL/4000.0)));
  1111   002B20  0E15               	movlw	21
  1112   002B22  6E04               	movwf	??_LCD_CONFIG^(0+1280),c
  1113   002B24  0EC6               	movlw	198
  1114   002B26                     u627:
  1115   002B26  2EE8               	decfsz	wreg,f,c
  1116   002B28  D7FE               	bra	u627
  1117   002B2A  2E04               	decfsz	??_LCD_CONFIG^(0+1280),f,c
  1118   002B2C  D7FC               	bra	u627
  1119   002B2E  D000               	nop2	
  1120   002B30                     
  1121                           ;LCD.c: 115:  ENVIA_NIBBLE(0x30);
  1122   002B30  0E30               	movlw	48
  1123   002B32  ECA7  F016         	call	_ENVIA_NIBBLE
  1124                           
  1125                           ;LCD.c: 116:     _delay((unsigned long)((100)*(32000000UL/4000000.0)));
  1126   002B36  0EA0               	movlw	160
  1127   002B38                     u637:
  1128   002B38  D000               	nop2	
  1129   002B3A  2EE8               	decfsz	wreg,f,c
  1130   002B3C  D7FD               	bra	u637
  1131   002B3E                     
  1132                           ;LCD.c: 117:     ENVIA_NIBBLE(0x30);
  1133   002B3E  0E30               	movlw	48
  1134   002B40  ECA7  F016         	call	_ENVIA_NIBBLE
  1135   002B44                     
  1136                           ;LCD.c: 118:  ENVIA_NIBBLE(0x20);
  1137   002B44  0E20               	movlw	32
  1138   002B46  ECA7  F016         	call	_ENVIA_NIBBLE
  1139   002B4A                     
  1140                           ;LCD.c: 119:  ENVIA_LCD_CMD(0x01);
  1141   002B4A  0E01               	movlw	1
  1142   002B4C  EC34  F016         	call	_ENVIA_LCD_CMD
  1143   002B50                     
  1144                           ;LCD.c: 120:  ENVIA_LCD_CMD(0x28);
  1145   002B50  0E28               	movlw	40
  1146   002B52  EC34  F016         	call	_ENVIA_LCD_CMD
  1147   002B56                     
  1148                           ;LCD.c: 121:  ENVIA_LCD_CMD(0x0F);
  1149   002B56  0E0F               	movlw	15
  1150   002B58  EC34  F016         	call	_ENVIA_LCD_CMD
  1151   002B5C                     
  1152                           ;LCD.c: 122:  ENVIA_LCD_CMD(0x06);
  1153   002B5C  0E06               	movlw	6
  1154   002B5E  EC34  F016         	call	_ENVIA_LCD_CMD
  1155   002B62                     
  1156                           ;LCD.c: 123:  ENVIA_LCD_CMD(0x01);
  1157   002B62  0E01               	movlw	1
  1158   002B64  EC34  F016         	call	_ENVIA_LCD_CMD
  1159   002B68  0012               	return		;funcret
  1160   002B6A                     __end_of_LCD_CONFIG:
  1161                           	callstack 0
  1162                           
  1163 ;; *************** function _CURSOR_ONOFF *****************
  1164 ;; Defined at:
  1165 ;;		line 62 in file "LCD.c"
  1166 ;; Parameters:    Size  Location     Type
  1167 ;;  estado          1    wreg     unsigned char 
  1168 ;; Auto vars:     Size  Location     Type
  1169 ;;  estado          1    3[COMRAM] unsigned char 
  1170 ;; Return value:  Size  Location     Type
  1171 ;;                  1    wreg      void 
  1172 ;; Registers used:
  1173 ;;		wreg, status,2, status,0, cstack
  1174 ;; Tracked objects:
  1175 ;;		On entry : 0/0
  1176 ;;		On exit  : 0/0
  1177 ;;		Unchanged: 0/0
  1178 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1179 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1180 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1181 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1182 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1183 ;;Total ram usage:        1 bytes
  1184 ;; Hardware stack levels used: 1
  1185 ;; Hardware stack levels required when called: 2
  1186 ;; This function calls:
  1187 ;;		_ENVIA_LCD_CMD
  1188 ;; This function is called by:
  1189 ;;		_LCD_INIT
  1190 ;; This function uses a non-reentrant model
  1191 ;;
  1192                           
  1193                           	psect	text5
  1194   002CD0                     __ptext5:
  1195                           	callstack 0
  1196   002CD0                     _CURSOR_ONOFF:
  1197                           	callstack 122
  1198                           
  1199                           ;incstack = 0
  1200                           ;CURSOR_ONOFF@estado stored from wreg
  1201   002CD0  6E04               	movwf	CURSOR_ONOFF@estado^(0+1280),c
  1202   002CD2                     
  1203                           ;LCD.c: 62: void CURSOR_ONOFF(unsigned char estado);LCD.c: 63: {;LCD.c: 64:  if(estado =
      +                          = 0) ENVIA_LCD_CMD(0x0E);
  1204   002CD2  5004               	movf	CURSOR_ONOFF@estado^(0+1280),w,c
  1205   002CD4  A4D8               	btfss	status,2,c
  1206   002CD6  EF6F  F016         	goto	u21
  1207   002CDA  EF71  F016         	goto	u20
  1208   002CDE                     u21:
  1209   002CDE  EF74  F016         	goto	l995
  1210   002CE2                     u20:
  1211   002CE2  0E0E               	movlw	14
  1212   002CE4  EC34  F016         	call	_ENVIA_LCD_CMD
  1213   002CE8                     l995:
  1214                           
  1215                           ;LCD.c: 65:  if(estado == 1) ENVIA_LCD_CMD(0x0C);
  1216   002CE8  0404               	decf	CURSOR_ONOFF@estado^(0+1280),w,c
  1217   002CEA  A4D8               	btfss	status,2,c
  1218   002CEC  EF7A  F016         	goto	u31
  1219   002CF0  EF7C  F016         	goto	u30
  1220   002CF4                     u31:
  1221   002CF4  EF7F  F016         	goto	l62
  1222   002CF8                     u30:
  1223   002CF8  0E0C               	movlw	12
  1224   002CFA  EC34  F016         	call	_ENVIA_LCD_CMD
  1225   002CFE                     l62:
  1226   002CFE  0012               	return		;funcret
  1227   002D00                     __end_of_CURSOR_ONOFF:
  1228                           	callstack 0
  1229                           
  1230 ;; *************** function _CURSOR_HOME *****************
  1231 ;; Defined at:
  1232 ;;		line 37 in file "LCD.c"
  1233 ;; Parameters:    Size  Location     Type
  1234 ;;		None
  1235 ;; Auto vars:     Size  Location     Type
  1236 ;;		None
  1237 ;; Return value:  Size  Location     Type
  1238 ;;                  1    wreg      void 
  1239 ;; Registers used:
  1240 ;;		wreg, status,2, status,0, cstack
  1241 ;; Tracked objects:
  1242 ;;		On entry : 0/0
  1243 ;;		On exit  : 0/0
  1244 ;;		Unchanged: 0/0
  1245 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1246 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1247 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1248 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1249 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1250 ;;Total ram usage:        0 bytes
  1251 ;; Hardware stack levels used: 1
  1252 ;; Hardware stack levels required when called: 2
  1253 ;; This function calls:
  1254 ;;		_ENVIA_LCD_CMD
  1255 ;; This function is called by:
  1256 ;;		_LCD_INIT
  1257 ;; This function uses a non-reentrant model
  1258 ;;
  1259                           
  1260                           	psect	text6
  1261   002D8C                     __ptext6:
  1262                           	callstack 0
  1263   002D8C                     _CURSOR_HOME:
  1264                           	callstack 122
  1265   002D8C                     
  1266                           ;LCD.c: 39:  ENVIA_LCD_CMD(0x02);
  1267   002D8C  0E02               	movlw	2
  1268   002D8E  EC34  F016         	call	_ENVIA_LCD_CMD
  1269   002D92  0012               	return		;funcret
  1270   002D94                     __end_of_CURSOR_HOME:
  1271                           	callstack 0
  1272                           
  1273 ;; *************** function _BORRAR_LCD *****************
  1274 ;; Defined at:
  1275 ;;		line 104 in file "LCD.c"
  1276 ;; Parameters:    Size  Location     Type
  1277 ;;		None
  1278 ;; Auto vars:     Size  Location     Type
  1279 ;;		None
  1280 ;; Return value:  Size  Location     Type
  1281 ;;                  1    wreg      void 
  1282 ;; Registers used:
  1283 ;;		wreg, status,2, status,0, cstack
  1284 ;; Tracked objects:
  1285 ;;		On entry : 0/0
  1286 ;;		On exit  : 0/0
  1287 ;;		Unchanged: 0/0
  1288 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1289 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1290 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1291 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1292 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1293 ;;Total ram usage:        0 bytes
  1294 ;; Hardware stack levels used: 1
  1295 ;; Hardware stack levels required when called: 2
  1296 ;; This function calls:
  1297 ;;		_ENVIA_LCD_CMD
  1298 ;; This function is called by:
  1299 ;;		_LCD_INIT
  1300 ;; This function uses a non-reentrant model
  1301 ;;
  1302                           
  1303                           	psect	text7
  1304   002D94                     __ptext7:
  1305                           	callstack 0
  1306   002D94                     _BORRAR_LCD:
  1307                           	callstack 122
  1308   002D94                     
  1309                           ;LCD.c: 106:  ENVIA_LCD_CMD(0x01);
  1310   002D94  0E01               	movlw	1
  1311   002D96  EC34  F016         	call	_ENVIA_LCD_CMD
  1312   002D9A  0012               	return		;funcret
  1313   002D9C                     __end_of_BORRAR_LCD:
  1314                           	callstack 0
  1315                           
  1316 ;; *************** function _U1_STRING_SEND *****************
  1317 ;; Defined at:
  1318 ;;		line 52 in file "maincode3.c"
  1319 ;; Parameters:    Size  Location     Type
  1320 ;;  cadena          1    3[COMRAM] PTR const unsigned char 
  1321 ;;		 -> STR_14(12), STR_12(11), STR_10(11), STR_8(15), 
  1322 ;;		 -> STR_6(12), STR_3(19), STR_2(19), 
  1323 ;; Auto vars:     Size  Location     Type
  1324 ;;  i               1    6[COMRAM] unsigned char 
  1325 ;;  tam             1    5[COMRAM] unsigned char 
  1326 ;; Return value:  Size  Location     Type
  1327 ;;                  1    wreg      void 
  1328 ;; Registers used:
  1329 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1330 ;; Tracked objects:
  1331 ;;		On entry : 0/0
  1332 ;;		On exit  : 0/0
  1333 ;;		Unchanged: 0/0
  1334 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1335 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1336 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1337 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1338 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1339 ;;Total ram usage:        4 bytes
  1340 ;; Hardware stack levels used: 1
  1341 ;; Hardware stack levels required when called: 1
  1342 ;; This function calls:
  1343 ;;		_U1_BYTE_SEND
  1344 ;;		_strlen
  1345 ;; This function is called by:
  1346 ;;		_main
  1347 ;; This function uses a non-reentrant model
  1348 ;;
  1349                           
  1350                           	psect	text8
  1351   002B6A                     __ptext8:
  1352                           	callstack 0
  1353   002B6A                     _U1_STRING_SEND:
  1354                           	callstack 125
  1355   002B6A                     
  1356                           ;maincode3.c: 52: void U1_STRING_SEND(const char *cadena);maincode3.c: 53: {;maincode3.c
      +                          : 54:     unsigned char tam;;maincode3.c: 55:     tam = strlen(cadena);
  1357   002B6A  C504  F501         	movff	U1_STRING_SEND@cadena,strlen@s
  1358   002B6E  EC18  F016         	call	_strlen	;wreg free
  1359   002B72  5001               	movf	?_strlen^(0+1280),w,c
  1360   002B74  6E06               	movwf	U1_STRING_SEND@tam^(0+1280),c
  1361   002B76                     
  1362                           ;maincode3.c: 57:  for(i = 0; i<tam; i++)
  1363   002B76  0E00               	movlw	0
  1364   002B78  6E07               	movwf	U1_STRING_SEND@i^(0+1280),c
  1365   002B7A  EFCD  F015         	goto	l1503
  1366   002B7E                     l1499:
  1367                           
  1368                           ;maincode3.c: 58:  {;maincode3.c: 59:   U1_BYTE_SEND(cadena[i]);
  1369   002B7E  5004               	movf	U1_STRING_SEND@cadena^(0+1280),w,c
  1370   002B80  2407               	addwf	U1_STRING_SEND@i^(0+1280),w,c
  1371   002B82  6E05               	movwf	??_U1_STRING_SEND^(0+1280),c
  1372   002B84  C505  F4F6         	movff	??_U1_STRING_SEND,tblptrl
  1373   002B88                     	if	1	;There is more than 1 active tblptr byte
  1374   002B88  0E25               	movlw	high __smallconst
  1375   002B8A  6EF7               	movwf	tblptrh,c
  1376   002B8C                     	endif
  1377   002B8C                     	if	0	;tblptru may be non-zero
  1378   002B8C                     	endif
  1379   002B8C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1380   002B8C  0E00               	movlw	low (__smallconst shr (0+16))
  1381   002B8E  6EF8               	movwf	tblptru,c
  1382   002B90                     	endif
  1383   002B90  0008               	tblrd		*
  1384   002B92  50F5               	movf	tablat,w,c
  1385   002B94  ECB5  F016         	call	_U1_BYTE_SEND
  1386   002B98                     
  1387                           ;maincode3.c: 60:  }
  1388   002B98  2A07               	incf	U1_STRING_SEND@i^(0+1280),f,c
  1389   002B9A                     l1503:
  1390   002B9A  5006               	movf	U1_STRING_SEND@tam^(0+1280),w,c
  1391   002B9C  5C07               	subwf	U1_STRING_SEND@i^(0+1280),w,c
  1392   002B9E  A0D8               	btfss	status,0,c
  1393   002BA0  EFD4  F015         	goto	u491
  1394   002BA4  EFD6  F015         	goto	u490
  1395   002BA8                     u491:
  1396   002BA8  EFBF  F015         	goto	l1499
  1397   002BAC                     u490:
  1398   002BAC  0012               	return		;funcret
  1399   002BAE                     __end_of_U1_STRING_SEND:
  1400                           	callstack 0
  1401                           
  1402 ;; *************** function _U1_BYTE_SEND *****************
  1403 ;; Defined at:
  1404 ;;		line 47 in file "maincode3.c"
  1405 ;; Parameters:    Size  Location     Type
  1406 ;;  dato            1    wreg     unsigned char 
  1407 ;; Auto vars:     Size  Location     Type
  1408 ;;  dato            1    0[COMRAM] unsigned char 
  1409 ;; Return value:  Size  Location     Type
  1410 ;;                  1    wreg      void 
  1411 ;; Registers used:
  1412 ;;		wreg
  1413 ;; Tracked objects:
  1414 ;;		On entry : 0/0
  1415 ;;		On exit  : 0/0
  1416 ;;		Unchanged: 0/0
  1417 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1418 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1419 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1420 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1421 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1422 ;;Total ram usage:        1 bytes
  1423 ;; Hardware stack levels used: 1
  1424 ;; This function calls:
  1425 ;;		Nothing
  1426 ;; This function is called by:
  1427 ;;		_U1_STRING_SEND
  1428 ;; This function uses a non-reentrant model
  1429 ;;
  1430                           
  1431                           	psect	text9
  1432   002D6A                     __ptext9:
  1433                           	callstack 0
  1434   002D6A                     _U1_BYTE_SEND:
  1435                           	callstack 125
  1436                           
  1437                           ;incstack = 0
  1438                           ;U1_BYTE_SEND@dato stored from wreg
  1439   002D6A  6E01               	movwf	U1_BYTE_SEND@dato^(0+1280),c
  1440   002D6C                     
  1441                           ;maincode3.c: 48:     U1TXB = dato;
  1442   002D6C  C501  F2A3         	movff	U1_BYTE_SEND@dato,675	;volatile
  1443   002D70                     l199:
  1444   002D70  0102               	movlb	2	; () banked
  1445   002D72  AFB2               	btfss	178,7,b	;volatile
  1446   002D74  EFBE  F016         	goto	u51
  1447   002D78  EFC0  F016         	goto	u50
  1448   002D7C                     u51:
  1449   002D7C  EFB8  F016         	goto	l199
  1450   002D80                     u50:
  1451   002D80                     
  1452                           ; BSR set to: 2
  1453   002D80  0012               	return		;funcret
  1454   002D82                     __end_of_U1_BYTE_SEND:
  1455                           	callstack 0
  1456                           
  1457 ;; *************** function _U1_NEW_LINE *****************
  1458 ;; Defined at:
  1459 ;;		line 63 in file "maincode3.c"
  1460 ;; Parameters:    Size  Location     Type
  1461 ;;		None
  1462 ;; Auto vars:     Size  Location     Type
  1463 ;;		None
  1464 ;; Return value:  Size  Location     Type
  1465 ;;                  1    wreg      void 
  1466 ;; Registers used:
  1467 ;;		wreg, status,2
  1468 ;; Tracked objects:
  1469 ;;		On entry : 0/0
  1470 ;;		On exit  : 0/0
  1471 ;;		Unchanged: 0/0
  1472 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1473 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1474 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1475 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1476 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1477 ;;Total ram usage:        0 bytes
  1478 ;; Hardware stack levels used: 1
  1479 ;; This function calls:
  1480 ;;		Nothing
  1481 ;; This function is called by:
  1482 ;;		_main
  1483 ;; This function uses a non-reentrant model
  1484 ;;
  1485                           
  1486                           	psect	text10
  1487   002D00                     __ptext10:
  1488                           	callstack 0
  1489   002D00                     _U1_NEW_LINE:
  1490                           	callstack 126
  1491   002D00                     
  1492                           ;maincode3.c: 65:     U1TXB = 10;
  1493   002D00  0E0A               	movlw	10
  1494   002D02  0102               	movlb	2	; () banked
  1495   002D04  6FA3               	movwf	163,b	;volatile
  1496   002D06                     l211:
  1497                           
  1498                           ; BSR set to: 2
  1499   002D06  AFB2               	btfss	178,7,b	;volatile
  1500   002D08  EF88  F016         	goto	u181
  1501   002D0C  EF8A  F016         	goto	u180
  1502   002D10                     u181:
  1503   002D10  EF83  F016         	goto	l211
  1504   002D14                     u180:
  1505   002D14                     
  1506                           ; BSR set to: 2
  1507                           ;maincode3.c: 67:     U1TXB = 13;
  1508   002D14  0E0D               	movlw	13
  1509   002D16  6FA3               	movwf	163,b	;volatile
  1510   002D18                     l214:
  1511                           
  1512                           ; BSR set to: 2
  1513   002D18  AFB2               	btfss	178,7,b	;volatile
  1514   002D1A  EF91  F016         	goto	u191
  1515   002D1E  EF93  F016         	goto	u190
  1516   002D22                     u191:
  1517   002D22  EF8C  F016         	goto	l214
  1518   002D26                     u190:
  1519   002D26                     
  1520                           ; BSR set to: 2
  1521   002D26  0012               	return		;funcret
  1522   002D28                     __end_of_U1_NEW_LINE:
  1523                           	callstack 0
  1524                           
  1525 ;; *************** function _POS_CURSOR *****************
  1526 ;; Defined at:
  1527 ;;		line 5 in file "LCD.c"
  1528 ;; Parameters:    Size  Location     Type
  1529 ;;  fila            1    wreg     unsigned char 
  1530 ;;  columna         1    3[COMRAM] unsigned char 
  1531 ;; Auto vars:     Size  Location     Type
  1532 ;;  fila            1    4[COMRAM] unsigned char 
  1533 ;; Return value:  Size  Location     Type
  1534 ;;                  1    wreg      void 
  1535 ;; Registers used:
  1536 ;;		wreg, status,2, status,0, cstack
  1537 ;; Tracked objects:
  1538 ;;		On entry : 0/0
  1539 ;;		On exit  : 0/0
  1540 ;;		Unchanged: 0/0
  1541 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1542 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1543 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1544 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1545 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1546 ;;Total ram usage:        2 bytes
  1547 ;; Hardware stack levels used: 1
  1548 ;; Hardware stack levels required when called: 2
  1549 ;; This function calls:
  1550 ;;		_ENVIA_LCD_CMD
  1551 ;; This function is called by:
  1552 ;;		_main
  1553 ;; This function uses a non-reentrant model
  1554 ;;
  1555                           
  1556                           	psect	text11
  1557   0028F0                     __ptext11:
  1558                           	callstack 0
  1559   0028F0                     _POS_CURSOR:
  1560                           	callstack 124
  1561                           
  1562                           ; BSR set to: 2
  1563                           ;incstack = 0
  1564                           ;POS_CURSOR@fila stored from wreg
  1565   0028F0  6E05               	movwf	POS_CURSOR@fila^(0+1280),c
  1566   0028F2                     
  1567                           ;LCD.c: 5: void POS_CURSOR(unsigned char fila,unsigned char columna);LCD.c: 6: {;LCD.c: 
      +                          7:  if(fila == 1)
  1568   0028F2  0405               	decf	POS_CURSOR@fila^(0+1280),w,c
  1569   0028F4  A4D8               	btfss	status,2,c
  1570   0028F6  EF7F  F014         	goto	u441
  1571   0028FA  EF81  F014         	goto	u440
  1572   0028FE                     u441:
  1573   0028FE  EF87  F014         	goto	l1449
  1574   002902                     u440:
  1575   002902                     
  1576                           ;LCD.c: 8:  {;LCD.c: 9:   ENVIA_LCD_CMD(0x80+columna);
  1577   002902  5004               	movf	POS_CURSOR@columna^(0+1280),w,c
  1578   002904  0F80               	addlw	128
  1579   002906  EC34  F016         	call	_ENVIA_LCD_CMD
  1580                           
  1581                           ;LCD.c: 10:  }
  1582   00290A  EFB4  F014         	goto	l32
  1583   00290E                     l1449:
  1584   00290E  0E02               	movlw	2
  1585   002910  1805               	xorwf	POS_CURSOR@fila^(0+1280),w,c
  1586   002912  A4D8               	btfss	status,2,c
  1587   002914  EF8E  F014         	goto	u451
  1588   002918  EF90  F014         	goto	u450
  1589   00291C                     u451:
  1590   00291C  EF96  F014         	goto	l1453
  1591   002920                     u450:
  1592   002920                     
  1593                           ;LCD.c: 12:  {;LCD.c: 13:   ENVIA_LCD_CMD(0xC0+columna);
  1594   002920  5004               	movf	POS_CURSOR@columna^(0+1280),w,c
  1595   002922  0FC0               	addlw	192
  1596   002924  EC34  F016         	call	_ENVIA_LCD_CMD
  1597                           
  1598                           ;LCD.c: 14:  }
  1599   002928  EFB4  F014         	goto	l32
  1600   00292C                     l1453:
  1601   00292C  0E03               	movlw	3
  1602   00292E  1805               	xorwf	POS_CURSOR@fila^(0+1280),w,c
  1603   002930  A4D8               	btfss	status,2,c
  1604   002932  EF9D  F014         	goto	u461
  1605   002936  EF9F  F014         	goto	u460
  1606   00293A                     u461:
  1607   00293A  EFA5  F014         	goto	l1457
  1608   00293E                     u460:
  1609   00293E                     
  1610                           ;LCD.c: 16:  {;LCD.c: 17:   ENVIA_LCD_CMD(0x94+columna);
  1611   00293E  5004               	movf	POS_CURSOR@columna^(0+1280),w,c
  1612   002940  0F94               	addlw	148
  1613   002942  EC34  F016         	call	_ENVIA_LCD_CMD
  1614                           
  1615                           ;LCD.c: 18:  }
  1616   002946  EFB4  F014         	goto	l32
  1617   00294A                     l1457:
  1618   00294A  0E04               	movlw	4
  1619   00294C  1805               	xorwf	POS_CURSOR@fila^(0+1280),w,c
  1620   00294E  A4D8               	btfss	status,2,c
  1621   002950  EFAC  F014         	goto	u471
  1622   002954  EFAE  F014         	goto	u470
  1623   002958                     u471:
  1624   002958  EFB4  F014         	goto	l28
  1625   00295C                     u470:
  1626   00295C                     
  1627                           ;LCD.c: 20:  {;LCD.c: 21:   ENVIA_LCD_CMD(0xD4+columna);
  1628   00295C  5004               	movf	POS_CURSOR@columna^(0+1280),w,c
  1629   00295E  0FD4               	addlw	212
  1630   002960  EC34  F016         	call	_ENVIA_LCD_CMD
  1631   002964  EFB4  F014         	goto	l32
  1632   002968                     l28:
  1633   002968                     l32:
  1634   002968  0012               	return		;funcret
  1635   00296A                     __end_of_POS_CURSOR:
  1636                           	callstack 0
  1637                           
  1638 ;; *************** function _ENVIA_LCD_CMD *****************
  1639 ;; Defined at:
  1640 ;;		line 136 in file "LCD.c"
  1641 ;; Parameters:    Size  Location     Type
  1642 ;;  dato            1    wreg     unsigned char 
  1643 ;; Auto vars:     Size  Location     Type
  1644 ;;  dato            1    1[COMRAM] unsigned char 
  1645 ;;  aux             1    2[COMRAM] unsigned char 
  1646 ;; Return value:  Size  Location     Type
  1647 ;;                  1    wreg      void 
  1648 ;; Registers used:
  1649 ;;		wreg, status,2, status,0, cstack
  1650 ;; Tracked objects:
  1651 ;;		On entry : 0/0
  1652 ;;		On exit  : 0/0
  1653 ;;		Unchanged: 0/0
  1654 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1655 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1656 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1657 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1658 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1659 ;;Total ram usage:        2 bytes
  1660 ;; Hardware stack levels used: 1
  1661 ;; Hardware stack levels required when called: 1
  1662 ;; This function calls:
  1663 ;;		_ENVIA_NIBBLE
  1664 ;;		_LEER_LCD
  1665 ;; This function is called by:
  1666 ;;		_POS_CURSOR
  1667 ;;		_CURSOR_HOME
  1668 ;;		_CURSOR_ONOFF
  1669 ;;		_BORRAR_LCD
  1670 ;;		_LCD_CONFIG
  1671 ;;		_BLINK_CURSOR
  1672 ;;		_DISPLAY_ONOFF
  1673 ;;		_CURSOR_SHIFTLEFT
  1674 ;;		_CURSOR_SHIFTRIGHT
  1675 ;;		_DISPLAY_SHIFTLEFT
  1676 ;;		_DISPLAY_SHIFTRIGHT
  1677 ;;		_GENERACARACTER
  1678 ;; This function uses a non-reentrant model
  1679 ;;
  1680                           
  1681                           	psect	text12
  1682   002C68                     __ptext12:
  1683                           	callstack 0
  1684   002C68                     _ENVIA_LCD_CMD:
  1685                           	callstack 122
  1686                           
  1687                           ;incstack = 0
  1688                           ;ENVIA_LCD_CMD@dato stored from wreg
  1689   002C68  6E02               	movwf	ENVIA_LCD_CMD@dato^(0+1280),c
  1690   002C6A                     
  1691                           ;LCD.c: 136: void ENVIA_LCD_CMD(unsigned char dato);LCD.c: 137: {;LCD.c: 138:  unsigned 
      +                          char aux;;LCD.c: 139:  LATDbits.LATD0 = 0;
  1692   002C6A  90C1               	bcf	193,0,c	;volatile
  1693   002C6C                     
  1694                           ;LCD.c: 140:  LEER_LCD();
  1695   002C6C  ECEF  F014         	call	_LEER_LCD	;wreg free
  1696   002C70                     
  1697                           ;LCD.c: 141:  TRISD = 0b00000000;
  1698   002C70  0E00               	movlw	0
  1699   002C72  6EC9               	movwf	201,c	;volatile
  1700   002C74                     
  1701                           ;LCD.c: 142:     _delay((unsigned long)((100)*(32000000UL/4000000.0)));
  1702   002C74  0EA0               	movlw	160
  1703   002C76                     u647:
  1704   002C76  D000               	nop2	
  1705   002C78  2EE8               	decfsz	wreg,f,c
  1706   002C7A  D7FD               	bra	u647
  1707   002C7C                     
  1708                           ;LCD.c: 143:     LATDbits.LATD1 = 0;
  1709   002C7C  92C1               	bcf	193,1,c	;volatile
  1710   002C7E                     
  1711                           ;LCD.c: 144:  LATDbits.LATD2 = 0;
  1712   002C7E  94C1               	bcf	193,2,c	;volatile
  1713   002C80                     
  1714                           ;LCD.c: 145:  LATDbits.LATD0 = 0;
  1715   002C80  90C1               	bcf	193,0,c	;volatile
  1716   002C82                     
  1717                           ;LCD.c: 146:  aux = dato & 0xF0;
  1718   002C82  5002               	movf	ENVIA_LCD_CMD@dato^(0+1280),w,c
  1719   002C84  0BF0               	andlw	240
  1720   002C86  6E03               	movwf	ENVIA_LCD_CMD@aux^(0+1280),c
  1721   002C88                     
  1722                           ;LCD.c: 147:  ENVIA_NIBBLE(aux);
  1723   002C88  5003               	movf	ENVIA_LCD_CMD@aux^(0+1280),w,c
  1724   002C8A  ECA7  F016         	call	_ENVIA_NIBBLE
  1725   002C8E                     
  1726                           ;LCD.c: 148:  aux = dato<<4;
  1727   002C8E  3802               	swapf	ENVIA_LCD_CMD@dato^(0+1280),w,c
  1728   002C90  0BF0               	andlw	240
  1729   002C92  6E03               	movwf	ENVIA_LCD_CMD@aux^(0+1280),c
  1730   002C94                     
  1731                           ;LCD.c: 149:  ENVIA_NIBBLE(aux);
  1732   002C94  5003               	movf	ENVIA_LCD_CMD@aux^(0+1280),w,c
  1733   002C96  ECA7  F016         	call	_ENVIA_NIBBLE
  1734   002C9A  0012               	return		;funcret
  1735   002C9C                     __end_of_ENVIA_LCD_CMD:
  1736                           	callstack 0
  1737                           
  1738 ;; *************** function _LCD_ESCRIBE_VAR_INT *****************
  1739 ;; Defined at:
  1740 ;;		line 224 in file "LCD.c"
  1741 ;; Parameters:    Size  Location     Type
  1742 ;;  numero          2   12[COMRAM] unsigned int 
  1743 ;;  n_digitos       1   14[COMRAM] unsigned char 
  1744 ;; Auto vars:     Size  Location     Type
  1745 ;;  unidad          1   21[COMRAM] unsigned char 
  1746 ;;  decena          1   20[COMRAM] unsigned char 
  1747 ;;  centena         1   19[COMRAM] unsigned char 
  1748 ;;  millar          1   18[COMRAM] unsigned char 
  1749 ;;  d_millar        1   17[COMRAM] unsigned char 
  1750 ;; Return value:  Size  Location     Type
  1751 ;;                  1    wreg      void 
  1752 ;; Registers used:
  1753 ;;		wreg, status,2, status,0, cstack
  1754 ;; Tracked objects:
  1755 ;;		On entry : 0/0
  1756 ;;		On exit  : 0/0
  1757 ;;		Unchanged: 0/0
  1758 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1759 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1760 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1761 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1762 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1763 ;;Total ram usage:       10 bytes
  1764 ;; Hardware stack levels used: 1
  1765 ;; Hardware stack levels required when called: 2
  1766 ;; This function calls:
  1767 ;;		_ENVIA_CHAR
  1768 ;;		___lwdiv
  1769 ;;		___lwmod
  1770 ;; This function is called by:
  1771 ;;		_main
  1772 ;; This function uses a non-reentrant model
  1773 ;;
  1774                           
  1775                           	psect	text13
  1776   002768                     __ptext13:
  1777                           	callstack 0
  1778   002768                     _LCD_ESCRIBE_VAR_INT:
  1779                           	callstack 124
  1780   002768                     
  1781                           ;LCD.c: 225:     unsigned char d_millar, millar, centena, decena, unidad;;LCD.c: 226:   
      +                            d_millar = numero / 10000;
  1782   002768  C50D  F506         	movff	LCD_ESCRIBE_VAR_INT@numero,___lwdiv@dividend
  1783   00276C  C50E  F507         	movff	LCD_ESCRIBE_VAR_INT@numero+1,___lwdiv@dividend+1
  1784   002770  0E27               	movlw	39
  1785   002772  6E09               	movwf	(___lwdiv@divisor+1)^(0+1280),c
  1786   002774  0E10               	movlw	16
  1787   002776  6E08               	movwf	___lwdiv@divisor^(0+1280),c
  1788   002778  ECB5  F014         	call	___lwdiv	;wreg free
  1789   00277C  5006               	movf	?___lwdiv^(0+1280),w,c
  1790   00277E  6E12               	movwf	LCD_ESCRIBE_VAR_INT@d_millar^(0+1280),c
  1791                           
  1792                           ;LCD.c: 227:     millar = (numero % 10000) / 1000;
  1793   002780  0E27               	movlw	39
  1794   002782  6E04               	movwf	(___lwmod@divisor+1)^(0+1280),c
  1795   002784  0E10               	movlw	16
  1796   002786  6E03               	movwf	___lwmod@divisor^(0+1280),c
  1797   002788  C50D  F501         	movff	LCD_ESCRIBE_VAR_INT@numero,___lwmod@dividend
  1798   00278C  C50E  F502         	movff	LCD_ESCRIBE_VAR_INT@numero+1,___lwmod@dividend+1
  1799   002790  EC28  F015         	call	___lwmod	;wreg free
  1800   002794  C501  F506         	movff	?___lwmod,___lwdiv@dividend
  1801   002798  C502  F507         	movff	?___lwmod+1,___lwdiv@dividend+1
  1802   00279C  0E03               	movlw	3
  1803   00279E  6E09               	movwf	(___lwdiv@divisor+1)^(0+1280),c
  1804   0027A0  0EE8               	movlw	232
  1805   0027A2  6E08               	movwf	___lwdiv@divisor^(0+1280),c
  1806   0027A4  ECB5  F014         	call	___lwdiv	;wreg free
  1807   0027A8  5006               	movf	?___lwdiv^(0+1280),w,c
  1808   0027AA  6E13               	movwf	LCD_ESCRIBE_VAR_INT@millar^(0+1280),c
  1809                           
  1810                           ;LCD.c: 228:     centena = (numero % 1000) / 100;
  1811   0027AC  0E03               	movlw	3
  1812   0027AE  6E04               	movwf	(___lwmod@divisor+1)^(0+1280),c
  1813   0027B0  0EE8               	movlw	232
  1814   0027B2  6E03               	movwf	___lwmod@divisor^(0+1280),c
  1815   0027B4  C50D  F501         	movff	LCD_ESCRIBE_VAR_INT@numero,___lwmod@dividend
  1816   0027B8  C50E  F502         	movff	LCD_ESCRIBE_VAR_INT@numero+1,___lwmod@dividend+1
  1817   0027BC  EC28  F015         	call	___lwmod	;wreg free
  1818   0027C0  C501  F506         	movff	?___lwmod,___lwdiv@dividend
  1819   0027C4  C502  F507         	movff	?___lwmod+1,___lwdiv@dividend+1
  1820   0027C8  0E00               	movlw	0
  1821   0027CA  6E09               	movwf	(___lwdiv@divisor+1)^(0+1280),c
  1822   0027CC  0E64               	movlw	100
  1823   0027CE  6E08               	movwf	___lwdiv@divisor^(0+1280),c
  1824   0027D0  ECB5  F014         	call	___lwdiv	;wreg free
  1825   0027D4  5006               	movf	?___lwdiv^(0+1280),w,c
  1826   0027D6  6E14               	movwf	LCD_ESCRIBE_VAR_INT@centena^(0+1280),c
  1827                           
  1828                           ;LCD.c: 229:     decena = (numero % 100) / 10;
  1829   0027D8  0E00               	movlw	0
  1830   0027DA  6E04               	movwf	(___lwmod@divisor+1)^(0+1280),c
  1831   0027DC  0E64               	movlw	100
  1832   0027DE  6E03               	movwf	___lwmod@divisor^(0+1280),c
  1833   0027E0  C50D  F501         	movff	LCD_ESCRIBE_VAR_INT@numero,___lwmod@dividend
  1834   0027E4  C50E  F502         	movff	LCD_ESCRIBE_VAR_INT@numero+1,___lwmod@dividend+1
  1835   0027E8  EC28  F015         	call	___lwmod	;wreg free
  1836   0027EC  C501  F506         	movff	?___lwmod,___lwdiv@dividend
  1837   0027F0  C502  F507         	movff	?___lwmod+1,___lwdiv@dividend+1
  1838   0027F4  0E00               	movlw	0
  1839   0027F6  6E09               	movwf	(___lwdiv@divisor+1)^(0+1280),c
  1840   0027F8  0E0A               	movlw	10
  1841   0027FA  6E08               	movwf	___lwdiv@divisor^(0+1280),c
  1842   0027FC  ECB5  F014         	call	___lwdiv	;wreg free
  1843   002800  5006               	movf	?___lwdiv^(0+1280),w,c
  1844   002802  6E15               	movwf	LCD_ESCRIBE_VAR_INT@decena^(0+1280),c
  1845                           
  1846                           ;LCD.c: 230:     unidad = numero % 10;
  1847   002804  C50D  F501         	movff	LCD_ESCRIBE_VAR_INT@numero,___lwmod@dividend
  1848   002808  C50E  F502         	movff	LCD_ESCRIBE_VAR_INT@numero+1,___lwmod@dividend+1
  1849   00280C  0E00               	movlw	0
  1850   00280E  6E04               	movwf	(___lwmod@divisor+1)^(0+1280),c
  1851   002810  0E0A               	movlw	10
  1852   002812  6E03               	movwf	___lwmod@divisor^(0+1280),c
  1853   002814  EC28  F015         	call	___lwmod	;wreg free
  1854   002818  5001               	movf	?___lwmod^(0+1280),w,c
  1855   00281A  6E16               	movwf	LCD_ESCRIBE_VAR_INT@unidad^(0+1280),c
  1856                           
  1857                           ;LCD.c: 231:     switch(n_digitos){
  1858   00281C  EF56  F014         	goto	l1487
  1859   002820                     l1475:
  1860                           
  1861                           ;LCD.c: 233:             ENVIA_CHAR(unidad+0x30);
  1862   002820  5016               	movf	LCD_ESCRIBE_VAR_INT@unidad^(0+1280),w,c
  1863   002822  0F30               	addlw	48
  1864   002824  EC4E  F016         	call	_ENVIA_CHAR
  1865                           
  1866                           ;LCD.c: 234:             break;
  1867   002828  EF77  F014         	goto	l121
  1868   00282C                     l1477:
  1869                           
  1870                           ;LCD.c: 236:             ENVIA_CHAR(decena+0x30);
  1871   00282C  5015               	movf	LCD_ESCRIBE_VAR_INT@decena^(0+1280),w,c
  1872   00282E  0F30               	addlw	48
  1873   002830  EC4E  F016         	call	_ENVIA_CHAR
  1874                           
  1875                           ;LCD.c: 237:             ENVIA_CHAR(unidad+0x30);
  1876   002834  5016               	movf	LCD_ESCRIBE_VAR_INT@unidad^(0+1280),w,c
  1877   002836  0F30               	addlw	48
  1878   002838  EC4E  F016         	call	_ENVIA_CHAR
  1879                           
  1880                           ;LCD.c: 238:             break;
  1881   00283C  EF77  F014         	goto	l121
  1882   002840                     l1479:
  1883                           
  1884                           ;LCD.c: 240:             ENVIA_CHAR(centena+0x30);
  1885   002840  5014               	movf	LCD_ESCRIBE_VAR_INT@centena^(0+1280),w,c
  1886   002842  0F30               	addlw	48
  1887   002844  EC4E  F016         	call	_ENVIA_CHAR
  1888                           
  1889                           ;LCD.c: 241:             ENVIA_CHAR(decena+0x30);
  1890   002848  5015               	movf	LCD_ESCRIBE_VAR_INT@decena^(0+1280),w,c
  1891   00284A  0F30               	addlw	48
  1892   00284C  EC4E  F016         	call	_ENVIA_CHAR
  1893                           
  1894                           ;LCD.c: 242:             ENVIA_CHAR(unidad+0x30);
  1895   002850  5016               	movf	LCD_ESCRIBE_VAR_INT@unidad^(0+1280),w,c
  1896   002852  0F30               	addlw	48
  1897   002854  EC4E  F016         	call	_ENVIA_CHAR
  1898                           
  1899                           ;LCD.c: 243:             break;
  1900   002858  EF77  F014         	goto	l121
  1901   00285C                     l1481:
  1902                           
  1903                           ;LCD.c: 245:             ENVIA_CHAR(millar+0x30);
  1904   00285C  5013               	movf	LCD_ESCRIBE_VAR_INT@millar^(0+1280),w,c
  1905   00285E  0F30               	addlw	48
  1906   002860  EC4E  F016         	call	_ENVIA_CHAR
  1907                           
  1908                           ;LCD.c: 246:             ENVIA_CHAR(centena+0x30);
  1909   002864  5014               	movf	LCD_ESCRIBE_VAR_INT@centena^(0+1280),w,c
  1910   002866  0F30               	addlw	48
  1911   002868  EC4E  F016         	call	_ENVIA_CHAR
  1912                           
  1913                           ;LCD.c: 247:             ENVIA_CHAR(decena+0x30);
  1914   00286C  5015               	movf	LCD_ESCRIBE_VAR_INT@decena^(0+1280),w,c
  1915   00286E  0F30               	addlw	48
  1916   002870  EC4E  F016         	call	_ENVIA_CHAR
  1917                           
  1918                           ;LCD.c: 248:             ENVIA_CHAR(unidad+0x30);
  1919   002874  5016               	movf	LCD_ESCRIBE_VAR_INT@unidad^(0+1280),w,c
  1920   002876  0F30               	addlw	48
  1921   002878  EC4E  F016         	call	_ENVIA_CHAR
  1922                           
  1923                           ;LCD.c: 249:             break;
  1924   00287C  EF77  F014         	goto	l121
  1925   002880                     l1483:
  1926                           
  1927                           ;LCD.c: 251:             ENVIA_CHAR(d_millar+0x30);
  1928   002880  5012               	movf	LCD_ESCRIBE_VAR_INT@d_millar^(0+1280),w,c
  1929   002882  0F30               	addlw	48
  1930   002884  EC4E  F016         	call	_ENVIA_CHAR
  1931                           
  1932                           ;LCD.c: 252:             ENVIA_CHAR(millar+0x30);
  1933   002888  5013               	movf	LCD_ESCRIBE_VAR_INT@millar^(0+1280),w,c
  1934   00288A  0F30               	addlw	48
  1935   00288C  EC4E  F016         	call	_ENVIA_CHAR
  1936                           
  1937                           ;LCD.c: 253:             ENVIA_CHAR(centena+0x30);
  1938   002890  5014               	movf	LCD_ESCRIBE_VAR_INT@centena^(0+1280),w,c
  1939   002892  0F30               	addlw	48
  1940   002894  EC4E  F016         	call	_ENVIA_CHAR
  1941                           
  1942                           ;LCD.c: 254:             ENVIA_CHAR(decena+0x30);
  1943   002898  5015               	movf	LCD_ESCRIBE_VAR_INT@decena^(0+1280),w,c
  1944   00289A  0F30               	addlw	48
  1945   00289C  EC4E  F016         	call	_ENVIA_CHAR
  1946                           
  1947                           ;LCD.c: 255:             ENVIA_CHAR(unidad+0x30);
  1948   0028A0  5016               	movf	LCD_ESCRIBE_VAR_INT@unidad^(0+1280),w,c
  1949   0028A2  0F30               	addlw	48
  1950   0028A4  EC4E  F016         	call	_ENVIA_CHAR
  1951                           
  1952                           ;LCD.c: 256:             break;
  1953   0028A8  EF77  F014         	goto	l121
  1954   0028AC                     l1487:
  1955   0028AC  500F               	movf	LCD_ESCRIBE_VAR_INT@n_digitos^(0+1280),w,c
  1956   0028AE  6E10               	movwf	??_LCD_ESCRIBE_VAR_INT^(0+1280),c
  1957   0028B0  6A11               	clrf	(??_LCD_ESCRIBE_VAR_INT+1)^(0+1280),c
  1958                           
  1959                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1960                           ; Switch size 1, requested type "simple"
  1961                           ; Number of cases is 1, Range of values is 0 to 0
  1962                           ; switch strategies available:
  1963                           ; Name         Instructions Cycles
  1964                           ; simple_byte            4     3 (average)
  1965                           ;	Chosen strategy is simple_byte
  1966   0028B2  5011               	movf	(??_LCD_ESCRIBE_VAR_INT+1)^(0+1280),w,c
  1967   0028B4  0A00               	xorlw	0	; case 0
  1968   0028B6  B4D8               	btfsc	status,2,c
  1969   0028B8  EF60  F014         	goto	l1607
  1970   0028BC  EF77  F014         	goto	l121
  1971   0028C0                     l1607:
  1972                           
  1973                           ; Switch size 1, requested type "simple"
  1974                           ; Number of cases is 5, Range of values is 1 to 5
  1975                           ; switch strategies available:
  1976                           ; Name         Instructions Cycles
  1977                           ; simple_byte           16     9 (average)
  1978                           ;	Chosen strategy is simple_byte
  1979   0028C0  5010               	movf	??_LCD_ESCRIBE_VAR_INT^(0+1280),w,c
  1980   0028C2  0A01               	xorlw	1	; case 1
  1981   0028C4  B4D8               	btfsc	status,2,c
  1982   0028C6  EF10  F014         	goto	l1475
  1983   0028CA  0A03               	xorlw	3	; case 2
  1984   0028CC  B4D8               	btfsc	status,2,c
  1985   0028CE  EF16  F014         	goto	l1477
  1986   0028D2  0A01               	xorlw	1	; case 3
  1987   0028D4  B4D8               	btfsc	status,2,c
  1988   0028D6  EF20  F014         	goto	l1479
  1989   0028DA  0A07               	xorlw	7	; case 4
  1990   0028DC  B4D8               	btfsc	status,2,c
  1991   0028DE  EF2E  F014         	goto	l1481
  1992   0028E2  0A01               	xorlw	1	; case 5
  1993   0028E4  B4D8               	btfsc	status,2,c
  1994   0028E6  EF40  F014         	goto	l1483
  1995   0028EA  EF77  F014         	goto	l121
  1996   0028EE                     l121:
  1997   0028EE  0012               	return		;funcret
  1998   0028F0                     __end_of_LCD_ESCRIBE_VAR_INT:
  1999                           	callstack 0
  2000                           
  2001 ;; *************** function ___lwmod *****************
  2002 ;; Defined at:
  2003 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\lwmod.c"
  2004 ;; Parameters:    Size  Location     Type
  2005 ;;  dividend        2    0[COMRAM] unsigned int 
  2006 ;;  divisor         2    2[COMRAM] unsigned int 
  2007 ;; Auto vars:     Size  Location     Type
  2008 ;;  counter         1    4[COMRAM] unsigned char 
  2009 ;; Return value:  Size  Location     Type
  2010 ;;                  2    0[COMRAM] unsigned int 
  2011 ;; Registers used:
  2012 ;;		wreg, status,2, status,0
  2013 ;; Tracked objects:
  2014 ;;		On entry : 0/0
  2015 ;;		On exit  : 0/0
  2016 ;;		Unchanged: 0/0
  2017 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2018 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2019 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2020 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2021 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2022 ;;Total ram usage:        5 bytes
  2023 ;; Hardware stack levels used: 1
  2024 ;; This function calls:
  2025 ;;		Nothing
  2026 ;; This function is called by:
  2027 ;;		_LCD_ESCRIBE_VAR_INT
  2028 ;; This function uses a non-reentrant model
  2029 ;;
  2030                           
  2031                           	psect	text14
  2032   002A50                     __ptext14:
  2033                           	callstack 0
  2034   002A50                     ___lwmod:
  2035                           	callstack 125
  2036   002A50  5003               	movf	___lwmod@divisor^(0+1280),w,c
  2037   002A52  1004               	iorwf	(___lwmod@divisor+1)^(0+1280),w,c
  2038   002A54  B4D8               	btfsc	status,2,c
  2039   002A56  EF2F  F015         	goto	u411
  2040   002A5A  EF31  F015         	goto	u410
  2041   002A5E                     u411:
  2042   002A5E  EF55  F015         	goto	l743
  2043   002A62                     u410:
  2044   002A62  0E01               	movlw	1
  2045   002A64  6E05               	movwf	___lwmod@counter^(0+1280),c
  2046   002A66  EF39  F015         	goto	l1435
  2047   002A6A                     l1433:
  2048   002A6A  90D8               	bcf	status,0,c
  2049   002A6C  3603               	rlcf	___lwmod@divisor^(0+1280),f,c
  2050   002A6E  3604               	rlcf	(___lwmod@divisor+1)^(0+1280),f,c
  2051   002A70  2A05               	incf	___lwmod@counter^(0+1280),f,c
  2052   002A72                     l1435:
  2053   002A72  AE04               	btfss	(___lwmod@divisor+1)^(0+1280),7,c
  2054   002A74  EF3E  F015         	goto	u421
  2055   002A78  EF40  F015         	goto	u420
  2056   002A7C                     u421:
  2057   002A7C  EF35  F015         	goto	l1433
  2058   002A80                     u420:
  2059   002A80                     l1437:
  2060   002A80  5003               	movf	___lwmod@divisor^(0+1280),w,c
  2061   002A82  5C01               	subwf	___lwmod@dividend^(0+1280),w,c
  2062   002A84  5004               	movf	(___lwmod@divisor+1)^(0+1280),w,c
  2063   002A86  5802               	subwfb	(___lwmod@dividend+1)^(0+1280),w,c
  2064   002A88  A0D8               	btfss	status,0,c
  2065   002A8A  EF49  F015         	goto	u431
  2066   002A8E  EF4B  F015         	goto	u430
  2067   002A92                     u431:
  2068   002A92  EF4F  F015         	goto	l1441
  2069   002A96                     u430:
  2070   002A96  5003               	movf	___lwmod@divisor^(0+1280),w,c
  2071   002A98  5E01               	subwf	___lwmod@dividend^(0+1280),f,c
  2072   002A9A  5004               	movf	(___lwmod@divisor+1)^(0+1280),w,c
  2073   002A9C  5A02               	subwfb	(___lwmod@dividend+1)^(0+1280),f,c
  2074   002A9E                     l1441:
  2075   002A9E  90D8               	bcf	status,0,c
  2076   002AA0  3204               	rrcf	(___lwmod@divisor+1)^(0+1280),f,c
  2077   002AA2  3203               	rrcf	___lwmod@divisor^(0+1280),f,c
  2078   002AA4  2E05               	decfsz	___lwmod@counter^(0+1280),f,c
  2079   002AA6  EF40  F015         	goto	l1437
  2080   002AAA                     l743:
  2081   002AAA  C501  F501         	movff	___lwmod@dividend,?___lwmod
  2082   002AAE  C502  F502         	movff	___lwmod@dividend+1,?___lwmod+1
  2083   002AB2  0012               	return		;funcret
  2084   002AB4                     __end_of___lwmod:
  2085                           	callstack 0
  2086                           
  2087 ;; *************** function ___lwdiv *****************
  2088 ;; Defined at:
  2089 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\lwdiv.c"
  2090 ;; Parameters:    Size  Location     Type
  2091 ;;  dividend        2    5[COMRAM] unsigned int 
  2092 ;;  divisor         2    7[COMRAM] unsigned int 
  2093 ;; Auto vars:     Size  Location     Type
  2094 ;;  quotient        2    9[COMRAM] unsigned int 
  2095 ;;  counter         1   11[COMRAM] unsigned char 
  2096 ;; Return value:  Size  Location     Type
  2097 ;;                  2    5[COMRAM] unsigned int 
  2098 ;; Registers used:
  2099 ;;		wreg, status,2, status,0
  2100 ;; Tracked objects:
  2101 ;;		On entry : 0/0
  2102 ;;		On exit  : 0/0
  2103 ;;		Unchanged: 0/0
  2104 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2105 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2106 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2107 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2108 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2109 ;;Total ram usage:        7 bytes
  2110 ;; Hardware stack levels used: 1
  2111 ;; This function calls:
  2112 ;;		Nothing
  2113 ;; This function is called by:
  2114 ;;		_LCD_ESCRIBE_VAR_INT
  2115 ;; This function uses a non-reentrant model
  2116 ;;
  2117                           
  2118                           	psect	text15
  2119   00296A                     __ptext15:
  2120                           	callstack 0
  2121   00296A                     ___lwdiv:
  2122                           	callstack 125
  2123   00296A  0E00               	movlw	0
  2124   00296C  6E0B               	movwf	(___lwdiv@quotient+1)^(0+1280),c
  2125   00296E  0E00               	movlw	0
  2126   002970  6E0A               	movwf	___lwdiv@quotient^(0+1280),c
  2127   002972  5008               	movf	___lwdiv@divisor^(0+1280),w,c
  2128   002974  1009               	iorwf	(___lwdiv@divisor+1)^(0+1280),w,c
  2129   002976  B4D8               	btfsc	status,2,c
  2130   002978  EFC0  F014         	goto	u381
  2131   00297C  EFC2  F014         	goto	u380
  2132   002980                     u381:
  2133   002980  EFEA  F014         	goto	l733
  2134   002984                     u380:
  2135   002984  0E01               	movlw	1
  2136   002986  6E0C               	movwf	___lwdiv@counter^(0+1280),c
  2137   002988  EFCA  F014         	goto	l1415
  2138   00298C                     l1413:
  2139   00298C  90D8               	bcf	status,0,c
  2140   00298E  3608               	rlcf	___lwdiv@divisor^(0+1280),f,c
  2141   002990  3609               	rlcf	(___lwdiv@divisor+1)^(0+1280),f,c
  2142   002992  2A0C               	incf	___lwdiv@counter^(0+1280),f,c
  2143   002994                     l1415:
  2144   002994  AE09               	btfss	(___lwdiv@divisor+1)^(0+1280),7,c
  2145   002996  EFCF  F014         	goto	u391
  2146   00299A  EFD1  F014         	goto	u390
  2147   00299E                     u391:
  2148   00299E  EFC6  F014         	goto	l1413
  2149   0029A2                     u390:
  2150   0029A2                     l1417:
  2151   0029A2  90D8               	bcf	status,0,c
  2152   0029A4  360A               	rlcf	___lwdiv@quotient^(0+1280),f,c
  2153   0029A6  360B               	rlcf	(___lwdiv@quotient+1)^(0+1280),f,c
  2154   0029A8  5008               	movf	___lwdiv@divisor^(0+1280),w,c
  2155   0029AA  5C06               	subwf	___lwdiv@dividend^(0+1280),w,c
  2156   0029AC  5009               	movf	(___lwdiv@divisor+1)^(0+1280),w,c
  2157   0029AE  5807               	subwfb	(___lwdiv@dividend+1)^(0+1280),w,c
  2158   0029B0  A0D8               	btfss	status,0,c
  2159   0029B2  EFDD  F014         	goto	u401
  2160   0029B6  EFDF  F014         	goto	u400
  2161   0029BA                     u401:
  2162   0029BA  EFE4  F014         	goto	l1425
  2163   0029BE                     u400:
  2164   0029BE  5008               	movf	___lwdiv@divisor^(0+1280),w,c
  2165   0029C0  5E06               	subwf	___lwdiv@dividend^(0+1280),f,c
  2166   0029C2  5009               	movf	(___lwdiv@divisor+1)^(0+1280),w,c
  2167   0029C4  5A07               	subwfb	(___lwdiv@dividend+1)^(0+1280),f,c
  2168   0029C6  800A               	bsf	___lwdiv@quotient^(0+1280),0,c
  2169   0029C8                     l1425:
  2170   0029C8  90D8               	bcf	status,0,c
  2171   0029CA  3209               	rrcf	(___lwdiv@divisor+1)^(0+1280),f,c
  2172   0029CC  3208               	rrcf	___lwdiv@divisor^(0+1280),f,c
  2173   0029CE  2E0C               	decfsz	___lwdiv@counter^(0+1280),f,c
  2174   0029D0  EFD1  F014         	goto	l1417
  2175   0029D4                     l733:
  2176   0029D4  C50A  F506         	movff	___lwdiv@quotient,?___lwdiv
  2177   0029D8  C50B  F507         	movff	___lwdiv@quotient+1,?___lwdiv+1
  2178   0029DC  0012               	return		;funcret
  2179   0029DE                     __end_of___lwdiv:
  2180                           	callstack 0
  2181                           
  2182 ;; *************** function _ESCRIBE_MENSAJE2 *****************
  2183 ;; Defined at:
  2184 ;;		line 77 in file "LCD.c"
  2185 ;; Parameters:    Size  Location     Type
  2186 ;;  cadena          1    3[COMRAM] PTR const unsigned char 
  2187 ;;		 -> STR_13(10), STR_11(10), STR_9(10), STR_7(10), 
  2188 ;;		 -> STR_5(10), STR_4(12), STR_1(15), 
  2189 ;; Auto vars:     Size  Location     Type
  2190 ;;  i               1    6[COMRAM] unsigned char 
  2191 ;;  tam             1    5[COMRAM] unsigned char 
  2192 ;; Return value:  Size  Location     Type
  2193 ;;                  1    wreg      void 
  2194 ;; Registers used:
  2195 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2196 ;; Tracked objects:
  2197 ;;		On entry : 0/0
  2198 ;;		On exit  : 0/0
  2199 ;;		Unchanged: 0/0
  2200 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2201 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2202 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2203 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2204 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2205 ;;Total ram usage:        4 bytes
  2206 ;; Hardware stack levels used: 1
  2207 ;; Hardware stack levels required when called: 2
  2208 ;; This function calls:
  2209 ;;		_ENVIA_CHAR
  2210 ;;		_strlen
  2211 ;; This function is called by:
  2212 ;;		_main
  2213 ;; This function uses a non-reentrant model
  2214 ;;
  2215                           
  2216                           	psect	text16
  2217   002BAE                     __ptext16:
  2218                           	callstack 0
  2219   002BAE                     _ESCRIBE_MENSAJE2:
  2220                           	callstack 124
  2221   002BAE                     
  2222                           ;LCD.c: 77: void ESCRIBE_MENSAJE2(const char *cadena);LCD.c: 78: {;LCD.c: 79:     unsign
      +                          ed char tam;;LCD.c: 80:     tam = strlen(cadena);
  2223   002BAE  C504  F501         	movff	ESCRIBE_MENSAJE2@cadena,strlen@s
  2224   002BB2  EC18  F016         	call	_strlen	;wreg free
  2225   002BB6  5001               	movf	?_strlen^(0+1280),w,c
  2226   002BB8  6E06               	movwf	ESCRIBE_MENSAJE2@tam^(0+1280),c
  2227   002BBA                     
  2228                           ;LCD.c: 82:  for(i = 0; i<tam; i++)
  2229   002BBA  0E00               	movlw	0
  2230   002BBC  6E07               	movwf	ESCRIBE_MENSAJE2@i^(0+1280),c
  2231   002BBE  EFEF  F015         	goto	l1471
  2232   002BC2                     l1467:
  2233                           
  2234                           ;LCD.c: 83:  {;LCD.c: 84:   ENVIA_CHAR(cadena[i]);
  2235   002BC2  5004               	movf	ESCRIBE_MENSAJE2@cadena^(0+1280),w,c
  2236   002BC4  2407               	addwf	ESCRIBE_MENSAJE2@i^(0+1280),w,c
  2237   002BC6  6E05               	movwf	??_ESCRIBE_MENSAJE2^(0+1280),c
  2238   002BC8  C505  F4F6         	movff	??_ESCRIBE_MENSAJE2,tblptrl
  2239   002BCC                     	if	1	;There is more than 1 active tblptr byte
  2240   002BCC  0E25               	movlw	high __smallconst
  2241   002BCE  6EF7               	movwf	tblptrh,c
  2242   002BD0                     	endif
  2243   002BD0                     	if	0	;tblptru may be non-zero
  2244   002BD0                     	endif
  2245   002BD0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2246   002BD0  0E00               	movlw	low (__smallconst shr (0+16))
  2247   002BD2  6EF8               	movwf	tblptru,c
  2248   002BD4                     	endif
  2249   002BD4  0008               	tblrd		*
  2250   002BD6  50F5               	movf	tablat,w,c
  2251   002BD8  EC4E  F016         	call	_ENVIA_CHAR
  2252   002BDC                     
  2253                           ;LCD.c: 85:  }
  2254   002BDC  2A07               	incf	ESCRIBE_MENSAJE2@i^(0+1280),f,c
  2255   002BDE                     l1471:
  2256   002BDE  5006               	movf	ESCRIBE_MENSAJE2@tam^(0+1280),w,c
  2257   002BE0  5C07               	subwf	ESCRIBE_MENSAJE2@i^(0+1280),w,c
  2258   002BE2  A0D8               	btfss	status,0,c
  2259   002BE4  EFF6  F015         	goto	u481
  2260   002BE8  EFF8  F015         	goto	u480
  2261   002BEC                     u481:
  2262   002BEC  EFE1  F015         	goto	l1467
  2263   002BF0                     u480:
  2264   002BF0  0012               	return		;funcret
  2265   002BF2                     __end_of_ESCRIBE_MENSAJE2:
  2266                           	callstack 0
  2267                           
  2268 ;; *************** function _strlen *****************
  2269 ;; Defined at:
  2270 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\strlen.c"
  2271 ;; Parameters:    Size  Location     Type
  2272 ;;  s               1    0[COMRAM] PTR const unsigned char 
  2273 ;;		 -> STR_14(12), STR_13(10), STR_12(11), STR_11(10), 
  2274 ;;		 -> STR_10(11), STR_9(10), STR_8(15), STR_7(10), 
  2275 ;;		 -> STR_6(12), STR_5(10), STR_4(12), STR_3(19), 
  2276 ;;		 -> STR_2(19), STR_1(15), 
  2277 ;; Auto vars:     Size  Location     Type
  2278 ;;  a               1    2[COMRAM] PTR const unsigned char 
  2279 ;;		 -> STR_14(12), STR_13(10), STR_12(11), STR_11(10), 
  2280 ;;		 -> STR_10(11), STR_9(10), STR_8(15), STR_7(10), 
  2281 ;;		 -> STR_6(12), STR_5(10), STR_4(12), STR_3(19), 
  2282 ;;		 -> STR_2(19), STR_1(15), 
  2283 ;; Return value:  Size  Location     Type
  2284 ;;                  2    0[COMRAM] unsigned int 
  2285 ;; Registers used:
  2286 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  2287 ;; Tracked objects:
  2288 ;;		On entry : 0/0
  2289 ;;		On exit  : 0/0
  2290 ;;		Unchanged: 0/0
  2291 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2292 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2293 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2294 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2295 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2296 ;;Total ram usage:        3 bytes
  2297 ;; Hardware stack levels used: 1
  2298 ;; This function calls:
  2299 ;;		Nothing
  2300 ;; This function is called by:
  2301 ;;		_ESCRIBE_MENSAJE2
  2302 ;;		_U1_STRING_SEND
  2303 ;; This function uses a non-reentrant model
  2304 ;;
  2305                           
  2306                           	psect	text17
  2307   002C30                     __ptext17:
  2308                           	callstack 0
  2309   002C30                     _strlen:
  2310                           	callstack 125
  2311   002C30  C501  F503         	movff	strlen@s,strlen@a
  2312   002C34  EF1D  F016         	goto	l1401
  2313   002C38                     l1399:
  2314   002C38  2A01               	incf	strlen@s^(0+1280),f,c
  2315   002C3A                     l1401:
  2316   002C3A  C501  F4F6         	movff	strlen@s,tblptrl
  2317   002C3E                     	if	1	;There is more than 1 active tblptr byte
  2318   002C3E  0E25               	movlw	high __smallconst
  2319   002C40  6EF7               	movwf	tblptrh,c
  2320   002C42                     	endif
  2321   002C42                     	if	0	;tblptru may be non-zero
  2322   002C42                     	endif
  2323   002C42                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2324   002C42  0E00               	movlw	low (__smallconst shr (0+16))
  2325   002C44  6EF8               	movwf	tblptru,c
  2326   002C46                     	endif
  2327   002C46  0008               	tblrd		*
  2328   002C48  50F5               	movf	tablat,w,c
  2329   002C4A  0900               	iorlw	0
  2330   002C4C  A4D8               	btfss	status,2,c
  2331   002C4E  EF2B  F016         	goto	u371
  2332   002C52  EF2D  F016         	goto	u370
  2333   002C56                     u371:
  2334   002C56  EF1C  F016         	goto	l1399
  2335   002C5A                     u370:
  2336   002C5A  5003               	movf	strlen@a^(0+1280),w,c
  2337   002C5C  5C01               	subwf	strlen@s^(0+1280),w,c
  2338   002C5E  6E01               	movwf	?_strlen^(0+1280),c
  2339   002C60  6A02               	clrf	(?_strlen+1)^(0+1280),c
  2340   002C62  BE01               	btfsc	?_strlen^(0+1280),7,c
  2341   002C64  0602               	decf	(?_strlen+1)^(0+1280),f,c
  2342   002C66  0012               	return		;funcret
  2343   002C68                     __end_of_strlen:
  2344                           	callstack 0
  2345                           
  2346 ;; *************** function _ENVIA_CHAR *****************
  2347 ;; Defined at:
  2348 ;;		line 88 in file "LCD.c"
  2349 ;; Parameters:    Size  Location     Type
  2350 ;;  dato            1    wreg     unsigned char 
  2351 ;; Auto vars:     Size  Location     Type
  2352 ;;  dato            1    1[COMRAM] unsigned char 
  2353 ;;  aux             1    2[COMRAM] unsigned char 
  2354 ;; Return value:  Size  Location     Type
  2355 ;;                  1    wreg      void 
  2356 ;; Registers used:
  2357 ;;		wreg, status,2, status,0, cstack
  2358 ;; Tracked objects:
  2359 ;;		On entry : 0/0
  2360 ;;		On exit  : 0/0
  2361 ;;		Unchanged: 0/0
  2362 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2363 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2364 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2365 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2366 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2367 ;;Total ram usage:        2 bytes
  2368 ;; Hardware stack levels used: 1
  2369 ;; Hardware stack levels required when called: 1
  2370 ;; This function calls:
  2371 ;;		_ENVIA_NIBBLE
  2372 ;;		_LEER_LCD
  2373 ;; This function is called by:
  2374 ;;		_ESCRIBE_MENSAJE2
  2375 ;;		_LCD_ESCRIBE_VAR_INT
  2376 ;;		_ESCRIBE_MENSAJE
  2377 ;;		_GENERACARACTER
  2378 ;;		_LCD_ESCRIBE_VAR_CHAR
  2379 ;;		_LCD_CHAR_GRADO
  2380 ;;		_LCD_VARCHAR_BITS
  2381 ;; This function uses a non-reentrant model
  2382 ;;
  2383                           
  2384                           	psect	text18
  2385   002C9C                     __ptext18:
  2386                           	callstack 0
  2387   002C9C                     _ENVIA_CHAR:
  2388                           	callstack 124
  2389                           
  2390                           ;incstack = 0
  2391                           ;ENVIA_CHAR@dato stored from wreg
  2392   002C9C  6E02               	movwf	ENVIA_CHAR@dato^(0+1280),c
  2393   002C9E                     
  2394                           ;LCD.c: 88: void ENVIA_CHAR(unsigned char dato);LCD.c: 89: {;LCD.c: 90:  unsigned char a
      +                          ux;;LCD.c: 91:  LATDbits.LATD0 = 1;
  2395   002C9E  80C1               	bsf	193,0,c	;volatile
  2396   002CA0                     
  2397                           ;LCD.c: 92:  LEER_LCD();
  2398   002CA0  ECEF  F014         	call	_LEER_LCD	;wreg free
  2399   002CA4                     
  2400                           ;LCD.c: 93:  TRISD = 0x00;
  2401   002CA4  0E00               	movlw	0
  2402   002CA6  6EC9               	movwf	201,c	;volatile
  2403   002CA8                     
  2404                           ;LCD.c: 94:     _delay((unsigned long)((100)*(32000000UL/4000000.0)));
  2405   002CA8  0EA0               	movlw	160
  2406   002CAA                     u657:
  2407   002CAA  D000               	nop2	
  2408   002CAC  2EE8               	decfsz	wreg,f,c
  2409   002CAE  D7FD               	bra	u657
  2410   002CB0                     
  2411                           ;LCD.c: 95:  LATDbits.LATD1 = 0;
  2412   002CB0  92C1               	bcf	193,1,c	;volatile
  2413   002CB2                     
  2414                           ;LCD.c: 96:  LATDbits.LATD2 = 0;
  2415   002CB2  94C1               	bcf	193,2,c	;volatile
  2416   002CB4                     
  2417                           ;LCD.c: 97:  LATDbits.LATD0 = 1;
  2418   002CB4  80C1               	bsf	193,0,c	;volatile
  2419   002CB6                     
  2420                           ;LCD.c: 98:  aux = dato & 0xF0;
  2421   002CB6  5002               	movf	ENVIA_CHAR@dato^(0+1280),w,c
  2422   002CB8  0BF0               	andlw	240
  2423   002CBA  6E03               	movwf	ENVIA_CHAR@aux^(0+1280),c
  2424   002CBC                     
  2425                           ;LCD.c: 99:  ENVIA_NIBBLE(aux);
  2426   002CBC  5003               	movf	ENVIA_CHAR@aux^(0+1280),w,c
  2427   002CBE  ECA7  F016         	call	_ENVIA_NIBBLE
  2428   002CC2                     
  2429                           ;LCD.c: 100:  aux = dato << 4;
  2430   002CC2  3802               	swapf	ENVIA_CHAR@dato^(0+1280),w,c
  2431   002CC4  0BF0               	andlw	240
  2432   002CC6  6E03               	movwf	ENVIA_CHAR@aux^(0+1280),c
  2433   002CC8                     
  2434                           ;LCD.c: 101:  ENVIA_NIBBLE(aux);
  2435   002CC8  5003               	movf	ENVIA_CHAR@aux^(0+1280),w,c
  2436   002CCA  ECA7  F016         	call	_ENVIA_NIBBLE
  2437   002CCE  0012               	return		;funcret
  2438   002CD0                     __end_of_ENVIA_CHAR:
  2439                           	callstack 0
  2440                           
  2441 ;; *************** function _LEER_LCD *****************
  2442 ;; Defined at:
  2443 ;;		line 152 in file "LCD.c"
  2444 ;; Parameters:    Size  Location     Type
  2445 ;;		None
  2446 ;; Auto vars:     Size  Location     Type
  2447 ;;  aux             1    0[COMRAM] unsigned char 
  2448 ;; Return value:  Size  Location     Type
  2449 ;;                  1    wreg      void 
  2450 ;; Registers used:
  2451 ;;		wreg, status,2, status,0
  2452 ;; Tracked objects:
  2453 ;;		On entry : 0/0
  2454 ;;		On exit  : 0/0
  2455 ;;		Unchanged: 0/0
  2456 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2457 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2458 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2459 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2460 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2461 ;;Total ram usage:        1 bytes
  2462 ;; Hardware stack levels used: 1
  2463 ;; This function calls:
  2464 ;;		Nothing
  2465 ;; This function is called by:
  2466 ;;		_ENVIA_CHAR
  2467 ;;		_ENVIA_LCD_CMD
  2468 ;; This function uses a non-reentrant model
  2469 ;;
  2470                           
  2471                           	psect	text19
  2472   0029DE                     __ptext19:
  2473                           	callstack 0
  2474   0029DE                     _LEER_LCD:
  2475                           	callstack 122
  2476   0029DE                     
  2477                           ;LCD.c: 154:  unsigned char aux;;LCD.c: 155:  TRISD = 0xF8;
  2478   0029DE  0EF8               	movlw	248
  2479   0029E0  6EC9               	movwf	201,c	;volatile
  2480   0029E2                     
  2481                           ;LCD.c: 156:  LATDbits.LATD0 = 0;
  2482   0029E2  90C1               	bcf	193,0,c	;volatile
  2483   0029E4                     
  2484                           ;LCD.c: 157:  LATDbits.LATD1 = 1;
  2485   0029E4  82C1               	bsf	193,1,c	;volatile
  2486   0029E6                     
  2487                           ;LCD.c: 158:  LATDbits.LATD2 = 1;
  2488   0029E6  84C1               	bsf	193,2,c	;volatile
  2489   0029E8                     
  2490                           ;LCD.c: 159:     _delay((unsigned long)((100)*(32000000UL/4000000.0)));
  2491   0029E8  0EA0               	movlw	160
  2492   0029EA                     u667:
  2493   0029EA  D000               	nop2	
  2494   0029EC  2EE8               	decfsz	wreg,f,c
  2495   0029EE  D7FD               	bra	u667
  2496   0029F0                     
  2497                           ;LCD.c: 160:  aux = PORTD;
  2498   0029F0  C4D1 F501          	movff	1233,LEER_LCD@aux	;volatile
  2499   0029F4                     
  2500                           ;LCD.c: 161:  LATDbits.LATD2 = 0;
  2501   0029F4  94C1               	bcf	193,2,c	;volatile
  2502   0029F6                     
  2503                           ;LCD.c: 162:     _delay((unsigned long)((100)*(32000000UL/4000000.0)));
  2504   0029F6  0EA0               	movlw	160
  2505   0029F8                     u677:
  2506   0029F8  D000               	nop2	
  2507   0029FA  2EE8               	decfsz	wreg,f,c
  2508   0029FC  D7FD               	bra	u677
  2509   0029FE                     
  2510                           ;LCD.c: 163:  LATDbits.LATD2 = 1;
  2511   0029FE  84C1               	bsf	193,2,c	;volatile
  2512   002A00                     
  2513                           ;LCD.c: 164:     _delay((unsigned long)((100)*(32000000UL/4000000.0)));
  2514   002A00  0EA0               	movlw	160
  2515   002A02                     u687:
  2516   002A02  D000               	nop2	
  2517   002A04  2EE8               	decfsz	wreg,f,c
  2518   002A06  D7FD               	bra	u687
  2519   002A08                     
  2520                           ;LCD.c: 165:  LATDbits.LATD2 = 0;
  2521   002A08  94C1               	bcf	193,2,c	;volatile
  2522   002A0A                     l943:
  2523                           
  2524                           ;LCD.c: 166:  aux = aux & 0x80;
  2525   002A0A  5001               	movf	LEER_LCD@aux^(0+1280),w,c
  2526   002A0C  0B80               	andlw	128
  2527   002A0E  6E01               	movwf	LEER_LCD@aux^(0+1280),c
  2528                           
  2529                           ;LCD.c: 167:  while(aux == 0x80)
  2530   002A10  EF1E  F015         	goto	l957
  2531   002A14                     l93:
  2532                           
  2533                           ;LCD.c: 168:         {;LCD.c: 169:             LATDbits.LATD2 = 1;
  2534   002A14  84C1               	bsf	193,2,c	;volatile
  2535   002A16                     
  2536                           ;LCD.c: 170:             _delay((unsigned long)((100)*(32000000UL/4000000.0)));
  2537   002A16  0EA0               	movlw	160
  2538   002A18                     u697:
  2539   002A18  D000               	nop2	
  2540   002A1A  2EE8               	decfsz	wreg,f,c
  2541   002A1C  D7FD               	bra	u697
  2542   002A1E                     
  2543                           ;LCD.c: 171:             aux = PORTD;
  2544   002A1E  C4D1 F501          	movff	1233,LEER_LCD@aux	;volatile
  2545   002A22                     
  2546                           ;LCD.c: 172:             LATDbits.LATD2 = 0;
  2547   002A22  94C1               	bcf	193,2,c	;volatile
  2548                           
  2549                           ;LCD.c: 173:             _delay((unsigned long)((100)*(32000000UL/4000000.0)));
  2550   002A24  0EA0               	movlw	160
  2551   002A26                     u707:
  2552   002A26  D000               	nop2	
  2553   002A28  2EE8               	decfsz	wreg,f,c
  2554   002A2A  D7FD               	bra	u707
  2555   002A2C                     
  2556                           ;LCD.c: 174:             LATDbits.LATD2 = 1;
  2557   002A2C  84C1               	bsf	193,2,c	;volatile
  2558                           
  2559                           ;LCD.c: 175:             _delay((unsigned long)((100)*(32000000UL/4000000.0)));
  2560   002A2E  0EA0               	movlw	160
  2561   002A30                     u717:
  2562   002A30  D000               	nop2	
  2563   002A32  2EE8               	decfsz	wreg,f,c
  2564   002A34  D7FD               	bra	u717
  2565   002A36                     
  2566                           ;LCD.c: 176:             LATDbits.LATD2 = 0;
  2567   002A36  94C1               	bcf	193,2,c	;volatile
  2568   002A38  EF05  F015         	goto	l943
  2569   002A3C                     l957:
  2570                           
  2571                           ;LCD.c: 167:  while(aux == 0x80)
  2572   002A3C  0E80               	movlw	128
  2573   002A3E  1801               	xorwf	LEER_LCD@aux^(0+1280),w,c
  2574   002A40  B4D8               	btfsc	status,2,c
  2575   002A42  EF25  F015         	goto	u11
  2576   002A46  EF27  F015         	goto	u10
  2577   002A4A                     u11:
  2578   002A4A  EF0A  F015         	goto	l93
  2579   002A4E                     u10:
  2580   002A4E  0012               	return		;funcret
  2581   002A50                     __end_of_LEER_LCD:
  2582                           	callstack 0
  2583                           
  2584 ;; *************** function _ENVIA_NIBBLE *****************
  2585 ;; Defined at:
  2586 ;;		line 126 in file "LCD.c"
  2587 ;; Parameters:    Size  Location     Type
  2588 ;;  dato            1    wreg     unsigned char 
  2589 ;; Auto vars:     Size  Location     Type
  2590 ;;  dato            1    0[COMRAM] unsigned char 
  2591 ;; Return value:  Size  Location     Type
  2592 ;;                  1    wreg      void 
  2593 ;; Registers used:
  2594 ;;		wreg, status,2, status,0
  2595 ;; Tracked objects:
  2596 ;;		On entry : 0/0
  2597 ;;		On exit  : 0/0
  2598 ;;		Unchanged: 0/0
  2599 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2600 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2601 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2602 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2603 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2604 ;;Total ram usage:        1 bytes
  2605 ;; Hardware stack levels used: 1
  2606 ;; This function calls:
  2607 ;;		Nothing
  2608 ;; This function is called by:
  2609 ;;		_ENVIA_CHAR
  2610 ;;		_LCD_CONFIG
  2611 ;;		_ENVIA_LCD_CMD
  2612 ;; This function uses a non-reentrant model
  2613 ;;
  2614                           
  2615                           	psect	text20
  2616   002D4E                     __ptext20:
  2617                           	callstack 0
  2618   002D4E                     _ENVIA_NIBBLE:
  2619                           	callstack 123
  2620                           
  2621                           ;incstack = 0
  2622                           ;ENVIA_NIBBLE@dato stored from wreg
  2623   002D4E  6E01               	movwf	ENVIA_NIBBLE@dato^(0+1280),c
  2624   002D50                     
  2625                           ;LCD.c: 126: void ENVIA_NIBBLE(unsigned char dato);LCD.c: 127: {;LCD.c: 128:  LATD &= 0x
      +                          0F;
  2626   002D50  0E0F               	movlw	15
  2627   002D52  16C1               	andwf	193,f,c	;volatile
  2628                           
  2629                           ;LCD.c: 129:  dato &= 0xF0;
  2630   002D54  0EF0               	movlw	240
  2631   002D56  1601               	andwf	ENVIA_NIBBLE@dato^(0+1280),f,c
  2632                           
  2633                           ;LCD.c: 130:  LATD|= dato;
  2634   002D58  5001               	movf	ENVIA_NIBBLE@dato^(0+1280),w,c	;volatile
  2635   002D5A  12C1               	iorwf	193,f,c	;volatile
  2636   002D5C                     
  2637                           ;LCD.c: 131:  LATDbits.LATD2 = 1;
  2638   002D5C  84C1               	bsf	193,2,c	;volatile
  2639   002D5E                     
  2640                           ;LCD.c: 132:     _delay((unsigned long)((100)*(32000000UL/4000000.0)));
  2641   002D5E  0EA0               	movlw	160
  2642   002D60                     u727:
  2643   002D60  D000               	nop2	
  2644   002D62  2EE8               	decfsz	wreg,f,c
  2645   002D64  D7FD               	bra	u727
  2646   002D66                     
  2647                           ;LCD.c: 133:  LATDbits.LATD2 = 0;
  2648   002D66  94C1               	bcf	193,2,c	;volatile
  2649   002D68  0012               	return		;funcret
  2650   002D6A                     __end_of_ENVIA_NIBBLE:
  2651                           	callstack 0
  2652                           
  2653                           	psect	rparam
  2654   000000                     
  2655                           	psect	config
  2656                           
  2657                           ;Config register CONFIG1 @ 0x300000
  2658                           ;	External Oscillator Selection
  2659                           ;	FEXTOSC = OFF, Oscillator not enabled
  2660                           ;	Reset Oscillator Selection
  2661                           ;	RSTOSC = EXTOSC, EXTOSC operating per FEXTOSC bits (device manufacturing default)
  2662   300000                     	org	3145728
  2663   300000  FC                 	db	252
  2664                           
  2665                           ;Config register CONFIG2 @ 0x300001
  2666                           ;	Clock out Enable bit
  2667                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
  2668                           ;	PRLOCKED One-Way Set Enable bit
  2669                           ;	PR1WAY = ON, PRLOCKED bit can be cleared and set only once
  2670                           ;	Clock Switch Enable bit
  2671                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
  2672                           ;	Fail-Safe Clock Monitor Enable bit
  2673                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
  2674   300001                     	org	3145729
  2675   300001  FF                 	db	255
  2676                           
  2677                           ;Config register CONFIG3 @ 0x300002
  2678                           ;	MCLR Enable bit
  2679                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
  2680                           ;	Power-up timer selection bits
  2681                           ;	PWRTS = PWRT_64, PWRT set at 64ms
  2682                           ;	Multi-vector enable bit
  2683                           ;	MVECEN = ON, Multi-vector enabled, Vector table used for interrupts
  2684                           ;	IVTLOCK bit One-way set enable bit
  2685                           ;	IVT1WAY = ON, IVTLOCKED bit can be cleared and set only once
  2686                           ;	Low Power BOR Enable bit
  2687                           ;	LPBOREN = OFF, Low-Power BOR disabled
  2688                           ;	Brown-out Reset Enable bits
  2689                           ;	BOREN = OFF, Brown-out Reset disabled
  2690   300002                     	org	3145730
  2691   300002  3D                 	db	61
  2692                           
  2693                           ;Config register CONFIG4 @ 0x300003
  2694                           ;	Brown-out Reset Voltage Selection bits
  2695                           ;	BORV = VBOR_1P9, Brown-out Reset Voltage (VBOR) set to 1.9V
  2696                           ;	ZCD Disable bit
  2697                           ;	ZCD = OFF, ZCD module is disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCD
      +                          CON
  2698                           ;	PPSLOCK bit One-Way Set Enable bit
  2699                           ;	PPS1WAY = ON, PPSLOCKED bit can be cleared and set only once; PPS registers remain loc
      +                          ked after one clear/set cycle
  2700                           ;	Stack Full/Underflow Reset Enable bit
  2701                           ;	STVREN = ON, Stack full/underflow will cause Reset
  2702                           ;	Low Voltage Programming Enable bit
  2703                           ;	LVP = OFF, HV on MCLR/VPP must be used for programming
  2704                           ;	Extended Instruction Set Enable bit
  2705                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
  2706   300003                     	org	3145731
  2707   300003  DF                 	db	223
  2708                           
  2709                           ;Config register CONFIG5 @ 0x300004
  2710                           ;	WDT Period selection bits
  2711                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  2712                           ;	WDT operating mode
  2713                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
  2714   300004                     	org	3145732
  2715   300004  9F                 	db	159
  2716                           
  2717                           ;Config register CONFIG6 @ 0x300005
  2718                           ;	WDT Window Select bits
  2719                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
  2720                           ;	WDT input clock selector
  2721                           ;	WDTCCS = SC, Software Control
  2722   300005                     	org	3145733
  2723   300005  FF                 	db	255
  2724                           
  2725                           ;Config register CONFIG7 @ 0x300006
  2726                           ;	Boot Block Size selection bits
  2727                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
  2728                           ;	Boot Block enable bit
  2729                           ;	BBEN = OFF, Boot block disabled
  2730                           ;	Storage Area Flash enable bit
  2731                           ;	SAFEN = OFF, SAF disabled
  2732                           ;	Background Debugger
  2733                           ;	DEBUG = OFF, Background Debugger disabled
  2734   300006                     	org	3145734
  2735   300006  FF                 	db	255
  2736                           
  2737                           ;Config register CONFIG8 @ 0x300007
  2738                           ;	Boot Block Write Protection bit
  2739                           ;	WRTB = OFF, Boot Block not Write protected
  2740                           ;	Configuration Register Write Protection bit
  2741                           ;	WRTC = OFF, Configuration registers not Write protected
  2742                           ;	Data EEPROM Write Protection bit
  2743                           ;	WRTD = OFF, Data EEPROM not Write protected
  2744                           ;	SAF Write protection bit
  2745                           ;	WRTSAF = OFF, SAF not Write Protected
  2746                           ;	Application Block write protection bit
  2747                           ;	WRTAPP = OFF, Application Block not write protected
  2748   300007                     	org	3145735
  2749   300007  FF                 	db	255
  2750                           
  2751                           ;Config register CONFIG10 @ 0x300009
  2752                           ;	PFM and Data EEPROM Code Protection bit
  2753                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
  2754   300009                     	org	3145737
  2755   300009  FF                 	db	255
  2756                           tosu	equ	0x4FF
  2757                           tosh	equ	0x4FE
  2758                           tosl	equ	0x4FD
  2759                           stkptr	equ	0x4FC
  2760                           pclatu	equ	0x4FB
  2761                           pclath	equ	0x4FA
  2762                           pcl	equ	0x4F9
  2763                           tblptru	equ	0x4F8
  2764                           tblptrh	equ	0x4F7
  2765                           tblptrl	equ	0x4F6
  2766                           tablat	equ	0x4F5
  2767                           prodh	equ	0x4F4
  2768                           prodl	equ	0x4F3
  2769                           indf0	equ	0x4EF
  2770                           postinc0	equ	0x4EE
  2771                           postdec0	equ	0x4ED
  2772                           preinc0	equ	0x4EC
  2773                           plusw0	equ	0x4EB
  2774                           fsr0h	equ	0x4EA
  2775                           fsr0l	equ	0x4E9
  2776                           wreg	equ	0x4E8
  2777                           indf1	equ	0x4E7
  2778                           postinc1	equ	0x4E6
  2779                           postdec1	equ	0x4E5
  2780                           preinc1	equ	0x4E4
  2781                           plusw1	equ	0x4E3
  2782                           fsr1h	equ	0x4E2
  2783                           fsr1l	equ	0x4E1
  2784                           bsr	equ	0x4E0
  2785                           indf2	equ	0x4DF
  2786                           postinc2	equ	0x4DE
  2787                           postdec2	equ	0x4DD
  2788                           preinc2	equ	0x4DC
  2789                           plusw2	equ	0x4DB
  2790                           fsr2h	equ	0x4DA
  2791                           fsr2l	equ	0x4D9
  2792                           status	equ	0x4D8

Data Sizes:
    Strings     166
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     24      26
    BANK5           160      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0
    BANK32          256      0       0
    BANK33          256      0       0
    BANK34          256      0       0
    BANK35          256      0       0
    BANK36          256      0       0

Pointer List with Targets:

    ESCRIBE_MENSAJE2@cadena	PTR const unsigned char  size(1) Largest target is 15
		 -> STR_1(CODE[15]), STR_11(CODE[10]), STR_13(CODE[10]), STR_4(CODE[12]), 
		 -> STR_5(CODE[10]), STR_7(CODE[10]), STR_9(CODE[10]), 

    strlen@a	PTR const unsigned char  size(1) Largest target is 19
		 -> STR_1(CODE[15]), STR_10(CODE[11]), STR_11(CODE[10]), STR_12(CODE[11]), 
		 -> STR_13(CODE[10]), STR_14(CODE[12]), STR_2(CODE[19]), STR_3(CODE[19]), 
		 -> STR_4(CODE[12]), STR_5(CODE[10]), STR_6(CODE[12]), STR_7(CODE[10]), 
		 -> STR_8(CODE[15]), STR_9(CODE[10]), 

    strlen@s	PTR const unsigned char  size(1) Largest target is 19
		 -> STR_1(CODE[15]), STR_10(CODE[11]), STR_11(CODE[10]), STR_12(CODE[11]), 
		 -> STR_13(CODE[10]), STR_14(CODE[12]), STR_2(CODE[19]), STR_3(CODE[19]), 
		 -> STR_4(CODE[12]), STR_5(CODE[10]), STR_6(CODE[12]), STR_7(CODE[10]), 
		 -> STR_8(CODE[15]), STR_9(CODE[10]), 

    U1_STRING_SEND@cadena	PTR const unsigned char  size(1) Largest target is 19
		 -> STR_10(CODE[11]), STR_12(CODE[11]), STR_14(CODE[12]), STR_2(CODE[19]), 
		 -> STR_3(CODE[19]), STR_6(CODE[12]), STR_8(CODE[15]), 


Critical Paths under _main in COMRAM

    _main->_LCD_ESCRIBE_VAR_INT
    _configuro->_LCD_INIT
    _LCD_INIT->_CURSOR_ONOFF
    _LCD_INIT->_LCD_CONFIG
    _LCD_CONFIG->_ENVIA_LCD_CMD
    _CURSOR_ONOFF->_ENVIA_LCD_CMD
    _CURSOR_HOME->_ENVIA_LCD_CMD
    _BORRAR_LCD->_ENVIA_LCD_CMD
    _U1_STRING_SEND->_strlen
    _POS_CURSOR->_ENVIA_LCD_CMD
    _ENVIA_LCD_CMD->_ENVIA_NIBBLE
    _ENVIA_LCD_CMD->_LEER_LCD
    _LCD_ESCRIBE_VAR_INT->___lwdiv
    ___lwdiv->___lwmod
    _ESCRIBE_MENSAJE2->_ENVIA_CHAR
    _ESCRIBE_MENSAJE2->_strlen
    _ENVIA_CHAR->_ENVIA_NIBBLE
    _ENVIA_CHAR->_LEER_LCD

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _main in BANK32

    None.

Critical Paths under _main in BANK33

    None.

Critical Paths under _main in BANK34

    None.

Critical Paths under _main in BANK35

    None.

Critical Paths under _main in BANK36

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    5540
                                             22 COMRAM     2     2      0
                   _ESCRIBE_MENSAJE2
                _LCD_ESCRIBE_VAR_INT
                         _POS_CURSOR
                        _U1_NEW_LINE
                     _U1_STRING_SEND
                          _configuro
                    _tomamuestra_ADC
 ---------------------------------------------------------------------------------
 (1) _tomamuestra_ADC                                      4     2      2       0
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _configuro                                            0     0      0     525
                           _LCD_INIT
 ---------------------------------------------------------------------------------
 (2) _LCD_INIT                                             1     1      0     525
                                              4 COMRAM     1     1      0
                         _BORRAR_LCD
                        _CURSOR_HOME
                       _CURSOR_ONOFF
                         _LCD_CONFIG
 ---------------------------------------------------------------------------------
 (3) _LCD_CONFIG                                           1     1      0     135
                                              3 COMRAM     1     1      0
                      _ENVIA_LCD_CMD
                       _ENVIA_NIBBLE
 ---------------------------------------------------------------------------------
 (3) _CURSOR_ONOFF                                         1     1      0     150
                                              3 COMRAM     1     1      0
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (3) _CURSOR_HOME                                          0     0      0     120
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (3) _BORRAR_LCD                                           0     0      0     120
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (1) _U1_STRING_SEND                                       4     3      1     903
                                              3 COMRAM     4     3      1
                       _U1_BYTE_SEND
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _U1_BYTE_SEND                                         1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _U1_NEW_LINE                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _POS_CURSOR                                           2     1      1     828
                                              3 COMRAM     2     1      1
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (4) _ENVIA_LCD_CMD                                        2     2      0     120
                                              1 COMRAM     2     2      0
                       _ENVIA_NIBBLE
                           _LEER_LCD
 ---------------------------------------------------------------------------------
 (1) _LCD_ESCRIBE_VAR_INT                                 10     7      3    2276
                                             12 COMRAM    10     7      3
                         _ENVIA_CHAR
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     767
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     770
                                              5 COMRAM     7     3      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (1) _ESCRIBE_MENSAJE2                                     4     3      1    1008
                                              3 COMRAM     4     3      1
                         _ENVIA_CHAR
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strlen                                               3     1      2     242
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _ENVIA_CHAR                                           2     2      0     120
                                              1 COMRAM     2     2      0
                       _ENVIA_NIBBLE
                           _LEER_LCD
 ---------------------------------------------------------------------------------
 (5) _LEER_LCD                                             1     1      0      45
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _ENVIA_NIBBLE                                         1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ESCRIBE_MENSAJE2
     _ENVIA_CHAR
       _ENVIA_NIBBLE
       _LEER_LCD
     _strlen
   _LCD_ESCRIBE_VAR_INT
     _ENVIA_CHAR
     ___lwdiv
       ___lwmod (ARG)
     ___lwmod
   _POS_CURSOR
     _ENVIA_LCD_CMD
       _ENVIA_NIBBLE
       _LEER_LCD
   _U1_NEW_LINE
   _U1_STRING_SEND
     _U1_BYTE_SEND
     _strlen
   _configuro
     _LCD_INIT
       _BORRAR_LCD
         _ENVIA_LCD_CMD
       _CURSOR_HOME
         _ENVIA_LCD_CMD
       _CURSOR_ONOFF
         _ENVIA_LCD_CMD
       _LCD_CONFIG
         _ENVIA_LCD_CMD
         _ENVIA_NIBBLE
   _tomamuestra_ADC

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0       0      69        0.0%
EEDATA             400      0       0       0        0.0%
BITBIGSFRllhhhl    175      0       0      85        0.0%
BITBIGSFRllhhhl    137      0       0      81        0.0%
BITBIGSFR_1        100      0       0      68        0.0%
BITBANK36          100      0       0      66        0.0%
BANK36             100      0       0      67        0.0%
BITBANK35          100      0       0      64        0.0%
BANK35             100      0       0      65        0.0%
BITBANK34          100      0       0      62        0.0%
BANK34             100      0       0      63        0.0%
BITBANK33          100      0       0      60        0.0%
BANK33             100      0       0      61        0.0%
BITBANK32          100      0       0      58        0.0%
BANK32             100      0       0      59        0.0%
BITBANK31          100      0       0      56        0.0%
BANK31             100      0       0      57        0.0%
BITBANK30          100      0       0      54        0.0%
BANK30             100      0       0      55        0.0%
BITBANK29          100      0       0      52        0.0%
BANK29             100      0       0      53        0.0%
BITBANK28          100      0       0      50        0.0%
BANK28             100      0       0      51        0.0%
BITBANK27          100      0       0      48        0.0%
BANK27             100      0       0      49        0.0%
BITBANK26          100      0       0      46        0.0%
BANK26             100      0       0      47        0.0%
BITBANK25          100      0       0      44        0.0%
BANK25             100      0       0      45        0.0%
BITBANK24          100      0       0      42        0.0%
BANK24             100      0       0      43        0.0%
BITBANK23          100      0       0      40        0.0%
BANK23             100      0       0      41        0.0%
BITBANK22          100      0       0      38        0.0%
BANK22             100      0       0      39        0.0%
BITBANK21          100      0       0      36        0.0%
BANK21             100      0       0      37        0.0%
BITBANK20          100      0       0      34        0.0%
BANK20             100      0       0      35        0.0%
BITBANK19          100      0       0      32        0.0%
BANK19             100      0       0      33        0.0%
BITBANK18          100      0       0      30        0.0%
BANK18             100      0       0      31        0.0%
BITBANK17          100      0       0      28        0.0%
BANK17             100      0       0      29        0.0%
BITBANK16          100      0       0      26        0.0%
BANK16             100      0       0      27        0.0%
BITBANK15          100      0       0      24        0.0%
BANK15             100      0       0      25        0.0%
BITBANK14          100      0       0      22        0.0%
BANK14             100      0       0      23        0.0%
BITBANK13          100      0       0      20        0.0%
BANK13             100      0       0      21        0.0%
BITBANK12          100      0       0      18        0.0%
BANK12             100      0       0      19        0.0%
BITBANK11          100      0       0      16        0.0%
BANK11             100      0       0      17        0.0%
BITBANK10          100      0       0      14        0.0%
BANK10             100      0       0      15        0.0%
BITBANK9           100      0       0      12        0.0%
BANK9              100      0       0      13        0.0%
BITBANK8           100      0       0      10        0.0%
BANK8              100      0       0      11        0.0%
BITBANK7           100      0       0       8        0.0%
BANK7              100      0       0       9        0.0%
BITBANK6           100      0       0       6        0.0%
BANK6              100      0       0       7        0.0%
BITBIGSFRlll        AD      0       0      88        0.0%
BITBANK5            A0      0       0       4        0.0%
BANK5               A0      0       0       5        0.0%
BITBIGSFRlhh        98      0       0      74        0.0%
BITBIGSFRllhhhl     79      0       0      84        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     18      1A       1       27.4%
BITBIGSFRhhh        2E      0       0      70        0.0%
BITBIGSFRlhl         F      0       0      75        0.0%
BITBIGSFRllhhhl      C      0       0      79        0.0%
BITBIGSFRllhhhl      7      0       0      83        0.0%
BITBIGSFRllhhhh      7      0       0      76        0.0%
BITBIGSFRllhhhh      7      0       0      78        0.0%
BITBIGSFRllhhhl      6      0       0      80        0.0%
BITBIGSFRllhhhh      6      0       0      77        0.0%
BITBIGSFRhhlh        5      0       0      71        0.0%
BITBIGSFRhll         4      0       0      73        0.0%
BITBIGSFRllhl        3      0       0      87        0.0%
BITBIGSFRllhhhl      2      0       0      82        0.0%
BITBIGSFRllhhl       1      0       0      86        0.0%
BITBIGSFRhhll        1      0       0      72        0.0%
BIGSFR_1             0      0       0     200        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      1A      89        0.0%
DATA                 0      0      1A       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Wed Nov 08 20:51:26 2023

                          l32 2968                            l28 2968                            l45 2D92  
                          l62 2CFE                            l80 2D9A                            l74 2BF0  
                          l83 2B68                            l93 2A14                            l77 2CCE  
                          l86 2D68                            l95 2A4E                            l89 2C9A  
                          u10 2A4E                            u11 2A4A                            u20 2CE2  
                          u21 2CDE                            u30 2CF8                            u31 2CF4  
                          u50 2D80                            u51 2D7C                 ENVIA_CHAR@aux 0503  
                         l103 2C2E                           l121 28EE                           l202 2D80  
                         l211 2D06                           l220 2D2C                           l214 2D18  
                         l223 2D4C                           l208 2BAC                           l217 2D26  
                         l196 2B14                           l199 2D70                           l740 29DC  
                         l733 29D4                           l750 2AB2                           l743 2AAA  
                         l921 29DE                           l931 29F0                           l923 29E2  
                         l941 2A08                           l933 29F4                           l925 29E4  
                         l951 2A2C                           l943 2A0A                           l935 29F6  
                         l927 29E6                           l919 2C66                           l961 2D5C  
                         l953 2A36                           l945 2A16                           l937 29FE  
                         l929 29E8                           l963 2D5E                           l947 2A1E  
                         l939 2A00                           l971 2C70                           l965 2D66  
                         l949 2A22                           l957 2A3C                           l981 2C82  
                         l973 2C74                           l959 2D50                           l983 2C88  
                         l975 2C7C                           l967 2C6A                           l991 2CD2  
                         l985 2C8E                           l977 2C7E                           l969 2C6C  
                         l993 2CE2                           l987 2C94                           l979 2C80  
                         l995 2CE8                           l989 2D8C                           l997 2CF8  
                         l999 2D94                           u400 29BE                           u401 29BA  
                         u410 2A62                           u411 2A5E                           u420 2A80  
                         u180 2D14                           u500 2D3A                           u421 2A7C  
                         u181 2D10                           u501 2D36                           u430 2A96  
                         u190 2D26                           u510 2646                           u431 2A92  
                         u191 2D22                           u511 2642                           u440 2902  
                         u520 267E                           u441 28FE                           u521 267A  
                         u370 2C5A                           u450 2920                           u530 2694  
                         u371 2C56                           u451 291C                           u531 2690  
                         u380 2984                           u460 293E                           u540 26C8  
                         u381 2980                           u461 293A                           u541 26C4  
                         u390 29A2                           u470 295C                           u550 26DE  
                         u391 299E                           u471 2958                           u607 2C02  
                         u551 26DA                           u480 2BF0                           u560 2712  
                         u481 2BEC                           u617 2C16                           u561 270E  
                         u490 2BAC                           u570 2728                           u707 2A26  
                         u491 2BA8                           u627 2B26                           u571 2724  
                         u717 2A30                           u637 2B38                           u727 2D60  
                         u647 2C76                           u657 2CAA                           u667 29EA  
                         u587 25D4                           u677 29F8                           u597 25F6  
                         u687 2A02                           u697 2A18                   LEER_LCD@aux 0501  
                         wreg 04E8                  ?_CURSOR_HOME 0501                ??_ENVIA_NIBBLE 0501  
              ENVIA_CHAR@dato 0502                          l1001 2B16                          l1011 2B44  
                        l1003 2B1A                          l1021 2B62                          l1013 2B4A  
                        l1005 2B20                          l1031 2CB0                          l1023 2C9E  
                        l1015 2B50                          l1007 2B30                          l1041 2CC2  
                        l1033 2CB2                          l1025 2CA0                          l1017 2B56  
                        l1009 2B3E                          l1043 2CC8                          l1035 2CB4  
                        l1027 2CA4                          l1211 2D14                          l1019 2B5C  
                        l1037 2CB6                          l1029 2CA8                          l1061 2C10  
                        l1039 2CBC                          l1063 2C20                          l1055 2BF2  
                        l1401 2C3A                          l1209 2D00                          l1065 2C24  
                        l1057 2BFC                          l1161 2AC4                          l1403 2C5A  
                        l1411 2984                          l1067 2C28                          l1059 2C0C  
                        l1171 2AD0                          l1163 2AC8                          l1421 29BE  
                        l1413 298C                          l1069 2D6C                          l1501 2B98  
                        l1181 2ADA                          l1173 2AD2                          l1165 2ACA  
                        l1157 2AB4                          l1423 29C6                          l1415 2994  
                        l1407 296A                          l1431 2A62                          l1503 2B9A  
                        l1191 2AEE                          l1183 2ADC                          l1175 2AD4  
                        l1167 2ACC                          l1159 2AC2                          l1511 25A8  
                        l1425 29C8                          l1417 29A2                          l1409 2972  
                        l1441 2A9E                          l1433 2A6A                          l1193 2AF4  
                        l1185 2ADE                          l1177 2AD6                          l1169 2ACE  
                        l1505 2D28                          l1521 25E0                          l1513 25B6  
                        l1427 29CE                          l1419 29A8                          l1443 2AA4  
                        l1435 2A72                          l1451 2920                          l1195 2B10  
                        l1187 2AE0                          l1179 2AD8                          l1507 2D3A  
                        l1531 2618                          l1523 25E8                          l1515 25BE  
                        l1461 2BAE                          l1437 2A80                          l1429 2A50  
                        l1453 292C                          l1445 28F2                          l1189 2AE2  
                        l1541 2660                          l1533 2630                          l1525 25EC  
                        l1517 25C6                          l1471 2BDE                          l1463 2BBA  
                        l1439 2A96                          l1607 28C0                          l1455 293E  
                        l1447 2902                          l1551 26A6                          l1535 2646  
                        l1543 2668                          l1527 2602                          l1519 25CA  
                        l1465 2BBA                          l1481 285C                          l1473 2768  
                        l1457 294A                          l1449 290E                          l1561 26E8  
                        l1545 267E                          l1537 2650                          l1529 260E  
                        l1467 2BC2                          l1483 2880                          l1475 2820  
                        l1459 295C                          l1571 2728                          l1563 26F0  
                        l1547 2694                          l1555 26B2                          l1539 2658  
                        l1397 2C30                          l1469 2BDC                          l1477 282C  
                        l1493 2B6A                          l1581 2750                          l1573 2732  
                        l1557 26C8                          l1549 269E                          l1399 2C38  
                        l1479 2840                          l1487 28AC                          l1495 2B76  
                        l1583 2758                          l1575 273A                          l1559 26DE  
                        l1567 26FC                          l1497 2B76                          l1569 2712  
                        l1499 2B7E                          l1579 2746                          STR_1 2527  
                        STR_2 2514                          STR_3 2501                          STR_4 2545  
                        STR_5 257F                          STR_6 2551                          STR_7 253B  
                        STR_8 2536                          STR_9 2589                          _LATD 04C1  
                        _main 25A8                          start FFFC                 ?_CURSOR_ONOFF 0501  
           ??_tomamuestra_ADC 0503                  ?_U1_NEW_LINE 0501                  ___param_bank 0000  
             ??_ENVIA_LCD_CMD 0502              __end_of_LCD_INIT 2C30              __end_of_LEER_LCD 2A50  
                       ?_main 0501                         _ADPCH 03EC                         STR_10 2569  
                       STR_11 2593                         STR_12 2574                         STR_13 259D  
                       STR_14 255D               __end_of___lwdiv 29DE               __end_of___lwmod 2AB4  
                       _U1TXB 02A3                         _OSCEN 00B3                         _PORTD 04D1  
                       _TRISD 04C9                   ?_POS_CURSOR 0504   __end_of_LCD_ESCRIBE_VAR_INT 28F0  
                       tablat 04F5                 ?_U1_BYTE_SEND 0501                         status 04D8  
              ??_CURSOR_ONOFF 0504               __initialization 2D82                  __end_of_main 2768  
   LCD_ESCRIBE_VAR_INT@decena 0515                        ??_main 0517                 __activetblptr 0003  
   LCD_ESCRIBE_VAR_INT@millar 0513     LCD_ESCRIBE_VAR_INT@numero 050D     LCD_ESCRIBE_VAR_INT@unidad 0516  
                      _ADRESH 03EB                        _ADRESL 03EA                        _ANSELD 0418  
              ??_U1_BYTE_SEND 0501                        _U1CON0 02AB                        _U1CON1 02AC  
                      _U1CON2 02AD                        _U1BRGH 02AF                        _U1BRGL 02AE  
                      _RF0PPS 0229                        _OSCFRQ 00B1          __end_of_ENVIA_NIBBLE 2D6A  
                   ??___lwdiv 050A                     ??___lwmod 0505                        isa$std 0001  
                      _strlen 2C30                  __mediumconst 0000                        tblptrh 04F7  
                      tblptrl 04F6                        tblptru 04F8                  ??_BORRAR_LCD 0504  
                   ?_LCD_INIT 0501             U1_STRING_SEND@tam 0506                     ?_LEER_LCD 0501  
                  __accesstop 0560       __end_of__initialization 2D86                  ??_LCD_CONFIG 0504  
               ___rparam_used 0001                  ??_ENVIA_CHAR 0502                __pcstackCOMRAM 0501  
          __end_of_BORRAR_LCD 2D9C              _ESCRIBE_MENSAJE2 2BAE              ENVIA_LCD_CMD@aux 0503  
        __end_of_CURSOR_ONOFF 2D00            __end_of_LCD_CONFIG 2B6A            __end_of_ENVIA_CHAR 2CD0  
  LCD_ESCRIBE_VAR_INT@centena 0514               _tomamuestra_ADC 2D28               U1_STRING_SEND@i 0507  
                  ??_LCD_INIT 0505                    ??_LEER_LCD 0501              ENVIA_NIBBLE@dato 0501  
        __end_of_U1_BYTE_SEND 2D82                       ?_strlen 0501                       _OSCCON1 00AD  
                ??_POS_CURSOR 0505                       __Hparam 0000                       __Lparam 0000  
           __end_of_configuro 2B16                       ___lwdiv 296A                       ___lwmod 2A50  
                __psmallconst 2500         __end_of_ENVIA_LCD_CMD 2C9C                       __pcinit 2D82  
          __end_of_POS_CURSOR 296A                       __ramtop 2500                       __ptext0 25A8  
                     __ptext1 2D28                       __ptext2 2AB4                       __ptext3 2BF2  
                     __ptext4 2B16                       __ptext5 2CD0                       __ptext6 2D8C  
                     __ptext7 2D94                       __ptext8 2B6A                       __ptext9 2D6A  
     __end_of_tomamuestra_ADC 2D4E                  _ENVIA_NIBBLE 2D4E          end_of_initialization 2D86  
                     strlen@a 0503                       strlen@s 0501             ESCRIBE_MENSAJE2@i 0507  
                   _TRISAbits 04C6                     _TRISBbits 04C7                     _TRISCbits 04C8  
                   _TRISFbits 04CB      __end_of_ESCRIBE_MENSAJE2 2BF2                  _CURSOR_ONOFF 2CD0  
          CURSOR_ONOFF@estado 0504                _U1_STRING_SEND 2B6A                __end_of_strlen 2C68  
               ??_CURSOR_HOME 0504              ?_tomamuestra_ADC 0501           start_initialization 2D82  
                _U1_BYTE_SEND 2D6A             ENVIA_LCD_CMD@dato 0502                 ??_U1_NEW_LINE 0501  
 LCD_ESCRIBE_VAR_INT@d_millar 0512        __end_of_U1_STRING_SEND 2BAE                      ??_strlen 0503  
                 __pbssCOMRAM 0519           __end_of_CURSOR_HOME 2D94              ___lwdiv@dividend 0506  
                    ?___lwdiv 0506                      ?___lwmod 0501           __end_of_U1_NEW_LINE 2D28  
             ?_U1_STRING_SEND 0504                     _configuro 2AB4                   __smallconst 2500  
         _LCD_ESCRIBE_VAR_INT 2768              ___lwdiv@quotient 050A                   _U1ERRIRbits 02B2  
                    _LCD_INIT 2BF2                      _LEER_LCD 29DE                      _LATDbits 04C1  
        ?_LCD_ESCRIBE_VAR_INT 050D                POS_CURSOR@fila 0505                    ?_configuro 0501  
                  _ADCON0bits 03F3        ESCRIBE_MENSAJE2@cadena 0504                      _WPUBbits 0409  
                 _CURSOR_HOME 2D8C         ??_LCD_ESCRIBE_VAR_INT 0510                   _lectura_ADC 0519  
                    __Hrparam 0000             ?_ESCRIBE_MENSAJE2 0504              U1_BYTE_SEND@dato 0501  
                    __Lrparam 0000                   _U1_NEW_LINE 2D00            ??_ESCRIBE_MENSAJE2 0505  
                  _ANSELAbits 0400                    _ANSELBbits 0408                    _ANSELCbits 0410  
                  _ANSELFbits 0428               ___lwdiv@divisor 0508               ___lwdiv@counter 050C  
                    __ptext10 2D00                      __ptext11 28F0                      __ptext20 2D4E  
                    __ptext12 2C68                      __ptext13 2768                      __ptext14 2A50  
                    __ptext15 296A                      __ptext16 2BAE                      __ptext17 2C30  
                    __ptext18 2C9C                      __ptext19 29DE  LCD_ESCRIBE_VAR_INT@n_digitos 050F  
                  _BORRAR_LCD 2D94                    _LCD_CONFIG 2B16                    _ENVIA_CHAR 2C9C  
                    isa$xinst 0000                 _ENVIA_LCD_CMD 2C68                   ??_configuro 0506  
            ___lwmod@dividend 0501              ??_U1_STRING_SEND 0505                ?_ENVIA_LCD_CMD 0501  
             ___lwmod@divisor 0503               ___lwmod@counter 0505           ESCRIBE_MENSAJE2@tam 0506  
                 ?_BORRAR_LCD 0501                 ?_ENVIA_NIBBLE 0501                    _POS_CURSOR 28F0  
        U1_STRING_SEND@cadena 0504                   ?_LCD_CONFIG 0501                   ?_ENVIA_CHAR 0501  
           POS_CURSOR@columna 0504  
