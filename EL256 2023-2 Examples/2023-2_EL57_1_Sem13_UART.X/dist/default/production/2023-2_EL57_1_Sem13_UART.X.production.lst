

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Wed Nov 08 17:47:28 2023

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og9 
     1                           	processor	18F57Q43
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text13,global,reloc=2,class=CODE,delta=1
    24                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text17,global,reloc=2,class=CODE,delta=1
    28                           	psect	text18,global,reloc=2,class=CODE,delta=1
    29                           	psect	text19,global,reloc=2,class=CODE,delta=1
    30                           	psect	text20,global,reloc=2,class=CODE,delta=1
    31                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text22,global,reloc=2,class=CODE,delta=1
    33                           	psect	text23,global,reloc=2,class=CODE,delta=1
    34                           	psect	text24,global,reloc=2,class=CODE,delta=1
    35                           	psect	text25,global,reloc=4,class=CODE,delta=1
    36                           	psect	text26,global,reloc=2,class=CODE,delta=1
    37                           	psect	text27,global,reloc=2,class=CODE,delta=1
    38                           	psect	text28,global,reloc=2,class=CODE,delta=1
    39                           	psect	text29,global,reloc=4,class=CODE,delta=1
    40                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
    41                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    42                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    43                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    44   000000                     
    45                           ; Generated 17/10/2023 GMT
    46                           ; 
    47                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    48                           ; All rights reserved.
    49                           ; 
    50                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    51                           ; 
    52                           ; Redistribution and use in source and binary forms, with or without modification, are
    53                           ; permitted provided that the following conditions are met:
    54                           ; 
    55                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    56                           ;        conditions and the following disclaimer.
    57                           ; 
    58                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    59                           ;        of conditions and the following disclaimer in the documentation and/or other
    60                           ;        materials provided with the distribution. Publication is not required when
    61                           ;        this file is used in an embedded application.
    62                           ; 
    63                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    64                           ;        software without specific prior written permission.
    65                           ; 
    66                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    67                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    68                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    69                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    70                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    71                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    72                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    73                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    74                           ; 
    75                           ; 
    76                           ; Code-generator required, PIC18F57Q43 Definitions
    77                           ; 
    78                           ; SFR Addresses
    79   000000                     
    80                           	psect	idataCOMRAM
    81   002D5A                     __pidataCOMRAM:
    82                           	callstack 0
    83                           
    84                           ;initializer for _variable2
    85   002D5A  38F6               	dw	14582
    86                           
    87                           ;initializer for _variable1
    88   002D5C  EA                 	db	234
    89   000000                     _U1CON2	set	685
    90   000000                     _U1CON1	set	684
    91   000000                     _LATD	set	1217
    92   000000                     _OSCCON1	set	173
    93   000000                     _OSCFRQ	set	177
    94   000000                     _OSCEN	set	179
    95   000000                     _RF0PPS	set	553
    96   000000                     _U1CON0	set	683
    97   000000                     _U1BRGL	set	686
    98   000000                     _U1BRGH	set	687
    99   000000                     _ANSELAbits	set	1024
   100   000000                     _TRISAbits	set	1222
   101   000000                     _TRISD	set	1225
   102   000000                     _TRISFbits	set	1227
   103   000000                     _TRISCbits	set	1224
   104   000000                     _TRISBbits	set	1223
   105   000000                     _ANSELBbits	set	1032
   106   000000                     _ANSELCbits	set	1040
   107   000000                     _WPUBbits	set	1033
   108   000000                     _ANSELD	set	1048
   109   000000                     _ANSELFbits	set	1064
   110   000000                     _PORTD	set	1233
   111   000000                     _INTCON0bits	set	1238
   112   000000                     _PIE1bits	set	1183
   113   000000                     _PIE6bits	set	1188
   114   000000                     _PIR1bits	set	1199
   115   000000                     _PIR6bits	set	1204
   116   000000                     _LATDbits	set	1217
   117   000000                     _U1ERRIRbits	set	690
   118   000000                     _U1TXB	set	675
   119                           
   120                           	psect	smallconst
   121   002500                     __psmallconst:
   122                           	callstack 0
   123   002500  00                 	db	0
   124   002501                     STR_5:
   125                           
   126                           ; BSR set to: 2
   127   002501  53                 	db	83	;'S'
   128   002502  65                 	db	101	;'e'
   129   002503  20                 	db	32
   130   002504  70                 	db	112	;'p'
   131   002505  75                 	db	117	;'u'
   132   002506  6C                 	db	108	;'l'
   133   002507  73                 	db	115	;'s'
   134   002508  6F                 	db	111	;'o'
   135   002509  20                 	db	32
   136   00250A  62                 	db	98	;'b'
   137   00250B  6F                 	db	111	;'o'
   138   00250C  74                 	db	116	;'t'
   139   00250D  6F                 	db	111	;'o'
   140   00250E  6E                 	db	110	;'n'
   141   00250F  20                 	db	32
   142   002510  65                 	db	101	;'e'
   143   002511  6E                 	db	110	;'n'
   144   002512  20                 	db	32
   145   002513  49                 	db	73	;'I'
   146   002514  4E                 	db	78	;'N'
   147   002515  54                 	db	84	;'T'
   148   002516  30                 	db	48	;'0'
   149   002517  00                 	db	0
   150   002518                     STR_6:
   151                           
   152                           ; BSR set to: 2
   153   002518  53                 	db	83	;'S'
   154   002519  65                 	db	101	;'e'
   155   00251A  20                 	db	32
   156   00251B  70                 	db	112	;'p'
   157   00251C  75                 	db	117	;'u'
   158   00251D  6C                 	db	108	;'l'
   159   00251E  73                 	db	115	;'s'
   160   00251F  6F                 	db	111	;'o'
   161   002520  20                 	db	32
   162   002521  62                 	db	98	;'b'
   163   002522  6F                 	db	111	;'o'
   164   002523  74                 	db	116	;'t'
   165   002524  6F                 	db	111	;'o'
   166   002525  6E                 	db	110	;'n'
   167   002526  20                 	db	32
   168   002527  65                 	db	101	;'e'
   169   002528  6E                 	db	110	;'n'
   170   002529  20                 	db	32
   171   00252A  49                 	db	73	;'I'
   172   00252B  4E                 	db	78	;'N'
   173   00252C  54                 	db	84	;'T'
   174   00252D  31                 	db	49	;'1'
   175   00252E  00                 	db	0
   176   00252F                     STR_1:
   177                           
   178                           ; BSR set to: 2
   179   00252F  4D                 	db	77	;'M'
   180   002530  69                 	db	105	;'i'
   181   002531  63                 	db	99	;'c'
   182   002532  72                 	db	114	;'r'
   183   002533  6F                 	db	111	;'o'
   184   002534  20                 	db	32
   185   002535  53                 	db	83	;'S'
   186   002536  65                 	db	101	;'e'
   187   002537  6D                 	db	109	;'m'
   188   002538  61                 	db	97	;'a'
   189   002539  6E                 	db	110	;'n'
   190   00253A  61                 	db	97	;'a'
   191   00253B  20                 	db	32
   192   00253C  31                 	db	49	;'1'
   193   00253D  33                 	db	51	;'3'
   194   00253E  00                 	db	0
   195   00253F                     STR_3:
   196                           
   197                           ; BSR set to: 2
   198   00253F  56                 	db	86	;'V'
   199   002540  61                 	db	97	;'a'
   200   002541  72                 	db	114	;'r'
   201   002542  69                 	db	105	;'i'
   202   002543  61                 	db	97	;'a'
   203   002544  62                 	db	98	;'b'
   204   002545  6C                 	db	108	;'l'
   205   002546  65                 	db	101	;'e'
   206   002547  31                 	db	49	;'1'
   207   002548  3A                 	db	58	;':'
   208   002549  20                 	db	32
   209   00254A  00                 	db	0
   210   00254B                     STR_4:
   211                           
   212                           ; BSR set to: 2
   213   00254B  56                 	db	86	;'V'
   214   00254C  61                 	db	97	;'a'
   215   00254D  72                 	db	114	;'r'
   216   00254E  69                 	db	105	;'i'
   217   00254F  61                 	db	97	;'a'
   218   002550  62                 	db	98	;'b'
   219   002551  6C                 	db	108	;'l'
   220   002552  65                 	db	101	;'e'
   221   002553  32                 	db	50	;'2'
   222   002554  3A                 	db	58	;':'
   223   002555  20                 	db	32
   224   002556  00                 	db	0
   225   002557                     STR_2:
   226                           
   227                           ; BSR set to: 2
   228   002557  48                 	db	72	;'H'
   229   002558  6F                 	db	111	;'o'
   230   002559  6C                 	db	108	;'l'
   231   00255A  61                 	db	97	;'a'
   232   00255B  00                 	db	0
   233   00255C  00                 	db	0	; dummy byte at the end
   234   000000                     
   235                           ; #config settings
   236                           
   237                           	psect	cinit
   238   002BA8                     __pcinit:
   239                           	callstack 0
   240   002BA8                     start_initialization:
   241                           	callstack 0
   242   002BA8                     __initialization:
   243                           	callstack 0
   244                           
   245                           ; Initialize objects allocated to COMRAM (3 bytes)
   246                           ; load TBLPTR registers with __pidataCOMRAM
   247   002BA8  0E5A               	movlw	low __pidataCOMRAM
   248   002BAA  6EF6               	movwf	tblptrl,c
   249   002BAC  0E2D               	movlw	high __pidataCOMRAM
   250   002BAE  6EF7               	movwf	tblptrh,c
   251   002BB0  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   252   002BB2  6EF8               	movwf	tblptru,c
   253   002BB4  0009               	tblrd		*+	;fetch initializer
   254   002BB6  C4F5 F52F          	movff	tablat,__pdataCOMRAM
   255   002BBA  0009               	tblrd		*+	;fetch initializer
   256   002BBC  C4F5 F530          	movff	tablat,__pdataCOMRAM+1
   257   002BC0  0009               	tblrd		*+	;fetch initializer
   258   002BC2  C4F5 F531          	movff	tablat,__pdataCOMRAM+2
   259                           
   260                           ;
   261                           ; Setup IVTBASE
   262                           ;
   263   002BC6  0104               	movlb	4
   264   002BC8  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
   265   002BCA  6F5D               	movwf	93,b
   266   002BCC  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
   267   002BCE  6F5E               	movwf	94,b
   268   002BD0  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
   269   002BD2  6F5F               	movwf	95,b
   270   002BD4                     end_of_initialization:
   271                           	callstack 0
   272   002BD4                     __end_of__initialization:
   273                           	callstack 0
   274   002BD4  0100               	movlb	0
   275   002BD6  EFE9  F013         	goto	_main	;jump to C main() function
   276                           
   277                           	psect	dataCOMRAM
   278   00052F                     __pdataCOMRAM:
   279                           	callstack 0
   280   00052F                     _variable2:
   281                           	callstack 0
   282   00052F                     	ds	2
   283   000531                     _variable1:
   284                           	callstack 0
   285   000531                     	ds	1
   286                           
   287                           	psect	cstackCOMRAM
   288   000501                     __pcstackCOMRAM:
   289                           	callstack 0
   290   000501                     
   291                           ; 1 bytes @ 0x0
   292   000501                     	ds	7
   293   000508                     ??_INT0_ISR:
   294                           
   295                           ; 1 bytes @ 0x7
   296   000508                     	ds	4
   297   00050C                     ?i2_strlen:
   298                           	callstack 0
   299   00050C                     i2strlen@s:
   300                           	callstack 0
   301                           
   302                           ; 1 bytes @ 0xB
   303   00050C                     	ds	2
   304   00050E                     i2strlen@a:
   305                           	callstack 0
   306                           
   307                           ; 1 bytes @ 0xD
   308   00050E                     	ds	1
   309   00050F                     i2U1_STRING_SEND@cadena:
   310                           	callstack 0
   311                           
   312                           ; 1 bytes @ 0xE
   313   00050F                     	ds	1
   314   000510                     ??i2_U1_STRING_SEND:
   315                           
   316                           ; 1 bytes @ 0xF
   317   000510                     	ds	1
   318   000511                     i2U1_STRING_SEND@tam:
   319                           	callstack 0
   320                           
   321                           ; 1 bytes @ 0x10
   322   000511                     	ds	1
   323   000512                     i2U1_STRING_SEND@i:
   324                           	callstack 0
   325                           
   326                           ; 1 bytes @ 0x11
   327   000512                     	ds	1
   328   000513                     ??_INT1_ISR:
   329                           
   330                           ; 1 bytes @ 0x12
   331   000513                     	ds	4
   332   000517                     ?_strlen:
   333                           	callstack 0
   334   000517                     ?___awmod:
   335                           	callstack 0
   336   000517                     ?___lwmod:
   337                           	callstack 0
   338   000517                     ENVIA_NIBBLE@dato:
   339                           	callstack 0
   340   000517                     LEER_LCD@aux:
   341                           	callstack 0
   342   000517                     U1_INIT@baudios:
   343                           	callstack 0
   344   000517                     U1_DATA_SEND@dato:
   345                           	callstack 0
   346   000517                     ___lbmod@divisor:
   347                           	callstack 0
   348   000517                     strlen@s:
   349                           	callstack 0
   350   000517                     ___awmod@dividend:
   351                           	callstack 0
   352   000517                     ___lwmod@dividend:
   353                           	callstack 0
   354                           
   355                           ; 2 bytes @ 0x16
   356   000517                     	ds	1
   357   000518                     ENVIA_CHAR@dato:
   358                           	callstack 0
   359   000518                     ENVIA_LCD_CMD@dato:
   360                           	callstack 0
   361   000518                     ___lbmod@dividend:
   362                           	callstack 0
   363                           
   364                           ; 1 bytes @ 0x17
   365   000518                     	ds	1
   366   000519                     ENVIA_CHAR@aux:
   367                           	callstack 0
   368   000519                     ENVIA_LCD_CMD@aux:
   369                           	callstack 0
   370   000519                     ___lbmod@counter:
   371                           	callstack 0
   372   000519                     strlen@a:
   373                           	callstack 0
   374   000519                     ___awmod@divisor:
   375                           	callstack 0
   376   000519                     ___lwmod@divisor:
   377                           	callstack 0
   378                           
   379                           ; 2 bytes @ 0x18
   380   000519                     	ds	1
   381   00051A                     ??_LCD_CONFIG:
   382   00051A                     POS_CURSOR@columna:
   383                           	callstack 0
   384   00051A                     CURSOR_ONOFF@estado:
   385                           	callstack 0
   386   00051A                     ESCRIBE_MENSAJE2@cadena:
   387                           	callstack 0
   388   00051A                     U1_STRING_SEND@cadena:
   389                           	callstack 0
   390   00051A                     ___lbmod@rem:
   391                           	callstack 0
   392                           
   393                           ; 1 bytes @ 0x19
   394   00051A                     	ds	1
   395   00051B                     ??_LCD_INIT:
   396   00051B                     ??_ESCRIBE_MENSAJE2:
   397   00051B                     ??_U1_STRING_SEND:
   398   00051B                     POS_CURSOR@fila:
   399                           	callstack 0
   400   00051B                     ___awmod@counter:
   401                           	callstack 0
   402   00051B                     ___lwmod@counter:
   403                           	callstack 0
   404                           
   405                           ; 1 bytes @ 0x1A
   406   00051B                     	ds	1
   407   00051C                     ?___lwdiv:
   408                           	callstack 0
   409   00051C                     ESCRIBE_MENSAJE2@tam:
   410                           	callstack 0
   411   00051C                     U1_STRING_SEND@tam:
   412                           	callstack 0
   413   00051C                     ___awmod@sign:
   414                           	callstack 0
   415   00051C                     ___lwdiv@dividend:
   416                           	callstack 0
   417                           
   418                           ; 2 bytes @ 0x1B
   419   00051C                     	ds	1
   420   00051D                     ESCRIBE_MENSAJE2@i:
   421                           	callstack 0
   422   00051D                     U1_STRING_SEND@i:
   423                           	callstack 0
   424   00051D                     ___lbdiv@divisor:
   425                           	callstack 0
   426                           
   427                           ; 1 bytes @ 0x1C
   428   00051D                     	ds	1
   429   00051E                     ___lbdiv@dividend:
   430                           	callstack 0
   431   00051E                     ___lwdiv@divisor:
   432                           	callstack 0
   433                           
   434                           ; 2 bytes @ 0x1D
   435   00051E                     	ds	1
   436   00051F                     ___lbdiv@counter:
   437                           	callstack 0
   438                           
   439                           ; 1 bytes @ 0x1E
   440   00051F                     	ds	1
   441   000520                     ___lbdiv@quotient:
   442                           	callstack 0
   443   000520                     ___lwdiv@quotient:
   444                           	callstack 0
   445                           
   446                           ; 2 bytes @ 0x1F
   447   000520                     	ds	1
   448   000521                     U1_ESCRIBE_VAR_CHAR@n_digitos:
   449                           	callstack 0
   450                           
   451                           ; 1 bytes @ 0x20
   452   000521                     	ds	1
   453   000522                     ??_U1_ESCRIBE_VAR_CHAR:
   454   000522                     ___lwdiv@counter:
   455                           	callstack 0
   456                           
   457                           ; 1 bytes @ 0x21
   458   000522                     	ds	1
   459   000523                     U1_ESCRIBE_VAR_INT@numero:
   460                           	callstack 0
   461                           
   462                           ; 2 bytes @ 0x22
   463   000523                     	ds	1
   464   000524                     U1_ESCRIBE_VAR_CHAR@centena:
   465                           	callstack 0
   466                           
   467                           ; 1 bytes @ 0x23
   468   000524                     	ds	1
   469   000525                     U1_ESCRIBE_VAR_CHAR@decena:
   470                           	callstack 0
   471   000525                     U1_ESCRIBE_VAR_INT@n_digitos:
   472                           	callstack 0
   473                           
   474                           ; 1 bytes @ 0x24
   475   000525                     	ds	1
   476   000526                     ??_U1_ESCRIBE_VAR_INT:
   477   000526                     U1_ESCRIBE_VAR_CHAR@numero:
   478                           	callstack 0
   479                           
   480                           ; 1 bytes @ 0x25
   481   000526                     	ds	1
   482   000527                     U1_ESCRIBE_VAR_CHAR@unidad:
   483                           	callstack 0
   484                           
   485                           ; 1 bytes @ 0x26
   486   000527                     	ds	1
   487   000528                     U1_ESCRIBE_VAR_INT@d_millar:
   488                           	callstack 0
   489                           
   490                           ; 1 bytes @ 0x27
   491   000528                     	ds	1
   492   000529                     U1_ESCRIBE_VAR_INT@millar:
   493                           	callstack 0
   494                           
   495                           ; 1 bytes @ 0x28
   496   000529                     	ds	1
   497   00052A                     U1_ESCRIBE_VAR_INT@centena:
   498                           	callstack 0
   499                           
   500                           ; 1 bytes @ 0x29
   501   00052A                     	ds	1
   502   00052B                     U1_ESCRIBE_VAR_INT@decena:
   503                           	callstack 0
   504                           
   505                           ; 1 bytes @ 0x2A
   506   00052B                     	ds	1
   507   00052C                     U1_ESCRIBE_VAR_INT@unidad:
   508                           	callstack 0
   509                           
   510                           ; 1 bytes @ 0x2B
   511   00052C                     	ds	1
   512   00052D                     ??_main:
   513                           
   514                           ; 1 bytes @ 0x2C
   515   00052D                     	ds	2
   516                           
   517 ;;
   518 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   519 ;;
   520 ;; *************** function _main *****************
   521 ;; Defined at:
   522 ;;		line 47 in file "maincode.c"
   523 ;; Parameters:    Size  Location     Type
   524 ;;		None
   525 ;; Auto vars:     Size  Location     Type
   526 ;;		None
   527 ;; Return value:  Size  Location     Type
   528 ;;                  1    wreg      void 
   529 ;; Registers used:
   530 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   531 ;; Tracked objects:
   532 ;;		On entry : 0/0
   533 ;;		On exit  : 0/0
   534 ;;		Unchanged: 0/0
   535 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   536 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   537 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   538 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   539 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   540 ;;Total ram usage:        2 bytes
   541 ;; Hardware stack levels required when called: 8
   542 ;; This function calls:
   543 ;;		_ESCRIBE_MENSAJE2
   544 ;;		_POS_CURSOR
   545 ;;		_U1_ESCRIBE_VAR_CHAR
   546 ;;		_U1_ESCRIBE_VAR_INT
   547 ;;		_U1_NEWLINE
   548 ;;		_U1_STRING_SEND
   549 ;;		_configuro
   550 ;; This function is called by:
   551 ;;		Startup code after reset
   552 ;; This function uses a non-reentrant model
   553 ;;
   554                           
   555                           	psect	text0
   556   0027D2                     __ptext0:
   557                           	callstack 0
   558   0027D2                     _main:
   559                           	callstack 119
   560                           
   561                           ;maincode.c: 48:     configuro();
   562                           
   563                           ;incstack = 0
   564   0027D2  ECA3  F014         	call	_configuro	;wreg free
   565                           
   566                           ;maincode.c: 49:     POS_CURSOR(1,0);
   567   0027D6  0E00               	movlw	0
   568   0027D8  6E1A               	movwf	POS_CURSOR@columna^(0+1280),c
   569   0027DA  0E01               	movlw	1
   570   0027DC  ECC8  F014         	call	_POS_CURSOR
   571                           
   572                           ;maincode.c: 50:     ESCRIBE_MENSAJE2("Micro Semana 13");
   573   0027E0  0E2F               	movlw	low STR_1
   574   0027E2  6E1A               	movwf	ESCRIBE_MENSAJE2@cadena^(0+1280),c
   575   0027E4  EC84  F015         	call	_ESCRIBE_MENSAJE2	;wreg free
   576   0027E8                     l1689:
   577                           
   578                           ;maincode.c: 52:         U1_STRING_SEND("Hola");
   579   0027E8  0E57               	movlw	low STR_2
   580   0027EA  6E1A               	movwf	U1_STRING_SEND@cadena^(0+1280),c
   581   0027EC  EC2B  F015         	call	_U1_STRING_SEND	;wreg free
   582                           
   583                           ;maincode.c: 53:         U1_NEWLINE();
   584   0027F0  EC8A  F016         	call	_U1_NEWLINE	;wreg free
   585                           
   586                           ; BSR set to: 2
   587                           ;maincode.c: 54:         U1_STRING_SEND("Variable1: ");
   588   0027F4  0E3F               	movlw	low STR_3
   589   0027F6  6E1A               	movwf	U1_STRING_SEND@cadena^(0+1280),c
   590   0027F8  EC2B  F015         	call	_U1_STRING_SEND	;wreg free
   591                           
   592                           ;maincode.c: 55:         U1_ESCRIBE_VAR_CHAR(variable1, 3);
   593   0027FC  0E03               	movlw	3
   594   0027FE  6E21               	movwf	U1_ESCRIBE_VAR_CHAR@n_digitos^(0+1280),c
   595   002800  0EEA               	movlw	234
   596   002802  EC63  F013         	call	_U1_ESCRIBE_VAR_CHAR
   597                           
   598                           ;maincode.c: 56:         U1_NEWLINE();
   599   002806  EC8A  F016         	call	_U1_NEWLINE	;wreg free
   600                           
   601                           ;maincode.c: 57:         U1_STRING_SEND("Variable2: ");
   602   00280A  0E4B               	movlw	low STR_4
   603   00280C  6E1A               	movwf	U1_STRING_SEND@cadena^(0+1280),c
   604   00280E  EC2B  F015         	call	_U1_STRING_SEND	;wreg free
   605                           
   606                           ;maincode.c: 58:         U1_ESCRIBE_VAR_INT(variable2, 5);
   607   002812  0E38               	movlw	56
   608   002814  6E24               	movwf	(U1_ESCRIBE_VAR_INT@numero+1)^(0+1280),c
   609   002816  0EF6               	movlw	246
   610   002818  6E23               	movwf	U1_ESCRIBE_VAR_INT@numero^(0+1280),c
   611   00281A  0E05               	movlw	5
   612   00281C  6E25               	movwf	U1_ESCRIBE_VAR_INT@n_digitos^(0+1280),c
   613   00281E  ECAF  F012         	call	_U1_ESCRIBE_VAR_INT	;wreg free
   614                           
   615                           ;maincode.c: 59:         U1_NEWLINE();
   616   002822  EC8A  F016         	call	_U1_NEWLINE	;wreg free
   617                           
   618                           ; BSR set to: 2
   619                           ;maincode.c: 60:         _delay((unsigned long)((3000)*(32000000UL/4000.0)));
   620   002826  0E7A               	movlw	122
   621   002828  6E2E               	movwf	(??_main+1)^(0+1280),c
   622   00282A  0EC1               	movlw	193
   623   00282C  6E2D               	movwf	??_main^(0+1280),c
   624   00282E  0E82               	movlw	130
   625   002830                     u637:
   626   002830  2EE8               	decfsz	wreg,f,c
   627   002832  D7FE               	bra	u637
   628   002834  2E2D               	decfsz	??_main^(0+1280),f,c
   629   002836  D7FC               	bra	u637
   630   002838  2E2E               	decfsz	(??_main+1)^(0+1280),f,c
   631   00283A  D7FA               	bra	u637
   632   00283C  D7D5               	goto	l1689
   633   00283E                     __end_of_main:
   634                           	callstack 0
   635                           
   636 ;; *************** function _configuro *****************
   637 ;; Defined at:
   638 ;;		line 11 in file "maincode.c"
   639 ;; Parameters:    Size  Location     Type
   640 ;;		None
   641 ;; Auto vars:     Size  Location     Type
   642 ;;		None
   643 ;; Return value:  Size  Location     Type
   644 ;;                  1    wreg      void 
   645 ;; Registers used:
   646 ;;		wreg, status,2, status,0, cstack
   647 ;; Tracked objects:
   648 ;;		On entry : 0/0
   649 ;;		On exit  : 3F/2
   650 ;;		Unchanged: 0/0
   651 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   652 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   653 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   654 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   655 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   656 ;;Total ram usage:        0 bytes
   657 ;; Hardware stack levels used: 1
   658 ;; Hardware stack levels required when called: 7
   659 ;; This function calls:
   660 ;;		_LCD_INIT
   661 ;;		_U1_INIT
   662 ;; This function is called by:
   663 ;;		_main
   664 ;; This function uses a non-reentrant model
   665 ;;
   666                           
   667                           	psect	text1
   668   002946                     __ptext1:
   669                           	callstack 0
   670   002946                     _configuro:
   671                           	callstack 119
   672                           
   673                           ;maincode.c: 13:     OSCCON1 = 0x60;
   674                           
   675                           ;incstack = 0
   676   002946  0E60               	movlw	96
   677   002948  0100               	movlb	0	; () banked
   678   00294A  6FAD               	movwf	173,b	;volatile
   679                           
   680                           ;maincode.c: 14:     OSCFRQ = 0x06;
   681   00294C  0E06               	movlw	6
   682   00294E  6FB1               	movwf	177,b	;volatile
   683                           
   684                           ;maincode.c: 15:     OSCEN = 0x40;
   685   002950  0E40               	movlw	64
   686   002952  6FB3               	movwf	179,b	;volatile
   687                           
   688                           ; BSR set to: 0
   689                           ;maincode.c: 17:     TRISAbits.TRISA0 = 1;
   690   002954  80C6               	bsf	198,0,c	;volatile
   691                           
   692                           ; BSR set to: 0
   693                           ;maincode.c: 18:     ANSELAbits.ANSELA0 = 1;
   694   002956  0104               	movlb	4	; () banked
   695   002958  8100               	bsf	0,0,b	;volatile
   696                           
   697                           ; BSR set to: 4
   698                           ;maincode.c: 19:     TRISBbits.TRISB0 = 1;
   699   00295A  80C7               	bsf	199,0,c	;volatile
   700                           
   701                           ; BSR set to: 4
   702                           ;maincode.c: 20:     ANSELBbits.ANSELB0 = 0;
   703   00295C  9108               	bcf	8,0,b	;volatile
   704                           
   705                           ; BSR set to: 4
   706                           ;maincode.c: 21:     WPUBbits.WPUB0 = 1;
   707   00295E  8109               	bsf	9,0,b	;volatile
   708                           
   709                           ; BSR set to: 4
   710                           ;maincode.c: 22:     TRISBbits.TRISB1 = 1;
   711   002960  82C7               	bsf	199,1,c	;volatile
   712                           
   713                           ; BSR set to: 4
   714                           ;maincode.c: 23:     ANSELBbits.ANSELB1 = 0;
   715   002962  9308               	bcf	8,1,b	;volatile
   716                           
   717                           ; BSR set to: 4
   718                           ;maincode.c: 24:     WPUBbits.WPUB1 = 1;
   719   002964  8309               	bsf	9,1,b	;volatile
   720                           
   721                           ; BSR set to: 4
   722                           ;maincode.c: 25:     TRISCbits.TRISC0 = 0;
   723   002966  90C8               	bcf	200,0,c	;volatile
   724                           
   725                           ; BSR set to: 4
   726                           ;maincode.c: 26:     ANSELCbits.ANSELC0 = 0;
   727   002968  9110               	bcf	16,0,b	;volatile
   728                           
   729                           ; BSR set to: 4
   730                           ;maincode.c: 27:     TRISCbits.TRISC1 = 1;
   731   00296A  82C8               	bsf	200,1,c	;volatile
   732                           
   733                           ; BSR set to: 4
   734                           ;maincode.c: 28:     ANSELCbits.ANSELC1 = 0;
   735   00296C  9310               	bcf	16,1,b	;volatile
   736                           
   737                           ; BSR set to: 4
   738                           ;maincode.c: 29:     TRISFbits.TRISF0 = 0;
   739   00296E  90CB               	bcf	203,0,c	;volatile
   740                           
   741                           ; BSR set to: 4
   742                           ;maincode.c: 30:     ANSELFbits.ANSELF0 = 0;
   743   002970  9128               	bcf	40,0,b	;volatile
   744                           
   745                           ; BSR set to: 4
   746                           ;maincode.c: 31:     TRISFbits.TRISF1 = 1;
   747   002972  82CB               	bsf	203,1,c	;volatile
   748                           
   749                           ; BSR set to: 4
   750                           ;maincode.c: 32:     ANSELFbits.ANSELF1 = 0;
   751   002974  9328               	bcf	40,1,b	;volatile
   752                           
   753                           ; BSR set to: 4
   754                           ;maincode.c: 34:     PIE1bits.INT0IE = 1;
   755   002976  809F               	bsf	159,0,c	;volatile
   756                           
   757                           ; BSR set to: 4
   758                           ;maincode.c: 35:     PIR1bits.INT0IF = 0;
   759   002978  90AF               	bcf	175,0,c	;volatile
   760                           
   761                           ; BSR set to: 4
   762                           ;maincode.c: 36:     INTCON0bits.INT0EDG = 0;
   763   00297A  90D6               	bcf	214,0,c	;volatile
   764                           
   765                           ; BSR set to: 4
   766                           ;maincode.c: 37:     PIE6bits.INT1IE = 1;
   767   00297C  80A4               	bsf	164,0,c	;volatile
   768                           
   769                           ; BSR set to: 4
   770                           ;maincode.c: 38:     PIR6bits.INT1IF = 0;
   771   00297E  90B4               	bcf	180,0,c	;volatile
   772                           
   773                           ; BSR set to: 4
   774                           ;maincode.c: 39:     INTCON0bits.INT1EDG = 0;
   775   002980  92D6               	bcf	214,1,c	;volatile
   776                           
   777                           ; BSR set to: 4
   778                           ;maincode.c: 40:     INTCON0bits.GIE = 1;
   779   002982  8ED6               	bsf	214,7,c	;volatile
   780                           
   781                           ; BSR set to: 4
   782                           ;maincode.c: 42:     LCD_INIT();
   783   002984  EC0D  F015         	call	_LCD_INIT	;wreg free
   784                           
   785                           ;maincode.c: 44:     U1_INIT(103);
   786   002988  0E67               	movlw	103
   787   00298A  EC5F  F016         	call	_U1_INIT
   788                           
   789                           ; BSR set to: 2
   790   00298E  0012               	return		;funcret
   791   002990                     __end_of_configuro:
   792                           	callstack 0
   793                           
   794 ;; *************** function _U1_INIT *****************
   795 ;; Defined at:
   796 ;;		line 5 in file "U1SERIAL.c"
   797 ;; Parameters:    Size  Location     Type
   798 ;;  baudios         1    wreg     unsigned char 
   799 ;; Auto vars:     Size  Location     Type
   800 ;;  baudios         1   22[COMRAM] unsigned char 
   801 ;; Return value:  Size  Location     Type
   802 ;;                  1    wreg      void 
   803 ;; Registers used:
   804 ;;		wreg, status,2
   805 ;; Tracked objects:
   806 ;;		On entry : 0/4
   807 ;;		On exit  : 3F/2
   808 ;;		Unchanged: 0/0
   809 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   810 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   811 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   812 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   813 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   814 ;;Total ram usage:        1 bytes
   815 ;; Hardware stack levels used: 1
   816 ;; Hardware stack levels required when called: 3
   817 ;; This function calls:
   818 ;;		Nothing
   819 ;; This function is called by:
   820 ;;		_configuro
   821 ;; This function uses a non-reentrant model
   822 ;;
   823                           
   824                           	psect	text2
   825   002CBE                     __ptext2:
   826                           	callstack 0
   827   002CBE                     _U1_INIT:
   828                           	callstack 122
   829                           
   830                           ; BSR set to: 2
   831                           ;incstack = 0
   832                           ;U1_INIT@baudios stored from wreg
   833   002CBE  6E17               	movwf	U1_INIT@baudios^(0+1280),c
   834                           
   835                           ;U1SERIAL.c: 7:     U1BRGH = 0;
   836   002CC0  0E00               	movlw	0
   837   002CC2  0102               	movlb	2	; () banked
   838   002CC4  6FAF               	movwf	175,b	;volatile
   839                           
   840                           ; BSR set to: 2
   841                           ;U1SERIAL.c: 8:     U1BRGL = baudios;
   842   002CC6  C517  F2AE         	movff	U1_INIT@baudios,686	;volatile
   843                           
   844                           ; BSR set to: 2
   845                           ;U1SERIAL.c: 9:     U1CON0 = 0x20;
   846   002CCA  0E20               	movlw	32
   847   002CCC  6FAB               	movwf	171,b	;volatile
   848                           
   849                           ; BSR set to: 2
   850                           ;U1SERIAL.c: 10:     U1CON1 = 0x80;
   851   002CCE  0E80               	movlw	128
   852   002CD0  6FAC               	movwf	172,b	;volatile
   853                           
   854                           ; BSR set to: 2
   855                           ;U1SERIAL.c: 11:     U1CON2 = 0x00;
   856   002CD2  0E00               	movlw	0
   857   002CD4  6FAD               	movwf	173,b	;volatile
   858                           
   859                           ; BSR set to: 2
   860                           ;U1SERIAL.c: 12:     RF0PPS = 0x20;
   861   002CD6  0E20               	movlw	32
   862   002CD8  6F29               	movwf	41,b	;volatile
   863                           
   864                           ; BSR set to: 2
   865   002CDA  0012               	return		;funcret
   866   002CDC                     __end_of_U1_INIT:
   867                           	callstack 0
   868                           
   869 ;; *************** function _LCD_INIT *****************
   870 ;; Defined at:
   871 ;;		line 192 in file "LCD.c"
   872 ;; Parameters:    Size  Location     Type
   873 ;;		None
   874 ;; Auto vars:     Size  Location     Type
   875 ;;		None
   876 ;; Return value:  Size  Location     Type
   877 ;;                  1    wreg      void 
   878 ;; Registers used:
   879 ;;		wreg, status,2, status,0, cstack
   880 ;; Tracked objects:
   881 ;;		On entry : 3F/4
   882 ;;		On exit  : 0/0
   883 ;;		Unchanged: 0/0
   884 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   885 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   886 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   887 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   888 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   889 ;;Total ram usage:        1 bytes
   890 ;; Hardware stack levels used: 1
   891 ;; Hardware stack levels required when called: 6
   892 ;; This function calls:
   893 ;;		_BORRAR_LCD
   894 ;;		_CURSOR_HOME
   895 ;;		_CURSOR_ONOFF
   896 ;;		_LCD_CONFIG
   897 ;; This function is called by:
   898 ;;		_configuro
   899 ;; This function uses a non-reentrant model
   900 ;;
   901                           
   902                           	psect	text3
   903   002A1A                     __ptext3:
   904                           	callstack 0
   905   002A1A                     _LCD_INIT:
   906                           	callstack 119
   907                           
   908                           ; BSR set to: 4
   909                           ;LCD.c: 193:     TRISD = 0x00;
   910                           
   911                           ; BSR set to: 2
   912                           ;incstack = 0
   913   002A1A  0E00               	movlw	0
   914   002A1C  6EC9               	movwf	201,c	;volatile
   915                           
   916                           ;LCD.c: 194:     ANSELD = 0x00;
   917   002A1E  0E00               	movlw	0
   918   002A20  6F18               	movwf	24,b	;volatile
   919                           
   920                           ; BSR set to: 4
   921                           ;LCD.c: 195:     _delay((unsigned long)((15)*(32000000UL/4000.0)));
   922   002A22  0E9C               	movlw	156
   923   002A24  6E1B               	movwf	??_LCD_INIT^(0+1280),c
   924   002A26  0ED7               	movlw	215
   925   002A28                     u647:
   926   002A28  2EE8               	decfsz	wreg,f,c
   927   002A2A  D7FE               	bra	u647
   928   002A2C  2E1B               	decfsz	??_LCD_INIT^(0+1280),f,c
   929   002A2E  D7FC               	bra	u647
   930   002A30  0000               	nop	
   931                           
   932                           ;LCD.c: 196:     LCD_CONFIG();
   933   002A32  EC50  F014         	call	_LCD_CONFIG	;wreg free
   934                           
   935                           ;LCD.c: 197:     _delay((unsigned long)((15)*(32000000UL/4000.0)));
   936   002A36  0E9C               	movlw	156
   937   002A38  6E1B               	movwf	??_LCD_INIT^(0+1280),c
   938   002A3A  0ED7               	movlw	215
   939   002A3C                     u657:
   940   002A3C  2EE8               	decfsz	wreg,f,c
   941   002A3E  D7FE               	bra	u657
   942   002A40  2E1B               	decfsz	??_LCD_INIT^(0+1280),f,c
   943   002A42  D7FC               	bra	u657
   944   002A44  0000               	nop	
   945                           
   946                           ;LCD.c: 198:     BORRAR_LCD();
   947   002A46  ECA9  F016         	call	_BORRAR_LCD	;wreg free
   948                           
   949                           ;LCD.c: 199:     CURSOR_HOME();
   950   002A4A  ECA5  F016         	call	_CURSOR_HOME	;wreg free
   951                           
   952                           ;LCD.c: 200:     CURSOR_ONOFF(1);
   953   002A4E  0E01               	movlw	1
   954   002A50  EC6E  F016         	call	_CURSOR_ONOFF
   955   002A54  0012               	return		;funcret
   956   002A56                     __end_of_LCD_INIT:
   957                           	callstack 0
   958                           
   959 ;; *************** function _LCD_CONFIG *****************
   960 ;; Defined at:
   961 ;;		line 109 in file "LCD.c"
   962 ;; Parameters:    Size  Location     Type
   963 ;;		None
   964 ;; Auto vars:     Size  Location     Type
   965 ;;		None
   966 ;; Return value:  Size  Location     Type
   967 ;;                  1    wreg      void 
   968 ;; Registers used:
   969 ;;		wreg, status,2, status,0, cstack
   970 ;; Tracked objects:
   971 ;;		On entry : 0/4
   972 ;;		On exit  : 0/0
   973 ;;		Unchanged: 0/0
   974 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   975 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   976 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   977 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   978 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   979 ;;Total ram usage:        1 bytes
   980 ;; Hardware stack levels used: 1
   981 ;; Hardware stack levels required when called: 5
   982 ;; This function calls:
   983 ;;		_ENVIA_LCD_CMD
   984 ;;		_ENVIA_NIBBLE
   985 ;; This function is called by:
   986 ;;		_LCD_INIT
   987 ;; This function uses a non-reentrant model
   988 ;;
   989                           
   990                           	psect	text4
   991   0028A0                     __ptext4:
   992                           	callstack 0
   993   0028A0                     _LCD_CONFIG:
   994                           	callstack 119
   995                           
   996                           ;LCD.c: 111:  LATDbits.LATD0 = 0;
   997                           
   998                           ;incstack = 0
   999   0028A0  90C1               	bcf	193,0,c	;volatile
  1000                           
  1001                           ;LCD.c: 112:  LATDbits.LATD1 = 0;
  1002   0028A2  92C1               	bcf	193,1,c	;volatile
  1003                           
  1004                           ;LCD.c: 113:  ENVIA_NIBBLE(0x30);
  1005   0028A4  0E30               	movlw	48
  1006   0028A6  EC7C  F016         	call	_ENVIA_NIBBLE
  1007                           
  1008                           ;LCD.c: 114:     _delay((unsigned long)((2)*(32000000UL/4000.0)));
  1009   0028AA  0E15               	movlw	21
  1010   0028AC  6E1A               	movwf	??_LCD_CONFIG^(0+1280),c
  1011   0028AE  0EC6               	movlw	198
  1012   0028B0                     u667:
  1013   0028B0  2EE8               	decfsz	wreg,f,c
  1014   0028B2  D7FE               	bra	u667
  1015   0028B4  2E1A               	decfsz	??_LCD_CONFIG^(0+1280),f,c
  1016   0028B6  D7FC               	bra	u667
  1017   0028B8  D000               	nop2	
  1018                           
  1019                           ;LCD.c: 115:  ENVIA_NIBBLE(0x30);
  1020   0028BA  0E30               	movlw	48
  1021   0028BC  EC7C  F016         	call	_ENVIA_NIBBLE
  1022                           
  1023                           ;LCD.c: 116:     _delay((unsigned long)((100)*(32000000UL/4000000.0)));
  1024   0028C0  0EA0               	movlw	160
  1025   0028C2                     u677:
  1026   0028C2  D000               	nop2	
  1027   0028C4  2EE8               	decfsz	wreg,f,c
  1028   0028C6  D7FD               	bra	u677
  1029                           
  1030                           ;LCD.c: 117:     ENVIA_NIBBLE(0x30);
  1031   0028C8  0E30               	movlw	48
  1032   0028CA  EC7C  F016         	call	_ENVIA_NIBBLE
  1033                           
  1034                           ;LCD.c: 118:  ENVIA_NIBBLE(0x20);
  1035   0028CE  0E20               	movlw	32
  1036   0028D0  EC7C  F016         	call	_ENVIA_NIBBLE
  1037                           
  1038                           ;LCD.c: 119:  ENVIA_LCD_CMD(0x01);
  1039   0028D4  0E01               	movlw	1
  1040   0028D6  ECA0  F015         	call	_ENVIA_LCD_CMD
  1041                           
  1042                           ;LCD.c: 120:  ENVIA_LCD_CMD(0x28);
  1043   0028DA  0E28               	movlw	40
  1044   0028DC  ECA0  F015         	call	_ENVIA_LCD_CMD
  1045                           
  1046                           ;LCD.c: 121:  ENVIA_LCD_CMD(0x0F);
  1047   0028E0  0E0F               	movlw	15
  1048   0028E2  ECA0  F015         	call	_ENVIA_LCD_CMD
  1049                           
  1050                           ;LCD.c: 122:  ENVIA_LCD_CMD(0x06);
  1051   0028E6  0E06               	movlw	6
  1052   0028E8  ECA0  F015         	call	_ENVIA_LCD_CMD
  1053                           
  1054                           ;LCD.c: 123:  ENVIA_LCD_CMD(0x01);
  1055   0028EC  0E01               	movlw	1
  1056   0028EE  ECA0  F015         	call	_ENVIA_LCD_CMD
  1057   0028F2  0012               	return		;funcret
  1058   0028F4                     __end_of_LCD_CONFIG:
  1059                           	callstack 0
  1060                           
  1061 ;; *************** function _CURSOR_ONOFF *****************
  1062 ;; Defined at:
  1063 ;;		line 62 in file "LCD.c"
  1064 ;; Parameters:    Size  Location     Type
  1065 ;;  estado          1    wreg     unsigned char 
  1066 ;; Auto vars:     Size  Location     Type
  1067 ;;  estado          1   25[COMRAM] unsigned char 
  1068 ;; Return value:  Size  Location     Type
  1069 ;;                  1    wreg      void 
  1070 ;; Registers used:
  1071 ;;		wreg, status,2, status,0, cstack
  1072 ;; Tracked objects:
  1073 ;;		On entry : 0/4
  1074 ;;		On exit  : 0/0
  1075 ;;		Unchanged: 0/0
  1076 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1077 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1078 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1079 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1080 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1081 ;;Total ram usage:        1 bytes
  1082 ;; Hardware stack levels used: 1
  1083 ;; Hardware stack levels required when called: 5
  1084 ;; This function calls:
  1085 ;;		_ENVIA_LCD_CMD
  1086 ;; This function is called by:
  1087 ;;		_LCD_INIT
  1088 ;; This function uses a non-reentrant model
  1089 ;;
  1090                           
  1091                           	psect	text5
  1092   002CDC                     __ptext5:
  1093                           	callstack 0
  1094   002CDC                     _CURSOR_ONOFF:
  1095                           	callstack 119
  1096                           
  1097                           ;incstack = 0
  1098                           ;CURSOR_ONOFF@estado stored from wreg
  1099   002CDC  6E1A               	movwf	CURSOR_ONOFF@estado^(0+1280),c
  1100                           
  1101                           ;LCD.c: 62: void CURSOR_ONOFF(unsigned char estado);LCD.c: 63: {;LCD.c: 64:  if(estado =
      +                          = 0) ENVIA_LCD_CMD(0x0E);
  1102   002CDE  501A               	movf	CURSOR_ONOFF@estado^(0+1280),w,c
  1103   002CE0  A4D8               	btfss	status,2,c
  1104   002CE2  D003               	goto	l1027
  1105   002CE4  0E0E               	movlw	14
  1106   002CE6  ECA0  F015         	call	_ENVIA_LCD_CMD
  1107   002CEA                     l1027:
  1108                           
  1109                           ;LCD.c: 65:  if(estado == 1) ENVIA_LCD_CMD(0x0C);
  1110   002CEA  041A               	decf	CURSOR_ONOFF@estado^(0+1280),w,c
  1111   002CEC  A4D8               	btfss	status,2,c
  1112   002CEE  0012               	return	
  1113   002CF0  0E0C               	movlw	12
  1114   002CF2  ECA0  F015         	call	_ENVIA_LCD_CMD
  1115   002CF6  0012               	return		;funcret
  1116   002CF8                     __end_of_CURSOR_ONOFF:
  1117                           	callstack 0
  1118                           
  1119 ;; *************** function _CURSOR_HOME *****************
  1120 ;; Defined at:
  1121 ;;		line 37 in file "LCD.c"
  1122 ;; Parameters:    Size  Location     Type
  1123 ;;		None
  1124 ;; Auto vars:     Size  Location     Type
  1125 ;;		None
  1126 ;; Return value:  Size  Location     Type
  1127 ;;                  1    wreg      void 
  1128 ;; Registers used:
  1129 ;;		wreg, status,2, status,0, cstack
  1130 ;; Tracked objects:
  1131 ;;		On entry : 0/4
  1132 ;;		On exit  : 0/0
  1133 ;;		Unchanged: 0/0
  1134 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1135 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1136 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1137 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1138 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1139 ;;Total ram usage:        0 bytes
  1140 ;; Hardware stack levels used: 1
  1141 ;; Hardware stack levels required when called: 5
  1142 ;; This function calls:
  1143 ;;		_ENVIA_LCD_CMD
  1144 ;; This function is called by:
  1145 ;;		_LCD_INIT
  1146 ;; This function uses a non-reentrant model
  1147 ;;
  1148                           
  1149                           	psect	text6
  1150   002D4A                     __ptext6:
  1151                           	callstack 0
  1152   002D4A                     _CURSOR_HOME:
  1153                           	callstack 119
  1154                           
  1155                           ;LCD.c: 39:  ENVIA_LCD_CMD(0x02);
  1156                           
  1157                           ;incstack = 0
  1158   002D4A  0E02               	movlw	2
  1159   002D4C  ECA0  F015         	call	_ENVIA_LCD_CMD
  1160   002D50  0012               	return		;funcret
  1161   002D52                     __end_of_CURSOR_HOME:
  1162                           	callstack 0
  1163                           
  1164 ;; *************** function _BORRAR_LCD *****************
  1165 ;; Defined at:
  1166 ;;		line 104 in file "LCD.c"
  1167 ;; Parameters:    Size  Location     Type
  1168 ;;		None
  1169 ;; Auto vars:     Size  Location     Type
  1170 ;;		None
  1171 ;; Return value:  Size  Location     Type
  1172 ;;                  1    wreg      void 
  1173 ;; Registers used:
  1174 ;;		wreg, status,2, status,0, cstack
  1175 ;; Tracked objects:
  1176 ;;		On entry : 0/4
  1177 ;;		On exit  : 0/0
  1178 ;;		Unchanged: 0/0
  1179 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1180 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1181 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1182 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1183 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1184 ;;Total ram usage:        0 bytes
  1185 ;; Hardware stack levels used: 1
  1186 ;; Hardware stack levels required when called: 5
  1187 ;; This function calls:
  1188 ;;		_ENVIA_LCD_CMD
  1189 ;; This function is called by:
  1190 ;;		_LCD_INIT
  1191 ;; This function uses a non-reentrant model
  1192 ;;
  1193                           
  1194                           	psect	text7
  1195   002D52                     __ptext7:
  1196                           	callstack 0
  1197   002D52                     _BORRAR_LCD:
  1198                           	callstack 119
  1199                           
  1200                           ;LCD.c: 106:  ENVIA_LCD_CMD(0x01);
  1201                           
  1202                           ;incstack = 0
  1203   002D52  0E01               	movlw	1
  1204   002D54  ECA0  F015         	call	_ENVIA_LCD_CMD
  1205   002D58  0012               	return		;funcret
  1206   002D5A                     __end_of_BORRAR_LCD:
  1207                           	callstack 0
  1208                           
  1209 ;; *************** function _U1_STRING_SEND *****************
  1210 ;; Defined at:
  1211 ;;		line 20 in file "U1SERIAL.c"
  1212 ;; Parameters:    Size  Location     Type
  1213 ;;  cadena          1   25[COMRAM] PTR const unsigned char 
  1214 ;;		 -> STR_6(23), STR_5(23), STR_4(12), STR_3(12), 
  1215 ;;		 -> STR_2(5), 
  1216 ;; Auto vars:     Size  Location     Type
  1217 ;;  i               1   28[COMRAM] unsigned char 
  1218 ;;  tam             1   27[COMRAM] unsigned char 
  1219 ;; Return value:  Size  Location     Type
  1220 ;;                  1    wreg      void 
  1221 ;; Registers used:
  1222 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1223 ;; Tracked objects:
  1224 ;;		On entry : 0/0
  1225 ;;		On exit  : 0/0
  1226 ;;		Unchanged: 0/0
  1227 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1228 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1229 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1230 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1231 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1232 ;;Total ram usage:        4 bytes
  1233 ;; Hardware stack levels used: 1
  1234 ;; Hardware stack levels required when called: 4
  1235 ;; This function calls:
  1236 ;;		_strlen
  1237 ;; This function is called by:
  1238 ;;		_main
  1239 ;; This function uses a non-reentrant model
  1240 ;;
  1241                           
  1242                           	psect	text8
  1243   002A56                     __ptext8:
  1244                           	callstack 0
  1245   002A56                     _U1_STRING_SEND:
  1246                           	callstack 122
  1247                           
  1248                           ;U1SERIAL.c: 24:     tam = strlen(cadena);
  1249                           
  1250                           ;incstack = 0
  1251   002A56  C51A  F517         	movff	U1_STRING_SEND@cadena,strlen@s
  1252   002A5A  EC1E  F016         	call	_strlen	;wreg free
  1253   002A5E  5017               	movf	?_strlen^(0+1280),w,c
  1254   002A60  6E1C               	movwf	U1_STRING_SEND@tam^(0+1280),c
  1255                           
  1256                           ;U1SERIAL.c: 25:  for(i = 0; i<tam; i++)
  1257   002A62  0E00               	movlw	0
  1258   002A64  6E1D               	movwf	U1_STRING_SEND@i^(0+1280),c
  1259   002A66  D010               	goto	l1635
  1260   002A68                     l1631:
  1261                           
  1262                           ;U1SERIAL.c: 26:  {;U1SERIAL.c: 27:         U1TXB = cadena[i];
  1263   002A68  501A               	movf	U1_STRING_SEND@cadena^(0+1280),w,c
  1264   002A6A  241D               	addwf	U1_STRING_SEND@i^(0+1280),w,c
  1265   002A6C  6E1B               	movwf	??_U1_STRING_SEND^(0+1280),c
  1266   002A6E  C51B  F4F6         	movff	??_U1_STRING_SEND,tblptrl
  1267   002A72                     	if	1	;There is more than 1 active tblptr byte
  1268   002A72  0E25               	movlw	high __smallconst
  1269   002A74  6EF7               	movwf	tblptrh,c
  1270   002A76                     	endif
  1271   002A76                     	if	0	;tblptru may be non-zero
  1272   002A76                     	endif
  1273   002A76                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1274   002A76  0E00               	movlw	low (__smallconst shr (0+16))
  1275   002A78  6EF8               	movwf	tblptru,c
  1276   002A7A                     	endif
  1277   002A7A  0008               	tblrd		*
  1278   002A7C  C4F5 F2A3          	movff	tablat,675	;volatile
  1279   002A80                     l240:
  1280   002A80  0102               	movlb	2	; () banked
  1281   002A82  AFB2               	btfss	178,7,b	;volatile
  1282   002A84  D7FD               	goto	l240
  1283                           
  1284                           ; BSR set to: 2
  1285                           ;U1SERIAL.c: 29:  }
  1286   002A86  2A1D               	incf	U1_STRING_SEND@i^(0+1280),f,c
  1287   002A88                     l1635:
  1288   002A88  501C               	movf	U1_STRING_SEND@tam^(0+1280),w,c
  1289   002A8A  5C1D               	subwf	U1_STRING_SEND@i^(0+1280),w,c
  1290   002A8C  B0D8               	btfsc	status,0,c
  1291   002A8E  0012               	return	
  1292   002A90  D7EB               	goto	l1631
  1293   002A92                     __end_of_U1_STRING_SEND:
  1294                           	callstack 0
  1295                           
  1296 ;; *************** function _U1_NEWLINE *****************
  1297 ;; Defined at:
  1298 ;;		line 32 in file "U1SERIAL.c"
  1299 ;; Parameters:    Size  Location     Type
  1300 ;;		None
  1301 ;; Auto vars:     Size  Location     Type
  1302 ;;		None
  1303 ;; Return value:  Size  Location     Type
  1304 ;;                  1    wreg      void 
  1305 ;; Registers used:
  1306 ;;		wreg, status,2
  1307 ;; Tracked objects:
  1308 ;;		On entry : 0/0
  1309 ;;		On exit  : 3F/2
  1310 ;;		Unchanged: 0/0
  1311 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1312 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1313 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1314 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1315 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1316 ;;Total ram usage:        0 bytes
  1317 ;; Hardware stack levels used: 1
  1318 ;; Hardware stack levels required when called: 3
  1319 ;; This function calls:
  1320 ;;		Nothing
  1321 ;; This function is called by:
  1322 ;;		_main
  1323 ;; This function uses a non-reentrant model
  1324 ;;
  1325                           
  1326                           	psect	text9
  1327   002D14                     __ptext9:
  1328                           	callstack 0
  1329   002D14                     _U1_NEWLINE:
  1330                           	callstack 123
  1331                           
  1332                           ;U1SERIAL.c: 33:     U1TXB = 0x0A;
  1333                           
  1334                           ;incstack = 0
  1335   002D14  0E0A               	movlw	10
  1336   002D16  0102               	movlb	2	; () banked
  1337   002D18  6FA3               	movwf	163,b	;volatile
  1338   002D1A                     l247:
  1339                           
  1340                           ; BSR set to: 2
  1341   002D1A  AFB2               	btfss	178,7,b	;volatile
  1342   002D1C  D7FE               	goto	l247
  1343                           
  1344                           ; BSR set to: 2
  1345                           ;U1SERIAL.c: 35:     U1TXB = 0x0D;
  1346   002D1E  0E0D               	movlw	13
  1347   002D20  6FA3               	movwf	163,b	;volatile
  1348   002D22                     l250:
  1349                           
  1350                           ; BSR set to: 2
  1351   002D22  BFB2               	btfsc	178,7,b	;volatile
  1352   002D24  0012               	return	
  1353   002D26  D7FD               	goto	l250
  1354   002D28                     __end_of_U1_NEWLINE:
  1355                           	callstack 0
  1356                           
  1357 ;; *************** function _U1_ESCRIBE_VAR_INT *****************
  1358 ;; Defined at:
  1359 ;;		line 60 in file "U1SERIAL.c"
  1360 ;; Parameters:    Size  Location     Type
  1361 ;;  numero          2   34[COMRAM] unsigned int 
  1362 ;;  n_digitos       1   36[COMRAM] unsigned char 
  1363 ;; Auto vars:     Size  Location     Type
  1364 ;;  unidad          1   43[COMRAM] unsigned char 
  1365 ;;  decena          1   42[COMRAM] unsigned char 
  1366 ;;  centena         1   41[COMRAM] unsigned char 
  1367 ;;  millar          1   40[COMRAM] unsigned char 
  1368 ;;  d_millar        1   39[COMRAM] unsigned char 
  1369 ;; Return value:  Size  Location     Type
  1370 ;;                  1    wreg      void 
  1371 ;; Registers used:
  1372 ;;		wreg, status,2, status,0, cstack
  1373 ;; Tracked objects:
  1374 ;;		On entry : 0/2
  1375 ;;		On exit  : 0/0
  1376 ;;		Unchanged: 0/0
  1377 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1378 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1379 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1380 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1381 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1382 ;;Total ram usage:       10 bytes
  1383 ;; Hardware stack levels used: 1
  1384 ;; Hardware stack levels required when called: 4
  1385 ;; This function calls:
  1386 ;;		_U1_DATA_SEND
  1387 ;;		___lwdiv
  1388 ;;		___lwmod
  1389 ;; This function is called by:
  1390 ;;		_main
  1391 ;; This function uses a non-reentrant model
  1392 ;;
  1393                           
  1394                           	psect	text10
  1395   00255E                     __ptext10:
  1396                           	callstack 0
  1397   00255E                     _U1_ESCRIBE_VAR_INT:
  1398                           	callstack 122
  1399                           
  1400                           ;U1SERIAL.c: 61:     unsigned char d_millar, millar, centena, decena, unidad;;U1SERIAL.c
      +                          : 62:     d_millar = numero / 10000;
  1401                           
  1402                           ; BSR set to: 2
  1403                           ;incstack = 0
  1404   00255E  C523  F51C         	movff	U1_ESCRIBE_VAR_INT@numero,___lwdiv@dividend
  1405   002562  C524  F51D         	movff	U1_ESCRIBE_VAR_INT@numero+1,___lwdiv@dividend+1
  1406   002566  0E27               	movlw	39
  1407   002568  6E1F               	movwf	(___lwdiv@divisor+1)^(0+1280),c
  1408   00256A  0E10               	movlw	16
  1409   00256C  6E1E               	movwf	___lwdiv@divisor^(0+1280),c
  1410   00256E  EC7A  F014         	call	___lwdiv	;wreg free
  1411   002572  501C               	movf	?___lwdiv^(0+1280),w,c
  1412   002574  6E28               	movwf	U1_ESCRIBE_VAR_INT@d_millar^(0+1280),c
  1413                           
  1414                           ;U1SERIAL.c: 63:     millar = (numero % 10000) / 1000;
  1415   002576  0E27               	movlw	39
  1416   002578  6E1A               	movwf	(___lwmod@divisor+1)^(0+1280),c
  1417   00257A  0E10               	movlw	16
  1418   00257C  6E19               	movwf	___lwmod@divisor^(0+1280),c
  1419   00257E  C523  F517         	movff	U1_ESCRIBE_VAR_INT@numero,___lwmod@dividend
  1420   002582  C524  F518         	movff	U1_ESCRIBE_VAR_INT@numero+1,___lwmod@dividend+1
  1421   002586  ECEC  F014         	call	___lwmod	;wreg free
  1422   00258A  C517  F51C         	movff	?___lwmod,___lwdiv@dividend
  1423   00258E  C518  F51D         	movff	?___lwmod+1,___lwdiv@dividend+1
  1424   002592  0E03               	movlw	3
  1425   002594  6E1F               	movwf	(___lwdiv@divisor+1)^(0+1280),c
  1426   002596  0EE8               	movlw	232
  1427   002598  6E1E               	movwf	___lwdiv@divisor^(0+1280),c
  1428   00259A  EC7A  F014         	call	___lwdiv	;wreg free
  1429   00259E  501C               	movf	?___lwdiv^(0+1280),w,c
  1430   0025A0  6E29               	movwf	U1_ESCRIBE_VAR_INT@millar^(0+1280),c
  1431                           
  1432                           ;U1SERIAL.c: 64:     centena = (numero % 1000) / 100;
  1433   0025A2  0E03               	movlw	3
  1434   0025A4  6E1A               	movwf	(___lwmod@divisor+1)^(0+1280),c
  1435   0025A6  0EE8               	movlw	232
  1436   0025A8  6E19               	movwf	___lwmod@divisor^(0+1280),c
  1437   0025AA  C523  F517         	movff	U1_ESCRIBE_VAR_INT@numero,___lwmod@dividend
  1438   0025AE  C524  F518         	movff	U1_ESCRIBE_VAR_INT@numero+1,___lwmod@dividend+1
  1439   0025B2  ECEC  F014         	call	___lwmod	;wreg free
  1440   0025B6  C517  F51C         	movff	?___lwmod,___lwdiv@dividend
  1441   0025BA  C518  F51D         	movff	?___lwmod+1,___lwdiv@dividend+1
  1442   0025BE  0E00               	movlw	0
  1443   0025C0  6E1F               	movwf	(___lwdiv@divisor+1)^(0+1280),c
  1444   0025C2  0E64               	movlw	100
  1445   0025C4  6E1E               	movwf	___lwdiv@divisor^(0+1280),c
  1446   0025C6  EC7A  F014         	call	___lwdiv	;wreg free
  1447   0025CA  501C               	movf	?___lwdiv^(0+1280),w,c
  1448   0025CC  6E2A               	movwf	U1_ESCRIBE_VAR_INT@centena^(0+1280),c
  1449                           
  1450                           ;U1SERIAL.c: 65:     decena = (numero % 100) / 10;
  1451   0025CE  0E00               	movlw	0
  1452   0025D0  6E1A               	movwf	(___lwmod@divisor+1)^(0+1280),c
  1453   0025D2  0E64               	movlw	100
  1454   0025D4  6E19               	movwf	___lwmod@divisor^(0+1280),c
  1455   0025D6  C523  F517         	movff	U1_ESCRIBE_VAR_INT@numero,___lwmod@dividend
  1456   0025DA  C524  F518         	movff	U1_ESCRIBE_VAR_INT@numero+1,___lwmod@dividend+1
  1457   0025DE  ECEC  F014         	call	___lwmod	;wreg free
  1458   0025E2  C517  F51C         	movff	?___lwmod,___lwdiv@dividend
  1459   0025E6  C518  F51D         	movff	?___lwmod+1,___lwdiv@dividend+1
  1460   0025EA  0E00               	movlw	0
  1461   0025EC  6E1F               	movwf	(___lwdiv@divisor+1)^(0+1280),c
  1462   0025EE  0E0A               	movlw	10
  1463   0025F0  6E1E               	movwf	___lwdiv@divisor^(0+1280),c
  1464   0025F2  EC7A  F014         	call	___lwdiv	;wreg free
  1465   0025F6  501C               	movf	?___lwdiv^(0+1280),w,c
  1466   0025F8  6E2B               	movwf	U1_ESCRIBE_VAR_INT@decena^(0+1280),c
  1467                           
  1468                           ;U1SERIAL.c: 66:     unidad = numero % 10;
  1469   0025FA  C523  F517         	movff	U1_ESCRIBE_VAR_INT@numero,___lwmod@dividend
  1470   0025FE  C524  F518         	movff	U1_ESCRIBE_VAR_INT@numero+1,___lwmod@dividend+1
  1471   002602  0E00               	movlw	0
  1472   002604  6E1A               	movwf	(___lwmod@divisor+1)^(0+1280),c
  1473   002606  0E0A               	movlw	10
  1474   002608  6E19               	movwf	___lwmod@divisor^(0+1280),c
  1475   00260A  ECEC  F014         	call	___lwmod	;wreg free
  1476   00260E  5017               	movf	?___lwmod^(0+1280),w,c
  1477   002610  6E2C               	movwf	U1_ESCRIBE_VAR_INT@unidad^(0+1280),c
  1478                           
  1479                           ;U1SERIAL.c: 67:     switch(n_digitos){
  1480   002612  D041               	goto	l1667
  1481   002614                     l1655:
  1482                           
  1483                           ;U1SERIAL.c: 69:             U1_DATA_SEND(unidad+0x30);
  1484   002614  502C               	movf	U1_ESCRIBE_VAR_INT@unidad^(0+1280),w,c
  1485   002616  0F30               	addlw	48
  1486   002618  EC9E  F016         	call	_U1_DATA_SEND
  1487                           
  1488                           ;U1SERIAL.c: 70:             break;
  1489   00261C  0012               	return	
  1490   00261E                     l1657:
  1491                           
  1492                           ;U1SERIAL.c: 72:             U1_DATA_SEND(decena+0x30);
  1493   00261E  502B               	movf	U1_ESCRIBE_VAR_INT@decena^(0+1280),w,c
  1494   002620  0F30               	addlw	48
  1495   002622  EC9E  F016         	call	_U1_DATA_SEND
  1496                           
  1497                           ;U1SERIAL.c: 73:             U1_DATA_SEND(unidad+0x30);
  1498   002626  502C               	movf	U1_ESCRIBE_VAR_INT@unidad^(0+1280),w,c
  1499   002628  0F30               	addlw	48
  1500   00262A  EC9E  F016         	call	_U1_DATA_SEND
  1501                           
  1502                           ;U1SERIAL.c: 74:             break;
  1503   00262E  0012               	return	
  1504   002630                     l1659:
  1505                           
  1506                           ;U1SERIAL.c: 76:             U1_DATA_SEND(centena+0x30);
  1507   002630  502A               	movf	U1_ESCRIBE_VAR_INT@centena^(0+1280),w,c
  1508   002632  0F30               	addlw	48
  1509   002634  EC9E  F016         	call	_U1_DATA_SEND
  1510                           
  1511                           ;U1SERIAL.c: 77:             U1_DATA_SEND(decena+0x30);
  1512   002638  502B               	movf	U1_ESCRIBE_VAR_INT@decena^(0+1280),w,c
  1513   00263A  0F30               	addlw	48
  1514   00263C  EC9E  F016         	call	_U1_DATA_SEND
  1515                           
  1516                           ;U1SERIAL.c: 78:             U1_DATA_SEND(unidad+0x30);
  1517   002640  502C               	movf	U1_ESCRIBE_VAR_INT@unidad^(0+1280),w,c
  1518   002642  0F30               	addlw	48
  1519   002644  EC9E  F016         	call	_U1_DATA_SEND
  1520                           
  1521                           ;U1SERIAL.c: 79:             break;
  1522   002648  0012               	return	
  1523   00264A                     l1661:
  1524                           
  1525                           ;U1SERIAL.c: 81:             U1_DATA_SEND(millar+0x30);
  1526   00264A  5029               	movf	U1_ESCRIBE_VAR_INT@millar^(0+1280),w,c
  1527   00264C  0F30               	addlw	48
  1528   00264E  EC9E  F016         	call	_U1_DATA_SEND
  1529                           
  1530                           ;U1SERIAL.c: 82:             U1_DATA_SEND(centena+0x30);
  1531   002652  502A               	movf	U1_ESCRIBE_VAR_INT@centena^(0+1280),w,c
  1532   002654  0F30               	addlw	48
  1533   002656  EC9E  F016         	call	_U1_DATA_SEND
  1534                           
  1535                           ;U1SERIAL.c: 83:             U1_DATA_SEND(decena+0x30);
  1536   00265A  502B               	movf	U1_ESCRIBE_VAR_INT@decena^(0+1280),w,c
  1537   00265C  0F30               	addlw	48
  1538   00265E  EC9E  F016         	call	_U1_DATA_SEND
  1539                           
  1540                           ;U1SERIAL.c: 84:             U1_DATA_SEND(unidad+0x30);
  1541   002662  502C               	movf	U1_ESCRIBE_VAR_INT@unidad^(0+1280),w,c
  1542   002664  0F30               	addlw	48
  1543   002666  EC9E  F016         	call	_U1_DATA_SEND
  1544                           
  1545                           ;U1SERIAL.c: 85:             break;
  1546   00266A  0012               	return	
  1547   00266C                     l1663:
  1548                           
  1549                           ;U1SERIAL.c: 87:             U1_DATA_SEND(d_millar+0x30);
  1550   00266C  5028               	movf	U1_ESCRIBE_VAR_INT@d_millar^(0+1280),w,c
  1551   00266E  0F30               	addlw	48
  1552   002670  EC9E  F016         	call	_U1_DATA_SEND
  1553                           
  1554                           ;U1SERIAL.c: 88:             U1_DATA_SEND(millar+0x30);
  1555   002674  5029               	movf	U1_ESCRIBE_VAR_INT@millar^(0+1280),w,c
  1556   002676  0F30               	addlw	48
  1557   002678  EC9E  F016         	call	_U1_DATA_SEND
  1558                           
  1559                           ;U1SERIAL.c: 89:             U1_DATA_SEND(centena+0x30);
  1560   00267C  502A               	movf	U1_ESCRIBE_VAR_INT@centena^(0+1280),w,c
  1561   00267E  0F30               	addlw	48
  1562   002680  EC9E  F016         	call	_U1_DATA_SEND
  1563                           
  1564                           ;U1SERIAL.c: 90:             U1_DATA_SEND(decena+0x30);
  1565   002684  502B               	movf	U1_ESCRIBE_VAR_INT@decena^(0+1280),w,c
  1566   002686  0F30               	addlw	48
  1567   002688  EC9E  F016         	call	_U1_DATA_SEND
  1568                           
  1569                           ;U1SERIAL.c: 91:             U1_DATA_SEND(unidad+0x30);
  1570   00268C  502C               	movf	U1_ESCRIBE_VAR_INT@unidad^(0+1280),w,c
  1571   00268E  0F30               	addlw	48
  1572   002690  EC9E  F016         	call	_U1_DATA_SEND
  1573                           
  1574                           ;U1SERIAL.c: 92:             break;
  1575   002694  0012               	return	
  1576   002696                     l1667:
  1577   002696  5025               	movf	U1_ESCRIBE_VAR_INT@n_digitos^(0+1280),w,c
  1578   002698  6E26               	movwf	??_U1_ESCRIBE_VAR_INT^(0+1280),c
  1579   00269A  6A27               	clrf	(??_U1_ESCRIBE_VAR_INT+1)^(0+1280),c
  1580                           
  1581                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1582                           ; Switch size 1, requested type "simple"
  1583                           ; Number of cases is 1, Range of values is 0 to 0
  1584                           ; switch strategies available:
  1585                           ; Name         Instructions Cycles
  1586                           ; simple_byte            4     3 (average)
  1587                           ;	Chosen strategy is simple_byte
  1588   00269C  5027               	movf	(??_U1_ESCRIBE_VAR_INT+1)^(0+1280),w,c
  1589   00269E  0A00               	xorlw	0	; case 0
  1590   0026A0  A4D8               	btfss	status,2,c
  1591   0026A2  0012               	return	
  1592                           
  1593                           ; Switch size 1, requested type "simple"
  1594                           ; Number of cases is 5, Range of values is 1 to 5
  1595                           ; switch strategies available:
  1596                           ; Name         Instructions Cycles
  1597                           ; simple_byte           16     9 (average)
  1598                           ;	Chosen strategy is simple_byte
  1599   0026A4  5026               	movf	??_U1_ESCRIBE_VAR_INT^(0+1280),w,c
  1600   0026A6  0A01               	xorlw	1	; case 1
  1601   0026A8  B4D8               	btfsc	status,2,c
  1602   0026AA  D7B4               	goto	l1655
  1603   0026AC  0A03               	xorlw	3	; case 2
  1604   0026AE  B4D8               	btfsc	status,2,c
  1605   0026B0  D7B6               	goto	l1657
  1606   0026B2  0A01               	xorlw	1	; case 3
  1607   0026B4  B4D8               	btfsc	status,2,c
  1608   0026B6  D7BC               	goto	l1659
  1609   0026B8  0A07               	xorlw	7	; case 4
  1610   0026BA  B4D8               	btfsc	status,2,c
  1611   0026BC  D7C6               	goto	l1661
  1612   0026BE  0A01               	xorlw	1	; case 5
  1613   0026C0  A4D8               	btfss	status,2,c
  1614   0026C2  0012               	return	
  1615   0026C4  D7D3               	goto	l1663
  1616   0026C6                     __end_of_U1_ESCRIBE_VAR_INT:
  1617                           	callstack 0
  1618                           
  1619 ;; *************** function ___lwmod *****************
  1620 ;; Defined at:
  1621 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\lwmod.c"
  1622 ;; Parameters:    Size  Location     Type
  1623 ;;  dividend        2   22[COMRAM] unsigned int 
  1624 ;;  divisor         2   24[COMRAM] unsigned int 
  1625 ;; Auto vars:     Size  Location     Type
  1626 ;;  counter         1   26[COMRAM] unsigned char 
  1627 ;; Return value:  Size  Location     Type
  1628 ;;                  2   22[COMRAM] unsigned int 
  1629 ;; Registers used:
  1630 ;;		wreg, status,2, status,0
  1631 ;; Tracked objects:
  1632 ;;		On entry : 0/2
  1633 ;;		On exit  : 0/0
  1634 ;;		Unchanged: 0/0
  1635 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1636 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1637 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1638 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1639 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1640 ;;Total ram usage:        5 bytes
  1641 ;; Hardware stack levels used: 1
  1642 ;; Hardware stack levels required when called: 3
  1643 ;; This function calls:
  1644 ;;		Nothing
  1645 ;; This function is called by:
  1646 ;;		_U1_ESCRIBE_VAR_INT
  1647 ;; This function uses a non-reentrant model
  1648 ;;
  1649                           
  1650                           	psect	text11
  1651   0029D8                     __ptext11:
  1652                           	callstack 0
  1653   0029D8                     ___lwmod:
  1654                           	callstack 122
  1655                           
  1656                           ;incstack = 0
  1657   0029D8  5019               	movf	___lwmod@divisor^(0+1280),w,c
  1658   0029DA  101A               	iorwf	(___lwmod@divisor+1)^(0+1280),w,c
  1659   0029DC  B4D8               	btfsc	status,2,c
  1660   0029DE  D018               	goto	l775
  1661   0029E0  0E01               	movlw	1
  1662   0029E2  6E1B               	movwf	___lwmod@counter^(0+1280),c
  1663   0029E4  D004               	goto	l1577
  1664   0029E6                     l1575:
  1665   0029E6  90D8               	bcf	status,0,c
  1666   0029E8  3619               	rlcf	___lwmod@divisor^(0+1280),f,c
  1667   0029EA  361A               	rlcf	(___lwmod@divisor+1)^(0+1280),f,c
  1668   0029EC  2A1B               	incf	___lwmod@counter^(0+1280),f,c
  1669   0029EE                     l1577:
  1670   0029EE  AE1A               	btfss	(___lwmod@divisor+1)^(0+1280),7,c
  1671   0029F0  D7FA               	goto	l1575
  1672   0029F2                     u510:
  1673   0029F2  5019               	movf	___lwmod@divisor^(0+1280),w,c
  1674   0029F4  5C17               	subwf	___lwmod@dividend^(0+1280),w,c
  1675   0029F6  501A               	movf	(___lwmod@divisor+1)^(0+1280),w,c
  1676   0029F8  5818               	subwfb	(___lwmod@dividend+1)^(0+1280),w,c
  1677   0029FA  A0D8               	btfss	status,0,c
  1678   0029FC  D004               	goto	l1583
  1679   0029FE  5019               	movf	___lwmod@divisor^(0+1280),w,c
  1680   002A00  5E17               	subwf	___lwmod@dividend^(0+1280),f,c
  1681   002A02  501A               	movf	(___lwmod@divisor+1)^(0+1280),w,c
  1682   002A04  5A18               	subwfb	(___lwmod@dividend+1)^(0+1280),f,c
  1683   002A06                     l1583:
  1684   002A06  90D8               	bcf	status,0,c
  1685   002A08  321A               	rrcf	(___lwmod@divisor+1)^(0+1280),f,c
  1686   002A0A  3219               	rrcf	___lwmod@divisor^(0+1280),f,c
  1687   002A0C  2E1B               	decfsz	___lwmod@counter^(0+1280),f,c
  1688   002A0E  D7F1               	goto	u510
  1689   002A10                     l775:
  1690   002A10  C517  F517         	movff	___lwmod@dividend,?___lwmod
  1691   002A14  C518  F518         	movff	___lwmod@dividend+1,?___lwmod+1
  1692   002A18  0012               	return		;funcret
  1693   002A1A                     __end_of___lwmod:
  1694                           	callstack 0
  1695                           
  1696 ;; *************** function ___lwdiv *****************
  1697 ;; Defined at:
  1698 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\lwdiv.c"
  1699 ;; Parameters:    Size  Location     Type
  1700 ;;  dividend        2   27[COMRAM] unsigned int 
  1701 ;;  divisor         2   29[COMRAM] unsigned int 
  1702 ;; Auto vars:     Size  Location     Type
  1703 ;;  quotient        2   31[COMRAM] unsigned int 
  1704 ;;  counter         1   33[COMRAM] unsigned char 
  1705 ;; Return value:  Size  Location     Type
  1706 ;;                  2   27[COMRAM] unsigned int 
  1707 ;; Registers used:
  1708 ;;		wreg, status,2, status,0
  1709 ;; Tracked objects:
  1710 ;;		On entry : 0/2
  1711 ;;		On exit  : 0/0
  1712 ;;		Unchanged: 0/0
  1713 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1714 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1715 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1716 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1717 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1718 ;;Total ram usage:        7 bytes
  1719 ;; Hardware stack levels used: 1
  1720 ;; Hardware stack levels required when called: 3
  1721 ;; This function calls:
  1722 ;;		Nothing
  1723 ;; This function is called by:
  1724 ;;		_U1_ESCRIBE_VAR_INT
  1725 ;; This function uses a non-reentrant model
  1726 ;;
  1727                           
  1728                           	psect	text12
  1729   0028F4                     __ptext12:
  1730                           	callstack 0
  1731   0028F4                     ___lwdiv:
  1732                           	callstack 122
  1733                           
  1734                           ;incstack = 0
  1735   0028F4  0E00               	movlw	0
  1736   0028F6  6E21               	movwf	(___lwdiv@quotient+1)^(0+1280),c
  1737   0028F8  0E00               	movlw	0
  1738   0028FA  6E20               	movwf	___lwdiv@quotient^(0+1280),c
  1739   0028FC  501E               	movf	___lwdiv@divisor^(0+1280),w,c
  1740   0028FE  101F               	iorwf	(___lwdiv@divisor+1)^(0+1280),w,c
  1741   002900  B4D8               	btfsc	status,2,c
  1742   002902  D01C               	goto	l765
  1743   002904  0E01               	movlw	1
  1744   002906  6E22               	movwf	___lwdiv@counter^(0+1280),c
  1745   002908  D004               	goto	l1557
  1746   00290A                     l1555:
  1747   00290A  90D8               	bcf	status,0,c
  1748   00290C  361E               	rlcf	___lwdiv@divisor^(0+1280),f,c
  1749   00290E  361F               	rlcf	(___lwdiv@divisor+1)^(0+1280),f,c
  1750   002910  2A22               	incf	___lwdiv@counter^(0+1280),f,c
  1751   002912                     l1557:
  1752   002912  AE1F               	btfss	(___lwdiv@divisor+1)^(0+1280),7,c
  1753   002914  D7FA               	goto	l1555
  1754   002916                     u480:
  1755   002916  90D8               	bcf	status,0,c
  1756   002918  3620               	rlcf	___lwdiv@quotient^(0+1280),f,c
  1757   00291A  3621               	rlcf	(___lwdiv@quotient+1)^(0+1280),f,c
  1758   00291C  501E               	movf	___lwdiv@divisor^(0+1280),w,c
  1759   00291E  5C1C               	subwf	___lwdiv@dividend^(0+1280),w,c
  1760   002920  501F               	movf	(___lwdiv@divisor+1)^(0+1280),w,c
  1761   002922  581D               	subwfb	(___lwdiv@dividend+1)^(0+1280),w,c
  1762   002924  A0D8               	btfss	status,0,c
  1763   002926  D005               	goto	l1567
  1764   002928  501E               	movf	___lwdiv@divisor^(0+1280),w,c
  1765   00292A  5E1C               	subwf	___lwdiv@dividend^(0+1280),f,c
  1766   00292C  501F               	movf	(___lwdiv@divisor+1)^(0+1280),w,c
  1767   00292E  5A1D               	subwfb	(___lwdiv@dividend+1)^(0+1280),f,c
  1768   002930  8020               	bsf	___lwdiv@quotient^(0+1280),0,c
  1769   002932                     l1567:
  1770   002932  90D8               	bcf	status,0,c
  1771   002934  321F               	rrcf	(___lwdiv@divisor+1)^(0+1280),f,c
  1772   002936  321E               	rrcf	___lwdiv@divisor^(0+1280),f,c
  1773   002938  2E22               	decfsz	___lwdiv@counter^(0+1280),f,c
  1774   00293A  D7ED               	goto	u480
  1775   00293C                     l765:
  1776   00293C  C520  F51C         	movff	___lwdiv@quotient,?___lwdiv
  1777   002940  C521  F51D         	movff	___lwdiv@quotient+1,?___lwdiv+1
  1778   002944  0012               	return		;funcret
  1779   002946                     __end_of___lwdiv:
  1780                           	callstack 0
  1781                           
  1782 ;; *************** function _U1_ESCRIBE_VAR_CHAR *****************
  1783 ;; Defined at:
  1784 ;;		line 39 in file "U1SERIAL.c"
  1785 ;; Parameters:    Size  Location     Type
  1786 ;;  numero          1    wreg     unsigned char 
  1787 ;;  n_digitos       1   32[COMRAM] unsigned char 
  1788 ;; Auto vars:     Size  Location     Type
  1789 ;;  numero          1   37[COMRAM] unsigned char 
  1790 ;;  unidad          1   38[COMRAM] unsigned char 
  1791 ;;  decena          1   36[COMRAM] unsigned char 
  1792 ;;  centena         1   35[COMRAM] unsigned char 
  1793 ;; Return value:  Size  Location     Type
  1794 ;;                  1    wreg      void 
  1795 ;; Registers used:
  1796 ;;		wreg, status,2, status,0, cstack
  1797 ;; Tracked objects:
  1798 ;;		On entry : 0/2
  1799 ;;		On exit  : 0/0
  1800 ;;		Unchanged: 0/0
  1801 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1802 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1803 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1804 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1805 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1806 ;;Total ram usage:        7 bytes
  1807 ;; Hardware stack levels used: 1
  1808 ;; Hardware stack levels required when called: 4
  1809 ;; This function calls:
  1810 ;;		_U1_DATA_SEND
  1811 ;;		___awmod
  1812 ;;		___lbdiv
  1813 ;;		___lbmod
  1814 ;; This function is called by:
  1815 ;;		_main
  1816 ;; This function uses a non-reentrant model
  1817 ;;
  1818                           
  1819                           	psect	text13
  1820   0026C6                     __ptext13:
  1821                           	callstack 0
  1822   0026C6                     _U1_ESCRIBE_VAR_CHAR:
  1823                           	callstack 122
  1824                           
  1825                           ;incstack = 0
  1826                           ;U1_ESCRIBE_VAR_CHAR@numero stored from wreg
  1827   0026C6  6E26               	movwf	U1_ESCRIBE_VAR_CHAR@numero^(0+1280),c
  1828                           
  1829                           ;U1SERIAL.c: 40:     unsigned char centena, decena, unidad;;U1SERIAL.c: 41:     centena 
      +                          = (numero % 1000) / 100;
  1830   0026C8  0E64               	movlw	100
  1831   0026CA  6E1D               	movwf	___lbdiv@divisor^(0+1280),c
  1832   0026CC  0E03               	movlw	3
  1833   0026CE  6E1A               	movwf	(___awmod@divisor+1)^(0+1280),c
  1834   0026D0  0EE8               	movlw	232
  1835   0026D2  6E19               	movwf	___awmod@divisor^(0+1280),c
  1836   0026D4  C526  F517         	movff	U1_ESCRIBE_VAR_CHAR@numero,___awmod@dividend
  1837   0026D8  6A18               	clrf	(___awmod@dividend+1)^(0+1280),c
  1838   0026DA  ECB1  F013         	call	___awmod	;wreg free
  1839   0026DE  5017               	movf	?___awmod^(0+1280),w,c
  1840   0026E0  EC67  F015         	call	___lbdiv
  1841   0026E4  6E24               	movwf	U1_ESCRIBE_VAR_CHAR@centena^(0+1280),c
  1842                           
  1843                           ;U1SERIAL.c: 42:     decena = (numero % 100) / 10;
  1844   0026E6  0E0A               	movlw	10
  1845   0026E8  6E1D               	movwf	___lbdiv@divisor^(0+1280),c
  1846   0026EA  0E64               	movlw	100
  1847   0026EC  6E17               	movwf	___lbmod@divisor^(0+1280),c
  1848   0026EE  5026               	movf	U1_ESCRIBE_VAR_CHAR@numero^(0+1280),w,c
  1849   0026F0  EC4A  F016         	call	___lbmod
  1850   0026F4  EC67  F015         	call	___lbdiv
  1851   0026F8  6E25               	movwf	U1_ESCRIBE_VAR_CHAR@decena^(0+1280),c
  1852                           
  1853                           ;U1SERIAL.c: 43:     unidad = numero % 10;
  1854   0026FA  0E0A               	movlw	10
  1855   0026FC  6E17               	movwf	___lbmod@divisor^(0+1280),c
  1856   0026FE  5026               	movf	U1_ESCRIBE_VAR_CHAR@numero^(0+1280),w,c
  1857   002700  EC4A  F016         	call	___lbmod
  1858   002704  6E27               	movwf	U1_ESCRIBE_VAR_CHAR@unidad^(0+1280),c
  1859                           
  1860                           ;U1SERIAL.c: 44:     switch(n_digitos){
  1861   002706  D01B               	goto	l1647
  1862   002708                     l1639:
  1863                           
  1864                           ;U1SERIAL.c: 46:             U1_DATA_SEND(unidad+0x30);
  1865   002708  5027               	movf	U1_ESCRIBE_VAR_CHAR@unidad^(0+1280),w,c
  1866   00270A  0F30               	addlw	48
  1867   00270C  EC9E  F016         	call	_U1_DATA_SEND
  1868                           
  1869                           ;U1SERIAL.c: 47:             break;
  1870   002710  0012               	return	
  1871   002712                     l1641:
  1872                           
  1873                           ;U1SERIAL.c: 49:             U1_DATA_SEND(decena+0x30);
  1874   002712  5025               	movf	U1_ESCRIBE_VAR_CHAR@decena^(0+1280),w,c
  1875   002714  0F30               	addlw	48
  1876   002716  EC9E  F016         	call	_U1_DATA_SEND
  1877                           
  1878                           ;U1SERIAL.c: 50:             U1_DATA_SEND(unidad+0x30);
  1879   00271A  5027               	movf	U1_ESCRIBE_VAR_CHAR@unidad^(0+1280),w,c
  1880   00271C  0F30               	addlw	48
  1881   00271E  EC9E  F016         	call	_U1_DATA_SEND
  1882                           
  1883                           ;U1SERIAL.c: 51:             break;
  1884   002722  0012               	return	
  1885   002724                     l1643:
  1886                           
  1887                           ;U1SERIAL.c: 53:             U1_DATA_SEND(centena+0x30);
  1888   002724  5024               	movf	U1_ESCRIBE_VAR_CHAR@centena^(0+1280),w,c
  1889   002726  0F30               	addlw	48
  1890   002728  EC9E  F016         	call	_U1_DATA_SEND
  1891                           
  1892                           ;U1SERIAL.c: 54:             U1_DATA_SEND(decena+0x30);
  1893   00272C  5025               	movf	U1_ESCRIBE_VAR_CHAR@decena^(0+1280),w,c
  1894   00272E  0F30               	addlw	48
  1895   002730  EC9E  F016         	call	_U1_DATA_SEND
  1896                           
  1897                           ;U1SERIAL.c: 55:             U1_DATA_SEND(unidad+0x30);
  1898   002734  5027               	movf	U1_ESCRIBE_VAR_CHAR@unidad^(0+1280),w,c
  1899   002736  0F30               	addlw	48
  1900   002738  EC9E  F016         	call	_U1_DATA_SEND
  1901                           
  1902                           ;U1SERIAL.c: 56:             break;
  1903   00273C  0012               	return	
  1904   00273E                     l1647:
  1905   00273E  5021               	movf	U1_ESCRIBE_VAR_CHAR@n_digitos^(0+1280),w,c
  1906   002740  6E22               	movwf	??_U1_ESCRIBE_VAR_CHAR^(0+1280),c
  1907   002742  6A23               	clrf	(??_U1_ESCRIBE_VAR_CHAR+1)^(0+1280),c
  1908                           
  1909                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1910                           ; Switch size 1, requested type "simple"
  1911                           ; Number of cases is 1, Range of values is 0 to 0
  1912                           ; switch strategies available:
  1913                           ; Name         Instructions Cycles
  1914                           ; simple_byte            4     3 (average)
  1915                           ;	Chosen strategy is simple_byte
  1916   002744  5023               	movf	(??_U1_ESCRIBE_VAR_CHAR+1)^(0+1280),w,c
  1917   002746  0A00               	xorlw	0	; case 0
  1918   002748  A4D8               	btfss	status,2,c
  1919   00274A  0012               	return	
  1920                           
  1921                           ; Switch size 1, requested type "simple"
  1922                           ; Number of cases is 3, Range of values is 1 to 3
  1923                           ; switch strategies available:
  1924                           ; Name         Instructions Cycles
  1925                           ; simple_byte           10     6 (average)
  1926                           ;	Chosen strategy is simple_byte
  1927   00274C  5022               	movf	??_U1_ESCRIBE_VAR_CHAR^(0+1280),w,c
  1928   00274E  0A01               	xorlw	1	; case 1
  1929   002750  B4D8               	btfsc	status,2,c
  1930   002752  D7DA               	goto	l1639
  1931   002754  0A03               	xorlw	3	; case 2
  1932   002756  B4D8               	btfsc	status,2,c
  1933   002758  D7DC               	goto	l1641
  1934   00275A  0A01               	xorlw	1	; case 3
  1935   00275C  A4D8               	btfss	status,2,c
  1936   00275E  0012               	return	
  1937   002760  D7E1               	goto	l1643
  1938   002762                     __end_of_U1_ESCRIBE_VAR_CHAR:
  1939                           	callstack 0
  1940                           
  1941 ;; *************** function ___lbmod *****************
  1942 ;; Defined at:
  1943 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\lbmod.c"
  1944 ;; Parameters:    Size  Location     Type
  1945 ;;  dividend        1    wreg     unsigned char 
  1946 ;;  divisor         1   22[COMRAM] unsigned char 
  1947 ;; Auto vars:     Size  Location     Type
  1948 ;;  dividend        1   23[COMRAM] unsigned char 
  1949 ;;  rem             1   25[COMRAM] unsigned char 
  1950 ;;  counter         1   24[COMRAM] unsigned char 
  1951 ;; Return value:  Size  Location     Type
  1952 ;;                  1    wreg      unsigned char 
  1953 ;; Registers used:
  1954 ;;		wreg, status,2, status,0
  1955 ;; Tracked objects:
  1956 ;;		On entry : 0/2
  1957 ;;		On exit  : 0/0
  1958 ;;		Unchanged: 0/0
  1959 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1960 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1961 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1962 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1963 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1964 ;;Total ram usage:        4 bytes
  1965 ;; Hardware stack levels used: 1
  1966 ;; Hardware stack levels required when called: 3
  1967 ;; This function calls:
  1968 ;;		Nothing
  1969 ;; This function is called by:
  1970 ;;		_U1_ESCRIBE_VAR_CHAR
  1971 ;; This function uses a non-reentrant model
  1972 ;;
  1973                           
  1974                           	psect	text14
  1975   002C94                     __ptext14:
  1976                           	callstack 0
  1977   002C94                     ___lbmod:
  1978                           	callstack 122
  1979                           
  1980                           ;incstack = 0
  1981                           ;___lbmod@dividend stored from wreg
  1982   002C94  6E18               	movwf	___lbmod@dividend^(0+1280),c
  1983   002C96  0E08               	movlw	8
  1984   002C98  6E19               	movwf	___lbmod@counter^(0+1280),c
  1985   002C9A  0E00               	movlw	0
  1986   002C9C  6E1A               	movwf	___lbmod@rem^(0+1280),c
  1987   002C9E                     l1535:
  1988   002C9E  90D8               	bcf	status,0,c
  1989   002CA0  3418               	rlcf	___lbmod@dividend^(0+1280),w,c
  1990   002CA2  341A               	rlcf	___lbmod@rem^(0+1280),w,c
  1991   002CA4  6E1A               	movwf	___lbmod@rem^(0+1280),c
  1992   002CA6  90D8               	bcf	status,0,c
  1993   002CA8  3618               	rlcf	___lbmod@dividend^(0+1280),f,c
  1994   002CAA  5017               	movf	___lbmod@divisor^(0+1280),w,c
  1995   002CAC  5C1A               	subwf	___lbmod@rem^(0+1280),w,c
  1996   002CAE  A0D8               	btfss	status,0,c
  1997   002CB0  D002               	goto	l1543
  1998   002CB2  5017               	movf	___lbmod@divisor^(0+1280),w,c
  1999   002CB4  5E1A               	subwf	___lbmod@rem^(0+1280),f,c
  2000   002CB6                     l1543:
  2001   002CB6  2E19               	decfsz	___lbmod@counter^(0+1280),f,c
  2002   002CB8  D7F2               	goto	l1535
  2003   002CBA  501A               	movf	___lbmod@rem^(0+1280),w,c
  2004   002CBC  0012               	return		;funcret
  2005   002CBE                     __end_of___lbmod:
  2006                           	callstack 0
  2007                           
  2008 ;; *************** function ___lbdiv *****************
  2009 ;; Defined at:
  2010 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\lbdiv.c"
  2011 ;; Parameters:    Size  Location     Type
  2012 ;;  dividend        1    wreg     unsigned char 
  2013 ;;  divisor         1   28[COMRAM] unsigned char 
  2014 ;; Auto vars:     Size  Location     Type
  2015 ;;  dividend        1   29[COMRAM] unsigned char 
  2016 ;;  quotient        1   31[COMRAM] unsigned char 
  2017 ;;  counter         1   30[COMRAM] unsigned char 
  2018 ;; Return value:  Size  Location     Type
  2019 ;;                  1    wreg      unsigned char 
  2020 ;; Registers used:
  2021 ;;		wreg, status,2, status,0
  2022 ;; Tracked objects:
  2023 ;;		On entry : 0/2
  2024 ;;		On exit  : 0/0
  2025 ;;		Unchanged: 0/0
  2026 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2027 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2028 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2029 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2030 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2031 ;;Total ram usage:        4 bytes
  2032 ;; Hardware stack levels used: 1
  2033 ;; Hardware stack levels required when called: 3
  2034 ;; This function calls:
  2035 ;;		Nothing
  2036 ;; This function is called by:
  2037 ;;		_U1_ESCRIBE_VAR_CHAR
  2038 ;; This function uses a non-reentrant model
  2039 ;;
  2040                           
  2041                           	psect	text15
  2042   002ACE                     __ptext15:
  2043                           	callstack 0
  2044   002ACE                     ___lbdiv:
  2045                           	callstack 122
  2046                           
  2047                           ;incstack = 0
  2048                           ;___lbdiv@dividend stored from wreg
  2049   002ACE  6E1E               	movwf	___lbdiv@dividend^(0+1280),c
  2050   002AD0  0E00               	movlw	0
  2051   002AD2  6E20               	movwf	___lbdiv@quotient^(0+1280),c
  2052   002AD4  501D               	movf	___lbdiv@divisor^(0+1280),w,c
  2053   002AD6  B4D8               	btfsc	status,2,c
  2054   002AD8  D015               	goto	l1529
  2055   002ADA  0E01               	movlw	1
  2056   002ADC  6E1F               	movwf	___lbdiv@counter^(0+1280),c
  2057   002ADE  D003               	goto	l1517
  2058   002AE0                     l1513:
  2059   002AE0  90D8               	bcf	status,0,c
  2060   002AE2  361D               	rlcf	___lbdiv@divisor^(0+1280),f,c
  2061   002AE4  2A1F               	incf	___lbdiv@counter^(0+1280),f,c
  2062   002AE6                     l1517:
  2063   002AE6  AE1D               	btfss	___lbdiv@divisor^(0+1280),7,c
  2064   002AE8  D7FB               	goto	l1513
  2065   002AEA                     u440:
  2066   002AEA  90D8               	bcf	status,0,c
  2067   002AEC  3620               	rlcf	___lbdiv@quotient^(0+1280),f,c
  2068   002AEE  501D               	movf	___lbdiv@divisor^(0+1280),w,c
  2069   002AF0  5C1E               	subwf	___lbdiv@dividend^(0+1280),w,c
  2070   002AF2  A0D8               	btfss	status,0,c
  2071   002AF4  D003               	goto	l1525
  2072   002AF6  501D               	movf	___lbdiv@divisor^(0+1280),w,c
  2073   002AF8  5E1E               	subwf	___lbdiv@dividend^(0+1280),f,c
  2074   002AFA  8020               	bsf	___lbdiv@quotient^(0+1280),0,c
  2075   002AFC                     l1525:
  2076   002AFC  90D8               	bcf	status,0,c
  2077   002AFE  321D               	rrcf	___lbdiv@divisor^(0+1280),f,c
  2078   002B00  2E1F               	decfsz	___lbdiv@counter^(0+1280),f,c
  2079   002B02  D7F3               	goto	u440
  2080   002B04                     l1529:
  2081   002B04  5020               	movf	___lbdiv@quotient^(0+1280),w,c
  2082   002B06  0012               	return		;funcret
  2083   002B08                     __end_of___lbdiv:
  2084                           	callstack 0
  2085                           
  2086 ;; *************** function ___awmod *****************
  2087 ;; Defined at:
  2088 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awmod.c"
  2089 ;; Parameters:    Size  Location     Type
  2090 ;;  dividend        2   22[COMRAM] int 
  2091 ;;  divisor         2   24[COMRAM] int 
  2092 ;; Auto vars:     Size  Location     Type
  2093 ;;  sign            1   27[COMRAM] unsigned char 
  2094 ;;  counter         1   26[COMRAM] unsigned char 
  2095 ;; Return value:  Size  Location     Type
  2096 ;;                  2   22[COMRAM] int 
  2097 ;; Registers used:
  2098 ;;		wreg, status,2, status,0
  2099 ;; Tracked objects:
  2100 ;;		On entry : 0/2
  2101 ;;		On exit  : 0/0
  2102 ;;		Unchanged: 0/0
  2103 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2104 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2105 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2106 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2107 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2108 ;;Total ram usage:        6 bytes
  2109 ;; Hardware stack levels used: 1
  2110 ;; Hardware stack levels required when called: 3
  2111 ;; This function calls:
  2112 ;;		Nothing
  2113 ;; This function is called by:
  2114 ;;		_U1_ESCRIBE_VAR_CHAR
  2115 ;; This function uses a non-reentrant model
  2116 ;;
  2117                           
  2118                           	psect	text16
  2119   002762                     __ptext16:
  2120                           	callstack 0
  2121   002762                     ___awmod:
  2122                           	callstack 122
  2123                           
  2124                           ;incstack = 0
  2125   002762  0E00               	movlw	0
  2126   002764  6E1C               	movwf	___awmod@sign^(0+1280),c
  2127   002766  AE18               	btfss	(___awmod@dividend+1)^(0+1280),7,c
  2128   002768  D006               	goto	l1479
  2129   00276A  6C17               	negf	___awmod@dividend^(0+1280),c
  2130   00276C  1E18               	comf	(___awmod@dividend+1)^(0+1280),f,c
  2131   00276E  B0D8               	btfsc	status,0,c
  2132   002770  2A18               	incf	(___awmod@dividend+1)^(0+1280),f,c
  2133   002772  0E01               	movlw	1
  2134   002774  6E1C               	movwf	___awmod@sign^(0+1280),c
  2135   002776                     l1479:
  2136   002776  AE1A               	btfss	(___awmod@divisor+1)^(0+1280),7,c
  2137   002778  D004               	goto	l1483
  2138   00277A  6C19               	negf	___awmod@divisor^(0+1280),c
  2139   00277C  1E1A               	comf	(___awmod@divisor+1)^(0+1280),f,c
  2140   00277E  B0D8               	btfsc	status,0,c
  2141   002780  2A1A               	incf	(___awmod@divisor+1)^(0+1280),f,c
  2142   002782                     l1483:
  2143   002782  5019               	movf	___awmod@divisor^(0+1280),w,c
  2144   002784  101A               	iorwf	(___awmod@divisor+1)^(0+1280),w,c
  2145   002786  B4D8               	btfsc	status,2,c
  2146   002788  D018               	goto	l1499
  2147   00278A  0E01               	movlw	1
  2148   00278C  6E1B               	movwf	___awmod@counter^(0+1280),c
  2149   00278E  D004               	goto	l1489
  2150   002790                     l1487:
  2151   002790  90D8               	bcf	status,0,c
  2152   002792  3619               	rlcf	___awmod@divisor^(0+1280),f,c
  2153   002794  361A               	rlcf	(___awmod@divisor+1)^(0+1280),f,c
  2154   002796  2A1B               	incf	___awmod@counter^(0+1280),f,c
  2155   002798                     l1489:
  2156   002798  AE1A               	btfss	(___awmod@divisor+1)^(0+1280),7,c
  2157   00279A  D7FA               	goto	l1487
  2158   00279C                     u400:
  2159   00279C  5019               	movf	___awmod@divisor^(0+1280),w,c
  2160   00279E  5C17               	subwf	___awmod@dividend^(0+1280),w,c
  2161   0027A0  501A               	movf	(___awmod@divisor+1)^(0+1280),w,c
  2162   0027A2  5818               	subwfb	(___awmod@dividend+1)^(0+1280),w,c
  2163   0027A4  A0D8               	btfss	status,0,c
  2164   0027A6  D004               	goto	l1495
  2165   0027A8  5019               	movf	___awmod@divisor^(0+1280),w,c
  2166   0027AA  5E17               	subwf	___awmod@dividend^(0+1280),f,c
  2167   0027AC  501A               	movf	(___awmod@divisor+1)^(0+1280),w,c
  2168   0027AE  5A18               	subwfb	(___awmod@dividend+1)^(0+1280),f,c
  2169   0027B0                     l1495:
  2170   0027B0  90D8               	bcf	status,0,c
  2171   0027B2  321A               	rrcf	(___awmod@divisor+1)^(0+1280),f,c
  2172   0027B4  3219               	rrcf	___awmod@divisor^(0+1280),f,c
  2173   0027B6  2E1B               	decfsz	___awmod@counter^(0+1280),f,c
  2174   0027B8  D7F1               	goto	u400
  2175   0027BA                     l1499:
  2176   0027BA  501C               	movf	___awmod@sign^(0+1280),w,c
  2177   0027BC  B4D8               	btfsc	status,2,c
  2178   0027BE  D004               	goto	l1503
  2179   0027C0  6C17               	negf	___awmod@dividend^(0+1280),c
  2180   0027C2  1E18               	comf	(___awmod@dividend+1)^(0+1280),f,c
  2181   0027C4  B0D8               	btfsc	status,0,c
  2182   0027C6  2A18               	incf	(___awmod@dividend+1)^(0+1280),f,c
  2183   0027C8                     l1503:
  2184   0027C8  C517  F517         	movff	___awmod@dividend,?___awmod
  2185   0027CC  C518  F518         	movff	___awmod@dividend+1,?___awmod+1
  2186   0027D0  0012               	return		;funcret
  2187   0027D2                     __end_of___awmod:
  2188                           	callstack 0
  2189                           
  2190 ;; *************** function _U1_DATA_SEND *****************
  2191 ;; Defined at:
  2192 ;;		line 15 in file "U1SERIAL.c"
  2193 ;; Parameters:    Size  Location     Type
  2194 ;;  dato            1    wreg     unsigned char 
  2195 ;; Auto vars:     Size  Location     Type
  2196 ;;  dato            1   22[COMRAM] unsigned char 
  2197 ;; Return value:  Size  Location     Type
  2198 ;;                  1    wreg      void 
  2199 ;; Registers used:
  2200 ;;		wreg
  2201 ;; Tracked objects:
  2202 ;;		On entry : 0/2
  2203 ;;		On exit  : 3F/2
  2204 ;;		Unchanged: 0/0
  2205 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2206 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2207 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2208 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2209 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2210 ;;Total ram usage:        1 bytes
  2211 ;; Hardware stack levels used: 1
  2212 ;; Hardware stack levels required when called: 3
  2213 ;; This function calls:
  2214 ;;		Nothing
  2215 ;; This function is called by:
  2216 ;;		_U1_ESCRIBE_VAR_CHAR
  2217 ;;		_U1_ESCRIBE_VAR_INT
  2218 ;; This function uses a non-reentrant model
  2219 ;;
  2220                           
  2221                           	psect	text17
  2222   002D3C                     __ptext17:
  2223                           	callstack 0
  2224   002D3C                     _U1_DATA_SEND:
  2225                           	callstack 122
  2226                           
  2227                           ;incstack = 0
  2228                           ;U1_DATA_SEND@dato stored from wreg
  2229   002D3C  6E17               	movwf	U1_DATA_SEND@dato^(0+1280),c
  2230                           
  2231                           ;U1SERIAL.c: 16:     U1TXB = dato;
  2232   002D3E  C517  F2A3         	movff	U1_DATA_SEND@dato,675	;volatile
  2233   002D42                     l232:
  2234   002D42  0102               	movlb	2	; () banked
  2235   002D44  BFB2               	btfsc	178,7,b	;volatile
  2236   002D46  0012               	return	
  2237   002D48  D7FC               	goto	l232
  2238   002D4A                     __end_of_U1_DATA_SEND:
  2239                           	callstack 0
  2240                           
  2241 ;; *************** function _POS_CURSOR *****************
  2242 ;; Defined at:
  2243 ;;		line 5 in file "LCD.c"
  2244 ;; Parameters:    Size  Location     Type
  2245 ;;  fila            1    wreg     unsigned char 
  2246 ;;  columna         1   25[COMRAM] unsigned char 
  2247 ;; Auto vars:     Size  Location     Type
  2248 ;;  fila            1   26[COMRAM] unsigned char 
  2249 ;; Return value:  Size  Location     Type
  2250 ;;                  1    wreg      void 
  2251 ;; Registers used:
  2252 ;;		wreg, status,2, status,0, cstack
  2253 ;; Tracked objects:
  2254 ;;		On entry : 3F/2
  2255 ;;		On exit  : 0/0
  2256 ;;		Unchanged: 0/0
  2257 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2258 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2259 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2260 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2261 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2262 ;;Total ram usage:        2 bytes
  2263 ;; Hardware stack levels used: 1
  2264 ;; Hardware stack levels required when called: 5
  2265 ;; This function calls:
  2266 ;;		_ENVIA_LCD_CMD
  2267 ;; This function is called by:
  2268 ;;		_main
  2269 ;; This function uses a non-reentrant model
  2270 ;;
  2271                           
  2272                           	psect	text18
  2273   002990                     __ptext18:
  2274                           	callstack 0
  2275   002990                     _POS_CURSOR:
  2276                           	callstack 121
  2277                           
  2278                           ; BSR set to: 2
  2279                           ;incstack = 0
  2280                           ;POS_CURSOR@fila stored from wreg
  2281   002990  6E1B               	movwf	POS_CURSOR@fila^(0+1280),c
  2282                           
  2283                           ;LCD.c: 5: void POS_CURSOR(unsigned char fila,unsigned char columna);LCD.c: 6: {;LCD.c: 
      +                          7:  if(fila == 1)
  2284   002992  041B               	decf	POS_CURSOR@fila^(0+1280),w,c
  2285   002994  A4D8               	btfss	status,2,c
  2286   002996  D005               	goto	l1601
  2287                           
  2288                           ;LCD.c: 8:  {;LCD.c: 9:   ENVIA_LCD_CMD(0x80+columna);
  2289   002998  501A               	movf	POS_CURSOR@columna^(0+1280),w,c
  2290   00299A  0F80               	addlw	128
  2291   00299C  ECA0  F015         	call	_ENVIA_LCD_CMD
  2292                           
  2293                           ;LCD.c: 10:  }
  2294   0029A0  0012               	return	
  2295   0029A2                     l1601:
  2296   0029A2  0E02               	movlw	2
  2297   0029A4  181B               	xorwf	POS_CURSOR@fila^(0+1280),w,c
  2298   0029A6  A4D8               	btfss	status,2,c
  2299   0029A8  D005               	goto	l1605
  2300                           
  2301                           ;LCD.c: 12:  {;LCD.c: 13:   ENVIA_LCD_CMD(0xC0+columna);
  2302   0029AA  501A               	movf	POS_CURSOR@columna^(0+1280),w,c
  2303   0029AC  0FC0               	addlw	192
  2304   0029AE  ECA0  F015         	call	_ENVIA_LCD_CMD
  2305                           
  2306                           ;LCD.c: 14:  }
  2307   0029B2  0012               	return	
  2308   0029B4                     l1605:
  2309   0029B4  0E03               	movlw	3
  2310   0029B6  181B               	xorwf	POS_CURSOR@fila^(0+1280),w,c
  2311   0029B8  A4D8               	btfss	status,2,c
  2312   0029BA  D005               	goto	l1609
  2313                           
  2314                           ;LCD.c: 16:  {;LCD.c: 17:   ENVIA_LCD_CMD(0x94+columna);
  2315   0029BC  501A               	movf	POS_CURSOR@columna^(0+1280),w,c
  2316   0029BE  0F94               	addlw	148
  2317   0029C0  ECA0  F015         	call	_ENVIA_LCD_CMD
  2318                           
  2319                           ;LCD.c: 18:  }
  2320   0029C4  0012               	return	
  2321   0029C6                     l1609:
  2322   0029C6  0E04               	movlw	4
  2323   0029C8  181B               	xorwf	POS_CURSOR@fila^(0+1280),w,c
  2324   0029CA  A4D8               	btfss	status,2,c
  2325   0029CC  0012               	return	
  2326                           
  2327                           ;LCD.c: 20:  {;LCD.c: 21:   ENVIA_LCD_CMD(0xD4+columna);
  2328   0029CE  501A               	movf	POS_CURSOR@columna^(0+1280),w,c
  2329   0029D0  0FD4               	addlw	212
  2330   0029D2  ECA0  F015         	call	_ENVIA_LCD_CMD
  2331   0029D6  0012               	return	
  2332   0029D8                     __end_of_POS_CURSOR:
  2333                           	callstack 0
  2334                           
  2335 ;; *************** function _ENVIA_LCD_CMD *****************
  2336 ;; Defined at:
  2337 ;;		line 136 in file "LCD.c"
  2338 ;; Parameters:    Size  Location     Type
  2339 ;;  dato            1    wreg     unsigned char 
  2340 ;; Auto vars:     Size  Location     Type
  2341 ;;  dato            1   23[COMRAM] unsigned char 
  2342 ;;  aux             1   24[COMRAM] unsigned char 
  2343 ;; Return value:  Size  Location     Type
  2344 ;;                  1    wreg      void 
  2345 ;; Registers used:
  2346 ;;		wreg, status,2, status,0, cstack
  2347 ;; Tracked objects:
  2348 ;;		On entry : 0/4
  2349 ;;		On exit  : 0/0
  2350 ;;		Unchanged: 0/0
  2351 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2352 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2353 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2354 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2355 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2356 ;;Total ram usage:        2 bytes
  2357 ;; Hardware stack levels used: 1
  2358 ;; Hardware stack levels required when called: 4
  2359 ;; This function calls:
  2360 ;;		_ENVIA_NIBBLE
  2361 ;;		_LEER_LCD
  2362 ;; This function is called by:
  2363 ;;		_POS_CURSOR
  2364 ;;		_CURSOR_HOME
  2365 ;;		_CURSOR_ONOFF
  2366 ;;		_BORRAR_LCD
  2367 ;;		_LCD_CONFIG
  2368 ;; This function uses a non-reentrant model
  2369 ;;
  2370                           
  2371                           	psect	text19
  2372   002B40                     __ptext19:
  2373                           	callstack 0
  2374   002B40                     _ENVIA_LCD_CMD:
  2375                           	callstack 119
  2376                           
  2377                           ;incstack = 0
  2378                           ;ENVIA_LCD_CMD@dato stored from wreg
  2379   002B40  6E18               	movwf	ENVIA_LCD_CMD@dato^(0+1280),c
  2380                           
  2381                           ;LCD.c: 136: void ENVIA_LCD_CMD(unsigned char dato);LCD.c: 137: {;LCD.c: 138:  unsigned 
      +                          char aux;;LCD.c: 139:  LATDbits.LATD0 = 0;
  2382   002B42  90C1               	bcf	193,0,c	;volatile
  2383                           
  2384                           ;LCD.c: 140:  LEER_LCD();
  2385   002B44  EC1F  F014         	call	_LEER_LCD	;wreg free
  2386                           
  2387                           ;LCD.c: 141:  TRISD = 0b00000000;
  2388   002B48  0E00               	movlw	0
  2389   002B4A  6EC9               	movwf	201,c	;volatile
  2390                           
  2391                           ;LCD.c: 142:     _delay((unsigned long)((100)*(32000000UL/4000000.0)));
  2392   002B4C  0EA0               	movlw	160
  2393   002B4E                     u687:
  2394   002B4E  D000               	nop2	
  2395   002B50  2EE8               	decfsz	wreg,f,c
  2396   002B52  D7FD               	bra	u687
  2397                           
  2398                           ;LCD.c: 143:     LATDbits.LATD1 = 0;
  2399   002B54  92C1               	bcf	193,1,c	;volatile
  2400                           
  2401                           ;LCD.c: 144:  LATDbits.LATD2 = 0;
  2402   002B56  94C1               	bcf	193,2,c	;volatile
  2403                           
  2404                           ;LCD.c: 145:  LATDbits.LATD0 = 0;
  2405   002B58  90C1               	bcf	193,0,c	;volatile
  2406                           
  2407                           ;LCD.c: 146:  aux = dato & 0xF0;
  2408   002B5A  5018               	movf	ENVIA_LCD_CMD@dato^(0+1280),w,c
  2409   002B5C  0BF0               	andlw	240
  2410   002B5E  6E19               	movwf	ENVIA_LCD_CMD@aux^(0+1280),c
  2411                           
  2412                           ;LCD.c: 147:  ENVIA_NIBBLE(aux);
  2413   002B60  5019               	movf	ENVIA_LCD_CMD@aux^(0+1280),w,c
  2414   002B62  EC7C  F016         	call	_ENVIA_NIBBLE
  2415                           
  2416                           ;LCD.c: 148:  aux = dato<<4;
  2417   002B66  3818               	swapf	ENVIA_LCD_CMD@dato^(0+1280),w,c
  2418   002B68  0BF0               	andlw	240
  2419   002B6A  6E19               	movwf	ENVIA_LCD_CMD@aux^(0+1280),c
  2420                           
  2421                           ;LCD.c: 149:  ENVIA_NIBBLE(aux);
  2422   002B6C  5019               	movf	ENVIA_LCD_CMD@aux^(0+1280),w,c
  2423   002B6E  EC7C  F016         	call	_ENVIA_NIBBLE
  2424   002B72  0012               	return		;funcret
  2425   002B74                     __end_of_ENVIA_LCD_CMD:
  2426                           	callstack 0
  2427                           
  2428 ;; *************** function _ESCRIBE_MENSAJE2 *****************
  2429 ;; Defined at:
  2430 ;;		line 77 in file "LCD.c"
  2431 ;; Parameters:    Size  Location     Type
  2432 ;;  cadena          1   25[COMRAM] PTR const unsigned char 
  2433 ;;		 -> STR_1(16), 
  2434 ;; Auto vars:     Size  Location     Type
  2435 ;;  i               1   28[COMRAM] unsigned char 
  2436 ;;  tam             1   27[COMRAM] unsigned char 
  2437 ;; Return value:  Size  Location     Type
  2438 ;;                  1    wreg      void 
  2439 ;; Registers used:
  2440 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2441 ;; Tracked objects:
  2442 ;;		On entry : 0/0
  2443 ;;		On exit  : 0/0
  2444 ;;		Unchanged: 0/0
  2445 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2446 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2447 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2448 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2449 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2450 ;;Total ram usage:        4 bytes
  2451 ;; Hardware stack levels used: 1
  2452 ;; Hardware stack levels required when called: 5
  2453 ;; This function calls:
  2454 ;;		_ENVIA_CHAR
  2455 ;;		_strlen
  2456 ;; This function is called by:
  2457 ;;		_main
  2458 ;; This function uses a non-reentrant model
  2459 ;;
  2460                           
  2461                           	psect	text20
  2462   002B08                     __ptext20:
  2463                           	callstack 0
  2464   002B08                     _ESCRIBE_MENSAJE2:
  2465                           	callstack 121
  2466                           
  2467                           ;LCD.c: 77: void ESCRIBE_MENSAJE2(const char *cadena);LCD.c: 78: {;LCD.c: 79:     unsign
      +                          ed char tam;;LCD.c: 80:     tam = strlen(cadena);
  2468                           
  2469                           ;incstack = 0
  2470   002B08  C51A  F517         	movff	ESCRIBE_MENSAJE2@cadena,strlen@s
  2471   002B0C  EC1E  F016         	call	_strlen	;wreg free
  2472   002B10  5017               	movf	?_strlen^(0+1280),w,c
  2473   002B12  6E1C               	movwf	ESCRIBE_MENSAJE2@tam^(0+1280),c
  2474                           
  2475                           ;LCD.c: 82:  for(i = 0; i<tam; i++)
  2476   002B14  0E00               	movlw	0
  2477   002B16  6E1D               	movwf	ESCRIBE_MENSAJE2@i^(0+1280),c
  2478   002B18  D00E               	goto	l1623
  2479   002B1A                     l1619:
  2480                           
  2481                           ;LCD.c: 83:  {;LCD.c: 84:   ENVIA_CHAR(cadena[i]);
  2482   002B1A  501A               	movf	ESCRIBE_MENSAJE2@cadena^(0+1280),w,c
  2483   002B1C  241D               	addwf	ESCRIBE_MENSAJE2@i^(0+1280),w,c
  2484   002B1E  6E1B               	movwf	??_ESCRIBE_MENSAJE2^(0+1280),c
  2485   002B20  C51B  F4F6         	movff	??_ESCRIBE_MENSAJE2,tblptrl
  2486   002B24                     	if	1	;There is more than 1 active tblptr byte
  2487   002B24  0E25               	movlw	high __smallconst
  2488   002B26  6EF7               	movwf	tblptrh,c
  2489   002B28                     	endif
  2490   002B28                     	if	0	;tblptru may be non-zero
  2491   002B28                     	endif
  2492   002B28                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2493   002B28  0E00               	movlw	low (__smallconst shr (0+16))
  2494   002B2A  6EF8               	movwf	tblptru,c
  2495   002B2C                     	endif
  2496   002B2C  0008               	tblrd		*
  2497   002B2E  50F5               	movf	tablat,w,c
  2498   002B30  ECBA  F015         	call	_ENVIA_CHAR
  2499                           
  2500                           ;LCD.c: 85:  }
  2501   002B34  2A1D               	incf	ESCRIBE_MENSAJE2@i^(0+1280),f,c
  2502   002B36                     l1623:
  2503   002B36  501C               	movf	ESCRIBE_MENSAJE2@tam^(0+1280),w,c
  2504   002B38  5C1D               	subwf	ESCRIBE_MENSAJE2@i^(0+1280),w,c
  2505   002B3A  B0D8               	btfsc	status,0,c
  2506   002B3C  0012               	return	
  2507   002B3E  D7ED               	goto	l1619
  2508   002B40                     __end_of_ESCRIBE_MENSAJE2:
  2509                           	callstack 0
  2510                           
  2511 ;; *************** function _strlen *****************
  2512 ;; Defined at:
  2513 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\strlen.c"
  2514 ;; Parameters:    Size  Location     Type
  2515 ;;  s               1   22[COMRAM] PTR const unsigned char 
  2516 ;;		 -> STR_6(23), STR_5(23), STR_4(12), STR_3(12), 
  2517 ;;		 -> STR_2(5), STR_1(16), 
  2518 ;; Auto vars:     Size  Location     Type
  2519 ;;  a               1   24[COMRAM] PTR const unsigned char 
  2520 ;;		 -> STR_6(23), STR_5(23), STR_4(12), STR_3(12), 
  2521 ;;		 -> STR_2(5), STR_1(16), 
  2522 ;; Return value:  Size  Location     Type
  2523 ;;                  2   22[COMRAM] unsigned int 
  2524 ;; Registers used:
  2525 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  2526 ;; Tracked objects:
  2527 ;;		On entry : 0/0
  2528 ;;		On exit  : 0/0
  2529 ;;		Unchanged: 0/0
  2530 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2531 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2532 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2533 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2534 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2535 ;;Total ram usage:        3 bytes
  2536 ;; Hardware stack levels used: 1
  2537 ;; Hardware stack levels required when called: 3
  2538 ;; This function calls:
  2539 ;;		Nothing
  2540 ;; This function is called by:
  2541 ;;		_ESCRIBE_MENSAJE2
  2542 ;;		_U1_STRING_SEND
  2543 ;; This function uses a non-reentrant model
  2544 ;;
  2545                           
  2546                           	psect	text21
  2547   002C3C                     __ptext21:
  2548                           	callstack 0
  2549   002C3C                     _strlen:
  2550                           	callstack 122
  2551                           
  2552                           ;incstack = 0
  2553   002C3C  C517  F519         	movff	strlen@s,strlen@a
  2554   002C40  D001               	goto	l1465
  2555   002C42                     l1463:
  2556   002C42  2A17               	incf	strlen@s^(0+1280),f,c
  2557   002C44                     l1465:
  2558   002C44  C517  F4F6         	movff	strlen@s,tblptrl
  2559   002C48                     	if	1	;There is more than 1 active tblptr byte
  2560   002C48  0E25               	movlw	high __smallconst
  2561   002C4A  6EF7               	movwf	tblptrh,c
  2562   002C4C                     	endif
  2563   002C4C                     	if	0	;tblptru may be non-zero
  2564   002C4C                     	endif
  2565   002C4C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2566   002C4C  0E00               	movlw	low (__smallconst shr (0+16))
  2567   002C4E  6EF8               	movwf	tblptru,c
  2568   002C50                     	endif
  2569   002C50  0008               	tblrd		*
  2570   002C52  50F5               	movf	tablat,w,c
  2571   002C54  0900               	iorlw	0
  2572   002C56  A4D8               	btfss	status,2,c
  2573   002C58  D7F4               	goto	l1463
  2574   002C5A  5019               	movf	strlen@a^(0+1280),w,c
  2575   002C5C  5C17               	subwf	strlen@s^(0+1280),w,c
  2576   002C5E  6E17               	movwf	?_strlen^(0+1280),c
  2577   002C60  6A18               	clrf	(?_strlen+1)^(0+1280),c
  2578   002C62  BE17               	btfsc	?_strlen^(0+1280),7,c
  2579   002C64  0618               	decf	(?_strlen+1)^(0+1280),f,c
  2580   002C66  0012               	return		;funcret
  2581   002C68                     __end_of_strlen:
  2582                           	callstack 0
  2583                           
  2584 ;; *************** function _ENVIA_CHAR *****************
  2585 ;; Defined at:
  2586 ;;		line 88 in file "LCD.c"
  2587 ;; Parameters:    Size  Location     Type
  2588 ;;  dato            1    wreg     unsigned char 
  2589 ;; Auto vars:     Size  Location     Type
  2590 ;;  dato            1   23[COMRAM] unsigned char 
  2591 ;;  aux             1   24[COMRAM] unsigned char 
  2592 ;; Return value:  Size  Location     Type
  2593 ;;                  1    wreg      void 
  2594 ;; Registers used:
  2595 ;;		wreg, status,2, status,0, cstack
  2596 ;; Tracked objects:
  2597 ;;		On entry : 0/0
  2598 ;;		On exit  : 0/0
  2599 ;;		Unchanged: 0/0
  2600 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2601 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2602 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2603 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2604 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2605 ;;Total ram usage:        2 bytes
  2606 ;; Hardware stack levels used: 1
  2607 ;; Hardware stack levels required when called: 4
  2608 ;; This function calls:
  2609 ;;		_ENVIA_NIBBLE
  2610 ;;		_LEER_LCD
  2611 ;; This function is called by:
  2612 ;;		_ESCRIBE_MENSAJE2
  2613 ;; This function uses a non-reentrant model
  2614 ;;
  2615                           
  2616                           	psect	text22
  2617   002B74                     __ptext22:
  2618                           	callstack 0
  2619   002B74                     _ENVIA_CHAR:
  2620                           	callstack 121
  2621                           
  2622                           ;incstack = 0
  2623                           ;ENVIA_CHAR@dato stored from wreg
  2624   002B74  6E18               	movwf	ENVIA_CHAR@dato^(0+1280),c
  2625                           
  2626                           ;LCD.c: 88: void ENVIA_CHAR(unsigned char dato);LCD.c: 89: {;LCD.c: 90:  unsigned char a
      +                          ux;;LCD.c: 91:  LATDbits.LATD0 = 1;
  2627   002B76  80C1               	bsf	193,0,c	;volatile
  2628                           
  2629                           ;LCD.c: 92:  LEER_LCD();
  2630   002B78  EC1F  F014         	call	_LEER_LCD	;wreg free
  2631                           
  2632                           ;LCD.c: 93:  TRISD = 0x00;
  2633   002B7C  0E00               	movlw	0
  2634   002B7E  6EC9               	movwf	201,c	;volatile
  2635                           
  2636                           ;LCD.c: 94:     _delay((unsigned long)((100)*(32000000UL/4000000.0)));
  2637   002B80  0EA0               	movlw	160
  2638   002B82                     u697:
  2639   002B82  D000               	nop2	
  2640   002B84  2EE8               	decfsz	wreg,f,c
  2641   002B86  D7FD               	bra	u697
  2642                           
  2643                           ;LCD.c: 95:  LATDbits.LATD1 = 0;
  2644   002B88  92C1               	bcf	193,1,c	;volatile
  2645                           
  2646                           ;LCD.c: 96:  LATDbits.LATD2 = 0;
  2647   002B8A  94C1               	bcf	193,2,c	;volatile
  2648                           
  2649                           ;LCD.c: 97:  LATDbits.LATD0 = 1;
  2650   002B8C  80C1               	bsf	193,0,c	;volatile
  2651                           
  2652                           ;LCD.c: 98:  aux = dato & 0xF0;
  2653   002B8E  5018               	movf	ENVIA_CHAR@dato^(0+1280),w,c
  2654   002B90  0BF0               	andlw	240
  2655   002B92  6E19               	movwf	ENVIA_CHAR@aux^(0+1280),c
  2656                           
  2657                           ;LCD.c: 99:  ENVIA_NIBBLE(aux);
  2658   002B94  5019               	movf	ENVIA_CHAR@aux^(0+1280),w,c
  2659   002B96  EC7C  F016         	call	_ENVIA_NIBBLE
  2660                           
  2661                           ;LCD.c: 100:  aux = dato << 4;
  2662   002B9A  3818               	swapf	ENVIA_CHAR@dato^(0+1280),w,c
  2663   002B9C  0BF0               	andlw	240
  2664   002B9E  6E19               	movwf	ENVIA_CHAR@aux^(0+1280),c
  2665                           
  2666                           ;LCD.c: 101:  ENVIA_NIBBLE(aux);
  2667   002BA0  5019               	movf	ENVIA_CHAR@aux^(0+1280),w,c
  2668   002BA2  EC7C  F016         	call	_ENVIA_NIBBLE
  2669   002BA6  0012               	return		;funcret
  2670   002BA8                     __end_of_ENVIA_CHAR:
  2671                           	callstack 0
  2672                           
  2673 ;; *************** function _LEER_LCD *****************
  2674 ;; Defined at:
  2675 ;;		line 152 in file "LCD.c"
  2676 ;; Parameters:    Size  Location     Type
  2677 ;;		None
  2678 ;; Auto vars:     Size  Location     Type
  2679 ;;  aux             1   22[COMRAM] unsigned char 
  2680 ;; Return value:  Size  Location     Type
  2681 ;;                  1    wreg      void 
  2682 ;; Registers used:
  2683 ;;		wreg, status,2, status,0
  2684 ;; Tracked objects:
  2685 ;;		On entry : 0/4
  2686 ;;		On exit  : 0/0
  2687 ;;		Unchanged: 0/0
  2688 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2689 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2690 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2691 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2692 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2693 ;;Total ram usage:        1 bytes
  2694 ;; Hardware stack levels used: 1
  2695 ;; Hardware stack levels required when called: 3
  2696 ;; This function calls:
  2697 ;;		Nothing
  2698 ;; This function is called by:
  2699 ;;		_ENVIA_CHAR
  2700 ;;		_ENVIA_LCD_CMD
  2701 ;; This function uses a non-reentrant model
  2702 ;;
  2703                           
  2704                           	psect	text23
  2705   00283E                     __ptext23:
  2706                           	callstack 0
  2707   00283E                     _LEER_LCD:
  2708                           	callstack 119
  2709                           
  2710                           ;LCD.c: 154:  unsigned char aux;;LCD.c: 155:  TRISD = 0xF8;
  2711                           
  2712                           ;incstack = 0
  2713   00283E  0EF8               	movlw	248
  2714   002840  6EC9               	movwf	201,c	;volatile
  2715                           
  2716                           ;LCD.c: 156:  LATDbits.LATD0 = 0;
  2717   002842  90C1               	bcf	193,0,c	;volatile
  2718                           
  2719                           ;LCD.c: 157:  LATDbits.LATD1 = 1;
  2720   002844  82C1               	bsf	193,1,c	;volatile
  2721                           
  2722                           ;LCD.c: 158:  LATDbits.LATD2 = 1;
  2723   002846  84C1               	bsf	193,2,c	;volatile
  2724                           
  2725                           ;LCD.c: 159:     _delay((unsigned long)((100)*(32000000UL/4000000.0)));
  2726   002848  0EA0               	movlw	160
  2727   00284A                     u707:
  2728   00284A  D000               	nop2	
  2729   00284C  2EE8               	decfsz	wreg,f,c
  2730   00284E  D7FD               	bra	u707
  2731                           
  2732                           ;LCD.c: 160:  aux = PORTD;
  2733   002850  C4D1 F517          	movff	1233,LEER_LCD@aux	;volatile
  2734                           
  2735                           ;LCD.c: 161:  LATDbits.LATD2 = 0;
  2736   002854  94C1               	bcf	193,2,c	;volatile
  2737                           
  2738                           ;LCD.c: 162:     _delay((unsigned long)((100)*(32000000UL/4000000.0)));
  2739   002856  0EA0               	movlw	160
  2740   002858                     u717:
  2741   002858  D000               	nop2	
  2742   00285A  2EE8               	decfsz	wreg,f,c
  2743   00285C  D7FD               	bra	u717
  2744                           
  2745                           ;LCD.c: 163:  LATDbits.LATD2 = 1;
  2746   00285E  84C1               	bsf	193,2,c	;volatile
  2747                           
  2748                           ;LCD.c: 164:     _delay((unsigned long)((100)*(32000000UL/4000000.0)));
  2749   002860  0EA0               	movlw	160
  2750   002862                     u727:
  2751   002862  D000               	nop2	
  2752   002864  2EE8               	decfsz	wreg,f,c
  2753   002866  D7FD               	bra	u727
  2754   002868                     l973:
  2755                           
  2756                           ;LCD.c: 165:  LATDbits.LATD2 = 0;
  2757   002868  94C1               	bcf	193,2,c	;volatile
  2758                           
  2759                           ;LCD.c: 166:  aux = aux & 0x80;
  2760   00286A  5017               	movf	LEER_LCD@aux^(0+1280),w,c
  2761   00286C  0B80               	andlw	128
  2762   00286E  6E17               	movwf	LEER_LCD@aux^(0+1280),c
  2763                           
  2764                           ;LCD.c: 167:  while(aux == 0x80)
  2765   002870  D012               	goto	l989
  2766   002872                     l170:
  2767                           
  2768                           ;LCD.c: 168:         {;LCD.c: 169:             LATDbits.LATD2 = 1;
  2769   002872  84C1               	bsf	193,2,c	;volatile
  2770                           
  2771                           ;LCD.c: 170:             _delay((unsigned long)((100)*(32000000UL/4000000.0)));
  2772   002874  0EA0               	movlw	160
  2773   002876                     u737:
  2774   002876  D000               	nop2	
  2775   002878  2EE8               	decfsz	wreg,f,c
  2776   00287A  D7FD               	bra	u737
  2777                           
  2778                           ;LCD.c: 171:             aux = PORTD;
  2779   00287C  C4D1 F517          	movff	1233,LEER_LCD@aux	;volatile
  2780                           
  2781                           ;LCD.c: 172:             LATDbits.LATD2 = 0;
  2782   002880  94C1               	bcf	193,2,c	;volatile
  2783                           
  2784                           ;LCD.c: 173:             _delay((unsigned long)((100)*(32000000UL/4000000.0)));
  2785   002882  0EA0               	movlw	160
  2786   002884                     u747:
  2787   002884  D000               	nop2	
  2788   002886  2EE8               	decfsz	wreg,f,c
  2789   002888  D7FD               	bra	u747
  2790                           
  2791                           ;LCD.c: 174:             LATDbits.LATD2 = 1;
  2792   00288A  84C1               	bsf	193,2,c	;volatile
  2793                           
  2794                           ;LCD.c: 175:             _delay((unsigned long)((100)*(32000000UL/4000000.0)));
  2795   00288C  0EA0               	movlw	160
  2796   00288E                     u757:
  2797   00288E  D000               	nop2	
  2798   002890  2EE8               	decfsz	wreg,f,c
  2799   002892  D7FD               	bra	u757
  2800   002894  D7E9               	goto	l973
  2801   002896                     l989:
  2802                           
  2803                           ;LCD.c: 167:  while(aux == 0x80)
  2804   002896  0E80               	movlw	128
  2805   002898  1817               	xorwf	LEER_LCD@aux^(0+1280),w,c
  2806   00289A  A4D8               	btfss	status,2,c
  2807   00289C  0012               	return	
  2808   00289E  D7E9               	goto	l170
  2809   0028A0                     __end_of_LEER_LCD:
  2810                           	callstack 0
  2811                           
  2812 ;; *************** function _ENVIA_NIBBLE *****************
  2813 ;; Defined at:
  2814 ;;		line 126 in file "LCD.c"
  2815 ;; Parameters:    Size  Location     Type
  2816 ;;  dato            1    wreg     unsigned char 
  2817 ;; Auto vars:     Size  Location     Type
  2818 ;;  dato            1   22[COMRAM] unsigned char 
  2819 ;; Return value:  Size  Location     Type
  2820 ;;                  1    wreg      void 
  2821 ;; Registers used:
  2822 ;;		wreg, status,2, status,0
  2823 ;; Tracked objects:
  2824 ;;		On entry : 0/4
  2825 ;;		On exit  : 0/0
  2826 ;;		Unchanged: 0/0
  2827 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2828 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2829 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2830 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2831 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2832 ;;Total ram usage:        1 bytes
  2833 ;; Hardware stack levels used: 1
  2834 ;; Hardware stack levels required when called: 3
  2835 ;; This function calls:
  2836 ;;		Nothing
  2837 ;; This function is called by:
  2838 ;;		_ENVIA_CHAR
  2839 ;;		_LCD_CONFIG
  2840 ;;		_ENVIA_LCD_CMD
  2841 ;; This function uses a non-reentrant model
  2842 ;;
  2843                           
  2844                           	psect	text24
  2845   002CF8                     __ptext24:
  2846                           	callstack 0
  2847   002CF8                     _ENVIA_NIBBLE:
  2848                           	callstack 120
  2849                           
  2850                           ;incstack = 0
  2851                           ;ENVIA_NIBBLE@dato stored from wreg
  2852   002CF8  6E17               	movwf	ENVIA_NIBBLE@dato^(0+1280),c
  2853                           
  2854                           ;LCD.c: 126: void ENVIA_NIBBLE(unsigned char dato);LCD.c: 127: {;LCD.c: 128:  LATD &= 0x
      +                          0F;
  2855   002CFA  0E0F               	movlw	15
  2856   002CFC  16C1               	andwf	193,f,c	;volatile
  2857                           
  2858                           ;LCD.c: 129:  dato &= 0xF0;
  2859   002CFE  0EF0               	movlw	240
  2860   002D00  1617               	andwf	ENVIA_NIBBLE@dato^(0+1280),f,c
  2861                           
  2862                           ;LCD.c: 130:  LATD|= dato;
  2863   002D02  5017               	movf	ENVIA_NIBBLE@dato^(0+1280),w,c	;volatile
  2864   002D04  12C1               	iorwf	193,f,c	;volatile
  2865                           
  2866                           ;LCD.c: 131:  LATDbits.LATD2 = 1;
  2867   002D06  84C1               	bsf	193,2,c	;volatile
  2868                           
  2869                           ;LCD.c: 132:     _delay((unsigned long)((100)*(32000000UL/4000000.0)));
  2870   002D08  0EA0               	movlw	160
  2871   002D0A                     u767:
  2872   002D0A  D000               	nop2	
  2873   002D0C  2EE8               	decfsz	wreg,f,c
  2874   002D0E  D7FD               	bra	u767
  2875                           
  2876                           ;LCD.c: 133:  LATDbits.LATD2 = 0;
  2877   002D10  94C1               	bcf	193,2,c	;volatile
  2878   002D12  0012               	return		;funcret
  2879   002D14                     __end_of_ENVIA_NIBBLE:
  2880                           	callstack 0
  2881                           
  2882 ;; *************** function _INT0_ISR *****************
  2883 ;; Defined at:
  2884 ;;		line 64 in file "maincode.c"
  2885 ;; Parameters:    Size  Location     Type
  2886 ;;		None
  2887 ;; Auto vars:     Size  Location     Type
  2888 ;;		None
  2889 ;; Return value:  Size  Location     Type
  2890 ;;                  1    wreg      void 
  2891 ;; Registers used:
  2892 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2893 ;; Tracked objects:
  2894 ;;		On entry : 0/0
  2895 ;;		On exit  : 3F/2
  2896 ;;		Unchanged: 0/0
  2897 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2898 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2899 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2900 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2901 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2902 ;;Total ram usage:        4 bytes
  2903 ;; Hardware stack levels used: 1
  2904 ;; Hardware stack levels required when called: 2
  2905 ;; This function calls:
  2906 ;;		i2_U1_NEWLINE
  2907 ;;		i2_U1_STRING_SEND
  2908 ;; This function is called by:
  2909 ;;		Interrupt level 2
  2910 ;; This function uses a non-reentrant model
  2911 ;;
  2912                           
  2913                           	psect	text25
  2914   002BDC                     __ptext25:
  2915                           	callstack 0
  2916   002BDC                     _INT0_ISR:
  2917                           	callstack 119
  2918                           
  2919                           ;incstack = 0
  2920   002BDC  C4F6 F508          	movff	tblptrl,??_INT0_ISR
  2921   002BE0  C4F7 F509          	movff	tblptrh,??_INT0_ISR+1
  2922   002BE4  C4F8 F50A          	movff	tblptru,??_INT0_ISR+2
  2923   002BE8  C4F5 F50B          	movff	tablat,??_INT0_ISR+3
  2924                           
  2925                           ;maincode.c: 65:     PIR1bits.INT0IF = 0;
  2926   002BEC  90AF               	bcf	175,0,c	;volatile
  2927                           
  2928                           ;maincode.c: 66:     U1_STRING_SEND("Se pulso boton en INT0");
  2929   002BEE  0E01               	movlw	low STR_5
  2930   002BF0  6E0F               	movwf	i2U1_STRING_SEND@cadena^(0+1280),c
  2931   002BF2  EC49  F015         	call	i2_U1_STRING_SEND	;wreg free
  2932                           
  2933                           ;maincode.c: 67:     U1_NEWLINE();
  2934   002BF6  EC94  F016         	call	i2_U1_NEWLINE	;wreg free
  2935                           
  2936                           ; BSR set to: 2
  2937   002BFA  C50B  F4F5         	movff	??_INT0_ISR+3,tablat
  2938   002BFE  C50A  F4F8         	movff	??_INT0_ISR+2,tblptru
  2939   002C02  C509  F4F7         	movff	??_INT0_ISR+1,tblptrh
  2940   002C06  C508  F4F6         	movff	??_INT0_ISR,tblptrl
  2941   002C0A  0011               	retfie		f
  2942   002C0C                     __end_of_INT0_ISR:
  2943                           	callstack 0
  2944                           
  2945 ;; *************** function i2_U1_STRING_SEND *****************
  2946 ;; Defined at:
  2947 ;;		line 20 in file "U1SERIAL.c"
  2948 ;; Parameters:    Size  Location     Type
  2949 ;;  cadena          1   14[COMRAM] PTR const unsigned char 
  2950 ;;		 -> STR_6(23), STR_5(23), STR_4(12), STR_3(12), 
  2951 ;;		 -> STR_2(5), 
  2952 ;; Auto vars:     Size  Location     Type
  2953 ;;  i               1   17[COMRAM] unsigned char 
  2954 ;;  tam             1   16[COMRAM] unsigned char 
  2955 ;; Return value:  Size  Location     Type
  2956 ;;                  1    wreg      void 
  2957 ;; Registers used:
  2958 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2959 ;; Tracked objects:
  2960 ;;		On entry : 0/0
  2961 ;;		On exit  : 0/0
  2962 ;;		Unchanged: 0/0
  2963 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2964 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2965 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2966 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2967 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2968 ;;Total ram usage:        4 bytes
  2969 ;; Hardware stack levels used: 1
  2970 ;; Hardware stack levels required when called: 1
  2971 ;; This function calls:
  2972 ;;		i2_strlen
  2973 ;; This function is called by:
  2974 ;;		_INT0_ISR
  2975 ;;		_INT1_ISR
  2976 ;; This function uses a non-reentrant model
  2977 ;;
  2978                           
  2979                           	psect	text26
  2980   002A92                     __ptext26:
  2981                           	callstack 0
  2982   002A92                     i2_U1_STRING_SEND:
  2983                           	callstack 119
  2984                           
  2985                           ;U1SERIAL.c: 24:     tam = strlen(cadena);
  2986                           
  2987                           ; BSR set to: 2
  2988                           ;incstack = 0
  2989   002A92  C50F  F50C         	movff	i2U1_STRING_SEND@cadena,i2strlen@s
  2990   002A96  EC34  F016         	call	i2_strlen	;wreg free
  2991   002A9A  500C               	movf	?i2_strlen^(0+1280),w,c
  2992   002A9C  6E11               	movwf	i2U1_STRING_SEND@tam^(0+1280),c
  2993                           
  2994                           ;U1SERIAL.c: 25:  for(i = 0; i<tam; i++)
  2995   002A9E  0E00               	movlw	0
  2996   002AA0  6E12               	movwf	i2U1_STRING_SEND@i^(0+1280),c
  2997   002AA2  D010               	goto	i2l1683
  2998   002AA4                     i2l1679:
  2999                           
  3000                           ;U1SERIAL.c: 26:  {;U1SERIAL.c: 27:         U1TXB = cadena[i];
  3001   002AA4  500F               	movf	i2U1_STRING_SEND@cadena^(0+1280),w,c
  3002   002AA6  2412               	addwf	i2U1_STRING_SEND@i^(0+1280),w,c
  3003   002AA8  6E10               	movwf	??i2_U1_STRING_SEND^(0+1280),c
  3004   002AAA  C510  F4F6         	movff	??i2_U1_STRING_SEND,tblptrl
  3005   002AAE                     	if	1	;There is more than 1 active tblptr byte
  3006   002AAE  0E25               	movlw	high __smallconst
  3007   002AB0  6EF7               	movwf	tblptrh,c
  3008   002AB2                     	endif
  3009   002AB2                     	if	0	;tblptru may be non-zero
  3010   002AB2                     	endif
  3011   002AB2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3012   002AB2  0E00               	movlw	low (__smallconst shr (0+16))
  3013   002AB4  6EF8               	movwf	tblptru,c
  3014   002AB6                     	endif
  3015   002AB6  0008               	tblrd		*
  3016   002AB8  C4F5 F2A3          	movff	tablat,675	;volatile
  3017   002ABC                     i2l240:
  3018   002ABC  0102               	movlb	2	; () banked
  3019   002ABE  AFB2               	btfss	178,7,b	;volatile
  3020   002AC0  D7FD               	goto	i2l240
  3021                           
  3022                           ; BSR set to: 2
  3023                           ;U1SERIAL.c: 29:  }
  3024   002AC2  2A12               	incf	i2U1_STRING_SEND@i^(0+1280),f,c
  3025   002AC4                     i2l1683:
  3026   002AC4  5011               	movf	i2U1_STRING_SEND@tam^(0+1280),w,c
  3027   002AC6  5C12               	subwf	i2U1_STRING_SEND@i^(0+1280),w,c
  3028   002AC8  B0D8               	btfsc	status,0,c
  3029   002ACA  0012               	return	
  3030   002ACC  D7EB               	goto	i2l1679
  3031   002ACE                     __end_ofi2_U1_STRING_SEND:
  3032                           	callstack 0
  3033                           
  3034 ;; *************** function i2_strlen *****************
  3035 ;; Defined at:
  3036 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\strlen.c"
  3037 ;; Parameters:    Size  Location     Type
  3038 ;;  s               1   11[COMRAM] PTR const unsigned char 
  3039 ;;		 -> STR_6(23), STR_5(23), STR_4(12), STR_3(12), 
  3040 ;;		 -> STR_2(5), STR_1(16), 
  3041 ;; Auto vars:     Size  Location     Type
  3042 ;;  a               1   13[COMRAM] PTR const unsigned char 
  3043 ;;		 -> STR_6(23), STR_5(23), STR_4(12), STR_3(12), 
  3044 ;;		 -> STR_2(5), STR_1(16), 
  3045 ;; Return value:  Size  Location     Type
  3046 ;;                  2   11[COMRAM] unsigned int 
  3047 ;; Registers used:
  3048 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  3049 ;; Tracked objects:
  3050 ;;		On entry : 0/0
  3051 ;;		On exit  : 0/0
  3052 ;;		Unchanged: 0/0
  3053 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  3054 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3055 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3056 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3057 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3058 ;;Total ram usage:        3 bytes
  3059 ;; Hardware stack levels used: 1
  3060 ;; This function calls:
  3061 ;;		Nothing
  3062 ;; This function is called by:
  3063 ;;		i2_U1_STRING_SEND
  3064 ;; This function uses a non-reentrant model
  3065 ;;
  3066                           
  3067                           	psect	text27
  3068   002C68                     __ptext27:
  3069                           	callstack 0
  3070   002C68                     i2_strlen:
  3071                           	callstack 119
  3072                           
  3073                           ;incstack = 0
  3074   002C68  C50C  F50E         	movff	i2strlen@s,i2strlen@a
  3075   002C6C  D001               	goto	i2l1591
  3076   002C6E                     i2l1589:
  3077   002C6E  2A0C               	incf	i2strlen@s^(0+1280),f,c
  3078   002C70                     i2l1591:
  3079   002C70  C50C  F4F6         	movff	i2strlen@s,tblptrl
  3080   002C74                     	if	1	;There is more than 1 active tblptr byte
  3081   002C74  0E25               	movlw	high __smallconst
  3082   002C76  6EF7               	movwf	tblptrh,c
  3083   002C78                     	endif
  3084   002C78                     	if	0	;tblptru may be non-zero
  3085   002C78                     	endif
  3086   002C78                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3087   002C78  0E00               	movlw	low (__smallconst shr (0+16))
  3088   002C7A  6EF8               	movwf	tblptru,c
  3089   002C7C                     	endif
  3090   002C7C  0008               	tblrd		*
  3091   002C7E  50F5               	movf	tablat,w,c
  3092   002C80  0900               	iorlw	0
  3093   002C82  A4D8               	btfss	status,2,c
  3094   002C84  D7F4               	goto	i2l1589
  3095   002C86  500E               	movf	i2strlen@a^(0+1280),w,c
  3096   002C88  5C0C               	subwf	i2strlen@s^(0+1280),w,c
  3097   002C8A  6E0C               	movwf	?i2_strlen^(0+1280),c
  3098   002C8C  6A0D               	clrf	(?i2_strlen+1)^(0+1280),c
  3099   002C8E  BE0C               	btfsc	?i2_strlen^(0+1280),7,c
  3100   002C90  060D               	decf	(?i2_strlen+1)^(0+1280),f,c
  3101   002C92  0012               	return		;funcret
  3102   002C94                     __end_ofi2_strlen:
  3103                           	callstack 0
  3104                           
  3105 ;; *************** function i2_U1_NEWLINE *****************
  3106 ;; Defined at:
  3107 ;;		line 32 in file "U1SERIAL.c"
  3108 ;; Parameters:    Size  Location     Type
  3109 ;;		None
  3110 ;; Auto vars:     Size  Location     Type
  3111 ;;		None
  3112 ;; Return value:  Size  Location     Type
  3113 ;;                  1    wreg      void 
  3114 ;; Registers used:
  3115 ;;		wreg, status,2
  3116 ;; Tracked objects:
  3117 ;;		On entry : 0/0
  3118 ;;		On exit  : 3F/2
  3119 ;;		Unchanged: 0/0
  3120 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  3121 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3122 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3123 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3124 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3125 ;;Total ram usage:        0 bytes
  3126 ;; Hardware stack levels used: 1
  3127 ;; This function calls:
  3128 ;;		Nothing
  3129 ;; This function is called by:
  3130 ;;		_INT0_ISR
  3131 ;;		_INT1_ISR
  3132 ;; This function uses a non-reentrant model
  3133 ;;
  3134                           
  3135                           	psect	text28
  3136   002D28                     __ptext28:
  3137                           	callstack 0
  3138   002D28                     i2_U1_NEWLINE:
  3139                           	callstack 120
  3140                           
  3141                           ;U1SERIAL.c: 33:     U1TXB = 0x0A;
  3142                           
  3143                           ;incstack = 0
  3144   002D28  0E0A               	movlw	10
  3145   002D2A  0102               	movlb	2	; () banked
  3146   002D2C  6FA3               	movwf	163,b	;volatile
  3147   002D2E                     i2l247:
  3148                           
  3149                           ; BSR set to: 2
  3150   002D2E  AFB2               	btfss	178,7,b	;volatile
  3151   002D30  D7FE               	goto	i2l247
  3152                           
  3153                           ; BSR set to: 2
  3154                           ;U1SERIAL.c: 35:     U1TXB = 0x0D;
  3155   002D32  0E0D               	movlw	13
  3156   002D34  6FA3               	movwf	163,b	;volatile
  3157   002D36                     i2l250:
  3158                           
  3159                           ; BSR set to: 2
  3160   002D36  BFB2               	btfsc	178,7,b	;volatile
  3161   002D38  0012               	return	
  3162   002D3A  D7FD               	goto	i2l250
  3163   002D3C                     __end_ofi2_U1_NEWLINE:
  3164                           	callstack 0
  3165                           
  3166 ;; *************** function _INT1_ISR *****************
  3167 ;; Defined at:
  3168 ;;		line 70 in file "maincode.c"
  3169 ;; Parameters:    Size  Location     Type
  3170 ;;		None
  3171 ;; Auto vars:     Size  Location     Type
  3172 ;;		None
  3173 ;; Return value:  Size  Location     Type
  3174 ;;                  1    wreg      void 
  3175 ;; Registers used:
  3176 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3177 ;; Tracked objects:
  3178 ;;		On entry : 0/0
  3179 ;;		On exit  : 3F/2
  3180 ;;		Unchanged: 0/0
  3181 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  3182 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3183 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3184 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3185 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3186 ;;Total ram usage:        4 bytes
  3187 ;; Hardware stack levels used: 1
  3188 ;; Hardware stack levels required when called: 2
  3189 ;; This function calls:
  3190 ;;		i2_U1_NEWLINE
  3191 ;;		i2_U1_STRING_SEND
  3192 ;; This function is called by:
  3193 ;;		Interrupt level 2
  3194 ;; This function uses a non-reentrant model
  3195 ;;
  3196                           
  3197                           	psect	text29
  3198   002C0C                     __ptext29:
  3199                           	callstack 0
  3200   002C0C                     _INT1_ISR:
  3201                           	callstack 119
  3202                           
  3203                           ; BSR set to: 2
  3204                           ;incstack = 0
  3205   002C0C  C4F6 F513          	movff	tblptrl,??_INT1_ISR
  3206   002C10  C4F7 F514          	movff	tblptrh,??_INT1_ISR+1
  3207   002C14  C4F8 F515          	movff	tblptru,??_INT1_ISR+2
  3208   002C18  C4F5 F516          	movff	tablat,??_INT1_ISR+3
  3209                           
  3210                           ;maincode.c: 71:     PIR6bits.INT1IF = 0;
  3211   002C1C  90B4               	bcf	180,0,c	;volatile
  3212                           
  3213                           ;maincode.c: 72:     U1_STRING_SEND("Se pulso boton en INT1");
  3214   002C1E  0E18               	movlw	low STR_6
  3215   002C20  6E0F               	movwf	i2U1_STRING_SEND@cadena^(0+1280),c
  3216   002C22  EC49  F015         	call	i2_U1_STRING_SEND	;wreg free
  3217                           
  3218                           ;maincode.c: 73:     U1_NEWLINE();
  3219   002C26  EC94  F016         	call	i2_U1_NEWLINE	;wreg free
  3220                           
  3221                           ; BSR set to: 2
  3222   002C2A  C516  F4F5         	movff	??_INT1_ISR+3,tablat
  3223   002C2E  C515  F4F8         	movff	??_INT1_ISR+2,tblptru
  3224   002C32  C514  F4F7         	movff	??_INT1_ISR+1,tblptrh
  3225   002C36  C513  F4F6         	movff	??_INT1_ISR,tblptrl
  3226   002C3A  0011               	retfie		f
  3227   002C3C                     __end_of_INT1_ISR:
  3228                           	callstack 0
  3229                           
  3230                           ;
  3231                           ; Interrupt Vector Table @ 0x8
  3232                           ;
  3233                           
  3234                           	psect	ivt0x8
  3235   000008                     __pivt0x8:
  3236                           	callstack 0
  3237   000008                     ivt0x8_base:
  3238                           	callstack 0
  3239                           
  3240                           ; Vector 0 : SWINT
  3241   000008  0040               	dw	ivt0x8_undefint shr (0+2)
  3242                           
  3243                           ; Vector 1 : HLVD
  3244   00000A  0040               	dw	ivt0x8_undefint shr (0+2)
  3245                           
  3246                           ; Vector 2 : OSF
  3247   00000C  0040               	dw	ivt0x8_undefint shr (0+2)
  3248                           
  3249                           ; Vector 3 : CSW
  3250   00000E  0040               	dw	ivt0x8_undefint shr (0+2)
  3251                           
  3252                           ; Vector 4 : Undefined
  3253   000010  0040               	dw	ivt0x8_undefint shr (0+2)
  3254                           
  3255                           ; Vector 5 : CLC1
  3256   000012  0040               	dw	ivt0x8_undefint shr (0+2)
  3257                           
  3258                           ; Vector 6 : Undefined
  3259   000014  0040               	dw	ivt0x8_undefint shr (0+2)
  3260                           
  3261                           ; Vector 7 : IOC
  3262   000016  0040               	dw	ivt0x8_undefint shr (0+2)
  3263                           
  3264                           ; Vector 8 : INT0
  3265   000018  0AF7               	dw	_INT0_ISR shr (0+2)
  3266                           
  3267                           ; Vector 9 : ZCD
  3268   00001A  0040               	dw	ivt0x8_undefint shr (0+2)
  3269                           
  3270                           ; Vector 10 : AD
  3271   00001C  0040               	dw	ivt0x8_undefint shr (0+2)
  3272                           
  3273                           ; Vector 11 : ACT
  3274   00001E  0040               	dw	ivt0x8_undefint shr (0+2)
  3275                           
  3276                           ; Vector 12 : CMP1
  3277   000020  0040               	dw	ivt0x8_undefint shr (0+2)
  3278                           
  3279                           ; Vector 13 : SMT1
  3280   000022  0040               	dw	ivt0x8_undefint shr (0+2)
  3281                           
  3282                           ; Vector 14 : SMT1PRA
  3283   000024  0040               	dw	ivt0x8_undefint shr (0+2)
  3284                           
  3285                           ; Vector 15 : SMT1PRW
  3286   000026  0040               	dw	ivt0x8_undefint shr (0+2)
  3287                           
  3288                           ; Vector 16 : ADT
  3289   000028  0040               	dw	ivt0x8_undefint shr (0+2)
  3290                           
  3291                           ; Vector 17 : Undefined
  3292   00002A  0040               	dw	ivt0x8_undefint shr (0+2)
  3293                           
  3294                           ; Vector 18 : Undefined
  3295   00002C  0040               	dw	ivt0x8_undefint shr (0+2)
  3296                           
  3297                           ; Vector 19 : Undefined
  3298   00002E  0040               	dw	ivt0x8_undefint shr (0+2)
  3299                           
  3300                           ; Vector 20 : DMA1SCNT
  3301   000030  0040               	dw	ivt0x8_undefint shr (0+2)
  3302                           
  3303                           ; Vector 21 : DMA1DCNT
  3304   000032  0040               	dw	ivt0x8_undefint shr (0+2)
  3305                           
  3306                           ; Vector 22 : DMA1OR
  3307   000034  0040               	dw	ivt0x8_undefint shr (0+2)
  3308                           
  3309                           ; Vector 23 : DMA1A
  3310   000036  0040               	dw	ivt0x8_undefint shr (0+2)
  3311                           
  3312                           ; Vector 24 : SPI1RX
  3313   000038  0040               	dw	ivt0x8_undefint shr (0+2)
  3314                           
  3315                           ; Vector 25 : SPI1TX
  3316   00003A  0040               	dw	ivt0x8_undefint shr (0+2)
  3317                           
  3318                           ; Vector 26 : SPI1
  3319   00003C  0040               	dw	ivt0x8_undefint shr (0+2)
  3320                           
  3321                           ; Vector 27 : TMR2
  3322   00003E  0040               	dw	ivt0x8_undefint shr (0+2)
  3323                           
  3324                           ; Vector 28 : TMR1
  3325   000040  0040               	dw	ivt0x8_undefint shr (0+2)
  3326                           
  3327                           ; Vector 29 : TMR1G
  3328   000042  0040               	dw	ivt0x8_undefint shr (0+2)
  3329                           
  3330                           ; Vector 30 : CCP1
  3331   000044  0040               	dw	ivt0x8_undefint shr (0+2)
  3332                           
  3333                           ; Vector 31 : TMR0
  3334   000046  0040               	dw	ivt0x8_undefint shr (0+2)
  3335                           
  3336                           ; Vector 32 : U1RX
  3337   000048  0040               	dw	ivt0x8_undefint shr (0+2)
  3338                           
  3339                           ; Vector 33 : U1TX
  3340   00004A  0040               	dw	ivt0x8_undefint shr (0+2)
  3341                           
  3342                           ; Vector 34 : U1E
  3343   00004C  0040               	dw	ivt0x8_undefint shr (0+2)
  3344                           
  3345                           ; Vector 35 : U1
  3346   00004E  0040               	dw	ivt0x8_undefint shr (0+2)
  3347                           
  3348                           ; Vector 36 : Undefined
  3349   000050  0040               	dw	ivt0x8_undefint shr (0+2)
  3350                           
  3351                           ; Vector 37 : Undefined
  3352   000052  0040               	dw	ivt0x8_undefint shr (0+2)
  3353                           
  3354                           ; Vector 38 : PWM1PR
  3355   000054  0040               	dw	ivt0x8_undefint shr (0+2)
  3356                           
  3357                           ; Vector 39 : PWM1
  3358   000056  0040               	dw	ivt0x8_undefint shr (0+2)
  3359                           
  3360                           ; Vector 40 : SPI2RX
  3361   000058  0040               	dw	ivt0x8_undefint shr (0+2)
  3362                           
  3363                           ; Vector 41 : SPI2TX
  3364   00005A  0040               	dw	ivt0x8_undefint shr (0+2)
  3365                           
  3366                           ; Vector 42 : SPI2
  3367   00005C  0040               	dw	ivt0x8_undefint shr (0+2)
  3368                           
  3369                           ; Vector 43 : Undefined
  3370   00005E  0040               	dw	ivt0x8_undefint shr (0+2)
  3371                           
  3372                           ; Vector 44 : TMR3
  3373   000060  0040               	dw	ivt0x8_undefint shr (0+2)
  3374                           
  3375                           ; Vector 45 : TMR3G
  3376   000062  0040               	dw	ivt0x8_undefint shr (0+2)
  3377                           
  3378                           ; Vector 46 : PWM2PR
  3379   000064  0040               	dw	ivt0x8_undefint shr (0+2)
  3380                           
  3381                           ; Vector 47 : PWM2
  3382   000066  0040               	dw	ivt0x8_undefint shr (0+2)
  3383                           
  3384                           ; Vector 48 : INT1
  3385   000068  0B03               	dw	_INT1_ISR shr (0+2)
  3386                           
  3387                           ; Vector 49 : CLC2
  3388   00006A  0040               	dw	ivt0x8_undefint shr (0+2)
  3389                           
  3390                           ; Vector 50 : CWG1
  3391   00006C  0040               	dw	ivt0x8_undefint shr (0+2)
  3392                           
  3393                           ; Vector 51 : NCO1
  3394   00006E  0040               	dw	ivt0x8_undefint shr (0+2)
  3395                           
  3396                           ; Vector 52 : DMA2SCNT
  3397   000070  0040               	dw	ivt0x8_undefint shr (0+2)
  3398                           
  3399                           ; Vector 53 : DMA2DCNT
  3400   000072  0040               	dw	ivt0x8_undefint shr (0+2)
  3401                           
  3402                           ; Vector 54 : DMA2OR
  3403   000074  0040               	dw	ivt0x8_undefint shr (0+2)
  3404                           
  3405                           ; Vector 55 : DMA2A
  3406   000076  0040               	dw	ivt0x8_undefint shr (0+2)
  3407                           
  3408                           ; Vector 56 : I2C1RX
  3409   000078  0040               	dw	ivt0x8_undefint shr (0+2)
  3410                           
  3411                           ; Vector 57 : I2C1TX
  3412   00007A  0040               	dw	ivt0x8_undefint shr (0+2)
  3413                           
  3414                           ; Vector 58 : I2C1
  3415   00007C  0040               	dw	ivt0x8_undefint shr (0+2)
  3416                           
  3417                           ; Vector 59 : I2C1E
  3418   00007E  0040               	dw	ivt0x8_undefint shr (0+2)
  3419                           
  3420                           ; Vector 60 : Undefined
  3421   000080  0040               	dw	ivt0x8_undefint shr (0+2)
  3422                           
  3423                           ; Vector 61 : CLC3
  3424   000082  0040               	dw	ivt0x8_undefint shr (0+2)
  3425                           
  3426                           ; Vector 62 : PWM3PR
  3427   000084  0040               	dw	ivt0x8_undefint shr (0+2)
  3428                           
  3429                           ; Vector 63 : PWM3
  3430   000086  0040               	dw	ivt0x8_undefint shr (0+2)
  3431                           
  3432                           ; Vector 64 : U2RX
  3433   000088  0040               	dw	ivt0x8_undefint shr (0+2)
  3434                           
  3435                           ; Vector 65 : U2TX
  3436   00008A  0040               	dw	ivt0x8_undefint shr (0+2)
  3437                           
  3438                           ; Vector 66 : U2E
  3439   00008C  0040               	dw	ivt0x8_undefint shr (0+2)
  3440                           
  3441                           ; Vector 67 : U2
  3442   00008E  0040               	dw	ivt0x8_undefint shr (0+2)
  3443                           
  3444                           ; Vector 68 : TMR5
  3445   000090  0040               	dw	ivt0x8_undefint shr (0+2)
  3446                           
  3447                           ; Vector 69 : TMR5G
  3448   000092  0040               	dw	ivt0x8_undefint shr (0+2)
  3449                           
  3450                           ; Vector 70 : CCP2
  3451   000094  0040               	dw	ivt0x8_undefint shr (0+2)
  3452                           
  3453                           ; Vector 71 : SCAN
  3454   000096  0040               	dw	ivt0x8_undefint shr (0+2)
  3455                           
  3456                           ; Vector 72 : U3RX
  3457   000098  0040               	dw	ivt0x8_undefint shr (0+2)
  3458                           
  3459                           ; Vector 73 : U3TX
  3460   00009A  0040               	dw	ivt0x8_undefint shr (0+2)
  3461                           
  3462                           ; Vector 74 : U3E
  3463   00009C  0040               	dw	ivt0x8_undefint shr (0+2)
  3464                           
  3465                           ; Vector 75 : U3
  3466   00009E  0040               	dw	ivt0x8_undefint shr (0+2)
  3467                           
  3468                           ; Vector 76 : Undefined
  3469   0000A0  0040               	dw	ivt0x8_undefint shr (0+2)
  3470                           
  3471                           ; Vector 77 : CLC4
  3472   0000A2  0040               	dw	ivt0x8_undefint shr (0+2)
  3473                           
  3474                           ; Vector 78 : Undefined
  3475   0000A4  0040               	dw	ivt0x8_undefint shr (0+2)
  3476                           
  3477                           ; Vector 79 : Undefined
  3478   0000A6  0040               	dw	ivt0x8_undefint shr (0+2)
  3479                           
  3480                           ; Vector 80 : INT2
  3481   0000A8  0040               	dw	ivt0x8_undefint shr (0+2)
  3482                           
  3483                           ; Vector 81 : CLC5
  3484   0000AA  0040               	dw	ivt0x8_undefint shr (0+2)
  3485                           
  3486                           ; Vector 82 : CWG2
  3487   0000AC  0040               	dw	ivt0x8_undefint shr (0+2)
  3488                           
  3489                           ; Vector 83 : NCO2
  3490   0000AE  0040               	dw	ivt0x8_undefint shr (0+2)
  3491                           
  3492                           ; Vector 84 : DMA3SCNT
  3493   0000B0  0040               	dw	ivt0x8_undefint shr (0+2)
  3494                           
  3495                           ; Vector 85 : DMA3DCNT
  3496   0000B2  0040               	dw	ivt0x8_undefint shr (0+2)
  3497                           
  3498                           ; Vector 86 : DMA3OR
  3499   0000B4  0040               	dw	ivt0x8_undefint shr (0+2)
  3500                           
  3501                           ; Vector 87 : DMA3A
  3502   0000B6  0040               	dw	ivt0x8_undefint shr (0+2)
  3503                           
  3504                           ; Vector 88 : CCP3
  3505   0000B8  0040               	dw	ivt0x8_undefint shr (0+2)
  3506                           
  3507                           ; Vector 89 : CLC6
  3508   0000BA  0040               	dw	ivt0x8_undefint shr (0+2)
  3509                           
  3510                           ; Vector 90 : CWG3
  3511   0000BC  0040               	dw	ivt0x8_undefint shr (0+2)
  3512                           
  3513                           ; Vector 91 : TMR4
  3514   0000BE  0040               	dw	ivt0x8_undefint shr (0+2)
  3515                           
  3516                           ; Vector 92 : DMA4SCNT
  3517   0000C0  0040               	dw	ivt0x8_undefint shr (0+2)
  3518                           
  3519                           ; Vector 93 : DMA4DCNT
  3520   0000C2  0040               	dw	ivt0x8_undefint shr (0+2)
  3521                           
  3522                           ; Vector 94 : DMA4OR
  3523   0000C4  0040               	dw	ivt0x8_undefint shr (0+2)
  3524                           
  3525                           ; Vector 95 : DMA4A
  3526   0000C6  0040               	dw	ivt0x8_undefint shr (0+2)
  3527                           
  3528                           ; Vector 96 : U4RX
  3529   0000C8  0040               	dw	ivt0x8_undefint shr (0+2)
  3530                           
  3531                           ; Vector 97 : U4TX
  3532   0000CA  0040               	dw	ivt0x8_undefint shr (0+2)
  3533                           
  3534                           ; Vector 98 : U4E
  3535   0000CC  0040               	dw	ivt0x8_undefint shr (0+2)
  3536                           
  3537                           ; Vector 99 : U4
  3538   0000CE  0040               	dw	ivt0x8_undefint shr (0+2)
  3539                           
  3540                           ; Vector 100 : DMA5SCNT
  3541   0000D0  0040               	dw	ivt0x8_undefint shr (0+2)
  3542                           
  3543                           ; Vector 101 : DMA5DCNT
  3544   0000D2  0040               	dw	ivt0x8_undefint shr (0+2)
  3545                           
  3546                           ; Vector 102 : DMA5OR
  3547   0000D4  0040               	dw	ivt0x8_undefint shr (0+2)
  3548                           
  3549                           ; Vector 103 : DMA5A
  3550   0000D6  0040               	dw	ivt0x8_undefint shr (0+2)
  3551                           
  3552                           ; Vector 104 : U5RX
  3553   0000D8  0040               	dw	ivt0x8_undefint shr (0+2)
  3554                           
  3555                           ; Vector 105 : U5TX
  3556   0000DA  0040               	dw	ivt0x8_undefint shr (0+2)
  3557                           
  3558                           ; Vector 106 : U5E
  3559   0000DC  0040               	dw	ivt0x8_undefint shr (0+2)
  3560                           
  3561                           ; Vector 107 : U5
  3562   0000DE  0040               	dw	ivt0x8_undefint shr (0+2)
  3563                           
  3564                           ; Vector 108 : DMA6SCNT
  3565   0000E0  0040               	dw	ivt0x8_undefint shr (0+2)
  3566                           
  3567                           ; Vector 109 : DMA6DCNT
  3568   0000E2  0040               	dw	ivt0x8_undefint shr (0+2)
  3569                           
  3570                           ; Vector 110 : DMA6OR
  3571   0000E4  0040               	dw	ivt0x8_undefint shr (0+2)
  3572                           
  3573                           ; Vector 111 : DMA6A
  3574   0000E6  0040               	dw	ivt0x8_undefint shr (0+2)
  3575                           
  3576                           ; Vector 112 : Undefined
  3577   0000E8  0040               	dw	ivt0x8_undefint shr (0+2)
  3578                           
  3579                           ; Vector 113 : CLC7
  3580   0000EA  0040               	dw	ivt0x8_undefint shr (0+2)
  3581                           
  3582                           ; Vector 114 : CMP2
  3583   0000EC  0040               	dw	ivt0x8_undefint shr (0+2)
  3584                           
  3585                           ; Vector 115 : NCO3
  3586   0000EE  0040               	dw	ivt0x8_undefint shr (0+2)
  3587                           
  3588                           ; Vector 116 : Undefined
  3589   0000F0  0040               	dw	ivt0x8_undefint shr (0+2)
  3590                           
  3591                           ; Vector 117 : Undefined
  3592   0000F2  0040               	dw	ivt0x8_undefint shr (0+2)
  3593                           
  3594                           ; Vector 118 : Undefined
  3595   0000F4  0040               	dw	ivt0x8_undefint shr (0+2)
  3596                           
  3597                           ; Vector 119 : Undefined
  3598   0000F6  0040               	dw	ivt0x8_undefint shr (0+2)
  3599                           
  3600                           ; Vector 120 : NVM
  3601   0000F8  0040               	dw	ivt0x8_undefint shr (0+2)
  3602                           
  3603                           ; Vector 121 : CLC8
  3604   0000FA  0040               	dw	ivt0x8_undefint shr (0+2)
  3605                           
  3606                           ; Vector 122 : CRC
  3607   0000FC  0040               	dw	ivt0x8_undefint shr (0+2)
  3608                           
  3609                           ; Vector 123 : TMR6
  3610   0000FE  0040               	dw	ivt0x8_undefint shr (0+2)
  3611   000100                     ivt0x8_undefint:
  3612                           	callstack 0
  3613   000100  00FF               	reset	
  3614                           
  3615                           	psect	rparam
  3616   000000                     
  3617                           	psect	config
  3618                           
  3619                           ;Config register CONFIG1 @ 0x300000
  3620                           ;	External Oscillator Selection
  3621                           ;	FEXTOSC = OFF, Oscillator not enabled
  3622                           ;	Reset Oscillator Selection
  3623                           ;	RSTOSC = EXTOSC, EXTOSC operating per FEXTOSC bits (device manufacturing default)
  3624   300000                     	org	3145728
  3625   300000  FC                 	db	252
  3626                           
  3627                           ;Config register CONFIG2 @ 0x300001
  3628                           ;	Clock out Enable bit
  3629                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
  3630                           ;	PRLOCKED One-Way Set Enable bit
  3631                           ;	PR1WAY = ON, PRLOCKED bit can be cleared and set only once
  3632                           ;	Clock Switch Enable bit
  3633                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
  3634                           ;	Fail-Safe Clock Monitor Enable bit
  3635                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
  3636   300001                     	org	3145729
  3637   300001  FF                 	db	255
  3638                           
  3639                           ;Config register CONFIG3 @ 0x300002
  3640                           ;	MCLR Enable bit
  3641                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
  3642                           ;	Power-up timer selection bits
  3643                           ;	PWRTS = PWRT_64, PWRT set at 64ms
  3644                           ;	Multi-vector enable bit
  3645                           ;	MVECEN = ON, Multi-vector enabled, Vector table used for interrupts
  3646                           ;	IVTLOCK bit One-way set enable bit
  3647                           ;	IVT1WAY = ON, IVTLOCKED bit can be cleared and set only once
  3648                           ;	Low Power BOR Enable bit
  3649                           ;	LPBOREN = OFF, Low-Power BOR disabled
  3650                           ;	Brown-out Reset Enable bits
  3651                           ;	BOREN = OFF, Brown-out Reset disabled
  3652   300002                     	org	3145730
  3653   300002  3D                 	db	61
  3654                           
  3655                           ;Config register CONFIG4 @ 0x300003
  3656                           ;	Brown-out Reset Voltage Selection bits
  3657                           ;	BORV = VBOR_1P9, Brown-out Reset Voltage (VBOR) set to 1.9V
  3658                           ;	ZCD Disable bit
  3659                           ;	ZCD = OFF, ZCD module is disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCD
      +                          CON
  3660                           ;	PPSLOCK bit One-Way Set Enable bit
  3661                           ;	PPS1WAY = ON, PPSLOCKED bit can be cleared and set only once; PPS registers remain loc
      +                          ked after one clear/set cycle
  3662                           ;	Stack Full/Underflow Reset Enable bit
  3663                           ;	STVREN = ON, Stack full/underflow will cause Reset
  3664                           ;	Low Voltage Programming Enable bit
  3665                           ;	LVP = OFF, HV on MCLR/VPP must be used for programming
  3666                           ;	Extended Instruction Set Enable bit
  3667                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
  3668   300003                     	org	3145731
  3669   300003  DF                 	db	223
  3670                           
  3671                           ;Config register CONFIG5 @ 0x300004
  3672                           ;	WDT Period selection bits
  3673                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  3674                           ;	WDT operating mode
  3675                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
  3676   300004                     	org	3145732
  3677   300004  9F                 	db	159
  3678                           
  3679                           ;Config register CONFIG6 @ 0x300005
  3680                           ;	WDT Window Select bits
  3681                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
  3682                           ;	WDT input clock selector
  3683                           ;	WDTCCS = SC, Software Control
  3684   300005                     	org	3145733
  3685   300005  FF                 	db	255
  3686                           
  3687                           ;Config register CONFIG7 @ 0x300006
  3688                           ;	Boot Block Size selection bits
  3689                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
  3690                           ;	Boot Block enable bit
  3691                           ;	BBEN = OFF, Boot block disabled
  3692                           ;	Storage Area Flash enable bit
  3693                           ;	SAFEN = OFF, SAF disabled
  3694                           ;	Background Debugger
  3695                           ;	DEBUG = OFF, Background Debugger disabled
  3696   300006                     	org	3145734
  3697   300006  FF                 	db	255
  3698                           
  3699                           ;Config register CONFIG8 @ 0x300007
  3700                           ;	Boot Block Write Protection bit
  3701                           ;	WRTB = OFF, Boot Block not Write protected
  3702                           ;	Configuration Register Write Protection bit
  3703                           ;	WRTC = OFF, Configuration registers not Write protected
  3704                           ;	Data EEPROM Write Protection bit
  3705                           ;	WRTD = OFF, Data EEPROM not Write protected
  3706                           ;	SAF Write protection bit
  3707                           ;	WRTSAF = OFF, SAF not Write Protected
  3708                           ;	Application Block write protection bit
  3709                           ;	WRTAPP = OFF, Application Block not write protected
  3710   300007                     	org	3145735
  3711   300007  FF                 	db	255
  3712                           
  3713                           ;Config register CONFIG10 @ 0x300009
  3714                           ;	PFM and Data EEPROM Code Protection bit
  3715                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
  3716   300009                     	org	3145737
  3717   300009  FF                 	db	255
  3718                           tosu	equ	0x4FF
  3719                           tosh	equ	0x4FE
  3720                           tosl	equ	0x4FD
  3721                           stkptr	equ	0x4FC
  3722                           pclatu	equ	0x4FB
  3723                           pclath	equ	0x4FA
  3724                           pcl	equ	0x4F9
  3725                           tblptru	equ	0x4F8
  3726                           tblptrh	equ	0x4F7
  3727                           tblptrl	equ	0x4F6
  3728                           tablat	equ	0x4F5
  3729                           prodh	equ	0x4F4
  3730                           prodl	equ	0x4F3
  3731                           indf0	equ	0x4EF
  3732                           postinc0	equ	0x4EE
  3733                           postdec0	equ	0x4ED
  3734                           preinc0	equ	0x4EC
  3735                           plusw0	equ	0x4EB
  3736                           fsr0h	equ	0x4EA
  3737                           fsr0l	equ	0x4E9
  3738                           wreg	equ	0x4E8
  3739                           indf1	equ	0x4E7
  3740                           postinc1	equ	0x4E6
  3741                           postdec1	equ	0x4E5
  3742                           preinc1	equ	0x4E4
  3743                           plusw1	equ	0x4E3
  3744                           fsr1h	equ	0x4E2
  3745                           fsr1l	equ	0x4E1
  3746                           bsr	equ	0x4E0
  3747                           indf2	equ	0x4DF
  3748                           postinc2	equ	0x4DE
  3749                           postdec2	equ	0x4DD
  3750                           preinc2	equ	0x4DC
  3751                           plusw2	equ	0x4DB
  3752                           fsr2h	equ	0x4DA
  3753                           fsr2l	equ	0x4D9
  3754                           status	equ	0x4D8

Data Sizes:
    Strings     91
    Constant    0
    Data        3
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     46      49
    BANK5           160      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0
    BANK32          256      0       0
    BANK33          256      0       0
    BANK34          256      0       0
    BANK35          256      0       0
    BANK36          256      0       0

Pointer List with Targets:

    ESCRIBE_MENSAJE2@cadena	PTR const unsigned char  size(1) Largest target is 16
		 -> STR_1(CODE[16]), 

    strlen@a	PTR const unsigned char  size(1) Largest target is 23
		 -> STR_1(CODE[16]), STR_2(CODE[5]), STR_3(CODE[12]), STR_4(CODE[12]), 
		 -> STR_5(CODE[23]), STR_6(CODE[23]), 

    strlen@s	PTR const unsigned char  size(1) Largest target is 23
		 -> STR_1(CODE[16]), STR_2(CODE[5]), STR_3(CODE[12]), STR_4(CODE[12]), 
		 -> STR_5(CODE[23]), STR_6(CODE[23]), 

    U1_STRING_SEND@cadena	PTR const unsigned char  size(1) Largest target is 23
		 -> STR_2(CODE[5]), STR_3(CODE[12]), STR_4(CODE[12]), STR_5(CODE[23]), 
		 -> STR_6(CODE[23]), 


Critical Paths under _main in COMRAM

    _main->_U1_ESCRIBE_VAR_INT
    _configuro->_LCD_INIT
    _LCD_INIT->_CURSOR_ONOFF
    _LCD_INIT->_LCD_CONFIG
    _LCD_CONFIG->_ENVIA_LCD_CMD
    _CURSOR_ONOFF->_ENVIA_LCD_CMD
    _CURSOR_HOME->_ENVIA_LCD_CMD
    _BORRAR_LCD->_ENVIA_LCD_CMD
    _U1_STRING_SEND->_strlen
    _U1_ESCRIBE_VAR_INT->___lwdiv
    ___lwdiv->___lwmod
    _U1_ESCRIBE_VAR_CHAR->___lbdiv
    ___lbdiv->___awmod
    _POS_CURSOR->_ENVIA_LCD_CMD
    _ENVIA_LCD_CMD->_ENVIA_NIBBLE
    _ENVIA_LCD_CMD->_LEER_LCD
    _ESCRIBE_MENSAJE2->_ENVIA_CHAR
    _ESCRIBE_MENSAJE2->_strlen
    _ENVIA_CHAR->_ENVIA_NIBBLE
    _ENVIA_CHAR->_LEER_LCD

Critical Paths under _INT0_ISR in COMRAM

    i2_U1_STRING_SEND->i2_strlen

Critical Paths under _INT1_ISR in COMRAM

    _INT1_ISR->i2_U1_STRING_SEND
    i2_U1_STRING_SEND->i2_strlen

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT0_ISR in BANK5

    None.

Critical Paths under _INT1_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT0_ISR in BANK6

    None.

Critical Paths under _INT1_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT0_ISR in BANK7

    None.

Critical Paths under _INT1_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INT0_ISR in BANK8

    None.

Critical Paths under _INT1_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INT0_ISR in BANK9

    None.

Critical Paths under _INT1_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INT0_ISR in BANK10

    None.

Critical Paths under _INT1_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INT0_ISR in BANK11

    None.

Critical Paths under _INT1_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INT0_ISR in BANK12

    None.

Critical Paths under _INT1_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INT0_ISR in BANK13

    None.

Critical Paths under _INT1_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INT0_ISR in BANK14

    None.

Critical Paths under _INT1_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INT0_ISR in BANK15

    None.

Critical Paths under _INT1_ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INT0_ISR in BANK16

    None.

Critical Paths under _INT1_ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INT0_ISR in BANK17

    None.

Critical Paths under _INT1_ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INT0_ISR in BANK18

    None.

Critical Paths under _INT1_ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INT0_ISR in BANK19

    None.

Critical Paths under _INT1_ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INT0_ISR in BANK20

    None.

Critical Paths under _INT1_ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INT0_ISR in BANK21

    None.

Critical Paths under _INT1_ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INT0_ISR in BANK22

    None.

Critical Paths under _INT1_ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INT0_ISR in BANK23

    None.

Critical Paths under _INT1_ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INT0_ISR in BANK24

    None.

Critical Paths under _INT1_ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INT0_ISR in BANK25

    None.

Critical Paths under _INT1_ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _INT0_ISR in BANK26

    None.

Critical Paths under _INT1_ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _INT0_ISR in BANK27

    None.

Critical Paths under _INT1_ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _INT0_ISR in BANK28

    None.

Critical Paths under _INT1_ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _INT0_ISR in BANK29

    None.

Critical Paths under _INT1_ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _INT0_ISR in BANK30

    None.

Critical Paths under _INT1_ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _INT0_ISR in BANK31

    None.

Critical Paths under _INT1_ISR in BANK31

    None.

Critical Paths under _main in BANK32

    None.

Critical Paths under _INT0_ISR in BANK32

    None.

Critical Paths under _INT1_ISR in BANK32

    None.

Critical Paths under _main in BANK33

    None.

Critical Paths under _INT0_ISR in BANK33

    None.

Critical Paths under _INT1_ISR in BANK33

    None.

Critical Paths under _main in BANK34

    None.

Critical Paths under _INT0_ISR in BANK34

    None.

Critical Paths under _INT1_ISR in BANK34

    None.

Critical Paths under _main in BANK35

    None.

Critical Paths under _INT0_ISR in BANK35

    None.

Critical Paths under _INT1_ISR in BANK35

    None.

Critical Paths under _main in BANK36

    None.

Critical Paths under _INT0_ISR in BANK36

    None.

Critical Paths under _INT1_ISR in BANK36

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    7092
                                             44 COMRAM     2     2      0
                   _ESCRIBE_MENSAJE2
                         _POS_CURSOR
                _U1_ESCRIBE_VAR_CHAR
                 _U1_ESCRIBE_VAR_INT
                         _U1_NEWLINE
                     _U1_STRING_SEND
                          _configuro
 ---------------------------------------------------------------------------------
 (1) _configuro                                            0     0      0     540
                           _LCD_INIT
                            _U1_INIT
 ---------------------------------------------------------------------------------
 (2) _U1_INIT                                              1     1      0      15
                                             22 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _LCD_INIT                                             1     1      0     525
                                             26 COMRAM     1     1      0
                         _BORRAR_LCD
                        _CURSOR_HOME
                       _CURSOR_ONOFF
                         _LCD_CONFIG
 ---------------------------------------------------------------------------------
 (3) _LCD_CONFIG                                           1     1      0     135
                                             25 COMRAM     1     1      0
                      _ENVIA_LCD_CMD
                       _ENVIA_NIBBLE
 ---------------------------------------------------------------------------------
 (3) _CURSOR_ONOFF                                         1     1      0     150
                                             25 COMRAM     1     1      0
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (3) _CURSOR_HOME                                          0     0      0     120
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (3) _BORRAR_LCD                                           0     0      0     120
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (1) _U1_STRING_SEND                                       4     3      1     684
                                             25 COMRAM     4     3      1
                             _strlen
 ---------------------------------------------------------------------------------
 (1) _U1_NEWLINE                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _U1_ESCRIBE_VAR_INT                                  10     7      3    3179
                                             34 COMRAM    10     7      3
                       _U1_DATA_SEND
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4    1271
                                             22 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4    1274
                                             27 COMRAM     7     3      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (1) _U1_ESCRIBE_VAR_CHAR                                  7     6      1    1765
                                             32 COMRAM     7     6      1
                       _U1_DATA_SEND
                            ___awmod
                            ___lbdiv
                            ___lbmod
 ---------------------------------------------------------------------------------
 (2) ___lbmod                                              4     3      1     437
                                             22 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (2) ___lbdiv                                              4     3      1     440
                                             28 COMRAM     4     3      1
                            ___awmod (ARG)
                            ___lbmod (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     574
                                             22 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _U1_DATA_SEND                                         1     1      0      15
                                             22 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _POS_CURSOR                                           2     1      1     372
                                             25 COMRAM     2     1      1
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (4) _ENVIA_LCD_CMD                                        2     2      0     120
                                             23 COMRAM     2     2      0
                       _ENVIA_NIBBLE
                           _LEER_LCD
 ---------------------------------------------------------------------------------
 (1) _ESCRIBE_MENSAJE2                                     4     3      1     552
                                             25 COMRAM     4     3      1
                         _ENVIA_CHAR
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strlen                                               3     1      2     242
                                             22 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _ENVIA_CHAR                                           2     2      0     120
                                             23 COMRAM     2     2      0
                       _ENVIA_NIBBLE
                           _LEER_LCD
 ---------------------------------------------------------------------------------
 (5) _LEER_LCD                                             1     1      0      45
                                             22 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _ENVIA_NIBBLE                                         1     1      0      15
                                             22 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _INT0_ISR                                             4     4      0     282
                                              7 COMRAM     4     4      0
                       i2_U1_NEWLINE
                   i2_U1_STRING_SEND
 ---------------------------------------------------------------------------------
 (7) i2_U1_STRING_SEND                                     4     3      1     282
                                             14 COMRAM     4     3      1
                           i2_strlen
 ---------------------------------------------------------------------------------
 (8) i2_strlen                                             3     1      2     116
                                             11 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (7) i2_U1_NEWLINE                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _INT1_ISR                                             4     4      0     282
                                             18 COMRAM     4     4      0
                       i2_U1_NEWLINE
                   i2_U1_STRING_SEND
 ---------------------------------------------------------------------------------
 (7) i2_U1_STRING_SEND                                     4     3      1     282
                                             14 COMRAM     4     3      1
                           i2_strlen
 ---------------------------------------------------------------------------------
 (8) i2_strlen                                             3     1      2     116
                                             11 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (7) i2_U1_NEWLINE                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ESCRIBE_MENSAJE2
     _ENVIA_CHAR
       _ENVIA_NIBBLE
       _LEER_LCD
     _strlen
   _POS_CURSOR
     _ENVIA_LCD_CMD
       _ENVIA_NIBBLE
       _LEER_LCD
   _U1_ESCRIBE_VAR_CHAR
     _U1_DATA_SEND
     ___awmod
     ___lbdiv
       ___awmod (ARG)
       ___lbmod (ARG)
     ___lbmod
   _U1_ESCRIBE_VAR_INT
     _U1_DATA_SEND
     ___lwdiv
       ___lwmod (ARG)
     ___lwmod
   _U1_NEWLINE
   _U1_STRING_SEND
     _strlen
   _configuro
     _LCD_INIT
       _BORRAR_LCD
         _ENVIA_LCD_CMD
       _CURSOR_HOME
         _ENVIA_LCD_CMD
       _CURSOR_ONOFF
         _ENVIA_LCD_CMD
       _LCD_CONFIG
         _ENVIA_LCD_CMD
         _ENVIA_NIBBLE
     _U1_INIT

 _INT0_ISR (ROOT)
   i2_U1_NEWLINE
   i2_U1_STRING_SEND
     i2_strlen

 _INT1_ISR (ROOT)
   i2_U1_NEWLINE
   i2_U1_STRING_SEND
     i2_strlen

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0       0      69        0.0%
EEDATA             400      0       0       0        0.0%
BITBIGSFRhhhlll    175      0       0      88        0.0%
BITBIGSFRhhhllh    14D      0       0      84        0.0%
BITBIGSFR_1        100      0       0      68        0.0%
BITBANK36          100      0       0      66        0.0%
BANK36             100      0       0      67        0.0%
BITBANK35          100      0       0      64        0.0%
BANK35             100      0       0      65        0.0%
BITBANK34          100      0       0      62        0.0%
BANK34             100      0       0      63        0.0%
BITBANK33          100      0       0      60        0.0%
BANK33             100      0       0      61        0.0%
BITBANK32          100      0       0      58        0.0%
BANK32             100      0       0      59        0.0%
BITBANK31          100      0       0      56        0.0%
BANK31             100      0       0      57        0.0%
BITBANK30          100      0       0      54        0.0%
BANK30             100      0       0      55        0.0%
BITBANK29          100      0       0      52        0.0%
BANK29             100      0       0      53        0.0%
BITBANK28          100      0       0      50        0.0%
BANK28             100      0       0      51        0.0%
BITBANK27          100      0       0      48        0.0%
BANK27             100      0       0      49        0.0%
BITBANK26          100      0       0      46        0.0%
BANK26             100      0       0      47        0.0%
BITBANK25          100      0       0      44        0.0%
BANK25             100      0       0      45        0.0%
BITBANK24          100      0       0      42        0.0%
BANK24             100      0       0      43        0.0%
BITBANK23          100      0       0      40        0.0%
BANK23             100      0       0      41        0.0%
BITBANK22          100      0       0      38        0.0%
BANK22             100      0       0      39        0.0%
BITBANK21          100      0       0      36        0.0%
BANK21             100      0       0      37        0.0%
BITBANK20          100      0       0      34        0.0%
BANK20             100      0       0      35        0.0%
BITBANK19          100      0       0      32        0.0%
BANK19             100      0       0      33        0.0%
BITBANK18          100      0       0      30        0.0%
BANK18             100      0       0      31        0.0%
BITBANK17          100      0       0      28        0.0%
BANK17             100      0       0      29        0.0%
BITBANK16          100      0       0      26        0.0%
BANK16             100      0       0      27        0.0%
BITBANK15          100      0       0      24        0.0%
BANK15             100      0       0      25        0.0%
BITBANK14          100      0       0      22        0.0%
BANK14             100      0       0      23        0.0%
BITBANK13          100      0       0      20        0.0%
BANK13             100      0       0      21        0.0%
BITBANK12          100      0       0      18        0.0%
BANK12             100      0       0      19        0.0%
BITBANK11          100      0       0      16        0.0%
BANK11             100      0       0      17        0.0%
BITBANK10          100      0       0      14        0.0%
BANK10             100      0       0      15        0.0%
BITBANK9           100      0       0      12        0.0%
BANK9              100      0       0      13        0.0%
BITBANK8           100      0       0      10        0.0%
BANK8              100      0       0      11        0.0%
BITBANK7           100      0       0       8        0.0%
BANK7              100      0       0       9        0.0%
BITBANK6           100      0       0       6        0.0%
BANK6              100      0       0       7        0.0%
BITBIGSFRl          AD      0       0      91        0.0%
BITBANK5            A0      0       0       4        0.0%
BANK5               A0      0       0       5        0.0%
BITBIGSFRhhhlll     79      0       0      87        0.0%
BITBIGSFRhhhlhh     76      0       0      79        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     2E      31       1       51.6%
BITBIGSFRhhhhhh     29      0       0      70        0.0%
BITBIGSFRhhhlhh      F      0       0      80        0.0%
BITBIGSFRhhhlhh      C      0       0      75        0.0%
BITBIGSFRhhhlhh      A      0       0      77        0.0%
BITBIGSFRhhhlll      7      0       0      86        0.0%
BITBIGSFRhhhlhh      7      0       0      81        0.0%
BITBIGSFRhhhlhl      7      0       0      83        0.0%
BITBIGSFRhhhlhh      6      0       0      82        0.0%
BITBIGSFRhhhhhl      5      0       0      72        0.0%
BITBIGSFRhhhhhl      4      0       0      71        0.0%
BITBIGSFRhhhlhh      4      0       0      74        0.0%
BITBIGSFRhhhlhh      4      0       0      76        0.0%
BITBIGSFRhhhlhh      4      0       0      78        0.0%
BITBIGSFRhl          3      0       0      90        0.0%
BITBIGSFRhhhllh      2      0       0      85        0.0%
BITBIGSFRhhhhl       1      0       0      73        0.0%
BITBIGSFRhhl         1      0       0      89        0.0%
BIGSFR_1             0      0       0     200        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      31      92        0.0%
DATA                 0      0      31       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Wed Nov 08 17:47:28 2023

               ENVIA_CHAR@aux 0519                           l232 2D42                           l240 2A80  
                         l170 2872                           l250 2D22                           l247 2D1A  
                         l765 293C                           l775 2A10                           l973 2868  
                         l989 2896                           u400 279C                           u510 29F2  
                         u440 2AEA                           u480 2916                           u707 284A  
                         u717 2858                           u637 2830                           u727 2862  
                         u647 2A28                           u737 2876                           u657 2A3C  
                         u747 2884                           u667 28B0                           u757 288E  
                         u677 28C2                           u767 2D0A                           u687 2B4E  
                         u697 2B82                  ___awmod@sign 051C                   LEER_LCD@aux 0517  
                         wreg 04E8                  ?_CURSOR_HOME 0501                   ?_U1_NEWLINE 0501  
              ??_ENVIA_NIBBLE 0517                ENVIA_CHAR@dato 0518               __end_of_U1_INIT 2CDC  
                        l1027 2CEA                          l1503 27C8                          l1601 29A2  
                        l1513 2AE0                          l1605 29B4                          l1525 2AFC  
                        l1517 2AE6                          l1463 2C42                          l1623 2B36  
                        l1543 2CB6                          l1535 2C9E                          l1631 2A68  
                        l1465 2C44                          l1609 29C6                          l1529 2B04  
                        l1641 2712                          l1619 2B1A                          l1483 2782  
                        l1643 2724                          l1555 290A                          l1635 2A88  
                        l1557 2912                          l1661 264A                          l1495 27B0  
                        l1487 2790                          l1479 2776                          l1639 2708  
                        l1647 273E                          l1567 2932                          l1583 2A06  
                        l1575 29E6                          l1663 266C                          l1655 2614  
                        l1489 2798                          l1577 29EE                          l1657 261E  
                        l1499 27BA                          l1659 2630                          l1667 2696  
                        l1689 27E8                          STR_1 252F                          STR_2 2557  
                        STR_3 253F                          STR_4 254B                          STR_5 2501  
                        STR_6 2518                          _LATD 04C1                          _main 27D2  
                        start 0102                 ?_CURSOR_ONOFF 0501      U1_ESCRIBE_VAR_INT@decena 052B  
                ___param_bank 0000                 ?_U1_DATA_SEND 0501      U1_ESCRIBE_VAR_INT@millar 0529  
             ??_ENVIA_LCD_CMD 0518              __end_of_LCD_INIT 2A56      U1_ESCRIBE_VAR_INT@numero 0523  
    U1_ESCRIBE_VAR_INT@unidad 052C              __end_of_LEER_LCD 28A0              __end_of_INT0_ISR 2C0C  
            __end_of_INT1_ISR 2C3C                         ?_main 0501               __end_of___lbdiv 2B08  
             __end_of___awmod 27D2               __end_of___lbmod 2CBE               __end_of___lwdiv 2946  
             __end_of___lwmod 2A1A                         _U1TXB 02A3                         i2l240 2ABC  
                       i2l250 2D36                         i2l247 2D2E                         _OSCEN 00B3  
                       _PORTD 04D1            _U1_ESCRIBE_VAR_INT 255E                         _TRISD 04C9  
                 ?_POS_CURSOR 051A           ?_U1_ESCRIBE_VAR_INT 0523                         tablat 04F5  
                       status 04D8               ___lbdiv@divisor 051D               ___lbdiv@counter 051F  
              ??_CURSOR_ONOFF 051A              __end_ofi2_strlen 2C94                ??_U1_DATA_SEND 0517  
             __initialization 2BA8                  __end_of_main 283E          ??_U1_ESCRIBE_VAR_INT 0526  
                      ??_main 052D                 __activetblptr 0003                     ??_U1_INIT 0517  
                      _ANSELD 0418                        _U1CON0 02AB                        _U1CON1 02AC  
                      _U1CON2 02AD                        _U1BRGH 02AF                        _U1BRGL 02AE  
                      _RF0PPS 0229                        i2l1591 2C70                        i2l1683 2AC4  
                      i2l1589 2C6E                        i2l1679 2AA4                        _OSCFRQ 00B1  
         _U1_ESCRIBE_VAR_CHAR 26C6                U1_INIT@baudios 0517                     ??___lbdiv 051E  
                   ??___awmod 051B          __end_of_ENVIA_NIBBLE 2D14                     ??___lbmod 0518  
                   ??___lwdiv 0520                     ??___lwmod 051B               ___awmod@divisor 0519  
        ?_U1_ESCRIBE_VAR_CHAR 0521                        isa$std 0001               ___awmod@counter 051B  
                      _strlen 2C3C                  __pdataCOMRAM 052F                  __mediumconst 0000  
               ?i2_U1_NEWLINE 0501                        tblptrh 04F7                        tblptrl 04F6  
                      tblptru 04F8                  ??_BORRAR_LCD 051A              ___lbdiv@dividend 051E  
                   ?_LCD_INIT 0501             U1_STRING_SEND@tam 051C               ___lbmod@divisor 0517  
                   ?_LEER_LCD 0501                    __accesstop 0560       __end_of__initialization 2BD4  
             ___lbmod@counter 0519                     ?_INT0_ISR 0501                     ?_INT1_ISR 0501  
                ??_LCD_CONFIG 051A                 ___rparam_used 0001                  ??_ENVIA_CHAR 0518  
              __pcstackCOMRAM 0501                ivt0x8_undefint 0100         ??_U1_ESCRIBE_VAR_CHAR 0522  
          __end_of_BORRAR_LCD 2D5A              ___lbdiv@quotient 0520              _ESCRIBE_MENSAJE2 2B08  
            ENVIA_LCD_CMD@aux 0519                ??i2_U1_NEWLINE 050C          __end_of_CURSOR_ONOFF 2CF8  
                ??_U1_NEWLINE 0517            __end_of_LCD_CONFIG 28F4            __end_of_ENVIA_CHAR 2BA8  
        __end_of_U1_DATA_SEND 2D4A                     ?i2_strlen 050C               U1_STRING_SEND@i 051D  
                  ??_LCD_INIT 051B                    ??_LEER_LCD 0517              ENVIA_NIBBLE@dato 0517  
                  ??_INT0_ISR 0508                    ??_INT1_ISR 0513                       IVTBASEH 045E  
                     IVTBASEL 045D                       IVTBASEU 045F            __end_of_U1_NEWLINE 2D28  
                     ?_strlen 0517                       _U1_INIT 2CBE                       _OSCCON1 00AD  
                  ??i2_strlen 050E                  ??_POS_CURSOR 051B              U1_DATA_SEND@dato 0517  
            i2_U1_STRING_SEND 2A92                       __Hparam 0000                       __Lparam 0000  
           __end_of_configuro 2990                       ___lbdiv 2ACE                       ___awmod 2762  
                     ___lbmod 2C94                       ___lwdiv 28F4                       ___lwmod 29D8  
                __psmallconst 2500         __end_of_ENVIA_LCD_CMD 2B74                       __pcinit 2BA8  
          __end_of_POS_CURSOR 29D8                       __ramtop 2500                       __ptext0 27D2  
                     __ptext1 2946                       __ptext2 2CBE                       __ptext3 2A1A  
                     __ptext4 28A0                       __ptext5 2CDC                       __ptext6 2D4A  
                     __ptext7 2D52                       __ptext8 2A56                       __ptext9 2D14  
            ___awmod@dividend 0517    U1_ESCRIBE_VAR_INT@d_millar 0528                  _ENVIA_NIBBLE 2CF8  
        end_of_initialization 2BD4          __end_ofi2_U1_NEWLINE 2D3C                       strlen@a 0519  
                     strlen@s 0517     U1_ESCRIBE_VAR_CHAR@decena 0525             ESCRIBE_MENSAJE2@i 051D  
            ___lbmod@dividend 0518     U1_ESCRIBE_VAR_CHAR@numero 0526     U1_ESCRIBE_VAR_CHAR@unidad 0527  
                   _TRISAbits 04C6                     _TRISBbits 04C7                     _TRISCbits 04C8  
                   _TRISFbits 04CB  U1_ESCRIBE_VAR_CHAR@n_digitos 0521                   ___lbmod@rem 051A  
    __end_of_ESCRIBE_MENSAJE2 2B40                  _CURSOR_ONOFF 2CDC            CURSOR_ONOFF@estado 051A  
                _U1_DATA_SEND 2D3C                 __pidataCOMRAM 2D5A                _U1_STRING_SEND 2A56  
              __end_of_strlen 2C68                 ??_CURSOR_HOME 051A           start_initialization 2BA8  
                  ivt0x8_base 0008                     i2strlen@a 050E                     i2strlen@s 050C  
      i2U1_STRING_SEND@cadena 050F             ENVIA_LCD_CMD@dato 0518   __end_of_U1_ESCRIBE_VAR_CHAR 2762  
      __end_of_U1_STRING_SEND 2A92                      ??_strlen 0519                      ?_U1_INIT 0501  
    __end_ofi2_U1_STRING_SEND 2ACE           __end_of_CURSOR_HOME 2D52              ___lwdiv@dividend 051C  
                    ?___lbdiv 051D                      ?___awmod 0517                      ?___lbmod 0517  
                    ?___lwdiv 051C                      ?___lwmod 0517               ?_U1_STRING_SEND 051A  
                   _configuro 2946                   __smallconst 2500                  i2_U1_NEWLINE 2D28  
            ___lwdiv@quotient 0520                   _U1ERRIRbits 02B2                      _LCD_INIT 2A1A  
                    _LEER_LCD 283E                      _INT0_ISR 2BDC                      _INT1_ISR 2C0C  
                    _LATDbits 04C1     U1_ESCRIBE_VAR_INT@centena 052A                      _PIE1bits 049F  
                    _PIE6bits 04A4                      _PIR1bits 04AF                      _PIR6bits 04B4  
                   _variable1 0531                     _variable2 052F                POS_CURSOR@fila 051B  
                  ?_configuro 0501        ESCRIBE_MENSAJE2@cadena 051A                      _WPUBbits 0409  
                 _CURSOR_HOME 2D4A                      i2_strlen 2C68                   _INTCON0bits 04D6  
                    __Hrparam 0000             ?_ESCRIBE_MENSAJE2 051A                      __Lrparam 0000  
  __end_of_U1_ESCRIBE_VAR_INT 26C6            ??_ESCRIBE_MENSAJE2 051B                    _ANSELAbits 0400  
                  _ANSELBbits 0408                    _ANSELCbits 0410                    _ANSELFbits 0428  
                    __pivt0x8 0008               ___lwdiv@divisor 051E               ___lwdiv@counter 0522  
                    __ptext10 255E                      __ptext11 29D8                      __ptext20 2B08  
                    __ptext12 28F4                      __ptext21 2C3C                      __ptext13 26C6  
                    __ptext22 2B74                      __ptext14 2C94                      __ptext23 283E  
                    __ptext15 2ACE                      __ptext24 2CF8                      __ptext16 2762  
                    __ptext25 2BDC                      __ptext17 2D3C                      __ptext26 2A92  
                    __ptext18 2990                      __ptext27 2C68                      __ptext19 2B40  
                    __ptext28 2D28                      __ptext29 2C0C                    _BORRAR_LCD 2D52  
                  _LCD_CONFIG 28A0                    _ENVIA_CHAR 2B74                      isa$xinst 0000  
               _ENVIA_LCD_CMD 2B40                   ??_configuro 051C                    _U1_NEWLINE 2D14  
           ?i2_U1_STRING_SEND 050F            ??i2_U1_STRING_SEND 0510   U1_ESCRIBE_VAR_INT@n_digitos 0525  
                    intlevel2 0000              ___lwmod@dividend 0517              ??_U1_STRING_SEND 051B  
              ?_ENVIA_LCD_CMD 0501           i2U1_STRING_SEND@tam 0511               ___lwmod@divisor 0519  
             ___lwmod@counter 051B           ESCRIBE_MENSAJE2@tam 051C                   ?_BORRAR_LCD 0501  
               ?_ENVIA_NIBBLE 0501    U1_ESCRIBE_VAR_CHAR@centena 0524                    _POS_CURSOR 2990  
        U1_STRING_SEND@cadena 051A             i2U1_STRING_SEND@i 0512                   ?_LCD_CONFIG 0501  
                 ?_ENVIA_CHAR 0501             POS_CURSOR@columna 051A  
