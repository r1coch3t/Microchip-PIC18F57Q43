

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Thu Nov 09 20:53:29 2023

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F57Q43
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1
    14                           	psect	text6,global,reloc=2,class=CODE,delta=1
    15                           	psect	text7,global,reloc=2,class=CODE,delta=1
    16                           	psect	text8,global,reloc=2,class=CODE,delta=1
    17                           	psect	text9,global,reloc=2,class=CODE,delta=1
    18                           	psect	text10,global,reloc=2,class=CODE,delta=1
    19                           	psect	text11,global,reloc=2,class=CODE,delta=1
    20                           	psect	text12,global,reloc=2,class=CODE,delta=1
    21                           	psect	text13,global,reloc=2,class=CODE,delta=1
    22                           	psect	text14,global,reloc=2,class=CODE,delta=1
    23                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text17,global,reloc=2,class=CODE,delta=1
    26                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text19,global,reloc=2,class=CODE,delta=1
    28                           	psect	text20,global,reloc=2,class=CODE,delta=1
    29                           	psect	text21,global,reloc=2,class=CODE,delta=1
    30                           	psect	text22,global,reloc=4,class=CODE,delta=1
    31                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
    32                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    33                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    34                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    35   000000                     
    36                           ; Generated 17/10/2023 GMT
    37                           ; 
    38                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    39                           ; All rights reserved.
    40                           ; 
    41                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    42                           ; 
    43                           ; Redistribution and use in source and binary forms, with or without modification, are
    44                           ; permitted provided that the following conditions are met:
    45                           ; 
    46                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    47                           ;        conditions and the following disclaimer.
    48                           ; 
    49                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    50                           ;        of conditions and the following disclaimer in the documentation and/or other
    51                           ;        materials provided with the distribution. Publication is not required when
    52                           ;        this file is used in an embedded application.
    53                           ; 
    54                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    55                           ;        software without specific prior written permission.
    56                           ; 
    57                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    58                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    59                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    60                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    61                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    62                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    63                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    64                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    65                           ; 
    66                           ; 
    67                           ; Code-generator required, PIC18F57Q43 Definitions
    68                           ; 
    69                           ; SFR Addresses
    70   000000                     _U1CON2	set	685
    71   000000                     _U1CON1	set	684
    72   000000                     _TRISCbits	set	1224
    73   000000                     _TRISBbits	set	1223
    74   000000                     _LATD	set	1217
    75   000000                     _OSCCON1	set	173
    76   000000                     _ANSELD	set	1048
    77   000000                     _LATDbits	set	1217
    78   000000                     _TRISAbits	set	1222
    79   000000                     _TRISD	set	1225
    80   000000                     _TRISFbits	set	1227
    81   000000                     _PORTD	set	1233
    82   000000                     _INTCON0bits	set	1238
    83   000000                     _ANSELFbits	set	1064
    84   000000                     _OSCFRQ	set	177
    85   000000                     _OSCEN	set	179
    86   000000                     _RF0PPS	set	553
    87   000000                     _U1CON0	set	683
    88   000000                     _U1BRGL	set	686
    89   000000                     _U1BRGH	set	687
    90   000000                     _ADPCH	set	1004
    91   000000                     _ADCON0bits	set	1011
    92   000000                     _ANSELAbits	set	1024
    93   000000                     _ANSELBbits	set	1032
    94   000000                     _ANSELCbits	set	1040
    95   000000                     _WPUBbits	set	1033
    96   000000                     _PIE4bits	set	1186
    97   000000                     _U1ERRIRbits	set	690
    98   000000                     _ADRESL	set	1002
    99   000000                     _ADRESH	set	1003
   100   000000                     _U1RXPPS	set	626
   101   000000                     _U1RXB	set	673
   102   000000                     _U1TXB	set	675
   103   000000                     _PIR4bits	set	1202
   104   000000                     _LATCbits	set	1216
   105                           
   106                           	psect	smallconst
   107   002500                     __psmallconst:
   108                           	callstack 0
   109   002500  00                 	db	0
   110   002501                     STR_1:
   111                           
   112                           ; BSR set to: 2
   113   002501  45                 	db	69	;'E'
   114   002502  4C                 	db	76	;'L'
   115   002503  35                 	db	53	;'5'
   116   002504  32                 	db	50	;'2'
   117   002505  2D                 	db	45
   118   002506  32                 	db	50	;'2'
   119   002507  20                 	db	32
   120   002508  53                 	db	83	;'S'
   121   002509  65                 	db	101	;'e'
   122   00250A  6D                 	db	109	;'m'
   123   00250B  61                 	db	97	;'a'
   124   00250C  6E                 	db	110	;'n'
   125   00250D  61                 	db	97	;'a'
   126   00250E  20                 	db	32
   127   00250F  31                 	db	49	;'1'
   128   002510  33                 	db	51	;'3'
   129   002511  00                 	db	0
   130   002512                     STR_2:
   131                           
   132                           ; BSR set to: 2
   133   002512  20                 	db	32
   134   002513  75                 	db	117	;'u'
   135   002514  43                 	db	67	;'C'
   136   002515  20                 	db	32
   137   002516  50                 	db	80	;'P'
   138   002517  49                 	db	73	;'I'
   139   002518  43                 	db	67	;'C'
   140   002519  31                 	db	49	;'1'
   141   00251A  38                 	db	56	;'8'
   142   00251B  46                 	db	70	;'F'
   143   00251C  35                 	db	53	;'5'
   144   00251D  37                 	db	55	;'7'
   145   00251E  51                 	db	81	;'Q'
   146   00251F  34                 	db	52	;'4'
   147   002520  33                 	db	51	;'3'
   148   002521  00                 	db	0
   149   002522                     STR_4:
   150                           
   151                           ; BSR set to: 2
   152   002522  20                 	db	32
   153   002523  20                 	db	32
   154   002524  4C                 	db	76	;'L'
   155   002525  65                 	db	101	;'e'
   156   002526  63                 	db	99	;'c'
   157   002527  74                 	db	116	;'t'
   158   002528  75                 	db	117	;'u'
   159   002529  72                 	db	114	;'r'
   160   00252A  61                 	db	97	;'a'
   161   00252B  20                 	db	32
   162   00252C  41                 	db	65	;'A'
   163   00252D  44                 	db	68	;'D'
   164   00252E  43                 	db	67	;'C'
   165   00252F  00                 	db	0
   166   002530                     STR_6:
   167                           
   168                           ; BSR set to: 2
   169   002530  43                 	db	67	;'C'
   170   002531  61                 	db	97	;'a'
   171   002532  6E                 	db	110	;'n'
   172   002533  61                 	db	97	;'a'
   173   002534  6C                 	db	108	;'l'
   174   002535  20                 	db	32
   175   002536  41                 	db	65	;'A'
   176   002537  4E                 	db	78	;'N'
   177   002538  41                 	db	65	;'A'
   178   002539  30                 	db	48	;'0'
   179   00253A  3A                 	db	58	;':'
   180   00253B  00                 	db	0
   181   00253C                     STR_5:
   182                           
   183                           ; BSR set to: 2
   184   00253C  4D                 	db	77	;'M'
   185   00253D  75                 	db	117	;'u'
   186   00253E  6E                 	db	110	;'n'
   187   00253F  64                 	db	100	;'d'
   188   002540  6F                 	db	111	;'o'
   189   002541  00                 	db	0
   190   002542                     STR_3:
   191                           
   192                           ; BSR set to: 2
   193   002542  48                 	db	72	;'H'
   194   002543  6F                 	db	111	;'o'
   195   002544  6C                 	db	108	;'l'
   196   002545  61                 	db	97	;'a'
   197   002546  00                 	db	0
   198   002547  00                 	db	0	; dummy byte at the end
   199   000000                     
   200                           ; #config settings
   201                           
   202                           	psect	cinit
   203   002DFE                     __pcinit:
   204                           	callstack 0
   205   002DFE                     start_initialization:
   206                           	callstack 0
   207   002DFE                     __initialization:
   208                           	callstack 0
   209                           
   210                           ;
   211                           ; Setup IVTBASE
   212                           ;
   213   002DFE  0104               	movlb	4
   214   002E00  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
   215   002E02  6F5D               	movwf	93,b
   216   002E04  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
   217   002E06  6F5E               	movwf	94,b
   218   002E08  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
   219   002E0A  6F5F               	movwf	95,b
   220   002E0C                     end_of_initialization:
   221                           	callstack 0
   222   002E0C                     __end_of__initialization:
   223                           	callstack 0
   224   002E0C  0100               	movlb	0
   225   002E0E  EF2C  F014         	goto	_main	;jump to C main() function
   226                           
   227                           	psect	cstackCOMRAM
   228   000501                     __pcstackCOMRAM:
   229                           	callstack 0
   230   000501                     ??_U1RX_ISR:
   231                           
   232                           ; 1 bytes @ 0x0
   233   000501                     	ds	2
   234   000503                     ?_strlen:
   235                           	callstack 0
   236   000503                     ?_tomamuestra_ADC:
   237                           	callstack 0
   238   000503                     ?___lwmod:
   239                           	callstack 0
   240   000503                     ENVIA_NIBBLE@dato:
   241                           	callstack 0
   242   000503                     LEER_LCD@aux:
   243                           	callstack 0
   244   000503                     U1_BYTE_SEND@dato:
   245                           	callstack 0
   246   000503                     strlen@s:
   247                           	callstack 0
   248   000503                     ___lwmod@dividend:
   249                           	callstack 0
   250                           
   251                           ; 2 bytes @ 0x2
   252   000503                     	ds	1
   253   000504                     ENVIA_CHAR@dato:
   254                           	callstack 0
   255   000504                     ENVIA_LCD_CMD@dato:
   256                           	callstack 0
   257                           
   258                           ; 1 bytes @ 0x3
   259   000504                     	ds	1
   260   000505                     ??_tomamuestra_ADC:
   261   000505                     ENVIA_CHAR@aux:
   262                           	callstack 0
   263   000505                     ENVIA_LCD_CMD@aux:
   264                           	callstack 0
   265   000505                     strlen@a:
   266                           	callstack 0
   267   000505                     ___lwmod@divisor:
   268                           	callstack 0
   269                           
   270                           ; 2 bytes @ 0x4
   271   000505                     	ds	1
   272   000506                     ??_LCD_CONFIG:
   273   000506                     POS_CURSOR@columna:
   274                           	callstack 0
   275   000506                     CURSOR_ONOFF@estado:
   276                           	callstack 0
   277   000506                     ESCRIBE_MENSAJE2@cadena:
   278                           	callstack 0
   279   000506                     U1_STRING_SEND@cadena:
   280                           	callstack 0
   281                           
   282                           ; 1 bytes @ 0x5
   283   000506                     	ds	1
   284   000507                     ??_ESCRIBE_MENSAJE2:
   285   000507                     ??_LCD_INIT:
   286   000507                     ??_U1_STRING_SEND:
   287   000507                     POS_CURSOR@fila:
   288                           	callstack 0
   289   000507                     tomamuestra_ADC@canal:
   290                           	callstack 0
   291   000507                     ___lwmod@counter:
   292                           	callstack 0
   293                           
   294                           ; 1 bytes @ 0x6
   295   000507                     	ds	1
   296   000508                     ?___lwdiv:
   297                           	callstack 0
   298   000508                     ESCRIBE_MENSAJE2@tam:
   299                           	callstack 0
   300   000508                     U1_STRING_SEND@tam:
   301                           	callstack 0
   302   000508                     ___lwdiv@dividend:
   303                           	callstack 0
   304                           
   305                           ; 2 bytes @ 0x7
   306   000508                     	ds	1
   307   000509                     ESCRIBE_MENSAJE2@i:
   308                           	callstack 0
   309   000509                     U1_STRING_SEND@i:
   310                           	callstack 0
   311                           
   312                           ; 1 bytes @ 0x8
   313   000509                     	ds	1
   314   00050A                     ___lwdiv@divisor:
   315                           	callstack 0
   316                           
   317                           ; 2 bytes @ 0x9
   318   00050A                     	ds	2
   319   00050C                     ___lwdiv@quotient:
   320                           	callstack 0
   321                           
   322                           ; 2 bytes @ 0xB
   323   00050C                     	ds	2
   324   00050E                     ___lwdiv@counter:
   325                           	callstack 0
   326                           
   327                           ; 1 bytes @ 0xD
   328   00050E                     	ds	1
   329   00050F                     LCD_ESCRIBE_VAR_INT@numero:
   330                           	callstack 0
   331   00050F                     U1_VAR_INT_SEND@numero:
   332                           	callstack 0
   333                           
   334                           ; 2 bytes @ 0xE
   335   00050F                     	ds	2
   336   000511                     LCD_ESCRIBE_VAR_INT@n_digitos:
   337                           	callstack 0
   338   000511                     U1_VAR_INT_SEND@n_digitos:
   339                           	callstack 0
   340                           
   341                           ; 1 bytes @ 0x10
   342   000511                     	ds	1
   343   000512                     ??_LCD_ESCRIBE_VAR_INT:
   344   000512                     ??_U1_VAR_INT_SEND:
   345                           
   346                           ; 1 bytes @ 0x11
   347   000512                     	ds	2
   348   000514                     LCD_ESCRIBE_VAR_INT@d_millar:
   349                           	callstack 0
   350   000514                     U1_VAR_INT_SEND@d_millar:
   351                           	callstack 0
   352                           
   353                           ; 1 bytes @ 0x13
   354   000514                     	ds	1
   355   000515                     LCD_ESCRIBE_VAR_INT@millar:
   356                           	callstack 0
   357   000515                     U1_VAR_INT_SEND@millar:
   358                           	callstack 0
   359                           
   360                           ; 1 bytes @ 0x14
   361   000515                     	ds	1
   362   000516                     LCD_ESCRIBE_VAR_INT@centena:
   363                           	callstack 0
   364   000516                     U1_VAR_INT_SEND@centena:
   365                           	callstack 0
   366                           
   367                           ; 1 bytes @ 0x15
   368   000516                     	ds	1
   369   000517                     LCD_ESCRIBE_VAR_INT@decena:
   370                           	callstack 0
   371   000517                     U1_VAR_INT_SEND@decena:
   372                           	callstack 0
   373                           
   374                           ; 1 bytes @ 0x16
   375   000517                     	ds	1
   376   000518                     LCD_ESCRIBE_VAR_INT@unidad:
   377                           	callstack 0
   378   000518                     U1_VAR_INT_SEND@unidad:
   379                           	callstack 0
   380                           
   381                           ; 1 bytes @ 0x17
   382   000518                     	ds	1
   383   000519                     ??_main:
   384                           
   385                           ; 1 bytes @ 0x18
   386   000519                     	ds	2
   387   00051B                     main@lectura_adc:
   388                           	callstack 0
   389                           
   390                           ; 2 bytes @ 0x1A
   391   00051B                     	ds	2
   392                           
   393 ;;
   394 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   395 ;;
   396 ;; *************** function _main *****************
   397 ;; Defined at:
   398 ;;		line 114 in file "maincode05.c"
   399 ;; Parameters:    Size  Location     Type
   400 ;;		None
   401 ;; Auto vars:     Size  Location     Type
   402 ;;  lectura_adc     2   26[COMRAM] unsigned int 
   403 ;; Return value:  Size  Location     Type
   404 ;;                  1    wreg      void 
   405 ;; Registers used:
   406 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   407 ;; Tracked objects:
   408 ;;		On entry : 0/0
   409 ;;		On exit  : 0/0
   410 ;;		Unchanged: 0/0
   411 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   412 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   413 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   414 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   415 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   416 ;;Total ram usage:        4 bytes
   417 ;; Hardware stack levels required when called: 6
   418 ;; This function calls:
   419 ;;		_BORRAR_LCD
   420 ;;		_ESCRIBE_MENSAJE2
   421 ;;		_LCD_ESCRIBE_VAR_INT
   422 ;;		_POS_CURSOR
   423 ;;		_U1_NEWLINE
   424 ;;		_U1_STRING_SEND
   425 ;;		_U1_VAR_INT_SEND
   426 ;;		_configuro
   427 ;;		_tomamuestra_ADC
   428 ;; This function is called by:
   429 ;;		Startup code after reset
   430 ;; This function uses a non-reentrant model
   431 ;;
   432                           
   433                           	psect	text0
   434   002858                     __ptext0:
   435                           	callstack 0
   436   002858                     _main:
   437                           	callstack 121
   438   002858                     
   439                           ;maincode05.c: 115:     configuro();
   440   002858  EC44  F015         	call	_configuro	;wreg free
   441                           
   442                           ;maincode05.c: 116:     POS_CURSOR(1,0);
   443   00285C  0E00               	movlw	0
   444   00285E  6E06               	movwf	POS_CURSOR@columna^(0+1280),c
   445   002860  0E01               	movlw	1
   446   002862  EC94  F014         	call	_POS_CURSOR
   447   002866                     
   448                           ;maincode05.c: 117:     ESCRIBE_MENSAJE2("EL52-2 Semana 13");
   449   002866  0E01               	movlw	low STR_1
   450   002868  6E06               	movwf	ESCRIBE_MENSAJE2@cadena^(0+1280),c
   451   00286A  EC26  F016         	call	_ESCRIBE_MENSAJE2	;wreg free
   452   00286E                     
   453                           ;maincode05.c: 118:     POS_CURSOR(2,0);
   454   00286E  0E00               	movlw	0
   455   002870  6E06               	movwf	POS_CURSOR@columna^(0+1280),c
   456   002872  0E02               	movlw	2
   457   002874  EC94  F014         	call	_POS_CURSOR
   458                           
   459                           ;maincode05.c: 119:     ESCRIBE_MENSAJE2(" uC PIC18F57Q43");
   460   002878  0E12               	movlw	low STR_2
   461   00287A  6E06               	movwf	ESCRIBE_MENSAJE2@cadena^(0+1280),c
   462   00287C  EC26  F016         	call	_ESCRIBE_MENSAJE2	;wreg free
   463                           
   464                           ;maincode05.c: 120:     U1_STRING_SEND("Hola");
   465   002880  0E42               	movlw	low STR_3
   466   002882  6E06               	movwf	U1_STRING_SEND@cadena^(0+1280),c
   467   002884  EC04  F016         	call	_U1_STRING_SEND	;wreg free
   468   002888                     
   469                           ;maincode05.c: 121:     U1_NEWLINE();
   470   002888  EC09  F017         	call	_U1_NEWLINE	;wreg free
   471   00288C                     
   472                           ;maincode05.c: 122:     _delay((unsigned long)((3000)*(32000000UL/4000.0)));
   473   00288C  0E7A               	movlw	122
   474   00288E  6E1A               	movwf	(??_main+1)^(0+1280),c
   475   002890  0EC1               	movlw	193
   476   002892  6E19               	movwf	??_main^(0+1280),c
   477   002894  0E82               	movlw	130
   478   002896                     u427:
   479   002896  2EE8               	decfsz	wreg,f,c
   480   002898  D7FE               	bra	u427
   481   00289A  2E19               	decfsz	??_main^(0+1280),f,c
   482   00289C  D7FC               	bra	u427
   483   00289E  2E1A               	decfsz	(??_main+1)^(0+1280),f,c
   484   0028A0  D7FA               	bra	u427
   485   0028A2                     
   486                           ;maincode05.c: 123:     BORRAR_LCD();
   487   0028A2  EC14  F017         	call	_BORRAR_LCD	;wreg free
   488   0028A6                     
   489                           ;maincode05.c: 124:     POS_CURSOR(1,0);
   490   0028A6  0E00               	movlw	0
   491   0028A8  6E06               	movwf	POS_CURSOR@columna^(0+1280),c
   492   0028AA  0E01               	movlw	1
   493   0028AC  EC94  F014         	call	_POS_CURSOR
   494   0028B0                     
   495                           ;maincode05.c: 125:     ESCRIBE_MENSAJE2("  Lectura ADC");
   496   0028B0  0E22               	movlw	low STR_4
   497   0028B2  6E06               	movwf	ESCRIBE_MENSAJE2@cadena^(0+1280),c
   498   0028B4  EC26  F016         	call	_ESCRIBE_MENSAJE2	;wreg free
   499   0028B8                     
   500                           ;maincode05.c: 126:     U1_STRING_SEND("Mundo");
   501   0028B8  0E3C               	movlw	low STR_5
   502   0028BA  6E06               	movwf	U1_STRING_SEND@cadena^(0+1280),c
   503   0028BC  EC04  F016         	call	_U1_STRING_SEND	;wreg free
   504   0028C0                     
   505                           ;maincode05.c: 127:     U1_NEWLINE();
   506   0028C0  EC09  F017         	call	_U1_NEWLINE	;wreg free
   507   0028C4                     l1621:
   508                           
   509                           ;maincode05.c: 129:         POS_CURSOR(2,4);
   510   0028C4  0E04               	movlw	4
   511   0028C6  6E06               	movwf	POS_CURSOR@columna^(0+1280),c
   512   0028C8  0E02               	movlw	2
   513   0028CA  EC94  F014         	call	_POS_CURSOR
   514   0028CE                     
   515                           ;maincode05.c: 130:         unsigned int lectura_adc;;maincode05.c: 131:         lectura
      +                          _adc = tomamuestra_ADC(0x00);
   516   0028CE  0E00               	movlw	0
   517   0028D0  ECCF  F016         	call	_tomamuestra_ADC
   518   0028D4  C503  F51B         	movff	?_tomamuestra_ADC,main@lectura_adc
   519   0028D8  C504  F51C         	movff	?_tomamuestra_ADC+1,main@lectura_adc+1
   520   0028DC                     
   521                           ;maincode05.c: 132:         LCD_ESCRIBE_VAR_INT(lectura_adc,4);
   522   0028DC  C51B  F50F         	movff	main@lectura_adc,LCD_ESCRIBE_VAR_INT@numero
   523   0028E0  C51C  F510         	movff	main@lectura_adc+1,LCD_ESCRIBE_VAR_INT@numero+1
   524   0028E4  0E04               	movlw	4
   525   0028E6  6E11               	movwf	LCD_ESCRIBE_VAR_INT@n_digitos^(0+1280),c
   526   0028E8  EC68  F013         	call	_LCD_ESCRIBE_VAR_INT	;wreg free
   527   0028EC                     
   528                           ;maincode05.c: 133:         U1_STRING_SEND("Canal ANA0:");
   529   0028EC  0E30               	movlw	low STR_6
   530   0028EE  6E06               	movwf	U1_STRING_SEND@cadena^(0+1280),c
   531   0028F0  EC04  F016         	call	_U1_STRING_SEND	;wreg free
   532   0028F4                     
   533                           ;maincode05.c: 134:         U1_VAR_INT_SEND(lectura_adc,4);
   534   0028F4  C51B  F50F         	movff	main@lectura_adc,U1_VAR_INT_SEND@numero
   535   0028F8  C51C  F510         	movff	main@lectura_adc+1,U1_VAR_INT_SEND@numero+1
   536   0028FC  0E04               	movlw	4
   537   0028FE  6E11               	movwf	U1_VAR_INT_SEND@n_digitos^(0+1280),c
   538   002900  ECA4  F012         	call	_U1_VAR_INT_SEND	;wreg free
   539   002904                     
   540                           ;maincode05.c: 135:         U1_NEWLINE();
   541   002904  EC09  F017         	call	_U1_NEWLINE	;wreg free
   542   002908                     
   543                           ;maincode05.c: 136:         _delay((unsigned long)((25)*(32000000UL/4000.0)));
   544   002908  0E02               	movlw	2
   545   00290A  6E1A               	movwf	(??_main+1)^(0+1280),c
   546   00290C  0E04               	movlw	4
   547   00290E  6E19               	movwf	??_main^(0+1280),c
   548   002910  0EBA               	movlw	186
   549   002912                     u437:
   550   002912  2EE8               	decfsz	wreg,f,c
   551   002914  D7FE               	bra	u437
   552   002916  2E19               	decfsz	??_main^(0+1280),f,c
   553   002918  D7FC               	bra	u437
   554   00291A  2E1A               	decfsz	(??_main+1)^(0+1280),f,c
   555   00291C  D7FA               	bra	u437
   556   00291E  D000               	nop2	
   557   002920  EF62  F014         	goto	l1621
   558   002924  EF81  F000         	goto	start
   559   002928                     __end_of_main:
   560                           	callstack 0
   561                           
   562 ;; *************** function _tomamuestra_ADC *****************
   563 ;; Defined at:
   564 ;;		line 50 in file "maincode05.c"
   565 ;; Parameters:    Size  Location     Type
   566 ;;  canal           1    wreg     unsigned char 
   567 ;; Auto vars:     Size  Location     Type
   568 ;;  canal           1    6[COMRAM] unsigned char 
   569 ;; Return value:  Size  Location     Type
   570 ;;                  2    2[COMRAM] unsigned int 
   571 ;; Registers used:
   572 ;;		wreg, status,2, status,0
   573 ;; Tracked objects:
   574 ;;		On entry : 0/0
   575 ;;		On exit  : 0/0
   576 ;;		Unchanged: 0/0
   577 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   578 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   579 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   580 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   581 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   582 ;;Total ram usage:        5 bytes
   583 ;; Hardware stack levels used: 1
   584 ;; Hardware stack levels required when called: 1
   585 ;; This function calls:
   586 ;;		Nothing
   587 ;; This function is called by:
   588 ;;		_main
   589 ;; This function uses a non-reentrant model
   590 ;;
   591                           
   592                           	psect	text1
   593   002D9E                     __ptext1:
   594                           	callstack 0
   595   002D9E                     _tomamuestra_ADC:
   596                           	callstack 125
   597                           
   598                           ;incstack = 0
   599                           ;tomamuestra_ADC@canal stored from wreg
   600   002D9E  6E07               	movwf	tomamuestra_ADC@canal^(0+1280),c
   601   002DA0                     
   602                           ;maincode05.c: 51:     ADPCH = canal;
   603   002DA0  C507  F3EC         	movff	tomamuestra_ADC@canal,1004	;volatile
   604   002DA4                     
   605                           ;maincode05.c: 52:     ADCON0bits.GO = 1;
   606   002DA4  0103               	movlb	3	; () banked
   607   002DA6  81F3               	bsf	243,0,b	;volatile
   608   002DA8                     l212:
   609                           
   610                           ; BSR set to: 3
   611   002DA8  B1F3               	btfsc	243,0,b	;volatile
   612   002DAA  EFD9  F016         	goto	u401
   613   002DAE  EFDB  F016         	goto	u400
   614   002DB2                     u401:
   615   002DB2  EFD4  F016         	goto	l212
   616   002DB6                     u400:
   617   002DB6                     
   618                           ; BSR set to: 3
   619                           ;maincode05.c: 54:     return (ADRESH << 8) + ADRESL;
   620   002DB6  51EB               	movf	235,w,b	;volatile
   621   002DB8  6E06               	movwf	(??_tomamuestra_ADC+1)^(0+1280),c
   622   002DBA  6A05               	clrf	??_tomamuestra_ADC^(0+1280),c
   623   002DBC  51EA               	movf	234,w,b	;volatile
   624   002DBE  2405               	addwf	??_tomamuestra_ADC^(0+1280),w,c
   625   002DC0  6E03               	movwf	?_tomamuestra_ADC^(0+1280),c
   626   002DC2  0E00               	movlw	0
   627   002DC4  2006               	addwfc	(??_tomamuestra_ADC+1)^(0+1280),w,c
   628   002DC6  6E04               	movwf	(?_tomamuestra_ADC+1)^(0+1280),c
   629   002DC8                     
   630                           ; BSR set to: 3
   631   002DC8  0012               	return		;funcret
   632   002DCA                     __end_of_tomamuestra_ADC:
   633                           	callstack 0
   634                           
   635 ;; *************** function _configuro *****************
   636 ;; Defined at:
   637 ;;		line 7 in file "maincode05.c"
   638 ;; Parameters:    Size  Location     Type
   639 ;;		None
   640 ;; Auto vars:     Size  Location     Type
   641 ;;		None
   642 ;; Return value:  Size  Location     Type
   643 ;;                  1    wreg      void 
   644 ;; Registers used:
   645 ;;		wreg, status,2, status,0, cstack
   646 ;; Tracked objects:
   647 ;;		On entry : 0/0
   648 ;;		On exit  : 0/0
   649 ;;		Unchanged: 0/0
   650 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   651 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   652 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   653 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   654 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   655 ;;Total ram usage:        0 bytes
   656 ;; Hardware stack levels used: 1
   657 ;; Hardware stack levels required when called: 5
   658 ;; This function calls:
   659 ;;		_LCD_INIT
   660 ;; This function is called by:
   661 ;;		_main
   662 ;; This function uses a non-reentrant model
   663 ;;
   664                           
   665                           	psect	text2
   666   002A88                     __ptext2:
   667                           	callstack 0
   668   002A88                     _configuro:
   669                           	callstack 121
   670   002A88                     
   671                           ;maincode05.c: 9:     OSCCON1 = 0x60;
   672   002A88  0E60               	movlw	96
   673   002A8A  0100               	movlb	0	; () banked
   674   002A8C  6FAD               	movwf	173,b	;volatile
   675                           
   676                           ;maincode05.c: 10:     OSCFRQ = 0x06;
   677   002A8E  0E06               	movlw	6
   678   002A90  6FB1               	movwf	177,b	;volatile
   679                           
   680                           ;maincode05.c: 11:     OSCEN = 0x40;
   681   002A92  0E40               	movlw	64
   682   002A94  6FB3               	movwf	179,b	;volatile
   683   002A96                     
   684                           ; BSR set to: 0
   685                           ;maincode05.c: 13:     TRISAbits.TRISA0 = 1;
   686   002A96  80C6               	bsf	198,0,c	;volatile
   687   002A98                     
   688                           ; BSR set to: 0
   689                           ;maincode05.c: 14:     ANSELAbits.ANSELA0 = 1;
   690   002A98  0104               	movlb	4	; () banked
   691   002A9A  8100               	bsf	0,0,b	;volatile
   692   002A9C                     
   693                           ; BSR set to: 4
   694                           ;maincode05.c: 15:     TRISBbits.TRISB0 = 1;
   695   002A9C  80C7               	bsf	199,0,c	;volatile
   696   002A9E                     
   697                           ; BSR set to: 4
   698                           ;maincode05.c: 16:     ANSELBbits.ANSELB0 = 0;
   699   002A9E  9108               	bcf	8,0,b	;volatile
   700   002AA0                     
   701                           ; BSR set to: 4
   702                           ;maincode05.c: 17:     WPUBbits.WPUB0 = 1;
   703   002AA0  8109               	bsf	9,0,b	;volatile
   704   002AA2                     
   705                           ; BSR set to: 4
   706                           ;maincode05.c: 18:     TRISBbits.TRISB1 = 1;
   707   002AA2  82C7               	bsf	199,1,c	;volatile
   708   002AA4                     
   709                           ; BSR set to: 4
   710                           ;maincode05.c: 19:     ANSELBbits.ANSELB1 = 0;
   711   002AA4  9308               	bcf	8,1,b	;volatile
   712   002AA6                     
   713                           ; BSR set to: 4
   714                           ;maincode05.c: 20:     WPUBbits.WPUB1 = 1;
   715   002AA6  8309               	bsf	9,1,b	;volatile
   716   002AA8                     
   717                           ; BSR set to: 4
   718                           ;maincode05.c: 21:     TRISCbits.TRISC0 = 0;
   719   002AA8  90C8               	bcf	200,0,c	;volatile
   720   002AAA                     
   721                           ; BSR set to: 4
   722                           ;maincode05.c: 22:     ANSELCbits.ANSELC0 = 0;
   723   002AAA  9110               	bcf	16,0,b	;volatile
   724   002AAC                     
   725                           ; BSR set to: 4
   726                           ;maincode05.c: 23:     TRISCbits.TRISC1 = 0;
   727   002AAC  92C8               	bcf	200,1,c	;volatile
   728   002AAE                     
   729                           ; BSR set to: 4
   730                           ;maincode05.c: 24:     ANSELCbits.ANSELC1 = 0;
   731   002AAE  9310               	bcf	16,1,b	;volatile
   732   002AB0                     
   733                           ; BSR set to: 4
   734                           ;maincode05.c: 25:     TRISFbits.TRISF0 = 0;
   735   002AB0  90CB               	bcf	203,0,c	;volatile
   736   002AB2                     
   737                           ; BSR set to: 4
   738                           ;maincode05.c: 26:     ANSELFbits.ANSELF0 = 0;
   739   002AB2  9128               	bcf	40,0,b	;volatile
   740   002AB4                     
   741                           ; BSR set to: 4
   742                           ;maincode05.c: 27:     TRISFbits.TRISF1 = 1;
   743   002AB4  82CB               	bsf	203,1,c	;volatile
   744   002AB6                     
   745                           ; BSR set to: 4
   746                           ;maincode05.c: 28:     ANSELFbits.ANSELF1 = 0;
   747   002AB6  9328               	bcf	40,1,b	;volatile
   748                           
   749                           ;maincode05.c: 30:     ADCON0bits.ADFM = 1;
   750   002AB8  0103               	movlb	3	; () banked
   751   002ABA  51F3               	movf	243,w,b	;volatile
   752   002ABC  0BF3               	andlw	-13
   753   002ABE  0904               	iorlw	4
   754   002AC0  6FF3               	movwf	243,b	;volatile
   755   002AC2                     
   756                           ; BSR set to: 3
   757                           ;maincode05.c: 31:     ADCON0bits.CS = 1;
   758   002AC2  89F3               	bsf	243,4,b	;volatile
   759                           
   760                           ;maincode05.c: 32:     ADPCH = 0x00;
   761   002AC4  0E00               	movlw	0
   762   002AC6  6FEC               	movwf	236,b	;volatile
   763   002AC8                     
   764                           ; BSR set to: 3
   765                           ;maincode05.c: 33:     ADCON0bits.ADON = 1;
   766   002AC8  8FF3               	bsf	243,7,b	;volatile
   767                           
   768                           ;maincode05.c: 35:     U1BRGH = 0;
   769   002ACA  0E00               	movlw	0
   770   002ACC  0102               	movlb	2	; () banked
   771   002ACE  6FAF               	movwf	175,b	;volatile
   772                           
   773                           ;maincode05.c: 36:     U1BRGL = 207;
   774   002AD0  0ECF               	movlw	207
   775   002AD2  6FAE               	movwf	174,b	;volatile
   776                           
   777                           ;maincode05.c: 37:     U1CON0 = 0x30;
   778   002AD4  0E30               	movlw	48
   779   002AD6  6FAB               	movwf	171,b	;volatile
   780                           
   781                           ;maincode05.c: 38:     U1CON1 = 0x80;
   782   002AD8  0E80               	movlw	128
   783   002ADA  6FAC               	movwf	172,b	;volatile
   784                           
   785                           ;maincode05.c: 39:     U1CON2 = 0x00;
   786   002ADC  0E00               	movlw	0
   787   002ADE  6FAD               	movwf	173,b	;volatile
   788                           
   789                           ;maincode05.c: 40:     RF0PPS = 0x20;
   790   002AE0  0E20               	movlw	32
   791   002AE2  6F29               	movwf	41,b	;volatile
   792                           
   793                           ;maincode05.c: 41:     U1RXPPS = 0x29;
   794   002AE4  0E29               	movlw	41
   795   002AE6  6F72               	movwf	114,b	;volatile
   796   002AE8                     
   797                           ; BSR set to: 2
   798                           ;maincode05.c: 43:     PIE4bits.U1RXIE = 1;
   799   002AE8  80A2               	bsf	162,0,c	;volatile
   800   002AEA                     
   801                           ; BSR set to: 2
   802                           ;maincode05.c: 44:     PIR4bits.U1RXIF = 0;
   803   002AEA  90B2               	bcf	178,0,c	;volatile
   804   002AEC                     
   805                           ; BSR set to: 2
   806                           ;maincode05.c: 45:     INTCON0bits.GIE = 1;
   807   002AEC  8ED6               	bsf	214,7,c	;volatile
   808   002AEE                     
   809                           ; BSR set to: 2
   810                           ;maincode05.c: 47:     LCD_INIT();
   811   002AEE  EC48  F016         	call	_LCD_INIT	;wreg free
   812   002AF2  0012               	return		;funcret
   813   002AF4                     __end_of_configuro:
   814                           	callstack 0
   815                           
   816 ;; *************** function _LCD_INIT *****************
   817 ;; Defined at:
   818 ;;		line 192 in file "LCD.c"
   819 ;; Parameters:    Size  Location     Type
   820 ;;		None
   821 ;; Auto vars:     Size  Location     Type
   822 ;;		None
   823 ;; Return value:  Size  Location     Type
   824 ;;                  1    wreg      void 
   825 ;; Registers used:
   826 ;;		wreg, status,2, status,0, cstack
   827 ;; Tracked objects:
   828 ;;		On entry : 0/0
   829 ;;		On exit  : 0/0
   830 ;;		Unchanged: 0/0
   831 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   832 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   833 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   834 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   835 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   836 ;;Total ram usage:        1 bytes
   837 ;; Hardware stack levels used: 1
   838 ;; Hardware stack levels required when called: 4
   839 ;; This function calls:
   840 ;;		_BORRAR_LCD
   841 ;;		_CURSOR_HOME
   842 ;;		_CURSOR_ONOFF
   843 ;;		_LCD_CONFIG
   844 ;; This function is called by:
   845 ;;		_configuro
   846 ;; This function uses a non-reentrant model
   847 ;;
   848                           
   849                           	psect	text3
   850   002C90                     __ptext3:
   851                           	callstack 0
   852   002C90                     _LCD_INIT:
   853                           	callstack 121
   854   002C90                     
   855                           ;LCD.c: 193:     TRISD = 0x00;
   856   002C90  0E00               	movlw	0
   857   002C92  6EC9               	movwf	201,c	;volatile
   858                           
   859                           ;LCD.c: 194:     ANSELD = 0x00;
   860   002C94  0E00               	movlw	0
   861   002C96  0104               	movlb	4	; () banked
   862   002C98  6F18               	movwf	24,b	;volatile
   863   002C9A                     
   864                           ; BSR set to: 4
   865                           ;LCD.c: 195:     _delay((unsigned long)((15)*(32000000UL/4000.0)));
   866   002C9A  0E9C               	movlw	156
   867   002C9C  6E07               	movwf	??_LCD_INIT^(0+1280),c
   868   002C9E  0ED7               	movlw	215
   869   002CA0                     u447:
   870   002CA0  2EE8               	decfsz	wreg,f,c
   871   002CA2  D7FE               	bra	u447
   872   002CA4  2E07               	decfsz	??_LCD_INIT^(0+1280),f,c
   873   002CA6  D7FC               	bra	u447
   874   002CA8  0000               	nop	
   875   002CAA                     
   876                           ;LCD.c: 196:     LCD_CONFIG();
   877   002CAA  ECDA  F015         	call	_LCD_CONFIG	;wreg free
   878   002CAE                     
   879                           ;LCD.c: 197:     _delay((unsigned long)((15)*(32000000UL/4000.0)));
   880   002CAE  0E9C               	movlw	156
   881   002CB0  6E07               	movwf	??_LCD_INIT^(0+1280),c
   882   002CB2  0ED7               	movlw	215
   883   002CB4                     u457:
   884   002CB4  2EE8               	decfsz	wreg,f,c
   885   002CB6  D7FE               	bra	u457
   886   002CB8  2E07               	decfsz	??_LCD_INIT^(0+1280),f,c
   887   002CBA  D7FC               	bra	u457
   888   002CBC  0000               	nop	
   889   002CBE                     
   890                           ;LCD.c: 198:     BORRAR_LCD();
   891   002CBE  EC14  F017         	call	_BORRAR_LCD	;wreg free
   892   002CC2                     
   893                           ;LCD.c: 199:     CURSOR_HOME();
   894   002CC2  EC10  F017         	call	_CURSOR_HOME	;wreg free
   895   002CC6                     
   896                           ;LCD.c: 200:     CURSOR_ONOFF(1);
   897   002CC6  0E01               	movlw	1
   898   002CC8  ECB7  F016         	call	_CURSOR_ONOFF
   899   002CCC  0012               	return		;funcret
   900   002CCE                     __end_of_LCD_INIT:
   901                           	callstack 0
   902                           
   903 ;; *************** function _LCD_CONFIG *****************
   904 ;; Defined at:
   905 ;;		line 109 in file "LCD.c"
   906 ;; Parameters:    Size  Location     Type
   907 ;;		None
   908 ;; Auto vars:     Size  Location     Type
   909 ;;		None
   910 ;; Return value:  Size  Location     Type
   911 ;;                  1    wreg      void 
   912 ;; Registers used:
   913 ;;		wreg, status,2, status,0, cstack
   914 ;; Tracked objects:
   915 ;;		On entry : 0/0
   916 ;;		On exit  : 0/0
   917 ;;		Unchanged: 0/0
   918 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   919 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   920 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   921 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   922 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   923 ;;Total ram usage:        1 bytes
   924 ;; Hardware stack levels used: 1
   925 ;; Hardware stack levels required when called: 3
   926 ;; This function calls:
   927 ;;		_ENVIA_LCD_CMD
   928 ;;		_ENVIA_NIBBLE
   929 ;; This function is called by:
   930 ;;		_LCD_INIT
   931 ;; This function uses a non-reentrant model
   932 ;;
   933                           
   934                           	psect	text4
   935   002BB4                     __ptext4:
   936                           	callstack 0
   937   002BB4                     _LCD_CONFIG:
   938                           	callstack 121
   939   002BB4                     
   940                           ;LCD.c: 111:  LATDbits.LATD0 = 0;
   941   002BB4  90C1               	bcf	193,0,c	;volatile
   942                           
   943                           ;LCD.c: 112:  LATDbits.LATD1 = 0;
   944   002BB6  92C1               	bcf	193,1,c	;volatile
   945   002BB8                     
   946                           ;LCD.c: 113:  ENVIA_NIBBLE(0x30);
   947   002BB8  0E30               	movlw	48
   948   002BBA  ECE5  F016         	call	_ENVIA_NIBBLE
   949   002BBE                     
   950                           ;LCD.c: 114:     _delay((unsigned long)((2)*(32000000UL/4000.0)));
   951   002BBE  0E15               	movlw	21
   952   002BC0  6E06               	movwf	??_LCD_CONFIG^(0+1280),c
   953   002BC2  0EC6               	movlw	198
   954   002BC4                     u467:
   955   002BC4  2EE8               	decfsz	wreg,f,c
   956   002BC6  D7FE               	bra	u467
   957   002BC8  2E06               	decfsz	??_LCD_CONFIG^(0+1280),f,c
   958   002BCA  D7FC               	bra	u467
   959   002BCC  D000               	nop2	
   960   002BCE                     
   961                           ;LCD.c: 115:  ENVIA_NIBBLE(0x30);
   962   002BCE  0E30               	movlw	48
   963   002BD0  ECE5  F016         	call	_ENVIA_NIBBLE
   964                           
   965                           ;LCD.c: 116:     _delay((unsigned long)((100)*(32000000UL/4000000.0)));
   966   002BD4  0EA0               	movlw	160
   967   002BD6                     u477:
   968   002BD6  D000               	nop2	
   969   002BD8  2EE8               	decfsz	wreg,f,c
   970   002BDA  D7FD               	bra	u477
   971   002BDC                     
   972                           ;LCD.c: 117:     ENVIA_NIBBLE(0x30);
   973   002BDC  0E30               	movlw	48
   974   002BDE  ECE5  F016         	call	_ENVIA_NIBBLE
   975   002BE2                     
   976                           ;LCD.c: 118:  ENVIA_NIBBLE(0x20);
   977   002BE2  0E20               	movlw	32
   978   002BE4  ECE5  F016         	call	_ENVIA_NIBBLE
   979   002BE8                     
   980                           ;LCD.c: 119:  ENVIA_LCD_CMD(0x01);
   981   002BE8  0E01               	movlw	1
   982   002BEA  EC83  F016         	call	_ENVIA_LCD_CMD
   983   002BEE                     
   984                           ;LCD.c: 120:  ENVIA_LCD_CMD(0x28);
   985   002BEE  0E28               	movlw	40
   986   002BF0  EC83  F016         	call	_ENVIA_LCD_CMD
   987   002BF4                     
   988                           ;LCD.c: 121:  ENVIA_LCD_CMD(0x0F);
   989   002BF4  0E0F               	movlw	15
   990   002BF6  EC83  F016         	call	_ENVIA_LCD_CMD
   991   002BFA                     
   992                           ;LCD.c: 122:  ENVIA_LCD_CMD(0x06);
   993   002BFA  0E06               	movlw	6
   994   002BFC  EC83  F016         	call	_ENVIA_LCD_CMD
   995   002C00                     
   996                           ;LCD.c: 123:  ENVIA_LCD_CMD(0x01);
   997   002C00  0E01               	movlw	1
   998   002C02  EC83  F016         	call	_ENVIA_LCD_CMD
   999   002C06  0012               	return		;funcret
  1000   002C08                     __end_of_LCD_CONFIG:
  1001                           	callstack 0
  1002                           
  1003 ;; *************** function _CURSOR_ONOFF *****************
  1004 ;; Defined at:
  1005 ;;		line 62 in file "LCD.c"
  1006 ;; Parameters:    Size  Location     Type
  1007 ;;  estado          1    wreg     unsigned char 
  1008 ;; Auto vars:     Size  Location     Type
  1009 ;;  estado          1    5[COMRAM] unsigned char 
  1010 ;; Return value:  Size  Location     Type
  1011 ;;                  1    wreg      void 
  1012 ;; Registers used:
  1013 ;;		wreg, status,2, status,0, cstack
  1014 ;; Tracked objects:
  1015 ;;		On entry : 0/0
  1016 ;;		On exit  : 0/0
  1017 ;;		Unchanged: 0/0
  1018 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1019 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1020 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1021 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1022 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1023 ;;Total ram usage:        1 bytes
  1024 ;; Hardware stack levels used: 1
  1025 ;; Hardware stack levels required when called: 3
  1026 ;; This function calls:
  1027 ;;		_ENVIA_LCD_CMD
  1028 ;; This function is called by:
  1029 ;;		_LCD_INIT
  1030 ;; This function uses a non-reentrant model
  1031 ;;
  1032                           
  1033                           	psect	text5
  1034   002D6E                     __ptext5:
  1035                           	callstack 0
  1036   002D6E                     _CURSOR_ONOFF:
  1037                           	callstack 121
  1038                           
  1039                           ;incstack = 0
  1040                           ;CURSOR_ONOFF@estado stored from wreg
  1041   002D6E  6E06               	movwf	CURSOR_ONOFF@estado^(0+1280),c
  1042   002D70                     
  1043                           ;LCD.c: 62: void CURSOR_ONOFF(unsigned char estado);LCD.c: 63: {;LCD.c: 64:  if(estado =
      +                          = 0) ENVIA_LCD_CMD(0x0E);
  1044   002D70  5006               	movf	CURSOR_ONOFF@estado^(0+1280),w,c
  1045   002D72  A4D8               	btfss	status,2,c
  1046   002D74  EFBE  F016         	goto	u21
  1047   002D78  EFC0  F016         	goto	u20
  1048   002D7C                     u21:
  1049   002D7C  EFC3  F016         	goto	l1015
  1050   002D80                     u20:
  1051   002D80  0E0E               	movlw	14
  1052   002D82  EC83  F016         	call	_ENVIA_LCD_CMD
  1053   002D86                     l1015:
  1054                           
  1055                           ;LCD.c: 65:  if(estado == 1) ENVIA_LCD_CMD(0x0C);
  1056   002D86  0406               	decf	CURSOR_ONOFF@estado^(0+1280),w,c
  1057   002D88  A4D8               	btfss	status,2,c
  1058   002D8A  EFC9  F016         	goto	u31
  1059   002D8E  EFCB  F016         	goto	u30
  1060   002D92                     u31:
  1061   002D92  EFCE  F016         	goto	l62
  1062   002D96                     u30:
  1063   002D96  0E0C               	movlw	12
  1064   002D98  EC83  F016         	call	_ENVIA_LCD_CMD
  1065   002D9C                     l62:
  1066   002D9C  0012               	return		;funcret
  1067   002D9E                     __end_of_CURSOR_ONOFF:
  1068                           	callstack 0
  1069                           
  1070 ;; *************** function _CURSOR_HOME *****************
  1071 ;; Defined at:
  1072 ;;		line 37 in file "LCD.c"
  1073 ;; Parameters:    Size  Location     Type
  1074 ;;		None
  1075 ;; Auto vars:     Size  Location     Type
  1076 ;;		None
  1077 ;; Return value:  Size  Location     Type
  1078 ;;                  1    wreg      void 
  1079 ;; Registers used:
  1080 ;;		wreg, status,2, status,0, cstack
  1081 ;; Tracked objects:
  1082 ;;		On entry : 0/0
  1083 ;;		On exit  : 0/0
  1084 ;;		Unchanged: 0/0
  1085 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1086 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1087 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1088 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1089 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1090 ;;Total ram usage:        0 bytes
  1091 ;; Hardware stack levels used: 1
  1092 ;; Hardware stack levels required when called: 3
  1093 ;; This function calls:
  1094 ;;		_ENVIA_LCD_CMD
  1095 ;; This function is called by:
  1096 ;;		_LCD_INIT
  1097 ;; This function uses a non-reentrant model
  1098 ;;
  1099                           
  1100                           	psect	text6
  1101   002E20                     __ptext6:
  1102                           	callstack 0
  1103   002E20                     _CURSOR_HOME:
  1104                           	callstack 121
  1105   002E20                     
  1106                           ;LCD.c: 39:  ENVIA_LCD_CMD(0x02);
  1107   002E20  0E02               	movlw	2
  1108   002E22  EC83  F016         	call	_ENVIA_LCD_CMD
  1109   002E26  0012               	return		;funcret
  1110   002E28                     __end_of_CURSOR_HOME:
  1111                           	callstack 0
  1112                           
  1113 ;; *************** function _BORRAR_LCD *****************
  1114 ;; Defined at:
  1115 ;;		line 104 in file "LCD.c"
  1116 ;; Parameters:    Size  Location     Type
  1117 ;;		None
  1118 ;; Auto vars:     Size  Location     Type
  1119 ;;		None
  1120 ;; Return value:  Size  Location     Type
  1121 ;;                  1    wreg      void 
  1122 ;; Registers used:
  1123 ;;		wreg, status,2, status,0, cstack
  1124 ;; Tracked objects:
  1125 ;;		On entry : 0/0
  1126 ;;		On exit  : 0/0
  1127 ;;		Unchanged: 0/0
  1128 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1129 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1130 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1131 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1132 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1133 ;;Total ram usage:        0 bytes
  1134 ;; Hardware stack levels used: 1
  1135 ;; Hardware stack levels required when called: 3
  1136 ;; This function calls:
  1137 ;;		_ENVIA_LCD_CMD
  1138 ;; This function is called by:
  1139 ;;		_LCD_INIT
  1140 ;;		_main
  1141 ;; This function uses a non-reentrant model
  1142 ;;
  1143                           
  1144                           	psect	text7
  1145   002E28                     __ptext7:
  1146                           	callstack 0
  1147   002E28                     _BORRAR_LCD:
  1148                           	callstack 121
  1149   002E28                     
  1150                           ;LCD.c: 106:  ENVIA_LCD_CMD(0x01);
  1151   002E28  0E01               	movlw	1
  1152   002E2A  EC83  F016         	call	_ENVIA_LCD_CMD
  1153   002E2E  0012               	return		;funcret
  1154   002E30                     __end_of_BORRAR_LCD:
  1155                           	callstack 0
  1156                           
  1157 ;; *************** function _U1_VAR_INT_SEND *****************
  1158 ;; Defined at:
  1159 ;;		line 73 in file "maincode05.c"
  1160 ;; Parameters:    Size  Location     Type
  1161 ;;  numero          2   14[COMRAM] unsigned int 
  1162 ;;  n_digitos       1   16[COMRAM] unsigned char 
  1163 ;; Auto vars:     Size  Location     Type
  1164 ;;  unidad          1   23[COMRAM] unsigned char 
  1165 ;;  decena          1   22[COMRAM] unsigned char 
  1166 ;;  centena         1   21[COMRAM] unsigned char 
  1167 ;;  millar          1   20[COMRAM] unsigned char 
  1168 ;;  d_millar        1   19[COMRAM] unsigned char 
  1169 ;; Return value:  Size  Location     Type
  1170 ;;                  1    wreg      void 
  1171 ;; Registers used:
  1172 ;;		wreg, status,2, status,0, cstack
  1173 ;; Tracked objects:
  1174 ;;		On entry : 0/0
  1175 ;;		On exit  : 0/0
  1176 ;;		Unchanged: 0/0
  1177 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1178 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1179 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1180 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1181 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1182 ;;Total ram usage:       10 bytes
  1183 ;; Hardware stack levels used: 1
  1184 ;; Hardware stack levels required when called: 2
  1185 ;; This function calls:
  1186 ;;		_U1_BYTE_SEND
  1187 ;;		___lwdiv
  1188 ;;		___lwmod
  1189 ;; This function is called by:
  1190 ;;		_main
  1191 ;; This function uses a non-reentrant model
  1192 ;;
  1193                           
  1194                           	psect	text8
  1195   002548                     __ptext8:
  1196                           	callstack 0
  1197   002548                     _U1_VAR_INT_SEND:
  1198                           	callstack 124
  1199   002548                     
  1200                           ;maincode05.c: 74:     unsigned char d_millar, millar, centena, decena, unidad;;maincode
      +                          05.c: 75:     d_millar = numero / 10000;
  1201   002548  C50F  F508         	movff	U1_VAR_INT_SEND@numero,___lwdiv@dividend
  1202   00254C  C510  F509         	movff	U1_VAR_INT_SEND@numero+1,___lwdiv@dividend+1
  1203   002550  0E27               	movlw	39
  1204   002552  6E0B               	movwf	(___lwdiv@divisor+1)^(0+1280),c
  1205   002554  0E10               	movlw	16
  1206   002556  6E0A               	movwf	___lwdiv@divisor^(0+1280),c
  1207   002558  ECD1  F014         	call	___lwdiv	;wreg free
  1208   00255C  5008               	movf	?___lwdiv^(0+1280),w,c
  1209   00255E  6E14               	movwf	U1_VAR_INT_SEND@d_millar^(0+1280),c
  1210                           
  1211                           ;maincode05.c: 76:     millar = (numero % 10000) / 1000;
  1212   002560  0E27               	movlw	39
  1213   002562  6E06               	movwf	(___lwmod@divisor+1)^(0+1280),c
  1214   002564  0E10               	movlw	16
  1215   002566  6E05               	movwf	___lwmod@divisor^(0+1280),c
  1216   002568  C50F  F503         	movff	U1_VAR_INT_SEND@numero,___lwmod@dividend
  1217   00256C  C510  F504         	movff	U1_VAR_INT_SEND@numero+1,___lwmod@dividend+1
  1218   002570  EC7A  F015         	call	___lwmod	;wreg free
  1219   002574  C503  F508         	movff	?___lwmod,___lwdiv@dividend
  1220   002578  C504  F509         	movff	?___lwmod+1,___lwdiv@dividend+1
  1221   00257C  0E03               	movlw	3
  1222   00257E  6E0B               	movwf	(___lwdiv@divisor+1)^(0+1280),c
  1223   002580  0EE8               	movlw	232
  1224   002582  6E0A               	movwf	___lwdiv@divisor^(0+1280),c
  1225   002584  ECD1  F014         	call	___lwdiv	;wreg free
  1226   002588  5008               	movf	?___lwdiv^(0+1280),w,c
  1227   00258A  6E15               	movwf	U1_VAR_INT_SEND@millar^(0+1280),c
  1228                           
  1229                           ;maincode05.c: 77:     centena = (numero % 1000) / 100;
  1230   00258C  0E03               	movlw	3
  1231   00258E  6E06               	movwf	(___lwmod@divisor+1)^(0+1280),c
  1232   002590  0EE8               	movlw	232
  1233   002592  6E05               	movwf	___lwmod@divisor^(0+1280),c
  1234   002594  C50F  F503         	movff	U1_VAR_INT_SEND@numero,___lwmod@dividend
  1235   002598  C510  F504         	movff	U1_VAR_INT_SEND@numero+1,___lwmod@dividend+1
  1236   00259C  EC7A  F015         	call	___lwmod	;wreg free
  1237   0025A0  C503  F508         	movff	?___lwmod,___lwdiv@dividend
  1238   0025A4  C504  F509         	movff	?___lwmod+1,___lwdiv@dividend+1
  1239   0025A8  0E00               	movlw	0
  1240   0025AA  6E0B               	movwf	(___lwdiv@divisor+1)^(0+1280),c
  1241   0025AC  0E64               	movlw	100
  1242   0025AE  6E0A               	movwf	___lwdiv@divisor^(0+1280),c
  1243   0025B0  ECD1  F014         	call	___lwdiv	;wreg free
  1244   0025B4  5008               	movf	?___lwdiv^(0+1280),w,c
  1245   0025B6  6E16               	movwf	U1_VAR_INT_SEND@centena^(0+1280),c
  1246                           
  1247                           ;maincode05.c: 78:     decena = (numero % 100) / 10;
  1248   0025B8  0E00               	movlw	0
  1249   0025BA  6E06               	movwf	(___lwmod@divisor+1)^(0+1280),c
  1250   0025BC  0E64               	movlw	100
  1251   0025BE  6E05               	movwf	___lwmod@divisor^(0+1280),c
  1252   0025C0  C50F  F503         	movff	U1_VAR_INT_SEND@numero,___lwmod@dividend
  1253   0025C4  C510  F504         	movff	U1_VAR_INT_SEND@numero+1,___lwmod@dividend+1
  1254   0025C8  EC7A  F015         	call	___lwmod	;wreg free
  1255   0025CC  C503  F508         	movff	?___lwmod,___lwdiv@dividend
  1256   0025D0  C504  F509         	movff	?___lwmod+1,___lwdiv@dividend+1
  1257   0025D4  0E00               	movlw	0
  1258   0025D6  6E0B               	movwf	(___lwdiv@divisor+1)^(0+1280),c
  1259   0025D8  0E0A               	movlw	10
  1260   0025DA  6E0A               	movwf	___lwdiv@divisor^(0+1280),c
  1261   0025DC  ECD1  F014         	call	___lwdiv	;wreg free
  1262   0025E0  5008               	movf	?___lwdiv^(0+1280),w,c
  1263   0025E2  6E17               	movwf	U1_VAR_INT_SEND@decena^(0+1280),c
  1264                           
  1265                           ;maincode05.c: 79:     unidad = numero % 10;
  1266   0025E4  C50F  F503         	movff	U1_VAR_INT_SEND@numero,___lwmod@dividend
  1267   0025E8  C510  F504         	movff	U1_VAR_INT_SEND@numero+1,___lwmod@dividend+1
  1268   0025EC  0E00               	movlw	0
  1269   0025EE  6E06               	movwf	(___lwmod@divisor+1)^(0+1280),c
  1270   0025F0  0E0A               	movlw	10
  1271   0025F2  6E05               	movwf	___lwmod@divisor^(0+1280),c
  1272   0025F4  EC7A  F015         	call	___lwmod	;wreg free
  1273   0025F8  5003               	movf	?___lwmod^(0+1280),w,c
  1274   0025FA  6E18               	movwf	U1_VAR_INT_SEND@unidad^(0+1280),c
  1275                           
  1276                           ;maincode05.c: 80:     switch(n_digitos){
  1277   0025FC  EF46  F013         	goto	l1595
  1278   002600                     l1583:
  1279                           
  1280                           ;maincode05.c: 82:             U1_BYTE_SEND(unidad+0x30);
  1281   002600  5018               	movf	U1_VAR_INT_SEND@unidad^(0+1280),w,c
  1282   002602  0F30               	addlw	48
  1283   002604  ECF3  F016         	call	_U1_BYTE_SEND
  1284                           
  1285                           ;maincode05.c: 83:             break;
  1286   002608  EF67  F013         	goto	l237
  1287   00260C                     l1585:
  1288                           
  1289                           ;maincode05.c: 85:             U1_BYTE_SEND(decena+0x30);
  1290   00260C  5017               	movf	U1_VAR_INT_SEND@decena^(0+1280),w,c
  1291   00260E  0F30               	addlw	48
  1292   002610  ECF3  F016         	call	_U1_BYTE_SEND
  1293                           
  1294                           ;maincode05.c: 86:             U1_BYTE_SEND(unidad+0x30);
  1295   002614  5018               	movf	U1_VAR_INT_SEND@unidad^(0+1280),w,c
  1296   002616  0F30               	addlw	48
  1297   002618  ECF3  F016         	call	_U1_BYTE_SEND
  1298                           
  1299                           ;maincode05.c: 87:             break;
  1300   00261C  EF67  F013         	goto	l237
  1301   002620                     l1587:
  1302                           
  1303                           ;maincode05.c: 89:             U1_BYTE_SEND(centena+0x30);
  1304   002620  5016               	movf	U1_VAR_INT_SEND@centena^(0+1280),w,c
  1305   002622  0F30               	addlw	48
  1306   002624  ECF3  F016         	call	_U1_BYTE_SEND
  1307                           
  1308                           ;maincode05.c: 90:             U1_BYTE_SEND(decena+0x30);
  1309   002628  5017               	movf	U1_VAR_INT_SEND@decena^(0+1280),w,c
  1310   00262A  0F30               	addlw	48
  1311   00262C  ECF3  F016         	call	_U1_BYTE_SEND
  1312                           
  1313                           ;maincode05.c: 91:             U1_BYTE_SEND(unidad+0x30);
  1314   002630  5018               	movf	U1_VAR_INT_SEND@unidad^(0+1280),w,c
  1315   002632  0F30               	addlw	48
  1316   002634  ECF3  F016         	call	_U1_BYTE_SEND
  1317                           
  1318                           ;maincode05.c: 92:             break;
  1319   002638  EF67  F013         	goto	l237
  1320   00263C                     l1589:
  1321                           
  1322                           ;maincode05.c: 94:             U1_BYTE_SEND(millar+0x30);
  1323   00263C  5015               	movf	U1_VAR_INT_SEND@millar^(0+1280),w,c
  1324   00263E  0F30               	addlw	48
  1325   002640  ECF3  F016         	call	_U1_BYTE_SEND
  1326                           
  1327                           ;maincode05.c: 95:             U1_BYTE_SEND(centena+0x30);
  1328   002644  5016               	movf	U1_VAR_INT_SEND@centena^(0+1280),w,c
  1329   002646  0F30               	addlw	48
  1330   002648  ECF3  F016         	call	_U1_BYTE_SEND
  1331                           
  1332                           ;maincode05.c: 96:             U1_BYTE_SEND(decena+0x30);
  1333   00264C  5017               	movf	U1_VAR_INT_SEND@decena^(0+1280),w,c
  1334   00264E  0F30               	addlw	48
  1335   002650  ECF3  F016         	call	_U1_BYTE_SEND
  1336                           
  1337                           ;maincode05.c: 97:             U1_BYTE_SEND(unidad+0x30);
  1338   002654  5018               	movf	U1_VAR_INT_SEND@unidad^(0+1280),w,c
  1339   002656  0F30               	addlw	48
  1340   002658  ECF3  F016         	call	_U1_BYTE_SEND
  1341                           
  1342                           ;maincode05.c: 98:             break;
  1343   00265C  EF67  F013         	goto	l237
  1344   002660                     l1591:
  1345                           
  1346                           ;maincode05.c: 100:             U1_BYTE_SEND(d_millar+0x30);
  1347   002660  5014               	movf	U1_VAR_INT_SEND@d_millar^(0+1280),w,c
  1348   002662  0F30               	addlw	48
  1349   002664  ECF3  F016         	call	_U1_BYTE_SEND
  1350                           
  1351                           ;maincode05.c: 101:             U1_BYTE_SEND(millar+0x30);
  1352   002668  5015               	movf	U1_VAR_INT_SEND@millar^(0+1280),w,c
  1353   00266A  0F30               	addlw	48
  1354   00266C  ECF3  F016         	call	_U1_BYTE_SEND
  1355                           
  1356                           ;maincode05.c: 102:             U1_BYTE_SEND(centena+0x30);
  1357   002670  5016               	movf	U1_VAR_INT_SEND@centena^(0+1280),w,c
  1358   002672  0F30               	addlw	48
  1359   002674  ECF3  F016         	call	_U1_BYTE_SEND
  1360                           
  1361                           ;maincode05.c: 103:             U1_BYTE_SEND(decena+0x30);
  1362   002678  5017               	movf	U1_VAR_INT_SEND@decena^(0+1280),w,c
  1363   00267A  0F30               	addlw	48
  1364   00267C  ECF3  F016         	call	_U1_BYTE_SEND
  1365                           
  1366                           ;maincode05.c: 104:             U1_BYTE_SEND(unidad+0x30);
  1367   002680  5018               	movf	U1_VAR_INT_SEND@unidad^(0+1280),w,c
  1368   002682  0F30               	addlw	48
  1369   002684  ECF3  F016         	call	_U1_BYTE_SEND
  1370                           
  1371                           ;maincode05.c: 105:             break;
  1372   002688  EF67  F013         	goto	l237
  1373   00268C                     l1595:
  1374   00268C  5011               	movf	U1_VAR_INT_SEND@n_digitos^(0+1280),w,c
  1375   00268E  6E12               	movwf	??_U1_VAR_INT_SEND^(0+1280),c
  1376   002690  6A13               	clrf	(??_U1_VAR_INT_SEND+1)^(0+1280),c
  1377                           
  1378                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1379                           ; Switch size 1, requested type "simple"
  1380                           ; Number of cases is 1, Range of values is 0 to 0
  1381                           ; switch strategies available:
  1382                           ; Name         Instructions Cycles
  1383                           ; simple_byte            4     3 (average)
  1384                           ;	Chosen strategy is simple_byte
  1385   002692  5013               	movf	(??_U1_VAR_INT_SEND+1)^(0+1280),w,c
  1386   002694  0A00               	xorlw	0	; case 0
  1387   002696  B4D8               	btfsc	status,2,c
  1388   002698  EF50  F013         	goto	l1705
  1389   00269C  EF67  F013         	goto	l237
  1390   0026A0                     l1705:
  1391                           
  1392                           ; Switch size 1, requested type "simple"
  1393                           ; Number of cases is 5, Range of values is 1 to 5
  1394                           ; switch strategies available:
  1395                           ; Name         Instructions Cycles
  1396                           ; simple_byte           16     9 (average)
  1397                           ;	Chosen strategy is simple_byte
  1398   0026A0  5012               	movf	??_U1_VAR_INT_SEND^(0+1280),w,c
  1399   0026A2  0A01               	xorlw	1	; case 1
  1400   0026A4  B4D8               	btfsc	status,2,c
  1401   0026A6  EF00  F013         	goto	l1583
  1402   0026AA  0A03               	xorlw	3	; case 2
  1403   0026AC  B4D8               	btfsc	status,2,c
  1404   0026AE  EF06  F013         	goto	l1585
  1405   0026B2  0A01               	xorlw	1	; case 3
  1406   0026B4  B4D8               	btfsc	status,2,c
  1407   0026B6  EF10  F013         	goto	l1587
  1408   0026BA  0A07               	xorlw	7	; case 4
  1409   0026BC  B4D8               	btfsc	status,2,c
  1410   0026BE  EF1E  F013         	goto	l1589
  1411   0026C2  0A01               	xorlw	1	; case 5
  1412   0026C4  B4D8               	btfsc	status,2,c
  1413   0026C6  EF30  F013         	goto	l1591
  1414   0026CA  EF67  F013         	goto	l237
  1415   0026CE                     l237:
  1416   0026CE  0012               	return		;funcret
  1417   0026D0                     __end_of_U1_VAR_INT_SEND:
  1418                           	callstack 0
  1419                           
  1420 ;; *************** function _U1_STRING_SEND *****************
  1421 ;; Defined at:
  1422 ;;		line 62 in file "maincode05.c"
  1423 ;; Parameters:    Size  Location     Type
  1424 ;;  cadena          1    5[COMRAM] PTR const unsigned char 
  1425 ;;		 -> STR_6(12), STR_5(6), STR_3(5), 
  1426 ;; Auto vars:     Size  Location     Type
  1427 ;;  i               1    8[COMRAM] unsigned char 
  1428 ;;  tam             1    7[COMRAM] unsigned char 
  1429 ;; Return value:  Size  Location     Type
  1430 ;;                  1    wreg      void 
  1431 ;; Registers used:
  1432 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1433 ;; Tracked objects:
  1434 ;;		On entry : 0/0
  1435 ;;		On exit  : 0/0
  1436 ;;		Unchanged: 0/0
  1437 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1438 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1439 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1440 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1441 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1442 ;;Total ram usage:        4 bytes
  1443 ;; Hardware stack levels used: 1
  1444 ;; Hardware stack levels required when called: 2
  1445 ;; This function calls:
  1446 ;;		_U1_BYTE_SEND
  1447 ;;		_strlen
  1448 ;; This function is called by:
  1449 ;;		_main
  1450 ;; This function uses a non-reentrant model
  1451 ;;
  1452                           
  1453                           	psect	text9
  1454   002C08                     __ptext9:
  1455                           	callstack 0
  1456   002C08                     _U1_STRING_SEND:
  1457                           	callstack 124
  1458   002C08                     
  1459                           ;maincode05.c: 62: void U1_STRING_SEND(const char *cadena);maincode05.c: 63: {;maincode0
      +                          5.c: 64:     unsigned char tam;;maincode05.c: 65:     tam = strlen(cadena);
  1460   002C08  C506  F503         	movff	U1_STRING_SEND@cadena,strlen@s
  1461   002C0C  EC67  F016         	call	_strlen	;wreg free
  1462   002C10  5003               	movf	?_strlen^(0+1280),w,c
  1463   002C12  6E08               	movwf	U1_STRING_SEND@tam^(0+1280),c
  1464   002C14                     
  1465                           ;maincode05.c: 67:  for(i = 0; i<tam; i++)
  1466   002C14  0E00               	movlw	0
  1467   002C16  6E09               	movwf	U1_STRING_SEND@i^(0+1280),c
  1468   002C18  EF1C  F016         	goto	l1579
  1469   002C1C                     l1575:
  1470                           
  1471                           ;maincode05.c: 68:  {;maincode05.c: 69:   U1_BYTE_SEND(cadena[i]);
  1472   002C1C  5006               	movf	U1_STRING_SEND@cadena^(0+1280),w,c
  1473   002C1E  2409               	addwf	U1_STRING_SEND@i^(0+1280),w,c
  1474   002C20  6E07               	movwf	??_U1_STRING_SEND^(0+1280),c
  1475   002C22  C507  F4F6         	movff	??_U1_STRING_SEND,tblptrl
  1476   002C26                     	if	1	;There is more than 1 active tblptr byte
  1477   002C26  0E25               	movlw	high __smallconst
  1478   002C28  6EF7               	movwf	tblptrh,c
  1479   002C2A                     	endif
  1480   002C2A                     	if	0	;tblptru may be non-zero
  1481   002C2A                     	endif
  1482   002C2A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1483   002C2A  0E00               	movlw	low (__smallconst shr (0+16))
  1484   002C2C  6EF8               	movwf	tblptru,c
  1485   002C2E                     	endif
  1486   002C2E  0008               	tblrd		*
  1487   002C30  50F5               	movf	tablat,w,c
  1488   002C32  ECF3  F016         	call	_U1_BYTE_SEND
  1489   002C36                     
  1490                           ;maincode05.c: 70:  }
  1491   002C36  2A09               	incf	U1_STRING_SEND@i^(0+1280),f,c
  1492   002C38                     l1579:
  1493   002C38  5008               	movf	U1_STRING_SEND@tam^(0+1280),w,c
  1494   002C3A  5C09               	subwf	U1_STRING_SEND@i^(0+1280),w,c
  1495   002C3C  A0D8               	btfss	status,0,c
  1496   002C3E  EF23  F016         	goto	u411
  1497   002C42  EF25  F016         	goto	u410
  1498   002C46                     u411:
  1499   002C46  EF0E  F016         	goto	l1575
  1500   002C4A                     u410:
  1501   002C4A  0012               	return		;funcret
  1502   002C4C                     __end_of_U1_STRING_SEND:
  1503                           	callstack 0
  1504                           
  1505 ;; *************** function _U1_NEWLINE *****************
  1506 ;; Defined at:
  1507 ;;		line 109 in file "maincode05.c"
  1508 ;; Parameters:    Size  Location     Type
  1509 ;;		None
  1510 ;; Auto vars:     Size  Location     Type
  1511 ;;		None
  1512 ;; Return value:  Size  Location     Type
  1513 ;;                  1    wreg      void 
  1514 ;; Registers used:
  1515 ;;		wreg, cstack
  1516 ;; Tracked objects:
  1517 ;;		On entry : 0/0
  1518 ;;		On exit  : 0/0
  1519 ;;		Unchanged: 0/0
  1520 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1521 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1522 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1523 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1524 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1525 ;;Total ram usage:        0 bytes
  1526 ;; Hardware stack levels used: 1
  1527 ;; Hardware stack levels required when called: 2
  1528 ;; This function calls:
  1529 ;;		_U1_BYTE_SEND
  1530 ;; This function is called by:
  1531 ;;		_main
  1532 ;; This function uses a non-reentrant model
  1533 ;;
  1534                           
  1535                           	psect	text10
  1536   002E12                     __ptext10:
  1537                           	callstack 0
  1538   002E12                     _U1_NEWLINE:
  1539                           	callstack 124
  1540   002E12                     
  1541                           ;maincode05.c: 110:     U1_BYTE_SEND(0x0A);
  1542   002E12  0E0A               	movlw	10
  1543   002E14  ECF3  F016         	call	_U1_BYTE_SEND
  1544                           
  1545                           ;maincode05.c: 111:     U1_BYTE_SEND(0x0D);
  1546   002E18  0E0D               	movlw	13
  1547   002E1A  ECF3  F016         	call	_U1_BYTE_SEND
  1548   002E1E  0012               	return		;funcret
  1549   002E20                     __end_of_U1_NEWLINE:
  1550                           	callstack 0
  1551                           
  1552 ;; *************** function _U1_BYTE_SEND *****************
  1553 ;; Defined at:
  1554 ;;		line 57 in file "maincode05.c"
  1555 ;; Parameters:    Size  Location     Type
  1556 ;;  dato            1    wreg     unsigned char 
  1557 ;; Auto vars:     Size  Location     Type
  1558 ;;  dato            1    2[COMRAM] unsigned char 
  1559 ;; Return value:  Size  Location     Type
  1560 ;;                  1    wreg      void 
  1561 ;; Registers used:
  1562 ;;		wreg
  1563 ;; Tracked objects:
  1564 ;;		On entry : 0/0
  1565 ;;		On exit  : 0/0
  1566 ;;		Unchanged: 0/0
  1567 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1568 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1569 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1570 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1571 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1572 ;;Total ram usage:        1 bytes
  1573 ;; Hardware stack levels used: 1
  1574 ;; Hardware stack levels required when called: 1
  1575 ;; This function calls:
  1576 ;;		Nothing
  1577 ;; This function is called by:
  1578 ;;		_U1_STRING_SEND
  1579 ;;		_U1_VAR_INT_SEND
  1580 ;;		_U1_NEWLINE
  1581 ;; This function uses a non-reentrant model
  1582 ;;
  1583                           
  1584                           	psect	text11
  1585   002DE6                     __ptext11:
  1586                           	callstack 0
  1587   002DE6                     _U1_BYTE_SEND:
  1588                           	callstack 124
  1589                           
  1590                           ;incstack = 0
  1591                           ;U1_BYTE_SEND@dato stored from wreg
  1592   002DE6  6E03               	movwf	U1_BYTE_SEND@dato^(0+1280),c
  1593   002DE8                     
  1594                           ;maincode05.c: 58:     U1TXB = dato;
  1595   002DE8  C503  F2A3         	movff	U1_BYTE_SEND@dato,675	;volatile
  1596   002DEC                     l218:
  1597   002DEC  0102               	movlb	2	; () banked
  1598   002DEE  AFB2               	btfss	178,7,b	;volatile
  1599   002DF0  EFFC  F016         	goto	u51
  1600   002DF4  EFFE  F016         	goto	u50
  1601   002DF8                     u51:
  1602   002DF8  EFF6  F016         	goto	l218
  1603   002DFC                     u50:
  1604   002DFC                     
  1605                           ; BSR set to: 2
  1606   002DFC  0012               	return		;funcret
  1607   002DFE                     __end_of_U1_BYTE_SEND:
  1608                           	callstack 0
  1609                           
  1610 ;; *************** function _POS_CURSOR *****************
  1611 ;; Defined at:
  1612 ;;		line 5 in file "LCD.c"
  1613 ;; Parameters:    Size  Location     Type
  1614 ;;  fila            1    wreg     unsigned char 
  1615 ;;  columna         1    5[COMRAM] unsigned char 
  1616 ;; Auto vars:     Size  Location     Type
  1617 ;;  fila            1    6[COMRAM] unsigned char 
  1618 ;; Return value:  Size  Location     Type
  1619 ;;                  1    wreg      void 
  1620 ;; Registers used:
  1621 ;;		wreg, status,2, status,0, cstack
  1622 ;; Tracked objects:
  1623 ;;		On entry : 0/0
  1624 ;;		On exit  : 0/0
  1625 ;;		Unchanged: 0/0
  1626 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1627 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1628 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1629 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1630 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1631 ;;Total ram usage:        2 bytes
  1632 ;; Hardware stack levels used: 1
  1633 ;; Hardware stack levels required when called: 3
  1634 ;; This function calls:
  1635 ;;		_ENVIA_LCD_CMD
  1636 ;; This function is called by:
  1637 ;;		_main
  1638 ;; This function uses a non-reentrant model
  1639 ;;
  1640                           
  1641                           	psect	text12
  1642   002928                     __ptext12:
  1643                           	callstack 0
  1644   002928                     _POS_CURSOR:
  1645                           	callstack 123
  1646                           
  1647                           ; BSR set to: 2
  1648                           ;incstack = 0
  1649                           ;POS_CURSOR@fila stored from wreg
  1650   002928  6E07               	movwf	POS_CURSOR@fila^(0+1280),c
  1651   00292A                     
  1652                           ;LCD.c: 5: void POS_CURSOR(unsigned char fila,unsigned char columna);LCD.c: 6: {;LCD.c: 
      +                          7:  if(fila == 1)
  1653   00292A  0407               	decf	POS_CURSOR@fila^(0+1280),w,c
  1654   00292C  A4D8               	btfss	status,2,c
  1655   00292E  EF9B  F014         	goto	u351
  1656   002932  EF9D  F014         	goto	u350
  1657   002936                     u351:
  1658   002936  EFA3  F014         	goto	l1517
  1659   00293A                     u350:
  1660   00293A                     
  1661                           ;LCD.c: 8:  {;LCD.c: 9:   ENVIA_LCD_CMD(0x80+columna);
  1662   00293A  5006               	movf	POS_CURSOR@columna^(0+1280),w,c
  1663   00293C  0F80               	addlw	128
  1664   00293E  EC83  F016         	call	_ENVIA_LCD_CMD
  1665                           
  1666                           ;LCD.c: 10:  }
  1667   002942  EFD0  F014         	goto	l32
  1668   002946                     l1517:
  1669   002946  0E02               	movlw	2
  1670   002948  1807               	xorwf	POS_CURSOR@fila^(0+1280),w,c
  1671   00294A  A4D8               	btfss	status,2,c
  1672   00294C  EFAA  F014         	goto	u361
  1673   002950  EFAC  F014         	goto	u360
  1674   002954                     u361:
  1675   002954  EFB2  F014         	goto	l1521
  1676   002958                     u360:
  1677   002958                     
  1678                           ;LCD.c: 12:  {;LCD.c: 13:   ENVIA_LCD_CMD(0xC0+columna);
  1679   002958  5006               	movf	POS_CURSOR@columna^(0+1280),w,c
  1680   00295A  0FC0               	addlw	192
  1681   00295C  EC83  F016         	call	_ENVIA_LCD_CMD
  1682                           
  1683                           ;LCD.c: 14:  }
  1684   002960  EFD0  F014         	goto	l32
  1685   002964                     l1521:
  1686   002964  0E03               	movlw	3
  1687   002966  1807               	xorwf	POS_CURSOR@fila^(0+1280),w,c
  1688   002968  A4D8               	btfss	status,2,c
  1689   00296A  EFB9  F014         	goto	u371
  1690   00296E  EFBB  F014         	goto	u370
  1691   002972                     u371:
  1692   002972  EFC1  F014         	goto	l1525
  1693   002976                     u370:
  1694   002976                     
  1695                           ;LCD.c: 16:  {;LCD.c: 17:   ENVIA_LCD_CMD(0x94+columna);
  1696   002976  5006               	movf	POS_CURSOR@columna^(0+1280),w,c
  1697   002978  0F94               	addlw	148
  1698   00297A  EC83  F016         	call	_ENVIA_LCD_CMD
  1699                           
  1700                           ;LCD.c: 18:  }
  1701   00297E  EFD0  F014         	goto	l32
  1702   002982                     l1525:
  1703   002982  0E04               	movlw	4
  1704   002984  1807               	xorwf	POS_CURSOR@fila^(0+1280),w,c
  1705   002986  A4D8               	btfss	status,2,c
  1706   002988  EFC8  F014         	goto	u381
  1707   00298C  EFCA  F014         	goto	u380
  1708   002990                     u381:
  1709   002990  EFD0  F014         	goto	l28
  1710   002994                     u380:
  1711   002994                     
  1712                           ;LCD.c: 20:  {;LCD.c: 21:   ENVIA_LCD_CMD(0xD4+columna);
  1713   002994  5006               	movf	POS_CURSOR@columna^(0+1280),w,c
  1714   002996  0FD4               	addlw	212
  1715   002998  EC83  F016         	call	_ENVIA_LCD_CMD
  1716   00299C  EFD0  F014         	goto	l32
  1717   0029A0                     l28:
  1718   0029A0                     l32:
  1719   0029A0  0012               	return		;funcret
  1720   0029A2                     __end_of_POS_CURSOR:
  1721                           	callstack 0
  1722                           
  1723 ;; *************** function _ENVIA_LCD_CMD *****************
  1724 ;; Defined at:
  1725 ;;		line 136 in file "LCD.c"
  1726 ;; Parameters:    Size  Location     Type
  1727 ;;  dato            1    wreg     unsigned char 
  1728 ;; Auto vars:     Size  Location     Type
  1729 ;;  dato            1    3[COMRAM] unsigned char 
  1730 ;;  aux             1    4[COMRAM] unsigned char 
  1731 ;; Return value:  Size  Location     Type
  1732 ;;                  1    wreg      void 
  1733 ;; Registers used:
  1734 ;;		wreg, status,2, status,0, cstack
  1735 ;; Tracked objects:
  1736 ;;		On entry : 0/0
  1737 ;;		On exit  : 0/0
  1738 ;;		Unchanged: 0/0
  1739 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1740 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1741 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1742 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1743 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1744 ;;Total ram usage:        2 bytes
  1745 ;; Hardware stack levels used: 1
  1746 ;; Hardware stack levels required when called: 2
  1747 ;; This function calls:
  1748 ;;		_ENVIA_NIBBLE
  1749 ;;		_LEER_LCD
  1750 ;; This function is called by:
  1751 ;;		_POS_CURSOR
  1752 ;;		_CURSOR_HOME
  1753 ;;		_CURSOR_ONOFF
  1754 ;;		_BORRAR_LCD
  1755 ;;		_LCD_CONFIG
  1756 ;;		_BLINK_CURSOR
  1757 ;;		_DISPLAY_ONOFF
  1758 ;;		_CURSOR_SHIFTLEFT
  1759 ;;		_CURSOR_SHIFTRIGHT
  1760 ;;		_DISPLAY_SHIFTLEFT
  1761 ;;		_DISPLAY_SHIFTRIGHT
  1762 ;;		_GENERACARACTER
  1763 ;; This function uses a non-reentrant model
  1764 ;;
  1765                           
  1766                           	psect	text13
  1767   002D06                     __ptext13:
  1768                           	callstack 0
  1769   002D06                     _ENVIA_LCD_CMD:
  1770                           	callstack 121
  1771                           
  1772                           ;incstack = 0
  1773                           ;ENVIA_LCD_CMD@dato stored from wreg
  1774   002D06  6E04               	movwf	ENVIA_LCD_CMD@dato^(0+1280),c
  1775   002D08                     
  1776                           ;LCD.c: 136: void ENVIA_LCD_CMD(unsigned char dato);LCD.c: 137: {;LCD.c: 138:  unsigned 
      +                          char aux;;LCD.c: 139:  LATDbits.LATD0 = 0;
  1777   002D08  90C1               	bcf	193,0,c	;volatile
  1778   002D0A                     
  1779                           ;LCD.c: 140:  LEER_LCD();
  1780   002D0A  EC0B  F015         	call	_LEER_LCD	;wreg free
  1781   002D0E                     
  1782                           ;LCD.c: 141:  TRISD = 0b00000000;
  1783   002D0E  0E00               	movlw	0
  1784   002D10  6EC9               	movwf	201,c	;volatile
  1785   002D12                     
  1786                           ;LCD.c: 142:     _delay((unsigned long)((100)*(32000000UL/4000000.0)));
  1787   002D12  0EA0               	movlw	160
  1788   002D14                     u487:
  1789   002D14  D000               	nop2	
  1790   002D16  2EE8               	decfsz	wreg,f,c
  1791   002D18  D7FD               	bra	u487
  1792   002D1A                     
  1793                           ;LCD.c: 143:     LATDbits.LATD1 = 0;
  1794   002D1A  92C1               	bcf	193,1,c	;volatile
  1795   002D1C                     
  1796                           ;LCD.c: 144:  LATDbits.LATD2 = 0;
  1797   002D1C  94C1               	bcf	193,2,c	;volatile
  1798   002D1E                     
  1799                           ;LCD.c: 145:  LATDbits.LATD0 = 0;
  1800   002D1E  90C1               	bcf	193,0,c	;volatile
  1801   002D20                     
  1802                           ;LCD.c: 146:  aux = dato & 0xF0;
  1803   002D20  5004               	movf	ENVIA_LCD_CMD@dato^(0+1280),w,c
  1804   002D22  0BF0               	andlw	240
  1805   002D24  6E05               	movwf	ENVIA_LCD_CMD@aux^(0+1280),c
  1806   002D26                     
  1807                           ;LCD.c: 147:  ENVIA_NIBBLE(aux);
  1808   002D26  5005               	movf	ENVIA_LCD_CMD@aux^(0+1280),w,c
  1809   002D28  ECE5  F016         	call	_ENVIA_NIBBLE
  1810   002D2C                     
  1811                           ;LCD.c: 148:  aux = dato<<4;
  1812   002D2C  3804               	swapf	ENVIA_LCD_CMD@dato^(0+1280),w,c
  1813   002D2E  0BF0               	andlw	240
  1814   002D30  6E05               	movwf	ENVIA_LCD_CMD@aux^(0+1280),c
  1815   002D32                     
  1816                           ;LCD.c: 149:  ENVIA_NIBBLE(aux);
  1817   002D32  5005               	movf	ENVIA_LCD_CMD@aux^(0+1280),w,c
  1818   002D34  ECE5  F016         	call	_ENVIA_NIBBLE
  1819   002D38  0012               	return		;funcret
  1820   002D3A                     __end_of_ENVIA_LCD_CMD:
  1821                           	callstack 0
  1822                           
  1823 ;; *************** function _LCD_ESCRIBE_VAR_INT *****************
  1824 ;; Defined at:
  1825 ;;		line 230 in file "LCD.c"
  1826 ;; Parameters:    Size  Location     Type
  1827 ;;  numero          2   14[COMRAM] unsigned int 
  1828 ;;  n_digitos       1   16[COMRAM] unsigned char 
  1829 ;; Auto vars:     Size  Location     Type
  1830 ;;  unidad          1   23[COMRAM] unsigned char 
  1831 ;;  decena          1   22[COMRAM] unsigned char 
  1832 ;;  centena         1   21[COMRAM] unsigned char 
  1833 ;;  millar          1   20[COMRAM] unsigned char 
  1834 ;;  d_millar        1   19[COMRAM] unsigned char 
  1835 ;; Return value:  Size  Location     Type
  1836 ;;                  1    wreg      void 
  1837 ;; Registers used:
  1838 ;;		wreg, status,2, status,0, cstack
  1839 ;; Tracked objects:
  1840 ;;		On entry : 0/0
  1841 ;;		On exit  : 0/0
  1842 ;;		Unchanged: 0/0
  1843 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1844 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1845 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1846 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1847 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1848 ;;Total ram usage:       10 bytes
  1849 ;; Hardware stack levels used: 1
  1850 ;; Hardware stack levels required when called: 3
  1851 ;; This function calls:
  1852 ;;		_ENVIA_CHAR
  1853 ;;		___lwdiv
  1854 ;;		___lwmod
  1855 ;; This function is called by:
  1856 ;;		_main
  1857 ;; This function uses a non-reentrant model
  1858 ;;
  1859                           
  1860                           	psect	text14
  1861   0026D0                     __ptext14:
  1862                           	callstack 0
  1863   0026D0                     _LCD_ESCRIBE_VAR_INT:
  1864                           	callstack 123
  1865   0026D0                     
  1866                           ;LCD.c: 231:     unsigned char d_millar, millar, centena, decena, unidad;;LCD.c: 232:   
      +                            d_millar = numero / 10000;
  1867   0026D0  C50F  F508         	movff	LCD_ESCRIBE_VAR_INT@numero,___lwdiv@dividend
  1868   0026D4  C510  F509         	movff	LCD_ESCRIBE_VAR_INT@numero+1,___lwdiv@dividend+1
  1869   0026D8  0E27               	movlw	39
  1870   0026DA  6E0B               	movwf	(___lwdiv@divisor+1)^(0+1280),c
  1871   0026DC  0E10               	movlw	16
  1872   0026DE  6E0A               	movwf	___lwdiv@divisor^(0+1280),c
  1873   0026E0  ECD1  F014         	call	___lwdiv	;wreg free
  1874   0026E4  5008               	movf	?___lwdiv^(0+1280),w,c
  1875   0026E6  6E14               	movwf	LCD_ESCRIBE_VAR_INT@d_millar^(0+1280),c
  1876                           
  1877                           ;LCD.c: 233:     millar = (numero % 10000) / 1000;
  1878   0026E8  0E27               	movlw	39
  1879   0026EA  6E06               	movwf	(___lwmod@divisor+1)^(0+1280),c
  1880   0026EC  0E10               	movlw	16
  1881   0026EE  6E05               	movwf	___lwmod@divisor^(0+1280),c
  1882   0026F0  C50F  F503         	movff	LCD_ESCRIBE_VAR_INT@numero,___lwmod@dividend
  1883   0026F4  C510  F504         	movff	LCD_ESCRIBE_VAR_INT@numero+1,___lwmod@dividend+1
  1884   0026F8  EC7A  F015         	call	___lwmod	;wreg free
  1885   0026FC  C503  F508         	movff	?___lwmod,___lwdiv@dividend
  1886   002700  C504  F509         	movff	?___lwmod+1,___lwdiv@dividend+1
  1887   002704  0E03               	movlw	3
  1888   002706  6E0B               	movwf	(___lwdiv@divisor+1)^(0+1280),c
  1889   002708  0EE8               	movlw	232
  1890   00270A  6E0A               	movwf	___lwdiv@divisor^(0+1280),c
  1891   00270C  ECD1  F014         	call	___lwdiv	;wreg free
  1892   002710  5008               	movf	?___lwdiv^(0+1280),w,c
  1893   002712  6E15               	movwf	LCD_ESCRIBE_VAR_INT@millar^(0+1280),c
  1894                           
  1895                           ;LCD.c: 234:     centena = (numero % 1000) / 100;
  1896   002714  0E03               	movlw	3
  1897   002716  6E06               	movwf	(___lwmod@divisor+1)^(0+1280),c
  1898   002718  0EE8               	movlw	232
  1899   00271A  6E05               	movwf	___lwmod@divisor^(0+1280),c
  1900   00271C  C50F  F503         	movff	LCD_ESCRIBE_VAR_INT@numero,___lwmod@dividend
  1901   002720  C510  F504         	movff	LCD_ESCRIBE_VAR_INT@numero+1,___lwmod@dividend+1
  1902   002724  EC7A  F015         	call	___lwmod	;wreg free
  1903   002728  C503  F508         	movff	?___lwmod,___lwdiv@dividend
  1904   00272C  C504  F509         	movff	?___lwmod+1,___lwdiv@dividend+1
  1905   002730  0E00               	movlw	0
  1906   002732  6E0B               	movwf	(___lwdiv@divisor+1)^(0+1280),c
  1907   002734  0E64               	movlw	100
  1908   002736  6E0A               	movwf	___lwdiv@divisor^(0+1280),c
  1909   002738  ECD1  F014         	call	___lwdiv	;wreg free
  1910   00273C  5008               	movf	?___lwdiv^(0+1280),w,c
  1911   00273E  6E16               	movwf	LCD_ESCRIBE_VAR_INT@centena^(0+1280),c
  1912                           
  1913                           ;LCD.c: 235:     decena = (numero % 100) / 10;
  1914   002740  0E00               	movlw	0
  1915   002742  6E06               	movwf	(___lwmod@divisor+1)^(0+1280),c
  1916   002744  0E64               	movlw	100
  1917   002746  6E05               	movwf	___lwmod@divisor^(0+1280),c
  1918   002748  C50F  F503         	movff	LCD_ESCRIBE_VAR_INT@numero,___lwmod@dividend
  1919   00274C  C510  F504         	movff	LCD_ESCRIBE_VAR_INT@numero+1,___lwmod@dividend+1
  1920   002750  EC7A  F015         	call	___lwmod	;wreg free
  1921   002754  C503  F508         	movff	?___lwmod,___lwdiv@dividend
  1922   002758  C504  F509         	movff	?___lwmod+1,___lwdiv@dividend+1
  1923   00275C  0E00               	movlw	0
  1924   00275E  6E0B               	movwf	(___lwdiv@divisor+1)^(0+1280),c
  1925   002760  0E0A               	movlw	10
  1926   002762  6E0A               	movwf	___lwdiv@divisor^(0+1280),c
  1927   002764  ECD1  F014         	call	___lwdiv	;wreg free
  1928   002768  5008               	movf	?___lwdiv^(0+1280),w,c
  1929   00276A  6E17               	movwf	LCD_ESCRIBE_VAR_INT@decena^(0+1280),c
  1930                           
  1931                           ;LCD.c: 236:     unidad = numero % 10;
  1932   00276C  C50F  F503         	movff	LCD_ESCRIBE_VAR_INT@numero,___lwmod@dividend
  1933   002770  C510  F504         	movff	LCD_ESCRIBE_VAR_INT@numero+1,___lwmod@dividend+1
  1934   002774  0E00               	movlw	0
  1935   002776  6E06               	movwf	(___lwmod@divisor+1)^(0+1280),c
  1936   002778  0E0A               	movlw	10
  1937   00277A  6E05               	movwf	___lwmod@divisor^(0+1280),c
  1938   00277C  EC7A  F015         	call	___lwmod	;wreg free
  1939   002780  5003               	movf	?___lwmod^(0+1280),w,c
  1940   002782  6E18               	movwf	LCD_ESCRIBE_VAR_INT@unidad^(0+1280),c
  1941                           
  1942                           ;LCD.c: 237:     switch(n_digitos){
  1943   002784  EF0A  F014         	goto	l1555
  1944   002788                     l1543:
  1945                           
  1946                           ;LCD.c: 239:             ENVIA_CHAR(unidad+0x30);
  1947   002788  5018               	movf	LCD_ESCRIBE_VAR_INT@unidad^(0+1280),w,c
  1948   00278A  0F30               	addlw	48
  1949   00278C  EC9D  F016         	call	_ENVIA_CHAR
  1950                           
  1951                           ;LCD.c: 240:             break;
  1952   002790  EF2B  F014         	goto	l122
  1953   002794                     l1545:
  1954                           
  1955                           ;LCD.c: 242:             ENVIA_CHAR(decena+0x30);
  1956   002794  5017               	movf	LCD_ESCRIBE_VAR_INT@decena^(0+1280),w,c
  1957   002796  0F30               	addlw	48
  1958   002798  EC9D  F016         	call	_ENVIA_CHAR
  1959                           
  1960                           ;LCD.c: 243:             ENVIA_CHAR(unidad+0x30);
  1961   00279C  5018               	movf	LCD_ESCRIBE_VAR_INT@unidad^(0+1280),w,c
  1962   00279E  0F30               	addlw	48
  1963   0027A0  EC9D  F016         	call	_ENVIA_CHAR
  1964                           
  1965                           ;LCD.c: 244:             break;
  1966   0027A4  EF2B  F014         	goto	l122
  1967   0027A8                     l1547:
  1968                           
  1969                           ;LCD.c: 246:             ENVIA_CHAR(centena+0x30);
  1970   0027A8  5016               	movf	LCD_ESCRIBE_VAR_INT@centena^(0+1280),w,c
  1971   0027AA  0F30               	addlw	48
  1972   0027AC  EC9D  F016         	call	_ENVIA_CHAR
  1973                           
  1974                           ;LCD.c: 247:             ENVIA_CHAR(decena+0x30);
  1975   0027B0  5017               	movf	LCD_ESCRIBE_VAR_INT@decena^(0+1280),w,c
  1976   0027B2  0F30               	addlw	48
  1977   0027B4  EC9D  F016         	call	_ENVIA_CHAR
  1978                           
  1979                           ;LCD.c: 248:             ENVIA_CHAR(unidad+0x30);
  1980   0027B8  5018               	movf	LCD_ESCRIBE_VAR_INT@unidad^(0+1280),w,c
  1981   0027BA  0F30               	addlw	48
  1982   0027BC  EC9D  F016         	call	_ENVIA_CHAR
  1983                           
  1984                           ;LCD.c: 249:             break;
  1985   0027C0  EF2B  F014         	goto	l122
  1986   0027C4                     l1549:
  1987                           
  1988                           ;LCD.c: 251:             ENVIA_CHAR(millar+0x30);
  1989   0027C4  5015               	movf	LCD_ESCRIBE_VAR_INT@millar^(0+1280),w,c
  1990   0027C6  0F30               	addlw	48
  1991   0027C8  EC9D  F016         	call	_ENVIA_CHAR
  1992                           
  1993                           ;LCD.c: 252:             ENVIA_CHAR(centena+0x30);
  1994   0027CC  5016               	movf	LCD_ESCRIBE_VAR_INT@centena^(0+1280),w,c
  1995   0027CE  0F30               	addlw	48
  1996   0027D0  EC9D  F016         	call	_ENVIA_CHAR
  1997                           
  1998                           ;LCD.c: 253:             ENVIA_CHAR(decena+0x30);
  1999   0027D4  5017               	movf	LCD_ESCRIBE_VAR_INT@decena^(0+1280),w,c
  2000   0027D6  0F30               	addlw	48
  2001   0027D8  EC9D  F016         	call	_ENVIA_CHAR
  2002                           
  2003                           ;LCD.c: 254:             ENVIA_CHAR(unidad+0x30);
  2004   0027DC  5018               	movf	LCD_ESCRIBE_VAR_INT@unidad^(0+1280),w,c
  2005   0027DE  0F30               	addlw	48
  2006   0027E0  EC9D  F016         	call	_ENVIA_CHAR
  2007                           
  2008                           ;LCD.c: 255:             break;
  2009   0027E4  EF2B  F014         	goto	l122
  2010   0027E8                     l1551:
  2011                           
  2012                           ;LCD.c: 257:             ENVIA_CHAR(d_millar+0x30);
  2013   0027E8  5014               	movf	LCD_ESCRIBE_VAR_INT@d_millar^(0+1280),w,c
  2014   0027EA  0F30               	addlw	48
  2015   0027EC  EC9D  F016         	call	_ENVIA_CHAR
  2016                           
  2017                           ;LCD.c: 258:             ENVIA_CHAR(millar+0x30);
  2018   0027F0  5015               	movf	LCD_ESCRIBE_VAR_INT@millar^(0+1280),w,c
  2019   0027F2  0F30               	addlw	48
  2020   0027F4  EC9D  F016         	call	_ENVIA_CHAR
  2021                           
  2022                           ;LCD.c: 259:             ENVIA_CHAR(centena+0x30);
  2023   0027F8  5016               	movf	LCD_ESCRIBE_VAR_INT@centena^(0+1280),w,c
  2024   0027FA  0F30               	addlw	48
  2025   0027FC  EC9D  F016         	call	_ENVIA_CHAR
  2026                           
  2027                           ;LCD.c: 260:             ENVIA_CHAR(decena+0x30);
  2028   002800  5017               	movf	LCD_ESCRIBE_VAR_INT@decena^(0+1280),w,c
  2029   002802  0F30               	addlw	48
  2030   002804  EC9D  F016         	call	_ENVIA_CHAR
  2031                           
  2032                           ;LCD.c: 261:             ENVIA_CHAR(unidad+0x30);
  2033   002808  5018               	movf	LCD_ESCRIBE_VAR_INT@unidad^(0+1280),w,c
  2034   00280A  0F30               	addlw	48
  2035   00280C  EC9D  F016         	call	_ENVIA_CHAR
  2036                           
  2037                           ;LCD.c: 262:             break;
  2038   002810  EF2B  F014         	goto	l122
  2039   002814                     l1555:
  2040   002814  5011               	movf	LCD_ESCRIBE_VAR_INT@n_digitos^(0+1280),w,c
  2041   002816  6E12               	movwf	??_LCD_ESCRIBE_VAR_INT^(0+1280),c
  2042   002818  6A13               	clrf	(??_LCD_ESCRIBE_VAR_INT+1)^(0+1280),c
  2043                           
  2044                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2045                           ; Switch size 1, requested type "simple"
  2046                           ; Number of cases is 1, Range of values is 0 to 0
  2047                           ; switch strategies available:
  2048                           ; Name         Instructions Cycles
  2049                           ; simple_byte            4     3 (average)
  2050                           ;	Chosen strategy is simple_byte
  2051   00281A  5013               	movf	(??_LCD_ESCRIBE_VAR_INT+1)^(0+1280),w,c
  2052   00281C  0A00               	xorlw	0	; case 0
  2053   00281E  B4D8               	btfsc	status,2,c
  2054   002820  EF14  F014         	goto	l1707
  2055   002824  EF2B  F014         	goto	l122
  2056   002828                     l1707:
  2057                           
  2058                           ; Switch size 1, requested type "simple"
  2059                           ; Number of cases is 5, Range of values is 1 to 5
  2060                           ; switch strategies available:
  2061                           ; Name         Instructions Cycles
  2062                           ; simple_byte           16     9 (average)
  2063                           ;	Chosen strategy is simple_byte
  2064   002828  5012               	movf	??_LCD_ESCRIBE_VAR_INT^(0+1280),w,c
  2065   00282A  0A01               	xorlw	1	; case 1
  2066   00282C  B4D8               	btfsc	status,2,c
  2067   00282E  EFC4  F013         	goto	l1543
  2068   002832  0A03               	xorlw	3	; case 2
  2069   002834  B4D8               	btfsc	status,2,c
  2070   002836  EFCA  F013         	goto	l1545
  2071   00283A  0A01               	xorlw	1	; case 3
  2072   00283C  B4D8               	btfsc	status,2,c
  2073   00283E  EFD4  F013         	goto	l1547
  2074   002842  0A07               	xorlw	7	; case 4
  2075   002844  B4D8               	btfsc	status,2,c
  2076   002846  EFE2  F013         	goto	l1549
  2077   00284A  0A01               	xorlw	1	; case 5
  2078   00284C  B4D8               	btfsc	status,2,c
  2079   00284E  EFF4  F013         	goto	l1551
  2080   002852  EF2B  F014         	goto	l122
  2081   002856                     l122:
  2082   002856  0012               	return		;funcret
  2083   002858                     __end_of_LCD_ESCRIBE_VAR_INT:
  2084                           	callstack 0
  2085                           
  2086 ;; *************** function ___lwmod *****************
  2087 ;; Defined at:
  2088 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\lwmod.c"
  2089 ;; Parameters:    Size  Location     Type
  2090 ;;  dividend        2    2[COMRAM] unsigned int 
  2091 ;;  divisor         2    4[COMRAM] unsigned int 
  2092 ;; Auto vars:     Size  Location     Type
  2093 ;;  counter         1    6[COMRAM] unsigned char 
  2094 ;; Return value:  Size  Location     Type
  2095 ;;                  2    2[COMRAM] unsigned int 
  2096 ;; Registers used:
  2097 ;;		wreg, status,2, status,0
  2098 ;; Tracked objects:
  2099 ;;		On entry : 0/0
  2100 ;;		On exit  : 0/0
  2101 ;;		Unchanged: 0/0
  2102 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2103 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2104 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2105 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2106 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2107 ;;Total ram usage:        5 bytes
  2108 ;; Hardware stack levels used: 1
  2109 ;; Hardware stack levels required when called: 1
  2110 ;; This function calls:
  2111 ;;		Nothing
  2112 ;; This function is called by:
  2113 ;;		_LCD_ESCRIBE_VAR_INT
  2114 ;;		_U1_VAR_INT_SEND
  2115 ;; This function uses a non-reentrant model
  2116 ;;
  2117                           
  2118                           	psect	text15
  2119   002AF4                     __ptext15:
  2120                           	callstack 0
  2121   002AF4                     ___lwmod:
  2122                           	callstack 124
  2123   002AF4  5005               	movf	___lwmod@divisor^(0+1280),w,c
  2124   002AF6  1006               	iorwf	(___lwmod@divisor+1)^(0+1280),w,c
  2125   002AF8  B4D8               	btfsc	status,2,c
  2126   002AFA  EF81  F015         	goto	u321
  2127   002AFE  EF83  F015         	goto	u320
  2128   002B02                     u321:
  2129   002B02  EFA7  F015         	goto	l763
  2130   002B06                     u320:
  2131   002B06  0E01               	movlw	1
  2132   002B08  6E07               	movwf	___lwmod@counter^(0+1280),c
  2133   002B0A  EF8B  F015         	goto	l1503
  2134   002B0E                     l1501:
  2135   002B0E  90D8               	bcf	status,0,c
  2136   002B10  3605               	rlcf	___lwmod@divisor^(0+1280),f,c
  2137   002B12  3606               	rlcf	(___lwmod@divisor+1)^(0+1280),f,c
  2138   002B14  2A07               	incf	___lwmod@counter^(0+1280),f,c
  2139   002B16                     l1503:
  2140   002B16  AE06               	btfss	(___lwmod@divisor+1)^(0+1280),7,c
  2141   002B18  EF90  F015         	goto	u331
  2142   002B1C  EF92  F015         	goto	u330
  2143   002B20                     u331:
  2144   002B20  EF87  F015         	goto	l1501
  2145   002B24                     u330:
  2146   002B24                     l1505:
  2147   002B24  5005               	movf	___lwmod@divisor^(0+1280),w,c
  2148   002B26  5C03               	subwf	___lwmod@dividend^(0+1280),w,c
  2149   002B28  5006               	movf	(___lwmod@divisor+1)^(0+1280),w,c
  2150   002B2A  5804               	subwfb	(___lwmod@dividend+1)^(0+1280),w,c
  2151   002B2C  A0D8               	btfss	status,0,c
  2152   002B2E  EF9B  F015         	goto	u341
  2153   002B32  EF9D  F015         	goto	u340
  2154   002B36                     u341:
  2155   002B36  EFA1  F015         	goto	l1509
  2156   002B3A                     u340:
  2157   002B3A  5005               	movf	___lwmod@divisor^(0+1280),w,c
  2158   002B3C  5E03               	subwf	___lwmod@dividend^(0+1280),f,c
  2159   002B3E  5006               	movf	(___lwmod@divisor+1)^(0+1280),w,c
  2160   002B40  5A04               	subwfb	(___lwmod@dividend+1)^(0+1280),f,c
  2161   002B42                     l1509:
  2162   002B42  90D8               	bcf	status,0,c
  2163   002B44  3206               	rrcf	(___lwmod@divisor+1)^(0+1280),f,c
  2164   002B46  3205               	rrcf	___lwmod@divisor^(0+1280),f,c
  2165   002B48  2E07               	decfsz	___lwmod@counter^(0+1280),f,c
  2166   002B4A  EF92  F015         	goto	l1505
  2167   002B4E                     l763:
  2168   002B4E  C503  F503         	movff	___lwmod@dividend,?___lwmod
  2169   002B52  C504  F504         	movff	___lwmod@dividend+1,?___lwmod+1
  2170   002B56  0012               	return		;funcret
  2171   002B58                     __end_of___lwmod:
  2172                           	callstack 0
  2173                           
  2174 ;; *************** function ___lwdiv *****************
  2175 ;; Defined at:
  2176 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\lwdiv.c"
  2177 ;; Parameters:    Size  Location     Type
  2178 ;;  dividend        2    7[COMRAM] unsigned int 
  2179 ;;  divisor         2    9[COMRAM] unsigned int 
  2180 ;; Auto vars:     Size  Location     Type
  2181 ;;  quotient        2   11[COMRAM] unsigned int 
  2182 ;;  counter         1   13[COMRAM] unsigned char 
  2183 ;; Return value:  Size  Location     Type
  2184 ;;                  2    7[COMRAM] unsigned int 
  2185 ;; Registers used:
  2186 ;;		wreg, status,2, status,0
  2187 ;; Tracked objects:
  2188 ;;		On entry : 0/0
  2189 ;;		On exit  : 0/0
  2190 ;;		Unchanged: 0/0
  2191 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2192 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2193 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2194 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2195 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2196 ;;Total ram usage:        7 bytes
  2197 ;; Hardware stack levels used: 1
  2198 ;; Hardware stack levels required when called: 1
  2199 ;; This function calls:
  2200 ;;		Nothing
  2201 ;; This function is called by:
  2202 ;;		_LCD_ESCRIBE_VAR_INT
  2203 ;;		_U1_VAR_INT_SEND
  2204 ;; This function uses a non-reentrant model
  2205 ;;
  2206                           
  2207                           	psect	text16
  2208   0029A2                     __ptext16:
  2209                           	callstack 0
  2210   0029A2                     ___lwdiv:
  2211                           	callstack 124
  2212   0029A2  0E00               	movlw	0
  2213   0029A4  6E0D               	movwf	(___lwdiv@quotient+1)^(0+1280),c
  2214   0029A6  0E00               	movlw	0
  2215   0029A8  6E0C               	movwf	___lwdiv@quotient^(0+1280),c
  2216   0029AA  500A               	movf	___lwdiv@divisor^(0+1280),w,c
  2217   0029AC  100B               	iorwf	(___lwdiv@divisor+1)^(0+1280),w,c
  2218   0029AE  B4D8               	btfsc	status,2,c
  2219   0029B0  EFDC  F014         	goto	u291
  2220   0029B4  EFDE  F014         	goto	u290
  2221   0029B8                     u291:
  2222   0029B8  EF06  F015         	goto	l753
  2223   0029BC                     u290:
  2224   0029BC  0E01               	movlw	1
  2225   0029BE  6E0E               	movwf	___lwdiv@counter^(0+1280),c
  2226   0029C0  EFE6  F014         	goto	l1483
  2227   0029C4                     l1481:
  2228   0029C4  90D8               	bcf	status,0,c
  2229   0029C6  360A               	rlcf	___lwdiv@divisor^(0+1280),f,c
  2230   0029C8  360B               	rlcf	(___lwdiv@divisor+1)^(0+1280),f,c
  2231   0029CA  2A0E               	incf	___lwdiv@counter^(0+1280),f,c
  2232   0029CC                     l1483:
  2233   0029CC  AE0B               	btfss	(___lwdiv@divisor+1)^(0+1280),7,c
  2234   0029CE  EFEB  F014         	goto	u301
  2235   0029D2  EFED  F014         	goto	u300
  2236   0029D6                     u301:
  2237   0029D6  EFE2  F014         	goto	l1481
  2238   0029DA                     u300:
  2239   0029DA                     l1485:
  2240   0029DA  90D8               	bcf	status,0,c
  2241   0029DC  360C               	rlcf	___lwdiv@quotient^(0+1280),f,c
  2242   0029DE  360D               	rlcf	(___lwdiv@quotient+1)^(0+1280),f,c
  2243   0029E0  500A               	movf	___lwdiv@divisor^(0+1280),w,c
  2244   0029E2  5C08               	subwf	___lwdiv@dividend^(0+1280),w,c
  2245   0029E4  500B               	movf	(___lwdiv@divisor+1)^(0+1280),w,c
  2246   0029E6  5809               	subwfb	(___lwdiv@dividend+1)^(0+1280),w,c
  2247   0029E8  A0D8               	btfss	status,0,c
  2248   0029EA  EFF9  F014         	goto	u311
  2249   0029EE  EFFB  F014         	goto	u310
  2250   0029F2                     u311:
  2251   0029F2  EF00  F015         	goto	l1493
  2252   0029F6                     u310:
  2253   0029F6  500A               	movf	___lwdiv@divisor^(0+1280),w,c
  2254   0029F8  5E08               	subwf	___lwdiv@dividend^(0+1280),f,c
  2255   0029FA  500B               	movf	(___lwdiv@divisor+1)^(0+1280),w,c
  2256   0029FC  5A09               	subwfb	(___lwdiv@dividend+1)^(0+1280),f,c
  2257   0029FE  800C               	bsf	___lwdiv@quotient^(0+1280),0,c
  2258   002A00                     l1493:
  2259   002A00  90D8               	bcf	status,0,c
  2260   002A02  320B               	rrcf	(___lwdiv@divisor+1)^(0+1280),f,c
  2261   002A04  320A               	rrcf	___lwdiv@divisor^(0+1280),f,c
  2262   002A06  2E0E               	decfsz	___lwdiv@counter^(0+1280),f,c
  2263   002A08  EFED  F014         	goto	l1485
  2264   002A0C                     l753:
  2265   002A0C  C50C  F508         	movff	___lwdiv@quotient,?___lwdiv
  2266   002A10  C50D  F509         	movff	___lwdiv@quotient+1,?___lwdiv+1
  2267   002A14  0012               	return		;funcret
  2268   002A16                     __end_of___lwdiv:
  2269                           	callstack 0
  2270                           
  2271 ;; *************** function _ESCRIBE_MENSAJE2 *****************
  2272 ;; Defined at:
  2273 ;;		line 77 in file "LCD.c"
  2274 ;; Parameters:    Size  Location     Type
  2275 ;;  cadena          1    5[COMRAM] PTR const unsigned char 
  2276 ;;		 -> STR_4(14), STR_2(16), STR_1(17), 
  2277 ;; Auto vars:     Size  Location     Type
  2278 ;;  i               1    8[COMRAM] unsigned char 
  2279 ;;  tam             1    7[COMRAM] unsigned char 
  2280 ;; Return value:  Size  Location     Type
  2281 ;;                  1    wreg      void 
  2282 ;; Registers used:
  2283 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2284 ;; Tracked objects:
  2285 ;;		On entry : 0/0
  2286 ;;		On exit  : 0/0
  2287 ;;		Unchanged: 0/0
  2288 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2289 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2290 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2291 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2292 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2293 ;;Total ram usage:        4 bytes
  2294 ;; Hardware stack levels used: 1
  2295 ;; Hardware stack levels required when called: 3
  2296 ;; This function calls:
  2297 ;;		_ENVIA_CHAR
  2298 ;;		_strlen
  2299 ;; This function is called by:
  2300 ;;		_main
  2301 ;; This function uses a non-reentrant model
  2302 ;;
  2303                           
  2304                           	psect	text17
  2305   002C4C                     __ptext17:
  2306                           	callstack 0
  2307   002C4C                     _ESCRIBE_MENSAJE2:
  2308                           	callstack 123
  2309   002C4C                     
  2310                           ;LCD.c: 77: void ESCRIBE_MENSAJE2(const char *cadena);LCD.c: 78: {;LCD.c: 79:     unsign
      +                          ed char tam;;LCD.c: 80:     tam = strlen(cadena);
  2311   002C4C  C506  F503         	movff	ESCRIBE_MENSAJE2@cadena,strlen@s
  2312   002C50  EC67  F016         	call	_strlen	;wreg free
  2313   002C54  5003               	movf	?_strlen^(0+1280),w,c
  2314   002C56  6E08               	movwf	ESCRIBE_MENSAJE2@tam^(0+1280),c
  2315   002C58                     
  2316                           ;LCD.c: 82:  for(i = 0; i<tam; i++)
  2317   002C58  0E00               	movlw	0
  2318   002C5A  6E09               	movwf	ESCRIBE_MENSAJE2@i^(0+1280),c
  2319   002C5C  EF3E  F016         	goto	l1539
  2320   002C60                     l1535:
  2321                           
  2322                           ;LCD.c: 83:  {;LCD.c: 84:   ENVIA_CHAR(cadena[i]);
  2323   002C60  5006               	movf	ESCRIBE_MENSAJE2@cadena^(0+1280),w,c
  2324   002C62  2409               	addwf	ESCRIBE_MENSAJE2@i^(0+1280),w,c
  2325   002C64  6E07               	movwf	??_ESCRIBE_MENSAJE2^(0+1280),c
  2326   002C66  C507  F4F6         	movff	??_ESCRIBE_MENSAJE2,tblptrl
  2327   002C6A                     	if	1	;There is more than 1 active tblptr byte
  2328   002C6A  0E25               	movlw	high __smallconst
  2329   002C6C  6EF7               	movwf	tblptrh,c
  2330   002C6E                     	endif
  2331   002C6E                     	if	0	;tblptru may be non-zero
  2332   002C6E                     	endif
  2333   002C6E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2334   002C6E  0E00               	movlw	low (__smallconst shr (0+16))
  2335   002C70  6EF8               	movwf	tblptru,c
  2336   002C72                     	endif
  2337   002C72  0008               	tblrd		*
  2338   002C74  50F5               	movf	tablat,w,c
  2339   002C76  EC9D  F016         	call	_ENVIA_CHAR
  2340   002C7A                     
  2341                           ;LCD.c: 85:  }
  2342   002C7A  2A09               	incf	ESCRIBE_MENSAJE2@i^(0+1280),f,c
  2343   002C7C                     l1539:
  2344   002C7C  5008               	movf	ESCRIBE_MENSAJE2@tam^(0+1280),w,c
  2345   002C7E  5C09               	subwf	ESCRIBE_MENSAJE2@i^(0+1280),w,c
  2346   002C80  A0D8               	btfss	status,0,c
  2347   002C82  EF45  F016         	goto	u391
  2348   002C86  EF47  F016         	goto	u390
  2349   002C8A                     u391:
  2350   002C8A  EF30  F016         	goto	l1535
  2351   002C8E                     u390:
  2352   002C8E  0012               	return		;funcret
  2353   002C90                     __end_of_ESCRIBE_MENSAJE2:
  2354                           	callstack 0
  2355                           
  2356 ;; *************** function _strlen *****************
  2357 ;; Defined at:
  2358 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\strlen.c"
  2359 ;; Parameters:    Size  Location     Type
  2360 ;;  s               1    2[COMRAM] PTR const unsigned char 
  2361 ;;		 -> STR_6(12), STR_5(6), STR_4(14), STR_3(5), 
  2362 ;;		 -> STR_2(16), STR_1(17), 
  2363 ;; Auto vars:     Size  Location     Type
  2364 ;;  a               1    4[COMRAM] PTR const unsigned char 
  2365 ;;		 -> STR_6(12), STR_5(6), STR_4(14), STR_3(5), 
  2366 ;;		 -> STR_2(16), STR_1(17), 
  2367 ;; Return value:  Size  Location     Type
  2368 ;;                  2    2[COMRAM] unsigned int 
  2369 ;; Registers used:
  2370 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  2371 ;; Tracked objects:
  2372 ;;		On entry : 0/0
  2373 ;;		On exit  : 0/0
  2374 ;;		Unchanged: 0/0
  2375 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2376 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2377 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2378 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2379 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2380 ;;Total ram usage:        3 bytes
  2381 ;; Hardware stack levels used: 1
  2382 ;; Hardware stack levels required when called: 1
  2383 ;; This function calls:
  2384 ;;		Nothing
  2385 ;; This function is called by:
  2386 ;;		_ESCRIBE_MENSAJE2
  2387 ;;		_U1_STRING_SEND
  2388 ;; This function uses a non-reentrant model
  2389 ;;
  2390                           
  2391                           	psect	text18
  2392   002CCE                     __ptext18:
  2393                           	callstack 0
  2394   002CCE                     _strlen:
  2395                           	callstack 124
  2396   002CCE  C503  F505         	movff	strlen@s,strlen@a
  2397   002CD2  EF6C  F016         	goto	l1469
  2398   002CD6                     l1467:
  2399   002CD6  2A03               	incf	strlen@s^(0+1280),f,c
  2400   002CD8                     l1469:
  2401   002CD8  C503  F4F6         	movff	strlen@s,tblptrl
  2402   002CDC                     	if	1	;There is more than 1 active tblptr byte
  2403   002CDC  0E25               	movlw	high __smallconst
  2404   002CDE  6EF7               	movwf	tblptrh,c
  2405   002CE0                     	endif
  2406   002CE0                     	if	0	;tblptru may be non-zero
  2407   002CE0                     	endif
  2408   002CE0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2409   002CE0  0E00               	movlw	low (__smallconst shr (0+16))
  2410   002CE2  6EF8               	movwf	tblptru,c
  2411   002CE4                     	endif
  2412   002CE4  0008               	tblrd		*
  2413   002CE6  50F5               	movf	tablat,w,c
  2414   002CE8  0900               	iorlw	0
  2415   002CEA  A4D8               	btfss	status,2,c
  2416   002CEC  EF7A  F016         	goto	u281
  2417   002CF0  EF7C  F016         	goto	u280
  2418   002CF4                     u281:
  2419   002CF4  EF6B  F016         	goto	l1467
  2420   002CF8                     u280:
  2421   002CF8  5005               	movf	strlen@a^(0+1280),w,c
  2422   002CFA  5C03               	subwf	strlen@s^(0+1280),w,c
  2423   002CFC  6E03               	movwf	?_strlen^(0+1280),c
  2424   002CFE  6A04               	clrf	(?_strlen+1)^(0+1280),c
  2425   002D00  BE03               	btfsc	?_strlen^(0+1280),7,c
  2426   002D02  0604               	decf	(?_strlen+1)^(0+1280),f,c
  2427   002D04  0012               	return		;funcret
  2428   002D06                     __end_of_strlen:
  2429                           	callstack 0
  2430                           
  2431 ;; *************** function _ENVIA_CHAR *****************
  2432 ;; Defined at:
  2433 ;;		line 88 in file "LCD.c"
  2434 ;; Parameters:    Size  Location     Type
  2435 ;;  dato            1    wreg     unsigned char 
  2436 ;; Auto vars:     Size  Location     Type
  2437 ;;  dato            1    3[COMRAM] unsigned char 
  2438 ;;  aux             1    4[COMRAM] unsigned char 
  2439 ;; Return value:  Size  Location     Type
  2440 ;;                  1    wreg      void 
  2441 ;; Registers used:
  2442 ;;		wreg, status,2, status,0, cstack
  2443 ;; Tracked objects:
  2444 ;;		On entry : 0/0
  2445 ;;		On exit  : 0/0
  2446 ;;		Unchanged: 0/0
  2447 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2448 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2449 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2450 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2451 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2452 ;;Total ram usage:        2 bytes
  2453 ;; Hardware stack levels used: 1
  2454 ;; Hardware stack levels required when called: 2
  2455 ;; This function calls:
  2456 ;;		_ENVIA_NIBBLE
  2457 ;;		_LEER_LCD
  2458 ;; This function is called by:
  2459 ;;		_ESCRIBE_MENSAJE2
  2460 ;;		_LCD_ESCRIBE_VAR_INT
  2461 ;;		_ESCRIBE_MENSAJE
  2462 ;;		_GENERACARACTER
  2463 ;;		_LCD_ESCRIBE_VAR_CHAR
  2464 ;;		_LCD_CHAR_GRADO
  2465 ;;		_LCD_VARCHAR_BITS
  2466 ;; This function uses a non-reentrant model
  2467 ;;
  2468                           
  2469                           	psect	text19
  2470   002D3A                     __ptext19:
  2471                           	callstack 0
  2472   002D3A                     _ENVIA_CHAR:
  2473                           	callstack 123
  2474                           
  2475                           ;incstack = 0
  2476                           ;ENVIA_CHAR@dato stored from wreg
  2477   002D3A  6E04               	movwf	ENVIA_CHAR@dato^(0+1280),c
  2478   002D3C                     
  2479                           ;LCD.c: 88: void ENVIA_CHAR(unsigned char dato);LCD.c: 89: {;LCD.c: 90:  unsigned char a
      +                          ux;;LCD.c: 91:  LATDbits.LATD0 = 1;
  2480   002D3C  80C1               	bsf	193,0,c	;volatile
  2481   002D3E                     
  2482                           ;LCD.c: 92:  LEER_LCD();
  2483   002D3E  EC0B  F015         	call	_LEER_LCD	;wreg free
  2484   002D42                     
  2485                           ;LCD.c: 93:  TRISD = 0x00;
  2486   002D42  0E00               	movlw	0
  2487   002D44  6EC9               	movwf	201,c	;volatile
  2488   002D46                     
  2489                           ;LCD.c: 94:     _delay((unsigned long)((100)*(32000000UL/4000000.0)));
  2490   002D46  0EA0               	movlw	160
  2491   002D48                     u497:
  2492   002D48  D000               	nop2	
  2493   002D4A  2EE8               	decfsz	wreg,f,c
  2494   002D4C  D7FD               	bra	u497
  2495   002D4E                     
  2496                           ;LCD.c: 95:  LATDbits.LATD1 = 0;
  2497   002D4E  92C1               	bcf	193,1,c	;volatile
  2498   002D50                     
  2499                           ;LCD.c: 96:  LATDbits.LATD2 = 0;
  2500   002D50  94C1               	bcf	193,2,c	;volatile
  2501   002D52                     
  2502                           ;LCD.c: 97:  LATDbits.LATD0 = 1;
  2503   002D52  80C1               	bsf	193,0,c	;volatile
  2504   002D54                     
  2505                           ;LCD.c: 98:  aux = dato & 0xF0;
  2506   002D54  5004               	movf	ENVIA_CHAR@dato^(0+1280),w,c
  2507   002D56  0BF0               	andlw	240
  2508   002D58  6E05               	movwf	ENVIA_CHAR@aux^(0+1280),c
  2509   002D5A                     
  2510                           ;LCD.c: 99:  ENVIA_NIBBLE(aux);
  2511   002D5A  5005               	movf	ENVIA_CHAR@aux^(0+1280),w,c
  2512   002D5C  ECE5  F016         	call	_ENVIA_NIBBLE
  2513   002D60                     
  2514                           ;LCD.c: 100:  aux = dato << 4;
  2515   002D60  3804               	swapf	ENVIA_CHAR@dato^(0+1280),w,c
  2516   002D62  0BF0               	andlw	240
  2517   002D64  6E05               	movwf	ENVIA_CHAR@aux^(0+1280),c
  2518   002D66                     
  2519                           ;LCD.c: 101:  ENVIA_NIBBLE(aux);
  2520   002D66  5005               	movf	ENVIA_CHAR@aux^(0+1280),w,c
  2521   002D68  ECE5  F016         	call	_ENVIA_NIBBLE
  2522   002D6C  0012               	return		;funcret
  2523   002D6E                     __end_of_ENVIA_CHAR:
  2524                           	callstack 0
  2525                           
  2526 ;; *************** function _LEER_LCD *****************
  2527 ;; Defined at:
  2528 ;;		line 152 in file "LCD.c"
  2529 ;; Parameters:    Size  Location     Type
  2530 ;;		None
  2531 ;; Auto vars:     Size  Location     Type
  2532 ;;  aux             1    2[COMRAM] unsigned char 
  2533 ;; Return value:  Size  Location     Type
  2534 ;;                  1    wreg      void 
  2535 ;; Registers used:
  2536 ;;		wreg, status,2, status,0
  2537 ;; Tracked objects:
  2538 ;;		On entry : 0/0
  2539 ;;		On exit  : 0/0
  2540 ;;		Unchanged: 0/0
  2541 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2542 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2543 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2544 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2545 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2546 ;;Total ram usage:        1 bytes
  2547 ;; Hardware stack levels used: 1
  2548 ;; Hardware stack levels required when called: 1
  2549 ;; This function calls:
  2550 ;;		Nothing
  2551 ;; This function is called by:
  2552 ;;		_ENVIA_CHAR
  2553 ;;		_ENVIA_LCD_CMD
  2554 ;; This function uses a non-reentrant model
  2555 ;;
  2556                           
  2557                           	psect	text20
  2558   002A16                     __ptext20:
  2559                           	callstack 0
  2560   002A16                     _LEER_LCD:
  2561                           	callstack 121
  2562   002A16                     
  2563                           ;LCD.c: 154:  unsigned char aux;;LCD.c: 155:  TRISD = 0xF8;
  2564   002A16  0EF8               	movlw	248
  2565   002A18  6EC9               	movwf	201,c	;volatile
  2566   002A1A                     
  2567                           ;LCD.c: 156:  LATDbits.LATD0 = 0;
  2568   002A1A  90C1               	bcf	193,0,c	;volatile
  2569   002A1C                     
  2570                           ;LCD.c: 157:  LATDbits.LATD1 = 1;
  2571   002A1C  82C1               	bsf	193,1,c	;volatile
  2572   002A1E                     
  2573                           ;LCD.c: 158:  LATDbits.LATD2 = 1;
  2574   002A1E  84C1               	bsf	193,2,c	;volatile
  2575   002A20                     
  2576                           ;LCD.c: 159:     _delay((unsigned long)((100)*(32000000UL/4000000.0)));
  2577   002A20  0EA0               	movlw	160
  2578   002A22                     u507:
  2579   002A22  D000               	nop2	
  2580   002A24  2EE8               	decfsz	wreg,f,c
  2581   002A26  D7FD               	bra	u507
  2582   002A28                     
  2583                           ;LCD.c: 160:  aux = PORTD;
  2584   002A28  C4D1 F503          	movff	1233,LEER_LCD@aux	;volatile
  2585   002A2C                     
  2586                           ;LCD.c: 161:  LATDbits.LATD2 = 0;
  2587   002A2C  94C1               	bcf	193,2,c	;volatile
  2588   002A2E                     
  2589                           ;LCD.c: 162:     _delay((unsigned long)((100)*(32000000UL/4000000.0)));
  2590   002A2E  0EA0               	movlw	160
  2591   002A30                     u517:
  2592   002A30  D000               	nop2	
  2593   002A32  2EE8               	decfsz	wreg,f,c
  2594   002A34  D7FD               	bra	u517
  2595   002A36                     
  2596                           ;LCD.c: 163:  LATDbits.LATD2 = 1;
  2597   002A36  84C1               	bsf	193,2,c	;volatile
  2598   002A38                     
  2599                           ;LCD.c: 164:     _delay((unsigned long)((100)*(32000000UL/4000000.0)));
  2600   002A38  0EA0               	movlw	160
  2601   002A3A                     u527:
  2602   002A3A  D000               	nop2	
  2603   002A3C  2EE8               	decfsz	wreg,f,c
  2604   002A3E  D7FD               	bra	u527
  2605   002A40                     
  2606                           ;LCD.c: 165:  LATDbits.LATD2 = 0;
  2607   002A40  94C1               	bcf	193,2,c	;volatile
  2608   002A42                     l963:
  2609                           
  2610                           ;LCD.c: 166:  aux = aux & 0x80;
  2611   002A42  5003               	movf	LEER_LCD@aux^(0+1280),w,c
  2612   002A44  0B80               	andlw	128
  2613   002A46  6E03               	movwf	LEER_LCD@aux^(0+1280),c
  2614                           
  2615                           ;LCD.c: 167:  while(aux == 0x80)
  2616   002A48  EF3A  F015         	goto	l977
  2617   002A4C                     l93:
  2618                           
  2619                           ;LCD.c: 168:         {;LCD.c: 169:             LATDbits.LATD2 = 1;
  2620   002A4C  84C1               	bsf	193,2,c	;volatile
  2621   002A4E                     
  2622                           ;LCD.c: 170:             _delay((unsigned long)((100)*(32000000UL/4000000.0)));
  2623   002A4E  0EA0               	movlw	160
  2624   002A50                     u537:
  2625   002A50  D000               	nop2	
  2626   002A52  2EE8               	decfsz	wreg,f,c
  2627   002A54  D7FD               	bra	u537
  2628   002A56                     
  2629                           ;LCD.c: 171:             aux = PORTD;
  2630   002A56  C4D1 F503          	movff	1233,LEER_LCD@aux	;volatile
  2631   002A5A                     
  2632                           ;LCD.c: 172:             LATDbits.LATD2 = 0;
  2633   002A5A  94C1               	bcf	193,2,c	;volatile
  2634                           
  2635                           ;LCD.c: 173:             _delay((unsigned long)((100)*(32000000UL/4000000.0)));
  2636   002A5C  0EA0               	movlw	160
  2637   002A5E                     u547:
  2638   002A5E  D000               	nop2	
  2639   002A60  2EE8               	decfsz	wreg,f,c
  2640   002A62  D7FD               	bra	u547
  2641   002A64                     
  2642                           ;LCD.c: 174:             LATDbits.LATD2 = 1;
  2643   002A64  84C1               	bsf	193,2,c	;volatile
  2644                           
  2645                           ;LCD.c: 175:             _delay((unsigned long)((100)*(32000000UL/4000000.0)));
  2646   002A66  0EA0               	movlw	160
  2647   002A68                     u557:
  2648   002A68  D000               	nop2	
  2649   002A6A  2EE8               	decfsz	wreg,f,c
  2650   002A6C  D7FD               	bra	u557
  2651   002A6E                     
  2652                           ;LCD.c: 176:             LATDbits.LATD2 = 0;
  2653   002A6E  94C1               	bcf	193,2,c	;volatile
  2654   002A70  EF21  F015         	goto	l963
  2655   002A74                     l977:
  2656                           
  2657                           ;LCD.c: 167:  while(aux == 0x80)
  2658   002A74  0E80               	movlw	128
  2659   002A76  1803               	xorwf	LEER_LCD@aux^(0+1280),w,c
  2660   002A78  B4D8               	btfsc	status,2,c
  2661   002A7A  EF41  F015         	goto	u11
  2662   002A7E  EF43  F015         	goto	u10
  2663   002A82                     u11:
  2664   002A82  EF26  F015         	goto	l93
  2665   002A86                     u10:
  2666   002A86  0012               	return		;funcret
  2667   002A88                     __end_of_LEER_LCD:
  2668                           	callstack 0
  2669                           
  2670 ;; *************** function _ENVIA_NIBBLE *****************
  2671 ;; Defined at:
  2672 ;;		line 126 in file "LCD.c"
  2673 ;; Parameters:    Size  Location     Type
  2674 ;;  dato            1    wreg     unsigned char 
  2675 ;; Auto vars:     Size  Location     Type
  2676 ;;  dato            1    2[COMRAM] unsigned char 
  2677 ;; Return value:  Size  Location     Type
  2678 ;;                  1    wreg      void 
  2679 ;; Registers used:
  2680 ;;		wreg, status,2, status,0
  2681 ;; Tracked objects:
  2682 ;;		On entry : 0/0
  2683 ;;		On exit  : 0/0
  2684 ;;		Unchanged: 0/0
  2685 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2686 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2687 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2688 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2689 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2690 ;;Total ram usage:        1 bytes
  2691 ;; Hardware stack levels used: 1
  2692 ;; Hardware stack levels required when called: 1
  2693 ;; This function calls:
  2694 ;;		Nothing
  2695 ;; This function is called by:
  2696 ;;		_ENVIA_CHAR
  2697 ;;		_LCD_CONFIG
  2698 ;;		_ENVIA_LCD_CMD
  2699 ;; This function uses a non-reentrant model
  2700 ;;
  2701                           
  2702                           	psect	text21
  2703   002DCA                     __ptext21:
  2704                           	callstack 0
  2705   002DCA                     _ENVIA_NIBBLE:
  2706                           	callstack 122
  2707                           
  2708                           ;incstack = 0
  2709                           ;ENVIA_NIBBLE@dato stored from wreg
  2710   002DCA  6E03               	movwf	ENVIA_NIBBLE@dato^(0+1280),c
  2711   002DCC                     
  2712                           ;LCD.c: 126: void ENVIA_NIBBLE(unsigned char dato);LCD.c: 127: {;LCD.c: 128:  LATD &= 0x
      +                          0F;
  2713   002DCC  0E0F               	movlw	15
  2714   002DCE  16C1               	andwf	193,f,c	;volatile
  2715                           
  2716                           ;LCD.c: 129:  dato &= 0xF0;
  2717   002DD0  0EF0               	movlw	240
  2718   002DD2  1603               	andwf	ENVIA_NIBBLE@dato^(0+1280),f,c
  2719                           
  2720                           ;LCD.c: 130:  LATD|= dato;
  2721   002DD4  5003               	movf	ENVIA_NIBBLE@dato^(0+1280),w,c	;volatile
  2722   002DD6  12C1               	iorwf	193,f,c	;volatile
  2723   002DD8                     
  2724                           ;LCD.c: 131:  LATDbits.LATD2 = 1;
  2725   002DD8  84C1               	bsf	193,2,c	;volatile
  2726   002DDA                     
  2727                           ;LCD.c: 132:     _delay((unsigned long)((100)*(32000000UL/4000000.0)));
  2728   002DDA  0EA0               	movlw	160
  2729   002DDC                     u567:
  2730   002DDC  D000               	nop2	
  2731   002DDE  2EE8               	decfsz	wreg,f,c
  2732   002DE0  D7FD               	bra	u567
  2733   002DE2                     
  2734                           ;LCD.c: 133:  LATDbits.LATD2 = 0;
  2735   002DE2  94C1               	bcf	193,2,c	;volatile
  2736   002DE4  0012               	return		;funcret
  2737   002DE6                     __end_of_ENVIA_NIBBLE:
  2738                           	callstack 0
  2739                           
  2740 ;; *************** function _U1RX_ISR *****************
  2741 ;; Defined at:
  2742 ;;		line 140 in file "maincode05.c"
  2743 ;; Parameters:    Size  Location     Type
  2744 ;;		None
  2745 ;; Auto vars:     Size  Location     Type
  2746 ;;		None
  2747 ;; Return value:  Size  Location     Type
  2748 ;;                  1    wreg      void 
  2749 ;; Registers used:
  2750 ;;		wreg, status,2, status,0
  2751 ;; Tracked objects:
  2752 ;;		On entry : 0/0
  2753 ;;		On exit  : 0/0
  2754 ;;		Unchanged: 0/0
  2755 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2756 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2757 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2758 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2759 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2760 ;;Total ram usage:        2 bytes
  2761 ;; Hardware stack levels used: 1
  2762 ;; This function calls:
  2763 ;;		Nothing
  2764 ;; This function is called by:
  2765 ;;		Interrupt level 2
  2766 ;; This function uses a non-reentrant model
  2767 ;;
  2768                           
  2769                           	psect	text22
  2770   002B58                     __ptext22:
  2771                           	callstack 0
  2772   002B58                     _U1RX_ISR:
  2773                           	callstack 121
  2774   002B58                     
  2775                           ;maincode05.c: 141:     PIR4bits.U1RXIF = 0;
  2776   002B58  90B2               	bcf	178,0,c	;volatile
  2777                           
  2778                           ;maincode05.c: 142:     switch(U1RXB){
  2779   002B5A  EFBB  F015         	goto	i2l1387
  2780   002B5E                     i2l254:
  2781                           
  2782                           ; BSR set to: 2
  2783                           ;maincode05.c: 144:             LATCbits.LATC0 = 1;
  2784   002B5E  80C0               	bsf	192,0,c	;volatile
  2785                           
  2786                           ;maincode05.c: 145:             break;
  2787   002B60  EFD9  F015         	goto	i2l259
  2788   002B64                     i2l256:
  2789                           
  2790                           ; BSR set to: 2
  2791                           ;maincode05.c: 147:             LATCbits.LATC0 = 0;
  2792   002B64  90C0               	bcf	192,0,c	;volatile
  2793                           
  2794                           ;maincode05.c: 148:             break;
  2795   002B66  EFD9  F015         	goto	i2l259
  2796   002B6A                     i2l257:
  2797                           
  2798                           ; BSR set to: 2
  2799                           ;maincode05.c: 150:             LATCbits.LATC1 = 1;
  2800   002B6A  82C0               	bsf	192,1,c	;volatile
  2801                           
  2802                           ;maincode05.c: 151:             break;
  2803   002B6C  EFD9  F015         	goto	i2l259
  2804   002B70                     i2l258:
  2805                           
  2806                           ; BSR set to: 2
  2807                           ;maincode05.c: 153:             LATCbits.LATC1 = 0;
  2808   002B70  92C0               	bcf	192,1,c	;volatile
  2809                           
  2810                           ;maincode05.c: 154:             break;
  2811   002B72  EFD9  F015         	goto	i2l259
  2812   002B76                     i2l1387:
  2813   002B76  0102               	movlb	2	; () banked
  2814   002B78  51A1               	movf	161,w,b	;volatile
  2815   002B7A  6E01               	movwf	??_U1RX_ISR^(0+1280),c
  2816   002B7C  6A02               	clrf	(??_U1RX_ISR+1)^(0+1280),c
  2817                           
  2818                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2819                           ; Switch size 1, requested type "simple"
  2820                           ; Number of cases is 1, Range of values is 0 to 0
  2821                           ; switch strategies available:
  2822                           ; Name         Instructions Cycles
  2823                           ; simple_byte            4     3 (average)
  2824                           ;	Chosen strategy is simple_byte
  2825   002B7E  5002               	movf	(??_U1RX_ISR+1)^(0+1280),w,c
  2826   002B80  0A00               	xorlw	0	; case 0
  2827   002B82  B4D8               	btfsc	status,2,c
  2828   002B84  EFC6  F015         	goto	i2l1709
  2829   002B88  EFD9  F015         	goto	i2l259
  2830   002B8C                     i2l1709:
  2831                           
  2832                           ; BSR set to: 2
  2833                           ; Switch size 1, requested type "simple"
  2834                           ; Number of cases is 4, Range of values is 49 to 52
  2835                           ; switch strategies available:
  2836                           ; Name         Instructions Cycles
  2837                           ; simple_byte           13     7 (average)
  2838                           ;	Chosen strategy is simple_byte
  2839   002B8C  5001               	movf	??_U1RX_ISR^(0+1280),w,c
  2840   002B8E  0A31               	xorlw	49	; case 49
  2841   002B90  B4D8               	btfsc	status,2,c
  2842   002B92  EFAF  F015         	goto	i2l254
  2843   002B96  0A03               	xorlw	3	; case 50
  2844   002B98  B4D8               	btfsc	status,2,c
  2845   002B9A  EFB2  F015         	goto	i2l256
  2846   002B9E  0A01               	xorlw	1	; case 51
  2847   002BA0  B4D8               	btfsc	status,2,c
  2848   002BA2  EFB5  F015         	goto	i2l257
  2849   002BA6  0A07               	xorlw	7	; case 52
  2850   002BA8  B4D8               	btfsc	status,2,c
  2851   002BAA  EFB8  F015         	goto	i2l258
  2852   002BAE  EFD9  F015         	goto	i2l259
  2853   002BB2                     i2l259:
  2854                           
  2855                           ; BSR set to: 2
  2856   002BB2  0011               	retfie		f
  2857   002BB4                     __end_of_U1RX_ISR:
  2858                           	callstack 0
  2859                           
  2860                           ;
  2861                           ; Interrupt Vector Table @ 0x8
  2862                           ;
  2863                           
  2864                           	psect	ivt0x8
  2865   000008                     __pivt0x8:
  2866                           	callstack 0
  2867   000008                     ivt0x8_base:
  2868                           	callstack 0
  2869                           
  2870                           ; Vector 0 : SWINT
  2871   000008  0040               	dw	ivt0x8_undefint shr (0+2)
  2872                           
  2873                           ; Vector 1 : HLVD
  2874   00000A  0040               	dw	ivt0x8_undefint shr (0+2)
  2875                           
  2876                           ; Vector 2 : OSF
  2877   00000C  0040               	dw	ivt0x8_undefint shr (0+2)
  2878                           
  2879                           ; Vector 3 : CSW
  2880   00000E  0040               	dw	ivt0x8_undefint shr (0+2)
  2881                           
  2882                           ; Vector 4 : Undefined
  2883   000010  0040               	dw	ivt0x8_undefint shr (0+2)
  2884                           
  2885                           ; Vector 5 : CLC1
  2886   000012  0040               	dw	ivt0x8_undefint shr (0+2)
  2887                           
  2888                           ; Vector 6 : Undefined
  2889   000014  0040               	dw	ivt0x8_undefint shr (0+2)
  2890                           
  2891                           ; Vector 7 : IOC
  2892   000016  0040               	dw	ivt0x8_undefint shr (0+2)
  2893                           
  2894                           ; Vector 8 : INT0
  2895   000018  0040               	dw	ivt0x8_undefint shr (0+2)
  2896                           
  2897                           ; Vector 9 : ZCD
  2898   00001A  0040               	dw	ivt0x8_undefint shr (0+2)
  2899                           
  2900                           ; Vector 10 : AD
  2901   00001C  0040               	dw	ivt0x8_undefint shr (0+2)
  2902                           
  2903                           ; Vector 11 : ACT
  2904   00001E  0040               	dw	ivt0x8_undefint shr (0+2)
  2905                           
  2906                           ; Vector 12 : CMP1
  2907   000020  0040               	dw	ivt0x8_undefint shr (0+2)
  2908                           
  2909                           ; Vector 13 : SMT1
  2910   000022  0040               	dw	ivt0x8_undefint shr (0+2)
  2911                           
  2912                           ; Vector 14 : SMT1PRA
  2913   000024  0040               	dw	ivt0x8_undefint shr (0+2)
  2914                           
  2915                           ; Vector 15 : SMT1PRW
  2916   000026  0040               	dw	ivt0x8_undefint shr (0+2)
  2917                           
  2918                           ; Vector 16 : ADT
  2919   000028  0040               	dw	ivt0x8_undefint shr (0+2)
  2920                           
  2921                           ; Vector 17 : Undefined
  2922   00002A  0040               	dw	ivt0x8_undefint shr (0+2)
  2923                           
  2924                           ; Vector 18 : Undefined
  2925   00002C  0040               	dw	ivt0x8_undefint shr (0+2)
  2926                           
  2927                           ; Vector 19 : Undefined
  2928   00002E  0040               	dw	ivt0x8_undefint shr (0+2)
  2929                           
  2930                           ; Vector 20 : DMA1SCNT
  2931   000030  0040               	dw	ivt0x8_undefint shr (0+2)
  2932                           
  2933                           ; Vector 21 : DMA1DCNT
  2934   000032  0040               	dw	ivt0x8_undefint shr (0+2)
  2935                           
  2936                           ; Vector 22 : DMA1OR
  2937   000034  0040               	dw	ivt0x8_undefint shr (0+2)
  2938                           
  2939                           ; Vector 23 : DMA1A
  2940   000036  0040               	dw	ivt0x8_undefint shr (0+2)
  2941                           
  2942                           ; Vector 24 : SPI1RX
  2943   000038  0040               	dw	ivt0x8_undefint shr (0+2)
  2944                           
  2945                           ; Vector 25 : SPI1TX
  2946   00003A  0040               	dw	ivt0x8_undefint shr (0+2)
  2947                           
  2948                           ; Vector 26 : SPI1
  2949   00003C  0040               	dw	ivt0x8_undefint shr (0+2)
  2950                           
  2951                           ; Vector 27 : TMR2
  2952   00003E  0040               	dw	ivt0x8_undefint shr (0+2)
  2953                           
  2954                           ; Vector 28 : TMR1
  2955   000040  0040               	dw	ivt0x8_undefint shr (0+2)
  2956                           
  2957                           ; Vector 29 : TMR1G
  2958   000042  0040               	dw	ivt0x8_undefint shr (0+2)
  2959                           
  2960                           ; Vector 30 : CCP1
  2961   000044  0040               	dw	ivt0x8_undefint shr (0+2)
  2962                           
  2963                           ; Vector 31 : TMR0
  2964   000046  0040               	dw	ivt0x8_undefint shr (0+2)
  2965                           
  2966                           ; Vector 32 : U1RX
  2967   000048  0AD6               	dw	_U1RX_ISR shr (0+2)
  2968                           
  2969                           ; Vector 33 : U1TX
  2970   00004A  0040               	dw	ivt0x8_undefint shr (0+2)
  2971                           
  2972                           ; Vector 34 : U1E
  2973   00004C  0040               	dw	ivt0x8_undefint shr (0+2)
  2974                           
  2975                           ; Vector 35 : U1
  2976   00004E  0040               	dw	ivt0x8_undefint shr (0+2)
  2977                           
  2978                           ; Vector 36 : Undefined
  2979   000050  0040               	dw	ivt0x8_undefint shr (0+2)
  2980                           
  2981                           ; Vector 37 : Undefined
  2982   000052  0040               	dw	ivt0x8_undefint shr (0+2)
  2983                           
  2984                           ; Vector 38 : PWM1PR
  2985   000054  0040               	dw	ivt0x8_undefint shr (0+2)
  2986                           
  2987                           ; Vector 39 : PWM1
  2988   000056  0040               	dw	ivt0x8_undefint shr (0+2)
  2989                           
  2990                           ; Vector 40 : SPI2RX
  2991   000058  0040               	dw	ivt0x8_undefint shr (0+2)
  2992                           
  2993                           ; Vector 41 : SPI2TX
  2994   00005A  0040               	dw	ivt0x8_undefint shr (0+2)
  2995                           
  2996                           ; Vector 42 : SPI2
  2997   00005C  0040               	dw	ivt0x8_undefint shr (0+2)
  2998                           
  2999                           ; Vector 43 : Undefined
  3000   00005E  0040               	dw	ivt0x8_undefint shr (0+2)
  3001                           
  3002                           ; Vector 44 : TMR3
  3003   000060  0040               	dw	ivt0x8_undefint shr (0+2)
  3004                           
  3005                           ; Vector 45 : TMR3G
  3006   000062  0040               	dw	ivt0x8_undefint shr (0+2)
  3007                           
  3008                           ; Vector 46 : PWM2PR
  3009   000064  0040               	dw	ivt0x8_undefint shr (0+2)
  3010                           
  3011                           ; Vector 47 : PWM2
  3012   000066  0040               	dw	ivt0x8_undefint shr (0+2)
  3013                           
  3014                           ; Vector 48 : INT1
  3015   000068  0040               	dw	ivt0x8_undefint shr (0+2)
  3016                           
  3017                           ; Vector 49 : CLC2
  3018   00006A  0040               	dw	ivt0x8_undefint shr (0+2)
  3019                           
  3020                           ; Vector 50 : CWG1
  3021   00006C  0040               	dw	ivt0x8_undefint shr (0+2)
  3022                           
  3023                           ; Vector 51 : NCO1
  3024   00006E  0040               	dw	ivt0x8_undefint shr (0+2)
  3025                           
  3026                           ; Vector 52 : DMA2SCNT
  3027   000070  0040               	dw	ivt0x8_undefint shr (0+2)
  3028                           
  3029                           ; Vector 53 : DMA2DCNT
  3030   000072  0040               	dw	ivt0x8_undefint shr (0+2)
  3031                           
  3032                           ; Vector 54 : DMA2OR
  3033   000074  0040               	dw	ivt0x8_undefint shr (0+2)
  3034                           
  3035                           ; Vector 55 : DMA2A
  3036   000076  0040               	dw	ivt0x8_undefint shr (0+2)
  3037                           
  3038                           ; Vector 56 : I2C1RX
  3039   000078  0040               	dw	ivt0x8_undefint shr (0+2)
  3040                           
  3041                           ; Vector 57 : I2C1TX
  3042   00007A  0040               	dw	ivt0x8_undefint shr (0+2)
  3043                           
  3044                           ; Vector 58 : I2C1
  3045   00007C  0040               	dw	ivt0x8_undefint shr (0+2)
  3046                           
  3047                           ; Vector 59 : I2C1E
  3048   00007E  0040               	dw	ivt0x8_undefint shr (0+2)
  3049                           
  3050                           ; Vector 60 : Undefined
  3051   000080  0040               	dw	ivt0x8_undefint shr (0+2)
  3052                           
  3053                           ; Vector 61 : CLC3
  3054   000082  0040               	dw	ivt0x8_undefint shr (0+2)
  3055                           
  3056                           ; Vector 62 : PWM3PR
  3057   000084  0040               	dw	ivt0x8_undefint shr (0+2)
  3058                           
  3059                           ; Vector 63 : PWM3
  3060   000086  0040               	dw	ivt0x8_undefint shr (0+2)
  3061                           
  3062                           ; Vector 64 : U2RX
  3063   000088  0040               	dw	ivt0x8_undefint shr (0+2)
  3064                           
  3065                           ; Vector 65 : U2TX
  3066   00008A  0040               	dw	ivt0x8_undefint shr (0+2)
  3067                           
  3068                           ; Vector 66 : U2E
  3069   00008C  0040               	dw	ivt0x8_undefint shr (0+2)
  3070                           
  3071                           ; Vector 67 : U2
  3072   00008E  0040               	dw	ivt0x8_undefint shr (0+2)
  3073                           
  3074                           ; Vector 68 : TMR5
  3075   000090  0040               	dw	ivt0x8_undefint shr (0+2)
  3076                           
  3077                           ; Vector 69 : TMR5G
  3078   000092  0040               	dw	ivt0x8_undefint shr (0+2)
  3079                           
  3080                           ; Vector 70 : CCP2
  3081   000094  0040               	dw	ivt0x8_undefint shr (0+2)
  3082                           
  3083                           ; Vector 71 : SCAN
  3084   000096  0040               	dw	ivt0x8_undefint shr (0+2)
  3085                           
  3086                           ; Vector 72 : U3RX
  3087   000098  0040               	dw	ivt0x8_undefint shr (0+2)
  3088                           
  3089                           ; Vector 73 : U3TX
  3090   00009A  0040               	dw	ivt0x8_undefint shr (0+2)
  3091                           
  3092                           ; Vector 74 : U3E
  3093   00009C  0040               	dw	ivt0x8_undefint shr (0+2)
  3094                           
  3095                           ; Vector 75 : U3
  3096   00009E  0040               	dw	ivt0x8_undefint shr (0+2)
  3097                           
  3098                           ; Vector 76 : Undefined
  3099   0000A0  0040               	dw	ivt0x8_undefint shr (0+2)
  3100                           
  3101                           ; Vector 77 : CLC4
  3102   0000A2  0040               	dw	ivt0x8_undefint shr (0+2)
  3103                           
  3104                           ; Vector 78 : Undefined
  3105   0000A4  0040               	dw	ivt0x8_undefint shr (0+2)
  3106                           
  3107                           ; Vector 79 : Undefined
  3108   0000A6  0040               	dw	ivt0x8_undefint shr (0+2)
  3109                           
  3110                           ; Vector 80 : INT2
  3111   0000A8  0040               	dw	ivt0x8_undefint shr (0+2)
  3112                           
  3113                           ; Vector 81 : CLC5
  3114   0000AA  0040               	dw	ivt0x8_undefint shr (0+2)
  3115                           
  3116                           ; Vector 82 : CWG2
  3117   0000AC  0040               	dw	ivt0x8_undefint shr (0+2)
  3118                           
  3119                           ; Vector 83 : NCO2
  3120   0000AE  0040               	dw	ivt0x8_undefint shr (0+2)
  3121                           
  3122                           ; Vector 84 : DMA3SCNT
  3123   0000B0  0040               	dw	ivt0x8_undefint shr (0+2)
  3124                           
  3125                           ; Vector 85 : DMA3DCNT
  3126   0000B2  0040               	dw	ivt0x8_undefint shr (0+2)
  3127                           
  3128                           ; Vector 86 : DMA3OR
  3129   0000B4  0040               	dw	ivt0x8_undefint shr (0+2)
  3130                           
  3131                           ; Vector 87 : DMA3A
  3132   0000B6  0040               	dw	ivt0x8_undefint shr (0+2)
  3133                           
  3134                           ; Vector 88 : CCP3
  3135   0000B8  0040               	dw	ivt0x8_undefint shr (0+2)
  3136                           
  3137                           ; Vector 89 : CLC6
  3138   0000BA  0040               	dw	ivt0x8_undefint shr (0+2)
  3139                           
  3140                           ; Vector 90 : CWG3
  3141   0000BC  0040               	dw	ivt0x8_undefint shr (0+2)
  3142                           
  3143                           ; Vector 91 : TMR4
  3144   0000BE  0040               	dw	ivt0x8_undefint shr (0+2)
  3145                           
  3146                           ; Vector 92 : DMA4SCNT
  3147   0000C0  0040               	dw	ivt0x8_undefint shr (0+2)
  3148                           
  3149                           ; Vector 93 : DMA4DCNT
  3150   0000C2  0040               	dw	ivt0x8_undefint shr (0+2)
  3151                           
  3152                           ; Vector 94 : DMA4OR
  3153   0000C4  0040               	dw	ivt0x8_undefint shr (0+2)
  3154                           
  3155                           ; Vector 95 : DMA4A
  3156   0000C6  0040               	dw	ivt0x8_undefint shr (0+2)
  3157                           
  3158                           ; Vector 96 : U4RX
  3159   0000C8  0040               	dw	ivt0x8_undefint shr (0+2)
  3160                           
  3161                           ; Vector 97 : U4TX
  3162   0000CA  0040               	dw	ivt0x8_undefint shr (0+2)
  3163                           
  3164                           ; Vector 98 : U4E
  3165   0000CC  0040               	dw	ivt0x8_undefint shr (0+2)
  3166                           
  3167                           ; Vector 99 : U4
  3168   0000CE  0040               	dw	ivt0x8_undefint shr (0+2)
  3169                           
  3170                           ; Vector 100 : DMA5SCNT
  3171   0000D0  0040               	dw	ivt0x8_undefint shr (0+2)
  3172                           
  3173                           ; Vector 101 : DMA5DCNT
  3174   0000D2  0040               	dw	ivt0x8_undefint shr (0+2)
  3175                           
  3176                           ; Vector 102 : DMA5OR
  3177   0000D4  0040               	dw	ivt0x8_undefint shr (0+2)
  3178                           
  3179                           ; Vector 103 : DMA5A
  3180   0000D6  0040               	dw	ivt0x8_undefint shr (0+2)
  3181                           
  3182                           ; Vector 104 : U5RX
  3183   0000D8  0040               	dw	ivt0x8_undefint shr (0+2)
  3184                           
  3185                           ; Vector 105 : U5TX
  3186   0000DA  0040               	dw	ivt0x8_undefint shr (0+2)
  3187                           
  3188                           ; Vector 106 : U5E
  3189   0000DC  0040               	dw	ivt0x8_undefint shr (0+2)
  3190                           
  3191                           ; Vector 107 : U5
  3192   0000DE  0040               	dw	ivt0x8_undefint shr (0+2)
  3193                           
  3194                           ; Vector 108 : DMA6SCNT
  3195   0000E0  0040               	dw	ivt0x8_undefint shr (0+2)
  3196                           
  3197                           ; Vector 109 : DMA6DCNT
  3198   0000E2  0040               	dw	ivt0x8_undefint shr (0+2)
  3199                           
  3200                           ; Vector 110 : DMA6OR
  3201   0000E4  0040               	dw	ivt0x8_undefint shr (0+2)
  3202                           
  3203                           ; Vector 111 : DMA6A
  3204   0000E6  0040               	dw	ivt0x8_undefint shr (0+2)
  3205                           
  3206                           ; Vector 112 : Undefined
  3207   0000E8  0040               	dw	ivt0x8_undefint shr (0+2)
  3208                           
  3209                           ; Vector 113 : CLC7
  3210   0000EA  0040               	dw	ivt0x8_undefint shr (0+2)
  3211                           
  3212                           ; Vector 114 : CMP2
  3213   0000EC  0040               	dw	ivt0x8_undefint shr (0+2)
  3214                           
  3215                           ; Vector 115 : NCO3
  3216   0000EE  0040               	dw	ivt0x8_undefint shr (0+2)
  3217                           
  3218                           ; Vector 116 : Undefined
  3219   0000F0  0040               	dw	ivt0x8_undefint shr (0+2)
  3220                           
  3221                           ; Vector 117 : Undefined
  3222   0000F2  0040               	dw	ivt0x8_undefint shr (0+2)
  3223                           
  3224                           ; Vector 118 : Undefined
  3225   0000F4  0040               	dw	ivt0x8_undefint shr (0+2)
  3226                           
  3227                           ; Vector 119 : Undefined
  3228   0000F6  0040               	dw	ivt0x8_undefint shr (0+2)
  3229                           
  3230                           ; Vector 120 : NVM
  3231   0000F8  0040               	dw	ivt0x8_undefint shr (0+2)
  3232                           
  3233                           ; Vector 121 : CLC8
  3234   0000FA  0040               	dw	ivt0x8_undefint shr (0+2)
  3235                           
  3236                           ; Vector 122 : CRC
  3237   0000FC  0040               	dw	ivt0x8_undefint shr (0+2)
  3238                           
  3239                           ; Vector 123 : TMR6
  3240   0000FE  0040               	dw	ivt0x8_undefint shr (0+2)
  3241   000100                     ivt0x8_undefint:
  3242                           	callstack 0
  3243   000100  00FF               	reset	
  3244                           
  3245                           	psect	rparam
  3246   000000                     
  3247                           	psect	config
  3248                           
  3249                           ;Config register CONFIG1 @ 0x300000
  3250                           ;	External Oscillator Selection
  3251                           ;	FEXTOSC = OFF, Oscillator not enabled
  3252                           ;	Reset Oscillator Selection
  3253                           ;	RSTOSC = EXTOSC, EXTOSC operating per FEXTOSC bits (device manufacturing default)
  3254   300000                     	org	3145728
  3255   300000  FC                 	db	252
  3256                           
  3257                           ;Config register CONFIG2 @ 0x300001
  3258                           ;	Clock out Enable bit
  3259                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
  3260                           ;	PRLOCKED One-Way Set Enable bit
  3261                           ;	PR1WAY = ON, PRLOCKED bit can be cleared and set only once
  3262                           ;	Clock Switch Enable bit
  3263                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
  3264                           ;	Fail-Safe Clock Monitor Enable bit
  3265                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
  3266   300001                     	org	3145729
  3267   300001  FF                 	db	255
  3268                           
  3269                           ;Config register CONFIG3 @ 0x300002
  3270                           ;	MCLR Enable bit
  3271                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
  3272                           ;	Power-up timer selection bits
  3273                           ;	PWRTS = PWRT_64, PWRT set at 64ms
  3274                           ;	Multi-vector enable bit
  3275                           ;	MVECEN = ON, Multi-vector enabled, Vector table used for interrupts
  3276                           ;	IVTLOCK bit One-way set enable bit
  3277                           ;	IVT1WAY = ON, IVTLOCKED bit can be cleared and set only once
  3278                           ;	Low Power BOR Enable bit
  3279                           ;	LPBOREN = OFF, Low-Power BOR disabled
  3280                           ;	Brown-out Reset Enable bits
  3281                           ;	BOREN = OFF, Brown-out Reset disabled
  3282   300002                     	org	3145730
  3283   300002  3D                 	db	61
  3284                           
  3285                           ;Config register CONFIG4 @ 0x300003
  3286                           ;	Brown-out Reset Voltage Selection bits
  3287                           ;	BORV = VBOR_1P9, Brown-out Reset Voltage (VBOR) set to 1.9V
  3288                           ;	ZCD Disable bit
  3289                           ;	ZCD = OFF, ZCD module is disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCD
      +                          CON
  3290                           ;	PPSLOCK bit One-Way Set Enable bit
  3291                           ;	PPS1WAY = ON, PPSLOCKED bit can be cleared and set only once; PPS registers remain loc
      +                          ked after one clear/set cycle
  3292                           ;	Stack Full/Underflow Reset Enable bit
  3293                           ;	STVREN = ON, Stack full/underflow will cause Reset
  3294                           ;	Low Voltage Programming Enable bit
  3295                           ;	LVP = OFF, HV on MCLR/VPP must be used for programming
  3296                           ;	Extended Instruction Set Enable bit
  3297                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
  3298   300003                     	org	3145731
  3299   300003  DF                 	db	223
  3300                           
  3301                           ;Config register CONFIG5 @ 0x300004
  3302                           ;	WDT Period selection bits
  3303                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  3304                           ;	WDT operating mode
  3305                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
  3306   300004                     	org	3145732
  3307   300004  9F                 	db	159
  3308                           
  3309                           ;Config register CONFIG6 @ 0x300005
  3310                           ;	WDT Window Select bits
  3311                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
  3312                           ;	WDT input clock selector
  3313                           ;	WDTCCS = SC, Software Control
  3314   300005                     	org	3145733
  3315   300005  FF                 	db	255
  3316                           
  3317                           ;Config register CONFIG7 @ 0x300006
  3318                           ;	Boot Block Size selection bits
  3319                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
  3320                           ;	Boot Block enable bit
  3321                           ;	BBEN = OFF, Boot block disabled
  3322                           ;	Storage Area Flash enable bit
  3323                           ;	SAFEN = OFF, SAF disabled
  3324                           ;	Background Debugger
  3325                           ;	DEBUG = OFF, Background Debugger disabled
  3326   300006                     	org	3145734
  3327   300006  FF                 	db	255
  3328                           
  3329                           ;Config register CONFIG8 @ 0x300007
  3330                           ;	Boot Block Write Protection bit
  3331                           ;	WRTB = OFF, Boot Block not Write protected
  3332                           ;	Configuration Register Write Protection bit
  3333                           ;	WRTC = OFF, Configuration registers not Write protected
  3334                           ;	Data EEPROM Write Protection bit
  3335                           ;	WRTD = OFF, Data EEPROM not Write protected
  3336                           ;	SAF Write protection bit
  3337                           ;	WRTSAF = OFF, SAF not Write Protected
  3338                           ;	Application Block write protection bit
  3339                           ;	WRTAPP = OFF, Application Block not write protected
  3340   300007                     	org	3145735
  3341   300007  FF                 	db	255
  3342                           
  3343                           ;Config register CONFIG10 @ 0x300009
  3344                           ;	PFM and Data EEPROM Code Protection bit
  3345                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
  3346   300009                     	org	3145737
  3347   300009  FF                 	db	255
  3348                           tosu	equ	0x4FF
  3349                           tosh	equ	0x4FE
  3350                           tosl	equ	0x4FD
  3351                           stkptr	equ	0x4FC
  3352                           pclatu	equ	0x4FB
  3353                           pclath	equ	0x4FA
  3354                           pcl	equ	0x4F9
  3355                           tblptru	equ	0x4F8
  3356                           tblptrh	equ	0x4F7
  3357                           tblptrl	equ	0x4F6
  3358                           tablat	equ	0x4F5
  3359                           prodh	equ	0x4F4
  3360                           prodl	equ	0x4F3
  3361                           indf0	equ	0x4EF
  3362                           postinc0	equ	0x4EE
  3363                           postdec0	equ	0x4ED
  3364                           preinc0	equ	0x4EC
  3365                           plusw0	equ	0x4EB
  3366                           fsr0h	equ	0x4EA
  3367                           fsr0l	equ	0x4E9
  3368                           wreg	equ	0x4E8
  3369                           indf1	equ	0x4E7
  3370                           postinc1	equ	0x4E6
  3371                           postdec1	equ	0x4E5
  3372                           preinc1	equ	0x4E4
  3373                           plusw1	equ	0x4E3
  3374                           fsr1h	equ	0x4E2
  3375                           fsr1l	equ	0x4E1
  3376                           bsr	equ	0x4E0
  3377                           indf2	equ	0x4DF
  3378                           postinc2	equ	0x4DE
  3379                           postdec2	equ	0x4DD
  3380                           preinc2	equ	0x4DC
  3381                           plusw2	equ	0x4DB
  3382                           fsr2h	equ	0x4DA
  3383                           fsr2l	equ	0x4D9
  3384                           status	equ	0x4D8

Data Sizes:
    Strings     70
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     28      28
    BANK5           160      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0
    BANK32          256      0       0
    BANK33          256      0       0
    BANK34          256      0       0
    BANK35          256      0       0
    BANK36          256      0       0

Pointer List with Targets:

    ESCRIBE_MENSAJE2@cadena	PTR const unsigned char  size(1) Largest target is 17
		 -> STR_1(CODE[17]), STR_2(CODE[16]), STR_4(CODE[14]), 

    strlen@a	PTR const unsigned char  size(1) Largest target is 17
		 -> STR_1(CODE[17]), STR_2(CODE[16]), STR_3(CODE[5]), STR_4(CODE[14]), 
		 -> STR_5(CODE[6]), STR_6(CODE[12]), 

    strlen@s	PTR const unsigned char  size(1) Largest target is 17
		 -> STR_1(CODE[17]), STR_2(CODE[16]), STR_3(CODE[5]), STR_4(CODE[14]), 
		 -> STR_5(CODE[6]), STR_6(CODE[12]), 

    U1_STRING_SEND@cadena	PTR const unsigned char  size(1) Largest target is 12
		 -> STR_3(CODE[5]), STR_5(CODE[6]), STR_6(CODE[12]), 


Critical Paths under _main in COMRAM

    _main->_LCD_ESCRIBE_VAR_INT
    _main->_U1_VAR_INT_SEND
    _configuro->_LCD_INIT
    _LCD_INIT->_CURSOR_ONOFF
    _LCD_INIT->_LCD_CONFIG
    _LCD_CONFIG->_ENVIA_LCD_CMD
    _CURSOR_ONOFF->_ENVIA_LCD_CMD
    _CURSOR_HOME->_ENVIA_LCD_CMD
    _BORRAR_LCD->_ENVIA_LCD_CMD
    _U1_VAR_INT_SEND->___lwdiv
    _U1_STRING_SEND->_strlen
    _U1_NEWLINE->_U1_BYTE_SEND
    _POS_CURSOR->_ENVIA_LCD_CMD
    _ENVIA_LCD_CMD->_ENVIA_NIBBLE
    _ENVIA_LCD_CMD->_LEER_LCD
    _LCD_ESCRIBE_VAR_INT->___lwdiv
    ___lwdiv->___lwmod
    _ESCRIBE_MENSAJE2->_ENVIA_CHAR
    _ESCRIBE_MENSAJE2->_strlen
    _ENVIA_CHAR->_ENVIA_NIBBLE
    _ENVIA_CHAR->_LEER_LCD

Critical Paths under _U1RX_ISR in COMRAM

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _U1RX_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _U1RX_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _U1RX_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _U1RX_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _U1RX_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _U1RX_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _U1RX_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _U1RX_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _U1RX_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _U1RX_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _U1RX_ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _U1RX_ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _U1RX_ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _U1RX_ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _U1RX_ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _U1RX_ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _U1RX_ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _U1RX_ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _U1RX_ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _U1RX_ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _U1RX_ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _U1RX_ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _U1RX_ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _U1RX_ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _U1RX_ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _U1RX_ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _U1RX_ISR in BANK31

    None.

Critical Paths under _main in BANK32

    None.

Critical Paths under _U1RX_ISR in BANK32

    None.

Critical Paths under _main in BANK33

    None.

Critical Paths under _U1RX_ISR in BANK33

    None.

Critical Paths under _main in BANK34

    None.

Critical Paths under _U1RX_ISR in BANK34

    None.

Critical Paths under _main in BANK35

    None.

Critical Paths under _U1RX_ISR in BANK35

    None.

Critical Paths under _main in BANK36

    None.

Critical Paths under _U1RX_ISR in BANK36

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0    9509
                                             24 COMRAM     4     4      0
                         _BORRAR_LCD
                   _ESCRIBE_MENSAJE2
                _LCD_ESCRIBE_VAR_INT
                         _POS_CURSOR
                         _U1_NEWLINE
                     _U1_STRING_SEND
                    _U1_VAR_INT_SEND
                          _configuro
                    _tomamuestra_ADC
 ---------------------------------------------------------------------------------
 (1) _tomamuestra_ADC                                      5     3      2      22
                                              2 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _configuro                                            0     0      0     525
                           _LCD_INIT
 ---------------------------------------------------------------------------------
 (2) _LCD_INIT                                             1     1      0     525
                                              6 COMRAM     1     1      0
                         _BORRAR_LCD
                        _CURSOR_HOME
                       _CURSOR_ONOFF
                         _LCD_CONFIG
 ---------------------------------------------------------------------------------
 (3) _LCD_CONFIG                                           1     1      0     135
                                              5 COMRAM     1     1      0
                      _ENVIA_LCD_CMD
                       _ENVIA_NIBBLE
 ---------------------------------------------------------------------------------
 (3) _CURSOR_ONOFF                                         1     1      0     150
                                              5 COMRAM     1     1      0
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (3) _CURSOR_HOME                                          0     0      0     120
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (3) _BORRAR_LCD                                           0     0      0     120
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (1) _U1_VAR_INT_SEND                                     10     7      3    3387
                                             14 COMRAM    10     7      3
                       _U1_BYTE_SEND
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (1) _U1_STRING_SEND                                       4     3      1     599
                                              5 COMRAM     4     3      1
                       _U1_BYTE_SEND
                             _strlen
 ---------------------------------------------------------------------------------
 (1) _U1_NEWLINE                                           0     0      0      15
                       _U1_BYTE_SEND
 ---------------------------------------------------------------------------------
 (2) _U1_BYTE_SEND                                         1     1      0      15
                                              2 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _POS_CURSOR                                           2     1      1     600
                                              5 COMRAM     2     1      1
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (4) _ENVIA_LCD_CMD                                        2     2      0     120
                                              3 COMRAM     2     2      0
                       _ENVIA_NIBBLE
                           _LEER_LCD
 ---------------------------------------------------------------------------------
 (1) _LCD_ESCRIBE_VAR_INT                                 10     7      3    3492
                                             14 COMRAM    10     7      3
                         _ENVIA_CHAR
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4    1375
                                              2 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4    1378
                                              7 COMRAM     7     3      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (1) _ESCRIBE_MENSAJE2                                     4     3      1     704
                                              5 COMRAM     4     3      1
                         _ENVIA_CHAR
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strlen                                               3     1      2     242
                                              2 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _ENVIA_CHAR                                           2     2      0     120
                                              3 COMRAM     2     2      0
                       _ENVIA_NIBBLE
                           _LEER_LCD
 ---------------------------------------------------------------------------------
 (5) _LEER_LCD                                             1     1      0      45
                                              2 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _ENVIA_NIBBLE                                         1     1      0      15
                                              2 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _U1RX_ISR                                             2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BORRAR_LCD
     _ENVIA_LCD_CMD
       _ENVIA_NIBBLE
       _LEER_LCD
   _ESCRIBE_MENSAJE2
     _ENVIA_CHAR
       _ENVIA_NIBBLE
       _LEER_LCD
     _strlen
   _LCD_ESCRIBE_VAR_INT
     _ENVIA_CHAR
     ___lwdiv
       ___lwmod (ARG)
     ___lwmod
   _POS_CURSOR
     _ENVIA_LCD_CMD
   _U1_NEWLINE
     _U1_BYTE_SEND
   _U1_STRING_SEND
     _U1_BYTE_SEND
     _strlen
   _U1_VAR_INT_SEND
     _U1_BYTE_SEND
     ___lwdiv
     ___lwmod
   _configuro
     _LCD_INIT
       _BORRAR_LCD
       _CURSOR_HOME
         _ENVIA_LCD_CMD
       _CURSOR_ONOFF
         _ENVIA_LCD_CMD
       _LCD_CONFIG
         _ENVIA_LCD_CMD
         _ENVIA_NIBBLE
   _tomamuestra_ADC

 _U1RX_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             400      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F     1C      1C       1       29.5%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK5            A0      0       0       4        0.0%
BANK5               A0      0       0       5        0.0%
BITBANK6           100      0       0       6        0.0%
BANK6              100      0       0       7        0.0%
BITBANK7           100      0       0       8        0.0%
BANK7              100      0       0       9        0.0%
BITBANK8           100      0       0      10        0.0%
BANK8              100      0       0      11        0.0%
BITBANK9           100      0       0      12        0.0%
BANK9              100      0       0      13        0.0%
BITBANK10          100      0       0      14        0.0%
BANK10             100      0       0      15        0.0%
BITBANK11          100      0       0      16        0.0%
BANK11             100      0       0      17        0.0%
BITBANK12          100      0       0      18        0.0%
BANK12             100      0       0      19        0.0%
BITBANK13          100      0       0      20        0.0%
BANK13             100      0       0      21        0.0%
BITBANK14          100      0       0      22        0.0%
BANK14             100      0       0      23        0.0%
BITBANK15          100      0       0      24        0.0%
BANK15             100      0       0      25        0.0%
BITBANK16          100      0       0      26        0.0%
BANK16             100      0       0      27        0.0%
BITBANK17          100      0       0      28        0.0%
BANK17             100      0       0      29        0.0%
BITBANK18          100      0       0      30        0.0%
BANK18             100      0       0      31        0.0%
BITBANK19          100      0       0      32        0.0%
BANK19             100      0       0      33        0.0%
BITBANK20          100      0       0      34        0.0%
BANK20             100      0       0      35        0.0%
BITBANK21          100      0       0      36        0.0%
BANK21             100      0       0      37        0.0%
BITBANK22          100      0       0      38        0.0%
BANK22             100      0       0      39        0.0%
BITBANK23          100      0       0      40        0.0%
BANK23             100      0       0      41        0.0%
BITBANK24          100      0       0      42        0.0%
BANK24             100      0       0      43        0.0%
BITBANK25          100      0       0      44        0.0%
BANK25             100      0       0      45        0.0%
BITBANK26          100      0       0      46        0.0%
BANK26             100      0       0      47        0.0%
BITBANK27          100      0       0      48        0.0%
BANK27             100      0       0      49        0.0%
BITBANK28          100      0       0      50        0.0%
BANK28             100      0       0      51        0.0%
BITBANK29          100      0       0      52        0.0%
BANK29             100      0       0      53        0.0%
BITBANK30          100      0       0      54        0.0%
BANK30             100      0       0      55        0.0%
BITBANK31          100      0       0      56        0.0%
BANK31             100      0       0      57        0.0%
BITBANK32          100      0       0      58        0.0%
BANK32             100      0       0      59        0.0%
BITBANK33          100      0       0      60        0.0%
BANK33             100      0       0      61        0.0%
BITBANK34          100      0       0      62        0.0%
BANK34             100      0       0      63        0.0%
BITBANK35          100      0       0      64        0.0%
BANK35             100      0       0      65        0.0%
BITBANK36          100      0       0      66        0.0%
BANK36             100      0       0      67        0.0%
BITBIGSFR_1        100      0       0      68        0.0%
BIGRAM            1FFF      0       0      69        0.0%
BITBIGSFRhhhh       29      0       0      70        0.0%
BITBIGSFRhhhl        4      0       0      71        0.0%
BITBIGSFRhhlh        5      0       0      72        0.0%
BITBIGSFRhhll        1      0       0      73        0.0%
BITBIGSFRhll         4      0       0      74        0.0%
BITBIGSFRlhhhh       D      0       0      75        0.0%
BITBIGSFRlhhhl       F      0       0      76        0.0%
BITBIGSFRlhhl       79      0       0      77        0.0%
BITBIGSFRlhl         F      0       0      78        0.0%
BITBIGSFRllhhhh      7      0       0      79        0.0%
BITBIGSFRllhhhh      6      0       0      80        0.0%
BITBIGSFRllhhhh      7      0       0      81        0.0%
BITBIGSFRllhhhl      C      0       0      82        0.0%
BITBIGSFRllhhhl      6      0       0      83        0.0%
BITBIGSFRllhhhl    137      0       0      84        0.0%
BITBIGSFRllhhhl      2      0       0      85        0.0%
BITBIGSFRllhhhl      7      0       0      86        0.0%
BITBIGSFRllhhhl      1      0       0      87        0.0%
BITBIGSFRllhhhl     2E      0       0      88        0.0%
BITBIGSFRllhhhl     48      0       0      89        0.0%
BITBIGSFRllhhhl    175      0       0      90        0.0%
BITBIGSFRllhhl       1      0       0      91        0.0%
BITBIGSFRllhl        3      0       0      92        0.0%
BITBIGSFRlll        AD      0       0      93        0.0%
ABS                  0      0       0      94        0.0%
BIGSFR_1             0      0       0     200        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Thu Nov 09 20:53:29 2023

                          l32 29A0                            l28 29A0                            l45 2E26  
                          l62 2D9C                            l80 2E2E                            l74 2C8E  
                          l83 2C06                            l93 2A4C                            l77 2D6C  
                          l86 2DE4                            l95 2A86                            l89 2D38  
                          u10 2A86                            u11 2A82                            u20 2D80  
                          u21 2D7C                            u30 2D96                            u31 2D92  
                          u50 2DFC                            u51 2DF8                 ENVIA_CHAR@aux 0505  
                         l103 2CCC                           l122 2856                           l212 2DA8  
                         l221 2DFC                           l215 2DC8                           l240 2E1E  
                         l209 2AF2                           l218 2DEC                           l227 2C4A  
                         l237 26CE                           l760 2A14                           l753 2A0C  
                         l770 2B56                           l763 2B4E                           l941 2A16  
                         l951 2A28                           l943 2A1A                           l961 2A40  
                         l953 2A2C                           l945 2A1C                           l971 2A64  
                         l963 2A42                           l955 2A2E                           l947 2A1E  
                         l939 2D04                           l981 2DD8                           l973 2A6E  
                         l965 2A4E                           l957 2A36                           l949 2A20  
                         l983 2DDA                           l967 2A56                           l959 2A38  
                         l991 2D0E                           l985 2DE2                           l969 2A5A  
                         l977 2A74                           l993 2D12                           l979 2DCC  
                         l995 2D1A                           l987 2D08                           l997 2D1C  
                         l989 2D0A                           l999 2D1E                           u300 29DA  
                         u301 29D6                           u310 29F6                           u311 29F2  
                         u320 2B06                           u400 2DB6                           u321 2B02  
                         u401 2DB2                           u330 2B24                           u410 2C4A  
                         u331 2B20                           u411 2C46                           u340 2B3A  
                         u341 2B36                           u350 293A                           u351 2936  
                         u280 2CF8                           u360 2958                           u281 2CF4  
                         u361 2954                           u290 29BC                           u370 2976  
                         u507 2A22                           u291 29B8                           u371 2972  
                         u427 2896                           u380 2994                           u517 2A30  
                         u381 2990                           u437 2912                           u390 2C8E  
                         u527 2A3A                           u391 2C8A                           u447 2CA0  
                         u537 2A50                           u457 2CB4                           u547 2A5E  
                         u467 2BC4                           u557 2A68                           u477 2BD6  
                         u567 2DDC                           u487 2D14                           u497 2D48  
                 LEER_LCD@aux 0503                           wreg 04E8                  ?_CURSOR_HOME 0501  
                 ?_U1_NEWLINE 0501                ??_ENVIA_NIBBLE 0503                ENVIA_CHAR@dato 0504  
                        l1001 2D20                          l1003 2D26                          l1011 2D70  
                        l1005 2D2C                          l1013 2D80                          l1021 2BB4  
                        l1007 2D32                          l1015 2D86                          l1031 2BE2  
                        l1023 2BB8                          l1009 2E20                          l1017 2D96  
                        l1041 2C00                          l1033 2BE8                          l1025 2BBE  
                        l1201 2AAE                          l1051 2D4E                          l1043 2D3C  
                        l1019 2E28                          l1035 2BEE                          l1027 2BCE  
                        l1211 2AC2                          l1203 2AB0                          l1061 2D60  
                        l1053 2D50                          l1045 2D3E                          l1037 2BF4  
                        l1029 2BDC                          l1221 2AEE                          l1213 2AC8  
                        l1205 2AB2                          l1063 2D66                          l1055 2D52  
                        l1047 2D42                          l1039 2BFA                          l1215 2AE8  
                        l1207 2AB4                          l1057 2D54                          l1049 2D46  
                        l1081 2CAE                          l1217 2AEA                          l1209 2AB6  
                        l1059 2D5A                          l1083 2CBE                          l1075 2C90  
                        l1219 2AEC                          l1501 2B0E                          l1085 2CC2  
                        l1077 2C9A                          l1181 2A98                          l1511 2B48  
                        l1503 2B16                          l1263 2E12                          l1087 2CC6  
                        l1079 2CAA                          l1191 2AA4                          l1183 2A9C  
                        l1505 2B24                          l1521 2964                          l1513 292A  
                        l1089 2DE8                          l1193 2AA6                          l1185 2A9E  
                        l1177 2A88                          l1601 2858                          l1531 2C58  
                        l1507 2B3A                          l1523 2976                          l1515 293A  
                        l1195 2AA8                          l1187 2AA0                          l1179 2A96  
                        l1611 28A2                          l1603 2866                          l1533 2C58  
                        l1509 2B42                          l1541 26D0                          l1525 2982  
                        l1517 2946                          l1197 2AAA                          l1189 2AA2  
                        l1621 28C4                          l1613 28A6                          l1605 286E  
                        l1471 2CF8                          l1535 2C60                          l1551 27E8  
                        l1543 2788                          l1527 2994                          l1519 2958  
                        l1199 2AAC                          l1631 2904                          l1623 28CE  
                        l1615 28B0                          l1607 2888                          l1465 2CCE  
                        l1537 2C7A                          l1529 2C4C                          l1481 29C4  
                        l1545 2794                          l1705 26A0                          l1561 2DA0  
                        l1633 2908                          l1625 28DC                          l1617 28B8  
                        l1609 288C                          l1467 2CD6                          l1539 2C7C  
                        l1491 29FE                          l1483 29CC                          l1475 29A2  
                        l1707 2828                          l1547 27A8                          l1555 2814  
                        l1571 2C14                          l1563 2DA4                          l1627 28EC  
                        l1619 28C0                          l1469 2CD8                          l1493 2A00  
                        l1485 29DA                          l1477 29AA                          l1549 27C4  
                        l1573 2C14                          l1581 2548                          l1565 2DB6  
                        l1629 28F4                          l1495 2A06                          l1487 29E0  
                        l1479 29BC                          l1575 2C1C                          l1591 2660  
                        l1583 2600                          l1489 29F6                          l1497 2AF4  
                        l1577 2C36                          l1569 2C08                          l1585 260C  
                        l1499 2B06                          l1579 2C38                          l1587 2620  
                        l1595 268C                          l1589 263C                          STR_1 2501  
                        STR_2 2512                          STR_3 2542                          STR_4 2522  
                        STR_5 253C                          STR_6 2530                          _LATD 04C1  
                        _main 2858                          start 0102                 ?_CURSOR_ONOFF 0501  
           ??_tomamuestra_ADC 0505                  ___param_bank 0000               ??_ENVIA_LCD_CMD 0504  
            __end_of_LCD_INIT 2CCE              __end_of_LEER_LCD 2A88              __end_of_U1RX_ISR 2BB4  
                       ?_main 0501                         _ADPCH 03EC               __end_of___lwdiv 2A16  
                       _U1RXB 02A1               __end_of___lwmod 2B58                         _U1TXB 02A3  
                       i2l254 2B5E                         i2l256 2B64                         i2l257 2B6A  
                       i2l258 2B70                         i2l259 2BB2                         _OSCEN 00B3  
                       _PORTD 04D1                         _TRISD 04C9       __end_of_U1_VAR_INT_SEND 26D0  
                 ?_POS_CURSOR 0506   __end_of_LCD_ESCRIBE_VAR_INT 2858                         tablat 04F5  
               ?_U1_BYTE_SEND 0501                         status 04D8                ??_CURSOR_ONOFF 0506  
             __initialization 2DFE                  __end_of_main 2928     LCD_ESCRIBE_VAR_INT@decena 0517  
                      ??_main 0519         U1_VAR_INT_SEND@decena 0517                 __activetblptr 0003  
   LCD_ESCRIBE_VAR_INT@millar 0515         U1_VAR_INT_SEND@millar 0515     LCD_ESCRIBE_VAR_INT@numero 050F  
   LCD_ESCRIBE_VAR_INT@unidad 0518         U1_VAR_INT_SEND@numero 050F         U1_VAR_INT_SEND@unidad 0518  
                      _ADRESH 03EB                        _ADRESL 03EA                        _ANSELD 0418  
              ??_U1_BYTE_SEND 0503                        _U1CON0 02AB                        _U1CON1 02AC  
                      _U1CON2 02AD                        _U1BRGH 02AF                        _U1BRGL 02AE  
                      _RF0PPS 0229                        i2l1383 2B58                        i2l1387 2B76  
                      i2l1709 2B8C                        _OSCFRQ 00B1          __end_of_ENVIA_NIBBLE 2DE6  
                   ??___lwdiv 050C                     ??___lwmod 0507                        isa$std 0001  
                      _strlen 2CCE                  __mediumconst 0000                        tblptrh 04F7  
                      tblptrl 04F6                        tblptru 04F8              ?_U1_VAR_INT_SEND 050F  
                ??_BORRAR_LCD 0506                     ?_LCD_INIT 0501             U1_STRING_SEND@tam 0508  
                   ?_LEER_LCD 0501                    __accesstop 0560       __end_of__initialization 2E0C  
                ??_LCD_CONFIG 0506                     ?_U1RX_ISR 0501                 ___rparam_used 0001  
                ??_ENVIA_CHAR 0504      U1_VAR_INT_SEND@n_digitos 0511                __pcstackCOMRAM 0501  
              ivt0x8_undefint 0100            __end_of_BORRAR_LCD 2E30              _ESCRIBE_MENSAJE2 2C4C  
            ENVIA_LCD_CMD@aux 0505          __end_of_CURSOR_ONOFF 2D9E                  ??_U1_NEWLINE 0504  
          __end_of_LCD_CONFIG 2C08            __end_of_ENVIA_CHAR 2D6E    LCD_ESCRIBE_VAR_INT@centena 0516  
             _tomamuestra_ADC 2D9E               U1_STRING_SEND@i 0509        U1_VAR_INT_SEND@centena 0516  
                  ??_LCD_INIT 0507                    ??_LEER_LCD 0503              ENVIA_NIBBLE@dato 0503  
                  ??_U1RX_ISR 0501                       IVTBASEH 045E                       IVTBASEL 045D  
                     IVTBASEU 045F            __end_of_U1_NEWLINE 2E20          __end_of_U1_BYTE_SEND 2DFE  
                     ?_strlen 0503                       _U1RXPPS 0272                       _OSCCON1 00AD  
                ??_POS_CURSOR 0507                       __Hparam 0000                       __Lparam 0000  
        tomamuestra_ADC@canal 0507             __end_of_configuro 2AF4                       ___lwdiv 29A2  
                     ___lwmod 2AF4                  __psmallconst 2500         __end_of_ENVIA_LCD_CMD 2D3A  
                     __pcinit 2DFE            __end_of_POS_CURSOR 29A2                       __ramtop 2500  
                     __ptext0 2858                       __ptext1 2D9E                       __ptext2 2A88  
                     __ptext3 2C90                       __ptext4 2BB4                       __ptext5 2D6E  
                     __ptext6 2E20                       __ptext7 2E28                       __ptext8 2548  
                     __ptext9 2C08       __end_of_tomamuestra_ADC 2DCA                  _ENVIA_NIBBLE 2DCA  
        end_of_initialization 2E0C                       strlen@a 0505                       strlen@s 0503  
           ESCRIBE_MENSAJE2@i 0509                     _TRISAbits 04C6                     _TRISBbits 04C7  
                   _TRISCbits 04C8                     _TRISFbits 04CB      __end_of_ESCRIBE_MENSAJE2 2C90  
                _CURSOR_ONOFF 2D6E            CURSOR_ONOFF@estado 0506                _U1_STRING_SEND 2C08  
              __end_of_strlen 2D06                 ??_CURSOR_HOME 0506              ?_tomamuestra_ADC 0503  
         start_initialization 2DFE                    ivt0x8_base 0008                  _U1_BYTE_SEND 2DE6  
           ENVIA_LCD_CMD@dato 0504   LCD_ESCRIBE_VAR_INT@d_millar 0514        __end_of_U1_STRING_SEND 2C4C  
     U1_VAR_INT_SEND@d_millar 0514                      ??_strlen 0505           __end_of_CURSOR_HOME 2E28  
            ___lwdiv@dividend 0508                      ?___lwdiv 0508                      ?___lwmod 0503  
             ?_U1_STRING_SEND 0506                     _configuro 2A88                   __smallconst 2500  
         _LCD_ESCRIBE_VAR_INT 26D0              ___lwdiv@quotient 050C                   _U1ERRIRbits 02B2  
                    _LCD_INIT 2C90                      _LEER_LCD 2A16                      _LATCbits 04C0  
                    _LATDbits 04C1                      _U1RX_ISR 2B58                      _PIE4bits 04A2  
        ?_LCD_ESCRIBE_VAR_INT 050F               main@lectura_adc 051B                      _PIR4bits 04B2  
           ??_U1_VAR_INT_SEND 0512                POS_CURSOR@fila 0507                    ?_configuro 0501  
                  _ADCON0bits 03F3        ESCRIBE_MENSAJE2@cadena 0506                      _WPUBbits 0409  
                 _CURSOR_HOME 2E20                   _INTCON0bits 04D6         ??_LCD_ESCRIBE_VAR_INT 0512  
                    __Hrparam 0000             ?_ESCRIBE_MENSAJE2 0506              U1_BYTE_SEND@dato 0503  
                    __Lrparam 0000            ??_ESCRIBE_MENSAJE2 0507                    _ANSELAbits 0400  
                  _ANSELBbits 0408                    _ANSELCbits 0410                    _ANSELFbits 0428  
                    __pivt0x8 0008               ___lwdiv@divisor 050A               ___lwdiv@counter 050E  
                    __ptext10 2E12                      __ptext11 2DE6                      __ptext20 2A16  
                    __ptext12 2928                      __ptext21 2DCA                      __ptext13 2D06  
                    __ptext22 2B58                      __ptext14 26D0                      __ptext15 2AF4  
                    __ptext16 29A2                      __ptext17 2C4C                      __ptext18 2CCE  
                    __ptext19 2D3A  LCD_ESCRIBE_VAR_INT@n_digitos 0511                    _BORRAR_LCD 2E28  
                  _LCD_CONFIG 2BB4                    _ENVIA_CHAR 2D3A                      isa$xinst 0000  
               _ENVIA_LCD_CMD 2D06                   ??_configuro 0508                    _U1_NEWLINE 2E12  
                    intlevel2 0000              ___lwmod@dividend 0503              ??_U1_STRING_SEND 0507  
              ?_ENVIA_LCD_CMD 0501               ___lwmod@divisor 0505               ___lwmod@counter 0507  
         ESCRIBE_MENSAJE2@tam 0508                   ?_BORRAR_LCD 0501                 ?_ENVIA_NIBBLE 0501  
                  _POS_CURSOR 2928               _U1_VAR_INT_SEND 2548          U1_STRING_SEND@cadena 0506  
                 ?_LCD_CONFIG 0501                   ?_ENVIA_CHAR 0501             POS_CURSOR@columna 0506  
