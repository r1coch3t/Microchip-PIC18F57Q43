

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Sun Nov 19 21:53:54 2023

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og9 
     1                           	processor	18F57Q43
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1
    23                           	psect	text13,global,reloc=2,class=CODE,delta=1
    24                           	psect	text14,global,reloc=2,class=CODE,delta=1
    25                           	psect	text15,global,reloc=2,class=CODE,delta=1
    26                           	psect	text16,global,reloc=2,class=CODE,delta=1
    27                           	psect	text17,global,reloc=2,class=CODE,delta=1
    28                           	psect	text18,global,reloc=2,class=CODE,delta=1
    29                           	psect	text19,global,reloc=2,class=CODE,delta=1
    30                           	psect	text20,global,reloc=2,class=CODE,delta=1
    31                           	psect	text21,global,reloc=2,class=CODE,delta=1
    32                           	psect	text22,global,reloc=2,class=CODE,delta=1
    33                           	psect	text23,global,reloc=2,class=CODE,delta=1
    34                           	psect	text24,global,reloc=2,class=CODE,delta=1
    35                           	psect	text25,global,reloc=2,class=CODE,delta=1
    36                           	psect	text26,global,reloc=2,class=CODE,delta=1
    37                           	psect	text27,global,reloc=2,class=CODE,delta=1
    38                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text31,global,reloc=2,class=CODE,delta=1
    42                           	psect	text32,global,reloc=2,class=CODE,delta=1
    43                           	psect	text33,global,reloc=2,class=CODE,delta=1
    44                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    45                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    46                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    47   000000                     
    48                           ; Generated 17/10/2023 GMT
    49                           ; 
    50                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    51                           ; All rights reserved.
    52                           ; 
    53                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    54                           ; 
    55                           ; Redistribution and use in source and binary forms, with or without modification, are
    56                           ; permitted provided that the following conditions are met:
    57                           ; 
    58                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    59                           ;        conditions and the following disclaimer.
    60                           ; 
    61                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    62                           ;        of conditions and the following disclaimer in the documentation and/or other
    63                           ;        materials provided with the distribution. Publication is not required when
    64                           ;        this file is used in an embedded application.
    65                           ; 
    66                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    67                           ;        software without specific prior written permission.
    68                           ; 
    69                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    70                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    71                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    72                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    73                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    74                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    75                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    76                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    77                           ; 
    78                           ; 
    79                           ; Code-generator required, PIC18F57Q43 Definitions
    80                           ; 
    81                           ; SFR Addresses
    82   000000                     
    83                           	psect	idataCOMRAM
    84   003400                     __pidataCOMRAM:
    85                           	callstack 0
    86                           
    87                           ;initializer for _efecto
    88   003400  0001               	dw	1
    89   003402  0002               	dw	2
    90   003404  0004               	dw	4
    91   003406  0008               	dw	8
    92   003408  0010               	dw	16
    93   00340A  0020               	dw	32
    94   00340C  0040               	dw	64
    95   00340E  0080               	dw	128
    96   003410  0100               	dw	256
    97   003412  0200               	dw	512
    98   003414  0400               	dw	1024
    99   003416  0800               	dw	2048
   100   003418  1000               	dw	4096
   101   00341A  2000               	dw	8192
   102   00341C  4000               	dw	16384
   103   00341E  8000               	dw	32768
   104   000000                     _I2C1CON1bits	set	661
   105   000000                     _I2C1CON2bits	set	662
   106   000000                     _I2C1CLKbits	set	668
   107   000000                     _LATD	set	1217
   108   000000                     _OSCCON1	set	173
   109   000000                     _RC3PPS	set	532
   110   000000                     _ANSELCbits	set	1040
   111   000000                     _ANSELD	set	1048
   112   000000                     _LATDbits	set	1217
   113   000000                     _TRISCbits	set	1224
   114   000000                     _TRISD	set	1225
   115   000000                     _PORTD	set	1233
   116   000000                     _ODCONCbits	set	1042
   117   000000                     _RC4I2Cbits	set	646
   118   000000                     _RC3I2Cbits	set	647
   119   000000                     _RC4PPS	set	533
   120   000000                     _I2C1RXB	set	651
   121   000000                     _I2C1TXB	set	652
   122   000000                     _I2C1CNT	set	653
   123   000000                     _I2C1CON0bits	set	660
   124   000000                     _I2C1STAT0bits	set	664
   125   000000                     _I2C1STAT1bits	set	665
   126   000000                     _I2C1ADB1	set	655
   127   000000                     _I2C1PIRbits	set	666
   128   000000                     _OSCFRQ	set	177
   129   000000                     _OSCEN	set	179
   130                           
   131                           	psect	smallconst
   132   002500                     __psmallconst:
   133                           	callstack 0
   134   002500  00                 	db	0
   135   002501                     STR_2:
   136                           
   137                           ; BSR set to: 2
   138   002501  63                 	db	99	;'c'
   139   002502  6F                 	db	111	;'o'
   140   002503  6E                 	db	110	;'n'
   141   002504  20                 	db	32
   142   002505  65                 	db	101	;'e'
   143   002506  6C                 	db	108	;'l'
   144   002507  20                 	db	32
   145   002508  4D                 	db	77	;'M'
   146   002509  43                 	db	67	;'C'
   147   00250A  50                 	db	80	;'P'
   148   00250B  32                 	db	50	;'2'
   149   00250C  33                 	db	51	;'3'
   150   00250D  30                 	db	48	;'0'
   151   00250E  31                 	db	49	;'1'
   152   00250F  37                 	db	55	;'7'
   153   002510  00                 	db	0
   154   002511                     STR_4:
   155                           
   156                           ; BSR set to: 2
   157   002511  63                 	db	99	;'c'
   158   002512  6F                 	db	111	;'o'
   159   002513  6E                 	db	110	;'n'
   160   002514  20                 	db	32
   161   002515  65                 	db	101	;'e'
   162   002516  6C                 	db	108	;'l'
   163   002517  20                 	db	32
   164   002518  50                 	db	80	;'P'
   165   002519  43                 	db	67	;'C'
   166   00251A  46                 	db	70	;'F'
   167   00251B  38                 	db	56	;'8'
   168   00251C  35                 	db	53	;'5'
   169   00251D  37                 	db	55	;'7'
   170   00251E  34                 	db	52	;'4'
   171   00251F  00                 	db	0
   172   002520                     STR_1:
   173                           
   174                           ; BSR set to: 2
   175   002520  50                 	db	80	;'P'
   176   002521  72                 	db	114	;'r'
   177   002522  75                 	db	117	;'u'
   178   002523  65                 	db	101	;'e'
   179   002524  62                 	db	98	;'b'
   180   002525  61                 	db	97	;'a'
   181   002526  20                 	db	32
   182   002527  64                 	db	100	;'d'
   183   002528  65                 	db	101	;'e'
   184   002529  20                 	db	32
   185   00252A  49                 	db	73	;'I'
   186   00252B  32                 	db	50	;'2'
   187   00252C  43                 	db	67	;'C'
   188   00252D  00                 	db	0
   189   00252E                     STR_5:
   190                           
   191                           ; BSR set to: 2
   192   00252E  44                 	db	68	;'D'
   193   00252F  45                 	db	69	;'E'
   194   002530  43                 	db	67	;'C'
   195   002531  3A                 	db	58	;':'
   196   002532  00                 	db	0
   197   002533                     STR_7:
   198                           
   199                           ; BSR set to: 2
   200   002533  42                 	db	66	;'B'
   201   002534  49                 	db	73	;'I'
   202   002535  4E                 	db	78	;'N'
   203   002536  3A                 	db	58	;':'
   204   002537  00                 	db	0
   205   002538                     STR_6:
   206                           
   207                           ; BSR set to: 2
   208   002538  48                 	db	72	;'H'
   209   002539  45                 	db	69	;'E'
   210   00253A  58                 	db	88	;'X'
   211   00253B  3A                 	db	58	;':'
   212   00253C  00                 	db	0
   213   00253D  00                 	db	0	; dummy byte at the end
   214   000000                     
   215                           ; #config settings
   216                           
   217                           	psect	cinit
   218   0033B6                     __pcinit:
   219                           	callstack 0
   220   0033B6                     start_initialization:
   221                           	callstack 0
   222   0033B6                     __initialization:
   223                           	callstack 0
   224                           
   225                           ; Initialize objects allocated to COMRAM (32 bytes)
   226                           ; load TBLPTR registers with __pidataCOMRAM
   227   0033B6  0E00               	movlw	low __pidataCOMRAM
   228   0033B8  6EF6               	movwf	tblptrl,c
   229   0033BA  0E34               	movlw	high __pidataCOMRAM
   230   0033BC  6EF7               	movwf	tblptrh,c
   231   0033BE  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   232   0033C0  6EF8               	movwf	tblptru,c
   233   0033C2  EE01  F101         	lfsr	0,__pdataCOMRAM
   234   0033C6  EE10 F020          	lfsr	1,32
   235   0033CA                     copy_data0:
   236   0033CA  0009               	tblrd		*+
   237   0033CC  C4F5 F4EE          	movff	tablat,postinc0
   238   0033D0  50E5               	movf	postdec1,w,c
   239   0033D2  50E1               	movf	fsr1l,w,c
   240   0033D4  E1FA               	bnz	copy_data0
   241   0033D6                     end_of_initialization:
   242                           	callstack 0
   243   0033D6                     __end_of__initialization:
   244                           	callstack 0
   245   0033D6  0100               	movlb	0
   246   0033D8  EF49  F014         	goto	_main	;jump to C main() function
   247                           
   248                           	psect	dataCOMRAM
   249   000501                     __pdataCOMRAM:
   250                           	callstack 0
   251   000501                     _efecto:
   252                           	callstack 0
   253   000501                     	ds	32
   254                           
   255                           	psect	cstackCOMRAM
   256   000521                     __pcstackCOMRAM:
   257                           	callstack 0
   258   000521                     ?_strlen:
   259                           	callstack 0
   260   000521                     ?___awmod:
   261                           	callstack 0
   262   000521                     ENVIA_NIBBLE@dato:
   263                           	callstack 0
   264   000521                     I2C1_WRITESINGLEBYTE@dato:
   265                           	callstack 0
   266   000521                     I2C1_Write_MCP23017@registro:
   267                           	callstack 0
   268   000521                     ___lbmod@divisor:
   269                           	callstack 0
   270   000521                     strlen@s:
   271                           	callstack 0
   272   000521                     ___awmod@dividend:
   273                           	callstack 0
   274                           
   275                           ; 2 bytes @ 0x0
   276   000521                     	ds	1
   277   000522                     ENVIA_CHAR@dato:
   278                           	callstack 0
   279   000522                     ENVIA_LCD_CMD@dato:
   280                           	callstack 0
   281   000522                     I2C1_WRITESINGLEBYTE@direccion:
   282                           	callstack 0
   283   000522                     I2C1_Write_MCP23017@dato:
   284                           	callstack 0
   285   000522                     ___lbmod@dividend:
   286                           	callstack 0
   287                           
   288                           ; 1 bytes @ 0x1
   289   000522                     	ds	1
   290   000523                     ??_I2C_ENVIA_LCD_CMD:
   291   000523                     ??_I2C_ENVIA_LCD_DATA:
   292   000523                     ENVIA_CHAR@aux:
   293                           	callstack 0
   294   000523                     ENVIA_LCD_CMD@aux:
   295                           	callstack 0
   296   000523                     I2C1_Write_MCP23017@direccion:
   297                           	callstack 0
   298   000523                     ___lbmod@counter:
   299                           	callstack 0
   300   000523                     strlen@a:
   301                           	callstack 0
   302   000523                     ___awmod@divisor:
   303                           	callstack 0
   304                           
   305                           ; 2 bytes @ 0x2
   306   000523                     	ds	1
   307   000524                     ??_LCD_CONFIG:
   308   000524                     ??_LCD_VARCHAR_BITS:
   309   000524                     ??_LCD_VARCHAR_HEX:
   310   000524                     POS_CURSOR@columna:
   311                           	callstack 0
   312   000524                     CURSOR_ONOFF@estado:
   313                           	callstack 0
   314   000524                     ESCRIBE_MENSAJE2@cadena:
   315                           	callstack 0
   316   000524                     I2C_ENVIA_LCD_DATA@data:
   317                           	callstack 0
   318   000524                     I2C_ENVIA_LCD_CMD@command:
   319                           	callstack 0
   320   000524                     ___lbmod@rem:
   321                           	callstack 0
   322                           
   323                           ; 1 bytes @ 0x3
   324   000524                     	ds	1
   325   000525                     ??_ESCRIBE_MENSAJE2:
   326   000525                     ??_LCD_INIT:
   327   000525                     POS_CURSOR@fila:
   328                           	callstack 0
   329   000525                     I2C_ENVIA_LCD_DATA@highnibble:
   330                           	callstack 0
   331   000525                     I2C_ENVIA_LCD_CMD@highnibble:
   332                           	callstack 0
   333   000525                     ___awmod@counter:
   334                           	callstack 0
   335                           
   336                           ; 1 bytes @ 0x4
   337   000525                     	ds	1
   338   000526                     ESCRIBE_MENSAJE2@tam:
   339                           	callstack 0
   340   000526                     LCD_VARCHAR_BITS@dato:
   341                           	callstack 0
   342   000526                     LCD_VARCHAR_HEX@dato:
   343                           	callstack 0
   344   000526                     I2C_ENVIA_LCD_DATA@lownibble:
   345                           	callstack 0
   346   000526                     I2C_ENVIA_LCD_CMD@lownibble:
   347                           	callstack 0
   348   000526                     ___awmod@sign:
   349                           	callstack 0
   350                           
   351                           ; 1 bytes @ 0x5
   352   000526                     	ds	1
   353   000527                     ??_I2C_LCD_VARCHAR_BITS:
   354   000527                     ??_I2C_LCD_VARCHAR_HEX:
   355   000527                     ESCRIBE_MENSAJE2@i:
   356                           	callstack 0
   357   000527                     LCD_VARCHAR_BITS@x_var:
   358                           	callstack 0
   359   000527                     LCD_VARCHAR_HEX@high_nib:
   360                           	callstack 0
   361   000527                     I2C_POS_CURSOR@columna:
   362                           	callstack 0
   363   000527                     I2C_CURSOR_ONOFF@estado:
   364                           	callstack 0
   365   000527                     I2C_ESCRIBE_MENSAJE2@cadena:
   366                           	callstack 0
   367   000527                     ___lbdiv@divisor:
   368                           	callstack 0
   369                           
   370                           ; 1 bytes @ 0x6
   371   000527                     	ds	1
   372   000528                     ??_I2C_ESCRIBE_MENSAJE2:
   373   000528                     ??_I2C_LCD_INIT:
   374   000528                     LCD_VARCHAR_HEX@low_nib:
   375                           	callstack 0
   376   000528                     I2C_POS_CURSOR@fila:
   377                           	callstack 0
   378   000528                     ___lbdiv@dividend:
   379                           	callstack 0
   380                           
   381                           ; 1 bytes @ 0x7
   382   000528                     	ds	1
   383   000529                     I2C_ESCRIBE_MENSAJE2@tam:
   384                           	callstack 0
   385   000529                     I2C_LCD_VARCHAR_BITS@dato:
   386                           	callstack 0
   387   000529                     I2C_LCD_VARCHAR_HEX@dato:
   388                           	callstack 0
   389   000529                     ___lbdiv@counter:
   390                           	callstack 0
   391                           
   392                           ; 1 bytes @ 0x8
   393   000529                     	ds	1
   394   00052A                     I2C_ESCRIBE_MENSAJE2@i:
   395                           	callstack 0
   396   00052A                     I2C_LCD_VARCHAR_BITS@x_var:
   397                           	callstack 0
   398   00052A                     I2C_LCD_VARCHAR_HEX@high_nib:
   399                           	callstack 0
   400   00052A                     ___lbdiv@quotient:
   401                           	callstack 0
   402                           
   403                           ; 1 bytes @ 0x9
   404   00052A                     	ds	1
   405   00052B                     ??_splash_screen:
   406   00052B                     LCD_ESCRIBE_VAR_CHAR@n_digitos:
   407                           	callstack 0
   408   00052B                     I2C_LCD_ESCRIBE_VAR_CHAR@n_digitos:
   409                           	callstack 0
   410   00052B                     I2C_LCD_VARCHAR_HEX@low_nib:
   411                           	callstack 0
   412                           
   413                           ; 1 bytes @ 0xA
   414   00052B                     	ds	1
   415   00052C                     ??_LCD_ESCRIBE_VAR_CHAR:
   416   00052C                     ??_I2C_LCD_ESCRIBE_VAR_CHAR:
   417                           
   418                           ; 1 bytes @ 0xB
   419   00052C                     	ds	2
   420   00052E                     LCD_ESCRIBE_VAR_CHAR@centena:
   421                           	callstack 0
   422   00052E                     I2C_LCD_ESCRIBE_VAR_CHAR@centena:
   423                           	callstack 0
   424                           
   425                           ; 1 bytes @ 0xD
   426   00052E                     	ds	1
   427   00052F                     LCD_ESCRIBE_VAR_CHAR@decena:
   428                           	callstack 0
   429   00052F                     I2C_LCD_ESCRIBE_VAR_CHAR@decena:
   430                           	callstack 0
   431                           
   432                           ; 1 bytes @ 0xE
   433   00052F                     	ds	1
   434   000530                     LCD_ESCRIBE_VAR_CHAR@numero:
   435                           	callstack 0
   436   000530                     I2C_LCD_ESCRIBE_VAR_CHAR@numero:
   437                           	callstack 0
   438                           
   439                           ; 1 bytes @ 0xF
   440   000530                     	ds	1
   441   000531                     LCD_ESCRIBE_VAR_CHAR@unidad:
   442                           	callstack 0
   443   000531                     I2C_LCD_ESCRIBE_VAR_CHAR@unidad:
   444                           	callstack 0
   445                           
   446                           ; 1 bytes @ 0x10
   447   000531                     	ds	1
   448   000532                     ??_main:
   449                           
   450                           ; 1 bytes @ 0x11
   451   000532                     	ds	2
   452   000534                     main@x_var:
   453                           	callstack 0
   454                           
   455                           ; 1 bytes @ 0x13
   456   000534                     	ds	1
   457                           
   458 ;;
   459 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   460 ;;
   461 ;; *************** function _main *****************
   462 ;; Defined at:
   463 ;;		line 89 in file "maincode05.c"
   464 ;; Parameters:    Size  Location     Type
   465 ;;		None
   466 ;; Auto vars:     Size  Location     Type
   467 ;;  x_var           1   19[COMRAM] unsigned char 
   468 ;; Return value:  Size  Location     Type
   469 ;;                  1    wreg      void 
   470 ;; Registers used:
   471 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   472 ;; Tracked objects:
   473 ;;		On entry : 0/0
   474 ;;		On exit  : 0/0
   475 ;;		Unchanged: 0/0
   476 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   477 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   478 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   479 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   480 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   481 ;;Total ram usage:        3 bytes
   482 ;; Hardware stack levels required when called: 5
   483 ;; This function calls:
   484 ;;		_ESCRIBE_MENSAJE2
   485 ;;		_I2C1_Write_MCP23017
   486 ;;		_I2C_ESCRIBE_MENSAJE2
   487 ;;		_I2C_LCD_ESCRIBE_VAR_CHAR
   488 ;;		_I2C_LCD_VARCHAR_BITS
   489 ;;		_I2C_LCD_VARCHAR_HEX
   490 ;;		_I2C_POS_CURSOR
   491 ;;		_LCD_ESCRIBE_VAR_CHAR
   492 ;;		_LCD_VARCHAR_BITS
   493 ;;		_LCD_VARCHAR_HEX
   494 ;;		_POS_CURSOR
   495 ;;		_configuro
   496 ;;		_splash_screen
   497 ;; This function is called by:
   498 ;;		Startup code after reset
   499 ;; This function uses a non-reentrant model
   500 ;;
   501                           
   502                           	psect	text0
   503   002892                     __ptext0:
   504                           	callstack 0
   505   002892                     _main:
   506                           	callstack 122
   507                           
   508                           ;maincode05.c: 90:     configuro();
   509                           
   510                           ;incstack = 0
   511   002892  EC3A  F01A         	call	_configuro	;wreg free
   512                           
   513                           ;maincode05.c: 91:     I2C1_Write_MCP23017(0x20,0x00,0x00);
   514   002896  0E00               	movlw	0
   515   002898  6E21               	movwf	I2C1_Write_MCP23017@registro^(0+1280),c
   516   00289A  0E00               	movlw	0
   517   00289C  6E22               	movwf	I2C1_Write_MCP23017@dato^(0+1280),c
   518   00289E  0E20               	movlw	32
   519   0028A0  EC6A  F019         	call	_I2C1_Write_MCP23017
   520                           
   521                           ;maincode05.c: 92:     I2C1_Write_MCP23017(0x20,0x01,0x00);
   522   0028A4  0E01               	movlw	1
   523   0028A6  6E21               	movwf	I2C1_Write_MCP23017@registro^(0+1280),c
   524   0028A8  0E00               	movlw	0
   525   0028AA  6E22               	movwf	I2C1_Write_MCP23017@dato^(0+1280),c
   526   0028AC  0E20               	movlw	32
   527   0028AE  EC6A  F019         	call	_I2C1_Write_MCP23017
   528                           
   529                           ; BSR set to: 2
   530                           ;maincode05.c: 93:     splash_screen();
   531   0028B2  ECB4  F017         	call	_splash_screen	;wreg free
   532                           
   533                           ;maincode05.c: 94:     POS_CURSOR(1,0);
   534   0028B6  0E00               	movlw	0
   535   0028B8  6E24               	movwf	POS_CURSOR@columna^(0+1280),c
   536   0028BA  0E01               	movlw	1
   537   0028BC  EC6A  F018         	call	_POS_CURSOR
   538                           
   539                           ;maincode05.c: 95:     ESCRIBE_MENSAJE2("DEC:");
   540   0028C0  0E2E               	movlw	low STR_5
   541   0028C2  6E24               	movwf	ESCRIBE_MENSAJE2@cadena^(0+1280),c
   542   0028C4  EC4E  F019         	call	_ESCRIBE_MENSAJE2	;wreg free
   543                           
   544                           ;maincode05.c: 96:     POS_CURSOR(1,8);
   545   0028C8  0E08               	movlw	8
   546   0028CA  6E24               	movwf	POS_CURSOR@columna^(0+1280),c
   547   0028CC  0E01               	movlw	1
   548   0028CE  EC6A  F018         	call	_POS_CURSOR
   549                           
   550                           ;maincode05.c: 97:     ESCRIBE_MENSAJE2("HEX:");
   551   0028D2  0E38               	movlw	low STR_6
   552   0028D4  6E24               	movwf	ESCRIBE_MENSAJE2@cadena^(0+1280),c
   553   0028D6  EC4E  F019         	call	_ESCRIBE_MENSAJE2	;wreg free
   554                           
   555                           ;maincode05.c: 98:     POS_CURSOR(2,0);
   556   0028DA  0E00               	movlw	0
   557   0028DC  6E24               	movwf	POS_CURSOR@columna^(0+1280),c
   558   0028DE  0E02               	movlw	2
   559   0028E0  EC6A  F018         	call	_POS_CURSOR
   560                           
   561                           ;maincode05.c: 99:     ESCRIBE_MENSAJE2("BIN:");
   562   0028E4  0E33               	movlw	low STR_7
   563   0028E6  6E24               	movwf	ESCRIBE_MENSAJE2@cadena^(0+1280),c
   564   0028E8  EC4E  F019         	call	_ESCRIBE_MENSAJE2	;wreg free
   565                           
   566                           ;maincode05.c: 100:     I2C_POS_CURSOR(1,0);
   567   0028EC  0E00               	movlw	0
   568   0028EE  6E27               	movwf	I2C_POS_CURSOR@columna^(0+1280),c
   569   0028F0  0E01               	movlw	1
   570   0028F2  EC8E  F018         	call	_I2C_POS_CURSOR
   571                           
   572                           ;maincode05.c: 101:     I2C_ESCRIBE_MENSAJE2("DEC:");
   573   0028F6  0E2E               	movlw	low STR_5
   574   0028F8  6E27               	movwf	I2C_ESCRIBE_MENSAJE2@cadena^(0+1280),c
   575   0028FA  EC32  F019         	call	_I2C_ESCRIBE_MENSAJE2	;wreg free
   576                           
   577                           ;maincode05.c: 102:     I2C_POS_CURSOR(1,8);
   578   0028FE  0E08               	movlw	8
   579   002900  6E27               	movwf	I2C_POS_CURSOR@columna^(0+1280),c
   580   002902  0E01               	movlw	1
   581   002904  EC8E  F018         	call	_I2C_POS_CURSOR
   582                           
   583                           ;maincode05.c: 103:     I2C_ESCRIBE_MENSAJE2("HEX:");
   584   002908  0E38               	movlw	low STR_6
   585   00290A  6E27               	movwf	I2C_ESCRIBE_MENSAJE2@cadena^(0+1280),c
   586   00290C  EC32  F019         	call	_I2C_ESCRIBE_MENSAJE2	;wreg free
   587                           
   588                           ;maincode05.c: 104:     I2C_POS_CURSOR(2,0);
   589   002910  0E00               	movlw	0
   590   002912  6E27               	movwf	I2C_POS_CURSOR@columna^(0+1280),c
   591   002914  0E02               	movlw	2
   592   002916  EC8E  F018         	call	_I2C_POS_CURSOR
   593                           
   594                           ;maincode05.c: 105:     I2C_ESCRIBE_MENSAJE2("BIN:");
   595   00291A  0E33               	movlw	low STR_7
   596   00291C  6E27               	movwf	I2C_ESCRIBE_MENSAJE2@cadena^(0+1280),c
   597   00291E  EC32  F019         	call	_I2C_ESCRIBE_MENSAJE2	;wreg free
   598   002922                     l2506:
   599                           
   600                           ;maincode05.c: 107:         unsigned char x_var;;maincode05.c: 108:         for(x_var=0;
      +                          x_var<15;x_var++){
   601   002922  0E00               	movlw	0
   602   002924  6E34               	movwf	main@x_var^(0+1280),c
   603   002926                     l2512:
   604                           
   605                           ;maincode05.c: 109:             I2C1_Write_MCP23017(0x20, 0x14, efecto[x_var] & 0x00FF);
   606   002926  0E14               	movlw	20
   607   002928  6E21               	movwf	I2C1_Write_MCP23017@registro^(0+1280),c
   608   00292A  5034               	movf	main@x_var^(0+1280),w,c
   609   00292C  0D02               	mullw	2
   610   00292E  0E01               	movlw	low _efecto
   611   002930  24F3               	addwf	243,w,c
   612   002932  6ED9               	movwf	fsr2l,c
   613   002934  0E05               	movlw	high _efecto
   614   002936  20F4               	addwfc	prodh,w,c
   615   002938  6EDA               	movwf	fsr2h,c
   616   00293A  50DF               	movf	indf2,w,c
   617   00293C  6E22               	movwf	I2C1_Write_MCP23017@dato^(0+1280),c
   618   00293E  0E20               	movlw	32
   619   002940  EC6A  F019         	call	_I2C1_Write_MCP23017
   620                           
   621                           ;maincode05.c: 110:             I2C1_Write_MCP23017(0x20, 0x15, (efecto[x_var]>>8)&0x00F
      +                          F);
   622   002944  0E15               	movlw	21
   623   002946  6E21               	movwf	I2C1_Write_MCP23017@registro^(0+1280),c
   624   002948  5034               	movf	main@x_var^(0+1280),w,c
   625   00294A  0D02               	mullw	2
   626   00294C  0E01               	movlw	low _efecto
   627   00294E  24F3               	addwf	243,w,c
   628   002950  6ED9               	movwf	fsr2l,c
   629   002952  0E05               	movlw	high _efecto
   630   002954  20F4               	addwfc	prodh,w,c
   631   002956  6EDA               	movwf	fsr2h,c
   632   002958  C4DE F532          	movff	postinc2,??_main
   633   00295C  C4DD F533          	movff	postdec2,??_main+1
   634   002960  C533  F532         	movff	??_main+1,??_main
   635   002964  6A33               	clrf	(??_main+1)^(0+1280),c
   636   002966  5032               	movf	??_main^(0+1280),w,c
   637   002968  6E22               	movwf	I2C1_Write_MCP23017@dato^(0+1280),c
   638   00296A  0E20               	movlw	32
   639   00296C  EC6A  F019         	call	_I2C1_Write_MCP23017
   640                           
   641                           ; BSR set to: 2
   642                           ;maincode05.c: 111:             POS_CURSOR(1,4);
   643   002970  0E04               	movlw	4
   644   002972  6E24               	movwf	POS_CURSOR@columna^(0+1280),c
   645   002974  0E01               	movlw	1
   646   002976  EC6A  F018         	call	_POS_CURSOR
   647                           
   648                           ;maincode05.c: 112:             LCD_ESCRIBE_VAR_CHAR(x_var, 3);
   649   00297A  0E03               	movlw	3
   650   00297C  6E2B               	movwf	LCD_ESCRIBE_VAR_CHAR@n_digitos^(0+1280),c
   651   00297E  5034               	movf	main@x_var^(0+1280),w,c
   652   002980  ECAA  F016         	call	_LCD_ESCRIBE_VAR_CHAR
   653                           
   654                           ;maincode05.c: 113:             POS_CURSOR(2,4);
   655   002984  0E04               	movlw	4
   656   002986  6E24               	movwf	POS_CURSOR@columna^(0+1280),c
   657   002988  0E02               	movlw	2
   658   00298A  EC6A  F018         	call	_POS_CURSOR
   659                           
   660                           ;maincode05.c: 114:             LCD_VARCHAR_BITS(x_var);
   661   00298E  5034               	movf	main@x_var^(0+1280),w,c
   662   002990  ECB2  F018         	call	_LCD_VARCHAR_BITS
   663                           
   664                           ;maincode05.c: 115:             POS_CURSOR(1,12);
   665   002994  0E0C               	movlw	12
   666   002996  6E24               	movwf	POS_CURSOR@columna^(0+1280),c
   667   002998  0E01               	movlw	1
   668   00299A  EC6A  F018         	call	_POS_CURSOR
   669                           
   670                           ;maincode05.c: 116:             LCD_VARCHAR_HEX(x_var);
   671   00299E  5034               	movf	main@x_var^(0+1280),w,c
   672   0029A0  EC80  F015         	call	_LCD_VARCHAR_HEX
   673                           
   674                           ;maincode05.c: 117:             I2C_POS_CURSOR(1,4);
   675   0029A4  0E04               	movlw	4
   676   0029A6  6E27               	movwf	I2C_POS_CURSOR@columna^(0+1280),c
   677   0029A8  0E01               	movlw	1
   678   0029AA  EC8E  F018         	call	_I2C_POS_CURSOR
   679                           
   680                           ;maincode05.c: 118:             I2C_LCD_ESCRIBE_VAR_CHAR(efecto[x_var], 3);
   681   0029AE  0E03               	movlw	3
   682   0029B0  6E2B               	movwf	I2C_LCD_ESCRIBE_VAR_CHAR@n_digitos^(0+1280),c
   683   0029B2  5034               	movf	main@x_var^(0+1280),w,c
   684   0029B4  0D02               	mullw	2
   685   0029B6  0E01               	movlw	low _efecto
   686   0029B8  24F3               	addwf	243,w,c
   687   0029BA  6ED9               	movwf	fsr2l,c
   688   0029BC  0E05               	movlw	high _efecto
   689   0029BE  20F4               	addwfc	prodh,w,c
   690   0029C0  6EDA               	movwf	fsr2h,c
   691   0029C2  50DF               	movf	indf2,w,c
   692   0029C4  ECF8  F016         	call	_I2C_LCD_ESCRIBE_VAR_CHAR
   693                           
   694                           ;maincode05.c: 119:             I2C_POS_CURSOR(2,4);
   695   0029C8  0E04               	movlw	4
   696   0029CA  6E27               	movwf	I2C_POS_CURSOR@columna^(0+1280),c
   697   0029CC  0E02               	movlw	2
   698   0029CE  EC8E  F018         	call	_I2C_POS_CURSOR
   699                           
   700                           ;maincode05.c: 120:             I2C_LCD_VARCHAR_BITS(efecto[x_var]);
   701   0029D2  5034               	movf	main@x_var^(0+1280),w,c
   702   0029D4  0D02               	mullw	2
   703   0029D6  0E01               	movlw	low _efecto
   704   0029D8  24F3               	addwf	243,w,c
   705   0029DA  6ED9               	movwf	fsr2l,c
   706   0029DC  0E05               	movlw	high _efecto
   707   0029DE  20F4               	addwfc	prodh,w,c
   708   0029E0  6EDA               	movwf	fsr2h,c
   709   0029E2  50DF               	movf	indf2,w,c
   710   0029E4  ECD4  F018         	call	_I2C_LCD_VARCHAR_BITS
   711                           
   712                           ;maincode05.c: 121:             I2C_POS_CURSOR(1,12);
   713   0029E8  0E0C               	movlw	12
   714   0029EA  6E27               	movwf	I2C_POS_CURSOR@columna^(0+1280),c
   715   0029EC  0E01               	movlw	1
   716   0029EE  EC8E  F018         	call	_I2C_POS_CURSOR
   717                           
   718                           ;maincode05.c: 122:             I2C_LCD_VARCHAR_HEX(efecto[x_var]);
   719   0029F2  5034               	movf	main@x_var^(0+1280),w,c
   720   0029F4  0D02               	mullw	2
   721   0029F6  0E01               	movlw	low _efecto
   722   0029F8  24F3               	addwf	243,w,c
   723   0029FA  6ED9               	movwf	fsr2l,c
   724   0029FC  0E05               	movlw	high _efecto
   725   0029FE  20F4               	addwfc	prodh,w,c
   726   002A00  6EDA               	movwf	fsr2h,c
   727   002A02  50DF               	movf	indf2,w,c
   728   002A04  EC15  F016         	call	_I2C_LCD_VARCHAR_HEX
   729                           
   730                           ;maincode05.c: 124:         }
   731   002A08  2A34               	incf	main@x_var^(0+1280),f,c
   732   002A0A  0E0E               	movlw	14
   733   002A0C  6434               	cpfsgt	main@x_var^(0+1280),c
   734   002A0E  D78B               	goto	l2512
   735                           
   736                           ;maincode05.c: 125:         for(x_var=15;x_var>0;x_var--){
   737   002A10  0E0F               	movlw	15
   738   002A12  6E34               	movwf	main@x_var^(0+1280),c
   739   002A14                     l2542:
   740                           
   741                           ;maincode05.c: 126:             I2C1_Write_MCP23017(0x20, 0x14, efecto[x_var] & 0x00FF);
   742   002A14  0E14               	movlw	20
   743   002A16  6E21               	movwf	I2C1_Write_MCP23017@registro^(0+1280),c
   744   002A18  5034               	movf	main@x_var^(0+1280),w,c
   745   002A1A  0D02               	mullw	2
   746   002A1C  0E01               	movlw	low _efecto
   747   002A1E  24F3               	addwf	243,w,c
   748   002A20  6ED9               	movwf	fsr2l,c
   749   002A22  0E05               	movlw	high _efecto
   750   002A24  20F4               	addwfc	prodh,w,c
   751   002A26  6EDA               	movwf	fsr2h,c
   752   002A28  50DF               	movf	indf2,w,c
   753   002A2A  6E22               	movwf	I2C1_Write_MCP23017@dato^(0+1280),c
   754   002A2C  0E20               	movlw	32
   755   002A2E  EC6A  F019         	call	_I2C1_Write_MCP23017
   756                           
   757                           ;maincode05.c: 127:             I2C1_Write_MCP23017(0x20, 0x15, (efecto[x_var]>>8)&0x00F
      +                          F);
   758   002A32  0E15               	movlw	21
   759   002A34  6E21               	movwf	I2C1_Write_MCP23017@registro^(0+1280),c
   760   002A36  5034               	movf	main@x_var^(0+1280),w,c
   761   002A38  0D02               	mullw	2
   762   002A3A  0E01               	movlw	low _efecto
   763   002A3C  24F3               	addwf	243,w,c
   764   002A3E  6ED9               	movwf	fsr2l,c
   765   002A40  0E05               	movlw	high _efecto
   766   002A42  20F4               	addwfc	prodh,w,c
   767   002A44  6EDA               	movwf	fsr2h,c
   768   002A46  C4DE F532          	movff	postinc2,??_main
   769   002A4A  C4DD F533          	movff	postdec2,??_main+1
   770   002A4E  C533  F532         	movff	??_main+1,??_main
   771   002A52  6A33               	clrf	(??_main+1)^(0+1280),c
   772   002A54  5032               	movf	??_main^(0+1280),w,c
   773   002A56  6E22               	movwf	I2C1_Write_MCP23017@dato^(0+1280),c
   774   002A58  0E20               	movlw	32
   775   002A5A  EC6A  F019         	call	_I2C1_Write_MCP23017
   776                           
   777                           ; BSR set to: 2
   778                           ;maincode05.c: 128:             POS_CURSOR(1,4);
   779   002A5E  0E04               	movlw	4
   780   002A60  6E24               	movwf	POS_CURSOR@columna^(0+1280),c
   781   002A62  0E01               	movlw	1
   782   002A64  EC6A  F018         	call	_POS_CURSOR
   783                           
   784                           ;maincode05.c: 129:             LCD_ESCRIBE_VAR_CHAR(x_var, 3);
   785   002A68  0E03               	movlw	3
   786   002A6A  6E2B               	movwf	LCD_ESCRIBE_VAR_CHAR@n_digitos^(0+1280),c
   787   002A6C  5034               	movf	main@x_var^(0+1280),w,c
   788   002A6E  ECAA  F016         	call	_LCD_ESCRIBE_VAR_CHAR
   789                           
   790                           ;maincode05.c: 130:             POS_CURSOR(2,4);
   791   002A72  0E04               	movlw	4
   792   002A74  6E24               	movwf	POS_CURSOR@columna^(0+1280),c
   793   002A76  0E02               	movlw	2
   794   002A78  EC6A  F018         	call	_POS_CURSOR
   795                           
   796                           ;maincode05.c: 131:             LCD_VARCHAR_BITS(x_var);
   797   002A7C  5034               	movf	main@x_var^(0+1280),w,c
   798   002A7E  ECB2  F018         	call	_LCD_VARCHAR_BITS
   799                           
   800                           ;maincode05.c: 132:             POS_CURSOR(1,12);
   801   002A82  0E0C               	movlw	12
   802   002A84  6E24               	movwf	POS_CURSOR@columna^(0+1280),c
   803   002A86  0E01               	movlw	1
   804   002A88  EC6A  F018         	call	_POS_CURSOR
   805                           
   806                           ;maincode05.c: 133:             LCD_VARCHAR_HEX(x_var);
   807   002A8C  5034               	movf	main@x_var^(0+1280),w,c
   808   002A8E  EC80  F015         	call	_LCD_VARCHAR_HEX
   809                           
   810                           ;maincode05.c: 134:             I2C_POS_CURSOR(1,4);
   811   002A92  0E04               	movlw	4
   812   002A94  6E27               	movwf	I2C_POS_CURSOR@columna^(0+1280),c
   813   002A96  0E01               	movlw	1
   814   002A98  EC8E  F018         	call	_I2C_POS_CURSOR
   815                           
   816                           ;maincode05.c: 135:             I2C_LCD_ESCRIBE_VAR_CHAR(efecto[x_var], 3);
   817   002A9C  0E03               	movlw	3
   818   002A9E  6E2B               	movwf	I2C_LCD_ESCRIBE_VAR_CHAR@n_digitos^(0+1280),c
   819   002AA0  5034               	movf	main@x_var^(0+1280),w,c
   820   002AA2  0D02               	mullw	2
   821   002AA4  0E01               	movlw	low _efecto
   822   002AA6  24F3               	addwf	243,w,c
   823   002AA8  6ED9               	movwf	fsr2l,c
   824   002AAA  0E05               	movlw	high _efecto
   825   002AAC  20F4               	addwfc	prodh,w,c
   826   002AAE  6EDA               	movwf	fsr2h,c
   827   002AB0  50DF               	movf	indf2,w,c
   828   002AB2  ECF8  F016         	call	_I2C_LCD_ESCRIBE_VAR_CHAR
   829                           
   830                           ;maincode05.c: 136:             I2C_POS_CURSOR(2,4);
   831   002AB6  0E04               	movlw	4
   832   002AB8  6E27               	movwf	I2C_POS_CURSOR@columna^(0+1280),c
   833   002ABA  0E02               	movlw	2
   834   002ABC  EC8E  F018         	call	_I2C_POS_CURSOR
   835                           
   836                           ;maincode05.c: 137:             I2C_LCD_VARCHAR_BITS(efecto[x_var]);
   837   002AC0  5034               	movf	main@x_var^(0+1280),w,c
   838   002AC2  0D02               	mullw	2
   839   002AC4  0E01               	movlw	low _efecto
   840   002AC6  24F3               	addwf	243,w,c
   841   002AC8  6ED9               	movwf	fsr2l,c
   842   002ACA  0E05               	movlw	high _efecto
   843   002ACC  20F4               	addwfc	prodh,w,c
   844   002ACE  6EDA               	movwf	fsr2h,c
   845   002AD0  50DF               	movf	indf2,w,c
   846   002AD2  ECD4  F018         	call	_I2C_LCD_VARCHAR_BITS
   847                           
   848                           ;maincode05.c: 138:             I2C_POS_CURSOR(1,12);
   849   002AD6  0E0C               	movlw	12
   850   002AD8  6E27               	movwf	I2C_POS_CURSOR@columna^(0+1280),c
   851   002ADA  0E01               	movlw	1
   852   002ADC  EC8E  F018         	call	_I2C_POS_CURSOR
   853                           
   854                           ;maincode05.c: 139:             I2C_LCD_VARCHAR_HEX(efecto[x_var]);
   855   002AE0  5034               	movf	main@x_var^(0+1280),w,c
   856   002AE2  0D02               	mullw	2
   857   002AE4  0E01               	movlw	low _efecto
   858   002AE6  24F3               	addwf	243,w,c
   859   002AE8  6ED9               	movwf	fsr2l,c
   860   002AEA  0E05               	movlw	high _efecto
   861   002AEC  20F4               	addwfc	prodh,w,c
   862   002AEE  6EDA               	movwf	fsr2h,c
   863   002AF0  50DF               	movf	indf2,w,c
   864   002AF2  EC15  F016         	call	_I2C_LCD_VARCHAR_HEX
   865                           
   866                           ;maincode05.c: 141:         }
   867   002AF6  0634               	decf	main@x_var^(0+1280),f,c
   868   002AF8  5034               	movf	main@x_var^(0+1280),w,c
   869   002AFA  B4D8               	btfsc	status,2,c
   870   002AFC  D712               	goto	l2506
   871   002AFE  D78A               	goto	l2542
   872   002B00                     __end_of_main:
   873                           	callstack 0
   874                           
   875 ;; *************** function _splash_screen *****************
   876 ;; Defined at:
   877 ;;		line 40 in file "maincode05.c"
   878 ;; Parameters:    Size  Location     Type
   879 ;;		None
   880 ;; Auto vars:     Size  Location     Type
   881 ;;		None
   882 ;; Return value:  Size  Location     Type
   883 ;;                  1    wreg      void 
   884 ;; Registers used:
   885 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   886 ;; Tracked objects:
   887 ;;		On entry : 3F/2
   888 ;;		On exit  : 0/0
   889 ;;		Unchanged: 0/0
   890 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   891 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   892 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   893 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   894 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   895 ;;Total ram usage:        2 bytes
   896 ;; Hardware stack levels used: 1
   897 ;; Hardware stack levels required when called: 3
   898 ;; This function calls:
   899 ;;		_BORRAR_LCD
   900 ;;		_ESCRIBE_MENSAJE2
   901 ;;		_I2C_BORRAR_LCD
   902 ;;		_I2C_ESCRIBE_MENSAJE2
   903 ;;		_I2C_POS_CURSOR
   904 ;;		_POS_CURSOR
   905 ;; This function is called by:
   906 ;;		_main
   907 ;; This function uses a non-reentrant model
   908 ;;
   909                           
   910                           	psect	text1
   911   002F68                     __ptext1:
   912                           	callstack 0
   913   002F68                     _splash_screen:
   914                           	callstack 123
   915                           
   916                           ; BSR set to: 2
   917                           ;maincode05.c: 41:     POS_CURSOR(1,1);
   918                           
   919                           ;incstack = 0
   920   002F68  0E01               	movlw	1
   921   002F6A  6E24               	movwf	POS_CURSOR@columna^(0+1280),c
   922   002F6C  0E01               	movlw	1
   923   002F6E  EC6A  F018         	call	_POS_CURSOR
   924                           
   925                           ;maincode05.c: 42:     ESCRIBE_MENSAJE2("Prueba de I2C");
   926   002F72  0E20               	movlw	low STR_1
   927   002F74  6E24               	movwf	ESCRIBE_MENSAJE2@cadena^(0+1280),c
   928   002F76  EC4E  F019         	call	_ESCRIBE_MENSAJE2	;wreg free
   929                           
   930                           ;maincode05.c: 43:     POS_CURSOR(2,0);
   931   002F7A  0E00               	movlw	0
   932   002F7C  6E24               	movwf	POS_CURSOR@columna^(0+1280),c
   933   002F7E  0E02               	movlw	2
   934   002F80  EC6A  F018         	call	_POS_CURSOR
   935                           
   936                           ;maincode05.c: 44:     ESCRIBE_MENSAJE2("con el MCP23017");
   937   002F84  0E01               	movlw	low STR_2
   938   002F86  6E24               	movwf	ESCRIBE_MENSAJE2@cadena^(0+1280),c
   939   002F88  EC4E  F019         	call	_ESCRIBE_MENSAJE2	;wreg free
   940                           
   941                           ;maincode05.c: 45:     I2C_POS_CURSOR(1,1);
   942   002F8C  0E01               	movlw	1
   943   002F8E  6E27               	movwf	I2C_POS_CURSOR@columna^(0+1280),c
   944   002F90  0E01               	movlw	1
   945   002F92  EC8E  F018         	call	_I2C_POS_CURSOR
   946                           
   947                           ;maincode05.c: 46:     I2C_ESCRIBE_MENSAJE2("Prueba de I2C");
   948   002F96  0E20               	movlw	low STR_1
   949   002F98  6E27               	movwf	I2C_ESCRIBE_MENSAJE2@cadena^(0+1280),c
   950   002F9A  EC32  F019         	call	_I2C_ESCRIBE_MENSAJE2	;wreg free
   951                           
   952                           ;maincode05.c: 47:     I2C_POS_CURSOR(2,0);
   953   002F9E  0E00               	movlw	0
   954   002FA0  6E27               	movwf	I2C_POS_CURSOR@columna^(0+1280),c
   955   002FA2  0E02               	movlw	2
   956   002FA4  EC8E  F018         	call	_I2C_POS_CURSOR
   957                           
   958                           ;maincode05.c: 48:     I2C_ESCRIBE_MENSAJE2("con el PCF8574");
   959   002FA8  0E11               	movlw	low STR_4
   960   002FAA  6E27               	movwf	I2C_ESCRIBE_MENSAJE2@cadena^(0+1280),c
   961   002FAC  EC32  F019         	call	_I2C_ESCRIBE_MENSAJE2	;wreg free
   962                           
   963                           ;maincode05.c: 49:     _delay((unsigned long)((3000)*(32000000UL/4000.0)));
   964   002FB0  0E7A               	movlw	122
   965   002FB2  6E2C               	movwf	(??_splash_screen+1)^(0+1280),c
   966   002FB4  0EC1               	movlw	193
   967   002FB6  6E2B               	movwf	??_splash_screen^(0+1280),c
   968   002FB8  0E82               	movlw	130
   969   002FBA                     u807:
   970   002FBA  2EE8               	decfsz	wreg,f,c
   971   002FBC  D7FE               	bra	u807
   972   002FBE  2E2B               	decfsz	??_splash_screen^(0+1280),f,c
   973   002FC0  D7FC               	bra	u807
   974   002FC2  2E2C               	decfsz	(??_splash_screen+1)^(0+1280),f,c
   975   002FC4  D7FA               	bra	u807
   976                           
   977                           ;maincode05.c: 50:     BORRAR_LCD();
   978   002FC6  EC4A  F01A         	call	_BORRAR_LCD	;wreg free
   979                           
   980                           ;maincode05.c: 51:     I2C_BORRAR_LCD();
   981   002FCA  EC52  F01A         	call	_I2C_BORRAR_LCD	;wreg free
   982   002FCE  0012               	return		;funcret
   983   002FD0                     __end_of_splash_screen:
   984                           	callstack 0
   985                           
   986 ;; *************** function _POS_CURSOR *****************
   987 ;; Defined at:
   988 ;;		line 9 in file "LCD.c"
   989 ;; Parameters:    Size  Location     Type
   990 ;;  fila            1    wreg     unsigned char 
   991 ;;  columna         1    3[COMRAM] unsigned char 
   992 ;; Auto vars:     Size  Location     Type
   993 ;;  fila            1    4[COMRAM] unsigned char 
   994 ;; Return value:  Size  Location     Type
   995 ;;                  1    wreg      void 
   996 ;; Registers used:
   997 ;;		wreg, status,2, status,0, cstack
   998 ;; Tracked objects:
   999 ;;		On entry : 0/2
  1000 ;;		On exit  : 0/0
  1001 ;;		Unchanged: 0/0
  1002 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1003 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1004 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1005 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1006 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1007 ;;Total ram usage:        2 bytes
  1008 ;; Hardware stack levels used: 1
  1009 ;; Hardware stack levels required when called: 2
  1010 ;; This function calls:
  1011 ;;		_ENVIA_LCD_CMD
  1012 ;; This function is called by:
  1013 ;;		_splash_screen
  1014 ;;		_main
  1015 ;; This function uses a non-reentrant model
  1016 ;;
  1017                           
  1018                           	psect	text2
  1019   0030D4                     __ptext2:
  1020                           	callstack 0
  1021   0030D4                     _POS_CURSOR:
  1022                           	callstack 123
  1023                           
  1024                           ;incstack = 0
  1025                           ;POS_CURSOR@fila stored from wreg
  1026   0030D4  6E25               	movwf	POS_CURSOR@fila^(0+1280),c
  1027                           
  1028                           ;LCD.c: 10:  if(fila == 1){
  1029   0030D6  0425               	decf	POS_CURSOR@fila^(0+1280),w,c
  1030   0030D8  A4D8               	btfss	status,2,c
  1031   0030DA  D005               	goto	l2058
  1032                           
  1033                           ;LCD.c: 11:   ENVIA_LCD_CMD(0x80+columna);
  1034   0030DC  5024               	movf	POS_CURSOR@columna^(0+1280),w,c
  1035   0030DE  0F80               	addlw	128
  1036   0030E0  EC9A  F019         	call	_ENVIA_LCD_CMD
  1037                           
  1038                           ;LCD.c: 12:  }
  1039   0030E4  0012               	return	
  1040   0030E6                     l2058:
  1041   0030E6  0E02               	movlw	2
  1042   0030E8  1825               	xorwf	POS_CURSOR@fila^(0+1280),w,c
  1043   0030EA  A4D8               	btfss	status,2,c
  1044   0030EC  D005               	goto	l2062
  1045                           
  1046                           ;LCD.c: 14:   ENVIA_LCD_CMD(0xC0+columna);
  1047   0030EE  5024               	movf	POS_CURSOR@columna^(0+1280),w,c
  1048   0030F0  0FC0               	addlw	192
  1049   0030F2  EC9A  F019         	call	_ENVIA_LCD_CMD
  1050                           
  1051                           ;LCD.c: 15:  }
  1052   0030F6  0012               	return	
  1053   0030F8                     l2062:
  1054   0030F8  0E03               	movlw	3
  1055   0030FA  1825               	xorwf	POS_CURSOR@fila^(0+1280),w,c
  1056   0030FC  A4D8               	btfss	status,2,c
  1057   0030FE  D005               	goto	l2066
  1058                           
  1059                           ;LCD.c: 17:   ENVIA_LCD_CMD(0x94+columna);
  1060   003100  5024               	movf	POS_CURSOR@columna^(0+1280),w,c
  1061   003102  0F94               	addlw	148
  1062   003104  EC9A  F019         	call	_ENVIA_LCD_CMD
  1063                           
  1064                           ;LCD.c: 18:  }
  1065   003108  0012               	return	
  1066   00310A                     l2066:
  1067   00310A  0E04               	movlw	4
  1068   00310C  1825               	xorwf	POS_CURSOR@fila^(0+1280),w,c
  1069   00310E  A4D8               	btfss	status,2,c
  1070   003110  0012               	return	
  1071                           
  1072                           ;LCD.c: 20:   ENVIA_LCD_CMD(0xD4+columna);
  1073   003112  5024               	movf	POS_CURSOR@columna^(0+1280),w,c
  1074   003114  0FD4               	addlw	212
  1075   003116  EC9A  F019         	call	_ENVIA_LCD_CMD
  1076   00311A  0012               	return	
  1077   00311C                     __end_of_POS_CURSOR:
  1078                           	callstack 0
  1079                           
  1080 ;; *************** function _I2C_POS_CURSOR *****************
  1081 ;; Defined at:
  1082 ;;		line 48 in file "I2C_LCD.c"
  1083 ;; Parameters:    Size  Location     Type
  1084 ;;  fila            1    wreg     unsigned char 
  1085 ;;  columna         1    6[COMRAM] unsigned char 
  1086 ;; Auto vars:     Size  Location     Type
  1087 ;;  fila            1    7[COMRAM] unsigned char 
  1088 ;; Return value:  Size  Location     Type
  1089 ;;                  1    wreg      void 
  1090 ;; Registers used:
  1091 ;;		wreg, status,2, status,0, cstack
  1092 ;; Tracked objects:
  1093 ;;		On entry : 0/2
  1094 ;;		On exit  : 0/0
  1095 ;;		Unchanged: 0/0
  1096 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1097 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1098 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1099 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1100 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1101 ;;Total ram usage:        2 bytes
  1102 ;; Hardware stack levels used: 1
  1103 ;; Hardware stack levels required when called: 2
  1104 ;; This function calls:
  1105 ;;		_I2C_ENVIA_LCD_CMD
  1106 ;; This function is called by:
  1107 ;;		_splash_screen
  1108 ;;		_main
  1109 ;; This function uses a non-reentrant model
  1110 ;;
  1111                           
  1112                           	psect	text3
  1113   00311C                     __ptext3:
  1114                           	callstack 0
  1115   00311C                     _I2C_POS_CURSOR:
  1116                           	callstack 123
  1117                           
  1118                           ;incstack = 0
  1119                           ;I2C_POS_CURSOR@fila stored from wreg
  1120   00311C  6E28               	movwf	I2C_POS_CURSOR@fila^(0+1280),c
  1121                           
  1122                           ;I2C_LCD.c: 49:  if(fila == 1){
  1123   00311E  0428               	decf	I2C_POS_CURSOR@fila^(0+1280),w,c
  1124   003120  A4D8               	btfss	status,2,c
  1125   003122  D005               	goto	l2086
  1126                           
  1127                           ;I2C_LCD.c: 50:   I2C_ENVIA_LCD_CMD(0x80+columna);
  1128   003124  5027               	movf	I2C_POS_CURSOR@columna^(0+1280),w,c
  1129   003126  0F80               	addlw	128
  1130   003128  ECE8  F017         	call	_I2C_ENVIA_LCD_CMD
  1131                           
  1132                           ;I2C_LCD.c: 51:  }
  1133   00312C  0012               	return	
  1134   00312E                     l2086:
  1135   00312E  0E02               	movlw	2
  1136   003130  1828               	xorwf	I2C_POS_CURSOR@fila^(0+1280),w,c
  1137   003132  A4D8               	btfss	status,2,c
  1138   003134  D005               	goto	l2090
  1139                           
  1140                           ;I2C_LCD.c: 53:   I2C_ENVIA_LCD_CMD(0xC0+columna);
  1141   003136  5027               	movf	I2C_POS_CURSOR@columna^(0+1280),w,c
  1142   003138  0FC0               	addlw	192
  1143   00313A  ECE8  F017         	call	_I2C_ENVIA_LCD_CMD
  1144                           
  1145                           ;I2C_LCD.c: 54:  }
  1146   00313E  0012               	return	
  1147   003140                     l2090:
  1148   003140  0E03               	movlw	3
  1149   003142  1828               	xorwf	I2C_POS_CURSOR@fila^(0+1280),w,c
  1150   003144  A4D8               	btfss	status,2,c
  1151   003146  D005               	goto	l2094
  1152                           
  1153                           ;I2C_LCD.c: 56:   I2C_ENVIA_LCD_CMD(0x94+columna);
  1154   003148  5027               	movf	I2C_POS_CURSOR@columna^(0+1280),w,c
  1155   00314A  0F94               	addlw	148
  1156   00314C  ECE8  F017         	call	_I2C_ENVIA_LCD_CMD
  1157                           
  1158                           ;I2C_LCD.c: 57:  }
  1159   003150  0012               	return	
  1160   003152                     l2094:
  1161   003152  0E04               	movlw	4
  1162   003154  1828               	xorwf	I2C_POS_CURSOR@fila^(0+1280),w,c
  1163   003156  A4D8               	btfss	status,2,c
  1164   003158  0012               	return	
  1165                           
  1166                           ;I2C_LCD.c: 59:   I2C_ENVIA_LCD_CMD(0xD4+columna);
  1167   00315A  5027               	movf	I2C_POS_CURSOR@columna^(0+1280),w,c
  1168   00315C  0FD4               	addlw	212
  1169   00315E  ECE8  F017         	call	_I2C_ENVIA_LCD_CMD
  1170   003162  0012               	return	
  1171   003164                     __end_of_I2C_POS_CURSOR:
  1172                           	callstack 0
  1173                           
  1174 ;; *************** function _I2C_ESCRIBE_MENSAJE2 *****************
  1175 ;; Defined at:
  1176 ;;		line 105 in file "I2C_LCD.c"
  1177 ;; Parameters:    Size  Location     Type
  1178 ;;  cadena          1    6[COMRAM] PTR const unsigned char 
  1179 ;;		 -> STR_10(5), STR_9(5), STR_8(5), STR_4(15), 
  1180 ;;		 -> STR_3(14), 
  1181 ;; Auto vars:     Size  Location     Type
  1182 ;;  i               1    9[COMRAM] unsigned char 
  1183 ;;  tam             1    8[COMRAM] unsigned char 
  1184 ;; Return value:  Size  Location     Type
  1185 ;;                  1    wreg      void 
  1186 ;; Registers used:
  1187 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1188 ;; Tracked objects:
  1189 ;;		On entry : 0/2
  1190 ;;		On exit  : 0/0
  1191 ;;		Unchanged: 0/0
  1192 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1193 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1194 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1195 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1196 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1197 ;;Total ram usage:        4 bytes
  1198 ;; Hardware stack levels used: 1
  1199 ;; Hardware stack levels required when called: 2
  1200 ;; This function calls:
  1201 ;;		_I2C_ENVIA_LCD_DATA
  1202 ;;		_strlen
  1203 ;; This function is called by:
  1204 ;;		_splash_screen
  1205 ;;		_main
  1206 ;; This function uses a non-reentrant model
  1207 ;;
  1208                           
  1209                           	psect	text4
  1210   003264                     __ptext4:
  1211                           	callstack 0
  1212   003264                     _I2C_ESCRIBE_MENSAJE2:
  1213                           	callstack 123
  1214                           
  1215                           ;I2C_LCD.c: 106:     unsigned char tam;;I2C_LCD.c: 107:     tam = strlen(cadena);
  1216                           
  1217                           ;incstack = 0
  1218   003264  C527  F521         	movff	I2C_ESCRIBE_MENSAJE2@cadena,strlen@s
  1219   003268  EC84  F019         	call	_strlen	;wreg free
  1220   00326C  5021               	movf	?_strlen^(0+1280),w,c
  1221   00326E  6E29               	movwf	I2C_ESCRIBE_MENSAJE2@tam^(0+1280),c
  1222                           
  1223                           ;I2C_LCD.c: 109:  for(i = 0; i<tam; i++) {
  1224   003270  0E00               	movlw	0
  1225   003272  6E2A               	movwf	I2C_ESCRIBE_MENSAJE2@i^(0+1280),c
  1226   003274  D00E               	goto	l2108
  1227   003276                     l2104:
  1228                           
  1229                           ;I2C_LCD.c: 110:   I2C_ENVIA_LCD_DATA(cadena[i]);
  1230   003276  5027               	movf	I2C_ESCRIBE_MENSAJE2@cadena^(0+1280),w,c
  1231   003278  242A               	addwf	I2C_ESCRIBE_MENSAJE2@i^(0+1280),w,c
  1232   00327A  6E28               	movwf	??_I2C_ESCRIBE_MENSAJE2^(0+1280),c
  1233   00327C  C528  F4F6         	movff	??_I2C_ESCRIBE_MENSAJE2,tblptrl
  1234   003280                     	if	1	;There is more than 1 active tblptr byte
  1235   003280  0E25               	movlw	high __smallconst
  1236   003282  6EF7               	movwf	tblptrh,c
  1237   003284                     	endif
  1238   003284                     	if	0	;tblptru may be non-zero
  1239   003284                     	endif
  1240   003284                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1241   003284  0E00               	movlw	low (__smallconst shr (0+16))
  1242   003286  6EF8               	movwf	tblptru,c
  1243   003288                     	endif
  1244   003288  0008               	tblrd		*
  1245   00328A  50F5               	movf	tablat,w,c
  1246   00328C  EC7E  F017         	call	_I2C_ENVIA_LCD_DATA
  1247                           
  1248                           ;I2C_LCD.c: 111:  }
  1249   003290  2A2A               	incf	I2C_ESCRIBE_MENSAJE2@i^(0+1280),f,c
  1250   003292                     l2108:
  1251   003292  5029               	movf	I2C_ESCRIBE_MENSAJE2@tam^(0+1280),w,c
  1252   003294  5C2A               	subwf	I2C_ESCRIBE_MENSAJE2@i^(0+1280),w,c
  1253   003296  B0D8               	btfsc	status,0,c
  1254   003298  0012               	return	
  1255   00329A  D7ED               	goto	l2104
  1256   00329C                     __end_of_I2C_ESCRIBE_MENSAJE2:
  1257                           	callstack 0
  1258                           
  1259 ;; *************** function _ESCRIBE_MENSAJE2 *****************
  1260 ;; Defined at:
  1261 ;;		line 66 in file "LCD.c"
  1262 ;; Parameters:    Size  Location     Type
  1263 ;;  cadena          1    3[COMRAM] PTR const unsigned char 
  1264 ;;		 -> STR_7(5), STR_6(5), STR_5(5), STR_2(16), 
  1265 ;;		 -> STR_1(14), 
  1266 ;; Auto vars:     Size  Location     Type
  1267 ;;  i               1    6[COMRAM] unsigned char 
  1268 ;;  tam             1    5[COMRAM] unsigned char 
  1269 ;; Return value:  Size  Location     Type
  1270 ;;                  1    wreg      void 
  1271 ;; Registers used:
  1272 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1273 ;; Tracked objects:
  1274 ;;		On entry : 0/2
  1275 ;;		On exit  : 0/0
  1276 ;;		Unchanged: 0/0
  1277 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1278 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1279 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1280 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1281 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1282 ;;Total ram usage:        4 bytes
  1283 ;; Hardware stack levels used: 1
  1284 ;; Hardware stack levels required when called: 2
  1285 ;; This function calls:
  1286 ;;		_ENVIA_CHAR
  1287 ;;		_strlen
  1288 ;; This function is called by:
  1289 ;;		_splash_screen
  1290 ;;		_main
  1291 ;; This function uses a non-reentrant model
  1292 ;;
  1293                           
  1294                           	psect	text5
  1295   00329C                     __ptext5:
  1296                           	callstack 0
  1297   00329C                     _ESCRIBE_MENSAJE2:
  1298                           	callstack 123
  1299                           
  1300                           ;LCD.c: 67:     unsigned char tam;;LCD.c: 68:     tam = strlen(cadena);
  1301                           
  1302                           ;incstack = 0
  1303   00329C  C524  F521         	movff	ESCRIBE_MENSAJE2@cadena,strlen@s
  1304   0032A0  EC84  F019         	call	_strlen	;wreg free
  1305   0032A4  5021               	movf	?_strlen^(0+1280),w,c
  1306   0032A6  6E26               	movwf	ESCRIBE_MENSAJE2@tam^(0+1280),c
  1307                           
  1308                           ;LCD.c: 70:  for(i = 0; i<tam; i++) {
  1309   0032A8  0E00               	movlw	0
  1310   0032AA  6E27               	movwf	ESCRIBE_MENSAJE2@i^(0+1280),c
  1311   0032AC  D00E               	goto	l2080
  1312   0032AE                     l2076:
  1313                           
  1314                           ;LCD.c: 71:   ENVIA_CHAR(cadena[i]);
  1315   0032AE  5024               	movf	ESCRIBE_MENSAJE2@cadena^(0+1280),w,c
  1316   0032B0  2427               	addwf	ESCRIBE_MENSAJE2@i^(0+1280),w,c
  1317   0032B2  6E25               	movwf	??_ESCRIBE_MENSAJE2^(0+1280),c
  1318   0032B4  C525  F4F6         	movff	??_ESCRIBE_MENSAJE2,tblptrl
  1319   0032B8                     	if	1	;There is more than 1 active tblptr byte
  1320   0032B8  0E25               	movlw	high __smallconst
  1321   0032BA  6EF7               	movwf	tblptrh,c
  1322   0032BC                     	endif
  1323   0032BC                     	if	0	;tblptru may be non-zero
  1324   0032BC                     	endif
  1325   0032BC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1326   0032BC  0E00               	movlw	low (__smallconst shr (0+16))
  1327   0032BE  6EF8               	movwf	tblptru,c
  1328   0032C0                     	endif
  1329   0032C0  0008               	tblrd		*
  1330   0032C2  50F5               	movf	tablat,w,c
  1331   0032C4  ECB0  F019         	call	_ENVIA_CHAR
  1332                           
  1333                           ;LCD.c: 72:  }
  1334   0032C8  2A27               	incf	ESCRIBE_MENSAJE2@i^(0+1280),f,c
  1335   0032CA                     l2080:
  1336   0032CA  5026               	movf	ESCRIBE_MENSAJE2@tam^(0+1280),w,c
  1337   0032CC  5C27               	subwf	ESCRIBE_MENSAJE2@i^(0+1280),w,c
  1338   0032CE  B0D8               	btfsc	status,0,c
  1339   0032D0  0012               	return	
  1340   0032D2  D7ED               	goto	l2076
  1341   0032D4                     __end_of_ESCRIBE_MENSAJE2:
  1342                           	callstack 0
  1343                           
  1344 ;; *************** function _strlen *****************
  1345 ;; Defined at:
  1346 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\strlen.c"
  1347 ;; Parameters:    Size  Location     Type
  1348 ;;  s               1    0[COMRAM] PTR const unsigned char 
  1349 ;;		 -> STR_10(5), STR_9(5), STR_8(5), STR_7(5), 
  1350 ;;		 -> STR_6(5), STR_5(5), STR_4(15), STR_3(14), 
  1351 ;;		 -> STR_2(16), STR_1(14), 
  1352 ;; Auto vars:     Size  Location     Type
  1353 ;;  a               1    2[COMRAM] PTR const unsigned char 
  1354 ;;		 -> STR_10(5), STR_9(5), STR_8(5), STR_7(5), 
  1355 ;;		 -> STR_6(5), STR_5(5), STR_4(15), STR_3(14), 
  1356 ;;		 -> STR_2(16), STR_1(14), 
  1357 ;; Return value:  Size  Location     Type
  1358 ;;                  2    0[COMRAM] unsigned int 
  1359 ;; Registers used:
  1360 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  1361 ;; Tracked objects:
  1362 ;;		On entry : 0/2
  1363 ;;		On exit  : 0/0
  1364 ;;		Unchanged: 0/0
  1365 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1366 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1367 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1368 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1369 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1370 ;;Total ram usage:        3 bytes
  1371 ;; Hardware stack levels used: 1
  1372 ;; This function calls:
  1373 ;;		Nothing
  1374 ;; This function is called by:
  1375 ;;		_ESCRIBE_MENSAJE2
  1376 ;;		_I2C_ESCRIBE_MENSAJE2
  1377 ;; This function uses a non-reentrant model
  1378 ;;
  1379                           
  1380                           	psect	text6
  1381   003308                     __ptext6:
  1382                           	callstack 0
  1383   003308                     _strlen:
  1384                           	callstack 124
  1385                           
  1386                           ;incstack = 0
  1387   003308  C521  F523         	movff	strlen@s,strlen@a
  1388   00330C  D001               	goto	l2018
  1389   00330E                     l2016:
  1390   00330E  2A21               	incf	strlen@s^(0+1280),f,c
  1391   003310                     l2018:
  1392   003310  C521  F4F6         	movff	strlen@s,tblptrl
  1393   003314                     	if	1	;There is more than 1 active tblptr byte
  1394   003314  0E25               	movlw	high __smallconst
  1395   003316  6EF7               	movwf	tblptrh,c
  1396   003318                     	endif
  1397   003318                     	if	0	;tblptru may be non-zero
  1398   003318                     	endif
  1399   003318                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1400   003318  0E00               	movlw	low (__smallconst shr (0+16))
  1401   00331A  6EF8               	movwf	tblptru,c
  1402   00331C                     	endif
  1403   00331C  0008               	tblrd		*
  1404   00331E  50F5               	movf	tablat,w,c
  1405   003320  0900               	iorlw	0
  1406   003322  A4D8               	btfss	status,2,c
  1407   003324  D7F4               	goto	l2016
  1408   003326  5023               	movf	strlen@a^(0+1280),w,c
  1409   003328  5C21               	subwf	strlen@s^(0+1280),w,c
  1410   00332A  6E21               	movwf	?_strlen^(0+1280),c
  1411   00332C  6A22               	clrf	(?_strlen+1)^(0+1280),c
  1412   00332E  BE21               	btfsc	?_strlen^(0+1280),7,c
  1413   003330  0622               	decf	(?_strlen+1)^(0+1280),f,c
  1414   003332  0012               	return		;funcret
  1415   003334                     __end_of_strlen:
  1416                           	callstack 0
  1417                           
  1418 ;; *************** function _configuro *****************
  1419 ;; Defined at:
  1420 ;;		line 9 in file "maincode05.c"
  1421 ;; Parameters:    Size  Location     Type
  1422 ;;		None
  1423 ;; Auto vars:     Size  Location     Type
  1424 ;;		None
  1425 ;; Return value:  Size  Location     Type
  1426 ;;                  1    wreg      void 
  1427 ;; Registers used:
  1428 ;;		wreg, status,2, status,0, cstack
  1429 ;; Tracked objects:
  1430 ;;		On entry : 0/0
  1431 ;;		On exit  : 0/0
  1432 ;;		Unchanged: 0/0
  1433 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1434 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1435 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1436 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1437 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1438 ;;Total ram usage:        0 bytes
  1439 ;; Hardware stack levels used: 1
  1440 ;; Hardware stack levels required when called: 4
  1441 ;; This function calls:
  1442 ;;		_I2C_LCD_INIT
  1443 ;;		_LCD_INIT
  1444 ;; This function is called by:
  1445 ;;		_main
  1446 ;; This function uses a non-reentrant model
  1447 ;;
  1448                           
  1449                           	psect	text7
  1450   003474                     __ptext7:
  1451                           	callstack 0
  1452   003474                     _configuro:
  1453                           	callstack 122
  1454                           
  1455                           ;maincode05.c: 11:     OSCCON1 = 0x60;
  1456                           
  1457                           ;incstack = 0
  1458   003474  0E60               	movlw	96
  1459   003476  0100               	movlb	0	; () banked
  1460   003478  6FAD               	movwf	173,b	;volatile
  1461                           
  1462                           ;maincode05.c: 12:     OSCFRQ = 0x06;
  1463   00347A  0E06               	movlw	6
  1464   00347C  6FB1               	movwf	177,b	;volatile
  1465                           
  1466                           ;maincode05.c: 13:     OSCEN = 0x40;
  1467   00347E  0E40               	movlw	64
  1468   003480  6FB3               	movwf	179,b	;volatile
  1469                           
  1470                           ; BSR set to: 0
  1471                           ;maincode05.c: 36:     LCD_INIT();
  1472   003482  ECF6  F018         	call	_LCD_INIT	;wreg free
  1473                           
  1474                           ;maincode05.c: 37:     I2C_LCD_INIT();
  1475   003486  EC9F  F012         	call	_I2C_LCD_INIT	;wreg free
  1476   00348A  0012               	return		;funcret
  1477   00348C                     __end_of_configuro:
  1478                           	callstack 0
  1479                           
  1480 ;; *************** function _LCD_INIT *****************
  1481 ;; Defined at:
  1482 ;;		line 171 in file "LCD.c"
  1483 ;; Parameters:    Size  Location     Type
  1484 ;;		None
  1485 ;; Auto vars:     Size  Location     Type
  1486 ;;		None
  1487 ;; Return value:  Size  Location     Type
  1488 ;;                  1    wreg      void 
  1489 ;; Registers used:
  1490 ;;		wreg, status,2, status,0, cstack
  1491 ;; Tracked objects:
  1492 ;;		On entry : 3F/0
  1493 ;;		On exit  : 0/0
  1494 ;;		Unchanged: 0/0
  1495 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1496 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1497 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1498 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1499 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1500 ;;Total ram usage:        1 bytes
  1501 ;; Hardware stack levels used: 1
  1502 ;; Hardware stack levels required when called: 3
  1503 ;; This function calls:
  1504 ;;		_BORRAR_LCD
  1505 ;;		_CURSOR_HOME
  1506 ;;		_CURSOR_ONOFF
  1507 ;;		_LCD_CONFIG
  1508 ;; This function is called by:
  1509 ;;		_configuro
  1510 ;; This function uses a non-reentrant model
  1511 ;;
  1512                           
  1513                           	psect	text8
  1514   0031EC                     __ptext8:
  1515                           	callstack 0
  1516   0031EC                     _LCD_INIT:
  1517                           	callstack 122
  1518                           
  1519                           ; BSR set to: 0
  1520                           ;LCD.c: 172:     TRISD = 0x00;
  1521                           
  1522                           ;incstack = 0
  1523   0031EC  0E00               	movlw	0
  1524   0031EE  6EC9               	movwf	201,c	;volatile
  1525                           
  1526                           ;LCD.c: 173:     ANSELD = 0x00;
  1527   0031F0  0E00               	movlw	0
  1528   0031F2  0104               	movlb	4	; () banked
  1529   0031F4  6F18               	movwf	24,b	;volatile
  1530                           
  1531                           ; BSR set to: 4
  1532                           ;LCD.c: 174:     _delay((unsigned long)((15)*(32000000UL/4000.0)));
  1533   0031F6  0E9C               	movlw	156
  1534   0031F8  6E25               	movwf	??_LCD_INIT^(0+1280),c
  1535   0031FA  0ED7               	movlw	215
  1536   0031FC                     u817:
  1537   0031FC  2EE8               	decfsz	wreg,f,c
  1538   0031FE  D7FE               	bra	u817
  1539   003200  2E25               	decfsz	??_LCD_INIT^(0+1280),f,c
  1540   003202  D7FC               	bra	u817
  1541   003204  0000               	nop	
  1542                           
  1543                           ;LCD.c: 175:     LCD_CONFIG();
  1544   003206  EC1C  F018         	call	_LCD_CONFIG	;wreg free
  1545                           
  1546                           ;LCD.c: 176:     _delay((unsigned long)((15)*(32000000UL/4000.0)));
  1547   00320A  0E9C               	movlw	156
  1548   00320C  6E25               	movwf	??_LCD_INIT^(0+1280),c
  1549   00320E  0ED7               	movlw	215
  1550   003210                     u827:
  1551   003210  2EE8               	decfsz	wreg,f,c
  1552   003212  D7FE               	bra	u827
  1553   003214  2E25               	decfsz	??_LCD_INIT^(0+1280),f,c
  1554   003216  D7FC               	bra	u827
  1555   003218  0000               	nop	
  1556                           
  1557                           ;LCD.c: 177:     BORRAR_LCD();
  1558   00321A  EC4A  F01A         	call	_BORRAR_LCD	;wreg free
  1559                           
  1560                           ;LCD.c: 178:     CURSOR_HOME();
  1561   00321E  EC46  F01A         	call	_CURSOR_HOME	;wreg free
  1562                           
  1563                           ;LCD.c: 179:     CURSOR_ONOFF(1);
  1564   003222  0E01               	movlw	1
  1565   003224  EC10  F01A         	call	_CURSOR_ONOFF
  1566   003228  0012               	return		;funcret
  1567   00322A                     __end_of_LCD_INIT:
  1568                           	callstack 0
  1569                           
  1570 ;; *************** function _LCD_CONFIG *****************
  1571 ;; Defined at:
  1572 ;;		line 94 in file "LCD.c"
  1573 ;; Parameters:    Size  Location     Type
  1574 ;;		None
  1575 ;; Auto vars:     Size  Location     Type
  1576 ;;		None
  1577 ;; Return value:  Size  Location     Type
  1578 ;;                  1    wreg      void 
  1579 ;; Registers used:
  1580 ;;		wreg, status,2, status,0, cstack
  1581 ;; Tracked objects:
  1582 ;;		On entry : 0/4
  1583 ;;		On exit  : 0/0
  1584 ;;		Unchanged: 0/0
  1585 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1586 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1587 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1588 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1589 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1590 ;;Total ram usage:        1 bytes
  1591 ;; Hardware stack levels used: 1
  1592 ;; Hardware stack levels required when called: 2
  1593 ;; This function calls:
  1594 ;;		_ENVIA_LCD_CMD
  1595 ;;		_ENVIA_NIBBLE
  1596 ;; This function is called by:
  1597 ;;		_LCD_INIT
  1598 ;; This function uses a non-reentrant model
  1599 ;;
  1600                           
  1601                           	psect	text9
  1602   003038                     __ptext9:
  1603                           	callstack 0
  1604   003038                     _LCD_CONFIG:
  1605                           	callstack 122
  1606                           
  1607                           ;LCD.c: 95:  LATDbits.LATD0 = 0;
  1608                           
  1609                           ;incstack = 0
  1610   003038  90C1               	bcf	193,0,c	;volatile
  1611                           
  1612                           ;LCD.c: 96:  LATDbits.LATD1 = 0;
  1613   00303A  92C1               	bcf	193,1,c	;volatile
  1614                           
  1615                           ;LCD.c: 97:  ENVIA_NIBBLE(0x30);
  1616   00303C  0E30               	movlw	48
  1617   00303E  EC2C  F01A         	call	_ENVIA_NIBBLE
  1618                           
  1619                           ;LCD.c: 98:     _delay((unsigned long)((4)*(32000000UL/4000.0)));
  1620   003042  0E2A               	movlw	42
  1621   003044  6E24               	movwf	??_LCD_CONFIG^(0+1280),c
  1622   003046  0E8E               	movlw	142
  1623   003048                     u837:
  1624   003048  2EE8               	decfsz	wreg,f,c
  1625   00304A  D7FE               	bra	u837
  1626   00304C  2E24               	decfsz	??_LCD_CONFIG^(0+1280),f,c
  1627   00304E  D7FC               	bra	u837
  1628                           
  1629                           ;LCD.c: 99:  ENVIA_NIBBLE(0x30);
  1630   003050  0E30               	movlw	48
  1631   003052  EC2C  F01A         	call	_ENVIA_NIBBLE
  1632                           
  1633                           ;LCD.c: 100:     _delay((unsigned long)((100)*(32000000UL/4000000.0)));
  1634   003056  0EA0               	movlw	160
  1635   003058                     u847:
  1636   003058  D000               	nop2	
  1637   00305A  2EE8               	decfsz	wreg,f,c
  1638   00305C  D7FD               	bra	u847
  1639                           
  1640                           ;LCD.c: 101:     ENVIA_NIBBLE(0x30);
  1641   00305E  0E30               	movlw	48
  1642   003060  EC2C  F01A         	call	_ENVIA_NIBBLE
  1643                           
  1644                           ;LCD.c: 102:  ENVIA_NIBBLE(0x20);
  1645   003064  0E20               	movlw	32
  1646   003066  EC2C  F01A         	call	_ENVIA_NIBBLE
  1647                           
  1648                           ;LCD.c: 103:  ENVIA_LCD_CMD(0x01);
  1649   00306A  0E01               	movlw	1
  1650   00306C  EC9A  F019         	call	_ENVIA_LCD_CMD
  1651                           
  1652                           ;LCD.c: 104:  ENVIA_LCD_CMD(0x28);
  1653   003070  0E28               	movlw	40
  1654   003072  EC9A  F019         	call	_ENVIA_LCD_CMD
  1655                           
  1656                           ;LCD.c: 105:  ENVIA_LCD_CMD(0x0F);
  1657   003076  0E0F               	movlw	15
  1658   003078  EC9A  F019         	call	_ENVIA_LCD_CMD
  1659                           
  1660                           ;LCD.c: 106:  ENVIA_LCD_CMD(0x06);
  1661   00307C  0E06               	movlw	6
  1662   00307E  EC9A  F019         	call	_ENVIA_LCD_CMD
  1663                           
  1664                           ;LCD.c: 107:  ENVIA_LCD_CMD(0x01);
  1665   003082  0E01               	movlw	1
  1666   003084  EC9A  F019         	call	_ENVIA_LCD_CMD
  1667   003088  0012               	return		;funcret
  1668   00308A                     __end_of_LCD_CONFIG:
  1669                           	callstack 0
  1670                           
  1671 ;; *************** function _CURSOR_ONOFF *****************
  1672 ;; Defined at:
  1673 ;;		line 54 in file "LCD.c"
  1674 ;; Parameters:    Size  Location     Type
  1675 ;;  estado          1    wreg     unsigned char 
  1676 ;; Auto vars:     Size  Location     Type
  1677 ;;  estado          1    3[COMRAM] unsigned char 
  1678 ;; Return value:  Size  Location     Type
  1679 ;;                  1    wreg      void 
  1680 ;; Registers used:
  1681 ;;		wreg, status,2, status,0, cstack
  1682 ;; Tracked objects:
  1683 ;;		On entry : 0/4
  1684 ;;		On exit  : 0/0
  1685 ;;		Unchanged: 0/0
  1686 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1687 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1688 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1689 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1690 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1691 ;;Total ram usage:        1 bytes
  1692 ;; Hardware stack levels used: 1
  1693 ;; Hardware stack levels required when called: 2
  1694 ;; This function calls:
  1695 ;;		_ENVIA_LCD_CMD
  1696 ;; This function is called by:
  1697 ;;		_LCD_INIT
  1698 ;; This function uses a non-reentrant model
  1699 ;;
  1700                           
  1701                           	psect	text10
  1702   003420                     __ptext10:
  1703                           	callstack 0
  1704   003420                     _CURSOR_ONOFF:
  1705                           	callstack 122
  1706                           
  1707                           ;incstack = 0
  1708                           ;CURSOR_ONOFF@estado stored from wreg
  1709   003420  6E24               	movwf	CURSOR_ONOFF@estado^(0+1280),c
  1710                           
  1711                           ;LCD.c: 55:  if(estado == 0) ENVIA_LCD_CMD(0x0E);
  1712   003422  5024               	movf	CURSOR_ONOFF@estado^(0+1280),w,c
  1713   003424  A4D8               	btfss	status,2,c
  1714   003426  D003               	goto	l1198
  1715   003428  0E0E               	movlw	14
  1716   00342A  EC9A  F019         	call	_ENVIA_LCD_CMD
  1717   00342E                     l1198:
  1718                           
  1719                           ;LCD.c: 56:  if(estado == 1) ENVIA_LCD_CMD(0x0C);
  1720   00342E  0424               	decf	CURSOR_ONOFF@estado^(0+1280),w,c
  1721   003430  A4D8               	btfss	status,2,c
  1722   003432  0012               	return	
  1723   003434  0E0C               	movlw	12
  1724   003436  EC9A  F019         	call	_ENVIA_LCD_CMD
  1725   00343A  0012               	return		;funcret
  1726   00343C                     __end_of_CURSOR_ONOFF:
  1727                           	callstack 0
  1728                           
  1729 ;; *************** function _CURSOR_HOME *****************
  1730 ;; Defined at:
  1731 ;;		line 34 in file "LCD.c"
  1732 ;; Parameters:    Size  Location     Type
  1733 ;;		None
  1734 ;; Auto vars:     Size  Location     Type
  1735 ;;		None
  1736 ;; Return value:  Size  Location     Type
  1737 ;;                  1    wreg      void 
  1738 ;; Registers used:
  1739 ;;		wreg, status,2, status,0, cstack
  1740 ;; Tracked objects:
  1741 ;;		On entry : 0/4
  1742 ;;		On exit  : 0/0
  1743 ;;		Unchanged: 0/0
  1744 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1745 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1746 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1747 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1748 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1749 ;;Total ram usage:        0 bytes
  1750 ;; Hardware stack levels used: 1
  1751 ;; Hardware stack levels required when called: 2
  1752 ;; This function calls:
  1753 ;;		_ENVIA_LCD_CMD
  1754 ;; This function is called by:
  1755 ;;		_LCD_INIT
  1756 ;; This function uses a non-reentrant model
  1757 ;;
  1758                           
  1759                           	psect	text11
  1760   00348C                     __ptext11:
  1761                           	callstack 0
  1762   00348C                     _CURSOR_HOME:
  1763                           	callstack 122
  1764                           
  1765                           ;LCD.c: 35:  ENVIA_LCD_CMD(0x02);
  1766                           
  1767                           ;incstack = 0
  1768   00348C  0E02               	movlw	2
  1769   00348E  EC9A  F019         	call	_ENVIA_LCD_CMD
  1770   003492  0012               	return		;funcret
  1771   003494                     __end_of_CURSOR_HOME:
  1772                           	callstack 0
  1773                           
  1774 ;; *************** function _BORRAR_LCD *****************
  1775 ;; Defined at:
  1776 ;;		line 90 in file "LCD.c"
  1777 ;; Parameters:    Size  Location     Type
  1778 ;;		None
  1779 ;; Auto vars:     Size  Location     Type
  1780 ;;		None
  1781 ;; Return value:  Size  Location     Type
  1782 ;;                  1    wreg      void 
  1783 ;; Registers used:
  1784 ;;		wreg, status,2, status,0, cstack
  1785 ;; Tracked objects:
  1786 ;;		On entry : 0/2
  1787 ;;		On exit  : 0/0
  1788 ;;		Unchanged: 0/0
  1789 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1790 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1791 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1792 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1793 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1794 ;;Total ram usage:        0 bytes
  1795 ;; Hardware stack levels used: 1
  1796 ;; Hardware stack levels required when called: 2
  1797 ;; This function calls:
  1798 ;;		_ENVIA_LCD_CMD
  1799 ;; This function is called by:
  1800 ;;		_LCD_INIT
  1801 ;;		_splash_screen
  1802 ;; This function uses a non-reentrant model
  1803 ;;
  1804                           
  1805                           	psect	text12
  1806   003494                     __ptext12:
  1807                           	callstack 0
  1808   003494                     _BORRAR_LCD:
  1809                           	callstack 123
  1810                           
  1811                           ;LCD.c: 91:  ENVIA_LCD_CMD(0x01);
  1812                           
  1813                           ;incstack = 0
  1814   003494  0E01               	movlw	1
  1815   003496  EC9A  F019         	call	_ENVIA_LCD_CMD
  1816   00349A  0012               	return		;funcret
  1817   00349C                     __end_of_BORRAR_LCD:
  1818                           	callstack 0
  1819                           
  1820 ;; *************** function _ENVIA_LCD_CMD *****************
  1821 ;; Defined at:
  1822 ;;		line 119 in file "LCD.c"
  1823 ;; Parameters:    Size  Location     Type
  1824 ;;  dato            1    wreg     unsigned char 
  1825 ;; Auto vars:     Size  Location     Type
  1826 ;;  dato            1    1[COMRAM] unsigned char 
  1827 ;;  aux             1    2[COMRAM] unsigned char 
  1828 ;; Return value:  Size  Location     Type
  1829 ;;                  1    wreg      void 
  1830 ;; Registers used:
  1831 ;;		wreg, status,2, status,0, cstack
  1832 ;; Tracked objects:
  1833 ;;		On entry : 0/2
  1834 ;;		On exit  : 0/0
  1835 ;;		Unchanged: 0/0
  1836 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1837 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1838 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1839 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1840 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1841 ;;Total ram usage:        2 bytes
  1842 ;; Hardware stack levels used: 1
  1843 ;; Hardware stack levels required when called: 1
  1844 ;; This function calls:
  1845 ;;		_ENVIA_NIBBLE
  1846 ;; This function is called by:
  1847 ;;		_POS_CURSOR
  1848 ;;		_CURSOR_HOME
  1849 ;;		_CURSOR_ONOFF
  1850 ;;		_BORRAR_LCD
  1851 ;;		_LCD_CONFIG
  1852 ;; This function uses a non-reentrant model
  1853 ;;
  1854                           
  1855                           	psect	text13
  1856   003334                     __ptext13:
  1857                           	callstack 0
  1858   003334                     _ENVIA_LCD_CMD:
  1859                           	callstack 123
  1860                           
  1861                           ;incstack = 0
  1862                           ;ENVIA_LCD_CMD@dato stored from wreg
  1863   003334  6E22               	movwf	ENVIA_LCD_CMD@dato^(0+1280),c
  1864                           
  1865                           ;LCD.c: 120:     unsigned char aux;;LCD.c: 121:   LATDbits.LATD0 = 0;
  1866   003336  90C1               	bcf	193,0,c	;volatile
  1867                           
  1868                           ;LCD.c: 124:     _delay((unsigned long)((100)*(32000000UL/4000000.0)));
  1869   003338  0EA0               	movlw	160
  1870   00333A                     u857:
  1871   00333A  D000               	nop2	
  1872   00333C  2EE8               	decfsz	wreg,f,c
  1873   00333E  D7FD               	bra	u857
  1874                           
  1875                           ;LCD.c: 125:     LATDbits.LATD1 = 0;
  1876   003340  92C1               	bcf	193,1,c	;volatile
  1877                           
  1878                           ;LCD.c: 126:  LATDbits.LATD2 = 0;
  1879   003342  94C1               	bcf	193,2,c	;volatile
  1880                           
  1881                           ;LCD.c: 127:  LATDbits.LATD0 = 0;
  1882   003344  90C1               	bcf	193,0,c	;volatile
  1883                           
  1884                           ;LCD.c: 128:  aux = dato & 0xF0;
  1885   003346  5022               	movf	ENVIA_LCD_CMD@dato^(0+1280),w,c
  1886   003348  0BF0               	andlw	240
  1887   00334A  6E23               	movwf	ENVIA_LCD_CMD@aux^(0+1280),c
  1888                           
  1889                           ;LCD.c: 129:  ENVIA_NIBBLE(aux);
  1890   00334C  5023               	movf	ENVIA_LCD_CMD@aux^(0+1280),w,c
  1891   00334E  EC2C  F01A         	call	_ENVIA_NIBBLE
  1892                           
  1893                           ;LCD.c: 130:  aux = dato<<4;
  1894   003352  3822               	swapf	ENVIA_LCD_CMD@dato^(0+1280),w,c
  1895   003354  0BF0               	andlw	240
  1896   003356  6E23               	movwf	ENVIA_LCD_CMD@aux^(0+1280),c
  1897                           
  1898                           ;LCD.c: 131:  ENVIA_NIBBLE(aux);
  1899   003358  5023               	movf	ENVIA_LCD_CMD@aux^(0+1280),w,c
  1900   00335A  EC2C  F01A         	call	_ENVIA_NIBBLE
  1901   00335E  0012               	return		;funcret
  1902   003360                     __end_of_ENVIA_LCD_CMD:
  1903                           	callstack 0
  1904                           
  1905 ;; *************** function _I2C_LCD_INIT *****************
  1906 ;; Defined at:
  1907 ;;		line 164 in file "I2C_LCD.c"
  1908 ;; Parameters:    Size  Location     Type
  1909 ;;		None
  1910 ;; Auto vars:     Size  Location     Type
  1911 ;;		None
  1912 ;; Return value:  Size  Location     Type
  1913 ;;                  1    wreg      void 
  1914 ;; Registers used:
  1915 ;;		wreg, status,2, status,0, cstack
  1916 ;; Tracked objects:
  1917 ;;		On entry : 0/0
  1918 ;;		On exit  : 0/0
  1919 ;;		Unchanged: 0/0
  1920 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1921 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1922 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1923 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1924 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1925 ;;Total ram usage:        2 bytes
  1926 ;; Hardware stack levels used: 1
  1927 ;; Hardware stack levels required when called: 3
  1928 ;; This function calls:
  1929 ;;		_I2C1_INIT
  1930 ;;		_I2C1_WRITESINGLEBYTE
  1931 ;;		_I2C_BORRAR_LCD
  1932 ;;		_I2C_CURSOR_HOME
  1933 ;;		_I2C_CURSOR_ONOFF
  1934 ;; This function is called by:
  1935 ;;		_configuro
  1936 ;; This function uses a non-reentrant model
  1937 ;;
  1938                           
  1939                           	psect	text14
  1940   00253E                     __ptext14:
  1941                           	callstack 0
  1942   00253E                     _I2C_LCD_INIT:
  1943                           	callstack 122
  1944                           
  1945                           ;I2C_LCD.c: 165:     I2C1_INIT();
  1946                           
  1947                           ;incstack = 0
  1948   00253E  EC45  F018         	call	_I2C1_INIT	;wreg free
  1949                           
  1950                           ; BSR set to: 2
  1951                           ;I2C_LCD.c: 166:     _delay((unsigned long)((15)*(32000000UL/4000.0)));
  1952   002542  0E9C               	movlw	156
  1953   002544  6E28               	movwf	??_I2C_LCD_INIT^(0+1280),c
  1954   002546  0ED7               	movlw	215
  1955   002548                     u867:
  1956   002548  2EE8               	decfsz	wreg,f,c
  1957   00254A  D7FE               	bra	u867
  1958   00254C  2E28               	decfsz	??_I2C_LCD_INIT^(0+1280),f,c
  1959   00254E  D7FC               	bra	u867
  1960   002550  0000               	nop	
  1961                           
  1962                           ;I2C_LCD.c: 168:     I2C1_WRITESINGLEBYTE(0x27,0x00);
  1963   002552  0E00               	movlw	0
  1964   002554  6E21               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  1965   002556  0E27               	movlw	39
  1966   002558  ECEE  F019         	call	_I2C1_WRITESINGLEBYTE
  1967                           
  1968                           ; BSR set to: 2
  1969                           ;I2C_LCD.c: 169:     _delay((unsigned long)((1000)*(32000000UL/4000.0)));
  1970   00255C  0E29               	movlw	41
  1971   00255E  6E29               	movwf	(??_I2C_LCD_INIT+1)^(0+1280),c
  1972   002560  0E96               	movlw	150
  1973   002562  6E28               	movwf	??_I2C_LCD_INIT^(0+1280),c
  1974   002564  0E7F               	movlw	127
  1975   002566                     u877:
  1976   002566  2EE8               	decfsz	wreg,f,c
  1977   002568  D7FE               	bra	u877
  1978   00256A  2E28               	decfsz	??_I2C_LCD_INIT^(0+1280),f,c
  1979   00256C  D7FC               	bra	u877
  1980   00256E  2E29               	decfsz	(??_I2C_LCD_INIT+1)^(0+1280),f,c
  1981   002570  D7FA               	bra	u877
  1982   002572  0000               	nop	
  1983                           
  1984                           ;I2C_LCD.c: 172:     I2C1_WRITESINGLEBYTE(0x27,0x30);
  1985   002574  0E30               	movlw	48
  1986   002576  6E21               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  1987   002578  0E27               	movlw	39
  1988   00257A  ECEE  F019         	call	_I2C1_WRITESINGLEBYTE
  1989                           
  1990                           ; BSR set to: 2
  1991                           ;I2C_LCD.c: 173:     I2C1_WRITESINGLEBYTE(0x27,0x30);
  1992   00257E  0E30               	movlw	48
  1993   002580  6E21               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  1994   002582  0E27               	movlw	39
  1995   002584  ECEE  F019         	call	_I2C1_WRITESINGLEBYTE
  1996                           
  1997                           ; BSR set to: 2
  1998                           ;I2C_LCD.c: 174:     _delay((unsigned long)((20)*(32000000UL/4000000.0)));
  1999   002588  0E35               	movlw	53
  2000   00258A                     u887:
  2001   00258A  2EE8               	decfsz	wreg,f,c
  2002   00258C  D7FE               	bra	u887
  2003   00258E  0000               	nop	
  2004                           
  2005                           ;I2C_LCD.c: 175:     I2C1_WRITESINGLEBYTE(0x27,0x34);
  2006   002590  0E34               	movlw	52
  2007   002592  6E21               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  2008   002594  0E27               	movlw	39
  2009   002596  ECEE  F019         	call	_I2C1_WRITESINGLEBYTE
  2010                           
  2011                           ; BSR set to: 2
  2012                           ;I2C_LCD.c: 176:     _delay((unsigned long)((20)*(32000000UL/4000000.0)));
  2013   00259A  0E35               	movlw	53
  2014   00259C                     u897:
  2015   00259C  2EE8               	decfsz	wreg,f,c
  2016   00259E  D7FE               	bra	u897
  2017   0025A0  0000               	nop	
  2018                           
  2019                           ;I2C_LCD.c: 177:     I2C1_WRITESINGLEBYTE(0x27,0x30);
  2020   0025A2  0E30               	movlw	48
  2021   0025A4  6E21               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  2022   0025A6  0E27               	movlw	39
  2023   0025A8  ECEE  F019         	call	_I2C1_WRITESINGLEBYTE
  2024                           
  2025                           ; BSR set to: 2
  2026                           ;I2C_LCD.c: 178:     _delay((unsigned long)((5)*(32000000UL/4000.0)));
  2027   0025AC  0E34               	movlw	52
  2028   0025AE  6E28               	movwf	??_I2C_LCD_INIT^(0+1280),c
  2029   0025B0  0EF2               	movlw	242
  2030   0025B2                     u907:
  2031   0025B2  2EE8               	decfsz	wreg,f,c
  2032   0025B4  D7FE               	bra	u907
  2033   0025B6  2E28               	decfsz	??_I2C_LCD_INIT^(0+1280),f,c
  2034   0025B8  D7FC               	bra	u907
  2035                           
  2036                           ;I2C_LCD.c: 180:     I2C1_WRITESINGLEBYTE(0x27,0x30);
  2037   0025BA  0E30               	movlw	48
  2038   0025BC  6E21               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  2039   0025BE  0E27               	movlw	39
  2040   0025C0  ECEE  F019         	call	_I2C1_WRITESINGLEBYTE
  2041                           
  2042                           ; BSR set to: 2
  2043                           ;I2C_LCD.c: 181:     _delay((unsigned long)((20)*(32000000UL/4000000.0)));
  2044   0025C4  0E35               	movlw	53
  2045   0025C6                     u917:
  2046   0025C6  2EE8               	decfsz	wreg,f,c
  2047   0025C8  D7FE               	bra	u917
  2048   0025CA  0000               	nop	
  2049                           
  2050                           ;I2C_LCD.c: 182:     I2C1_WRITESINGLEBYTE(0x27,0x34);
  2051   0025CC  0E34               	movlw	52
  2052   0025CE  6E21               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  2053   0025D0  0E27               	movlw	39
  2054   0025D2  ECEE  F019         	call	_I2C1_WRITESINGLEBYTE
  2055                           
  2056                           ; BSR set to: 2
  2057                           ;I2C_LCD.c: 183:     _delay((unsigned long)((20)*(32000000UL/4000000.0)));
  2058   0025D6  0E35               	movlw	53
  2059   0025D8                     u927:
  2060   0025D8  2EE8               	decfsz	wreg,f,c
  2061   0025DA  D7FE               	bra	u927
  2062   0025DC  0000               	nop	
  2063                           
  2064                           ;I2C_LCD.c: 184:     I2C1_WRITESINGLEBYTE(0x27,0x30);
  2065   0025DE  0E30               	movlw	48
  2066   0025E0  6E21               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  2067   0025E2  0E27               	movlw	39
  2068   0025E4  ECEE  F019         	call	_I2C1_WRITESINGLEBYTE
  2069                           
  2070                           ; BSR set to: 2
  2071                           ;I2C_LCD.c: 186:     _delay((unsigned long)((5)*(32000000UL/4000.0)));
  2072   0025E8  0E34               	movlw	52
  2073   0025EA  6E28               	movwf	??_I2C_LCD_INIT^(0+1280),c
  2074   0025EC  0EF2               	movlw	242
  2075   0025EE                     u937:
  2076   0025EE  2EE8               	decfsz	wreg,f,c
  2077   0025F0  D7FE               	bra	u937
  2078   0025F2  2E28               	decfsz	??_I2C_LCD_INIT^(0+1280),f,c
  2079   0025F4  D7FC               	bra	u937
  2080                           
  2081                           ;I2C_LCD.c: 188:     I2C1_WRITESINGLEBYTE(0x27,0x30);
  2082   0025F6  0E30               	movlw	48
  2083   0025F8  6E21               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  2084   0025FA  0E27               	movlw	39
  2085   0025FC  ECEE  F019         	call	_I2C1_WRITESINGLEBYTE
  2086                           
  2087                           ; BSR set to: 2
  2088                           ;I2C_LCD.c: 189:     _delay((unsigned long)((20)*(32000000UL/4000000.0)));
  2089   002600  0E35               	movlw	53
  2090   002602                     u947:
  2091   002602  2EE8               	decfsz	wreg,f,c
  2092   002604  D7FE               	bra	u947
  2093   002606  0000               	nop	
  2094                           
  2095                           ;I2C_LCD.c: 190:     I2C1_WRITESINGLEBYTE(0x27,0x34);
  2096   002608  0E34               	movlw	52
  2097   00260A  6E21               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  2098   00260C  0E27               	movlw	39
  2099   00260E  ECEE  F019         	call	_I2C1_WRITESINGLEBYTE
  2100                           
  2101                           ; BSR set to: 2
  2102                           ;I2C_LCD.c: 191:     _delay((unsigned long)((20)*(32000000UL/4000000.0)));
  2103   002612  0E35               	movlw	53
  2104   002614                     u957:
  2105   002614  2EE8               	decfsz	wreg,f,c
  2106   002616  D7FE               	bra	u957
  2107   002618  0000               	nop	
  2108                           
  2109                           ;I2C_LCD.c: 192:     I2C1_WRITESINGLEBYTE(0x27,0x30);
  2110   00261A  0E30               	movlw	48
  2111   00261C  6E21               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  2112   00261E  0E27               	movlw	39
  2113   002620  ECEE  F019         	call	_I2C1_WRITESINGLEBYTE
  2114                           
  2115                           ; BSR set to: 2
  2116                           ;I2C_LCD.c: 194:     _delay((unsigned long)((250)*(32000000UL/4000000.0)));
  2117   002624  0E03               	movlw	3
  2118   002626  6E28               	movwf	??_I2C_LCD_INIT^(0+1280),c
  2119   002628  0E98               	movlw	152
  2120   00262A                     u967:
  2121   00262A  2EE8               	decfsz	wreg,f,c
  2122   00262C  D7FE               	bra	u967
  2123   00262E  2E28               	decfsz	??_I2C_LCD_INIT^(0+1280),f,c
  2124   002630  D7FC               	bra	u967
  2125                           
  2126                           ;I2C_LCD.c: 196:     I2C1_WRITESINGLEBYTE(0x27,0x20);
  2127   002632  0E20               	movlw	32
  2128   002634  6E21               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  2129   002636  0E27               	movlw	39
  2130   002638  ECEE  F019         	call	_I2C1_WRITESINGLEBYTE
  2131                           
  2132                           ; BSR set to: 2
  2133                           ;I2C_LCD.c: 197:     _delay((unsigned long)((20)*(32000000UL/4000000.0)));
  2134   00263C  0E35               	movlw	53
  2135   00263E                     u977:
  2136   00263E  2EE8               	decfsz	wreg,f,c
  2137   002640  D7FE               	bra	u977
  2138   002642  0000               	nop	
  2139                           
  2140                           ;I2C_LCD.c: 198:     I2C1_WRITESINGLEBYTE(0x27,0x24);
  2141   002644  0E24               	movlw	36
  2142   002646  6E21               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  2143   002648  0E27               	movlw	39
  2144   00264A  ECEE  F019         	call	_I2C1_WRITESINGLEBYTE
  2145                           
  2146                           ; BSR set to: 2
  2147                           ;I2C_LCD.c: 199:     _delay((unsigned long)((20)*(32000000UL/4000000.0)));
  2148   00264E  0E35               	movlw	53
  2149   002650                     u987:
  2150   002650  2EE8               	decfsz	wreg,f,c
  2151   002652  D7FE               	bra	u987
  2152   002654  0000               	nop	
  2153                           
  2154                           ;I2C_LCD.c: 200:     I2C1_WRITESINGLEBYTE(0x27,0x20);
  2155   002656  0E20               	movlw	32
  2156   002658  6E21               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  2157   00265A  0E27               	movlw	39
  2158   00265C  ECEE  F019         	call	_I2C1_WRITESINGLEBYTE
  2159                           
  2160                           ; BSR set to: 2
  2161                           ;I2C_LCD.c: 202:     _delay((unsigned long)((75)*(32000000UL/4000000.0)));
  2162   002660  0EC8               	movlw	200
  2163   002662                     u997:
  2164   002662  2EE8               	decfsz	wreg,f,c
  2165   002664  D7FE               	bra	u997
  2166                           
  2167                           ;I2C_LCD.c: 204:     I2C1_WRITESINGLEBYTE(0x27,0x20);
  2168   002666  0E20               	movlw	32
  2169   002668  6E21               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  2170   00266A  0E27               	movlw	39
  2171   00266C  ECEE  F019         	call	_I2C1_WRITESINGLEBYTE
  2172                           
  2173                           ; BSR set to: 2
  2174                           ;I2C_LCD.c: 205:     _delay((unsigned long)((20)*(32000000UL/4000000.0)));
  2175   002670  0E35               	movlw	53
  2176   002672                     u1007:
  2177   002672  2EE8               	decfsz	wreg,f,c
  2178   002674  D7FE               	bra	u1007
  2179   002676  0000               	nop	
  2180                           
  2181                           ;I2C_LCD.c: 206:     I2C1_WRITESINGLEBYTE(0x27,0x24);
  2182   002678  0E24               	movlw	36
  2183   00267A  6E21               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  2184   00267C  0E27               	movlw	39
  2185   00267E  ECEE  F019         	call	_I2C1_WRITESINGLEBYTE
  2186                           
  2187                           ; BSR set to: 2
  2188                           ;I2C_LCD.c: 207:     _delay((unsigned long)((20)*(32000000UL/4000000.0)));
  2189   002682  0E35               	movlw	53
  2190   002684                     u1017:
  2191   002684  2EE8               	decfsz	wreg,f,c
  2192   002686  D7FE               	bra	u1017
  2193   002688  0000               	nop	
  2194                           
  2195                           ;I2C_LCD.c: 208:     I2C1_WRITESINGLEBYTE(0x27,0x20);
  2196   00268A  0E20               	movlw	32
  2197   00268C  6E21               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  2198   00268E  0E27               	movlw	39
  2199   002690  ECEE  F019         	call	_I2C1_WRITESINGLEBYTE
  2200                           
  2201                           ; BSR set to: 2
  2202                           ;I2C_LCD.c: 210:     _delay((unsigned long)((75)*(32000000UL/4000000.0)));
  2203   002694  0EC8               	movlw	200
  2204   002696                     u1027:
  2205   002696  2EE8               	decfsz	wreg,f,c
  2206   002698  D7FE               	bra	u1027
  2207                           
  2208                           ;I2C_LCD.c: 212:     I2C1_WRITESINGLEBYTE(0x27,0x80);
  2209   00269A  0E80               	movlw	128
  2210   00269C  6E21               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  2211   00269E  0E27               	movlw	39
  2212   0026A0  ECEE  F019         	call	_I2C1_WRITESINGLEBYTE
  2213                           
  2214                           ; BSR set to: 2
  2215                           ;I2C_LCD.c: 213:     _delay((unsigned long)((20)*(32000000UL/4000000.0)));
  2216   0026A4  0E35               	movlw	53
  2217   0026A6                     u1037:
  2218   0026A6  2EE8               	decfsz	wreg,f,c
  2219   0026A8  D7FE               	bra	u1037
  2220   0026AA  0000               	nop	
  2221                           
  2222                           ;I2C_LCD.c: 214:     I2C1_WRITESINGLEBYTE(0x27,0x84);
  2223   0026AC  0E84               	movlw	132
  2224   0026AE  6E21               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  2225   0026B0  0E27               	movlw	39
  2226   0026B2  ECEE  F019         	call	_I2C1_WRITESINGLEBYTE
  2227                           
  2228                           ; BSR set to: 2
  2229                           ;I2C_LCD.c: 215:     _delay((unsigned long)((20)*(32000000UL/4000000.0)));
  2230   0026B6  0E35               	movlw	53
  2231   0026B8                     u1047:
  2232   0026B8  2EE8               	decfsz	wreg,f,c
  2233   0026BA  D7FE               	bra	u1047
  2234   0026BC  0000               	nop	
  2235                           
  2236                           ;I2C_LCD.c: 216:     I2C1_WRITESINGLEBYTE(0x27,0x80);
  2237   0026BE  0E80               	movlw	128
  2238   0026C0  6E21               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  2239   0026C2  0E27               	movlw	39
  2240   0026C4  ECEE  F019         	call	_I2C1_WRITESINGLEBYTE
  2241                           
  2242                           ; BSR set to: 2
  2243                           ;I2C_LCD.c: 218:     _delay((unsigned long)((75)*(32000000UL/4000000.0)));
  2244   0026C8  0EC8               	movlw	200
  2245   0026CA                     u1057:
  2246   0026CA  2EE8               	decfsz	wreg,f,c
  2247   0026CC  D7FE               	bra	u1057
  2248                           
  2249                           ;I2C_LCD.c: 220:     I2C1_WRITESINGLEBYTE(0x27,0x00);
  2250   0026CE  0E00               	movlw	0
  2251   0026D0  6E21               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  2252   0026D2  0E27               	movlw	39
  2253   0026D4  ECEE  F019         	call	_I2C1_WRITESINGLEBYTE
  2254                           
  2255                           ; BSR set to: 2
  2256                           ;I2C_LCD.c: 221:     _delay((unsigned long)((20)*(32000000UL/4000000.0)));
  2257   0026D8  0E35               	movlw	53
  2258   0026DA                     u1067:
  2259   0026DA  2EE8               	decfsz	wreg,f,c
  2260   0026DC  D7FE               	bra	u1067
  2261   0026DE  0000               	nop	
  2262                           
  2263                           ;I2C_LCD.c: 222:     I2C1_WRITESINGLEBYTE(0x27,0x04);
  2264   0026E0  0E04               	movlw	4
  2265   0026E2  6E21               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  2266   0026E4  0E27               	movlw	39
  2267   0026E6  ECEE  F019         	call	_I2C1_WRITESINGLEBYTE
  2268                           
  2269                           ; BSR set to: 2
  2270                           ;I2C_LCD.c: 223:     _delay((unsigned long)((20)*(32000000UL/4000000.0)));
  2271   0026EA  0E35               	movlw	53
  2272   0026EC                     u1077:
  2273   0026EC  2EE8               	decfsz	wreg,f,c
  2274   0026EE  D7FE               	bra	u1077
  2275   0026F0  0000               	nop	
  2276                           
  2277                           ;I2C_LCD.c: 224:     I2C1_WRITESINGLEBYTE(0x27,0x00);
  2278   0026F2  0E00               	movlw	0
  2279   0026F4  6E21               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  2280   0026F6  0E27               	movlw	39
  2281   0026F8  ECEE  F019         	call	_I2C1_WRITESINGLEBYTE
  2282                           
  2283                           ; BSR set to: 2
  2284                           ;I2C_LCD.c: 226:      _delay((unsigned long)((75)*(32000000UL/4000000.0)));
  2285   0026FC  0EC8               	movlw	200
  2286   0026FE                     u1087:
  2287   0026FE  2EE8               	decfsz	wreg,f,c
  2288   002700  D7FE               	bra	u1087
  2289                           
  2290                           ;I2C_LCD.c: 228:     I2C1_WRITESINGLEBYTE(0x27,0xC0);
  2291   002702  0EC0               	movlw	192
  2292   002704  6E21               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  2293   002706  0E27               	movlw	39
  2294   002708  ECEE  F019         	call	_I2C1_WRITESINGLEBYTE
  2295                           
  2296                           ; BSR set to: 2
  2297                           ;I2C_LCD.c: 229:     _delay((unsigned long)((20)*(32000000UL/4000000.0)));
  2298   00270C  0E35               	movlw	53
  2299   00270E                     u1097:
  2300   00270E  2EE8               	decfsz	wreg,f,c
  2301   002710  D7FE               	bra	u1097
  2302   002712  0000               	nop	
  2303                           
  2304                           ;I2C_LCD.c: 230:     I2C1_WRITESINGLEBYTE(0x27,0xC4);
  2305   002714  0EC4               	movlw	196
  2306   002716  6E21               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  2307   002718  0E27               	movlw	39
  2308   00271A  ECEE  F019         	call	_I2C1_WRITESINGLEBYTE
  2309                           
  2310                           ; BSR set to: 2
  2311                           ;I2C_LCD.c: 231:     _delay((unsigned long)((20)*(32000000UL/4000000.0)));
  2312   00271E  0E35               	movlw	53
  2313   002720                     u1107:
  2314   002720  2EE8               	decfsz	wreg,f,c
  2315   002722  D7FE               	bra	u1107
  2316   002724  0000               	nop	
  2317                           
  2318                           ;I2C_LCD.c: 232:     I2C1_WRITESINGLEBYTE(0x27,0xC0);
  2319   002726  0EC0               	movlw	192
  2320   002728  6E21               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  2321   00272A  0E27               	movlw	39
  2322   00272C  ECEE  F019         	call	_I2C1_WRITESINGLEBYTE
  2323                           
  2324                           ; BSR set to: 2
  2325                           ;I2C_LCD.c: 234:      _delay((unsigned long)((75)*(32000000UL/4000000.0)));
  2326   002730  0EC8               	movlw	200
  2327   002732                     u1117:
  2328   002732  2EE8               	decfsz	wreg,f,c
  2329   002734  D7FE               	bra	u1117
  2330                           
  2331                           ;I2C_LCD.c: 236:     I2C1_WRITESINGLEBYTE(0x27,0x00);
  2332   002736  0E00               	movlw	0
  2333   002738  6E21               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  2334   00273A  0E27               	movlw	39
  2335   00273C  ECEE  F019         	call	_I2C1_WRITESINGLEBYTE
  2336                           
  2337                           ; BSR set to: 2
  2338                           ;I2C_LCD.c: 237:     _delay((unsigned long)((20)*(32000000UL/4000000.0)));
  2339   002740  0E35               	movlw	53
  2340   002742                     u1127:
  2341   002742  2EE8               	decfsz	wreg,f,c
  2342   002744  D7FE               	bra	u1127
  2343   002746  0000               	nop	
  2344                           
  2345                           ;I2C_LCD.c: 238:     I2C1_WRITESINGLEBYTE(0x27,0x04);
  2346   002748  0E04               	movlw	4
  2347   00274A  6E21               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  2348   00274C  0E27               	movlw	39
  2349   00274E  ECEE  F019         	call	_I2C1_WRITESINGLEBYTE
  2350                           
  2351                           ; BSR set to: 2
  2352                           ;I2C_LCD.c: 239:     _delay((unsigned long)((20)*(32000000UL/4000000.0)));
  2353   002752  0E35               	movlw	53
  2354   002754                     u1137:
  2355   002754  2EE8               	decfsz	wreg,f,c
  2356   002756  D7FE               	bra	u1137
  2357   002758  0000               	nop	
  2358                           
  2359                           ;I2C_LCD.c: 240:     I2C1_WRITESINGLEBYTE(0x27,0x00);
  2360   00275A  0E00               	movlw	0
  2361   00275C  6E21               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  2362   00275E  0E27               	movlw	39
  2363   002760  ECEE  F019         	call	_I2C1_WRITESINGLEBYTE
  2364                           
  2365                           ; BSR set to: 2
  2366                           ;I2C_LCD.c: 242:      _delay((unsigned long)((75)*(32000000UL/4000000.0)));
  2367   002764  0EC8               	movlw	200
  2368   002766                     u1147:
  2369   002766  2EE8               	decfsz	wreg,f,c
  2370   002768  D7FE               	bra	u1147
  2371                           
  2372                           ;I2C_LCD.c: 244:     I2C1_WRITESINGLEBYTE(0x27,0x10);
  2373   00276A  0E10               	movlw	16
  2374   00276C  6E21               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  2375   00276E  0E27               	movlw	39
  2376   002770  ECEE  F019         	call	_I2C1_WRITESINGLEBYTE
  2377                           
  2378                           ; BSR set to: 2
  2379                           ;I2C_LCD.c: 245:     _delay((unsigned long)((20)*(32000000UL/4000000.0)));
  2380   002774  0E35               	movlw	53
  2381   002776                     u1157:
  2382   002776  2EE8               	decfsz	wreg,f,c
  2383   002778  D7FE               	bra	u1157
  2384   00277A  0000               	nop	
  2385                           
  2386                           ;I2C_LCD.c: 246:     I2C1_WRITESINGLEBYTE(0x27,0x14);
  2387   00277C  0E14               	movlw	20
  2388   00277E  6E21               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  2389   002780  0E27               	movlw	39
  2390   002782  ECEE  F019         	call	_I2C1_WRITESINGLEBYTE
  2391                           
  2392                           ; BSR set to: 2
  2393                           ;I2C_LCD.c: 247:     _delay((unsigned long)((20)*(32000000UL/4000000.0)));
  2394   002786  0E35               	movlw	53
  2395   002788                     u1167:
  2396   002788  2EE8               	decfsz	wreg,f,c
  2397   00278A  D7FE               	bra	u1167
  2398   00278C  0000               	nop	
  2399                           
  2400                           ;I2C_LCD.c: 248:     I2C1_WRITESINGLEBYTE(0x27,0x10);
  2401   00278E  0E10               	movlw	16
  2402   002790  6E21               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  2403   002792  0E27               	movlw	39
  2404   002794  ECEE  F019         	call	_I2C1_WRITESINGLEBYTE
  2405                           
  2406                           ; BSR set to: 2
  2407                           ;I2C_LCD.c: 250:      _delay((unsigned long)((2)*(32000000UL/4000.0)));
  2408   002798  0E15               	movlw	21
  2409   00279A  6E28               	movwf	??_I2C_LCD_INIT^(0+1280),c
  2410   00279C  0EC6               	movlw	198
  2411   00279E                     u1177:
  2412   00279E  2EE8               	decfsz	wreg,f,c
  2413   0027A0  D7FE               	bra	u1177
  2414   0027A2  2E28               	decfsz	??_I2C_LCD_INIT^(0+1280),f,c
  2415   0027A4  D7FC               	bra	u1177
  2416   0027A6  D000               	nop2	
  2417                           
  2418                           ;I2C_LCD.c: 252:     I2C1_WRITESINGLEBYTE(0x27,0x00);
  2419   0027A8  0E00               	movlw	0
  2420   0027AA  6E21               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  2421   0027AC  0E27               	movlw	39
  2422   0027AE  ECEE  F019         	call	_I2C1_WRITESINGLEBYTE
  2423                           
  2424                           ; BSR set to: 2
  2425                           ;I2C_LCD.c: 253:     _delay((unsigned long)((02)*(32000000UL/4000000.0)));
  2426   0027B2  0E05               	movlw	5
  2427   0027B4                     u1187:
  2428   0027B4  2EE8               	decfsz	wreg,f,c
  2429   0027B6  D7FE               	bra	u1187
  2430   0027B8  0000               	nop	
  2431                           
  2432                           ;I2C_LCD.c: 254:     I2C1_WRITESINGLEBYTE(0x27,0x04);
  2433   0027BA  0E04               	movlw	4
  2434   0027BC  6E21               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  2435   0027BE  0E27               	movlw	39
  2436   0027C0  ECEE  F019         	call	_I2C1_WRITESINGLEBYTE
  2437                           
  2438                           ; BSR set to: 2
  2439                           ;I2C_LCD.c: 255:     _delay((unsigned long)((20)*(32000000UL/4000000.0)));
  2440   0027C4  0E35               	movlw	53
  2441   0027C6                     u1197:
  2442   0027C6  2EE8               	decfsz	wreg,f,c
  2443   0027C8  D7FE               	bra	u1197
  2444   0027CA  0000               	nop	
  2445                           
  2446                           ;I2C_LCD.c: 256:     I2C1_WRITESINGLEBYTE(0x27,0x00);
  2447   0027CC  0E00               	movlw	0
  2448   0027CE  6E21               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  2449   0027D0  0E27               	movlw	39
  2450   0027D2  ECEE  F019         	call	_I2C1_WRITESINGLEBYTE
  2451                           
  2452                           ; BSR set to: 2
  2453                           ;I2C_LCD.c: 258:      _delay((unsigned long)((75)*(32000000UL/4000000.0)));
  2454   0027D6  0EC8               	movlw	200
  2455   0027D8                     u1207:
  2456   0027D8  2EE8               	decfsz	wreg,f,c
  2457   0027DA  D7FE               	bra	u1207
  2458                           
  2459                           ;I2C_LCD.c: 260:     I2C1_WRITESINGLEBYTE(0x27,0x60);
  2460   0027DC  0E60               	movlw	96
  2461   0027DE  6E21               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  2462   0027E0  0E27               	movlw	39
  2463   0027E2  ECEE  F019         	call	_I2C1_WRITESINGLEBYTE
  2464                           
  2465                           ; BSR set to: 2
  2466                           ;I2C_LCD.c: 261:     _delay((unsigned long)((02)*(32000000UL/4000000.0)));
  2467   0027E6  0E05               	movlw	5
  2468   0027E8                     u1217:
  2469   0027E8  2EE8               	decfsz	wreg,f,c
  2470   0027EA  D7FE               	bra	u1217
  2471   0027EC  0000               	nop	
  2472                           
  2473                           ;I2C_LCD.c: 262:     I2C1_WRITESINGLEBYTE(0x27,0x64);
  2474   0027EE  0E64               	movlw	100
  2475   0027F0  6E21               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  2476   0027F2  0E27               	movlw	39
  2477   0027F4  ECEE  F019         	call	_I2C1_WRITESINGLEBYTE
  2478                           
  2479                           ; BSR set to: 2
  2480                           ;I2C_LCD.c: 263:     _delay((unsigned long)((20)*(32000000UL/4000000.0)));
  2481   0027F8  0E35               	movlw	53
  2482   0027FA                     u1227:
  2483   0027FA  2EE8               	decfsz	wreg,f,c
  2484   0027FC  D7FE               	bra	u1227
  2485   0027FE  0000               	nop	
  2486                           
  2487                           ;I2C_LCD.c: 264:     I2C1_WRITESINGLEBYTE(0x27,0x60);
  2488   002800  0E60               	movlw	96
  2489   002802  6E21               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  2490   002804  0E27               	movlw	39
  2491   002806  ECEE  F019         	call	_I2C1_WRITESINGLEBYTE
  2492                           
  2493                           ; BSR set to: 2
  2494                           ;I2C_LCD.c: 266:      _delay((unsigned long)((75)*(32000000UL/4000000.0)));
  2495   00280A  0EC8               	movlw	200
  2496   00280C                     u1237:
  2497   00280C  2EE8               	decfsz	wreg,f,c
  2498   00280E  D7FE               	bra	u1237
  2499                           
  2500                           ;I2C_LCD.c: 268:     I2C1_WRITESINGLEBYTE(0x27,0x00);
  2501   002810  0E00               	movlw	0
  2502   002812  6E21               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  2503   002814  0E27               	movlw	39
  2504   002816  ECEE  F019         	call	_I2C1_WRITESINGLEBYTE
  2505                           
  2506                           ; BSR set to: 2
  2507                           ;I2C_LCD.c: 269:     _delay((unsigned long)((20)*(32000000UL/4000000.0)));
  2508   00281A  0E35               	movlw	53
  2509   00281C                     u1247:
  2510   00281C  2EE8               	decfsz	wreg,f,c
  2511   00281E  D7FE               	bra	u1247
  2512   002820  0000               	nop	
  2513                           
  2514                           ;I2C_LCD.c: 270:     I2C1_WRITESINGLEBYTE(0x27,0x04);
  2515   002822  0E04               	movlw	4
  2516   002824  6E21               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  2517   002826  0E27               	movlw	39
  2518   002828  ECEE  F019         	call	_I2C1_WRITESINGLEBYTE
  2519                           
  2520                           ; BSR set to: 2
  2521                           ;I2C_LCD.c: 271:     _delay((unsigned long)((20)*(32000000UL/4000000.0)));
  2522   00282C  0E35               	movlw	53
  2523   00282E                     u1257:
  2524   00282E  2EE8               	decfsz	wreg,f,c
  2525   002830  D7FE               	bra	u1257
  2526   002832  0000               	nop	
  2527                           
  2528                           ;I2C_LCD.c: 272:     I2C1_WRITESINGLEBYTE(0x27,0x00);
  2529   002834  0E00               	movlw	0
  2530   002836  6E21               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  2531   002838  0E27               	movlw	39
  2532   00283A  ECEE  F019         	call	_I2C1_WRITESINGLEBYTE
  2533                           
  2534                           ; BSR set to: 2
  2535                           ;I2C_LCD.c: 274:     _delay((unsigned long)((75)*(32000000UL/4000000.0)));
  2536   00283E  0EC8               	movlw	200
  2537   002840                     u1267:
  2538   002840  2EE8               	decfsz	wreg,f,c
  2539   002842  D7FE               	bra	u1267
  2540                           
  2541                           ;I2C_LCD.c: 276:     I2C1_WRITESINGLEBYTE(0x27,0x20);
  2542   002844  0E20               	movlw	32
  2543   002846  6E21               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  2544   002848  0E27               	movlw	39
  2545   00284A  ECEE  F019         	call	_I2C1_WRITESINGLEBYTE
  2546                           
  2547                           ; BSR set to: 2
  2548                           ;I2C_LCD.c: 277:     _delay((unsigned long)((20)*(32000000UL/4000000.0)));
  2549   00284E  0E35               	movlw	53
  2550   002850                     u1277:
  2551   002850  2EE8               	decfsz	wreg,f,c
  2552   002852  D7FE               	bra	u1277
  2553   002854  0000               	nop	
  2554                           
  2555                           ;I2C_LCD.c: 278:     I2C1_WRITESINGLEBYTE(0x27,0x24);
  2556   002856  0E24               	movlw	36
  2557   002858  6E21               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  2558   00285A  0E27               	movlw	39
  2559   00285C  ECEE  F019         	call	_I2C1_WRITESINGLEBYTE
  2560                           
  2561                           ; BSR set to: 2
  2562                           ;I2C_LCD.c: 279:     _delay((unsigned long)((20)*(32000000UL/4000000.0)));
  2563   002860  0E35               	movlw	53
  2564   002862                     u1287:
  2565   002862  2EE8               	decfsz	wreg,f,c
  2566   002864  D7FE               	bra	u1287
  2567   002866  0000               	nop	
  2568                           
  2569                           ;I2C_LCD.c: 280:     I2C1_WRITESINGLEBYTE(0x27,0x20);
  2570   002868  0E20               	movlw	32
  2571   00286A  6E21               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  2572   00286C  0E27               	movlw	39
  2573   00286E  ECEE  F019         	call	_I2C1_WRITESINGLEBYTE
  2574                           
  2575                           ; BSR set to: 2
  2576                           ;I2C_LCD.c: 282:     _delay((unsigned long)((15)*(32000000UL/4000.0)));
  2577   002872  0E9C               	movlw	156
  2578   002874  6E28               	movwf	??_I2C_LCD_INIT^(0+1280),c
  2579   002876  0ED7               	movlw	215
  2580   002878                     u1297:
  2581   002878  2EE8               	decfsz	wreg,f,c
  2582   00287A  D7FE               	bra	u1297
  2583   00287C  2E28               	decfsz	??_I2C_LCD_INIT^(0+1280),f,c
  2584   00287E  D7FC               	bra	u1297
  2585   002880  0000               	nop	
  2586                           
  2587                           ;I2C_LCD.c: 283:     I2C_BORRAR_LCD();
  2588   002882  EC52  F01A         	call	_I2C_BORRAR_LCD	;wreg free
  2589                           
  2590                           ;I2C_LCD.c: 284:     I2C_CURSOR_HOME();
  2591   002886  EC4E  F01A         	call	_I2C_CURSOR_HOME	;wreg free
  2592                           
  2593                           ;I2C_LCD.c: 285:     I2C_CURSOR_ONOFF(1);
  2594   00288A  0E01               	movlw	1
  2595   00288C  EC1E  F01A         	call	_I2C_CURSOR_ONOFF
  2596   002890  0012               	return		;funcret
  2597   002892                     __end_of_I2C_LCD_INIT:
  2598                           	callstack 0
  2599                           
  2600 ;; *************** function _I2C_CURSOR_ONOFF *****************
  2601 ;; Defined at:
  2602 ;;		line 93 in file "I2C_LCD.c"
  2603 ;; Parameters:    Size  Location     Type
  2604 ;;  estado          1    wreg     unsigned char 
  2605 ;; Auto vars:     Size  Location     Type
  2606 ;;  estado          1    6[COMRAM] unsigned char 
  2607 ;; Return value:  Size  Location     Type
  2608 ;;                  1    wreg      void 
  2609 ;; Registers used:
  2610 ;;		wreg, status,2, status,0, cstack
  2611 ;; Tracked objects:
  2612 ;;		On entry : 0/2
  2613 ;;		On exit  : 0/0
  2614 ;;		Unchanged: 0/0
  2615 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2616 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2617 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2618 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2619 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2620 ;;Total ram usage:        1 bytes
  2621 ;; Hardware stack levels used: 1
  2622 ;; Hardware stack levels required when called: 2
  2623 ;; This function calls:
  2624 ;;		_I2C_ENVIA_LCD_CMD
  2625 ;; This function is called by:
  2626 ;;		_I2C_LCD_INIT
  2627 ;; This function uses a non-reentrant model
  2628 ;;
  2629                           
  2630                           	psect	text15
  2631   00343C                     __ptext15:
  2632                           	callstack 0
  2633   00343C                     _I2C_CURSOR_ONOFF:
  2634                           	callstack 122
  2635                           
  2636                           ;incstack = 0
  2637                           ;I2C_CURSOR_ONOFF@estado stored from wreg
  2638   00343C  6E27               	movwf	I2C_CURSOR_ONOFF@estado^(0+1280),c
  2639                           
  2640                           ;I2C_LCD.c: 94:  if(estado == 0) I2C_ENVIA_LCD_CMD(0x0E);
  2641   00343E  5027               	movf	I2C_CURSOR_ONOFF@estado^(0+1280),w,c
  2642   003440  A4D8               	btfss	status,2,c
  2643   003442  D003               	goto	l2030
  2644   003444  0E0E               	movlw	14
  2645   003446  ECE8  F017         	call	_I2C_ENVIA_LCD_CMD
  2646   00344A                     l2030:
  2647                           
  2648                           ;I2C_LCD.c: 95:  if(estado == 1) I2C_ENVIA_LCD_CMD(0x0C);
  2649   00344A  0427               	decf	I2C_CURSOR_ONOFF@estado^(0+1280),w,c
  2650   00344C  A4D8               	btfss	status,2,c
  2651   00344E  0012               	return	
  2652   003450  0E0C               	movlw	12
  2653   003452  ECE8  F017         	call	_I2C_ENVIA_LCD_CMD
  2654   003456  0012               	return		;funcret
  2655   003458                     __end_of_I2C_CURSOR_ONOFF:
  2656                           	callstack 0
  2657                           
  2658 ;; *************** function _I2C_CURSOR_HOME *****************
  2659 ;; Defined at:
  2660 ;;		line 73 in file "I2C_LCD.c"
  2661 ;; Parameters:    Size  Location     Type
  2662 ;;		None
  2663 ;; Auto vars:     Size  Location     Type
  2664 ;;		None
  2665 ;; Return value:  Size  Location     Type
  2666 ;;                  1    wreg      void 
  2667 ;; Registers used:
  2668 ;;		wreg, status,2, status,0, cstack
  2669 ;; Tracked objects:
  2670 ;;		On entry : 0/2
  2671 ;;		On exit  : 0/0
  2672 ;;		Unchanged: 0/0
  2673 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2674 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2675 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2676 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2677 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2678 ;;Total ram usage:        0 bytes
  2679 ;; Hardware stack levels used: 1
  2680 ;; Hardware stack levels required when called: 2
  2681 ;; This function calls:
  2682 ;;		_I2C_ENVIA_LCD_CMD
  2683 ;; This function is called by:
  2684 ;;		_I2C_LCD_INIT
  2685 ;; This function uses a non-reentrant model
  2686 ;;
  2687                           
  2688                           	psect	text16
  2689   00349C                     __ptext16:
  2690                           	callstack 0
  2691   00349C                     _I2C_CURSOR_HOME:
  2692                           	callstack 122
  2693                           
  2694                           ;I2C_LCD.c: 74:  I2C_ENVIA_LCD_CMD(0x02);
  2695                           
  2696                           ;incstack = 0
  2697   00349C  0E02               	movlw	2
  2698   00349E  ECE8  F017         	call	_I2C_ENVIA_LCD_CMD
  2699   0034A2  0012               	return		;funcret
  2700   0034A4                     __end_of_I2C_CURSOR_HOME:
  2701                           	callstack 0
  2702                           
  2703 ;; *************** function _I2C_BORRAR_LCD *****************
  2704 ;; Defined at:
  2705 ;;		line 132 in file "I2C_LCD.c"
  2706 ;; Parameters:    Size  Location     Type
  2707 ;;		None
  2708 ;; Auto vars:     Size  Location     Type
  2709 ;;		None
  2710 ;; Return value:  Size  Location     Type
  2711 ;;                  1    wreg      void 
  2712 ;; Registers used:
  2713 ;;		wreg, status,2, status,0, cstack
  2714 ;; Tracked objects:
  2715 ;;		On entry : 0/2
  2716 ;;		On exit  : 0/0
  2717 ;;		Unchanged: 0/0
  2718 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2719 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2720 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2721 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2722 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2723 ;;Total ram usage:        0 bytes
  2724 ;; Hardware stack levels used: 1
  2725 ;; Hardware stack levels required when called: 2
  2726 ;; This function calls:
  2727 ;;		_I2C_ENVIA_LCD_CMD
  2728 ;; This function is called by:
  2729 ;;		_I2C_LCD_INIT
  2730 ;;		_splash_screen
  2731 ;; This function uses a non-reentrant model
  2732 ;;
  2733                           
  2734                           	psect	text17
  2735   0034A4                     __ptext17:
  2736                           	callstack 0
  2737   0034A4                     _I2C_BORRAR_LCD:
  2738                           	callstack 123
  2739                           
  2740                           ;I2C_LCD.c: 133:  I2C_ENVIA_LCD_CMD(0x01);
  2741                           
  2742                           ;incstack = 0
  2743   0034A4  0E01               	movlw	1
  2744   0034A6  ECE8  F017         	call	_I2C_ENVIA_LCD_CMD
  2745   0034AA  0012               	return		;funcret
  2746   0034AC                     __end_of_I2C_BORRAR_LCD:
  2747                           	callstack 0
  2748                           
  2749 ;; *************** function _I2C_ENVIA_LCD_CMD *****************
  2750 ;; Defined at:
  2751 ;;		line 136 in file "I2C_LCD.c"
  2752 ;; Parameters:    Size  Location     Type
  2753 ;;  command         1    wreg     unsigned char 
  2754 ;; Auto vars:     Size  Location     Type
  2755 ;;  command         1    3[COMRAM] unsigned char 
  2756 ;;  lownibble       1    5[COMRAM] unsigned char 
  2757 ;;  highnibble      1    4[COMRAM] unsigned char 
  2758 ;; Return value:  Size  Location     Type
  2759 ;;                  1    wreg      void 
  2760 ;; Registers used:
  2761 ;;		wreg, status,2, status,0, cstack
  2762 ;; Tracked objects:
  2763 ;;		On entry : 0/2
  2764 ;;		On exit  : 0/0
  2765 ;;		Unchanged: 0/0
  2766 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2767 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2768 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2769 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2770 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2771 ;;Total ram usage:        4 bytes
  2772 ;; Hardware stack levels used: 1
  2773 ;; Hardware stack levels required when called: 1
  2774 ;; This function calls:
  2775 ;;		_I2C1_WRITESINGLEBYTE
  2776 ;; This function is called by:
  2777 ;;		_I2C_POS_CURSOR
  2778 ;;		_I2C_CURSOR_HOME
  2779 ;;		_I2C_CURSOR_ONOFF
  2780 ;;		_I2C_BORRAR_LCD
  2781 ;; This function uses a non-reentrant model
  2782 ;;
  2783                           
  2784                           	psect	text18
  2785   002FD0                     __ptext18:
  2786                           	callstack 0
  2787   002FD0                     _I2C_ENVIA_LCD_CMD:
  2788                           	callstack 123
  2789                           
  2790                           ;incstack = 0
  2791                           ;I2C_ENVIA_LCD_CMD@command stored from wreg
  2792   002FD0  6E24               	movwf	I2C_ENVIA_LCD_CMD@command^(0+1280),c
  2793                           
  2794                           ;I2C_LCD.c: 137:     unsigned char highnibble;;I2C_LCD.c: 138:     unsigned char lownibb
      +                          le;;I2C_LCD.c: 140:     highnibble = (command & 0xF0) | 0x08;
  2795   002FD2  5024               	movf	I2C_ENVIA_LCD_CMD@command^(0+1280),w,c
  2796   002FD4  0BF0               	andlw	240
  2797   002FD6  0908               	iorlw	8
  2798   002FD8  6E25               	movwf	I2C_ENVIA_LCD_CMD@highnibble^(0+1280),c
  2799                           
  2800                           ;I2C_LCD.c: 141:     lownibble = (unsigned char)(((command & 0x0F)<<4)| 0x08);
  2801   002FDA  C524  F523         	movff	I2C_ENVIA_LCD_CMD@command,??_I2C_ENVIA_LCD_CMD
  2802   002FDE  0E0F               	movlw	15
  2803   002FE0  1623               	andwf	??_I2C_ENVIA_LCD_CMD^(0+1280),f,c
  2804   002FE2  3823               	swapf	??_I2C_ENVIA_LCD_CMD^(0+1280),w,c
  2805   002FE4  0BF0               	andlw	240
  2806   002FE6  0908               	iorlw	8
  2807   002FE8  6E26               	movwf	I2C_ENVIA_LCD_CMD@lownibble^(0+1280),c
  2808                           
  2809                           ;I2C_LCD.c: 143:     I2C1_WRITESINGLEBYTE(0x27,(highnibble | 0x04));
  2810   002FEA  5025               	movf	I2C_ENVIA_LCD_CMD@highnibble^(0+1280),w,c
  2811   002FEC  0904               	iorlw	4
  2812   002FEE  6E21               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  2813   002FF0  0E27               	movlw	39
  2814   002FF2  ECEE  F019         	call	_I2C1_WRITESINGLEBYTE
  2815                           
  2816                           ; BSR set to: 2
  2817                           ;I2C_LCD.c: 144:     _delay((unsigned long)((20)*(32000000UL/4000000.0)));
  2818   002FF6  0E35               	movlw	53
  2819   002FF8                     u1307:
  2820   002FF8  2EE8               	decfsz	wreg,f,c
  2821   002FFA  D7FE               	bra	u1307
  2822   002FFC  0000               	nop	
  2823                           
  2824                           ;I2C_LCD.c: 145:     I2C1_WRITESINGLEBYTE(0x27,highnibble);
  2825   002FFE  C525  F521         	movff	I2C_ENVIA_LCD_CMD@highnibble,I2C1_WRITESINGLEBYTE@dato
  2826   003002  0E27               	movlw	39
  2827   003004  ECEE  F019         	call	_I2C1_WRITESINGLEBYTE
  2828                           
  2829                           ; BSR set to: 2
  2830                           ;I2C_LCD.c: 146:     _delay((unsigned long)((20)*(32000000UL/4000000.0)));
  2831   003008  0E35               	movlw	53
  2832   00300A                     u1317:
  2833   00300A  2EE8               	decfsz	wreg,f,c
  2834   00300C  D7FE               	bra	u1317
  2835   00300E  0000               	nop	
  2836                           
  2837                           ;I2C_LCD.c: 148:     I2C1_WRITESINGLEBYTE(0x27,(lownibble | 0x04));
  2838   003010  5026               	movf	I2C_ENVIA_LCD_CMD@lownibble^(0+1280),w,c
  2839   003012  0904               	iorlw	4
  2840   003014  6E21               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  2841   003016  0E27               	movlw	39
  2842   003018  ECEE  F019         	call	_I2C1_WRITESINGLEBYTE
  2843                           
  2844                           ; BSR set to: 2
  2845                           ;I2C_LCD.c: 149:     _delay((unsigned long)((20)*(32000000UL/4000000.0)));
  2846   00301C  0E35               	movlw	53
  2847   00301E                     u1327:
  2848   00301E  2EE8               	decfsz	wreg,f,c
  2849   003020  D7FE               	bra	u1327
  2850   003022  0000               	nop	
  2851                           
  2852                           ;I2C_LCD.c: 150:     I2C1_WRITESINGLEBYTE(0x27,lownibble);
  2853   003024  C526  F521         	movff	I2C_ENVIA_LCD_CMD@lownibble,I2C1_WRITESINGLEBYTE@dato
  2854   003028  0E27               	movlw	39
  2855   00302A  ECEE  F019         	call	_I2C1_WRITESINGLEBYTE
  2856                           
  2857                           ; BSR set to: 2
  2858                           ;I2C_LCD.c: 151:     _delay((unsigned long)((20)*(32000000UL/4000000.0)));
  2859   00302E  0E35               	movlw	53
  2860   003030                     u1337:
  2861   003030  2EE8               	decfsz	wreg,f,c
  2862   003032  D7FE               	bra	u1337
  2863   003034  0000               	nop	
  2864   003036  0012               	return		;funcret
  2865   003038                     __end_of_I2C_ENVIA_LCD_CMD:
  2866                           	callstack 0
  2867                           
  2868 ;; *************** function _I2C1_INIT *****************
  2869 ;; Defined at:
  2870 ;;		line 16 in file "I2C_LCD.c"
  2871 ;; Parameters:    Size  Location     Type
  2872 ;;		None
  2873 ;; Auto vars:     Size  Location     Type
  2874 ;;		None
  2875 ;; Return value:  Size  Location     Type
  2876 ;;                  1    wreg      void 
  2877 ;; Registers used:
  2878 ;;		wreg, status,2
  2879 ;; Tracked objects:
  2880 ;;		On entry : 0/0
  2881 ;;		On exit  : 3F/2
  2882 ;;		Unchanged: 0/0
  2883 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2884 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2885 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2886 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2887 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2888 ;;Total ram usage:        0 bytes
  2889 ;; Hardware stack levels used: 1
  2890 ;; This function calls:
  2891 ;;		Nothing
  2892 ;; This function is called by:
  2893 ;;		_I2C_LCD_INIT
  2894 ;; This function uses a non-reentrant model
  2895 ;;
  2896                           
  2897                           	psect	text19
  2898   00308A                     __ptext19:
  2899                           	callstack 0
  2900   00308A                     _I2C1_INIT:
  2901                           	callstack 124
  2902                           
  2903                           ;I2C_LCD.c: 18:     TRISCbits.TRISC3 = 0;
  2904                           
  2905                           ;incstack = 0
  2906   00308A  96C8               	bcf	200,3,c	;volatile
  2907                           
  2908                           ;I2C_LCD.c: 19:     TRISCbits.TRISC4 = 0;
  2909   00308C  98C8               	bcf	200,4,c	;volatile
  2910                           
  2911                           ;I2C_LCD.c: 20:     ANSELCbits.ANSELC3 = 0;
  2912   00308E  0104               	movlb	4	; () banked
  2913   003090  9710               	bcf	16,3,b	;volatile
  2914                           
  2915                           ;I2C_LCD.c: 21:     ANSELCbits.ANSELC4 = 0;
  2916   003092  9910               	bcf	16,4,b	;volatile
  2917                           
  2918                           ;I2C_LCD.c: 22:     ODCONCbits.ODCC3 = 1;
  2919   003094  8712               	bsf	18,3,b	;volatile
  2920                           
  2921                           ;I2C_LCD.c: 23:     ODCONCbits.ODCC4 = 1;
  2922   003096  8912               	bsf	18,4,b	;volatile
  2923                           
  2924                           ; BSR set to: 4
  2925                           ;I2C_LCD.c: 25:     RC3PPS = 0x37;
  2926   003098  0E37               	movlw	55
  2927   00309A  0102               	movlb	2	; () banked
  2928   00309C  6F14               	movwf	20,b	;volatile
  2929                           
  2930                           ;I2C_LCD.c: 26:     RC4PPS = 0x38;
  2931   00309E  0E38               	movlw	56
  2932   0030A0  6F15               	movwf	21,b	;volatile
  2933                           
  2934                           ;I2C_LCD.c: 28:     RC3I2Cbits.PU = 2;
  2935   0030A2  5187               	movf	135,w,b	;volatile
  2936   0030A4  0BCF               	andlw	-49
  2937   0030A6  0920               	iorlw	32
  2938   0030A8  6F87               	movwf	135,b	;volatile
  2939                           
  2940                           ;I2C_LCD.c: 29:     RC3I2Cbits.TH = 1;
  2941   0030AA  5187               	movf	135,w,b	;volatile
  2942   0030AC  0BFC               	andlw	-4
  2943   0030AE  0901               	iorlw	1
  2944   0030B0  6F87               	movwf	135,b	;volatile
  2945                           
  2946                           ;I2C_LCD.c: 30:     RC4I2Cbits.PU = 2;
  2947   0030B2  5186               	movf	134,w,b	;volatile
  2948   0030B4  0BCF               	andlw	-49
  2949   0030B6  0920               	iorlw	32
  2950   0030B8  6F86               	movwf	134,b	;volatile
  2951                           
  2952                           ;I2C_LCD.c: 31:     RC4I2Cbits.TH = 1;
  2953   0030BA  5186               	movf	134,w,b	;volatile
  2954   0030BC  0BFC               	andlw	-4
  2955   0030BE  0901               	iorlw	1
  2956   0030C0  6F86               	movwf	134,b	;volatile
  2957                           
  2958                           ; BSR set to: 2
  2959                           ;I2C_LCD.c: 32:     I2C1CON0bits.EN = 1;
  2960   0030C2  8F94               	bsf	148,7,b	;volatile
  2961                           
  2962                           ;I2C_LCD.c: 33:     I2C1CLKbits.CLK = 3;
  2963   0030C4  0E03               	movlw	3
  2964   0030C6  6F9C               	movwf	156,b	;volatile
  2965                           
  2966                           ;I2C_LCD.c: 34:     I2C1CON0bits.MODE = 0x4;
  2967   0030C8  5194               	movf	148,w,b	;volatile
  2968   0030CA  0BF8               	andlw	-8
  2969   0030CC  0904               	iorlw	4
  2970   0030CE  6F94               	movwf	148,b	;volatile
  2971                           
  2972                           ; BSR set to: 2
  2973                           ;I2C_LCD.c: 35:     I2C1CON2bits.ABD = 0;
  2974   0030D0  9996               	bcf	150,4,b	;volatile
  2975                           
  2976                           ; BSR set to: 2
  2977   0030D2  0012               	return		;funcret
  2978   0030D4                     __end_of_I2C1_INIT:
  2979                           	callstack 0
  2980                           
  2981 ;; *************** function _LCD_VARCHAR_HEX *****************
  2982 ;; Defined at:
  2983 ;;		line 344 in file "LCD.c"
  2984 ;; Parameters:    Size  Location     Type
  2985 ;;  dato            1    wreg     unsigned char 
  2986 ;; Auto vars:     Size  Location     Type
  2987 ;;  dato            1    5[COMRAM] unsigned char 
  2988 ;;  low_nib         1    7[COMRAM] unsigned char 
  2989 ;;  high_nib        1    6[COMRAM] unsigned char 
  2990 ;; Return value:  Size  Location     Type
  2991 ;;                  1    wreg      void 
  2992 ;; Registers used:
  2993 ;;		wreg, status,2, status,0, cstack
  2994 ;; Tracked objects:
  2995 ;;		On entry : 0/2
  2996 ;;		On exit  : 0/0
  2997 ;;		Unchanged: 0/0
  2998 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2999 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3000 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3001 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3002 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3003 ;;Total ram usage:        5 bytes
  3004 ;; Hardware stack levels used: 1
  3005 ;; Hardware stack levels required when called: 2
  3006 ;; This function calls:
  3007 ;;		_ENVIA_CHAR
  3008 ;; This function is called by:
  3009 ;;		_main
  3010 ;; This function uses a non-reentrant model
  3011 ;;
  3012                           
  3013                           	psect	text20
  3014   002B00                     __ptext20:
  3015                           	callstack 0
  3016   002B00                     _LCD_VARCHAR_HEX:
  3017                           	callstack 124
  3018                           
  3019                           ; BSR set to: 2
  3020                           ;incstack = 0
  3021                           ;LCD_VARCHAR_HEX@dato stored from wreg
  3022   002B00  6E26               	movwf	LCD_VARCHAR_HEX@dato^(0+1280),c
  3023                           
  3024                           ;LCD.c: 345:     unsigned char high_nib, low_nib;;LCD.c: 346:     ENVIA_CHAR('0');
  3025   002B02  0E30               	movlw	48
  3026   002B04  ECB0  F019         	call	_ENVIA_CHAR
  3027                           
  3028                           ;LCD.c: 347:     ENVIA_CHAR('x');
  3029   002B08  0E78               	movlw	120
  3030   002B0A  ECB0  F019         	call	_ENVIA_CHAR
  3031                           
  3032                           ;LCD.c: 348:     high_nib = (dato >> 4) & 0x0F;
  3033   002B0E  3826               	swapf	LCD_VARCHAR_HEX@dato^(0+1280),w,c
  3034   002B10  0B0F               	andlw	15
  3035   002B12  0B0F               	andlw	15
  3036   002B14  6E27               	movwf	LCD_VARCHAR_HEX@high_nib^(0+1280),c
  3037                           
  3038                           ;LCD.c: 349:     low_nib = dato & 0x0F;
  3039   002B16  5026               	movf	LCD_VARCHAR_HEX@dato^(0+1280),w,c
  3040   002B18  0B0F               	andlw	15
  3041   002B1A  6E28               	movwf	LCD_VARCHAR_HEX@low_nib^(0+1280),c
  3042                           
  3043                           ;LCD.c: 350:     switch(high_nib){
  3044   002B1C  D00A               	goto	l1670
  3045   002B1E                     l1664:
  3046                           
  3047                           ;LCD.c: 352:             ENVIA_CHAR(high_nib+0x30);
  3048   002B1E  5027               	movf	LCD_VARCHAR_HEX@high_nib^(0+1280),w,c
  3049   002B20  0F30               	addlw	48
  3050   002B22  ECB0  F019         	call	_ENVIA_CHAR
  3051                           
  3052                           ;LCD.c: 353:             break;
  3053   002B26  D048               	goto	l1678
  3054   002B28                     l1666:
  3055                           
  3056                           ;LCD.c: 355:             ENVIA_CHAR(high_nib+0x37);
  3057   002B28  5027               	movf	LCD_VARCHAR_HEX@high_nib^(0+1280),w,c
  3058   002B2A  0F37               	addlw	55
  3059   002B2C  ECB0  F019         	call	_ENVIA_CHAR
  3060                           
  3061                           ;LCD.c: 356:             break;
  3062   002B30  D043               	goto	l1678
  3063   002B32                     l1670:
  3064   002B32  5027               	movf	LCD_VARCHAR_HEX@high_nib^(0+1280),w,c
  3065   002B34  6E24               	movwf	??_LCD_VARCHAR_HEX^(0+1280),c
  3066   002B36  6A25               	clrf	(??_LCD_VARCHAR_HEX+1)^(0+1280),c
  3067                           
  3068                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3069                           ; Switch size 1, requested type "simple"
  3070                           ; Number of cases is 1, Range of values is 0 to 0
  3071                           ; switch strategies available:
  3072                           ; Name         Instructions Cycles
  3073                           ; simple_byte            4     3 (average)
  3074                           ;	Chosen strategy is simple_byte
  3075   002B38  5025               	movf	(??_LCD_VARCHAR_HEX+1)^(0+1280),w,c
  3076   002B3A  0A00               	xorlw	0	; case 0
  3077   002B3C  A4D8               	btfss	status,2,c
  3078   002B3E  D03C               	goto	l1678
  3079                           
  3080                           ; Switch size 1, requested type "simple"
  3081                           ; Number of cases is 16, Range of values is 0 to 15
  3082                           ; switch strategies available:
  3083                           ; Name         Instructions Cycles
  3084                           ; simple_byte           49    25 (average)
  3085                           ;	Chosen strategy is simple_byte
  3086   002B40  5024               	movf	??_LCD_VARCHAR_HEX^(0+1280),w,c
  3087   002B42  0A00               	xorlw	0	; case 0
  3088   002B44  B4D8               	btfsc	status,2,c
  3089   002B46  D7EB               	goto	l1664
  3090   002B48  0A01               	xorlw	1	; case 1
  3091   002B4A  B4D8               	btfsc	status,2,c
  3092   002B4C  D7E8               	goto	l1664
  3093   002B4E  0A03               	xorlw	3	; case 2
  3094   002B50  B4D8               	btfsc	status,2,c
  3095   002B52  D7E5               	goto	l1664
  3096   002B54  0A01               	xorlw	1	; case 3
  3097   002B56  B4D8               	btfsc	status,2,c
  3098   002B58  D7E2               	goto	l1664
  3099   002B5A  0A07               	xorlw	7	; case 4
  3100   002B5C  B4D8               	btfsc	status,2,c
  3101   002B5E  D7DF               	goto	l1664
  3102   002B60  0A01               	xorlw	1	; case 5
  3103   002B62  B4D8               	btfsc	status,2,c
  3104   002B64  D7DC               	goto	l1664
  3105   002B66  0A03               	xorlw	3	; case 6
  3106   002B68  B4D8               	btfsc	status,2,c
  3107   002B6A  D7D9               	goto	l1664
  3108   002B6C  0A01               	xorlw	1	; case 7
  3109   002B6E  B4D8               	btfsc	status,2,c
  3110   002B70  D7D6               	goto	l1664
  3111   002B72  0A0F               	xorlw	15	; case 8
  3112   002B74  B4D8               	btfsc	status,2,c
  3113   002B76  D7D3               	goto	l1664
  3114   002B78  0A01               	xorlw	1	; case 9
  3115   002B7A  B4D8               	btfsc	status,2,c
  3116   002B7C  D7D0               	goto	l1664
  3117   002B7E  0A03               	xorlw	3	; case 10
  3118   002B80  B4D8               	btfsc	status,2,c
  3119   002B82  D7D2               	goto	l1666
  3120   002B84  0A01               	xorlw	1	; case 11
  3121   002B86  B4D8               	btfsc	status,2,c
  3122   002B88  D7CF               	goto	l1666
  3123   002B8A  0A07               	xorlw	7	; case 12
  3124   002B8C  B4D8               	btfsc	status,2,c
  3125   002B8E  D7CC               	goto	l1666
  3126   002B90  0A01               	xorlw	1	; case 13
  3127   002B92  B4D8               	btfsc	status,2,c
  3128   002B94  D7C9               	goto	l1666
  3129   002B96  0A03               	xorlw	3	; case 14
  3130   002B98  B4D8               	btfsc	status,2,c
  3131   002B9A  D7C6               	goto	l1666
  3132   002B9C  0A01               	xorlw	1	; case 15
  3133   002B9E  B4D8               	btfsc	status,2,c
  3134   002BA0  D7C3               	goto	l1666
  3135   002BA2  D00A               	goto	l1678
  3136   002BA4                     l1672:
  3137                           
  3138                           ;LCD.c: 360:             ENVIA_CHAR(low_nib+0x30);
  3139   002BA4  5028               	movf	LCD_VARCHAR_HEX@low_nib^(0+1280),w,c
  3140   002BA6  0F30               	addlw	48
  3141   002BA8  ECB0  F019         	call	_ENVIA_CHAR
  3142                           
  3143                           ;LCD.c: 361:             break;
  3144   002BAC  0012               	return	
  3145   002BAE                     l1674:
  3146                           
  3147                           ;LCD.c: 363:             ENVIA_CHAR(low_nib+0x37);
  3148   002BAE  5028               	movf	LCD_VARCHAR_HEX@low_nib^(0+1280),w,c
  3149   002BB0  0F37               	addlw	55
  3150   002BB2  ECB0  F019         	call	_ENVIA_CHAR
  3151                           
  3152                           ;LCD.c: 364:             break;
  3153   002BB6  0012               	return	
  3154   002BB8                     l1678:
  3155   002BB8  5028               	movf	LCD_VARCHAR_HEX@low_nib^(0+1280),w,c
  3156   002BBA  6E24               	movwf	??_LCD_VARCHAR_HEX^(0+1280),c
  3157   002BBC  6A25               	clrf	(??_LCD_VARCHAR_HEX+1)^(0+1280),c
  3158                           
  3159                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3160                           ; Switch size 1, requested type "simple"
  3161                           ; Number of cases is 1, Range of values is 0 to 0
  3162                           ; switch strategies available:
  3163                           ; Name         Instructions Cycles
  3164                           ; simple_byte            4     3 (average)
  3165                           ;	Chosen strategy is simple_byte
  3166   002BBE  5025               	movf	(??_LCD_VARCHAR_HEX+1)^(0+1280),w,c
  3167   002BC0  0A00               	xorlw	0	; case 0
  3168   002BC2  A4D8               	btfss	status,2,c
  3169   002BC4  0012               	return	
  3170                           
  3171                           ; Switch size 1, requested type "simple"
  3172                           ; Number of cases is 16, Range of values is 0 to 15
  3173                           ; switch strategies available:
  3174                           ; Name         Instructions Cycles
  3175                           ; simple_byte           49    25 (average)
  3176                           ;	Chosen strategy is simple_byte
  3177   002BC6  5024               	movf	??_LCD_VARCHAR_HEX^(0+1280),w,c
  3178   002BC8  0A00               	xorlw	0	; case 0
  3179   002BCA  B4D8               	btfsc	status,2,c
  3180   002BCC  D7EB               	goto	l1672
  3181   002BCE  0A01               	xorlw	1	; case 1
  3182   002BD0  B4D8               	btfsc	status,2,c
  3183   002BD2  D7E8               	goto	l1672
  3184   002BD4  0A03               	xorlw	3	; case 2
  3185   002BD6  B4D8               	btfsc	status,2,c
  3186   002BD8  D7E5               	goto	l1672
  3187   002BDA  0A01               	xorlw	1	; case 3
  3188   002BDC  B4D8               	btfsc	status,2,c
  3189   002BDE  D7E2               	goto	l1672
  3190   002BE0  0A07               	xorlw	7	; case 4
  3191   002BE2  B4D8               	btfsc	status,2,c
  3192   002BE4  D7DF               	goto	l1672
  3193   002BE6  0A01               	xorlw	1	; case 5
  3194   002BE8  B4D8               	btfsc	status,2,c
  3195   002BEA  D7DC               	goto	l1672
  3196   002BEC  0A03               	xorlw	3	; case 6
  3197   002BEE  B4D8               	btfsc	status,2,c
  3198   002BF0  D7D9               	goto	l1672
  3199   002BF2  0A01               	xorlw	1	; case 7
  3200   002BF4  B4D8               	btfsc	status,2,c
  3201   002BF6  D7D6               	goto	l1672
  3202   002BF8  0A0F               	xorlw	15	; case 8
  3203   002BFA  B4D8               	btfsc	status,2,c
  3204   002BFC  D7D3               	goto	l1672
  3205   002BFE  0A01               	xorlw	1	; case 9
  3206   002C00  B4D8               	btfsc	status,2,c
  3207   002C02  D7D0               	goto	l1672
  3208   002C04  0A03               	xorlw	3	; case 10
  3209   002C06  B4D8               	btfsc	status,2,c
  3210   002C08  D7D2               	goto	l1674
  3211   002C0A  0A01               	xorlw	1	; case 11
  3212   002C0C  B4D8               	btfsc	status,2,c
  3213   002C0E  D7CF               	goto	l1674
  3214   002C10  0A07               	xorlw	7	; case 12
  3215   002C12  B4D8               	btfsc	status,2,c
  3216   002C14  D7CC               	goto	l1674
  3217   002C16  0A01               	xorlw	1	; case 13
  3218   002C18  B4D8               	btfsc	status,2,c
  3219   002C1A  D7C9               	goto	l1674
  3220   002C1C  0A03               	xorlw	3	; case 14
  3221   002C1E  B4D8               	btfsc	status,2,c
  3222   002C20  D7C6               	goto	l1674
  3223   002C22  0A01               	xorlw	1	; case 15
  3224   002C24  A4D8               	btfss	status,2,c
  3225   002C26  0012               	return	
  3226   002C28  D7C2               	goto	l1674
  3227   002C2A                     __end_of_LCD_VARCHAR_HEX:
  3228                           	callstack 0
  3229                           
  3230 ;; *************** function _LCD_VARCHAR_BITS *****************
  3231 ;; Defined at:
  3232 ;;		line 329 in file "LCD.c"
  3233 ;; Parameters:    Size  Location     Type
  3234 ;;  dato            1    wreg     unsigned char 
  3235 ;; Auto vars:     Size  Location     Type
  3236 ;;  dato            1    5[COMRAM] unsigned char 
  3237 ;;  x_var           1    6[COMRAM] unsigned char 
  3238 ;; Return value:  Size  Location     Type
  3239 ;;                  1    wreg      void 
  3240 ;; Registers used:
  3241 ;;		wreg, status,2, status,0, cstack
  3242 ;; Tracked objects:
  3243 ;;		On entry : 0/2
  3244 ;;		On exit  : 0/0
  3245 ;;		Unchanged: 0/0
  3246 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  3247 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3248 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3249 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3250 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3251 ;;Total ram usage:        4 bytes
  3252 ;; Hardware stack levels used: 1
  3253 ;; Hardware stack levels required when called: 2
  3254 ;; This function calls:
  3255 ;;		_ENVIA_CHAR
  3256 ;; This function is called by:
  3257 ;;		_main
  3258 ;; This function uses a non-reentrant model
  3259 ;;
  3260                           
  3261                           	psect	text21
  3262   003164                     __ptext21:
  3263                           	callstack 0
  3264   003164                     _LCD_VARCHAR_BITS:
  3265                           	callstack 124
  3266                           
  3267                           ;incstack = 0
  3268                           ;LCD_VARCHAR_BITS@dato stored from wreg
  3269   003164  6E26               	movwf	LCD_VARCHAR_BITS@dato^(0+1280),c
  3270                           
  3271                           ;LCD.c: 330:     ENVIA_CHAR('0');
  3272   003166  0E30               	movlw	48
  3273   003168  ECB0  F019         	call	_ENVIA_CHAR
  3274                           
  3275                           ;LCD.c: 331:     ENVIA_CHAR('b');
  3276   00316C  0E62               	movlw	98
  3277   00316E  ECB0  F019         	call	_ENVIA_CHAR
  3278                           
  3279                           ;LCD.c: 332:     unsigned char x_var;;LCD.c: 333:     for(x_var=0;x_var<8;x_var++){
  3280   003172  0E00               	movlw	0
  3281   003174  6E27               	movwf	LCD_VARCHAR_BITS@x_var^(0+1280),c
  3282   003176                     l1648:
  3283                           
  3284                           ;LCD.c: 334:         if (((dato >> (7 - x_var)) & 0x01) == 1){
  3285   003176  5027               	movf	LCD_VARCHAR_BITS@x_var^(0+1280),w,c
  3286   003178  0807               	sublw	7
  3287   00317A  6E24               	movwf	??_LCD_VARCHAR_BITS^(0+1280),c
  3288   00317C  C526  F525         	movff	LCD_VARCHAR_BITS@dato,??_LCD_VARCHAR_BITS+1
  3289   003180  2A24               	incf	??_LCD_VARCHAR_BITS^(0+1280),f,c
  3290   003182  D002               	goto	u294
  3291   003184                     u295:
  3292   003184  90D8               	bcf	status,0,c
  3293   003186  3225               	rrcf	(??_LCD_VARCHAR_BITS+1)^(0+1280),f,c
  3294   003188                     u294:
  3295   003188  2E24               	decfsz	??_LCD_VARCHAR_BITS^(0+1280),f,c
  3296   00318A  D7FC               	goto	u295
  3297   00318C  A025               	btfss	(??_LCD_VARCHAR_BITS+1)^(0+1280),0,c
  3298   00318E  D004               	goto	l1652
  3299                           
  3300                           ;LCD.c: 335:             ENVIA_CHAR('1');
  3301   003190  0E31               	movlw	49
  3302   003192  ECB0  F019         	call	_ENVIA_CHAR
  3303                           
  3304                           ;LCD.c: 336:         }
  3305   003196  D003               	goto	l1654
  3306   003198                     l1652:
  3307                           
  3308                           ;LCD.c: 338:             ENVIA_CHAR('0');
  3309   003198  0E30               	movlw	48
  3310   00319A  ECB0  F019         	call	_ENVIA_CHAR
  3311   00319E                     l1654:
  3312                           
  3313                           ;LCD.c: 340:     }
  3314   00319E  2A27               	incf	LCD_VARCHAR_BITS@x_var^(0+1280),f,c
  3315   0031A0  0E07               	movlw	7
  3316   0031A2  6427               	cpfsgt	LCD_VARCHAR_BITS@x_var^(0+1280),c
  3317   0031A4  D7E8               	goto	l1648
  3318   0031A6  0012               	return	
  3319   0031A8                     __end_of_LCD_VARCHAR_BITS:
  3320                           	callstack 0
  3321                           
  3322 ;; *************** function _LCD_ESCRIBE_VAR_CHAR *****************
  3323 ;; Defined at:
  3324 ;;		line 183 in file "LCD.c"
  3325 ;; Parameters:    Size  Location     Type
  3326 ;;  numero          1    wreg     unsigned char 
  3327 ;;  n_digitos       1   10[COMRAM] unsigned char 
  3328 ;; Auto vars:     Size  Location     Type
  3329 ;;  numero          1   15[COMRAM] unsigned char 
  3330 ;;  unidad          1   16[COMRAM] unsigned char 
  3331 ;;  decena          1   14[COMRAM] unsigned char 
  3332 ;;  centena         1   13[COMRAM] unsigned char 
  3333 ;; Return value:  Size  Location     Type
  3334 ;;                  1    wreg      void 
  3335 ;; Registers used:
  3336 ;;		wreg, status,2, status,0, cstack
  3337 ;; Tracked objects:
  3338 ;;		On entry : 0/2
  3339 ;;		On exit  : 0/0
  3340 ;;		Unchanged: 0/0
  3341 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  3342 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3343 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3344 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3345 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3346 ;;Total ram usage:        7 bytes
  3347 ;; Hardware stack levels used: 1
  3348 ;; Hardware stack levels required when called: 2
  3349 ;; This function calls:
  3350 ;;		_ENVIA_CHAR
  3351 ;;		___awmod
  3352 ;;		___lbdiv
  3353 ;;		___lbmod
  3354 ;; This function is called by:
  3355 ;;		_main
  3356 ;; This function uses a non-reentrant model
  3357 ;;
  3358                           
  3359                           	psect	text22
  3360   002D54                     __ptext22:
  3361                           	callstack 0
  3362   002D54                     _LCD_ESCRIBE_VAR_CHAR:
  3363                           	callstack 124
  3364                           
  3365                           ;incstack = 0
  3366                           ;LCD_ESCRIBE_VAR_CHAR@numero stored from wreg
  3367   002D54  6E30               	movwf	LCD_ESCRIBE_VAR_CHAR@numero^(0+1280),c
  3368                           
  3369                           ;LCD.c: 184:     unsigned char centena, decena, unidad;;LCD.c: 185:     centena = (numer
      +                          o % 1000) / 100;
  3370   002D56  0E64               	movlw	100
  3371   002D58  6E27               	movwf	___lbdiv@divisor^(0+1280),c
  3372   002D5A  0E03               	movlw	3
  3373   002D5C  6E24               	movwf	(___awmod@divisor+1)^(0+1280),c
  3374   002D5E  0EE8               	movlw	232
  3375   002D60  6E23               	movwf	___awmod@divisor^(0+1280),c
  3376   002D62  C530  F521         	movff	LCD_ESCRIBE_VAR_CHAR@numero,___awmod@dividend
  3377   002D66  6A22               	clrf	(___awmod@dividend+1)^(0+1280),c
  3378   002D68  EC46  F017         	call	___awmod	;wreg free
  3379   002D6C  5021               	movf	?___awmod^(0+1280),w,c
  3380   002D6E  EC15  F019         	call	___lbdiv
  3381   002D72  6E2E               	movwf	LCD_ESCRIBE_VAR_CHAR@centena^(0+1280),c
  3382                           
  3383                           ;LCD.c: 186:     decena = (numero % 100) / 10;
  3384   002D74  0E0A               	movlw	10
  3385   002D76  6E27               	movwf	___lbdiv@divisor^(0+1280),c
  3386   002D78  0E64               	movlw	100
  3387   002D7A  6E21               	movwf	___lbmod@divisor^(0+1280),c
  3388   002D7C  5030               	movf	LCD_ESCRIBE_VAR_CHAR@numero^(0+1280),w,c
  3389   002D7E  ECC6  F019         	call	___lbmod
  3390   002D82  EC15  F019         	call	___lbdiv
  3391   002D86  6E2F               	movwf	LCD_ESCRIBE_VAR_CHAR@decena^(0+1280),c
  3392                           
  3393                           ;LCD.c: 187:     unidad = numero % 10;
  3394   002D88  0E0A               	movlw	10
  3395   002D8A  6E21               	movwf	___lbmod@divisor^(0+1280),c
  3396   002D8C  5030               	movf	LCD_ESCRIBE_VAR_CHAR@numero^(0+1280),w,c
  3397   002D8E  ECC6  F019         	call	___lbmod
  3398   002D92  6E31               	movwf	LCD_ESCRIBE_VAR_CHAR@unidad^(0+1280),c
  3399                           
  3400                           ;LCD.c: 188:     switch(n_digitos){
  3401   002D94  D01B               	goto	l2382
  3402   002D96                     l2374:
  3403                           
  3404                           ;LCD.c: 190:             ENVIA_CHAR(unidad+0x30);
  3405   002D96  5031               	movf	LCD_ESCRIBE_VAR_CHAR@unidad^(0+1280),w,c
  3406   002D98  0F30               	addlw	48
  3407   002D9A  ECB0  F019         	call	_ENVIA_CHAR
  3408                           
  3409                           ;LCD.c: 191:             break;
  3410   002D9E  0012               	return	
  3411   002DA0                     l2376:
  3412                           
  3413                           ;LCD.c: 193:             ENVIA_CHAR(decena+0x30);
  3414   002DA0  502F               	movf	LCD_ESCRIBE_VAR_CHAR@decena^(0+1280),w,c
  3415   002DA2  0F30               	addlw	48
  3416   002DA4  ECB0  F019         	call	_ENVIA_CHAR
  3417                           
  3418                           ;LCD.c: 194:             ENVIA_CHAR(unidad+0x30);
  3419   002DA8  5031               	movf	LCD_ESCRIBE_VAR_CHAR@unidad^(0+1280),w,c
  3420   002DAA  0F30               	addlw	48
  3421   002DAC  ECB0  F019         	call	_ENVIA_CHAR
  3422                           
  3423                           ;LCD.c: 195:             break;
  3424   002DB0  0012               	return	
  3425   002DB2                     l2378:
  3426                           
  3427                           ;LCD.c: 197:             ENVIA_CHAR(centena+0x30);
  3428   002DB2  502E               	movf	LCD_ESCRIBE_VAR_CHAR@centena^(0+1280),w,c
  3429   002DB4  0F30               	addlw	48
  3430   002DB6  ECB0  F019         	call	_ENVIA_CHAR
  3431                           
  3432                           ;LCD.c: 198:             ENVIA_CHAR(decena+0x30);
  3433   002DBA  502F               	movf	LCD_ESCRIBE_VAR_CHAR@decena^(0+1280),w,c
  3434   002DBC  0F30               	addlw	48
  3435   002DBE  ECB0  F019         	call	_ENVIA_CHAR
  3436                           
  3437                           ;LCD.c: 199:             ENVIA_CHAR(unidad+0x30);
  3438   002DC2  5031               	movf	LCD_ESCRIBE_VAR_CHAR@unidad^(0+1280),w,c
  3439   002DC4  0F30               	addlw	48
  3440   002DC6  ECB0  F019         	call	_ENVIA_CHAR
  3441                           
  3442                           ;LCD.c: 200:             break;
  3443   002DCA  0012               	return	
  3444   002DCC                     l2382:
  3445   002DCC  502B               	movf	LCD_ESCRIBE_VAR_CHAR@n_digitos^(0+1280),w,c
  3446   002DCE  6E2C               	movwf	??_LCD_ESCRIBE_VAR_CHAR^(0+1280),c
  3447   002DD0  6A2D               	clrf	(??_LCD_ESCRIBE_VAR_CHAR+1)^(0+1280),c
  3448                           
  3449                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3450                           ; Switch size 1, requested type "simple"
  3451                           ; Number of cases is 1, Range of values is 0 to 0
  3452                           ; switch strategies available:
  3453                           ; Name         Instructions Cycles
  3454                           ; simple_byte            4     3 (average)
  3455                           ;	Chosen strategy is simple_byte
  3456   002DD2  502D               	movf	(??_LCD_ESCRIBE_VAR_CHAR+1)^(0+1280),w,c
  3457   002DD4  0A00               	xorlw	0	; case 0
  3458   002DD6  A4D8               	btfss	status,2,c
  3459   002DD8  0012               	return	
  3460                           
  3461                           ; Switch size 1, requested type "simple"
  3462                           ; Number of cases is 3, Range of values is 1 to 3
  3463                           ; switch strategies available:
  3464                           ; Name         Instructions Cycles
  3465                           ; simple_byte           10     6 (average)
  3466                           ;	Chosen strategy is simple_byte
  3467   002DDA  502C               	movf	??_LCD_ESCRIBE_VAR_CHAR^(0+1280),w,c
  3468   002DDC  0A01               	xorlw	1	; case 1
  3469   002DDE  B4D8               	btfsc	status,2,c
  3470   002DE0  D7DA               	goto	l2374
  3471   002DE2  0A03               	xorlw	3	; case 2
  3472   002DE4  B4D8               	btfsc	status,2,c
  3473   002DE6  D7DC               	goto	l2376
  3474   002DE8  0A01               	xorlw	1	; case 3
  3475   002DEA  A4D8               	btfss	status,2,c
  3476   002DEC  0012               	return	
  3477   002DEE  D7E1               	goto	l2378
  3478   002DF0                     __end_of_LCD_ESCRIBE_VAR_CHAR:
  3479                           	callstack 0
  3480                           
  3481 ;; *************** function _ENVIA_CHAR *****************
  3482 ;; Defined at:
  3483 ;;		line 75 in file "LCD.c"
  3484 ;; Parameters:    Size  Location     Type
  3485 ;;  dato            1    wreg     unsigned char 
  3486 ;; Auto vars:     Size  Location     Type
  3487 ;;  dato            1    1[COMRAM] unsigned char 
  3488 ;;  aux             1    2[COMRAM] unsigned char 
  3489 ;; Return value:  Size  Location     Type
  3490 ;;                  1    wreg      void 
  3491 ;; Registers used:
  3492 ;;		wreg, status,2, status,0, cstack
  3493 ;; Tracked objects:
  3494 ;;		On entry : 0/2
  3495 ;;		On exit  : 0/0
  3496 ;;		Unchanged: 0/0
  3497 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  3498 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3499 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3500 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3501 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3502 ;;Total ram usage:        2 bytes
  3503 ;; Hardware stack levels used: 1
  3504 ;; Hardware stack levels required when called: 1
  3505 ;; This function calls:
  3506 ;;		_ENVIA_NIBBLE
  3507 ;; This function is called by:
  3508 ;;		_ESCRIBE_MENSAJE2
  3509 ;;		_LCD_ESCRIBE_VAR_CHAR
  3510 ;;		_LCD_VARCHAR_BITS
  3511 ;;		_LCD_VARCHAR_HEX
  3512 ;; This function uses a non-reentrant model
  3513 ;;
  3514                           
  3515                           	psect	text23
  3516   003360                     __ptext23:
  3517                           	callstack 0
  3518   003360                     _ENVIA_CHAR:
  3519                           	callstack 123
  3520                           
  3521                           ;incstack = 0
  3522                           ;ENVIA_CHAR@dato stored from wreg
  3523   003360  6E22               	movwf	ENVIA_CHAR@dato^(0+1280),c
  3524                           
  3525                           ;LCD.c: 76:  unsigned char aux;;LCD.c: 77:  LATDbits.LATD0 = 1;
  3526   003362  80C1               	bsf	193,0,c	;volatile
  3527                           
  3528                           ;LCD.c: 80:     _delay((unsigned long)((100)*(32000000UL/4000000.0)));
  3529   003364  0EA0               	movlw	160
  3530   003366                     u1347:
  3531   003366  D000               	nop2	
  3532   003368  2EE8               	decfsz	wreg,f,c
  3533   00336A  D7FD               	bra	u1347
  3534                           
  3535                           ;LCD.c: 81:  LATDbits.LATD1 = 0;
  3536   00336C  92C1               	bcf	193,1,c	;volatile
  3537                           
  3538                           ;LCD.c: 82:  LATDbits.LATD2 = 0;
  3539   00336E  94C1               	bcf	193,2,c	;volatile
  3540                           
  3541                           ;LCD.c: 83:  LATDbits.LATD0 = 1;
  3542   003370  80C1               	bsf	193,0,c	;volatile
  3543                           
  3544                           ;LCD.c: 84:  aux = dato & 0xF0;
  3545   003372  5022               	movf	ENVIA_CHAR@dato^(0+1280),w,c
  3546   003374  0BF0               	andlw	240
  3547   003376  6E23               	movwf	ENVIA_CHAR@aux^(0+1280),c
  3548                           
  3549                           ;LCD.c: 85:  ENVIA_NIBBLE(aux);
  3550   003378  5023               	movf	ENVIA_CHAR@aux^(0+1280),w,c
  3551   00337A  EC2C  F01A         	call	_ENVIA_NIBBLE
  3552                           
  3553                           ;LCD.c: 86:  aux = dato << 4;
  3554   00337E  3822               	swapf	ENVIA_CHAR@dato^(0+1280),w,c
  3555   003380  0BF0               	andlw	240
  3556   003382  6E23               	movwf	ENVIA_CHAR@aux^(0+1280),c
  3557                           
  3558                           ;LCD.c: 87:  ENVIA_NIBBLE(aux);
  3559   003384  5023               	movf	ENVIA_CHAR@aux^(0+1280),w,c
  3560   003386  EC2C  F01A         	call	_ENVIA_NIBBLE
  3561   00338A  0012               	return		;funcret
  3562   00338C                     __end_of_ENVIA_CHAR:
  3563                           	callstack 0
  3564                           
  3565 ;; *************** function _ENVIA_NIBBLE *****************
  3566 ;; Defined at:
  3567 ;;		line 110 in file "LCD.c"
  3568 ;; Parameters:    Size  Location     Type
  3569 ;;  dato            1    wreg     unsigned char 
  3570 ;; Auto vars:     Size  Location     Type
  3571 ;;  dato            1    0[COMRAM] unsigned char 
  3572 ;; Return value:  Size  Location     Type
  3573 ;;                  1    wreg      void 
  3574 ;; Registers used:
  3575 ;;		wreg, status,2, status,0
  3576 ;; Tracked objects:
  3577 ;;		On entry : 0/4
  3578 ;;		On exit  : 0/0
  3579 ;;		Unchanged: 0/0
  3580 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  3581 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3582 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3583 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3584 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3585 ;;Total ram usage:        1 bytes
  3586 ;; Hardware stack levels used: 1
  3587 ;; This function calls:
  3588 ;;		Nothing
  3589 ;; This function is called by:
  3590 ;;		_ENVIA_CHAR
  3591 ;;		_LCD_CONFIG
  3592 ;;		_ENVIA_LCD_CMD
  3593 ;; This function uses a non-reentrant model
  3594 ;;
  3595                           
  3596                           	psect	text24
  3597   003458                     __ptext24:
  3598                           	callstack 0
  3599   003458                     _ENVIA_NIBBLE:
  3600                           	callstack 123
  3601                           
  3602                           ;incstack = 0
  3603                           ;ENVIA_NIBBLE@dato stored from wreg
  3604   003458  6E21               	movwf	ENVIA_NIBBLE@dato^(0+1280),c
  3605                           
  3606                           ;LCD.c: 111:  LATD &= 0x0F;
  3607   00345A  0E0F               	movlw	15
  3608   00345C  16C1               	andwf	193,f,c	;volatile
  3609                           
  3610                           ;LCD.c: 112:  dato &= 0xF0;
  3611   00345E  0EF0               	movlw	240
  3612   003460  1621               	andwf	ENVIA_NIBBLE@dato^(0+1280),f,c
  3613                           
  3614                           ;LCD.c: 113:  LATD|= dato;
  3615   003462  5021               	movf	ENVIA_NIBBLE@dato^(0+1280),w,c	;volatile
  3616   003464  12C1               	iorwf	193,f,c	;volatile
  3617                           
  3618                           ;LCD.c: 114:  LATDbits.LATD2 = 1;
  3619   003466  84C1               	bsf	193,2,c	;volatile
  3620                           
  3621                           ;LCD.c: 115:     _delay((unsigned long)((100)*(32000000UL/4000000.0)));
  3622   003468  0EA0               	movlw	160
  3623   00346A                     u1357:
  3624   00346A  D000               	nop2	
  3625   00346C  2EE8               	decfsz	wreg,f,c
  3626   00346E  D7FD               	bra	u1357
  3627                           
  3628                           ;LCD.c: 116:  LATDbits.LATD2 = 0;
  3629   003470  94C1               	bcf	193,2,c	;volatile
  3630   003472  0012               	return		;funcret
  3631   003474                     __end_of_ENVIA_NIBBLE:
  3632                           	callstack 0
  3633                           
  3634 ;; *************** function _I2C_LCD_VARCHAR_HEX *****************
  3635 ;; Defined at:
  3636 ;;		line 450 in file "I2C_LCD.c"
  3637 ;; Parameters:    Size  Location     Type
  3638 ;;  dato            1    wreg     unsigned char 
  3639 ;; Auto vars:     Size  Location     Type
  3640 ;;  dato            1    8[COMRAM] unsigned char 
  3641 ;;  low_nib         1   10[COMRAM] unsigned char 
  3642 ;;  high_nib        1    9[COMRAM] unsigned char 
  3643 ;; Return value:  Size  Location     Type
  3644 ;;                  1    wreg      void 
  3645 ;; Registers used:
  3646 ;;		wreg, status,2, status,0, cstack
  3647 ;; Tracked objects:
  3648 ;;		On entry : 0/2
  3649 ;;		On exit  : 0/0
  3650 ;;		Unchanged: 0/0
  3651 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  3652 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3653 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3654 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3655 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3656 ;;Total ram usage:        5 bytes
  3657 ;; Hardware stack levels used: 1
  3658 ;; Hardware stack levels required when called: 2
  3659 ;; This function calls:
  3660 ;;		_I2C_ENVIA_LCD_DATA
  3661 ;; This function is called by:
  3662 ;;		_main
  3663 ;; This function uses a non-reentrant model
  3664 ;;
  3665                           
  3666                           	psect	text25
  3667   002C2A                     __ptext25:
  3668                           	callstack 0
  3669   002C2A                     _I2C_LCD_VARCHAR_HEX:
  3670                           	callstack 124
  3671                           
  3672                           ;incstack = 0
  3673                           ;I2C_LCD_VARCHAR_HEX@dato stored from wreg
  3674   002C2A  6E29               	movwf	I2C_LCD_VARCHAR_HEX@dato^(0+1280),c
  3675                           
  3676                           ;I2C_LCD.c: 451:     unsigned char high_nib, low_nib;;I2C_LCD.c: 452:     I2C_ENVIA_LCD_
      +                          DATA('0');
  3677   002C2C  0E30               	movlw	48
  3678   002C2E  EC7E  F017         	call	_I2C_ENVIA_LCD_DATA
  3679                           
  3680                           ;I2C_LCD.c: 453:     I2C_ENVIA_LCD_DATA('x');
  3681   002C32  0E78               	movlw	120
  3682   002C34  EC7E  F017         	call	_I2C_ENVIA_LCD_DATA
  3683                           
  3684                           ;I2C_LCD.c: 454:     high_nib = (dato >> 4) & 0x0F;
  3685   002C38  3829               	swapf	I2C_LCD_VARCHAR_HEX@dato^(0+1280),w,c
  3686   002C3A  0B0F               	andlw	15
  3687   002C3C  0B0F               	andlw	15
  3688   002C3E  6E2A               	movwf	I2C_LCD_VARCHAR_HEX@high_nib^(0+1280),c
  3689                           
  3690                           ;I2C_LCD.c: 455:     low_nib = dato & 0x0F;
  3691   002C40  5029               	movf	I2C_LCD_VARCHAR_HEX@dato^(0+1280),w,c
  3692   002C42  0B0F               	andlw	15
  3693   002C44  6E2B               	movwf	I2C_LCD_VARCHAR_HEX@low_nib^(0+1280),c
  3694                           
  3695                           ;I2C_LCD.c: 456:     switch(high_nib){
  3696   002C46  D00A               	goto	l2434
  3697   002C48                     l2428:
  3698                           
  3699                           ;I2C_LCD.c: 458:             I2C_ENVIA_LCD_DATA(high_nib+0x30);
  3700   002C48  502A               	movf	I2C_LCD_VARCHAR_HEX@high_nib^(0+1280),w,c
  3701   002C4A  0F30               	addlw	48
  3702   002C4C  EC7E  F017         	call	_I2C_ENVIA_LCD_DATA
  3703                           
  3704                           ;I2C_LCD.c: 459:             break;
  3705   002C50  D048               	goto	l2442
  3706   002C52                     l2430:
  3707                           
  3708                           ;I2C_LCD.c: 461:             I2C_ENVIA_LCD_DATA(high_nib+0x37);
  3709   002C52  502A               	movf	I2C_LCD_VARCHAR_HEX@high_nib^(0+1280),w,c
  3710   002C54  0F37               	addlw	55
  3711   002C56  EC7E  F017         	call	_I2C_ENVIA_LCD_DATA
  3712                           
  3713                           ;I2C_LCD.c: 462:             break;
  3714   002C5A  D043               	goto	l2442
  3715   002C5C                     l2434:
  3716   002C5C  502A               	movf	I2C_LCD_VARCHAR_HEX@high_nib^(0+1280),w,c
  3717   002C5E  6E27               	movwf	??_I2C_LCD_VARCHAR_HEX^(0+1280),c
  3718   002C60  6A28               	clrf	(??_I2C_LCD_VARCHAR_HEX+1)^(0+1280),c
  3719                           
  3720                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3721                           ; Switch size 1, requested type "simple"
  3722                           ; Number of cases is 1, Range of values is 0 to 0
  3723                           ; switch strategies available:
  3724                           ; Name         Instructions Cycles
  3725                           ; simple_byte            4     3 (average)
  3726                           ;	Chosen strategy is simple_byte
  3727   002C62  5028               	movf	(??_I2C_LCD_VARCHAR_HEX+1)^(0+1280),w,c
  3728   002C64  0A00               	xorlw	0	; case 0
  3729   002C66  A4D8               	btfss	status,2,c
  3730   002C68  D03C               	goto	l2442
  3731                           
  3732                           ; Switch size 1, requested type "simple"
  3733                           ; Number of cases is 16, Range of values is 0 to 15
  3734                           ; switch strategies available:
  3735                           ; Name         Instructions Cycles
  3736                           ; simple_byte           49    25 (average)
  3737                           ;	Chosen strategy is simple_byte
  3738   002C6A  5027               	movf	??_I2C_LCD_VARCHAR_HEX^(0+1280),w,c
  3739   002C6C  0A00               	xorlw	0	; case 0
  3740   002C6E  B4D8               	btfsc	status,2,c
  3741   002C70  D7EB               	goto	l2428
  3742   002C72  0A01               	xorlw	1	; case 1
  3743   002C74  B4D8               	btfsc	status,2,c
  3744   002C76  D7E8               	goto	l2428
  3745   002C78  0A03               	xorlw	3	; case 2
  3746   002C7A  B4D8               	btfsc	status,2,c
  3747   002C7C  D7E5               	goto	l2428
  3748   002C7E  0A01               	xorlw	1	; case 3
  3749   002C80  B4D8               	btfsc	status,2,c
  3750   002C82  D7E2               	goto	l2428
  3751   002C84  0A07               	xorlw	7	; case 4
  3752   002C86  B4D8               	btfsc	status,2,c
  3753   002C88  D7DF               	goto	l2428
  3754   002C8A  0A01               	xorlw	1	; case 5
  3755   002C8C  B4D8               	btfsc	status,2,c
  3756   002C8E  D7DC               	goto	l2428
  3757   002C90  0A03               	xorlw	3	; case 6
  3758   002C92  B4D8               	btfsc	status,2,c
  3759   002C94  D7D9               	goto	l2428
  3760   002C96  0A01               	xorlw	1	; case 7
  3761   002C98  B4D8               	btfsc	status,2,c
  3762   002C9A  D7D6               	goto	l2428
  3763   002C9C  0A0F               	xorlw	15	; case 8
  3764   002C9E  B4D8               	btfsc	status,2,c
  3765   002CA0  D7D3               	goto	l2428
  3766   002CA2  0A01               	xorlw	1	; case 9
  3767   002CA4  B4D8               	btfsc	status,2,c
  3768   002CA6  D7D0               	goto	l2428
  3769   002CA8  0A03               	xorlw	3	; case 10
  3770   002CAA  B4D8               	btfsc	status,2,c
  3771   002CAC  D7D2               	goto	l2430
  3772   002CAE  0A01               	xorlw	1	; case 11
  3773   002CB0  B4D8               	btfsc	status,2,c
  3774   002CB2  D7CF               	goto	l2430
  3775   002CB4  0A07               	xorlw	7	; case 12
  3776   002CB6  B4D8               	btfsc	status,2,c
  3777   002CB8  D7CC               	goto	l2430
  3778   002CBA  0A01               	xorlw	1	; case 13
  3779   002CBC  B4D8               	btfsc	status,2,c
  3780   002CBE  D7C9               	goto	l2430
  3781   002CC0  0A03               	xorlw	3	; case 14
  3782   002CC2  B4D8               	btfsc	status,2,c
  3783   002CC4  D7C6               	goto	l2430
  3784   002CC6  0A01               	xorlw	1	; case 15
  3785   002CC8  B4D8               	btfsc	status,2,c
  3786   002CCA  D7C3               	goto	l2430
  3787   002CCC  D00A               	goto	l2442
  3788   002CCE                     l2436:
  3789                           
  3790                           ;I2C_LCD.c: 466:             I2C_ENVIA_LCD_DATA(low_nib+0x30);
  3791   002CCE  502B               	movf	I2C_LCD_VARCHAR_HEX@low_nib^(0+1280),w,c
  3792   002CD0  0F30               	addlw	48
  3793   002CD2  EC7E  F017         	call	_I2C_ENVIA_LCD_DATA
  3794                           
  3795                           ;I2C_LCD.c: 467:             break;
  3796   002CD6  0012               	return	
  3797   002CD8                     l2438:
  3798                           
  3799                           ;I2C_LCD.c: 469:             I2C_ENVIA_LCD_DATA(low_nib+0x37);
  3800   002CD8  502B               	movf	I2C_LCD_VARCHAR_HEX@low_nib^(0+1280),w,c
  3801   002CDA  0F37               	addlw	55
  3802   002CDC  EC7E  F017         	call	_I2C_ENVIA_LCD_DATA
  3803                           
  3804                           ;I2C_LCD.c: 470:             break;
  3805   002CE0  0012               	return	
  3806   002CE2                     l2442:
  3807   002CE2  502B               	movf	I2C_LCD_VARCHAR_HEX@low_nib^(0+1280),w,c
  3808   002CE4  6E27               	movwf	??_I2C_LCD_VARCHAR_HEX^(0+1280),c
  3809   002CE6  6A28               	clrf	(??_I2C_LCD_VARCHAR_HEX+1)^(0+1280),c
  3810                           
  3811                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3812                           ; Switch size 1, requested type "simple"
  3813                           ; Number of cases is 1, Range of values is 0 to 0
  3814                           ; switch strategies available:
  3815                           ; Name         Instructions Cycles
  3816                           ; simple_byte            4     3 (average)
  3817                           ;	Chosen strategy is simple_byte
  3818   002CE8  5028               	movf	(??_I2C_LCD_VARCHAR_HEX+1)^(0+1280),w,c
  3819   002CEA  0A00               	xorlw	0	; case 0
  3820   002CEC  A4D8               	btfss	status,2,c
  3821   002CEE  0012               	return	
  3822                           
  3823                           ; Switch size 1, requested type "simple"
  3824                           ; Number of cases is 16, Range of values is 0 to 15
  3825                           ; switch strategies available:
  3826                           ; Name         Instructions Cycles
  3827                           ; simple_byte           49    25 (average)
  3828                           ;	Chosen strategy is simple_byte
  3829   002CF0  5027               	movf	??_I2C_LCD_VARCHAR_HEX^(0+1280),w,c
  3830   002CF2  0A00               	xorlw	0	; case 0
  3831   002CF4  B4D8               	btfsc	status,2,c
  3832   002CF6  D7EB               	goto	l2436
  3833   002CF8  0A01               	xorlw	1	; case 1
  3834   002CFA  B4D8               	btfsc	status,2,c
  3835   002CFC  D7E8               	goto	l2436
  3836   002CFE  0A03               	xorlw	3	; case 2
  3837   002D00  B4D8               	btfsc	status,2,c
  3838   002D02  D7E5               	goto	l2436
  3839   002D04  0A01               	xorlw	1	; case 3
  3840   002D06  B4D8               	btfsc	status,2,c
  3841   002D08  D7E2               	goto	l2436
  3842   002D0A  0A07               	xorlw	7	; case 4
  3843   002D0C  B4D8               	btfsc	status,2,c
  3844   002D0E  D7DF               	goto	l2436
  3845   002D10  0A01               	xorlw	1	; case 5
  3846   002D12  B4D8               	btfsc	status,2,c
  3847   002D14  D7DC               	goto	l2436
  3848   002D16  0A03               	xorlw	3	; case 6
  3849   002D18  B4D8               	btfsc	status,2,c
  3850   002D1A  D7D9               	goto	l2436
  3851   002D1C  0A01               	xorlw	1	; case 7
  3852   002D1E  B4D8               	btfsc	status,2,c
  3853   002D20  D7D6               	goto	l2436
  3854   002D22  0A0F               	xorlw	15	; case 8
  3855   002D24  B4D8               	btfsc	status,2,c
  3856   002D26  D7D3               	goto	l2436
  3857   002D28  0A01               	xorlw	1	; case 9
  3858   002D2A  B4D8               	btfsc	status,2,c
  3859   002D2C  D7D0               	goto	l2436
  3860   002D2E  0A03               	xorlw	3	; case 10
  3861   002D30  B4D8               	btfsc	status,2,c
  3862   002D32  D7D2               	goto	l2438
  3863   002D34  0A01               	xorlw	1	; case 11
  3864   002D36  B4D8               	btfsc	status,2,c
  3865   002D38  D7CF               	goto	l2438
  3866   002D3A  0A07               	xorlw	7	; case 12
  3867   002D3C  B4D8               	btfsc	status,2,c
  3868   002D3E  D7CC               	goto	l2438
  3869   002D40  0A01               	xorlw	1	; case 13
  3870   002D42  B4D8               	btfsc	status,2,c
  3871   002D44  D7C9               	goto	l2438
  3872   002D46  0A03               	xorlw	3	; case 14
  3873   002D48  B4D8               	btfsc	status,2,c
  3874   002D4A  D7C6               	goto	l2438
  3875   002D4C  0A01               	xorlw	1	; case 15
  3876   002D4E  A4D8               	btfss	status,2,c
  3877   002D50  0012               	return	
  3878   002D52  D7C2               	goto	l2438
  3879   002D54                     __end_of_I2C_LCD_VARCHAR_HEX:
  3880                           	callstack 0
  3881                           
  3882 ;; *************** function _I2C_LCD_VARCHAR_BITS *****************
  3883 ;; Defined at:
  3884 ;;		line 435 in file "I2C_LCD.c"
  3885 ;; Parameters:    Size  Location     Type
  3886 ;;  dato            1    wreg     unsigned char 
  3887 ;; Auto vars:     Size  Location     Type
  3888 ;;  dato            1    8[COMRAM] unsigned char 
  3889 ;;  x_var           1    9[COMRAM] unsigned char 
  3890 ;; Return value:  Size  Location     Type
  3891 ;;                  1    wreg      void 
  3892 ;; Registers used:
  3893 ;;		wreg, status,2, status,0, cstack
  3894 ;; Tracked objects:
  3895 ;;		On entry : 0/2
  3896 ;;		On exit  : 0/0
  3897 ;;		Unchanged: 0/0
  3898 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  3899 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3900 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3901 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3902 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3903 ;;Total ram usage:        4 bytes
  3904 ;; Hardware stack levels used: 1
  3905 ;; Hardware stack levels required when called: 2
  3906 ;; This function calls:
  3907 ;;		_I2C_ENVIA_LCD_DATA
  3908 ;; This function is called by:
  3909 ;;		_main
  3910 ;; This function uses a non-reentrant model
  3911 ;;
  3912                           
  3913                           	psect	text26
  3914   0031A8                     __ptext26:
  3915                           	callstack 0
  3916   0031A8                     _I2C_LCD_VARCHAR_BITS:
  3917                           	callstack 124
  3918                           
  3919                           ;incstack = 0
  3920                           ;I2C_LCD_VARCHAR_BITS@dato stored from wreg
  3921   0031A8  6E29               	movwf	I2C_LCD_VARCHAR_BITS@dato^(0+1280),c
  3922                           
  3923                           ;I2C_LCD.c: 436:     I2C_ENVIA_LCD_DATA('0');
  3924   0031AA  0E30               	movlw	48
  3925   0031AC  EC7E  F017         	call	_I2C_ENVIA_LCD_DATA
  3926                           
  3927                           ;I2C_LCD.c: 437:     I2C_ENVIA_LCD_DATA('b');
  3928   0031B0  0E62               	movlw	98
  3929   0031B2  EC7E  F017         	call	_I2C_ENVIA_LCD_DATA
  3930                           
  3931                           ;I2C_LCD.c: 438:     unsigned char x_var;;I2C_LCD.c: 439:     for(x_var=0;x_var<8;x_var+
      +                          +){
  3932   0031B6  0E00               	movlw	0
  3933   0031B8  6E2A               	movwf	I2C_LCD_VARCHAR_BITS@x_var^(0+1280),c
  3934   0031BA                     l2412:
  3935                           
  3936                           ;I2C_LCD.c: 440:         if (((dato >> (7 - x_var)) & 0x01) == 1){
  3937   0031BA  502A               	movf	I2C_LCD_VARCHAR_BITS@x_var^(0+1280),w,c
  3938   0031BC  0807               	sublw	7
  3939   0031BE  6E27               	movwf	??_I2C_LCD_VARCHAR_BITS^(0+1280),c
  3940   0031C0  C529  F528         	movff	I2C_LCD_VARCHAR_BITS@dato,??_I2C_LCD_VARCHAR_BITS+1
  3941   0031C4  2A27               	incf	??_I2C_LCD_VARCHAR_BITS^(0+1280),f,c
  3942   0031C6  D002               	goto	u694
  3943   0031C8                     u695:
  3944   0031C8  90D8               	bcf	status,0,c
  3945   0031CA  3228               	rrcf	(??_I2C_LCD_VARCHAR_BITS+1)^(0+1280),f,c
  3946   0031CC                     u694:
  3947   0031CC  2E27               	decfsz	??_I2C_LCD_VARCHAR_BITS^(0+1280),f,c
  3948   0031CE  D7FC               	goto	u695
  3949   0031D0  A028               	btfss	(??_I2C_LCD_VARCHAR_BITS+1)^(0+1280),0,c
  3950   0031D2  D004               	goto	l2416
  3951                           
  3952                           ;I2C_LCD.c: 441:             I2C_ENVIA_LCD_DATA('1');
  3953   0031D4  0E31               	movlw	49
  3954   0031D6  EC7E  F017         	call	_I2C_ENVIA_LCD_DATA
  3955                           
  3956                           ;I2C_LCD.c: 442:         }
  3957   0031DA  D003               	goto	l2418
  3958   0031DC                     l2416:
  3959                           
  3960                           ;I2C_LCD.c: 444:             I2C_ENVIA_LCD_DATA('0');
  3961   0031DC  0E30               	movlw	48
  3962   0031DE  EC7E  F017         	call	_I2C_ENVIA_LCD_DATA
  3963   0031E2                     l2418:
  3964                           
  3965                           ;I2C_LCD.c: 446:     }
  3966   0031E2  2A2A               	incf	I2C_LCD_VARCHAR_BITS@x_var^(0+1280),f,c
  3967   0031E4  0E07               	movlw	7
  3968   0031E6  642A               	cpfsgt	I2C_LCD_VARCHAR_BITS@x_var^(0+1280),c
  3969   0031E8  D7E8               	goto	l2412
  3970   0031EA  0012               	return	
  3971   0031EC                     __end_of_I2C_LCD_VARCHAR_BITS:
  3972                           	callstack 0
  3973                           
  3974 ;; *************** function _I2C_LCD_ESCRIBE_VAR_CHAR *****************
  3975 ;; Defined at:
  3976 ;;		line 289 in file "I2C_LCD.c"
  3977 ;; Parameters:    Size  Location     Type
  3978 ;;  numero          1    wreg     unsigned char 
  3979 ;;  n_digitos       1   10[COMRAM] unsigned char 
  3980 ;; Auto vars:     Size  Location     Type
  3981 ;;  numero          1   15[COMRAM] unsigned char 
  3982 ;;  unidad          1   16[COMRAM] unsigned char 
  3983 ;;  decena          1   14[COMRAM] unsigned char 
  3984 ;;  centena         1   13[COMRAM] unsigned char 
  3985 ;; Return value:  Size  Location     Type
  3986 ;;                  1    wreg      void 
  3987 ;; Registers used:
  3988 ;;		wreg, status,2, status,0, cstack
  3989 ;; Tracked objects:
  3990 ;;		On entry : 0/2
  3991 ;;		On exit  : 0/0
  3992 ;;		Unchanged: 0/0
  3993 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  3994 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3995 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3996 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3997 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3998 ;;Total ram usage:        7 bytes
  3999 ;; Hardware stack levels used: 1
  4000 ;; Hardware stack levels required when called: 2
  4001 ;; This function calls:
  4002 ;;		_I2C_ENVIA_LCD_DATA
  4003 ;;		___awmod
  4004 ;;		___lbdiv
  4005 ;;		___lbmod
  4006 ;; This function is called by:
  4007 ;;		_main
  4008 ;; This function uses a non-reentrant model
  4009 ;;
  4010                           
  4011                           	psect	text27
  4012   002DF0                     __ptext27:
  4013                           	callstack 0
  4014   002DF0                     _I2C_LCD_ESCRIBE_VAR_CHAR:
  4015                           	callstack 124
  4016                           
  4017                           ;incstack = 0
  4018                           ;I2C_LCD_ESCRIBE_VAR_CHAR@numero stored from wreg
  4019   002DF0  6E30               	movwf	I2C_LCD_ESCRIBE_VAR_CHAR@numero^(0+1280),c
  4020                           
  4021                           ;I2C_LCD.c: 290:     unsigned char centena, decena, unidad;;I2C_LCD.c: 291:     centena 
      +                          = (numero % 1000) / 100;
  4022   002DF2  0E64               	movlw	100
  4023   002DF4  6E27               	movwf	___lbdiv@divisor^(0+1280),c
  4024   002DF6  0E03               	movlw	3
  4025   002DF8  6E24               	movwf	(___awmod@divisor+1)^(0+1280),c
  4026   002DFA  0EE8               	movlw	232
  4027   002DFC  6E23               	movwf	___awmod@divisor^(0+1280),c
  4028   002DFE  C530  F521         	movff	I2C_LCD_ESCRIBE_VAR_CHAR@numero,___awmod@dividend
  4029   002E02  6A22               	clrf	(___awmod@dividend+1)^(0+1280),c
  4030   002E04  EC46  F017         	call	___awmod	;wreg free
  4031   002E08  5021               	movf	?___awmod^(0+1280),w,c
  4032   002E0A  EC15  F019         	call	___lbdiv
  4033   002E0E  6E2E               	movwf	I2C_LCD_ESCRIBE_VAR_CHAR@centena^(0+1280),c
  4034                           
  4035                           ;I2C_LCD.c: 292:     decena = (numero % 100) / 10;
  4036   002E10  0E0A               	movlw	10
  4037   002E12  6E27               	movwf	___lbdiv@divisor^(0+1280),c
  4038   002E14  0E64               	movlw	100
  4039   002E16  6E21               	movwf	___lbmod@divisor^(0+1280),c
  4040   002E18  5030               	movf	I2C_LCD_ESCRIBE_VAR_CHAR@numero^(0+1280),w,c
  4041   002E1A  ECC6  F019         	call	___lbmod
  4042   002E1E  EC15  F019         	call	___lbdiv
  4043   002E22  6E2F               	movwf	I2C_LCD_ESCRIBE_VAR_CHAR@decena^(0+1280),c
  4044                           
  4045                           ;I2C_LCD.c: 293:     unidad = numero % 10;
  4046   002E24  0E0A               	movlw	10
  4047   002E26  6E21               	movwf	___lbmod@divisor^(0+1280),c
  4048   002E28  5030               	movf	I2C_LCD_ESCRIBE_VAR_CHAR@numero^(0+1280),w,c
  4049   002E2A  ECC6  F019         	call	___lbmod
  4050   002E2E  6E31               	movwf	I2C_LCD_ESCRIBE_VAR_CHAR@unidad^(0+1280),c
  4051                           
  4052                           ;I2C_LCD.c: 294:     switch(n_digitos){
  4053   002E30  D01B               	goto	l2398
  4054   002E32                     l2390:
  4055                           
  4056                           ;I2C_LCD.c: 296:             I2C_ENVIA_LCD_DATA(unidad+0x30);
  4057   002E32  5031               	movf	I2C_LCD_ESCRIBE_VAR_CHAR@unidad^(0+1280),w,c
  4058   002E34  0F30               	addlw	48
  4059   002E36  EC7E  F017         	call	_I2C_ENVIA_LCD_DATA
  4060                           
  4061                           ;I2C_LCD.c: 297:             break;
  4062   002E3A  0012               	return	
  4063   002E3C                     l2392:
  4064                           
  4065                           ;I2C_LCD.c: 299:             I2C_ENVIA_LCD_DATA(decena+0x30);
  4066   002E3C  502F               	movf	I2C_LCD_ESCRIBE_VAR_CHAR@decena^(0+1280),w,c
  4067   002E3E  0F30               	addlw	48
  4068   002E40  EC7E  F017         	call	_I2C_ENVIA_LCD_DATA
  4069                           
  4070                           ;I2C_LCD.c: 300:             I2C_ENVIA_LCD_DATA(unidad+0x30);
  4071   002E44  5031               	movf	I2C_LCD_ESCRIBE_VAR_CHAR@unidad^(0+1280),w,c
  4072   002E46  0F30               	addlw	48
  4073   002E48  EC7E  F017         	call	_I2C_ENVIA_LCD_DATA
  4074                           
  4075                           ;I2C_LCD.c: 301:             break;
  4076   002E4C  0012               	return	
  4077   002E4E                     l2394:
  4078                           
  4079                           ;I2C_LCD.c: 303:             I2C_ENVIA_LCD_DATA(centena+0x30);
  4080   002E4E  502E               	movf	I2C_LCD_ESCRIBE_VAR_CHAR@centena^(0+1280),w,c
  4081   002E50  0F30               	addlw	48
  4082   002E52  EC7E  F017         	call	_I2C_ENVIA_LCD_DATA
  4083                           
  4084                           ;I2C_LCD.c: 304:             I2C_ENVIA_LCD_DATA(decena+0x30);
  4085   002E56  502F               	movf	I2C_LCD_ESCRIBE_VAR_CHAR@decena^(0+1280),w,c
  4086   002E58  0F30               	addlw	48
  4087   002E5A  EC7E  F017         	call	_I2C_ENVIA_LCD_DATA
  4088                           
  4089                           ;I2C_LCD.c: 305:             I2C_ENVIA_LCD_DATA(unidad+0x30);
  4090   002E5E  5031               	movf	I2C_LCD_ESCRIBE_VAR_CHAR@unidad^(0+1280),w,c
  4091   002E60  0F30               	addlw	48
  4092   002E62  EC7E  F017         	call	_I2C_ENVIA_LCD_DATA
  4093                           
  4094                           ;I2C_LCD.c: 306:             break;
  4095   002E66  0012               	return	
  4096   002E68                     l2398:
  4097   002E68  502B               	movf	I2C_LCD_ESCRIBE_VAR_CHAR@n_digitos^(0+1280),w,c
  4098   002E6A  6E2C               	movwf	??_I2C_LCD_ESCRIBE_VAR_CHAR^(0+1280),c
  4099   002E6C  6A2D               	clrf	(??_I2C_LCD_ESCRIBE_VAR_CHAR+1)^(0+1280),c
  4100                           
  4101                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4102                           ; Switch size 1, requested type "simple"
  4103                           ; Number of cases is 1, Range of values is 0 to 0
  4104                           ; switch strategies available:
  4105                           ; Name         Instructions Cycles
  4106                           ; simple_byte            4     3 (average)
  4107                           ;	Chosen strategy is simple_byte
  4108   002E6E  502D               	movf	(??_I2C_LCD_ESCRIBE_VAR_CHAR+1)^(0+1280),w,c
  4109   002E70  0A00               	xorlw	0	; case 0
  4110   002E72  A4D8               	btfss	status,2,c
  4111   002E74  0012               	return	
  4112                           
  4113                           ; Switch size 1, requested type "simple"
  4114                           ; Number of cases is 3, Range of values is 1 to 3
  4115                           ; switch strategies available:
  4116                           ; Name         Instructions Cycles
  4117                           ; simple_byte           10     6 (average)
  4118                           ;	Chosen strategy is simple_byte
  4119   002E76  502C               	movf	??_I2C_LCD_ESCRIBE_VAR_CHAR^(0+1280),w,c
  4120   002E78  0A01               	xorlw	1	; case 1
  4121   002E7A  B4D8               	btfsc	status,2,c
  4122   002E7C  D7DA               	goto	l2390
  4123   002E7E  0A03               	xorlw	3	; case 2
  4124   002E80  B4D8               	btfsc	status,2,c
  4125   002E82  D7DC               	goto	l2392
  4126   002E84  0A01               	xorlw	1	; case 3
  4127   002E86  A4D8               	btfss	status,2,c
  4128   002E88  0012               	return	
  4129   002E8A  D7E1               	goto	l2394
  4130   002E8C                     __end_of_I2C_LCD_ESCRIBE_VAR_CHAR:
  4131                           	callstack 0
  4132                           
  4133 ;; *************** function ___lbmod *****************
  4134 ;; Defined at:
  4135 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\lbmod.c"
  4136 ;; Parameters:    Size  Location     Type
  4137 ;;  dividend        1    wreg     unsigned char 
  4138 ;;  divisor         1    0[COMRAM] unsigned char 
  4139 ;; Auto vars:     Size  Location     Type
  4140 ;;  dividend        1    1[COMRAM] unsigned char 
  4141 ;;  rem             1    3[COMRAM] unsigned char 
  4142 ;;  counter         1    2[COMRAM] unsigned char 
  4143 ;; Return value:  Size  Location     Type
  4144 ;;                  1    wreg      unsigned char 
  4145 ;; Registers used:
  4146 ;;		wreg, status,2, status,0
  4147 ;; Tracked objects:
  4148 ;;		On entry : 0/2
  4149 ;;		On exit  : 0/0
  4150 ;;		Unchanged: 0/0
  4151 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  4152 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4153 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4154 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4155 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4156 ;;Total ram usage:        4 bytes
  4157 ;; Hardware stack levels used: 1
  4158 ;; This function calls:
  4159 ;;		Nothing
  4160 ;; This function is called by:
  4161 ;;		_LCD_ESCRIBE_VAR_CHAR
  4162 ;;		_I2C_LCD_ESCRIBE_VAR_CHAR
  4163 ;; This function uses a non-reentrant model
  4164 ;;
  4165                           
  4166                           	psect	text28
  4167   00338C                     __ptext28:
  4168                           	callstack 0
  4169   00338C                     ___lbmod:
  4170                           	callstack 125
  4171                           
  4172                           ;incstack = 0
  4173                           ;___lbmod@dividend stored from wreg
  4174   00338C  6E22               	movwf	___lbmod@dividend^(0+1280),c
  4175   00338E  0E08               	movlw	8
  4176   003390  6E23               	movwf	___lbmod@counter^(0+1280),c
  4177   003392  0E00               	movlw	0
  4178   003394  6E24               	movwf	___lbmod@rem^(0+1280),c
  4179   003396                     l2358:
  4180   003396  90D8               	bcf	status,0,c
  4181   003398  3422               	rlcf	___lbmod@dividend^(0+1280),w,c
  4182   00339A  3424               	rlcf	___lbmod@rem^(0+1280),w,c
  4183   00339C  6E24               	movwf	___lbmod@rem^(0+1280),c
  4184   00339E  90D8               	bcf	status,0,c
  4185   0033A0  3622               	rlcf	___lbmod@dividend^(0+1280),f,c
  4186   0033A2  5021               	movf	___lbmod@divisor^(0+1280),w,c
  4187   0033A4  5C24               	subwf	___lbmod@rem^(0+1280),w,c
  4188   0033A6  A0D8               	btfss	status,0,c
  4189   0033A8  D002               	goto	l2366
  4190   0033AA  5021               	movf	___lbmod@divisor^(0+1280),w,c
  4191   0033AC  5E24               	subwf	___lbmod@rem^(0+1280),f,c
  4192   0033AE                     l2366:
  4193   0033AE  2E23               	decfsz	___lbmod@counter^(0+1280),f,c
  4194   0033B0  D7F2               	goto	l2358
  4195   0033B2  5024               	movf	___lbmod@rem^(0+1280),w,c
  4196   0033B4  0012               	return		;funcret
  4197   0033B6                     __end_of___lbmod:
  4198                           	callstack 0
  4199                           
  4200 ;; *************** function ___lbdiv *****************
  4201 ;; Defined at:
  4202 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\lbdiv.c"
  4203 ;; Parameters:    Size  Location     Type
  4204 ;;  dividend        1    wreg     unsigned char 
  4205 ;;  divisor         1    6[COMRAM] unsigned char 
  4206 ;; Auto vars:     Size  Location     Type
  4207 ;;  dividend        1    7[COMRAM] unsigned char 
  4208 ;;  quotient        1    9[COMRAM] unsigned char 
  4209 ;;  counter         1    8[COMRAM] unsigned char 
  4210 ;; Return value:  Size  Location     Type
  4211 ;;                  1    wreg      unsigned char 
  4212 ;; Registers used:
  4213 ;;		wreg, status,2, status,0
  4214 ;; Tracked objects:
  4215 ;;		On entry : 0/2
  4216 ;;		On exit  : 0/0
  4217 ;;		Unchanged: 0/0
  4218 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  4219 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4220 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4221 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4222 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4223 ;;Total ram usage:        4 bytes
  4224 ;; Hardware stack levels used: 1
  4225 ;; This function calls:
  4226 ;;		Nothing
  4227 ;; This function is called by:
  4228 ;;		_LCD_ESCRIBE_VAR_CHAR
  4229 ;;		_I2C_LCD_ESCRIBE_VAR_CHAR
  4230 ;; This function uses a non-reentrant model
  4231 ;;
  4232                           
  4233                           	psect	text29
  4234   00322A                     __ptext29:
  4235                           	callstack 0
  4236   00322A                     ___lbdiv:
  4237                           	callstack 125
  4238                           
  4239                           ;incstack = 0
  4240                           ;___lbdiv@dividend stored from wreg
  4241   00322A  6E28               	movwf	___lbdiv@dividend^(0+1280),c
  4242   00322C  0E00               	movlw	0
  4243   00322E  6E2A               	movwf	___lbdiv@quotient^(0+1280),c
  4244   003230  5027               	movf	___lbdiv@divisor^(0+1280),w,c
  4245   003232  B4D8               	btfsc	status,2,c
  4246   003234  D015               	goto	l2352
  4247   003236  0E01               	movlw	1
  4248   003238  6E29               	movwf	___lbdiv@counter^(0+1280),c
  4249   00323A  D003               	goto	l2340
  4250   00323C                     l2336:
  4251   00323C  90D8               	bcf	status,0,c
  4252   00323E  3627               	rlcf	___lbdiv@divisor^(0+1280),f,c
  4253   003240  2A29               	incf	___lbdiv@counter^(0+1280),f,c
  4254   003242                     l2340:
  4255   003242  AE27               	btfss	___lbdiv@divisor^(0+1280),7,c
  4256   003244  D7FB               	goto	l2336
  4257   003246                     u660:
  4258   003246  90D8               	bcf	status,0,c
  4259   003248  362A               	rlcf	___lbdiv@quotient^(0+1280),f,c
  4260   00324A  5027               	movf	___lbdiv@divisor^(0+1280),w,c
  4261   00324C  5C28               	subwf	___lbdiv@dividend^(0+1280),w,c
  4262   00324E  A0D8               	btfss	status,0,c
  4263   003250  D003               	goto	l2348
  4264   003252  5027               	movf	___lbdiv@divisor^(0+1280),w,c
  4265   003254  5E28               	subwf	___lbdiv@dividend^(0+1280),f,c
  4266   003256  802A               	bsf	___lbdiv@quotient^(0+1280),0,c
  4267   003258                     l2348:
  4268   003258  90D8               	bcf	status,0,c
  4269   00325A  3227               	rrcf	___lbdiv@divisor^(0+1280),f,c
  4270   00325C  2E29               	decfsz	___lbdiv@counter^(0+1280),f,c
  4271   00325E  D7F3               	goto	u660
  4272   003260                     l2352:
  4273   003260  502A               	movf	___lbdiv@quotient^(0+1280),w,c
  4274   003262  0012               	return		;funcret
  4275   003264                     __end_of___lbdiv:
  4276                           	callstack 0
  4277                           
  4278 ;; *************** function ___awmod *****************
  4279 ;; Defined at:
  4280 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awmod.c"
  4281 ;; Parameters:    Size  Location     Type
  4282 ;;  dividend        2    0[COMRAM] int 
  4283 ;;  divisor         2    2[COMRAM] int 
  4284 ;; Auto vars:     Size  Location     Type
  4285 ;;  sign            1    5[COMRAM] unsigned char 
  4286 ;;  counter         1    4[COMRAM] unsigned char 
  4287 ;; Return value:  Size  Location     Type
  4288 ;;                  2    0[COMRAM] int 
  4289 ;; Registers used:
  4290 ;;		wreg, status,2, status,0
  4291 ;; Tracked objects:
  4292 ;;		On entry : 0/2
  4293 ;;		On exit  : 0/0
  4294 ;;		Unchanged: 0/0
  4295 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  4296 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4297 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4298 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4299 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4300 ;;Total ram usage:        6 bytes
  4301 ;; Hardware stack levels used: 1
  4302 ;; This function calls:
  4303 ;;		Nothing
  4304 ;; This function is called by:
  4305 ;;		_LCD_ESCRIBE_VAR_CHAR
  4306 ;;		_I2C_LCD_ESCRIBE_VAR_CHAR
  4307 ;; This function uses a non-reentrant model
  4308 ;;
  4309                           
  4310                           	psect	text30
  4311   002E8C                     __ptext30:
  4312                           	callstack 0
  4313   002E8C                     ___awmod:
  4314                           	callstack 125
  4315                           
  4316                           ;incstack = 0
  4317   002E8C  0E00               	movlw	0
  4318   002E8E  6E26               	movwf	___awmod@sign^(0+1280),c
  4319   002E90  AE22               	btfss	(___awmod@dividend+1)^(0+1280),7,c
  4320   002E92  D006               	goto	l2302
  4321   002E94  6C21               	negf	___awmod@dividend^(0+1280),c
  4322   002E96  1E22               	comf	(___awmod@dividend+1)^(0+1280),f,c
  4323   002E98  B0D8               	btfsc	status,0,c
  4324   002E9A  2A22               	incf	(___awmod@dividend+1)^(0+1280),f,c
  4325   002E9C  0E01               	movlw	1
  4326   002E9E  6E26               	movwf	___awmod@sign^(0+1280),c
  4327   002EA0                     l2302:
  4328   002EA0  AE24               	btfss	(___awmod@divisor+1)^(0+1280),7,c
  4329   002EA2  D004               	goto	l2306
  4330   002EA4  6C23               	negf	___awmod@divisor^(0+1280),c
  4331   002EA6  1E24               	comf	(___awmod@divisor+1)^(0+1280),f,c
  4332   002EA8  B0D8               	btfsc	status,0,c
  4333   002EAA  2A24               	incf	(___awmod@divisor+1)^(0+1280),f,c
  4334   002EAC                     l2306:
  4335   002EAC  5023               	movf	___awmod@divisor^(0+1280),w,c
  4336   002EAE  1024               	iorwf	(___awmod@divisor+1)^(0+1280),w,c
  4337   002EB0  B4D8               	btfsc	status,2,c
  4338   002EB2  D018               	goto	l2322
  4339   002EB4  0E01               	movlw	1
  4340   002EB6  6E25               	movwf	___awmod@counter^(0+1280),c
  4341   002EB8  D004               	goto	l2312
  4342   002EBA                     l2310:
  4343   002EBA  90D8               	bcf	status,0,c
  4344   002EBC  3623               	rlcf	___awmod@divisor^(0+1280),f,c
  4345   002EBE  3624               	rlcf	(___awmod@divisor+1)^(0+1280),f,c
  4346   002EC0  2A25               	incf	___awmod@counter^(0+1280),f,c
  4347   002EC2                     l2312:
  4348   002EC2  AE24               	btfss	(___awmod@divisor+1)^(0+1280),7,c
  4349   002EC4  D7FA               	goto	l2310
  4350   002EC6                     u620:
  4351   002EC6  5023               	movf	___awmod@divisor^(0+1280),w,c
  4352   002EC8  5C21               	subwf	___awmod@dividend^(0+1280),w,c
  4353   002ECA  5024               	movf	(___awmod@divisor+1)^(0+1280),w,c
  4354   002ECC  5822               	subwfb	(___awmod@dividend+1)^(0+1280),w,c
  4355   002ECE  A0D8               	btfss	status,0,c
  4356   002ED0  D004               	goto	l2318
  4357   002ED2  5023               	movf	___awmod@divisor^(0+1280),w,c
  4358   002ED4  5E21               	subwf	___awmod@dividend^(0+1280),f,c
  4359   002ED6  5024               	movf	(___awmod@divisor+1)^(0+1280),w,c
  4360   002ED8  5A22               	subwfb	(___awmod@dividend+1)^(0+1280),f,c
  4361   002EDA                     l2318:
  4362   002EDA  90D8               	bcf	status,0,c
  4363   002EDC  3224               	rrcf	(___awmod@divisor+1)^(0+1280),f,c
  4364   002EDE  3223               	rrcf	___awmod@divisor^(0+1280),f,c
  4365   002EE0  2E25               	decfsz	___awmod@counter^(0+1280),f,c
  4366   002EE2  D7F1               	goto	u620
  4367   002EE4                     l2322:
  4368   002EE4  5026               	movf	___awmod@sign^(0+1280),w,c
  4369   002EE6  B4D8               	btfsc	status,2,c
  4370   002EE8  D004               	goto	l2326
  4371   002EEA  6C21               	negf	___awmod@dividend^(0+1280),c
  4372   002EEC  1E22               	comf	(___awmod@dividend+1)^(0+1280),f,c
  4373   002EEE  B0D8               	btfsc	status,0,c
  4374   002EF0  2A22               	incf	(___awmod@dividend+1)^(0+1280),f,c
  4375   002EF2                     l2326:
  4376   002EF2  C521  F521         	movff	___awmod@dividend,?___awmod
  4377   002EF6  C522  F522         	movff	___awmod@dividend+1,?___awmod+1
  4378   002EFA  0012               	return		;funcret
  4379   002EFC                     __end_of___awmod:
  4380                           	callstack 0
  4381                           
  4382 ;; *************** function _I2C_ENVIA_LCD_DATA *****************
  4383 ;; Defined at:
  4384 ;;		line 114 in file "I2C_LCD.c"
  4385 ;; Parameters:    Size  Location     Type
  4386 ;;  data            1    wreg     unsigned char 
  4387 ;; Auto vars:     Size  Location     Type
  4388 ;;  data            1    3[COMRAM] unsigned char 
  4389 ;;  lownibble       1    5[COMRAM] unsigned char 
  4390 ;;  highnibble      1    4[COMRAM] unsigned char 
  4391 ;; Return value:  Size  Location     Type
  4392 ;;                  1    wreg      void 
  4393 ;; Registers used:
  4394 ;;		wreg, status,2, status,0, cstack
  4395 ;; Tracked objects:
  4396 ;;		On entry : 0/2
  4397 ;;		On exit  : 0/0
  4398 ;;		Unchanged: 0/0
  4399 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  4400 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4401 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4402 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4403 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4404 ;;Total ram usage:        4 bytes
  4405 ;; Hardware stack levels used: 1
  4406 ;; Hardware stack levels required when called: 1
  4407 ;; This function calls:
  4408 ;;		_I2C1_WRITESINGLEBYTE
  4409 ;; This function is called by:
  4410 ;;		_I2C_ESCRIBE_MENSAJE2
  4411 ;;		_I2C_LCD_ESCRIBE_VAR_CHAR
  4412 ;;		_I2C_LCD_VARCHAR_BITS
  4413 ;;		_I2C_LCD_VARCHAR_HEX
  4414 ;; This function uses a non-reentrant model
  4415 ;;
  4416                           
  4417                           	psect	text31
  4418   002EFC                     __ptext31:
  4419                           	callstack 0
  4420   002EFC                     _I2C_ENVIA_LCD_DATA:
  4421                           	callstack 123
  4422                           
  4423                           ;incstack = 0
  4424                           ;I2C_ENVIA_LCD_DATA@data stored from wreg
  4425   002EFC  6E24               	movwf	I2C_ENVIA_LCD_DATA@data^(0+1280),c
  4426                           
  4427                           ;I2C_LCD.c: 115:     unsigned char highnibble;;I2C_LCD.c: 116:     unsigned char lownibb
      +                          le;;I2C_LCD.c: 118:     highnibble = (data & 0xF0) | 0x08;
  4428   002EFE  5024               	movf	I2C_ENVIA_LCD_DATA@data^(0+1280),w,c
  4429   002F00  0BF0               	andlw	240
  4430   002F02  0908               	iorlw	8
  4431   002F04  6E25               	movwf	I2C_ENVIA_LCD_DATA@highnibble^(0+1280),c
  4432                           
  4433                           ;I2C_LCD.c: 119:     lownibble = (unsigned char)(((data & 0x0F)<<4)| 0x08);
  4434   002F06  C524  F523         	movff	I2C_ENVIA_LCD_DATA@data,??_I2C_ENVIA_LCD_DATA
  4435   002F0A  0E0F               	movlw	15
  4436   002F0C  1623               	andwf	??_I2C_ENVIA_LCD_DATA^(0+1280),f,c
  4437   002F0E  3823               	swapf	??_I2C_ENVIA_LCD_DATA^(0+1280),w,c
  4438   002F10  0BF0               	andlw	240
  4439   002F12  0908               	iorlw	8
  4440   002F14  6E26               	movwf	I2C_ENVIA_LCD_DATA@lownibble^(0+1280),c
  4441                           
  4442                           ;I2C_LCD.c: 121:     I2C1_WRITESINGLEBYTE(0x27,(highnibble | 0x04 | 0x01));
  4443   002F16  5025               	movf	I2C_ENVIA_LCD_DATA@highnibble^(0+1280),w,c
  4444   002F18  0905               	iorlw	5
  4445   002F1A  6E21               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  4446   002F1C  0E27               	movlw	39
  4447   002F1E  ECEE  F019         	call	_I2C1_WRITESINGLEBYTE
  4448                           
  4449                           ; BSR set to: 2
  4450                           ;I2C_LCD.c: 122:     _delay((unsigned long)((20)*(32000000UL/4000000.0)));
  4451   002F22  0E35               	movlw	53
  4452   002F24                     u1367:
  4453   002F24  2EE8               	decfsz	wreg,f,c
  4454   002F26  D7FE               	bra	u1367
  4455   002F28  0000               	nop	
  4456                           
  4457                           ;I2C_LCD.c: 123:     I2C1_WRITESINGLEBYTE(0x27,(highnibble | 0x01));
  4458   002F2A  5025               	movf	I2C_ENVIA_LCD_DATA@highnibble^(0+1280),w,c
  4459   002F2C  0901               	iorlw	1
  4460   002F2E  6E21               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  4461   002F30  0E27               	movlw	39
  4462   002F32  ECEE  F019         	call	_I2C1_WRITESINGLEBYTE
  4463                           
  4464                           ; BSR set to: 2
  4465                           ;I2C_LCD.c: 124:     _delay((unsigned long)((20)*(32000000UL/4000000.0)));
  4466   002F36  0E35               	movlw	53
  4467   002F38                     u1377:
  4468   002F38  2EE8               	decfsz	wreg,f,c
  4469   002F3A  D7FE               	bra	u1377
  4470   002F3C  0000               	nop	
  4471                           
  4472                           ;I2C_LCD.c: 126:     I2C1_WRITESINGLEBYTE(0x27,(lownibble | 0x04 | 0x01));
  4473   002F3E  5026               	movf	I2C_ENVIA_LCD_DATA@lownibble^(0+1280),w,c
  4474   002F40  0905               	iorlw	5
  4475   002F42  6E21               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  4476   002F44  0E27               	movlw	39
  4477   002F46  ECEE  F019         	call	_I2C1_WRITESINGLEBYTE
  4478                           
  4479                           ; BSR set to: 2
  4480                           ;I2C_LCD.c: 127:     _delay((unsigned long)((20)*(32000000UL/4000000.0)));
  4481   002F4A  0E35               	movlw	53
  4482   002F4C                     u1387:
  4483   002F4C  2EE8               	decfsz	wreg,f,c
  4484   002F4E  D7FE               	bra	u1387
  4485   002F50  0000               	nop	
  4486                           
  4487                           ;I2C_LCD.c: 128:     I2C1_WRITESINGLEBYTE(0x27,(lownibble | 0x01));
  4488   002F52  5026               	movf	I2C_ENVIA_LCD_DATA@lownibble^(0+1280),w,c
  4489   002F54  0901               	iorlw	1
  4490   002F56  6E21               	movwf	I2C1_WRITESINGLEBYTE@dato^(0+1280),c
  4491   002F58  0E27               	movlw	39
  4492   002F5A  ECEE  F019         	call	_I2C1_WRITESINGLEBYTE
  4493                           
  4494                           ; BSR set to: 2
  4495                           ;I2C_LCD.c: 129:     _delay((unsigned long)((20)*(32000000UL/4000000.0)));
  4496   002F5E  0E35               	movlw	53
  4497   002F60                     u1397:
  4498   002F60  2EE8               	decfsz	wreg,f,c
  4499   002F62  D7FE               	bra	u1397
  4500   002F64  0000               	nop	
  4501   002F66  0012               	return		;funcret
  4502   002F68                     __end_of_I2C_ENVIA_LCD_DATA:
  4503                           	callstack 0
  4504                           
  4505 ;; *************** function _I2C1_WRITESINGLEBYTE *****************
  4506 ;; Defined at:
  4507 ;;		line 38 in file "I2C_LCD.c"
  4508 ;; Parameters:    Size  Location     Type
  4509 ;;  direccion       1    wreg     unsigned char 
  4510 ;;  dato            1    0[COMRAM] unsigned char 
  4511 ;; Auto vars:     Size  Location     Type
  4512 ;;  direccion       1    1[COMRAM] unsigned char 
  4513 ;; Return value:  Size  Location     Type
  4514 ;;                  1    wreg      void 
  4515 ;; Registers used:
  4516 ;;		wreg, status,2, status,0
  4517 ;; Tracked objects:
  4518 ;;		On entry : 0/2
  4519 ;;		On exit  : 3F/2
  4520 ;;		Unchanged: 0/0
  4521 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  4522 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4523 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4524 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4525 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4526 ;;Total ram usage:        2 bytes
  4527 ;; Hardware stack levels used: 1
  4528 ;; This function calls:
  4529 ;;		Nothing
  4530 ;; This function is called by:
  4531 ;;		_I2C_ENVIA_LCD_DATA
  4532 ;;		_I2C_ENVIA_LCD_CMD
  4533 ;;		_I2C_LCD_INIT
  4534 ;; This function uses a non-reentrant model
  4535 ;;
  4536                           
  4537                           	psect	text32
  4538   0033DC                     __ptext32:
  4539                           	callstack 0
  4540   0033DC                     _I2C1_WRITESINGLEBYTE:
  4541                           	callstack 123
  4542                           
  4543                           ;incstack = 0
  4544                           ;I2C1_WRITESINGLEBYTE@direccion stored from wreg
  4545   0033DC  6E22               	movwf	I2C1_WRITESINGLEBYTE@direccion^(0+1280),c
  4546                           
  4547                           ;I2C_LCD.c: 39:     I2C1CNT = 1;
  4548   0033DE  0E01               	movlw	1
  4549   0033E0  0102               	movlb	2	; () banked
  4550   0033E2  6F8D               	movwf	141,b	;volatile
  4551                           
  4552                           ; BSR set to: 2
  4553                           ;I2C_LCD.c: 40:     I2C1ADB1 = (direccion << 1) & 0xFE;
  4554   0033E4  5022               	movf	I2C1_WRITESINGLEBYTE@direccion^(0+1280),w,c
  4555   0033E6  2422               	addwf	I2C1_WRITESINGLEBYTE@direccion^(0+1280),w,c
  4556   0033E8  0BFE               	andlw	254
  4557   0033EA  6F8F               	movwf	143,b	;volatile
  4558                           
  4559                           ; BSR set to: 2
  4560                           ;I2C_LCD.c: 41:     I2C1TXB = dato;
  4561   0033EC  C521  F28C         	movff	I2C1_WRITESINGLEBYTE@dato,652	;volatile
  4562                           
  4563                           ; BSR set to: 2
  4564                           ;I2C_LCD.c: 42:     I2C1CON0bits.S = 1;
  4565   0033F0  8B94               	bsf	148,5,b	;volatile
  4566   0033F2                     l207:
  4567                           
  4568                           ; BSR set to: 2
  4569   0033F2  AB99               	btfss	153,5,b	;volatile
  4570   0033F4  D7FE               	goto	l207
  4571   0033F6                     u430:
  4572                           
  4573                           ; BSR set to: 2
  4574   0033F6  BB95               	btfsc	149,5,b	;volatile
  4575   0033F8  D7FE               	goto	u430
  4576   0033FA                     u440:
  4577                           
  4578                           ; BSR set to: 2
  4579   0033FA  B59A               	btfsc	154,2,b	;volatile
  4580   0033FC  0012               	return	
  4581   0033FE  D7FD               	goto	u440
  4582   003400                     __end_of_I2C1_WRITESINGLEBYTE:
  4583                           	callstack 0
  4584                           
  4585 ;; *************** function _I2C1_Write_MCP23017 *****************
  4586 ;; Defined at:
  4587 ;;		line 61 in file "maincode05.c"
  4588 ;; Parameters:    Size  Location     Type
  4589 ;;  direccion       1    wreg     unsigned char 
  4590 ;;  registro        1    0[COMRAM] unsigned char 
  4591 ;;  dato            1    1[COMRAM] unsigned char 
  4592 ;; Auto vars:     Size  Location     Type
  4593 ;;  direccion       1    2[COMRAM] unsigned char 
  4594 ;; Return value:  Size  Location     Type
  4595 ;;                  1    wreg      void 
  4596 ;; Registers used:
  4597 ;;		wreg, status,2, status,0
  4598 ;; Tracked objects:
  4599 ;;		On entry : 0/0
  4600 ;;		On exit  : 3F/2
  4601 ;;		Unchanged: 0/0
  4602 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  4603 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4604 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4605 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4606 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4607 ;;Total ram usage:        3 bytes
  4608 ;; Hardware stack levels used: 1
  4609 ;; This function calls:
  4610 ;;		Nothing
  4611 ;; This function is called by:
  4612 ;;		_main
  4613 ;; This function uses a non-reentrant model
  4614 ;;
  4615                           
  4616                           	psect	text33
  4617   0032D4                     __ptext33:
  4618                           	callstack 0
  4619   0032D4                     _I2C1_Write_MCP23017:
  4620                           	callstack 126
  4621                           
  4622                           ; BSR set to: 2
  4623                           ;incstack = 0
  4624                           ;I2C1_Write_MCP23017@direccion stored from wreg
  4625   0032D4  6E23               	movwf	I2C1_Write_MCP23017@direccion^(0+1280),c
  4626   0032D6                     
  4627                           ;maincode05.c: 62:     while(I2C1STAT0bits.BFRE == 0);
  4628   0032D6  0102               	movlb	2	; () banked
  4629   0032D8  AF98               	btfss	152,7,b	;volatile
  4630   0032DA  D7FD               	goto	l2476
  4631                           
  4632                           ; BSR set to: 2
  4633                           ;maincode05.c: 63:     I2C1CNT = 2;
  4634   0032DC  0E02               	movlw	2
  4635   0032DE  6F8D               	movwf	141,b	;volatile
  4636                           
  4637                           ; BSR set to: 2
  4638                           ;maincode05.c: 64:     I2C1ADB1 = (direccion << 1) & 0xFE;
  4639   0032E0  5023               	movf	I2C1_Write_MCP23017@direccion^(0+1280),w,c
  4640   0032E2  2423               	addwf	I2C1_Write_MCP23017@direccion^(0+1280),w,c
  4641   0032E4  0BFE               	andlw	254
  4642   0032E6  6F8F               	movwf	143,b	;volatile
  4643                           
  4644                           ; BSR set to: 2
  4645                           ;maincode05.c: 65:     I2C1TXB = registro;
  4646   0032E8  C521  F28C         	movff	I2C1_Write_MCP23017@registro,652	;volatile
  4647                           
  4648                           ; BSR set to: 2
  4649                           ;maincode05.c: 66:     I2C1CON0bits.S = 1;
  4650   0032EC  8B94               	bsf	148,5,b	;volatile
  4651   0032EE                     l419:
  4652                           
  4653                           ; BSR set to: 2
  4654   0032EE  AB99               	btfss	153,5,b	;volatile
  4655   0032F0  D7FE               	goto	l419
  4656   0032F2                     u730:
  4657                           
  4658                           ; BSR set to: 2
  4659   0032F2  BB95               	btfsc	149,5,b	;volatile
  4660   0032F4  D7FE               	goto	u730
  4661                           
  4662                           ; BSR set to: 2
  4663                           ;maincode05.c: 69:     I2C1TXB = dato;
  4664   0032F6  C522  F28C         	movff	I2C1_Write_MCP23017@dato,652	;volatile
  4665   0032FA                     l425:
  4666                           
  4667                           ; BSR set to: 2
  4668   0032FA  AB99               	btfss	153,5,b	;volatile
  4669   0032FC  D7FE               	goto	l425
  4670   0032FE                     u750:
  4671                           
  4672                           ; BSR set to: 2
  4673   0032FE  BB95               	btfsc	149,5,b	;volatile
  4674   003300  D7FE               	goto	u750
  4675   003302                     u760:
  4676                           
  4677                           ; BSR set to: 2
  4678   003302  B59A               	btfsc	154,2,b	;volatile
  4679   003304  0012               	return	
  4680   003306  D7FD               	goto	u760
  4681   003308                     __end_of_I2C1_Write_MCP23017:
  4682                           	callstack 0
  4683                           
  4684                           	psect	rparam
  4685   000000                     
  4686                           	psect	config
  4687                           
  4688                           ;Config register CONFIG1 @ 0x300000
  4689                           ;	External Oscillator Selection
  4690                           ;	FEXTOSC = OFF, Oscillator not enabled
  4691                           ;	Reset Oscillator Selection
  4692                           ;	RSTOSC = EXTOSC, EXTOSC operating per FEXTOSC bits (device manufacturing default)
  4693   300000                     	org	3145728
  4694   300000  FC                 	db	252
  4695                           
  4696                           ;Config register CONFIG2 @ 0x300001
  4697                           ;	Clock out Enable bit
  4698                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
  4699                           ;	PRLOCKED One-Way Set Enable bit
  4700                           ;	PR1WAY = ON, PRLOCKED bit can be cleared and set only once
  4701                           ;	Clock Switch Enable bit
  4702                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
  4703                           ;	Fail-Safe Clock Monitor Enable bit
  4704                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
  4705   300001                     	org	3145729
  4706   300001  FF                 	db	255
  4707                           
  4708                           ;Config register CONFIG3 @ 0x300002
  4709                           ;	MCLR Enable bit
  4710                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
  4711                           ;	Power-up timer selection bits
  4712                           ;	PWRTS = PWRT_64, PWRT set at 64ms
  4713                           ;	Multi-vector enable bit
  4714                           ;	MVECEN = ON, Multi-vector enabled, Vector table used for interrupts
  4715                           ;	IVTLOCK bit One-way set enable bit
  4716                           ;	IVT1WAY = ON, IVTLOCKED bit can be cleared and set only once
  4717                           ;	Low Power BOR Enable bit
  4718                           ;	LPBOREN = OFF, Low-Power BOR disabled
  4719                           ;	Brown-out Reset Enable bits
  4720                           ;	BOREN = OFF, Brown-out Reset disabled
  4721   300002                     	org	3145730
  4722   300002  3D                 	db	61
  4723                           
  4724                           ;Config register CONFIG4 @ 0x300003
  4725                           ;	Brown-out Reset Voltage Selection bits
  4726                           ;	BORV = VBOR_1P9, Brown-out Reset Voltage (VBOR) set to 1.9V
  4727                           ;	ZCD Disable bit
  4728                           ;	ZCD = OFF, ZCD module is disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCD
      +                          CON
  4729                           ;	PPSLOCK bit One-Way Set Enable bit
  4730                           ;	PPS1WAY = ON, PPSLOCKED bit can be cleared and set only once; PPS registers remain loc
      +                          ked after one clear/set cycle
  4731                           ;	Stack Full/Underflow Reset Enable bit
  4732                           ;	STVREN = ON, Stack full/underflow will cause Reset
  4733                           ;	Low Voltage Programming Enable bit
  4734                           ;	LVP = OFF, HV on MCLR/VPP must be used for programming
  4735                           ;	Extended Instruction Set Enable bit
  4736                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
  4737   300003                     	org	3145731
  4738   300003  DF                 	db	223
  4739                           
  4740                           ;Config register CONFIG5 @ 0x300004
  4741                           ;	WDT Period selection bits
  4742                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  4743                           ;	WDT operating mode
  4744                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
  4745   300004                     	org	3145732
  4746   300004  9F                 	db	159
  4747                           
  4748                           ;Config register CONFIG6 @ 0x300005
  4749                           ;	WDT Window Select bits
  4750                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
  4751                           ;	WDT input clock selector
  4752                           ;	WDTCCS = SC, Software Control
  4753   300005                     	org	3145733
  4754   300005  FF                 	db	255
  4755                           
  4756                           ;Config register CONFIG7 @ 0x300006
  4757                           ;	Boot Block Size selection bits
  4758                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
  4759                           ;	Boot Block enable bit
  4760                           ;	BBEN = OFF, Boot block disabled
  4761                           ;	Storage Area Flash enable bit
  4762                           ;	SAFEN = OFF, SAF disabled
  4763                           ;	Background Debugger
  4764                           ;	DEBUG = OFF, Background Debugger disabled
  4765   300006                     	org	3145734
  4766   300006  FF                 	db	255
  4767                           
  4768                           ;Config register CONFIG8 @ 0x300007
  4769                           ;	Boot Block Write Protection bit
  4770                           ;	WRTB = OFF, Boot Block not Write protected
  4771                           ;	Configuration Register Write Protection bit
  4772                           ;	WRTC = OFF, Configuration registers not Write protected
  4773                           ;	Data EEPROM Write Protection bit
  4774                           ;	WRTD = OFF, Data EEPROM not Write protected
  4775                           ;	SAF Write protection bit
  4776                           ;	WRTSAF = OFF, SAF not Write Protected
  4777                           ;	Application Block write protection bit
  4778                           ;	WRTAPP = OFF, Application Block not write protected
  4779   300007                     	org	3145735
  4780   300007  FF                 	db	255
  4781                           
  4782                           ;Config register CONFIG10 @ 0x300009
  4783                           ;	PFM and Data EEPROM Code Protection bit
  4784                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
  4785   300009                     	org	3145737
  4786   300009  FF                 	db	255
  4787                           tosu	equ	0x4FF
  4788                           tosh	equ	0x4FE
  4789                           tosl	equ	0x4FD
  4790                           stkptr	equ	0x4FC
  4791                           pclatu	equ	0x4FB
  4792                           pclath	equ	0x4FA
  4793                           pcl	equ	0x4F9
  4794                           tblptru	equ	0x4F8
  4795                           tblptrh	equ	0x4F7
  4796                           tblptrl	equ	0x4F6
  4797                           tablat	equ	0x4F5
  4798                           prodh	equ	0x4F4
  4799                           prodl	equ	0x4F3
  4800                           indf0	equ	0x4EF
  4801                           postinc0	equ	0x4EE
  4802                           postdec0	equ	0x4ED
  4803                           preinc0	equ	0x4EC
  4804                           plusw0	equ	0x4EB
  4805                           fsr0h	equ	0x4EA
  4806                           fsr0l	equ	0x4E9
  4807                           wreg	equ	0x4E8
  4808                           indf1	equ	0x4E7
  4809                           postinc1	equ	0x4E6
  4810                           postdec1	equ	0x4E5
  4811                           preinc1	equ	0x4E4
  4812                           plusw1	equ	0x4E3
  4813                           fsr1h	equ	0x4E2
  4814                           fsr1l	equ	0x4E1
  4815                           bsr	equ	0x4E0
  4816                           indf2	equ	0x4DF
  4817                           postinc2	equ	0x4DE
  4818                           postdec2	equ	0x4DD
  4819                           preinc2	equ	0x4DC
  4820                           plusw2	equ	0x4DB
  4821                           fsr2h	equ	0x4DA
  4822                           fsr2l	equ	0x4D9
  4823                           status	equ	0x4D8

Data Sizes:
    Strings     60
    Constant    0
    Data        32
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     20      52
    BANK5           160      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0
    BANK32          256      0       0
    BANK33          256      0       0
    BANK34          256      0       0
    BANK35          256      0       0
    BANK36          256      0       0

Pointer List with Targets:

    ESCRIBE_MENSAJE2@cadena	PTR const unsigned char  size(1) Largest target is 16
		 -> STR_1(CODE[14]), STR_2(CODE[16]), STR_5(CODE[5]), STR_6(CODE[5]), 
		 -> STR_7(CODE[5]), 

    I2C_ESCRIBE_MENSAJE2@cadena	PTR const unsigned char  size(1) Largest target is 15
		 -> STR_10(CODE[5]), STR_3(CODE[14]), STR_4(CODE[15]), STR_8(CODE[5]), 
		 -> STR_9(CODE[5]), 

    strlen@a	PTR const unsigned char  size(1) Largest target is 16
		 -> STR_1(CODE[14]), STR_10(CODE[5]), STR_2(CODE[16]), STR_3(CODE[14]), 
		 -> STR_4(CODE[15]), STR_5(CODE[5]), STR_6(CODE[5]), STR_7(CODE[5]), 
		 -> STR_8(CODE[5]), STR_9(CODE[5]), 

    strlen@s	PTR const unsigned char  size(1) Largest target is 16
		 -> STR_1(CODE[14]), STR_10(CODE[5]), STR_2(CODE[16]), STR_3(CODE[14]), 
		 -> STR_4(CODE[15]), STR_5(CODE[5]), STR_6(CODE[5]), STR_7(CODE[5]), 
		 -> STR_8(CODE[5]), STR_9(CODE[5]), 


Critical Paths under _main in COMRAM

    _main->_I2C_LCD_ESCRIBE_VAR_CHAR
    _main->_LCD_ESCRIBE_VAR_CHAR
    _splash_screen->_I2C_ESCRIBE_MENSAJE2
    _POS_CURSOR->_ENVIA_LCD_CMD
    _I2C_POS_CURSOR->_I2C_ENVIA_LCD_CMD
    _I2C_ESCRIBE_MENSAJE2->_I2C_ENVIA_LCD_DATA
    _ESCRIBE_MENSAJE2->_ENVIA_CHAR
    _ESCRIBE_MENSAJE2->_strlen
    _configuro->_I2C_LCD_INIT
    _LCD_INIT->_CURSOR_ONOFF
    _LCD_INIT->_LCD_CONFIG
    _LCD_CONFIG->_ENVIA_LCD_CMD
    _CURSOR_ONOFF->_ENVIA_LCD_CMD
    _CURSOR_HOME->_ENVIA_LCD_CMD
    _BORRAR_LCD->_ENVIA_LCD_CMD
    _ENVIA_LCD_CMD->_ENVIA_NIBBLE
    _I2C_LCD_INIT->_I2C_CURSOR_ONOFF
    _I2C_CURSOR_ONOFF->_I2C_ENVIA_LCD_CMD
    _I2C_CURSOR_HOME->_I2C_ENVIA_LCD_CMD
    _I2C_BORRAR_LCD->_I2C_ENVIA_LCD_CMD
    _I2C_ENVIA_LCD_CMD->_I2C1_WRITESINGLEBYTE
    _LCD_VARCHAR_HEX->_ENVIA_CHAR
    _LCD_VARCHAR_BITS->_ENVIA_CHAR
    _LCD_ESCRIBE_VAR_CHAR->___lbdiv
    _ENVIA_CHAR->_ENVIA_NIBBLE
    _I2C_LCD_VARCHAR_HEX->_I2C_ENVIA_LCD_DATA
    _I2C_LCD_VARCHAR_BITS->_I2C_ENVIA_LCD_DATA
    _I2C_LCD_ESCRIBE_VAR_CHAR->___lbdiv
    ___lbdiv->___awmod
    _I2C_ENVIA_LCD_DATA->_I2C1_WRITESINGLEBYTE

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _main in BANK32

    None.

Critical Paths under _main in BANK33

    None.

Critical Paths under _main in BANK34

    None.

Critical Paths under _main in BANK35

    None.

Critical Paths under _main in BANK36

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   63085
                                             17 COMRAM     3     3      0
                   _ESCRIBE_MENSAJE2
                _I2C1_Write_MCP23017
               _I2C_ESCRIBE_MENSAJE2
           _I2C_LCD_ESCRIBE_VAR_CHAR
               _I2C_LCD_VARCHAR_BITS
                _I2C_LCD_VARCHAR_HEX
                     _I2C_POS_CURSOR
               _LCD_ESCRIBE_VAR_CHAR
                   _LCD_VARCHAR_BITS
                    _LCD_VARCHAR_HEX
                         _POS_CURSOR
                          _configuro
                      _splash_screen
 ---------------------------------------------------------------------------------
 (1) _splash_screen                                        2     2      0   16111
                                             10 COMRAM     2     2      0
                         _BORRAR_LCD
                   _ESCRIBE_MENSAJE2
                     _I2C_BORRAR_LCD
               _I2C_ESCRIBE_MENSAJE2
                     _I2C_POS_CURSOR
                         _POS_CURSOR
 ---------------------------------------------------------------------------------
 (2) _POS_CURSOR                                           2     1      1    1087
                                              3 COMRAM     2     1      1
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _I2C_POS_CURSOR                                       2     1      1    5142
                                              6 COMRAM     2     1      1
                  _I2C_ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _I2C_ESCRIBE_MENSAJE2                                 4     3      1    4866
                                              6 COMRAM     4     3      1
                 _I2C_ENVIA_LCD_DATA
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _ESCRIBE_MENSAJE2                                     4     3      1     811
                                              3 COMRAM     4     3      1
                         _ENVIA_CHAR
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _strlen                                               3     1      2     242
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _configuro                                            0     0      0   16775
                       _I2C_LCD_INIT
                           _LCD_INIT
 ---------------------------------------------------------------------------------
 (2) _LCD_INIT                                             1     1      0     345
                                              4 COMRAM     1     1      0
                         _BORRAR_LCD
                        _CURSOR_HOME
                       _CURSOR_ONOFF
                         _LCD_CONFIG
 ---------------------------------------------------------------------------------
 (3) _LCD_CONFIG                                           1     1      0      90
                                              3 COMRAM     1     1      0
                      _ENVIA_LCD_CMD
                       _ENVIA_NIBBLE
 ---------------------------------------------------------------------------------
 (3) _CURSOR_ONOFF                                         1     1      0     105
                                              3 COMRAM     1     1      0
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (3) _CURSOR_HOME                                          0     0      0      75
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _BORRAR_LCD                                           0     0      0      75
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (3) _ENVIA_LCD_CMD                                        2     2      0      75
                                              1 COMRAM     2     2      0
                       _ENVIA_NIBBLE
 ---------------------------------------------------------------------------------
 (2) _I2C_LCD_INIT                                         2     2      0   16430
                                              7 COMRAM     2     2      0
                          _I2C1_INIT
               _I2C1_WRITESINGLEBYTE
                     _I2C_BORRAR_LCD
                    _I2C_CURSOR_HOME
                   _I2C_CURSOR_ONOFF
 ---------------------------------------------------------------------------------
 (3) _I2C_CURSOR_ONOFF                                     1     1      0    4174
                                              6 COMRAM     1     1      0
                  _I2C_ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (3) _I2C_CURSOR_HOME                                      0     0      0    4130
                  _I2C_ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _I2C_BORRAR_LCD                                       0     0      0    4130
                  _I2C_ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (3) _I2C_ENVIA_LCD_CMD                                    4     4      0    4130
                                              2 COMRAM     4     4      0
               _I2C1_WRITESINGLEBYTE
 ---------------------------------------------------------------------------------
 (3) _I2C1_INIT                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_VARCHAR_HEX                                      5     5      0     195
                                              3 COMRAM     5     5      0
                         _ENVIA_CHAR
 ---------------------------------------------------------------------------------
 (1) _LCD_VARCHAR_BITS                                     4     4      0     135
                                              3 COMRAM     4     4      0
                         _ENVIA_CHAR
 ---------------------------------------------------------------------------------
 (1) _LCD_ESCRIBE_VAR_CHAR                                 7     6      1    1979
                                             10 COMRAM     7     6      1
                         _ENVIA_CHAR
                            ___awmod
                            ___lbdiv
                            ___lbmod
 ---------------------------------------------------------------------------------
 (3) _ENVIA_CHAR                                           2     2      0      75
                                              1 COMRAM     2     2      0
                       _ENVIA_NIBBLE
 ---------------------------------------------------------------------------------
 (4) _ENVIA_NIBBLE                                         1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _I2C_LCD_VARCHAR_HEX                                  5     5      0    4308
                                              6 COMRAM     5     5      0
                 _I2C_ENVIA_LCD_DATA
 ---------------------------------------------------------------------------------
 (1) _I2C_LCD_VARCHAR_BITS                                 4     4      0    4220
                                              6 COMRAM     4     4      0
                 _I2C_ENVIA_LCD_DATA
 ---------------------------------------------------------------------------------
 (1) _I2C_LCD_ESCRIBE_VAR_CHAR                             7     6      1    6034
                                             10 COMRAM     7     6      1
                 _I2C_ENVIA_LCD_DATA
                            ___awmod
                            ___lbdiv
                            ___lbmod
 ---------------------------------------------------------------------------------
 (2) ___lbmod                                              4     3      1     463
                                              0 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (2) ___lbdiv                                              4     3      1     466
                                              6 COMRAM     4     3      1
                            ___awmod (ARG)
                            ___lbmod (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     600
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) _I2C_ENVIA_LCD_DATA                                   4     4      0    4130
                                              2 COMRAM     4     4      0
               _I2C1_WRITESINGLEBYTE
 ---------------------------------------------------------------------------------
 (4) _I2C1_WRITESINGLEBYTE                                 2     1      1    3996
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (1) _I2C1_Write_MCP23017                                  3     1      2     978
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ESCRIBE_MENSAJE2
     _ENVIA_CHAR
       _ENVIA_NIBBLE
     _strlen
   _I2C1_Write_MCP23017
   _I2C_ESCRIBE_MENSAJE2
     _I2C_ENVIA_LCD_DATA
       _I2C1_WRITESINGLEBYTE
     _strlen
   _I2C_LCD_ESCRIBE_VAR_CHAR
     _I2C_ENVIA_LCD_DATA
     ___awmod
     ___lbdiv
       ___awmod (ARG)
       ___lbmod (ARG)
     ___lbmod
   _I2C_LCD_VARCHAR_BITS
     _I2C_ENVIA_LCD_DATA
   _I2C_LCD_VARCHAR_HEX
     _I2C_ENVIA_LCD_DATA
   _I2C_POS_CURSOR
     _I2C_ENVIA_LCD_CMD
       _I2C1_WRITESINGLEBYTE
   _LCD_ESCRIBE_VAR_CHAR
     _ENVIA_CHAR
     ___awmod
     ___lbdiv
     ___lbmod
   _LCD_VARCHAR_BITS
     _ENVIA_CHAR
   _LCD_VARCHAR_HEX
     _ENVIA_CHAR
   _POS_CURSOR
     _ENVIA_LCD_CMD
       _ENVIA_NIBBLE
   _configuro
     _I2C_LCD_INIT
       _I2C1_INIT
       _I2C1_WRITESINGLEBYTE
       _I2C_BORRAR_LCD
         _I2C_ENVIA_LCD_CMD
       _I2C_CURSOR_HOME
         _I2C_ENVIA_LCD_CMD
       _I2C_CURSOR_ONOFF
         _I2C_ENVIA_LCD_CMD
     _LCD_INIT
       _BORRAR_LCD
         _ENVIA_LCD_CMD
       _CURSOR_HOME
         _ENVIA_LCD_CMD
       _CURSOR_ONOFF
         _ENVIA_LCD_CMD
       _LCD_CONFIG
         _ENVIA_LCD_CMD
         _ENVIA_NIBBLE
   _splash_screen
     _BORRAR_LCD
     _ESCRIBE_MENSAJE2
     _I2C_BORRAR_LCD
     _I2C_ESCRIBE_MENSAJE2
     _I2C_POS_CURSOR
     _POS_CURSOR

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0       0      70        0.0%
EEDATA             400      0       0       0        0.0%
BITBIGSFRlllhhh    173      0       0      77        0.0%
BITBIGSFRllllhh    160      0       0      84        0.0%
BITBIGSFR_1        100      0       0      69        0.0%
BITBANK36          100      0       0      67        0.0%
BANK36             100      0       0      68        0.0%
BITBANK35          100      0       0      65        0.0%
BANK35             100      0       0      66        0.0%
BITBANK34          100      0       0      63        0.0%
BANK34             100      0       0      64        0.0%
BITBANK33          100      0       0      61        0.0%
BANK33             100      0       0      62        0.0%
BITBANK32          100      0       0      59        0.0%
BANK32             100      0       0      60        0.0%
BITBANK31          100      0       0      57        0.0%
BANK31             100      0       0      58        0.0%
BITBANK30          100      0       0      55        0.0%
BANK30             100      0       0      56        0.0%
BITBANK29          100      0       0      53        0.0%
BANK29             100      0       0      54        0.0%
BITBANK28          100      0       0      51        0.0%
BANK28             100      0       0      52        0.0%
BITBANK27          100      0       0      49        0.0%
BANK27             100      0       0      50        0.0%
BITBANK26          100      0       0      46        0.0%
BANK26             100      0       0      47        0.0%
BITBANK25          100      0       0      44        0.0%
BANK25             100      0       0      45        0.0%
BITBANK24          100      0       0      42        0.0%
BANK24             100      0       0      43        0.0%
BITBANK23          100      0       0      40        0.0%
BANK23             100      0       0      41        0.0%
BITBANK22          100      0       0      38        0.0%
BANK22             100      0       0      39        0.0%
BITBANK21          100      0       0      36        0.0%
BANK21             100      0       0      37        0.0%
BITBANK20          100      0       0      34        0.0%
BANK20             100      0       0      35        0.0%
BITBANK19          100      0       0      32        0.0%
BANK19             100      0       0      33        0.0%
BITBANK18          100      0       0      30        0.0%
BANK18             100      0       0      31        0.0%
BITBANK17          100      0       0      28        0.0%
BANK17             100      0       0      29        0.0%
BITBANK16          100      0       0      26        0.0%
BANK16             100      0       0      27        0.0%
BITBANK15          100      0       0      24        0.0%
BANK15             100      0       0      25        0.0%
BITBANK14          100      0       0      22        0.0%
BANK14             100      0       0      23        0.0%
BITBANK13          100      0       0      20        0.0%
BANK13             100      0       0      21        0.0%
BITBANK12          100      0       0      18        0.0%
BANK12             100      0       0      19        0.0%
BITBANK11          100      0       0      16        0.0%
BANK11             100      0       0      17        0.0%
BITBANK10          100      0       0      14        0.0%
BANK10             100      0       0      15        0.0%
BITBANK9           100      0       0      12        0.0%
BANK9              100      0       0      13        0.0%
BITBANK8           100      0       0      10        0.0%
BANK8              100      0       0      11        0.0%
BITBANK7           100      0       0       8        0.0%
BANK7              100      0       0       9        0.0%
BITBANK6           100      0       0       6        0.0%
BANK6              100      0       0       7        0.0%
BITBIGSFRlllll      AD      0       0      87        0.0%
BITBIGSFRlh         A8      0       0      74        0.0%
BITBANK5            A0      0       0       4        0.0%
BANK5               A0      0       0       5        0.0%
BITBIGSFRlllhl      70      0       0      83        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     14      34       1       54.7%
BITBIGSFRhhh        2E      0       0      71        0.0%
BITBIGSFRhhl         7      0       0      72        0.0%
BITBIGSFRhl          6      0       0      73        0.0%
BITBIGSFRllhh        5      0       0      75        0.0%
BITBIGSFRlllhhl      4      0       0      80        0.0%
BITBIGSFRllllhl      3      0       0      86        0.0%
BITBIGSFRlllhhl      3      0       0      82        0.0%
BITBIGSFRllllhh      1      0       0      85        0.0%
BITBIGSFRlllhhh      1      0       0      78        0.0%
BITBIGSFRlllhhl      1      0       0      81        0.0%
BITBIGSFRlllhhh      1      0       0      79        0.0%
BITBIGSFRllhl        1      0       0      76        0.0%
BIGSFR_1             0      0       0     200        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      34      48        0.0%
DATA                 0      0      34       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Sun Nov 19 21:53:54 2023

                    _splash_screen 2F68                      ENVIA_CHAR@aux 0523  
                              l207 33F2                                l425 32FA  
                              l419 32EE                                u430 33F6  
                              u440 33FA                                u620 2EC6  
                              u294 3188                                u295 3184  
                              u730 32F2                                u660 3246  
                              u750 32FE                                u807 2FBA  
                              u760 3302                                u817 31FC  
                              u907 25B2                                u827 3210  
                              u917 25C6                                u837 3048  
                              u694 31CC                                u695 31C8  
                              u927 25D8                                u847 3058  
                              u937 25EE                                u857 333A  
                              u947 2602                                u867 2548  
                              u957 2614                                u877 2566  
                              u967 262A                                u887 258A  
                              u977 263E                                u897 259C  
                              u987 2650                                u997 2662  
                     ___awmod@sign 0526                                prod 04F3  
                              wreg 04E8                       ?_CURSOR_HOME 0521  
                     _I2C_LCD_INIT 253E                     ??_ENVIA_NIBBLE 0521  
                _I2C_ENVIA_LCD_CMD 2FD0                     ENVIA_CHAR@dato 0522  
                             l2030 344A                               l2016 330E  
                             l2104 3276                               l2018 3310  
                             l2108 3292                               l2310 2EBA  
                             l2302 2EA0                               l2062 30F8  
                             l2312 2EC2                               l2080 32CA  
                             l2322 2EE4                               l2306 2EAC  
                             l2090 3140                               l2066 310A  
                             l2058 30E6                               l2340 3242  
                             l2412 31BA                               l2076 32AE  
                             l2326 2EF2                               l2318 2EDA  
                             l2430 2C52                               l1198 342E  
                             l2094 3152                               l2086 312E  
                             l2336 323C                               l2352 3260  
                             l2416 31DC                               l2512 2926  
                             l2418 31E2                               l2442 2CE2  
                             l2434 2C5C                               l2506 2922  
                             l2348 3258                               l2436 2CCE  
                             l2428 2C48                               l1652 3198  
                             l2366 33AE                               l2358 3396  
                             l2390 2E32                               l2438 2CD8  
                             l2374 2D96                               l2382 2DCC  
                             l1654 319E                               l1670 2B32  
                             l2542 2A14                               l2392 2E3C  
                             l2376 2DA0                               l1648 3176  
                             l1672 2BA4                               l1664 2B1E  
                             l2394 2E4E                               l2378 2DB2  
                             l1674 2BAE                               l1666 2B28  
                             l2476 32D6                               l2398 2E68  
                             l1678 2BB8                               STR_1 2520  
                             STR_2 2501                               STR_3 2520  
                             STR_4 2511                               STR_5 252E  
                             STR_6 2538                               STR_7 2533  
                             STR_8 252E                               STR_9 2538  
                             u1007 2672                               u1017 2684  
                             u1107 2720                               u1027 2696  
                             u1117 2732                               u1037 26A6  
                             u1207 27D8                               u1127 2742  
                             u1047 26B8                               u1217 27E8  
                             u1137 2754                               u1057 26CA  
                             u1307 2FF8                               u1227 27FA  
                             u1147 2766                               u1067 26DA  
                             u1317 300A                               u1237 280C  
                             u1157 2776                               u1077 26EC  
                             u1327 301E                               u1247 281C  
                             u1167 2788                               u1087 26FE  
                             _LATD 04C1                               u1337 3030  
                             u1257 282E                               u1177 279E  
                             u1097 270E                               u1347 3366  
                             u1267 2840                               u1187 27B4  
                             u1357 346A                               u1277 2850  
                             u1197 27C6                               u1367 2F24  
                             u1287 2862                               u1377 2F38  
                             u1297 2878                               u1387 2F4C  
                             u1397 2F60                 ?_I2C_ENVIA_LCD_CMD 0521  
         I2C_ENVIA_LCD_CMD@command 0524            LCD_VARCHAR_HEX@high_nib 0527  
                             _main 2892                               indf2 04DF  
                             fsr1l 04E1                               fsr2l 04D9  
                             prodl 04F3                  ??_I2C_CURSOR_HOME 0527  
                             start FFFC                      ?_CURSOR_ONOFF 0521  
              ??_I2C_ENVIA_LCD_CMD 0523                LCD_VARCHAR_HEX@dato 0526  
                     ___param_bank 0000         LCD_ESCRIBE_VAR_CHAR@decena 052F  
                  ??_ENVIA_LCD_CMD 0522                   __end_of_LCD_INIT 322A  
               _I2C_ENVIA_LCD_DATA 2EFC                     ?_splash_screen 0521  
       LCD_ESCRIBE_VAR_CHAR@numero 0530                  __end_of_I2C1_INIT 30D4  
       LCD_ESCRIBE_VAR_CHAR@unidad 0531                              ?_main 0521  
                  __end_of___lbdiv 3264                              STR_10 2533  
                  __end_of___awmod 2EFC                    __end_of___lbmod 33B6  
                            _OSCEN 00B3                              _PORTD 04D1  
              ?_I2C_ENVIA_LCD_DATA 0521                              _TRISD 04C9  
        __end_of_I2C_ENVIA_LCD_CMD 3038                        ?_POS_CURSOR 0524  
             LCD_VARCHAR_BITS@dato 0526                     _I2C_BORRAR_LCD 34A4  
                ?_I2C_CURSOR_ONOFF 0521                              tablat 04F5  
                            status 04D8                 ??_I2C_CURSOR_ONOFF 0527  
           I2C_CURSOR_ONOFF@estado 0527                    ___lbdiv@divisor 0527  
                  ___lbdiv@counter 0529                     ??_CURSOR_ONOFF 0524  
             ??_I2C_ENVIA_LCD_DATA 0523                    __initialization 33B6  
                     __end_of_main 2B00        LCD_ESCRIBE_VAR_CHAR@centena 052E  
 __end_of_I2C_LCD_ESCRIBE_VAR_CHAR 2E8C            I2C_ESCRIBE_MENSAJE2@tam 0529  
                           ??_main 0532                      __activetblptr 0003  
       I2C_LCD_VARCHAR_HEX@low_nib 052B             __end_of_I2C_BORRAR_LCD 34AC  
                 _LCD_VARCHAR_BITS 3164                             _ANSELD 0418  
                           _RC3PPS 0214                             _RC4PPS 0215  
                           _OSCFRQ 00B1      I2C1_WRITESINGLEBYTE@direccion 0522  
                  ??_splash_screen 052B                          ??___lbdiv 0528  
                        ??___awmod 0525               __end_of_ENVIA_NIBBLE 3474  
                        ??___lbmod 0522                             _efecto 0501  
              _I2C_LCD_VARCHAR_HEX 2C2A                    ___awmod@divisor 0523  
                           isa$std 0001                    ___awmod@counter 0525  
                           _strlen 3308       __end_of_LCD_ESCRIBE_VAR_CHAR 2DF0  
            LCD_VARCHAR_BITS@x_var 0527                       __pdataCOMRAM 0501  
                     __mediumconst 0000                             tblptrh 04F7  
                           tblptrl 04F6                             tblptru 04F8  
                  ?_I2C_BORRAR_LCD 0521                       ??_BORRAR_LCD 0524  
             ?_I2C_LCD_VARCHAR_HEX 0521                   ___lbdiv@dividend 0528  
                   _I2C_POS_CURSOR 311C            I2C_LCD_VARCHAR_HEX@dato 0529  
     __end_of_I2C_LCD_VARCHAR_BITS 31EC                          ?_LCD_INIT 0521  
                  ___lbmod@divisor 0521                         __accesstop 0560  
          __end_of__initialization 33D6                    ___lbmod@counter 0523  
                     ??_LCD_CONFIG 0524                      ___rparam_used 0001  
                     ??_ENVIA_CHAR 0522                     __pcstackCOMRAM 0521  
               __end_of_BORRAR_LCD 349C                   ___lbdiv@quotient 052A  
            I2C_ESCRIBE_MENSAJE2@i 052A                   _ESCRIBE_MENSAJE2 329C  
                 ENVIA_LCD_CMD@aux 0523               __end_of_CURSOR_ONOFF 343C  
      I2C_LCD_VARCHAR_HEX@high_nib 052A           _I2C_LCD_ESCRIBE_VAR_CHAR 2DF0  
               __end_of_LCD_CONFIG 308A                 __end_of_ENVIA_CHAR 338C  
                  _I2C_CURSOR_HOME 349C             __end_of_I2C_POS_CURSOR 3164  
            ??_I2C_LCD_VARCHAR_HEX 0527                         ??_LCD_INIT 0525  
                 ENVIA_NIBBLE@dato 0521                            _I2C1CNT 028D  
                          _I2C1RXB 028B                            _I2C1TXB 028C  
                ??_LCD_VARCHAR_HEX 0524        I2C_ENVIA_LCD_DATA@lownibble 0526  
                          ?_strlen 0521                          _I2C1_INIT 308A  
                          _OSCCON1 00AD       __end_of_I2C_ESCRIBE_MENSAJE2 329C  
                  ?_I2C_POS_CURSOR 0527                       ??_POS_CURSOR 0525  
       I2C_ESCRIBE_MENSAJE2@cadena 0527               _LCD_ESCRIBE_VAR_CHAR 2D54  
                          __Hparam 0000                            __Lparam 0000  
                __end_of_configuro 348C                            ___lbdiv 322A  
                          ___awmod 2E8C                            ___lbmod 338C  
         __end_of_LCD_VARCHAR_BITS 31A8                       __psmallconst 2500  
            __end_of_ENVIA_LCD_CMD 3360                            __pcinit 33B6  
               __end_of_POS_CURSOR 311C                            __ramtop 2500  
             _I2C_LCD_VARCHAR_BITS 31A8                            __ptext0 2892  
                          __ptext1 2F68                            __ptext2 30D4  
                          __ptext3 311C                            __ptext4 3264  
                          __ptext5 329C                            __ptext6 3308  
                          __ptext7 3474                            __ptext8 31EC  
                          __ptext9 3038            __end_of_I2C_CURSOR_HOME 34A4  
                      _I2C1CLKbits 029C       I2C1_Write_MCP23017@direccion 0523  
                       ?_I2C1_INIT 0521         I2C_ENVIA_LCD_CMD@lownibble 0526  
                 ___awmod@dividend 0521     I2C_LCD_ESCRIBE_VAR_CHAR@decena 052F  
                      _I2C1PIRbits 029A                       _ENVIA_NIBBLE 3458  
             end_of_initialization 33D6     I2C_LCD_ESCRIBE_VAR_CHAR@numero 0530  
   I2C_LCD_ESCRIBE_VAR_CHAR@unidad 0531              ?_LCD_ESCRIBE_VAR_CHAR 052B  
  I2C_LCD_ESCRIBE_VAR_CHAR@centena 052E           I2C_LCD_VARCHAR_BITS@dato 0529  
                          postdec1 04E5                            postdec2 04DD  
                          postinc0 04EE                            postinc2 04DE  
               I2C_POS_CURSOR@fila 0528                _I2C1_Write_MCP23017 32D4  
                          strlen@a 0523              ?_I2C_LCD_VARCHAR_BITS 0521  
                          strlen@s 0521                   ??_I2C_BORRAR_LCD 0527  
                ESCRIBE_MENSAJE2@i 0527                   ___lbmod@dividend 0522  
                        _TRISCbits 04C8               ?_I2C1_Write_MCP23017 0521  
                      ___lbmod@rem 0524           __end_of_ESCRIBE_MENSAJE2 32D4  
                     _CURSOR_ONOFF 3420                 CURSOR_ONOFF@estado 0524  
        I2C_LCD_VARCHAR_BITS@x_var 052A               _I2C_ESCRIBE_MENSAJE2 3264  
           LCD_VARCHAR_HEX@low_nib 0528         ??_I2C_LCD_ESCRIBE_VAR_CHAR 052C  
            __end_of_splash_screen 2FD0                      __pidataCOMRAM 3400  
                 ?_I2C_CURSOR_HOME 0521                        ??_I2C1_INIT 0521  
                   __end_of_strlen 3334                      ??_CURSOR_HOME 0524  
              start_initialization 33B6                      ?_I2C_LCD_INIT 0521  
            ??_I2C1_Write_MCP23017 0523       __end_of_I2C1_WRITESINGLEBYTE 3400  
           ??_LCD_ESCRIBE_VAR_CHAR 052C                  ENVIA_LCD_CMD@dato 0522  
                  _LCD_VARCHAR_HEX 2B00              ?_I2C_ESCRIBE_MENSAJE2 0527  
     I2C_ENVIA_LCD_DATA@highnibble 0525                   _I2C_CURSOR_ONOFF 343C  
           ??_I2C_LCD_VARCHAR_BITS 0527                           ??_strlen 0523  
                 ??_I2C_POS_CURSOR 0528        __end_of_I2C_LCD_VARCHAR_HEX 2D54  
                   ??_I2C_LCD_INIT 0528  I2C_LCD_ESCRIBE_VAR_CHAR@n_digitos 052B  
              __end_of_CURSOR_HOME 3494                           ?___lbdiv 0527  
                         ?___awmod 0521                           ?___lbmod 0521  
                         _I2C1ADB1 028F                  ?_LCD_VARCHAR_BITS 0521  
                        _configuro 3474                 ??_LCD_VARCHAR_BITS 0524  
                      __smallconst 2500            __end_of_LCD_VARCHAR_HEX 2C2A  
          I2C1_Write_MCP23017@dato 0522                           _LCD_INIT 31EC  
                         _LATDbits 04C1             ??_I2C_ESCRIBE_MENSAJE2 0528  
                    _I2C1STAT0bits 0298                      _I2C1STAT1bits 0299  
      I2C1_Write_MCP23017@registro 0521               _I2C1_WRITESINGLEBYTE 33DC  
           I2C_ENVIA_LCD_DATA@data 0524                     POS_CURSOR@fila 0525  
                       ?_configuro 0521             ESCRIBE_MENSAJE2@cadena 0524  
      I2C_ENVIA_LCD_CMD@highnibble 0525                          main@x_var 0534  
                      _CURSOR_HOME 348C      LCD_ESCRIBE_VAR_CHAR@n_digitos 052B  
                        copy_data0 33CA         __end_of_I2C_ENVIA_LCD_DATA 2F68  
            I2C_POS_CURSOR@columna 0527                           __Hrparam 0000  
             __end_of_I2C_LCD_INIT 2892                  ?_ESCRIBE_MENSAJE2 0524  
                         __Lrparam 0000                 ??_ESCRIBE_MENSAJE2 0525  
            ?_I2C1_WRITESINGLEBYTE 0521                         _ANSELCbits 0410  
                     _I2C1CON0bits 0294                       _I2C1CON1bits 0295  
                     _I2C1CON2bits 0296           I2C1_WRITESINGLEBYTE@dato 0521  
                         __ptext10 3420                           __ptext11 348C  
                         __ptext20 2B00                           __ptext12 3494  
                         __ptext21 3164                           __ptext13 3334  
                         __ptext30 2E8C                           __ptext22 2D54  
                         __ptext14 253E                           __ptext31 2EFC  
                         __ptext23 3360                           __ptext15 343C  
                         __ptext32 33DC                           __ptext24 3458  
                         __ptext16 349C                           __ptext33 32D4  
                         __ptext25 2C2A                           __ptext17 34A4  
                         __ptext26 31A8                           __ptext18 2FD0  
                         __ptext27 2DF0                           __ptext19 308A  
                         __ptext28 338C                           __ptext29 322A  
                 ?_LCD_VARCHAR_HEX 0521                         _BORRAR_LCD 3494  
                       _RC3I2Cbits 0287           __end_of_I2C_CURSOR_ONOFF 3458  
                       _RC4I2Cbits 0286                         _LCD_CONFIG 3038  
                       _ENVIA_CHAR 3360                           isa$xinst 0000  
                       _ODCONCbits 0412                      _ENVIA_LCD_CMD 3334  
                      ??_configuro 052A        __end_of_I2C1_Write_MCP23017 3308  
        ?_I2C_LCD_ESCRIBE_VAR_CHAR 052B             ??_I2C1_WRITESINGLEBYTE 0522  
                   ?_ENVIA_LCD_CMD 0521                ESCRIBE_MENSAJE2@tam 0526  
                      ?_BORRAR_LCD 0521                      ?_ENVIA_NIBBLE 0521  
                       _POS_CURSOR 30D4                        ?_LCD_CONFIG 0521  
                      ?_ENVIA_CHAR 0521                  POS_CURSOR@columna 0524  
