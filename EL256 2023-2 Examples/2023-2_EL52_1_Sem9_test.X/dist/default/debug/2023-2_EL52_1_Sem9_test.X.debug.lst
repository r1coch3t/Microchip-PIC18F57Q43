

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Thu Oct 12 16:04:20 2023

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F57Q43
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1
    14                           	psect	text6,global,reloc=2,class=CODE,delta=1
    15                           	psect	text7,global,reloc=2,class=CODE,delta=1
    16                           	psect	text8,global,reloc=2,class=CODE,delta=1
    17                           	psect	text9,global,reloc=2,class=CODE,delta=1
    18                           	psect	text10,global,reloc=2,class=CODE,delta=1
    19                           	psect	text11,global,reloc=2,class=CODE,delta=1
    20                           	psect	text12,global,reloc=2,class=CODE,delta=1
    21                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    22                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    23                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    24   000000                     
    25                           ; Generated 18/07/2023 GMT
    26                           ; 
    27                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    28                           ; All rights reserved.
    29                           ; 
    30                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    31                           ; 
    32                           ; Redistribution and use in source and binary forms, with or without modification, are
    33                           ; permitted provided that the following conditions are met:
    34                           ; 
    35                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    36                           ;        conditions and the following disclaimer.
    37                           ; 
    38                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    39                           ;        of conditions and the following disclaimer in the documentation and/or other
    40                           ;        materials provided with the distribution. Publication is not required when
    41                           ;        this file is used in an embedded application.
    42                           ; 
    43                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    44                           ;        software without specific prior written permission.
    45                           ; 
    46                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    47                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    48                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    49                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    50                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    51                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    52                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    53                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    54                           ; 
    55                           ; 
    56                           ; Code-generator required, PIC18F57Q43 Definitions
    57                           ; 
    58                           ; SFR Addresses
    59   000000                     _LATD	set	1217
    60   000000                     _ANSELD	set	1048
    61   000000                     _TRISD	set	1225
    62   000000                     _PORTD	set	1233
    63   000000                     _LATDbits	set	1217
    64                           
    65                           	psect	smallconst
    66   002500                     __psmallconst:
    67                           	callstack 0
    68   002500  00                 	db	0
    69   002501                     STR_1:
    70   002501  48                 	db	72	;'H'
    71   002502  6F                 	db	111	;'o'
    72   002503  6C                 	db	108	;'l'
    73   002504  61                 	db	97	;'a'
    74   002505  20                 	db	32
    75   002506  6D                 	db	109	;'m'
    76   002507  75                 	db	117	;'u'
    77   002508  6E                 	db	110	;'n'
    78   002509  64                 	db	100	;'d'
    79   00250A  6F                 	db	111	;'o'
    80   00250B  20                 	db	32
    81   00250C  55                 	db	85	;'U'
    82   00250D  50                 	db	80	;'P'
    83   00250E  43                 	db	67	;'C'
    84   00250F  21                 	db	33
    85   002510  00                 	db	0
    86   002511                     STR_2:
    87   002511  4B                 	db	75	;'K'
    88   002512  61                 	db	97	;'a'
    89   002513  6C                 	db	108	;'l'
    90   002514  75                 	db	117	;'u'
    91   002515  6E                 	db	110	;'n'
    92   002516  20                 	db	32
    93   002517  4C                 	db	76	;'L'
    94   002518  61                 	db	97	;'a'
    95   002519  75                 	db	117	;'u'
    96   00251A  20                 	db	32
    97   00251B  47                 	db	71	;'G'
    98   00251C  61                 	db	97	;'a'
    99   00251D  6E                 	db	110	;'n'
   100   00251E  00                 	db	0
   101   00251F  00                 	db	0	; dummy byte at the end
   102   000000                     
   103                           ; #config settings
   104                           
   105                           	psect	cinit
   106   002786                     __pcinit:
   107                           	callstack 0
   108   002786                     start_initialization:
   109                           	callstack 0
   110   002786                     __initialization:
   111                           	callstack 0
   112   002786                     end_of_initialization:
   113                           	callstack 0
   114   002786                     __end_of__initialization:
   115                           	callstack 0
   116   002786  0E00               	movlw	low (__Lsmallconst shr (0+16))
   117   002788  6EF8               	movwf	tblptru,c
   118   00278A  0E25               	movlw	high __Lsmallconst
   119   00278C  6EF7               	movwf	tblptrh,c
   120   00278E  0100               	movlb	0
   121   002790  EFF9  F012         	goto	_main	;jump to C main() function
   122                           
   123                           	psect	cstackCOMRAM
   124   000501                     __pcstackCOMRAM:
   125                           	callstack 0
   126   000501                     ENVIA_NIBBLE@dato:
   127                           	callstack 0
   128   000501                     LEER_LCD@aux:
   129                           	callstack 0
   130                           
   131                           ; 1 bytes @ 0x0
   132   000501                     	ds	1
   133   000502                     ENVIA_CHAR@dato:
   134                           	callstack 0
   135   000502                     ENVIA_LCD_CMD@dato:
   136                           	callstack 0
   137                           
   138                           ; 1 bytes @ 0x1
   139   000502                     	ds	1
   140   000503                     ENVIA_CHAR@aux:
   141                           	callstack 0
   142   000503                     ENVIA_LCD_CMD@aux:
   143                           	callstack 0
   144                           
   145                           ; 1 bytes @ 0x2
   146   000503                     	ds	1
   147   000504                     ??_LCD_CONFIG:
   148   000504                     POS_CURSOR@columna:
   149                           	callstack 0
   150   000504                     CURSOR_ONOFF@estado:
   151                           	callstack 0
   152   000504                     ESCRIBE_MENSAJE@cadena:
   153                           	callstack 0
   154                           
   155                           ; 1 bytes @ 0x3
   156   000504                     	ds	1
   157   000505                     ??_lcd_init:
   158   000505                     POS_CURSOR@fila:
   159                           	callstack 0
   160   000505                     ESCRIBE_MENSAJE@tam:
   161                           	callstack 0
   162                           
   163                           ; 1 bytes @ 0x4
   164   000505                     	ds	1
   165   000506                     ??_ESCRIBE_MENSAJE:
   166                           
   167                           ; 1 bytes @ 0x5
   168   000506                     	ds	1
   169   000507                     ESCRIBE_MENSAJE@i:
   170                           	callstack 0
   171                           
   172                           ; 1 bytes @ 0x6
   173   000507                     	ds	1
   174   000508                     
   175                           ; 1 bytes @ 0x7
   176 ;;
   177 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   178 ;;
   179 ;; *************** function _main *****************
   180 ;; Defined at:
   181 ;;		line 20 in file "maincode01.c"
   182 ;; Parameters:    Size  Location     Type
   183 ;;		None
   184 ;; Auto vars:     Size  Location     Type
   185 ;;		None
   186 ;; Return value:  Size  Location     Type
   187 ;;                  1    wreg      void 
   188 ;; Registers used:
   189 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   190 ;; Tracked objects:
   191 ;;		On entry : 0/0
   192 ;;		On exit  : 0/0
   193 ;;		Unchanged: 0/0
   194 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   195 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   196 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   197 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   198 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   199 ;;Total ram usage:        0 bytes
   200 ;; Hardware stack levels required when called: 4
   201 ;; This function calls:
   202 ;;		_ESCRIBE_MENSAJE
   203 ;;		_POS_CURSOR
   204 ;;		_configuro
   205 ;;		_lcd_init
   206 ;; This function is called by:
   207 ;;		Startup code after reset
   208 ;; This function uses a non-reentrant model
   209 ;;
   210                           
   211                           	psect	text0
   212   0025F2                     __ptext0:
   213                           	callstack 0
   214   0025F2                     _main:
   215                           	callstack 123
   216   0025F2                     
   217                           ;maincode01.c: 21:     configuro();
   218   0025F2  ECD2  F013         	call	_configuro	;wreg free
   219   0025F6                     
   220                           ;maincode01.c: 22:     lcd_init();
   221   0025F6  EC34  F013         	call	_lcd_init	;wreg free
   222   0025FA                     l1000:
   223                           
   224                           ;maincode01.c: 24:         POS_CURSOR(1,0);
   225   0025FA  0E00               	movlw	0
   226   0025FC  6E04               	movwf	POS_CURSOR@columna^(0+1280),c
   227   0025FE  0E01               	movlw	1
   228   002600  EC17  F013         	call	_POS_CURSOR
   229   002604                     
   230                           ;maincode01.c: 25:         ESCRIBE_MENSAJE("Hola mundo UPC!",15);
   231   002604  0E01               	movlw	low STR_1
   232   002606  6E04               	movwf	ESCRIBE_MENSAJE@cadena^(0+1280),c
   233   002608  0E0F               	movlw	15
   234   00260A  6E05               	movwf	ESCRIBE_MENSAJE@tam^(0+1280),c
   235   00260C  EC69  F013         	call	_ESCRIBE_MENSAJE	;wreg free
   236   002610                     
   237                           ;maincode01.c: 26:         POS_CURSOR(2,0);
   238   002610  0E00               	movlw	0
   239   002612  6E04               	movwf	POS_CURSOR@columna^(0+1280),c
   240   002614  0E02               	movlw	2
   241   002616  EC17  F013         	call	_POS_CURSOR
   242   00261A                     
   243                           ;maincode01.c: 27:         ESCRIBE_MENSAJE("Kalun Lau Gan",13);
   244   00261A  0E11               	movlw	low STR_2
   245   00261C  6E04               	movwf	ESCRIBE_MENSAJE@cadena^(0+1280),c
   246   00261E  0E0D               	movlw	13
   247   002620  6E05               	movwf	ESCRIBE_MENSAJE@tam^(0+1280),c
   248   002622  EC69  F013         	call	_ESCRIBE_MENSAJE	;wreg free
   249   002626  EFFD  F012         	goto	l1000
   250   00262A  EFFE  F0FF         	goto	start
   251   00262E                     __end_of_main:
   252                           	callstack 0
   253                           
   254 ;; *************** function _lcd_init *****************
   255 ;; Defined at:
   256 ;;		line 10 in file "maincode01.c"
   257 ;; Parameters:    Size  Location     Type
   258 ;;		None
   259 ;; Auto vars:     Size  Location     Type
   260 ;;		None
   261 ;; Return value:  Size  Location     Type
   262 ;;                  1    wreg      void 
   263 ;; Registers used:
   264 ;;		wreg, status,2, status,0, cstack
   265 ;; Tracked objects:
   266 ;;		On entry : 0/0
   267 ;;		On exit  : 0/0
   268 ;;		Unchanged: 0/0
   269 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   270 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   271 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   272 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   273 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   274 ;;Total ram usage:        2 bytes
   275 ;; Hardware stack levels used: 1
   276 ;; Hardware stack levels required when called: 3
   277 ;; This function calls:
   278 ;;		_BORRAR_LCD
   279 ;;		_CURSOR_HOME
   280 ;;		_CURSOR_ONOFF
   281 ;;		_LCD_CONFIG
   282 ;; This function is called by:
   283 ;;		_main
   284 ;; This function uses a non-reentrant model
   285 ;;
   286                           
   287                           	psect	text1
   288   002668                     __ptext1:
   289                           	callstack 0
   290   002668                     _lcd_init:
   291                           	callstack 123
   292   002668                     
   293                           ;maincode01.c: 11:     TRISD = 0x00;
   294   002668  0E00               	movlw	0
   295   00266A  6EC9               	movwf	201,c	;volatile
   296                           
   297                           ;maincode01.c: 12:     ANSELD = 0x00;
   298   00266C  0E00               	movlw	0
   299   00266E  0104               	movlb	4	; () banked
   300   002670  6F18               	movwf	24,b	;volatile
   301   002672                     
   302                           ; BSR set to: 4
   303                           ;maincode01.c: 13:     LCD_CONFIG();
   304   002672  ECC9  F012         	call	_LCD_CONFIG	;wreg free
   305   002676                     
   306                           ;maincode01.c: 14:     _delay((unsigned long)((21)*(48000000UL/4000.0)));
   307   002676  0E02               	movlw	2
   308   002678  6E06               	movwf	(??_lcd_init+1)^(0+1280),c
   309   00267A  0E48               	movlw	72
   310   00267C  6E05               	movwf	??_lcd_init^(0+1280),c
   311   00267E  0E42               	movlw	66
   312   002680                     u157:
   313   002680  2EE8               	decfsz	wreg,f,c
   314   002682  D7FE               	bra	u157
   315   002684  2E05               	decfsz	??_lcd_init^(0+1280),f,c
   316   002686  D7FC               	bra	u157
   317   002688  2E06               	decfsz	(??_lcd_init+1)^(0+1280),f,c
   318   00268A  D7FA               	bra	u157
   319   00268C  D000               	nop2	
   320   00268E                     
   321                           ;maincode01.c: 15:     BORRAR_LCD();
   322   00268E  ECCE  F013         	call	_BORRAR_LCD	;wreg free
   323   002692                     
   324                           ;maincode01.c: 16:     CURSOR_HOME();
   325   002692  ECCA  F013         	call	_CURSOR_HOME	;wreg free
   326   002696                     
   327                           ;maincode01.c: 17:     CURSOR_ONOFF(1);
   328   002696  0E01               	movlw	1
   329   002698  EC9D  F013         	call	_CURSOR_ONOFF
   330   00269C  0012               	return		;funcret
   331   00269E                     __end_of_lcd_init:
   332                           	callstack 0
   333                           
   334 ;; *************** function _LCD_CONFIG *****************
   335 ;; Defined at:
   336 ;;		line 72 in file "LCD.c"
   337 ;; Parameters:    Size  Location     Type
   338 ;;		None
   339 ;; Auto vars:     Size  Location     Type
   340 ;;		None
   341 ;; Return value:  Size  Location     Type
   342 ;;                  1    wreg      void 
   343 ;; Registers used:
   344 ;;		wreg, status,2, status,0, cstack
   345 ;; Tracked objects:
   346 ;;		On entry : 0/0
   347 ;;		On exit  : 0/0
   348 ;;		Unchanged: 0/0
   349 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   350 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   351 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   352 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   353 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   354 ;;Total ram usage:        1 bytes
   355 ;; Hardware stack levels used: 1
   356 ;; Hardware stack levels required when called: 2
   357 ;; This function calls:
   358 ;;		_ENVIA_LCD_CMD
   359 ;;		_ENVIA_NIBBLE
   360 ;; This function is called by:
   361 ;;		_lcd_init
   362 ;; This function uses a non-reentrant model
   363 ;;
   364                           
   365                           	psect	text2
   366   002592                     __ptext2:
   367                           	callstack 0
   368   002592                     _LCD_CONFIG:
   369                           	callstack 123
   370   002592                     
   371                           ;LCD.c: 74:  LATDbits.LATD0 = 0;
   372   002592  90C1               	bcf	193,0,c	;volatile
   373                           
   374                           ;LCD.c: 75:  LATDbits.LATD1 = 0;
   375   002594  92C1               	bcf	193,1,c	;volatile
   376   002596                     
   377                           ;LCD.c: 76:  ENVIA_NIBBLE(0x30);
   378   002596  0E30               	movlw	48
   379   002598  ECB5  F013         	call	_ENVIA_NIBBLE
   380   00259C                     
   381                           ;LCD.c: 77:         _delay(24000);
   382   00259C  0E20               	movlw	32
   383   00259E  6E04               	movwf	??_LCD_CONFIG^(0+1280),c
   384   0025A0  0E2A               	movlw	42
   385   0025A2                     u167:
   386   0025A2  2EE8               	decfsz	wreg,f,c
   387   0025A4  D7FE               	bra	u167
   388   0025A6  2E04               	decfsz	??_LCD_CONFIG^(0+1280),f,c
   389   0025A8  D7FC               	bra	u167
   390   0025AA                     
   391                           ;LCD.c: 78:         _delay(24000);
   392   0025AA  0E20               	movlw	32
   393   0025AC  6E04               	movwf	??_LCD_CONFIG^(0+1280),c
   394   0025AE  0E2A               	movlw	42
   395   0025B0                     u177:
   396   0025B0  2EE8               	decfsz	wreg,f,c
   397   0025B2  D7FE               	bra	u177
   398   0025B4  2E04               	decfsz	??_LCD_CONFIG^(0+1280),f,c
   399   0025B6  D7FC               	bra	u177
   400                           
   401                           ;LCD.c: 81:  ENVIA_NIBBLE(0x30);
   402   0025B8  0E30               	movlw	48
   403   0025BA  ECB5  F013         	call	_ENVIA_NIBBLE
   404   0025BE                     
   405                           ;LCD.c: 83:  _delay(1200);
   406   0025BE  0EF0               	movlw	240
   407   0025C0                     u187:
   408   0025C0  D000               	nop2	
   409   0025C2  2EE8               	decfsz	wreg,f,c
   410   0025C4  D7FD               	bra	u187
   411   0025C6                     
   412                           ;LCD.c: 84:         ENVIA_NIBBLE(0x30);
   413   0025C6  0E30               	movlw	48
   414   0025C8  ECB5  F013         	call	_ENVIA_NIBBLE
   415   0025CC                     
   416                           ;LCD.c: 85:  ENVIA_NIBBLE(0x20);
   417   0025CC  0E20               	movlw	32
   418   0025CE  ECB5  F013         	call	_ENVIA_NIBBLE
   419   0025D2                     
   420                           ;LCD.c: 86:  ENVIA_LCD_CMD(0x01);
   421   0025D2  0E01               	movlw	1
   422   0025D4  EC4F  F013         	call	_ENVIA_LCD_CMD
   423   0025D8                     
   424                           ;LCD.c: 87:  ENVIA_LCD_CMD(0x28);
   425   0025D8  0E28               	movlw	40
   426   0025DA  EC4F  F013         	call	_ENVIA_LCD_CMD
   427   0025DE                     
   428                           ;LCD.c: 88:  ENVIA_LCD_CMD(0x0F);
   429   0025DE  0E0F               	movlw	15
   430   0025E0  EC4F  F013         	call	_ENVIA_LCD_CMD
   431   0025E4                     
   432                           ;LCD.c: 89:  ENVIA_LCD_CMD(0x06);
   433   0025E4  0E06               	movlw	6
   434   0025E6  EC4F  F013         	call	_ENVIA_LCD_CMD
   435   0025EA                     
   436                           ;LCD.c: 90:  ENVIA_LCD_CMD(0x01);
   437   0025EA  0E01               	movlw	1
   438   0025EC  EC4F  F013         	call	_ENVIA_LCD_CMD
   439   0025F0  0012               	return		;funcret
   440   0025F2                     __end_of_LCD_CONFIG:
   441                           	callstack 0
   442                           
   443 ;; *************** function _CURSOR_ONOFF *****************
   444 ;; Defined at:
   445 ;;		line 35 in file "LCD.c"
   446 ;; Parameters:    Size  Location     Type
   447 ;;  estado          1    wreg     unsigned char 
   448 ;; Auto vars:     Size  Location     Type
   449 ;;  estado          1    3[COMRAM] unsigned char 
   450 ;; Return value:  Size  Location     Type
   451 ;;                  1    wreg      void 
   452 ;; Registers used:
   453 ;;		wreg, status,2, status,0, cstack
   454 ;; Tracked objects:
   455 ;;		On entry : 0/0
   456 ;;		On exit  : 0/0
   457 ;;		Unchanged: 0/0
   458 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   459 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   460 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   461 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   462 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   463 ;;Total ram usage:        1 bytes
   464 ;; Hardware stack levels used: 1
   465 ;; Hardware stack levels required when called: 2
   466 ;; This function calls:
   467 ;;		_ENVIA_LCD_CMD
   468 ;; This function is called by:
   469 ;;		_lcd_init
   470 ;; This function uses a non-reentrant model
   471 ;;
   472                           
   473                           	psect	text3
   474   00273A                     __ptext3:
   475                           	callstack 0
   476   00273A                     _CURSOR_ONOFF:
   477                           	callstack 123
   478                           
   479                           ;incstack = 0
   480                           ;CURSOR_ONOFF@estado stored from wreg
   481   00273A  6E04               	movwf	CURSOR_ONOFF@estado^(0+1280),c
   482   00273C                     
   483                           ;LCD.c: 35: void CURSOR_ONOFF(unsigned char estado);LCD.c: 36: {;LCD.c: 37:  if(estado =
      +                          = 0) ENVIA_LCD_CMD(0x0E);
   484   00273C  5004               	movf	CURSOR_ONOFF@estado^(0+1280),w,c
   485   00273E  A4D8               	btfss	status,2,c
   486   002740  EFA4  F013         	goto	u21
   487   002744  EFA6  F013         	goto	u20
   488   002748                     u21:
   489   002748  EFA9  F013         	goto	l882
   490   00274C                     u20:
   491   00274C  0E0E               	movlw	14
   492   00274E  EC4F  F013         	call	_ENVIA_LCD_CMD
   493   002752                     l882:
   494                           
   495                           ;LCD.c: 38:  if(estado == 1) ENVIA_LCD_CMD(0x0C);
   496   002752  0404               	decf	CURSOR_ONOFF@estado^(0+1280),w,c
   497   002754  A4D8               	btfss	status,2,c
   498   002756  EFAF  F013         	goto	u31
   499   00275A  EFB1  F013         	goto	u30
   500   00275E                     u31:
   501   00275E  EFB4  F013         	goto	l74
   502   002762                     u30:
   503   002762  0E0C               	movlw	12
   504   002764  EC4F  F013         	call	_ENVIA_LCD_CMD
   505   002768                     l74:
   506   002768  0012               	return		;funcret
   507   00276A                     __end_of_CURSOR_ONOFF:
   508                           	callstack 0
   509                           
   510 ;; *************** function _CURSOR_HOME *****************
   511 ;; Defined at:
   512 ;;		line 30 in file "LCD.c"
   513 ;; Parameters:    Size  Location     Type
   514 ;;		None
   515 ;; Auto vars:     Size  Location     Type
   516 ;;		None
   517 ;; Return value:  Size  Location     Type
   518 ;;                  1    wreg      void 
   519 ;; Registers used:
   520 ;;		wreg, status,2, status,0, cstack
   521 ;; Tracked objects:
   522 ;;		On entry : 0/0
   523 ;;		On exit  : 0/0
   524 ;;		Unchanged: 0/0
   525 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   526 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   527 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   528 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   529 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   530 ;;Total ram usage:        0 bytes
   531 ;; Hardware stack levels used: 1
   532 ;; Hardware stack levels required when called: 2
   533 ;; This function calls:
   534 ;;		_ENVIA_LCD_CMD
   535 ;; This function is called by:
   536 ;;		_lcd_init
   537 ;; This function uses a non-reentrant model
   538 ;;
   539                           
   540                           	psect	text4
   541   002794                     __ptext4:
   542                           	callstack 0
   543   002794                     _CURSOR_HOME:
   544                           	callstack 123
   545   002794                     
   546                           ;LCD.c: 32:  ENVIA_LCD_CMD(0x02);
   547   002794  0E02               	movlw	2
   548   002796  EC4F  F013         	call	_ENVIA_LCD_CMD
   549   00279A  0012               	return		;funcret
   550   00279C                     __end_of_CURSOR_HOME:
   551                           	callstack 0
   552                           
   553 ;; *************** function _BORRAR_LCD *****************
   554 ;; Defined at:
   555 ;;		line 67 in file "LCD.c"
   556 ;; Parameters:    Size  Location     Type
   557 ;;		None
   558 ;; Auto vars:     Size  Location     Type
   559 ;;		None
   560 ;; Return value:  Size  Location     Type
   561 ;;                  1    wreg      void 
   562 ;; Registers used:
   563 ;;		wreg, status,2, status,0, cstack
   564 ;; Tracked objects:
   565 ;;		On entry : 0/0
   566 ;;		On exit  : 0/0
   567 ;;		Unchanged: 0/0
   568 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   569 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   570 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   571 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   572 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   573 ;;Total ram usage:        0 bytes
   574 ;; Hardware stack levels used: 1
   575 ;; Hardware stack levels required when called: 2
   576 ;; This function calls:
   577 ;;		_ENVIA_LCD_CMD
   578 ;; This function is called by:
   579 ;;		_lcd_init
   580 ;; This function uses a non-reentrant model
   581 ;;
   582                           
   583                           	psect	text5
   584   00279C                     __ptext5:
   585                           	callstack 0
   586   00279C                     _BORRAR_LCD:
   587                           	callstack 123
   588   00279C                     
   589                           ;LCD.c: 69:  ENVIA_LCD_CMD(0x01);
   590   00279C  0E01               	movlw	1
   591   00279E  EC4F  F013         	call	_ENVIA_LCD_CMD
   592   0027A2  0012               	return		;funcret
   593   0027A4                     __end_of_BORRAR_LCD:
   594                           	callstack 0
   595                           
   596 ;; *************** function _configuro *****************
   597 ;; Defined at:
   598 ;;		line 6 in file "maincode01.c"
   599 ;; Parameters:    Size  Location     Type
   600 ;;		None
   601 ;; Auto vars:     Size  Location     Type
   602 ;;		None
   603 ;; Return value:  Size  Location     Type
   604 ;;                  1    wreg      void 
   605 ;; Registers used:
   606 ;;		None
   607 ;; Tracked objects:
   608 ;;		On entry : 0/0
   609 ;;		On exit  : 0/0
   610 ;;		Unchanged: 0/0
   611 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   612 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   613 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   614 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   615 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   616 ;;Total ram usage:        0 bytes
   617 ;; Hardware stack levels used: 1
   618 ;; This function calls:
   619 ;;		Nothing
   620 ;; This function is called by:
   621 ;;		_main
   622 ;; This function uses a non-reentrant model
   623 ;;
   624                           
   625                           	psect	text6
   626   0027A4                     __ptext6:
   627                           	callstack 0
   628   0027A4                     _configuro:
   629                           	callstack 126
   630   0027A4  0012               	return		;funcret
   631   0027A6                     __end_of_configuro:
   632                           	callstack 0
   633                           
   634 ;; *************** function _POS_CURSOR *****************
   635 ;; Defined at:
   636 ;;		line 6 in file "LCD.c"
   637 ;; Parameters:    Size  Location     Type
   638 ;;  fila            1    wreg     unsigned char 
   639 ;;  columna         1    3[COMRAM] unsigned char 
   640 ;; Auto vars:     Size  Location     Type
   641 ;;  fila            1    4[COMRAM] unsigned char 
   642 ;; Return value:  Size  Location     Type
   643 ;;                  1    wreg      void 
   644 ;; Registers used:
   645 ;;		wreg, status,2, status,0, cstack
   646 ;; Tracked objects:
   647 ;;		On entry : 0/0
   648 ;;		On exit  : 0/0
   649 ;;		Unchanged: 0/0
   650 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   651 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   652 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   653 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   654 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   655 ;;Total ram usage:        2 bytes
   656 ;; Hardware stack levels used: 1
   657 ;; Hardware stack levels required when called: 2
   658 ;; This function calls:
   659 ;;		_ENVIA_LCD_CMD
   660 ;; This function is called by:
   661 ;;		_main
   662 ;; This function uses a non-reentrant model
   663 ;;
   664                           
   665                           	psect	text7
   666   00262E                     __ptext7:
   667                           	callstack 0
   668   00262E                     _POS_CURSOR:
   669                           	callstack 124
   670                           
   671                           ;incstack = 0
   672                           ;POS_CURSOR@fila stored from wreg
   673   00262E  6E05               	movwf	POS_CURSOR@fila^(0+1280),c
   674   002630                     
   675                           ;LCD.c: 6: void POS_CURSOR(unsigned char fila,unsigned char columna);LCD.c: 7: {;LCD.c: 
      +                          8:  if(fila == 1)
   676   002630  0405               	decf	POS_CURSOR@fila^(0+1280),w,c
   677   002632  A4D8               	btfss	status,2,c
   678   002634  EF1E  F013         	goto	u121
   679   002638  EF20  F013         	goto	u120
   680   00263C                     u121:
   681   00263C  EF26  F013         	goto	l984
   682   002640                     u120:
   683   002640                     
   684                           ;LCD.c: 9:  {;LCD.c: 10:   ENVIA_LCD_CMD(0x80+columna);
   685   002640  5004               	movf	POS_CURSOR@columna^(0+1280),w,c
   686   002642  0F80               	addlw	128
   687   002644  EC4F  F013         	call	_ENVIA_LCD_CMD
   688                           
   689                           ;LCD.c: 11:  }
   690   002648  EF33  F013         	goto	l56
   691   00264C                     l984:
   692   00264C  0E02               	movlw	2
   693   00264E  1805               	xorwf	POS_CURSOR@fila^(0+1280),w,c
   694   002650  A4D8               	btfss	status,2,c
   695   002652  EF2D  F013         	goto	u131
   696   002656  EF2F  F013         	goto	u130
   697   00265A                     u131:
   698   00265A  EF33  F013         	goto	l56
   699   00265E                     u130:
   700   00265E                     
   701                           ;LCD.c: 13:  {;LCD.c: 14:   ENVIA_LCD_CMD(0xC0+columna);
   702   00265E  5004               	movf	POS_CURSOR@columna^(0+1280),w,c
   703   002660  0FC0               	addlw	192
   704   002662  EC4F  F013         	call	_ENVIA_LCD_CMD
   705   002666                     l56:
   706   002666  0012               	return		;funcret
   707   002668                     __end_of_POS_CURSOR:
   708                           	callstack 0
   709                           
   710 ;; *************** function _ENVIA_LCD_CMD *****************
   711 ;; Defined at:
   712 ;;		line 104 in file "LCD.c"
   713 ;; Parameters:    Size  Location     Type
   714 ;;  dato            1    wreg     unsigned char 
   715 ;; Auto vars:     Size  Location     Type
   716 ;;  dato            1    1[COMRAM] unsigned char 
   717 ;;  aux             1    2[COMRAM] unsigned char 
   718 ;; Return value:  Size  Location     Type
   719 ;;                  1    wreg      void 
   720 ;; Registers used:
   721 ;;		wreg, status,2, status,0, cstack
   722 ;; Tracked objects:
   723 ;;		On entry : 0/0
   724 ;;		On exit  : 0/0
   725 ;;		Unchanged: 0/0
   726 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   727 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   728 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   729 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   730 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   731 ;;Total ram usage:        2 bytes
   732 ;; Hardware stack levels used: 1
   733 ;; Hardware stack levels required when called: 1
   734 ;; This function calls:
   735 ;;		_ENVIA_NIBBLE
   736 ;;		_LEER_LCD
   737 ;; This function is called by:
   738 ;;		_POS_CURSOR
   739 ;;		_CURSOR_HOME
   740 ;;		_CURSOR_ONOFF
   741 ;;		_BORRAR_LCD
   742 ;;		_LCD_CONFIG
   743 ;;		_BLINK_CURSOR
   744 ;;		_DISPLAY_ONOFF
   745 ;;		_GENERACARACTER
   746 ;; This function uses a non-reentrant model
   747 ;;
   748                           
   749                           	psect	text8
   750   00269E                     __ptext8:
   751                           	callstack 0
   752   00269E                     _ENVIA_LCD_CMD:
   753                           	callstack 123
   754                           
   755                           ;incstack = 0
   756                           ;ENVIA_LCD_CMD@dato stored from wreg
   757   00269E  6E02               	movwf	ENVIA_LCD_CMD@dato^(0+1280),c
   758   0026A0                     
   759                           ;LCD.c: 104: void ENVIA_LCD_CMD(unsigned char dato);LCD.c: 105: {;LCD.c: 106:  unsigned 
      +                          char aux;;LCD.c: 107:  LATDbits.LATD0 = 0;
   760   0026A0  90C1               	bcf	193,0,c	;volatile
   761   0026A2                     
   762                           ;LCD.c: 108:  LEER_LCD();
   763   0026A2  EC90  F012         	call	_LEER_LCD	;wreg free
   764   0026A6                     
   765                           ;LCD.c: 109:  TRISD = 0b00000000;
   766   0026A6  0E00               	movlw	0
   767   0026A8  6EC9               	movwf	201,c	;volatile
   768   0026AA                     
   769                           ;LCD.c: 111:         _delay(1200);
   770   0026AA  0EF0               	movlw	240
   771   0026AC                     u197:
   772   0026AC  D000               	nop2	
   773   0026AE  2EE8               	decfsz	wreg,f,c
   774   0026B0  D7FD               	bra	u197
   775   0026B2                     
   776                           ;LCD.c: 112:         LATDbits.LATD1 = 0;
   777   0026B2  92C1               	bcf	193,1,c	;volatile
   778   0026B4                     
   779                           ;LCD.c: 113:  LATDbits.LATD2 = 0;
   780   0026B4  94C1               	bcf	193,2,c	;volatile
   781   0026B6                     
   782                           ;LCD.c: 114:  LATDbits.LATD0 = 0;
   783   0026B6  90C1               	bcf	193,0,c	;volatile
   784   0026B8                     
   785                           ;LCD.c: 115:  aux = dato & 0xF0;
   786   0026B8  5002               	movf	ENVIA_LCD_CMD@dato^(0+1280),w,c
   787   0026BA  0BF0               	andlw	240
   788   0026BC  6E03               	movwf	ENVIA_LCD_CMD@aux^(0+1280),c
   789   0026BE                     
   790                           ;LCD.c: 116:  ENVIA_NIBBLE(aux);
   791   0026BE  5003               	movf	ENVIA_LCD_CMD@aux^(0+1280),w,c
   792   0026C0  ECB5  F013         	call	_ENVIA_NIBBLE
   793   0026C4                     
   794                           ;LCD.c: 117:  aux = dato<<4;
   795   0026C4  3802               	swapf	ENVIA_LCD_CMD@dato^(0+1280),w,c
   796   0026C6  0BF0               	andlw	240
   797   0026C8  6E03               	movwf	ENVIA_LCD_CMD@aux^(0+1280),c
   798   0026CA                     
   799                           ;LCD.c: 118:  ENVIA_NIBBLE(aux);
   800   0026CA  5003               	movf	ENVIA_LCD_CMD@aux^(0+1280),w,c
   801   0026CC  ECB5  F013         	call	_ENVIA_NIBBLE
   802   0026D0  0012               	return		;funcret
   803   0026D2                     __end_of_ENVIA_LCD_CMD:
   804                           	callstack 0
   805                           
   806 ;; *************** function _ESCRIBE_MENSAJE *****************
   807 ;; Defined at:
   808 ;;		line 41 in file "LCD.c"
   809 ;; Parameters:    Size  Location     Type
   810 ;;  cadena          1    3[COMRAM] PTR const unsigned char 
   811 ;;		 -> STR_2(14), STR_1(16), 
   812 ;;  tam             1    4[COMRAM] unsigned char 
   813 ;; Auto vars:     Size  Location     Type
   814 ;;  i               1    6[COMRAM] unsigned char 
   815 ;; Return value:  Size  Location     Type
   816 ;;                  1    wreg      void 
   817 ;; Registers used:
   818 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   819 ;; Tracked objects:
   820 ;;		On entry : 0/0
   821 ;;		On exit  : 0/0
   822 ;;		Unchanged: 0/0
   823 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   824 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   825 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   826 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   827 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   828 ;;Total ram usage:        4 bytes
   829 ;; Hardware stack levels used: 1
   830 ;; Hardware stack levels required when called: 2
   831 ;; This function calls:
   832 ;;		_ENVIA_CHAR
   833 ;; This function is called by:
   834 ;;		_main
   835 ;; This function uses a non-reentrant model
   836 ;;
   837                           
   838                           	psect	text9
   839   0026D2                     __ptext9:
   840                           	callstack 0
   841   0026D2                     _ESCRIBE_MENSAJE:
   842                           	callstack 124
   843   0026D2                     
   844                           ;LCD.c: 41: void ESCRIBE_MENSAJE(const char *cadena,unsigned char tam);LCD.c: 42: {;LCD.
      +                          c: 43:  unsigned char i = 0;
   845   0026D2  0E00               	movlw	0
   846   0026D4  6E07               	movwf	ESCRIBE_MENSAJE@i^(0+1280),c
   847                           
   848                           ;LCD.c: 44:  for(i = 0; i<tam; i++)
   849   0026D6  0E00               	movlw	0
   850   0026D8  6E07               	movwf	ESCRIBE_MENSAJE@i^(0+1280),c
   851   0026DA  EF79  F013         	goto	l994
   852   0026DE                     l990:
   853                           
   854                           ;LCD.c: 45:  {;LCD.c: 46:   ENVIA_CHAR(cadena[i]);
   855   0026DE  5004               	movf	ESCRIBE_MENSAJE@cadena^(0+1280),w,c
   856   0026E0  2407               	addwf	ESCRIBE_MENSAJE@i^(0+1280),w,c
   857   0026E2  6E06               	movwf	??_ESCRIBE_MENSAJE^(0+1280),c
   858   0026E4  C506  F4F6         	movff	??_ESCRIBE_MENSAJE,tblptrl
   859   0026E8                     	if	0	;There is only one active tblptr byte
   860   0026E8                     	endif
   861   0026E8                     	if	0	;tblptru may be non-zero
   862   0026E8                     	endif
   863   0026E8                     	if	0	;tblptru may be non-zero
   864   0026E8                     	endif
   865   0026E8  0008               	tblrd		*
   866   0026EA  50F5               	movf	tablat,w,c
   867   0026EC  EC83  F013         	call	_ENVIA_CHAR
   868   0026F0                     
   869                           ;LCD.c: 47:  }
   870   0026F0  2A07               	incf	ESCRIBE_MENSAJE@i^(0+1280),f,c
   871   0026F2                     l994:
   872   0026F2  5005               	movf	ESCRIBE_MENSAJE@tam^(0+1280),w,c
   873   0026F4  5C07               	subwf	ESCRIBE_MENSAJE@i^(0+1280),w,c
   874   0026F6  A0D8               	btfss	status,0,c
   875   0026F8  EF80  F013         	goto	u141
   876   0026FC  EF82  F013         	goto	u140
   877   002700                     u141:
   878   002700  EF6F  F013         	goto	l990
   879   002704                     u140:
   880   002704  0012               	return		;funcret
   881   002706                     __end_of_ESCRIBE_MENSAJE:
   882                           	callstack 0
   883                           
   884 ;; *************** function _ENVIA_CHAR *****************
   885 ;; Defined at:
   886 ;;		line 50 in file "LCD.c"
   887 ;; Parameters:    Size  Location     Type
   888 ;;  dato            1    wreg     unsigned char 
   889 ;; Auto vars:     Size  Location     Type
   890 ;;  dato            1    1[COMRAM] unsigned char 
   891 ;;  aux             1    2[COMRAM] unsigned char 
   892 ;; Return value:  Size  Location     Type
   893 ;;                  1    wreg      void 
   894 ;; Registers used:
   895 ;;		wreg, status,2, status,0, cstack
   896 ;; Tracked objects:
   897 ;;		On entry : 0/0
   898 ;;		On exit  : 0/0
   899 ;;		Unchanged: 0/0
   900 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   901 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   902 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   903 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   904 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   905 ;;Total ram usage:        2 bytes
   906 ;; Hardware stack levels used: 1
   907 ;; Hardware stack levels required when called: 1
   908 ;; This function calls:
   909 ;;		_ENVIA_NIBBLE
   910 ;;		_LEER_LCD
   911 ;; This function is called by:
   912 ;;		_ESCRIBE_MENSAJE
   913 ;;		_GENERACARACTER
   914 ;; This function uses a non-reentrant model
   915 ;;
   916                           
   917                           	psect	text10
   918   002706                     __ptext10:
   919                           	callstack 0
   920   002706                     _ENVIA_CHAR:
   921                           	callstack 124
   922                           
   923                           ;incstack = 0
   924                           ;ENVIA_CHAR@dato stored from wreg
   925   002706  6E02               	movwf	ENVIA_CHAR@dato^(0+1280),c
   926   002708                     
   927                           ;LCD.c: 50: void ENVIA_CHAR(unsigned char dato);LCD.c: 51: {;LCD.c: 52:  unsigned char a
      +                          ux;;LCD.c: 53:  LATDbits.LATD0 = 1;
   928   002708  80C1               	bsf	193,0,c	;volatile
   929   00270A                     
   930                           ;LCD.c: 54:  LEER_LCD();
   931   00270A  EC90  F012         	call	_LEER_LCD	;wreg free
   932   00270E                     
   933                           ;LCD.c: 55:  TRISD = 0x00;
   934   00270E  0E00               	movlw	0
   935   002710  6EC9               	movwf	201,c	;volatile
   936   002712                     
   937                           ;LCD.c: 56:         _delay(1200);
   938   002712  0EF0               	movlw	240
   939   002714                     u207:
   940   002714  D000               	nop2	
   941   002716  2EE8               	decfsz	wreg,f,c
   942   002718  D7FD               	bra	u207
   943   00271A                     
   944                           ;LCD.c: 58:  LATDbits.LATD1 = 0;
   945   00271A  92C1               	bcf	193,1,c	;volatile
   946   00271C                     
   947                           ;LCD.c: 59:  LATDbits.LATD2 = 0;
   948   00271C  94C1               	bcf	193,2,c	;volatile
   949   00271E                     
   950                           ;LCD.c: 60:  LATDbits.LATD0 = 1;
   951   00271E  80C1               	bsf	193,0,c	;volatile
   952   002720                     
   953                           ;LCD.c: 61:  aux = dato & 0xF0;
   954   002720  5002               	movf	ENVIA_CHAR@dato^(0+1280),w,c
   955   002722  0BF0               	andlw	240
   956   002724  6E03               	movwf	ENVIA_CHAR@aux^(0+1280),c
   957   002726                     
   958                           ;LCD.c: 62:  ENVIA_NIBBLE(aux);
   959   002726  5003               	movf	ENVIA_CHAR@aux^(0+1280),w,c
   960   002728  ECB5  F013         	call	_ENVIA_NIBBLE
   961   00272C                     
   962                           ;LCD.c: 63:  aux = dato << 4;
   963   00272C  3802               	swapf	ENVIA_CHAR@dato^(0+1280),w,c
   964   00272E  0BF0               	andlw	240
   965   002730  6E03               	movwf	ENVIA_CHAR@aux^(0+1280),c
   966   002732                     
   967                           ;LCD.c: 64:  ENVIA_NIBBLE(aux);
   968   002732  5003               	movf	ENVIA_CHAR@aux^(0+1280),w,c
   969   002734  ECB5  F013         	call	_ENVIA_NIBBLE
   970   002738  0012               	return		;funcret
   971   00273A                     __end_of_ENVIA_CHAR:
   972                           	callstack 0
   973                           
   974 ;; *************** function _LEER_LCD *****************
   975 ;; Defined at:
   976 ;;		line 121 in file "LCD.c"
   977 ;; Parameters:    Size  Location     Type
   978 ;;		None
   979 ;; Auto vars:     Size  Location     Type
   980 ;;  aux             1    0[COMRAM] unsigned char 
   981 ;; Return value:  Size  Location     Type
   982 ;;                  1    wreg      void 
   983 ;; Registers used:
   984 ;;		wreg, status,2, status,0
   985 ;; Tracked objects:
   986 ;;		On entry : 0/0
   987 ;;		On exit  : 0/0
   988 ;;		Unchanged: 0/0
   989 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   990 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   991 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   992 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   993 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   994 ;;Total ram usage:        1 bytes
   995 ;; Hardware stack levels used: 1
   996 ;; This function calls:
   997 ;;		Nothing
   998 ;; This function is called by:
   999 ;;		_ENVIA_CHAR
  1000 ;;		_ENVIA_LCD_CMD
  1001 ;; This function uses a non-reentrant model
  1002 ;;
  1003                           
  1004                           	psect	text11
  1005   002520                     __ptext11:
  1006                           	callstack 0
  1007   002520                     _LEER_LCD:
  1008                           	callstack 123
  1009   002520                     
  1010                           ;LCD.c: 123:  unsigned char aux;;LCD.c: 124:  TRISD = 0xF8;
  1011   002520  0EF8               	movlw	248
  1012   002522  6EC9               	movwf	201,c	;volatile
  1013   002524                     
  1014                           ;LCD.c: 125:  LATDbits.LATD0 = 0;
  1015   002524  90C1               	bcf	193,0,c	;volatile
  1016   002526                     
  1017                           ;LCD.c: 126:  LATDbits.LATD1 = 1;
  1018   002526  82C1               	bsf	193,1,c	;volatile
  1019   002528                     
  1020                           ;LCD.c: 127:  LATDbits.LATD2 = 1;
  1021   002528  84C1               	bsf	193,2,c	;volatile
  1022   00252A                     
  1023                           ;LCD.c: 128:         _delay(1200);
  1024   00252A  0EF0               	movlw	240
  1025   00252C                     u217:
  1026   00252C  D000               	nop2	
  1027   00252E  2EE8               	decfsz	wreg,f,c
  1028   002530  D7FD               	bra	u217
  1029   002532                     
  1030                           ;LCD.c: 130:  aux = PORTD;
  1031   002532  C4D1 F501          	movff	1233,LEER_LCD@aux	;volatile
  1032   002536                     
  1033                           ;LCD.c: 131:  LATDbits.LATD2 = 0;
  1034   002536  94C1               	bcf	193,2,c	;volatile
  1035   002538                     
  1036                           ;LCD.c: 132:         _delay(1200);
  1037   002538  0EF0               	movlw	240
  1038   00253A                     u227:
  1039   00253A  D000               	nop2	
  1040   00253C  2EE8               	decfsz	wreg,f,c
  1041   00253E  D7FD               	bra	u227
  1042   002540                     
  1043                           ;LCD.c: 134:  LATDbits.LATD2 = 1;
  1044   002540  84C1               	bsf	193,2,c	;volatile
  1045   002542                     
  1046                           ;LCD.c: 135:         _delay(1200);
  1047   002542  0EF0               	movlw	240
  1048   002544                     u237:
  1049   002544  D000               	nop2	
  1050   002546  2EE8               	decfsz	wreg,f,c
  1051   002548  D7FD               	bra	u237
  1052   00254A                     
  1053                           ;LCD.c: 137:  LATDbits.LATD2 = 0;
  1054   00254A  94C1               	bcf	193,2,c	;volatile
  1055   00254C                     l804:
  1056                           
  1057                           ;LCD.c: 138:  aux = aux & 0x80;
  1058   00254C  5001               	movf	LEER_LCD@aux^(0+1280),w,c
  1059   00254E  0B80               	andlw	128
  1060   002550  6E01               	movwf	LEER_LCD@aux^(0+1280),c
  1061                           
  1062                           ;LCD.c: 139:  while(aux == 0x80)
  1063   002552  EFBF  F012         	goto	l818
  1064   002556                     l99:
  1065                           
  1066                           ;LCD.c: 140:         {;LCD.c: 141:             LATDbits.LATD2 = 1;
  1067   002556  84C1               	bsf	193,2,c	;volatile
  1068   002558                     
  1069                           ;LCD.c: 142:             _delay(1200);
  1070   002558  0EF0               	movlw	240
  1071   00255A                     u247:
  1072   00255A  D000               	nop2	
  1073   00255C  2EE8               	decfsz	wreg,f,c
  1074   00255E  D7FD               	bra	u247
  1075   002560                     
  1076                           ;LCD.c: 143:             aux = PORTD;
  1077   002560  C4D1 F501          	movff	1233,LEER_LCD@aux	;volatile
  1078   002564                     
  1079                           ;LCD.c: 144:             LATDbits.LATD2 = 0;
  1080   002564  94C1               	bcf	193,2,c	;volatile
  1081                           
  1082                           ;LCD.c: 145:             _delay(1200);
  1083   002566  0EF0               	movlw	240
  1084   002568                     u257:
  1085   002568  D000               	nop2	
  1086   00256A  2EE8               	decfsz	wreg,f,c
  1087   00256C  D7FD               	bra	u257
  1088   00256E                     
  1089                           ;LCD.c: 146:             LATDbits.LATD2 = 1;
  1090   00256E  84C1               	bsf	193,2,c	;volatile
  1091                           
  1092                           ;LCD.c: 147:             _delay(1200);
  1093   002570  0EF0               	movlw	240
  1094   002572                     u267:
  1095   002572  D000               	nop2	
  1096   002574  2EE8               	decfsz	wreg,f,c
  1097   002576  D7FD               	bra	u267
  1098   002578                     
  1099                           ;LCD.c: 148:             LATDbits.LATD2 = 0;
  1100   002578  94C1               	bcf	193,2,c	;volatile
  1101   00257A  EFA6  F012         	goto	l804
  1102   00257E                     l818:
  1103                           
  1104                           ;LCD.c: 139:  while(aux == 0x80)
  1105   00257E  0E80               	movlw	128
  1106   002580  1801               	xorwf	LEER_LCD@aux^(0+1280),w,c
  1107   002582  B4D8               	btfsc	status,2,c
  1108   002584  EFC6  F012         	goto	u11
  1109   002588  EFC8  F012         	goto	u10
  1110   00258C                     u11:
  1111   00258C  EFAB  F012         	goto	l99
  1112   002590                     u10:
  1113   002590  0012               	return		;funcret
  1114   002592                     __end_of_LEER_LCD:
  1115                           	callstack 0
  1116                           
  1117 ;; *************** function _ENVIA_NIBBLE *****************
  1118 ;; Defined at:
  1119 ;;		line 93 in file "LCD.c"
  1120 ;; Parameters:    Size  Location     Type
  1121 ;;  dato            1    wreg     unsigned char 
  1122 ;; Auto vars:     Size  Location     Type
  1123 ;;  dato            1    0[COMRAM] unsigned char 
  1124 ;; Return value:  Size  Location     Type
  1125 ;;                  1    wreg      void 
  1126 ;; Registers used:
  1127 ;;		wreg, status,2, status,0
  1128 ;; Tracked objects:
  1129 ;;		On entry : 0/0
  1130 ;;		On exit  : 0/0
  1131 ;;		Unchanged: 0/0
  1132 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1133 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1134 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1135 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1136 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1137 ;;Total ram usage:        1 bytes
  1138 ;; Hardware stack levels used: 1
  1139 ;; This function calls:
  1140 ;;		Nothing
  1141 ;; This function is called by:
  1142 ;;		_ENVIA_CHAR
  1143 ;;		_LCD_CONFIG
  1144 ;;		_ENVIA_LCD_CMD
  1145 ;; This function uses a non-reentrant model
  1146 ;;
  1147                           
  1148                           	psect	text12
  1149   00276A                     __ptext12:
  1150                           	callstack 0
  1151   00276A                     _ENVIA_NIBBLE:
  1152                           	callstack 124
  1153                           
  1154                           ;incstack = 0
  1155                           ;ENVIA_NIBBLE@dato stored from wreg
  1156   00276A  6E01               	movwf	ENVIA_NIBBLE@dato^(0+1280),c
  1157   00276C                     
  1158                           ;LCD.c: 93: void ENVIA_NIBBLE(unsigned char dato);LCD.c: 94: {;LCD.c: 95:  LATD &= 0x0F;
  1159   00276C  0E0F               	movlw	15
  1160   00276E  16C1               	andwf	193,f,c	;volatile
  1161                           
  1162                           ;LCD.c: 96:  dato &= 0xF0;
  1163   002770  0EF0               	movlw	240
  1164   002772  1601               	andwf	ENVIA_NIBBLE@dato^(0+1280),f,c
  1165                           
  1166                           ;LCD.c: 97:  LATD|= dato;
  1167   002774  5001               	movf	ENVIA_NIBBLE@dato^(0+1280),w,c	;volatile
  1168   002776  12C1               	iorwf	193,f,c	;volatile
  1169   002778                     
  1170                           ;LCD.c: 98:  LATDbits.LATD2 = 1;
  1171   002778  84C1               	bsf	193,2,c	;volatile
  1172   00277A                     
  1173                           ;LCD.c: 100:         _delay(1200);
  1174   00277A  0EF0               	movlw	240
  1175   00277C                     u277:
  1176   00277C  D000               	nop2	
  1177   00277E  2EE8               	decfsz	wreg,f,c
  1178   002780  D7FD               	bra	u277
  1179   002782                     
  1180                           ;LCD.c: 101:  LATDbits.LATD2 = 0;
  1181   002782  94C1               	bcf	193,2,c	;volatile
  1182   002784  0012               	return		;funcret
  1183   002786                     __end_of_ENVIA_NIBBLE:
  1184                           	callstack 0
  1185                           
  1186                           	psect	rparam
  1187   000000                     
  1188                           	psect	config
  1189                           
  1190                           ;Config register CONFIG1 @ 0x300000
  1191                           ;	External Oscillator Selection
  1192                           ;	FEXTOSC = OFF, Oscillator not enabled
  1193                           ;	Reset Oscillator Selection
  1194                           ;	RSTOSC = EXTOSC, EXTOSC operating per FEXTOSC bits (device manufacturing default)
  1195   300000                     	org	3145728
  1196   300000  FC                 	db	252
  1197                           
  1198                           ;Config register CONFIG2 @ 0x300001
  1199                           ;	Clock out Enable bit
  1200                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
  1201                           ;	PRLOCKED One-Way Set Enable bit
  1202                           ;	PR1WAY = ON, PRLOCKED bit can be cleared and set only once
  1203                           ;	Clock Switch Enable bit
  1204                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
  1205                           ;	Fail-Safe Clock Monitor Enable bit
  1206                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
  1207   300001                     	org	3145729
  1208   300001  FF                 	db	255
  1209                           
  1210                           ;Config register CONFIG3 @ 0x300002
  1211                           ;	MCLR Enable bit
  1212                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
  1213                           ;	Power-up timer selection bits
  1214                           ;	PWRTS = PWRT_64, PWRT set at 64ms
  1215                           ;	Multi-vector enable bit
  1216                           ;	MVECEN = ON, Multi-vector enabled, Vector table used for interrupts
  1217                           ;	IVTLOCK bit One-way set enable bit
  1218                           ;	IVT1WAY = ON, IVTLOCKED bit can be cleared and set only once
  1219                           ;	Low Power BOR Enable bit
  1220                           ;	LPBOREN = OFF, Low-Power BOR disabled
  1221                           ;	Brown-out Reset Enable bits
  1222                           ;	BOREN = OFF, Brown-out Reset disabled
  1223   300002                     	org	3145730
  1224   300002  3D                 	db	61
  1225                           
  1226                           ;Config register CONFIG4 @ 0x300003
  1227                           ;	Brown-out Reset Voltage Selection bits
  1228                           ;	BORV = VBOR_1P9, Brown-out Reset Voltage (VBOR) set to 1.9V
  1229                           ;	ZCD Disable bit
  1230                           ;	ZCD = OFF, ZCD module is disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCD
      +                          CON
  1231                           ;	PPSLOCK bit One-Way Set Enable bit
  1232                           ;	PPS1WAY = ON, PPSLOCKED bit can be cleared and set only once; PPS registers remain loc
      +                          ked after one clear/set cycle
  1233                           ;	Stack Full/Underflow Reset Enable bit
  1234                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1235                           ;	Low Voltage Programming Enable bit
  1236                           ;	LVP = OFF, HV on MCLR/VPP must be used for programming
  1237                           ;	Extended Instruction Set Enable bit
  1238                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
  1239   300003                     	org	3145731
  1240   300003  DF                 	db	223
  1241                           
  1242                           ;Config register CONFIG5 @ 0x300004
  1243                           ;	WDT Period selection bits
  1244                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  1245                           ;	WDT operating mode
  1246                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
  1247   300004                     	org	3145732
  1248   300004  9F                 	db	159
  1249                           
  1250                           ;Config register CONFIG6 @ 0x300005
  1251                           ;	WDT Window Select bits
  1252                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
  1253                           ;	WDT input clock selector
  1254                           ;	WDTCCS = SC, Software Control
  1255   300005                     	org	3145733
  1256   300005  FF                 	db	255
  1257                           
  1258                           ;Config register CONFIG7 @ 0x300006
  1259                           ;	Boot Block Size selection bits
  1260                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
  1261                           ;	Boot Block enable bit
  1262                           ;	BBEN = OFF, Boot block disabled
  1263                           ;	Storage Area Flash enable bit
  1264                           ;	SAFEN = OFF, SAF disabled
  1265                           ;	Background Debugger
  1266                           ;	DEBUG = OFF, Background Debugger disabled
  1267   300006                     	org	3145734
  1268   300006  FF                 	db	255
  1269                           
  1270                           ;Config register CONFIG8 @ 0x300007
  1271                           ;	Boot Block Write Protection bit
  1272                           ;	WRTB = OFF, Boot Block not Write protected
  1273                           ;	Configuration Register Write Protection bit
  1274                           ;	WRTC = OFF, Configuration registers not Write protected
  1275                           ;	Data EEPROM Write Protection bit
  1276                           ;	WRTD = OFF, Data EEPROM not Write protected
  1277                           ;	SAF Write protection bit
  1278                           ;	WRTSAF = OFF, SAF not Write Protected
  1279                           ;	Application Block write protection bit
  1280                           ;	WRTAPP = OFF, Application Block not write protected
  1281   300007                     	org	3145735
  1282   300007  FF                 	db	255
  1283                           
  1284                           ;Config register CONFIG10 @ 0x300009
  1285                           ;	PFM and Data EEPROM Code Protection bit
  1286                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
  1287   300009                     	org	3145737
  1288   300009  FF                 	db	255
  1289                           tosu	equ	0x4FF
  1290                           tosh	equ	0x4FE
  1291                           tosl	equ	0x4FD
  1292                           stkptr	equ	0x4FC
  1293                           pclatu	equ	0x4FB
  1294                           pclath	equ	0x4FA
  1295                           pcl	equ	0x4F9
  1296                           tblptru	equ	0x4F8
  1297                           tblptrh	equ	0x4F7
  1298                           tblptrl	equ	0x4F6
  1299                           tablat	equ	0x4F5
  1300                           prodh	equ	0x4F4
  1301                           prodl	equ	0x4F3
  1302                           indf0	equ	0x4EF
  1303                           postinc0	equ	0x4EE
  1304                           postdec0	equ	0x4ED
  1305                           preinc0	equ	0x4EC
  1306                           plusw0	equ	0x4EB
  1307                           fsr0h	equ	0x4EA
  1308                           fsr0l	equ	0x4E9
  1309                           wreg	equ	0x4E8
  1310                           indf1	equ	0x4E7
  1311                           postinc1	equ	0x4E6
  1312                           postdec1	equ	0x4E5
  1313                           preinc1	equ	0x4E4
  1314                           plusw1	equ	0x4E3
  1315                           fsr1h	equ	0x4E2
  1316                           fsr1l	equ	0x4E1
  1317                           bsr	equ	0x4E0
  1318                           indf2	equ	0x4DF
  1319                           postinc2	equ	0x4DE
  1320                           postdec2	equ	0x4DD
  1321                           preinc2	equ	0x4DC
  1322                           plusw2	equ	0x4DB
  1323                           fsr2h	equ	0x4DA
  1324                           fsr2l	equ	0x4D9
  1325                           status	equ	0x4D8

Data Sizes:
    Strings     30
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      7       7
    BANK5           160      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0
    BANK32          256      0       0
    BANK33          256      0       0
    BANK34          256      0       0
    BANK35          256      0       0
    BANK36          256      0       0

Pointer List with Targets:

    ESCRIBE_MENSAJE@cadena	PTR const unsigned char  size(1) Largest target is 16
		 -> STR_1(CODE[16]), STR_2(CODE[14]), 


Critical Paths under _main in COMRAM

    _main->_ESCRIBE_MENSAJE
    _lcd_init->_CURSOR_ONOFF
    _lcd_init->_LCD_CONFIG
    _LCD_CONFIG->_ENVIA_LCD_CMD
    _CURSOR_ONOFF->_ENVIA_LCD_CMD
    _CURSOR_HOME->_ENVIA_LCD_CMD
    _BORRAR_LCD->_ENVIA_LCD_CMD
    _POS_CURSOR->_ENVIA_LCD_CMD
    _ENVIA_LCD_CMD->_ENVIA_NIBBLE
    _ENVIA_LCD_CMD->_LEER_LCD
    _ESCRIBE_MENSAJE->_ENVIA_CHAR
    _ENVIA_CHAR->_ENVIA_NIBBLE
    _ENVIA_CHAR->_LEER_LCD

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _main in BANK32

    None.

Critical Paths under _main in BANK33

    None.

Critical Paths under _main in BANK34

    None.

Critical Paths under _main in BANK35

    None.

Critical Paths under _main in BANK36

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1400
                    _ESCRIBE_MENSAJE
                         _POS_CURSOR
                          _configuro
                           _lcd_init
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             2     2      0     525
                                              4 COMRAM     2     2      0
                         _BORRAR_LCD
                        _CURSOR_HOME
                       _CURSOR_ONOFF
                         _LCD_CONFIG
 ---------------------------------------------------------------------------------
 (2) _LCD_CONFIG                                           1     1      0     135
                                              3 COMRAM     1     1      0
                      _ENVIA_LCD_CMD
                       _ENVIA_NIBBLE
 ---------------------------------------------------------------------------------
 (2) _CURSOR_ONOFF                                         1     1      0     150
                                              3 COMRAM     1     1      0
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _CURSOR_HOME                                          0     0      0     120
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _BORRAR_LCD                                           0     0      0     120
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (1) _configuro                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _POS_CURSOR                                           2     1      1     360
                                              3 COMRAM     2     1      1
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (3) _ENVIA_LCD_CMD                                        2     2      0     120
                                              1 COMRAM     2     2      0
                       _ENVIA_NIBBLE
                           _LEER_LCD
 ---------------------------------------------------------------------------------
 (1) _ESCRIBE_MENSAJE                                      4     2      2     515
                                              3 COMRAM     4     2      2
                         _ENVIA_CHAR
 ---------------------------------------------------------------------------------
 (2) _ENVIA_CHAR                                           2     2      0     120
                                              1 COMRAM     2     2      0
                       _ENVIA_NIBBLE
                           _LEER_LCD
 ---------------------------------------------------------------------------------
 (4) _LEER_LCD                                             1     1      0      45
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _ENVIA_NIBBLE                                         1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ESCRIBE_MENSAJE
     _ENVIA_CHAR
       _ENVIA_NIBBLE
       _LEER_LCD
   _POS_CURSOR
     _ENVIA_LCD_CMD
       _ENVIA_NIBBLE
       _LEER_LCD
   _configuro
   _lcd_init
     _BORRAR_LCD
       _ENVIA_LCD_CMD
     _CURSOR_HOME
       _ENVIA_LCD_CMD
     _CURSOR_ONOFF
       _ENVIA_LCD_CMD
     _LCD_CONFIG
       _ENVIA_LCD_CMD
       _ENVIA_NIBBLE

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             400      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F      7       7       1        7.4%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK5            A0      0       0       4        0.0%
BANK5               A0      0       0       5        0.0%
BITBANK6           100      0       0       6        0.0%
BANK6              100      0       0       7        0.0%
BITBANK7           100      0       0       8        0.0%
BANK7              100      0       0       9        0.0%
BITBANK8           100      0       0      10        0.0%
BANK8              100      0       0      11        0.0%
BITBANK9           100      0       0      12        0.0%
BANK9              100      0       0      13        0.0%
BITBANK10          100      0       0      14        0.0%
BANK10             100      0       0      15        0.0%
BITBANK11          100      0       0      16        0.0%
BANK11             100      0       0      17        0.0%
BITBANK12          100      0       0      18        0.0%
BANK12             100      0       0      19        0.0%
BITBANK13          100      0       0      20        0.0%
BANK13             100      0       0      21        0.0%
BITBANK14          100      0       0      22        0.0%
BANK14             100      0       0      23        0.0%
BITBANK15          100      0       0      24        0.0%
BANK15             100      0       0      25        0.0%
BITBANK16          100      0       0      26        0.0%
BANK16             100      0       0      27        0.0%
BITBANK17          100      0       0      28        0.0%
BANK17             100      0       0      29        0.0%
BITBANK18          100      0       0      30        0.0%
BANK18             100      0       0      31        0.0%
BITBANK19          100      0       0      32        0.0%
BANK19             100      0       0      33        0.0%
BITBANK20          100      0       0      34        0.0%
BANK20             100      0       0      35        0.0%
BITBANK21          100      0       0      36        0.0%
BANK21             100      0       0      37        0.0%
BITBANK22          100      0       0      38        0.0%
BANK22             100      0       0      39        0.0%
BITBANK23          100      0       0      40        0.0%
BANK23             100      0       0      41        0.0%
BITBANK24          100      0       0      42        0.0%
BANK24             100      0       0      43        0.0%
BITBANK25          100      0       0      44        0.0%
BANK25             100      0       0      45        0.0%
BITBANK26          100      0       0      46        0.0%
BANK26             100      0       0      47        0.0%
BITBANK27          100      0       0      48        0.0%
BANK27             100      0       0      49        0.0%
BITBANK28          100      0       0      50        0.0%
BANK28             100      0       0      51        0.0%
BITBANK29          100      0       0      52        0.0%
BANK29             100      0       0      53        0.0%
BITBANK30          100      0       0      54        0.0%
BANK30             100      0       0      55        0.0%
BITBANK31          100      0       0      56        0.0%
BANK31             100      0       0      57        0.0%
BITBANK32          100      0       0      58        0.0%
BANK32             100      0       0      59        0.0%
BITBANK33          100      0       0      60        0.0%
BANK33             100      0       0      61        0.0%
BITBANK34          100      0       0      62        0.0%
BANK34             100      0       0      63        0.0%
BITBANK35          100      0       0      64        0.0%
BANK35             100      0       0      65        0.0%
BITBANK36          100      0       0      66        0.0%
BANK36             100      0       0      67        0.0%
BITBIGSFR_1        100      0       0      68        0.0%
BIGRAM            1FFF      0       0      69        0.0%
BITBIGSFRhh         2E      0       0      70        0.0%
BITBIGSFRhl          7      0       0      71        0.0%
BITBIGSFRlhh         7      0       0      72        0.0%
BITBIGSFRlhl        A8      0       0      73        0.0%
BITBIGSFRll        418      0       0      74        0.0%
ABS                  0      0       0      75        0.0%
BIGSFR_1             0      0       0     200        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Thu Oct 12 16:04:20 2023

                     l21 27A4                       l24 269C                       l80 2704  
                     l56 2666                       l74 2768                       l83 2738  
                     l92 2784                       l69 279A                       l86 27A2  
                     l95 26D0                       l89 25F0                       l99 2556  
                     u10 2590                       u11 258C                       u20 274C  
                     u21 2748                       u30 2762                       u31 275E  
          ENVIA_CHAR@aux 0503                      l101 2590                      l800 2542  
                    l810 2564                      l802 254A                      l820 276C  
                    l812 256E                      l804 254C                      l900 2720  
                    l822 2778                      l814 2578                      l806 2558  
                    l902 2726                      l830 26A2                      l910 2672  
                    l824 277A                      l808 2560                      l904 272C  
                    l840 26B6                      l832 26A6                      l912 2676  
                    l826 2782                      l818 257E                      l906 2732  
                    l842 26B8                      l834 26AA                      l850 2592  
                    l914 268E                      l844 26BE                      l836 26B2  
                    l828 26A0                      l860 25C6                      l852 2596  
                    l916 2692                      l908 2668                      l790 252A  
                    l782 2520                      l846 26C4                      l838 26B4  
                    l870 25E4                      l862 25CC                      l854 259C  
                    l918 2696                      l792 2532                      l784 2524  
                    l848 26CA                      l880 274C                      l872 25EA  
                    l864 25D2                      l856 25AA                      l794 2536  
                    l786 2526                      l890 270E                      l874 279C  
                    l882 2752                      l866 25D8                      l858 25BE  
                    l796 2538                      l788 2528                      l892 2712  
                    l980 2630                      l876 2794                      l884 2762  
                    l868 25DE                      l798 2540                      l894 271A  
                    l886 2708                      l990 26DE                      l982 2640  
                    l878 273C                      l896 271C                      l888 270A  
                    l992 26F0                      l984 264C                      l898 271E  
                    l994 26F2                      l986 265E                      l988 26D2  
                    l996 25F2                      l998 25F6                      u120 2640  
                    u121 263C                      u130 265E                      u131 265A  
                    u140 2704                      u141 2700                      u207 2714  
                    u217 252C                      u227 253A                      u237 2544  
                    u157 2680                      u247 255A                      u167 25A2  
                    u257 2568                      u177 25B0                      u267 2572  
                    u187 25C0                      u277 277C                      u197 26AC  
            LEER_LCD@aux 0501                      wreg 04E8             ?_CURSOR_HOME 0501  
         ??_ENVIA_NIBBLE 0501           ENVIA_CHAR@dato 0502                     l1000 25FA  
                   l1002 2604                     l1004 2610                     l1006 261A  
                   STR_1 2501                     STR_2 2511                     _LATD 04C1  
                   _main 25F2                     start FFFC            ?_CURSOR_ONOFF 0501  
           ___param_bank 0000          ??_ENVIA_LCD_CMD 0502         __end_of_LEER_LCD 2592  
                  ?_main 0501                    _PORTD 04D1                    _TRISD 04C9  
            ?_POS_CURSOR 0504                    tablat 04F5                    status 04D8  
         ??_CURSOR_ONOFF 0504          __initialization 2786             __end_of_main 262E  
        _ESCRIBE_MENSAJE 26D2                   ??_main 0508            __activetblptr 0001  
                 _ANSELD 0418         __end_of_lcd_init 269E     __end_of_ENVIA_NIBBLE 2786  
                 isa$std 0001             __mediumconst 0000                   tblptrh 04F7  
                 tblptrl 04F6                   tblptru 04F8             ??_BORRAR_LCD 0504  
              ?_LEER_LCD 0501               __accesstop 0560  __end_of__initialization 2786  
           ??_LCD_CONFIG 0504            ___rparam_used 0001             ??_ENVIA_CHAR 0502  
__end_of_ESCRIBE_MENSAJE 2706           __pcstackCOMRAM 0501       __end_of_BORRAR_LCD 27A4  
       ENVIA_LCD_CMD@aux 0503     __end_of_CURSOR_ONOFF 276A       __end_of_LCD_CONFIG 25F2  
     __end_of_ENVIA_CHAR 273A               ??_LEER_LCD 0501         ENVIA_NIBBLE@dato 0501  
           ??_POS_CURSOR 0505                ?_lcd_init 0501                  __Hparam 0000  
                __Lparam 0000         ?_ESCRIBE_MENSAJE 0504        __end_of_configuro 27A6  
           __psmallconst 2500    __end_of_ENVIA_LCD_CMD 26D2                  __pcinit 2786  
     __end_of_POS_CURSOR 2668                  __ramtop 2500                  __ptext0 25F2  
                __ptext1 2668                  __ptext2 2592                  __ptext3 273A  
                __ptext4 2794                  __ptext5 279C                  __ptext6 27A4  
                __ptext7 262E                  __ptext8 269E                  __ptext9 26D2  
             ??_lcd_init 0505             _ENVIA_NIBBLE 276A     end_of_initialization 2786  
           _CURSOR_ONOFF 273A       CURSOR_ONOFF@estado 0504            ??_CURSOR_HOME 0504  
    start_initialization 2786        ENVIA_LCD_CMD@dato 0502      __end_of_CURSOR_HOME 279C  
              _configuro 27A4              __smallconst 2500                 _LEER_LCD 2520  
               _LATDbits 04C1         ESCRIBE_MENSAJE@i 0507           POS_CURSOR@fila 0505  
             ?_configuro 0501              _CURSOR_HOME 2794                 __Hrparam 0000  
               __Lrparam 0000             __Lsmallconst 2500                 __ptext10 2706  
               __ptext11 2520                 __ptext12 276A               _BORRAR_LCD 279C  
               _lcd_init 2668               _LCD_CONFIG 2592               _ENVIA_CHAR 2706  
               isa$xinst 0000            _ENVIA_LCD_CMD 269E              ??_configuro 0501  
      ??_ESCRIBE_MENSAJE 0506    ESCRIBE_MENSAJE@cadena 0504           ?_ENVIA_LCD_CMD 0501  
            ?_BORRAR_LCD 0501            ?_ENVIA_NIBBLE 0501               _POS_CURSOR 262E  
            ?_LCD_CONFIG 0501       ESCRIBE_MENSAJE@tam 0505              ?_ENVIA_CHAR 0501  
      POS_CURSOR@columna 0504  
