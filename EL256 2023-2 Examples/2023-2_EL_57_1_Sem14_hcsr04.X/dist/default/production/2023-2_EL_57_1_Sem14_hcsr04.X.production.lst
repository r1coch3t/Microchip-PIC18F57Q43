

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Thu Nov 16 16:15:49 2023

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og9 
     1                           	processor	18F57Q43
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=2
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text15,global,reloc=2,class=CODE,delta=1
    25                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text18,global,reloc=2,class=CODE,delta=1
    28                           	psect	text19,global,reloc=2,class=CODE,delta=1
    29                           	psect	text20,global,reloc=2,class=CODE,delta=1
    30                           	psect	text21,global,reloc=4,class=CODE,delta=1
    31                           	psect	text22,global,reloc=4,class=CODE,delta=1
    32                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
    33                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    34                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    35                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    36   000000                     
    37                           ; Generated 17/10/2023 GMT
    38                           ; 
    39                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    40                           ; All rights reserved.
    41                           ; 
    42                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    43                           ; 
    44                           ; Redistribution and use in source and binary forms, with or without modification, are
    45                           ; permitted provided that the following conditions are met:
    46                           ; 
    47                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    48                           ;        conditions and the following disclaimer.
    49                           ; 
    50                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    51                           ;        of conditions and the following disclaimer in the documentation and/or other
    52                           ;        materials provided with the distribution. Publication is not required when
    53                           ;        this file is used in an embedded application.
    54                           ; 
    55                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    56                           ;        software without specific prior written permission.
    57                           ; 
    58                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    59                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    60                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    61                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    62                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    63                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    64                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    65                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    66                           ; 
    67                           ; 
    68                           ; Code-generator required, PIC18F57Q43 Definitions
    69                           ; 
    70                           ; SFR Addresses
    71   000000                     _LATD	set	1217
    72   000000                     _OSCCON1	set	173
    73   000000                     _ANSELD	set	1048
    74   000000                     _LATDbits	set	1217
    75   000000                     _TRISAbits	set	1222
    76   000000                     _TRISD	set	1225
    77   000000                     _PORTD	set	1233
    78   000000                     _INTCON0bits	set	1238
    79   000000                     _PIE3bits	set	1185
    80   000000                     _LATAbits	set	1214
    81   000000                     _OSCFRQ	set	177
    82   000000                     _OSCEN	set	179
    83   000000                     _TMR1L	set	796
    84   000000                     _TMR1H	set	797
    85   000000                     _T1CON	set	798
    86   000000                     _T1CLK	set	801
    87   000000                     _CCP1CONbits	set	834
    88   000000                     _ANSELAbits	set	1024
    89   000000                     _TRISCbits	set	1224
    90   000000                     _ANSELCbits	set	1040
    91   000000                     _CCPR1	set	832
    92   000000                     _PIR3bits	set	1201
    93                           
    94                           	psect	smallconst
    95   002500                     __psmallconst:
    96                           	callstack 0
    97   002500  00                 	db	0
    98   002501                     STR_3:
    99   002501  4D                 	db	77	;'M'
   100   002502  69                 	db	105	;'i'
   101   002503  64                 	db	100	;'d'
   102   002504  69                 	db	105	;'i'
   103   002505  65                 	db	101	;'e'
   104   002506  6E                 	db	110	;'n'
   105   002507  64                 	db	100	;'d'
   106   002508  6F                 	db	111	;'o'
   107   002509  2E                 	db	46
   108   00250A  2E                 	db	46
   109   00250B  2E                 	db	46
   110   00250C  00                 	db	0
   111   00250D                     STR_2:
   112   00250D  63                 	db	99	;'c'
   113   00250E  6F                 	db	111	;'o'
   114   00250F  6E                 	db	110	;'n'
   115   002510  20                 	db	32
   116   002511  48                 	db	72	;'H'
   117   002512  43                 	db	67	;'C'
   118   002513  2D                 	db	45
   119   002514  53                 	db	83	;'S'
   120   002515  52                 	db	82	;'R'
   121   002516  30                 	db	48	;'0'
   122   002517  34                 	db	52	;'4'
   123   002518  00                 	db	0
   124   002519                     STR_1:
   125   002519  55                 	db	85	;'U'
   126   00251A  6C                 	db	108	;'l'
   127   00251B  74                 	db	116	;'t'
   128   00251C  72                 	db	114	;'r'
   129   00251D  61                 	db	97	;'a'
   130   00251E  73                 	db	115	;'s'
   131   00251F  6F                 	db	111	;'o'
   132   002520  6E                 	db	110	;'n'
   133   002521  69                 	db	105	;'i'
   134   002522  64                 	db	100	;'d'
   135   002523  6F                 	db	111	;'o'
   136   002524  00                 	db	0
   137   002525                     STR_4:
   138   002525  20                 	db	32
   139   002526  63                 	db	99	;'c'
   140   002527  6D                 	db	109	;'m'
   141   002528  00                 	db	0
   142   002529  00                 	db	0	; dummy byte at the end
   143   000000                     
   144                           ; #config settings
   145                           
   146                           	psect	cinit
   147   0031A8                     __pcinit:
   148                           	callstack 0
   149   0031A8                     start_initialization:
   150                           	callstack 0
   151   0031A8                     __initialization:
   152                           	callstack 0
   153                           
   154                           ; Clear objects allocated to COMRAM (7 bytes)
   155   0031A8  EE01  F11E         	lfsr	0,__pbssCOMRAM
   156   0031AC  0E07               	movlw	7
   157   0031AE                     clear_0:
   158   0031AE  6AEE               	clrf	postinc0,c
   159   0031B0  06E8               	decf	wreg,f,c
   160   0031B2  E1FD               	bnz	clear_0
   161                           
   162                           ;
   163                           ; Setup IVTBASE
   164                           ;
   165   0031B4  0104               	movlb	4
   166   0031B6  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
   167   0031B8  6F5D               	movwf	93,b
   168   0031BA  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
   169   0031BC  6F5E               	movwf	94,b
   170   0031BE  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
   171   0031C0  6F5F               	movwf	95,b
   172   0031C2                     end_of_initialization:
   173                           	callstack 0
   174   0031C2                     __end_of__initialization:
   175                           	callstack 0
   176   0031C2  0100               	movlb	0
   177   0031C4  EF3A  F016         	goto	_main	;jump to C main() function
   178                           
   179                           	psect	bssCOMRAM
   180   00051E                     __pbssCOMRAM:
   181                           	callstack 0
   182   00051E                     _tiempo:
   183                           	callstack 0
   184   00051E                     	ds	4
   185   000522                     _distancia:
   186                           	callstack 0
   187   000522                     	ds	2
   188   000524                     _estado:
   189                           	callstack 0
   190   000524                     	ds	1
   191                           
   192                           	psect	cstackCOMRAM
   193   000501                     __pcstackCOMRAM:
   194                           	callstack 0
   195   000501                     ??_CCP1_ISR:
   196   000501                     
   197                           ; 1 bytes @ 0x0
   198   000501                     	ds	2
   199   000503                     ?_strlen:
   200                           	callstack 0
   201   000503                     ?___lwmod:
   202                           	callstack 0
   203   000503                     ?___fldiv:
   204                           	callstack 0
   205   000503                     ?___fltol:
   206                           	callstack 0
   207   000503                     ?___xxtofl:
   208                           	callstack 0
   209   000503                     ENVIA_NIBBLE@dato:
   210                           	callstack 0
   211   000503                     LEER_LCD@aux:
   212                           	callstack 0
   213   000503                     strlen@s:
   214                           	callstack 0
   215   000503                     ___lwmod@dividend:
   216                           	callstack 0
   217   000503                     ___fltol@f1:
   218                           	callstack 0
   219   000503                     ___fldiv@b:
   220                           	callstack 0
   221   000503                     ___xxtofl@val:
   222                           	callstack 0
   223                           
   224                           ; 4 bytes @ 0x2
   225   000503                     	ds	1
   226   000504                     ENVIA_CHAR@dato:
   227                           	callstack 0
   228   000504                     ENVIA_LCD_CMD@dato:
   229                           	callstack 0
   230                           
   231                           ; 1 bytes @ 0x3
   232   000504                     	ds	1
   233   000505                     ENVIA_CHAR@aux:
   234                           	callstack 0
   235   000505                     ENVIA_LCD_CMD@aux:
   236                           	callstack 0
   237   000505                     strlen@a:
   238                           	callstack 0
   239   000505                     ___lwmod@divisor:
   240                           	callstack 0
   241                           
   242                           ; 2 bytes @ 0x4
   243   000505                     	ds	1
   244   000506                     ??_LCD_CONFIG:
   245   000506                     POS_CURSOR@columna:
   246                           	callstack 0
   247   000506                     CURSOR_ONOFF@estado:
   248                           	callstack 0
   249   000506                     ESCRIBE_MENSAJE2@cadena:
   250                           	callstack 0
   251                           
   252                           ; 1 bytes @ 0x5
   253   000506                     	ds	1
   254   000507                     ??_ESCRIBE_MENSAJE2:
   255   000507                     ??_LCD_INIT:
   256   000507                     ??___fltol:
   257   000507                     ??___xxtofl:
   258   000507                     POS_CURSOR@fila:
   259                           	callstack 0
   260   000507                     ___lwmod@counter:
   261                           	callstack 0
   262   000507                     ___fldiv@a:
   263                           	callstack 0
   264                           
   265                           ; 4 bytes @ 0x6
   266   000507                     	ds	1
   267   000508                     ?___lwdiv:
   268                           	callstack 0
   269   000508                     ESCRIBE_MENSAJE2@tam:
   270                           	callstack 0
   271   000508                     ___lwdiv@dividend:
   272                           	callstack 0
   273                           
   274                           ; 2 bytes @ 0x7
   275   000508                     	ds	1
   276   000509                     ESCRIBE_MENSAJE2@i:
   277                           	callstack 0
   278                           
   279                           ; 1 bytes @ 0x8
   280   000509                     	ds	1
   281   00050A                     ??_splash_screen:
   282   00050A                     ___lwdiv@divisor:
   283                           	callstack 0
   284                           
   285                           ; 2 bytes @ 0x9
   286   00050A                     	ds	1
   287   00050B                     ??___fldiv:
   288   00050B                     ___fltol@sign1:
   289                           	callstack 0
   290   00050B                     ___xxtofl@sign:
   291                           	callstack 0
   292                           
   293                           ; 1 bytes @ 0xA
   294   00050B                     	ds	1
   295   00050C                     ___fltol@exp1:
   296                           	callstack 0
   297   00050C                     ___xxtofl@exp:
   298                           	callstack 0
   299   00050C                     ___lwdiv@quotient:
   300                           	callstack 0
   301                           
   302                           ; 2 bytes @ 0xB
   303   00050C                     	ds	1
   304   00050D                     ___xxtofl@arg:
   305                           	callstack 0
   306                           
   307                           ; 4 bytes @ 0xC
   308   00050D                     	ds	1
   309   00050E                     ___lwdiv@counter:
   310                           	callstack 0
   311                           
   312                           ; 1 bytes @ 0xD
   313   00050E                     	ds	1
   314   00050F                     LCD_ESCRIBE_VAR_INT@numero:
   315                           	callstack 0
   316   00050F                     ___fldiv@rem:
   317                           	callstack 0
   318                           
   319                           ; 4 bytes @ 0xE
   320   00050F                     	ds	2
   321   000511                     LCD_ESCRIBE_VAR_INT@n_digitos:
   322                           	callstack 0
   323                           
   324                           ; 1 bytes @ 0x10
   325   000511                     	ds	1
   326   000512                     LCD_ESCRIBE_VAR_INT@punto:
   327                           	callstack 0
   328                           
   329                           ; 1 bytes @ 0x11
   330   000512                     	ds	1
   331   000513                     ??_LCD_ESCRIBE_VAR_INT:
   332   000513                     ___fldiv@sign:
   333                           	callstack 0
   334                           
   335                           ; 1 bytes @ 0x12
   336   000513                     	ds	1
   337   000514                     ___fldiv@new_exp:
   338                           	callstack 0
   339                           
   340                           ; 2 bytes @ 0x13
   341   000514                     	ds	1
   342   000515                     LCD_ESCRIBE_VAR_INT@d_millar:
   343                           	callstack 0
   344                           
   345                           ; 1 bytes @ 0x14
   346   000515                     	ds	1
   347   000516                     LCD_ESCRIBE_VAR_INT@millar:
   348                           	callstack 0
   349   000516                     ___fldiv@grs:
   350                           	callstack 0
   351                           
   352                           ; 4 bytes @ 0x15
   353   000516                     	ds	1
   354   000517                     LCD_ESCRIBE_VAR_INT@centena:
   355                           	callstack 0
   356                           
   357                           ; 1 bytes @ 0x16
   358   000517                     	ds	1
   359   000518                     LCD_ESCRIBE_VAR_INT@decena:
   360                           	callstack 0
   361                           
   362                           ; 1 bytes @ 0x17
   363   000518                     	ds	1
   364   000519                     LCD_ESCRIBE_VAR_INT@unidad:
   365                           	callstack 0
   366                           
   367                           ; 1 bytes @ 0x18
   368   000519                     	ds	1
   369   00051A                     ___fldiv@bexp:
   370                           	callstack 0
   371                           
   372                           ; 1 bytes @ 0x19
   373   00051A                     	ds	1
   374   00051B                     ___fldiv@aexp:
   375                           	callstack 0
   376                           
   377                           ; 1 bytes @ 0x1A
   378   00051B                     	ds	1
   379   00051C                     ??_main:
   380                           
   381                           ; 1 bytes @ 0x1B
   382   00051C                     	ds	2
   383                           
   384 ;;
   385 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   386 ;;
   387 ;; *************** function _main *****************
   388 ;; Defined at:
   389 ;;		line 46 in file "maincode.c"
   390 ;; Parameters:    Size  Location     Type
   391 ;;		None
   392 ;; Auto vars:     Size  Location     Type
   393 ;;		None
   394 ;; Return value:  Size  Location     Type
   395 ;;                  1    wreg      void 
   396 ;; Registers used:
   397 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   398 ;; Tracked objects:
   399 ;;		On entry : 0/0
   400 ;;		On exit  : 0/0
   401 ;;		Unchanged: 0/0
   402 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   403 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   404 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   405 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   406 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   407 ;;Total ram usage:        2 bytes
   408 ;; Hardware stack levels required when called: 6
   409 ;; This function calls:
   410 ;;		_ESCRIBE_MENSAJE2
   411 ;;		_LCD_ESCRIBE_VAR_INT
   412 ;;		_POS_CURSOR
   413 ;;		___fldiv
   414 ;;		___fltol
   415 ;;		___xxtofl
   416 ;;		_configuro
   417 ;;		_splash_screen
   418 ;; This function is called by:
   419 ;;		Startup code after reset
   420 ;; This function uses a non-reentrant model
   421 ;;
   422                           
   423                           	psect	text0
   424   002C74                     __ptext0:
   425                           	callstack 0
   426   002C74                     _main:
   427                           	callstack 121
   428                           
   429                           ;maincode.c: 47:     configuro();
   430                           
   431                           ;incstack = 0
   432   002C74  EC6E  F018         	call	_configuro	;wreg free
   433                           
   434                           ;maincode.c: 48:     splash_screen();
   435   002C78  ECF0  F017         	call	_splash_screen	;wreg free
   436   002C7C  D06F               	goto	l2052
   437   002C7E                     l217:
   438                           
   439                           ;maincode.c: 52:                 LATAbits.LATA0=1;
   440   002C7E  80BE               	bsf	190,0,c	;volatile
   441                           
   442                           ;maincode.c: 53:                 _delay((unsigned long)((10)*(32000000UL/4000000.0)));
   443   002C80  0E1A               	movlw	26
   444   002C82                     u1137:
   445   002C82  2EE8               	decfsz	wreg,f,c
   446   002C84  D7FE               	bra	u1137
   447   002C86  D000               	nop2	
   448                           
   449                           ;maincode.c: 54:                 LATAbits.LATA0=0;
   450   002C88  90BE               	bcf	190,0,c	;volatile
   451                           
   452                           ;maincode.c: 55:                 estado=2;
   453   002C8A  0E02               	movlw	2
   454   002C8C  D066               	goto	L1
   455   002C8E                     l2032:
   456                           
   457                           ;maincode.c: 58:                 tiempo=(float)distancia;
   458   002C8E  C522  F503         	movff	_distancia,___xxtofl@val
   459   002C92  C523  F504         	movff	_distancia+1,___xxtofl@val+1
   460   002C96  6A05               	clrf	(___xxtofl@val+2)^(0+1280),c
   461   002C98  6A06               	clrf	(___xxtofl@val+3)^(0+1280),c
   462   002C9A  0E00               	movlw	0
   463   002C9C  EC9A  F015         	call	___xxtofl
   464   002CA0  C503  F51E         	movff	?___xxtofl,_tiempo
   465   002CA4  C504  F51F         	movff	?___xxtofl+1,_tiempo+1
   466   002CA8  C505  F520         	movff	?___xxtofl+2,_tiempo+2
   467   002CAC  C506  F521         	movff	?___xxtofl+3,_tiempo+3
   468                           
   469                           ;maincode.c: 59:                 tiempo=tiempo / 5.8;
   470   002CB0  C51E  F503         	movff	_tiempo,___fldiv@b
   471   002CB4  C51F  F504         	movff	_tiempo+1,___fldiv@b+1
   472   002CB8  C520  F505         	movff	_tiempo+2,___fldiv@b+2
   473   002CBC  C521  F506         	movff	_tiempo+3,___fldiv@b+3
   474   002CC0  0E9A               	movlw	154
   475   002CC2  6E07               	movwf	___fldiv@a^(0+1280),c
   476   002CC4  0E99               	movlw	153
   477   002CC6  6E08               	movwf	(___fldiv@a+1)^(0+1280),c
   478   002CC8  0EB9               	movlw	185
   479   002CCA  6E09               	movwf	(___fldiv@a+2)^(0+1280),c
   480   002CCC  0E40               	movlw	64
   481   002CCE  6E0A               	movwf	(___fldiv@a+3)^(0+1280),c
   482   002CD0  EC56  F014         	call	___fldiv	;wreg free
   483   002CD4  C503  F51E         	movff	?___fldiv,_tiempo
   484   002CD8  C504  F51F         	movff	?___fldiv+1,_tiempo+1
   485   002CDC  C505  F520         	movff	?___fldiv+2,_tiempo+2
   486   002CE0  C506  F521         	movff	?___fldiv+3,_tiempo+3
   487                           
   488                           ;maincode.c: 60:                 distancia = (int)tiempo + 1;
   489   002CE4  C51E  F503         	movff	_tiempo,___fltol@f1
   490   002CE8  C51F  F504         	movff	_tiempo+1,___fltol@f1+1
   491   002CEC  C520  F505         	movff	_tiempo+2,___fltol@f1+2
   492   002CF0  C521  F506         	movff	_tiempo+3,___fltol@f1+3
   493   002CF4  ECC0  F016         	call	___fltol	;wreg free
   494   002CF8  0E01               	movlw	1
   495   002CFA  2403               	addwf	?___fltol^(0+1280),w,c
   496   002CFC  6E22               	movwf	_distancia^(0+1280),c
   497   002CFE  0E00               	movlw	0
   498   002D00  2004               	addwfc	(?___fltol+1)^(0+1280),w,c
   499   002D02  6E23               	movwf	(_distancia+1)^(0+1280),c
   500                           
   501                           ;maincode.c: 61:                 estado = 5;
   502   002D04  0E05               	movlw	5
   503   002D06  D029               	goto	L1
   504   002D08                     l2036:
   505                           
   506                           ;maincode.c: 64:                 POS_CURSOR(1,0);
   507   002D08  0E00               	movlw	0
   508   002D0A  6E06               	movwf	POS_CURSOR@columna^(0+1280),c
   509   002D0C  0E01               	movlw	1
   510   002D0E  ECCC  F017         	call	_POS_CURSOR
   511                           
   512                           ;maincode.c: 65:                 ESCRIBE_MENSAJE2("Midiendo...");
   513   002D12  0E01               	movlw	low STR_3
   514   002D14  6E06               	movwf	ESCRIBE_MENSAJE2@cadena^(0+1280),c
   515   002D16  EC52  F018         	call	_ESCRIBE_MENSAJE2	;wreg free
   516                           
   517                           ;maincode.c: 66:                 POS_CURSOR(2,0);
   518   002D1A  0E00               	movlw	0
   519   002D1C  6E06               	movwf	POS_CURSOR@columna^(0+1280),c
   520   002D1E  0E02               	movlw	2
   521   002D20  ECCC  F017         	call	_POS_CURSOR
   522                           
   523                           ;maincode.c: 67:                 LCD_ESCRIBE_VAR_INT(distancia, 4, 1);
   524   002D24  C522  F50F         	movff	_distancia,LCD_ESCRIBE_VAR_INT@numero
   525   002D28  C523  F510         	movff	_distancia+1,LCD_ESCRIBE_VAR_INT@numero+1
   526   002D2C  0E04               	movlw	4
   527   002D2E  6E11               	movwf	LCD_ESCRIBE_VAR_INT@n_digitos^(0+1280),c
   528   002D30  0E01               	movlw	1
   529   002D32  6E12               	movwf	LCD_ESCRIBE_VAR_INT@punto^(0+1280),c
   530   002D34  EC95  F012         	call	_LCD_ESCRIBE_VAR_INT	;wreg free
   531                           
   532                           ;maincode.c: 68:                 ESCRIBE_MENSAJE2(" cm");
   533   002D38  0E25               	movlw	low STR_4
   534   002D3A  6E06               	movwf	ESCRIBE_MENSAJE2@cadena^(0+1280),c
   535   002D3C  EC52  F018         	call	_ESCRIBE_MENSAJE2	;wreg free
   536                           
   537                           ;maincode.c: 69:                 _delay((unsigned long)((200)*(32000000UL/4000.0)));
   538   002D40  0E09               	movlw	9
   539   002D42  6E1D               	movwf	(??_main+1)^(0+1280),c
   540   002D44  0E1E               	movlw	30
   541   002D46  6E1C               	movwf	??_main^(0+1280),c
   542   002D48  0EE4               	movlw	228
   543   002D4A                     u1147:
   544   002D4A  2EE8               	decfsz	wreg,f,c
   545   002D4C  D7FE               	bra	u1147
   546   002D4E  2E1C               	decfsz	??_main^(0+1280),f,c
   547   002D50  D7FC               	bra	u1147
   548   002D52  2E1D               	decfsz	(??_main+1)^(0+1280),f,c
   549   002D54  D7FA               	bra	u1147
   550   002D56  D000               	nop2	
   551                           
   552                           ;maincode.c: 70:                 estado = 1;
   553   002D58  0E01               	movlw	1
   554   002D5A                     L1:
   555   002D5A  6E24               	movwf	_estado^(0+1280),c
   556   002D5C                     l2052:
   557   002D5C  5024               	movf	_estado^(0+1280),w,c
   558   002D5E  6E1C               	movwf	??_main^(0+1280),c
   559   002D60  6A1D               	clrf	(??_main+1)^(0+1280),c
   560                           
   561                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   562                           ; Switch size 1, requested type "simple"
   563                           ; Number of cases is 1, Range of values is 0 to 0
   564                           ; switch strategies available:
   565                           ; Name         Instructions Cycles
   566                           ; simple_byte            4     3 (average)
   567                           ;	Chosen strategy is simple_byte
   568   002D62  501D               	movf	(??_main+1)^(0+1280),w,c
   569   002D64  0A00               	xorlw	0	; case 0
   570   002D66  A4D8               	btfss	status,2,c
   571   002D68  D7F9               	goto	l2052
   572                           
   573                           ; Switch size 1, requested type "simple"
   574                           ; Number of cases is 3, Range of values is 1 to 5
   575                           ; switch strategies available:
   576                           ; Name         Instructions Cycles
   577                           ; simple_byte           10     6 (average)
   578                           ;	Chosen strategy is simple_byte
   579   002D6A  501C               	movf	??_main^(0+1280),w,c
   580   002D6C  0A01               	xorlw	1	; case 1
   581   002D6E  B4D8               	btfsc	status,2,c
   582   002D70  D786               	goto	l217
   583   002D72  0A05               	xorlw	5	; case 4
   584   002D74  B4D8               	btfsc	status,2,c
   585   002D76  D78B               	goto	l2032
   586   002D78  0A01               	xorlw	1	; case 5
   587   002D7A  B4D8               	btfsc	status,2,c
   588   002D7C  D7C5               	goto	l2036
   589   002D7E  D7EE               	goto	l2052
   590   002D80                     __end_of_main:
   591                           	callstack 0
   592                           
   593 ;; *************** function _splash_screen *****************
   594 ;; Defined at:
   595 ;;		line 36 in file "maincode.c"
   596 ;; Parameters:    Size  Location     Type
   597 ;;		None
   598 ;; Auto vars:     Size  Location     Type
   599 ;;		None
   600 ;; Return value:  Size  Location     Type
   601 ;;                  1    wreg      void 
   602 ;; Registers used:
   603 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   604 ;; Tracked objects:
   605 ;;		On entry : 0/0
   606 ;;		On exit  : 0/0
   607 ;;		Unchanged: 0/0
   608 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   609 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   610 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   611 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   612 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   613 ;;Total ram usage:        2 bytes
   614 ;; Hardware stack levels used: 1
   615 ;; Hardware stack levels required when called: 4
   616 ;; This function calls:
   617 ;;		_BORRAR_LCD
   618 ;;		_ESCRIBE_MENSAJE2
   619 ;;		_POS_CURSOR
   620 ;; This function is called by:
   621 ;;		_main
   622 ;; This function uses a non-reentrant model
   623 ;;
   624                           
   625                           	psect	text1
   626   002FE0                     __ptext1:
   627                           	callstack 0
   628   002FE0                     _splash_screen:
   629                           	callstack 122
   630                           
   631                           ;maincode.c: 37:     POS_CURSOR(1,0);
   632                           
   633                           ;incstack = 0
   634   002FE0  0E00               	movlw	0
   635   002FE2  6E06               	movwf	POS_CURSOR@columna^(0+1280),c
   636   002FE4  0E01               	movlw	1
   637   002FE6  ECCC  F017         	call	_POS_CURSOR
   638                           
   639                           ;maincode.c: 38:     ESCRIBE_MENSAJE2("Ultrasonido");
   640   002FEA  0E19               	movlw	low STR_1
   641   002FEC  6E06               	movwf	ESCRIBE_MENSAJE2@cadena^(0+1280),c
   642   002FEE  EC52  F018         	call	_ESCRIBE_MENSAJE2	;wreg free
   643                           
   644                           ;maincode.c: 39:     POS_CURSOR(2,0);
   645   002FF2  0E00               	movlw	0
   646   002FF4  6E06               	movwf	POS_CURSOR@columna^(0+1280),c
   647   002FF6  0E02               	movlw	2
   648   002FF8  ECCC  F017         	call	_POS_CURSOR
   649                           
   650                           ;maincode.c: 40:     ESCRIBE_MENSAJE2("con HC-SR04");
   651   002FFC  0E0D               	movlw	low STR_2
   652   002FFE  6E06               	movwf	ESCRIBE_MENSAJE2@cadena^(0+1280),c
   653   003000  EC52  F018         	call	_ESCRIBE_MENSAJE2	;wreg free
   654                           
   655                           ;maincode.c: 41:     _delay((unsigned long)((3000)*(32000000UL/4000.0)));
   656   003004  0E7A               	movlw	122
   657   003006  6E0B               	movwf	(??_splash_screen+1)^(0+1280),c
   658   003008  0EC1               	movlw	193
   659   00300A  6E0A               	movwf	??_splash_screen^(0+1280),c
   660   00300C  0E82               	movlw	130
   661   00300E                     u1157:
   662   00300E  2EE8               	decfsz	wreg,f,c
   663   003010  D7FE               	bra	u1157
   664   003012  2E0A               	decfsz	??_splash_screen^(0+1280),f,c
   665   003014  D7FC               	bra	u1157
   666   003016  2E0B               	decfsz	(??_splash_screen+1)^(0+1280),f,c
   667   003018  D7FA               	bra	u1157
   668                           
   669                           ;maincode.c: 42:     BORRAR_LCD();
   670   00301A  EC04  F019         	call	_BORRAR_LCD	;wreg free
   671                           
   672                           ;maincode.c: 43:     estado = 1;
   673   00301E  0E01               	movlw	1
   674   003020  6E24               	movwf	_estado^(0+1280),c
   675   003022  0012               	return		;funcret
   676   003024                     __end_of_splash_screen:
   677                           	callstack 0
   678                           
   679 ;; *************** function _POS_CURSOR *****************
   680 ;; Defined at:
   681 ;;		line 5 in file "LCD.c"
   682 ;; Parameters:    Size  Location     Type
   683 ;;  fila            1    wreg     unsigned char 
   684 ;;  columna         1    5[COMRAM] unsigned char 
   685 ;; Auto vars:     Size  Location     Type
   686 ;;  fila            1    6[COMRAM] unsigned char 
   687 ;; Return value:  Size  Location     Type
   688 ;;                  1    wreg      void 
   689 ;; Registers used:
   690 ;;		wreg, status,2, status,0, cstack
   691 ;; Tracked objects:
   692 ;;		On entry : 0/0
   693 ;;		On exit  : 0/0
   694 ;;		Unchanged: 0/0
   695 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   696 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   697 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   698 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   699 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   700 ;;Total ram usage:        2 bytes
   701 ;; Hardware stack levels used: 1
   702 ;; Hardware stack levels required when called: 3
   703 ;; This function calls:
   704 ;;		_ENVIA_LCD_CMD
   705 ;; This function is called by:
   706 ;;		_splash_screen
   707 ;;		_main
   708 ;; This function uses a non-reentrant model
   709 ;;
   710                           
   711                           	psect	text2
   712   002F98                     __ptext2:
   713                           	callstack 0
   714   002F98                     _POS_CURSOR:
   715                           	callstack 122
   716                           
   717                           ;incstack = 0
   718                           ;POS_CURSOR@fila stored from wreg
   719   002F98  6E07               	movwf	POS_CURSOR@fila^(0+1280),c
   720                           
   721                           ;LCD.c: 6:  if(fila == 1){
   722   002F9A  0407               	decf	POS_CURSOR@fila^(0+1280),w,c
   723   002F9C  A4D8               	btfss	status,2,c
   724   002F9E  D005               	goto	l1652
   725                           
   726                           ;LCD.c: 7:   ENVIA_LCD_CMD(0x80+columna);
   727   002FA0  5006               	movf	POS_CURSOR@columna^(0+1280),w,c
   728   002FA2  0F80               	addlw	128
   729   002FA4  EC8A  F018         	call	_ENVIA_LCD_CMD
   730                           
   731                           ;LCD.c: 8:  }
   732   002FA8  0012               	return	
   733   002FAA                     l1652:
   734   002FAA  0E02               	movlw	2
   735   002FAC  1807               	xorwf	POS_CURSOR@fila^(0+1280),w,c
   736   002FAE  A4D8               	btfss	status,2,c
   737   002FB0  D005               	goto	l1656
   738                           
   739                           ;LCD.c: 10:   ENVIA_LCD_CMD(0xC0+columna);
   740   002FB2  5006               	movf	POS_CURSOR@columna^(0+1280),w,c
   741   002FB4  0FC0               	addlw	192
   742   002FB6  EC8A  F018         	call	_ENVIA_LCD_CMD
   743                           
   744                           ;LCD.c: 11:  }
   745   002FBA  0012               	return	
   746   002FBC                     l1656:
   747   002FBC  0E03               	movlw	3
   748   002FBE  1807               	xorwf	POS_CURSOR@fila^(0+1280),w,c
   749   002FC0  A4D8               	btfss	status,2,c
   750   002FC2  D005               	goto	l1660
   751                           
   752                           ;LCD.c: 13:   ENVIA_LCD_CMD(0x94+columna);
   753   002FC4  5006               	movf	POS_CURSOR@columna^(0+1280),w,c
   754   002FC6  0F94               	addlw	148
   755   002FC8  EC8A  F018         	call	_ENVIA_LCD_CMD
   756                           
   757                           ;LCD.c: 14:  }
   758   002FCC  0012               	return	
   759   002FCE                     l1660:
   760   002FCE  0E04               	movlw	4
   761   002FD0  1807               	xorwf	POS_CURSOR@fila^(0+1280),w,c
   762   002FD2  A4D8               	btfss	status,2,c
   763   002FD4  0012               	return	
   764                           
   765                           ;LCD.c: 16:   ENVIA_LCD_CMD(0xD4+columna);
   766   002FD6  5006               	movf	POS_CURSOR@columna^(0+1280),w,c
   767   002FD8  0FD4               	addlw	212
   768   002FDA  EC8A  F018         	call	_ENVIA_LCD_CMD
   769   002FDE  0012               	return	
   770   002FE0                     __end_of_POS_CURSOR:
   771                           	callstack 0
   772                           
   773 ;; *************** function _ESCRIBE_MENSAJE2 *****************
   774 ;; Defined at:
   775 ;;		line 62 in file "LCD.c"
   776 ;; Parameters:    Size  Location     Type
   777 ;;  cadena          1    5[COMRAM] PTR const unsigned char 
   778 ;;		 -> STR_4(4), STR_3(12), STR_2(12), STR_1(12), 
   779 ;; Auto vars:     Size  Location     Type
   780 ;;  i               1    8[COMRAM] unsigned char 
   781 ;;  tam             1    7[COMRAM] unsigned char 
   782 ;; Return value:  Size  Location     Type
   783 ;;                  1    wreg      void 
   784 ;; Registers used:
   785 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   786 ;; Tracked objects:
   787 ;;		On entry : 0/0
   788 ;;		On exit  : 0/0
   789 ;;		Unchanged: 0/0
   790 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   791 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   792 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   793 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   794 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   795 ;;Total ram usage:        4 bytes
   796 ;; Hardware stack levels used: 1
   797 ;; Hardware stack levels required when called: 3
   798 ;; This function calls:
   799 ;;		_ENVIA_CHAR
   800 ;;		_strlen
   801 ;; This function is called by:
   802 ;;		_splash_screen
   803 ;;		_main
   804 ;; This function uses a non-reentrant model
   805 ;;
   806                           
   807                           	psect	text3
   808   0030A4                     __ptext3:
   809                           	callstack 0
   810   0030A4                     _ESCRIBE_MENSAJE2:
   811                           	callstack 122
   812                           
   813                           ;LCD.c: 63:     unsigned char tam;;LCD.c: 64:     tam = strlen(cadena);
   814                           
   815                           ;incstack = 0
   816   0030A4  C506  F503         	movff	ESCRIBE_MENSAJE2@cadena,strlen@s
   817   0030A8  ECBE  F018         	call	_strlen	;wreg free
   818   0030AC  5003               	movf	?_strlen^(0+1280),w,c
   819   0030AE  6E08               	movwf	ESCRIBE_MENSAJE2@tam^(0+1280),c
   820                           
   821                           ;LCD.c: 66:  for(i = 0; i<tam; i++) {
   822   0030B0  0E00               	movlw	0
   823   0030B2  6E09               	movwf	ESCRIBE_MENSAJE2@i^(0+1280),c
   824   0030B4  D00E               	goto	l1674
   825   0030B6                     l1670:
   826                           
   827                           ;LCD.c: 67:   ENVIA_CHAR(cadena[i]);
   828   0030B6  5006               	movf	ESCRIBE_MENSAJE2@cadena^(0+1280),w,c
   829   0030B8  2409               	addwf	ESCRIBE_MENSAJE2@i^(0+1280),w,c
   830   0030BA  6E07               	movwf	??_ESCRIBE_MENSAJE2^(0+1280),c
   831   0030BC  C507  F4F6         	movff	??_ESCRIBE_MENSAJE2,tblptrl
   832   0030C0                     	if	1	;There is more than 1 active tblptr byte
   833   0030C0  0E25               	movlw	high __smallconst
   834   0030C2  6EF7               	movwf	tblptrh,c
   835   0030C4                     	endif
   836   0030C4                     	if	0	;tblptru may be non-zero
   837   0030C4                     	endif
   838   0030C4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
   839   0030C4  0E00               	movlw	low (__smallconst shr (0+16))
   840   0030C6  6EF8               	movwf	tblptru,c
   841   0030C8                     	endif
   842   0030C8  0008               	tblrd		*
   843   0030CA  50F5               	movf	tablat,w,c
   844   0030CC  ECA4  F018         	call	_ENVIA_CHAR
   845                           
   846                           ;LCD.c: 68:  }
   847   0030D0  2A09               	incf	ESCRIBE_MENSAJE2@i^(0+1280),f,c
   848   0030D2                     l1674:
   849   0030D2  5008               	movf	ESCRIBE_MENSAJE2@tam^(0+1280),w,c
   850   0030D4  5C09               	subwf	ESCRIBE_MENSAJE2@i^(0+1280),w,c
   851   0030D6  B0D8               	btfsc	status,0,c
   852   0030D8  0012               	return	
   853   0030DA  D7ED               	goto	l1670
   854   0030DC                     __end_of_ESCRIBE_MENSAJE2:
   855                           	callstack 0
   856                           
   857 ;; *************** function _strlen *****************
   858 ;; Defined at:
   859 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\strlen.c"
   860 ;; Parameters:    Size  Location     Type
   861 ;;  s               1    2[COMRAM] PTR const unsigned char 
   862 ;;		 -> STR_4(4), STR_3(12), STR_2(12), STR_1(12), 
   863 ;; Auto vars:     Size  Location     Type
   864 ;;  a               1    4[COMRAM] PTR const unsigned char 
   865 ;;		 -> STR_4(4), STR_3(12), STR_2(12), STR_1(12), 
   866 ;; Return value:  Size  Location     Type
   867 ;;                  2    2[COMRAM] unsigned int 
   868 ;; Registers used:
   869 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
   870 ;; Tracked objects:
   871 ;;		On entry : 0/0
   872 ;;		On exit  : 0/0
   873 ;;		Unchanged: 0/0
   874 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   875 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   876 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   877 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   878 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   879 ;;Total ram usage:        3 bytes
   880 ;; Hardware stack levels used: 1
   881 ;; Hardware stack levels required when called: 1
   882 ;; This function calls:
   883 ;;		Nothing
   884 ;; This function is called by:
   885 ;;		_ESCRIBE_MENSAJE2
   886 ;; This function uses a non-reentrant model
   887 ;;
   888                           
   889                           	psect	text4
   890   00317C                     __ptext4:
   891                           	callstack 0
   892   00317C                     _strlen:
   893                           	callstack 123
   894                           
   895                           ;incstack = 0
   896   00317C  C503  F505         	movff	strlen@s,strlen@a
   897   003180  D001               	goto	l1642
   898   003182                     l1640:
   899   003182  2A03               	incf	strlen@s^(0+1280),f,c
   900   003184                     l1642:
   901   003184  C503  F4F6         	movff	strlen@s,tblptrl
   902   003188                     	if	1	;There is more than 1 active tblptr byte
   903   003188  0E25               	movlw	high __smallconst
   904   00318A  6EF7               	movwf	tblptrh,c
   905   00318C                     	endif
   906   00318C                     	if	0	;tblptru may be non-zero
   907   00318C                     	endif
   908   00318C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
   909   00318C  0E00               	movlw	low (__smallconst shr (0+16))
   910   00318E  6EF8               	movwf	tblptru,c
   911   003190                     	endif
   912   003190  0008               	tblrd		*
   913   003192  50F5               	movf	tablat,w,c
   914   003194  0900               	iorlw	0
   915   003196  A4D8               	btfss	status,2,c
   916   003198  D7F4               	goto	l1640
   917   00319A  5005               	movf	strlen@a^(0+1280),w,c
   918   00319C  5C03               	subwf	strlen@s^(0+1280),w,c
   919   00319E  6E03               	movwf	?_strlen^(0+1280),c
   920   0031A0  6A04               	clrf	(?_strlen+1)^(0+1280),c
   921   0031A2  BE03               	btfsc	?_strlen^(0+1280),7,c
   922   0031A4  0604               	decf	(?_strlen+1)^(0+1280),f,c
   923   0031A6  0012               	return		;funcret
   924   0031A8                     __end_of_strlen:
   925                           	callstack 0
   926                           
   927 ;; *************** function _configuro *****************
   928 ;; Defined at:
   929 ;;		line 16 in file "maincode.c"
   930 ;; Parameters:    Size  Location     Type
   931 ;;		None
   932 ;; Auto vars:     Size  Location     Type
   933 ;;		None
   934 ;; Return value:  Size  Location     Type
   935 ;;                  1    wreg      void 
   936 ;; Registers used:
   937 ;;		wreg, status,2, status,0, cstack
   938 ;; Tracked objects:
   939 ;;		On entry : 0/0
   940 ;;		On exit  : 0/0
   941 ;;		Unchanged: 0/0
   942 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   943 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   944 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   945 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   946 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   947 ;;Total ram usage:        0 bytes
   948 ;; Hardware stack levels used: 1
   949 ;; Hardware stack levels required when called: 5
   950 ;; This function calls:
   951 ;;		_LCD_INIT
   952 ;; This function is called by:
   953 ;;		_main
   954 ;; This function uses a non-reentrant model
   955 ;;
   956                           
   957                           	psect	text5
   958   0030DC                     __ptext5:
   959                           	callstack 0
   960   0030DC                     _configuro:
   961                           	callstack 121
   962                           
   963                           ;maincode.c: 17:     OSCCON1 = 0x60;
   964                           
   965                           ;incstack = 0
   966   0030DC  0E60               	movlw	96
   967   0030DE  0100               	movlb	0	; () banked
   968   0030E0  6FAD               	movwf	173,b	;volatile
   969                           
   970                           ;maincode.c: 18:     OSCFRQ = 0x06;
   971   0030E2  0E06               	movlw	6
   972   0030E4  6FB1               	movwf	177,b	;volatile
   973                           
   974                           ;maincode.c: 19:     OSCEN = 0x40;
   975   0030E6  0E40               	movlw	64
   976   0030E8  6FB3               	movwf	179,b	;volatile
   977                           
   978                           ; BSR set to: 0
   979                           ;maincode.c: 21:     TRISAbits.TRISA0 = 0;
   980   0030EA  90C6               	bcf	198,0,c	;volatile
   981                           
   982                           ; BSR set to: 0
   983                           ;maincode.c: 22:     ANSELAbits.ANSELA0 = 0;
   984   0030EC  0104               	movlb	4	; () banked
   985   0030EE  9100               	bcf	0,0,b	;volatile
   986                           
   987                           ; BSR set to: 4
   988                           ;maincode.c: 23:     LATAbits.LATA0 = 0;
   989   0030F0  90BE               	bcf	190,0,c	;volatile
   990                           
   991                           ; BSR set to: 4
   992                           ;maincode.c: 24:     TRISCbits.TRISC2 = 1;
   993   0030F2  84C8               	bsf	200,2,c	;volatile
   994                           
   995                           ; BSR set to: 4
   996                           ;maincode.c: 25:     ANSELCbits.ANSELC2 = 0;
   997   0030F4  9510               	bcf	16,2,b	;volatile
   998                           
   999                           ; BSR set to: 4
  1000                           ;maincode.c: 26:     CCP1CONbits.EN = 1;
  1001   0030F6  0103               	movlb	3	; () banked
  1002   0030F8  8F42               	bsf	66,7,b	;volatile
  1003                           
  1004                           ;maincode.c: 27:     CCP1CONbits.MODE = 5;
  1005   0030FA  5142               	movf	66,w,b	;volatile
  1006   0030FC  0BF0               	andlw	-16
  1007   0030FE  0905               	iorlw	5
  1008   003100  6F42               	movwf	66,b	;volatile
  1009                           
  1010                           ;maincode.c: 28:     T1CLK = 0x01;
  1011   003102  0E01               	movlw	1
  1012   003104  6F21               	movwf	33,b	;volatile
  1013                           
  1014                           ;maincode.c: 29:     T1CON = 0x33;
  1015   003106  0E33               	movlw	51
  1016   003108  6F1E               	movwf	30,b	;volatile
  1017                           
  1018                           ; BSR set to: 3
  1019                           ;maincode.c: 31:     INTCON0bits.GIE = 1;
  1020   00310A  8ED6               	bsf	214,7,c	;volatile
  1021                           
  1022                           ; BSR set to: 3
  1023                           ;maincode.c: 32:     PIE3bits.CCP1IE=1;
  1024   00310C  8CA1               	bsf	161,6,c	;volatile
  1025                           
  1026                           ; BSR set to: 3
  1027                           ;maincode.c: 33:     LCD_INIT();
  1028   00310E  EC33  F018         	call	_LCD_INIT	;wreg free
  1029   003112  0012               	return		;funcret
  1030   003114                     __end_of_configuro:
  1031                           	callstack 0
  1032                           
  1033 ;; *************** function _LCD_INIT *****************
  1034 ;; Defined at:
  1035 ;;		line 193 in file "LCD.c"
  1036 ;; Parameters:    Size  Location     Type
  1037 ;;		None
  1038 ;; Auto vars:     Size  Location     Type
  1039 ;;		None
  1040 ;; Return value:  Size  Location     Type
  1041 ;;                  1    wreg      void 
  1042 ;; Registers used:
  1043 ;;		wreg, status,2, status,0, cstack
  1044 ;; Tracked objects:
  1045 ;;		On entry : 3F/3
  1046 ;;		On exit  : 0/0
  1047 ;;		Unchanged: 0/0
  1048 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1049 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1050 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1051 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1052 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1053 ;;Total ram usage:        1 bytes
  1054 ;; Hardware stack levels used: 1
  1055 ;; Hardware stack levels required when called: 4
  1056 ;; This function calls:
  1057 ;;		_BORRAR_LCD
  1058 ;;		_CURSOR_HOME
  1059 ;;		_CURSOR_ONOFF
  1060 ;;		_LCD_CONFIG
  1061 ;; This function is called by:
  1062 ;;		_configuro
  1063 ;; This function uses a non-reentrant model
  1064 ;;
  1065                           
  1066                           	psect	text6
  1067   003066                     __ptext6:
  1068                           	callstack 0
  1069   003066                     _LCD_INIT:
  1070                           	callstack 121
  1071                           
  1072                           ; BSR set to: 3
  1073                           ;LCD.c: 194:     TRISD = 0x00;
  1074                           
  1075                           ;incstack = 0
  1076   003066  0E00               	movlw	0
  1077   003068  6EC9               	movwf	201,c	;volatile
  1078                           
  1079                           ;LCD.c: 195:     ANSELD = 0x00;
  1080   00306A  0E00               	movlw	0
  1081   00306C  0104               	movlb	4	; () banked
  1082   00306E  6F18               	movwf	24,b	;volatile
  1083                           
  1084                           ; BSR set to: 4
  1085                           ;LCD.c: 196:     _delay((unsigned long)((15)*(32000000UL/4000.0)));
  1086   003070  0E9C               	movlw	156
  1087   003072  6E07               	movwf	??_LCD_INIT^(0+1280),c
  1088   003074  0ED7               	movlw	215
  1089   003076                     u1167:
  1090   003076  2EE8               	decfsz	wreg,f,c
  1091   003078  D7FE               	bra	u1167
  1092   00307A  2E07               	decfsz	??_LCD_INIT^(0+1280),f,c
  1093   00307C  D7FC               	bra	u1167
  1094   00307E  0000               	nop	
  1095                           
  1096                           ;LCD.c: 197:     LCD_CONFIG();
  1097   003080  EC79  F017         	call	_LCD_CONFIG	;wreg free
  1098                           
  1099                           ;LCD.c: 198:     _delay((unsigned long)((15)*(32000000UL/4000.0)));
  1100   003084  0E9C               	movlw	156
  1101   003086  6E07               	movwf	??_LCD_INIT^(0+1280),c
  1102   003088  0ED7               	movlw	215
  1103   00308A                     u1177:
  1104   00308A  2EE8               	decfsz	wreg,f,c
  1105   00308C  D7FE               	bra	u1177
  1106   00308E  2E07               	decfsz	??_LCD_INIT^(0+1280),f,c
  1107   003090  D7FC               	bra	u1177
  1108   003092  0000               	nop	
  1109                           
  1110                           ;LCD.c: 199:     BORRAR_LCD();
  1111   003094  EC04  F019         	call	_BORRAR_LCD	;wreg free
  1112                           
  1113                           ;LCD.c: 200:     CURSOR_HOME();
  1114   003098  EC00  F019         	call	_CURSOR_HOME	;wreg free
  1115                           
  1116                           ;LCD.c: 201:     CURSOR_ONOFF(1);
  1117   00309C  0E01               	movlw	1
  1118   00309E  ECE4  F018         	call	_CURSOR_ONOFF
  1119   0030A2  0012               	return		;funcret
  1120   0030A4                     __end_of_LCD_INIT:
  1121                           	callstack 0
  1122                           
  1123 ;; *************** function _LCD_CONFIG *****************
  1124 ;; Defined at:
  1125 ;;		line 90 in file "LCD.c"
  1126 ;; Parameters:    Size  Location     Type
  1127 ;;		None
  1128 ;; Auto vars:     Size  Location     Type
  1129 ;;		None
  1130 ;; Return value:  Size  Location     Type
  1131 ;;                  1    wreg      void 
  1132 ;; Registers used:
  1133 ;;		wreg, status,2, status,0, cstack
  1134 ;; Tracked objects:
  1135 ;;		On entry : 0/4
  1136 ;;		On exit  : 0/0
  1137 ;;		Unchanged: 0/0
  1138 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1139 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1140 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1141 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1142 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1143 ;;Total ram usage:        1 bytes
  1144 ;; Hardware stack levels used: 1
  1145 ;; Hardware stack levels required when called: 3
  1146 ;; This function calls:
  1147 ;;		_ENVIA_LCD_CMD
  1148 ;;		_ENVIA_NIBBLE
  1149 ;; This function is called by:
  1150 ;;		_LCD_INIT
  1151 ;; This function uses a non-reentrant model
  1152 ;;
  1153                           
  1154                           	psect	text7
  1155   002EF2                     __ptext7:
  1156                           	callstack 0
  1157   002EF2                     _LCD_CONFIG:
  1158                           	callstack 121
  1159                           
  1160                           ;LCD.c: 91:  LATDbits.LATD0 = 0;
  1161                           
  1162                           ;incstack = 0
  1163   002EF2  90C1               	bcf	193,0,c	;volatile
  1164                           
  1165                           ;LCD.c: 92:  LATDbits.LATD1 = 0;
  1166   002EF4  92C1               	bcf	193,1,c	;volatile
  1167                           
  1168                           ;LCD.c: 93:  ENVIA_NIBBLE(0x30);
  1169   002EF6  0E30               	movlw	48
  1170   002EF8  ECF2  F018         	call	_ENVIA_NIBBLE
  1171                           
  1172                           ;LCD.c: 94:     _delay((unsigned long)((2)*(32000000UL/4000.0)));
  1173   002EFC  0E15               	movlw	21
  1174   002EFE  6E06               	movwf	??_LCD_CONFIG^(0+1280),c
  1175   002F00  0EC6               	movlw	198
  1176   002F02                     u1187:
  1177   002F02  2EE8               	decfsz	wreg,f,c
  1178   002F04  D7FE               	bra	u1187
  1179   002F06  2E06               	decfsz	??_LCD_CONFIG^(0+1280),f,c
  1180   002F08  D7FC               	bra	u1187
  1181   002F0A  D000               	nop2	
  1182                           
  1183                           ;LCD.c: 95:  ENVIA_NIBBLE(0x30);
  1184   002F0C  0E30               	movlw	48
  1185   002F0E  ECF2  F018         	call	_ENVIA_NIBBLE
  1186                           
  1187                           ;LCD.c: 96:     _delay((unsigned long)((100)*(32000000UL/4000000.0)));
  1188   002F12  0EA0               	movlw	160
  1189   002F14                     u1197:
  1190   002F14  D000               	nop2	
  1191   002F16  2EE8               	decfsz	wreg,f,c
  1192   002F18  D7FD               	bra	u1197
  1193                           
  1194                           ;LCD.c: 97:     ENVIA_NIBBLE(0x30);
  1195   002F1A  0E30               	movlw	48
  1196   002F1C  ECF2  F018         	call	_ENVIA_NIBBLE
  1197                           
  1198                           ;LCD.c: 98:  ENVIA_NIBBLE(0x20);
  1199   002F20  0E20               	movlw	32
  1200   002F22  ECF2  F018         	call	_ENVIA_NIBBLE
  1201                           
  1202                           ;LCD.c: 99:  ENVIA_LCD_CMD(0x01);
  1203   002F26  0E01               	movlw	1
  1204   002F28  EC8A  F018         	call	_ENVIA_LCD_CMD
  1205                           
  1206                           ;LCD.c: 100:  ENVIA_LCD_CMD(0x28);
  1207   002F2C  0E28               	movlw	40
  1208   002F2E  EC8A  F018         	call	_ENVIA_LCD_CMD
  1209                           
  1210                           ;LCD.c: 101:  ENVIA_LCD_CMD(0x0F);
  1211   002F32  0E0F               	movlw	15
  1212   002F34  EC8A  F018         	call	_ENVIA_LCD_CMD
  1213                           
  1214                           ;LCD.c: 102:  ENVIA_LCD_CMD(0x06);
  1215   002F38  0E06               	movlw	6
  1216   002F3A  EC8A  F018         	call	_ENVIA_LCD_CMD
  1217                           
  1218                           ;LCD.c: 103:  ENVIA_LCD_CMD(0x01);
  1219   002F3E  0E01               	movlw	1
  1220   002F40  EC8A  F018         	call	_ENVIA_LCD_CMD
  1221   002F44  0012               	return		;funcret
  1222   002F46                     __end_of_LCD_CONFIG:
  1223                           	callstack 0
  1224                           
  1225 ;; *************** function _CURSOR_ONOFF *****************
  1226 ;; Defined at:
  1227 ;;		line 50 in file "LCD.c"
  1228 ;; Parameters:    Size  Location     Type
  1229 ;;  estado          1    wreg     unsigned char 
  1230 ;; Auto vars:     Size  Location     Type
  1231 ;;  estado          1    5[COMRAM] unsigned char 
  1232 ;; Return value:  Size  Location     Type
  1233 ;;                  1    wreg      void 
  1234 ;; Registers used:
  1235 ;;		wreg, status,2, status,0, cstack
  1236 ;; Tracked objects:
  1237 ;;		On entry : 0/4
  1238 ;;		On exit  : 0/0
  1239 ;;		Unchanged: 0/0
  1240 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1241 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1242 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1243 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1244 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1245 ;;Total ram usage:        1 bytes
  1246 ;; Hardware stack levels used: 1
  1247 ;; Hardware stack levels required when called: 3
  1248 ;; This function calls:
  1249 ;;		_ENVIA_LCD_CMD
  1250 ;; This function is called by:
  1251 ;;		_LCD_INIT
  1252 ;; This function uses a non-reentrant model
  1253 ;;
  1254                           
  1255                           	psect	text8
  1256   0031C8                     __ptext8:
  1257                           	callstack 0
  1258   0031C8                     _CURSOR_ONOFF:
  1259                           	callstack 121
  1260                           
  1261                           ;incstack = 0
  1262                           ;CURSOR_ONOFF@estado stored from wreg
  1263   0031C8  6E06               	movwf	CURSOR_ONOFF@estado^(0+1280),c
  1264                           
  1265                           ;LCD.c: 51:  if(estado == 0) ENVIA_LCD_CMD(0x0E);
  1266   0031CA  5006               	movf	CURSOR_ONOFF@estado^(0+1280),w,c
  1267   0031CC  A4D8               	btfss	status,2,c
  1268   0031CE  D003               	goto	l994
  1269   0031D0  0E0E               	movlw	14
  1270   0031D2  EC8A  F018         	call	_ENVIA_LCD_CMD
  1271   0031D6                     l994:
  1272                           
  1273                           ;LCD.c: 52:  if(estado == 1) ENVIA_LCD_CMD(0x0C);
  1274   0031D6  0406               	decf	CURSOR_ONOFF@estado^(0+1280),w,c
  1275   0031D8  A4D8               	btfss	status,2,c
  1276   0031DA  0012               	return	
  1277   0031DC  0E0C               	movlw	12
  1278   0031DE  EC8A  F018         	call	_ENVIA_LCD_CMD
  1279   0031E2  0012               	return		;funcret
  1280   0031E4                     __end_of_CURSOR_ONOFF:
  1281                           	callstack 0
  1282                           
  1283 ;; *************** function _CURSOR_HOME *****************
  1284 ;; Defined at:
  1285 ;;		line 30 in file "LCD.c"
  1286 ;; Parameters:    Size  Location     Type
  1287 ;;		None
  1288 ;; Auto vars:     Size  Location     Type
  1289 ;;		None
  1290 ;; Return value:  Size  Location     Type
  1291 ;;                  1    wreg      void 
  1292 ;; Registers used:
  1293 ;;		wreg, status,2, status,0, cstack
  1294 ;; Tracked objects:
  1295 ;;		On entry : 0/4
  1296 ;;		On exit  : 0/0
  1297 ;;		Unchanged: 0/0
  1298 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1299 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1300 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1301 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1302 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1303 ;;Total ram usage:        0 bytes
  1304 ;; Hardware stack levels used: 1
  1305 ;; Hardware stack levels required when called: 3
  1306 ;; This function calls:
  1307 ;;		_ENVIA_LCD_CMD
  1308 ;; This function is called by:
  1309 ;;		_LCD_INIT
  1310 ;; This function uses a non-reentrant model
  1311 ;;
  1312                           
  1313                           	psect	text9
  1314   003200                     __ptext9:
  1315                           	callstack 0
  1316   003200                     _CURSOR_HOME:
  1317                           	callstack 121
  1318                           
  1319                           ;LCD.c: 31:  ENVIA_LCD_CMD(0x02);
  1320                           
  1321                           ;incstack = 0
  1322   003200  0E02               	movlw	2
  1323   003202  EC8A  F018         	call	_ENVIA_LCD_CMD
  1324   003206  0012               	return		;funcret
  1325   003208                     __end_of_CURSOR_HOME:
  1326                           	callstack 0
  1327                           
  1328 ;; *************** function _BORRAR_LCD *****************
  1329 ;; Defined at:
  1330 ;;		line 86 in file "LCD.c"
  1331 ;; Parameters:    Size  Location     Type
  1332 ;;		None
  1333 ;; Auto vars:     Size  Location     Type
  1334 ;;		None
  1335 ;; Return value:  Size  Location     Type
  1336 ;;                  1    wreg      void 
  1337 ;; Registers used:
  1338 ;;		wreg, status,2, status,0, cstack
  1339 ;; Tracked objects:
  1340 ;;		On entry : 0/0
  1341 ;;		On exit  : 0/0
  1342 ;;		Unchanged: 0/0
  1343 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1344 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1345 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1346 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1347 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1348 ;;Total ram usage:        0 bytes
  1349 ;; Hardware stack levels used: 1
  1350 ;; Hardware stack levels required when called: 3
  1351 ;; This function calls:
  1352 ;;		_ENVIA_LCD_CMD
  1353 ;; This function is called by:
  1354 ;;		_LCD_INIT
  1355 ;;		_splash_screen
  1356 ;; This function uses a non-reentrant model
  1357 ;;
  1358                           
  1359                           	psect	text10
  1360   003208                     __ptext10:
  1361                           	callstack 0
  1362   003208                     _BORRAR_LCD:
  1363                           	callstack 122
  1364                           
  1365                           ;LCD.c: 87:  ENVIA_LCD_CMD(0x01);
  1366                           
  1367                           ;incstack = 0
  1368   003208  0E01               	movlw	1
  1369   00320A  EC8A  F018         	call	_ENVIA_LCD_CMD
  1370   00320E  0012               	return		;funcret
  1371   003210                     __end_of_BORRAR_LCD:
  1372                           	callstack 0
  1373                           
  1374 ;; *************** function _ENVIA_LCD_CMD *****************
  1375 ;; Defined at:
  1376 ;;		line 124 in file "LCD.c"
  1377 ;; Parameters:    Size  Location     Type
  1378 ;;  dato            1    wreg     unsigned char 
  1379 ;; Auto vars:     Size  Location     Type
  1380 ;;  dato            1    3[COMRAM] unsigned char 
  1381 ;;  aux             1    4[COMRAM] unsigned char 
  1382 ;; Return value:  Size  Location     Type
  1383 ;;                  1    wreg      void 
  1384 ;; Registers used:
  1385 ;;		wreg, status,2, status,0, cstack
  1386 ;; Tracked objects:
  1387 ;;		On entry : 0/0
  1388 ;;		On exit  : 0/0
  1389 ;;		Unchanged: 0/0
  1390 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1391 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1392 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1393 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1394 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1395 ;;Total ram usage:        2 bytes
  1396 ;; Hardware stack levels used: 1
  1397 ;; Hardware stack levels required when called: 2
  1398 ;; This function calls:
  1399 ;;		_ENVIA_NIBBLE
  1400 ;;		_LEER_LCD
  1401 ;; This function is called by:
  1402 ;;		_POS_CURSOR
  1403 ;;		_CURSOR_HOME
  1404 ;;		_CURSOR_ONOFF
  1405 ;;		_BORRAR_LCD
  1406 ;;		_LCD_CONFIG
  1407 ;; This function uses a non-reentrant model
  1408 ;;
  1409                           
  1410                           	psect	text11
  1411   003114                     __ptext11:
  1412                           	callstack 0
  1413   003114                     _ENVIA_LCD_CMD:
  1414                           	callstack 122
  1415                           
  1416                           ;incstack = 0
  1417                           ;ENVIA_LCD_CMD@dato stored from wreg
  1418   003114  6E04               	movwf	ENVIA_LCD_CMD@dato^(0+1280),c
  1419                           
  1420                           ;LCD.c: 125:  unsigned char aux;;LCD.c: 126:  LATDbits.LATD0 = 0;
  1421   003116  90C1               	bcf	193,0,c	;volatile
  1422                           
  1423                           ;LCD.c: 127:  LEER_LCD();
  1424   003118  EC1D  F017         	call	_LEER_LCD	;wreg free
  1425                           
  1426                           ;LCD.c: 128:  TRISD = 0b00000000;
  1427   00311C  0E00               	movlw	0
  1428   00311E  6EC9               	movwf	201,c	;volatile
  1429                           
  1430                           ;LCD.c: 129:     _delay((unsigned long)((100)*(32000000UL/4000000.0)));
  1431   003120  0EA0               	movlw	160
  1432   003122                     u1207:
  1433   003122  D000               	nop2	
  1434   003124  2EE8               	decfsz	wreg,f,c
  1435   003126  D7FD               	bra	u1207
  1436                           
  1437                           ;LCD.c: 130:     LATDbits.LATD1 = 0;
  1438   003128  92C1               	bcf	193,1,c	;volatile
  1439                           
  1440                           ;LCD.c: 131:  LATDbits.LATD2 = 0;
  1441   00312A  94C1               	bcf	193,2,c	;volatile
  1442                           
  1443                           ;LCD.c: 132:  LATDbits.LATD0 = 0;
  1444   00312C  90C1               	bcf	193,0,c	;volatile
  1445                           
  1446                           ;LCD.c: 133:  aux = dato & 0xF0;
  1447   00312E  5004               	movf	ENVIA_LCD_CMD@dato^(0+1280),w,c
  1448   003130  0BF0               	andlw	240
  1449   003132  6E05               	movwf	ENVIA_LCD_CMD@aux^(0+1280),c
  1450                           
  1451                           ;LCD.c: 134:  ENVIA_NIBBLE(aux);
  1452   003134  5005               	movf	ENVIA_LCD_CMD@aux^(0+1280),w,c
  1453   003136  ECF2  F018         	call	_ENVIA_NIBBLE
  1454                           
  1455                           ;LCD.c: 135:  aux = dato<<4;
  1456   00313A  3804               	swapf	ENVIA_LCD_CMD@dato^(0+1280),w,c
  1457   00313C  0BF0               	andlw	240
  1458   00313E  6E05               	movwf	ENVIA_LCD_CMD@aux^(0+1280),c
  1459                           
  1460                           ;LCD.c: 136:  ENVIA_NIBBLE(aux);
  1461   003140  5005               	movf	ENVIA_LCD_CMD@aux^(0+1280),w,c
  1462   003142  ECF2  F018         	call	_ENVIA_NIBBLE
  1463   003146  0012               	return		;funcret
  1464   003148                     __end_of_ENVIA_LCD_CMD:
  1465                           	callstack 0
  1466                           
  1467 ;; *************** function ___xxtofl *****************
  1468 ;; Defined at:
  1469 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\xxtofl.c"
  1470 ;; Parameters:    Size  Location     Type
  1471 ;;  sign            1    wreg     unsigned char 
  1472 ;;  val             4    2[COMRAM] long 
  1473 ;; Auto vars:     Size  Location     Type
  1474 ;;  sign            1   10[COMRAM] unsigned char 
  1475 ;;  arg             4   12[COMRAM] unsigned long 
  1476 ;;  exp             1   11[COMRAM] unsigned char 
  1477 ;; Return value:  Size  Location     Type
  1478 ;;                  4    2[COMRAM] unsigned char 
  1479 ;; Registers used:
  1480 ;;		wreg, status,2, status,0
  1481 ;; Tracked objects:
  1482 ;;		On entry : 0/0
  1483 ;;		On exit  : 0/0
  1484 ;;		Unchanged: 0/0
  1485 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1486 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1487 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1488 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1489 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1490 ;;Total ram usage:       14 bytes
  1491 ;; Hardware stack levels used: 1
  1492 ;; Hardware stack levels required when called: 1
  1493 ;; This function calls:
  1494 ;;		Nothing
  1495 ;; This function is called by:
  1496 ;;		_main
  1497 ;; This function uses a non-reentrant model
  1498 ;;
  1499                           
  1500                           	psect	text12
  1501   002B34                     __ptext12:
  1502                           	callstack 0
  1503   002B34                     ___xxtofl:
  1504                           	callstack 125
  1505                           
  1506                           ;incstack = 0
  1507                           ;___xxtofl@sign stored from wreg
  1508   002B34  6E0B               	movwf	___xxtofl@sign^(0+1280),c
  1509   002B36  500B               	movf	___xxtofl@sign^(0+1280),w,c
  1510   002B38  A4D8               	btfss	status,2,c
  1511   002B3A  AE06               	btfss	(___xxtofl@val+3)^(0+1280),7,c
  1512   002B3C  D01A               	goto	l896
  1513   002B3E  C503  F507         	movff	___xxtofl@val,??___xxtofl
  1514   002B42  C504  F508         	movff	___xxtofl@val+1,??___xxtofl+1
  1515   002B46  C505  F509         	movff	___xxtofl@val+2,??___xxtofl+2
  1516   002B4A  C506  F50A         	movff	___xxtofl@val+3,??___xxtofl+3
  1517   002B4E  1E07               	comf	??___xxtofl^(0+1280),f,c
  1518   002B50  1E08               	comf	(??___xxtofl+1)^(0+1280),f,c
  1519   002B52  1E09               	comf	(??___xxtofl+2)^(0+1280),f,c
  1520   002B54  1E0A               	comf	(??___xxtofl+3)^(0+1280),f,c
  1521   002B56  2A07               	incf	??___xxtofl^(0+1280),f,c
  1522   002B58  0E00               	movlw	0
  1523   002B5A  2208               	addwfc	(??___xxtofl+1)^(0+1280),f,c
  1524   002B5C  2209               	addwfc	(??___xxtofl+2)^(0+1280),f,c
  1525   002B5E  220A               	addwfc	(??___xxtofl+3)^(0+1280),f,c
  1526   002B60  C507  F50D         	movff	??___xxtofl,___xxtofl@arg
  1527   002B64  C508  F50E         	movff	??___xxtofl+1,___xxtofl@arg+1
  1528   002B68  C509  F50F         	movff	??___xxtofl+2,___xxtofl@arg+2
  1529   002B6C  C50A  F510         	movff	??___xxtofl+3,___xxtofl@arg+3
  1530   002B70  D008               	goto	l1982
  1531   002B72                     l896:
  1532   002B72  C503  F50D         	movff	___xxtofl@val,___xxtofl@arg
  1533   002B76  C504  F50E         	movff	___xxtofl@val+1,___xxtofl@arg+1
  1534   002B7A  C505  F50F         	movff	___xxtofl@val+2,___xxtofl@arg+2
  1535   002B7E  C506  F510         	movff	___xxtofl@val+3,___xxtofl@arg+3
  1536   002B82                     l1982:
  1537   002B82  5003               	movf	___xxtofl@val^(0+1280),w,c
  1538   002B84  1004               	iorwf	(___xxtofl@val+1)^(0+1280),w,c
  1539   002B86  1005               	iorwf	(___xxtofl@val+2)^(0+1280),w,c
  1540   002B88  1006               	iorwf	(___xxtofl@val+3)^(0+1280),w,c
  1541   002B8A  A4D8               	btfss	status,2,c
  1542   002B8C  D009               	goto	l1988
  1543   002B8E  0E00               	movlw	0
  1544   002B90  6E03               	movwf	?___xxtofl^(0+1280),c
  1545   002B92  0E00               	movlw	0
  1546   002B94  6E04               	movwf	(?___xxtofl+1)^(0+1280),c
  1547   002B96  0E00               	movlw	0
  1548   002B98  6E05               	movwf	(?___xxtofl+2)^(0+1280),c
  1549   002B9A  0E00               	movlw	0
  1550   002B9C  6E06               	movwf	(?___xxtofl+3)^(0+1280),c
  1551   002B9E  0012               	return	
  1552   002BA0                     l1988:
  1553   002BA0  0E96               	movlw	150
  1554   002BA2  6E0C               	movwf	___xxtofl@exp^(0+1280),c
  1555   002BA4  D006               	goto	l1992
  1556   002BA6                     l1990:
  1557   002BA6  2A0C               	incf	___xxtofl@exp^(0+1280),f,c
  1558   002BA8  90D8               	bcf	status,0,c
  1559   002BAA  3210               	rrcf	(___xxtofl@arg+3)^(0+1280),f,c
  1560   002BAC  320F               	rrcf	(___xxtofl@arg+2)^(0+1280),f,c
  1561   002BAE  320E               	rrcf	(___xxtofl@arg+1)^(0+1280),f,c
  1562   002BB0  320D               	rrcf	___xxtofl@arg^(0+1280),f,c
  1563   002BB2                     l1992:
  1564   002BB2  0E00               	movlw	0
  1565   002BB4  140D               	andwf	___xxtofl@arg^(0+1280),w,c
  1566   002BB6  6E07               	movwf	??___xxtofl^(0+1280),c
  1567   002BB8  0E00               	movlw	0
  1568   002BBA  140E               	andwf	(___xxtofl@arg+1)^(0+1280),w,c
  1569   002BBC  6E08               	movwf	(??___xxtofl+1)^(0+1280),c
  1570   002BBE  0E00               	movlw	0
  1571   002BC0  140F               	andwf	(___xxtofl@arg+2)^(0+1280),w,c
  1572   002BC2  6E09               	movwf	(??___xxtofl+2)^(0+1280),c
  1573   002BC4  0EFE               	movlw	254
  1574   002BC6  1410               	andwf	(___xxtofl@arg+3)^(0+1280),w,c
  1575   002BC8  6E0A               	movwf	(??___xxtofl+3)^(0+1280),c
  1576   002BCA  5007               	movf	??___xxtofl^(0+1280),w,c
  1577   002BCC  1008               	iorwf	(??___xxtofl+1)^(0+1280),w,c
  1578   002BCE  1009               	iorwf	(??___xxtofl+2)^(0+1280),w,c
  1579   002BD0  100A               	iorwf	(??___xxtofl+3)^(0+1280),w,c
  1580   002BD2  B4D8               	btfsc	status,2,c
  1581   002BD4  D00D               	goto	l903
  1582   002BD6  D7E7               	goto	l1990
  1583   002BD8                     l1994:
  1584   002BD8  2A0C               	incf	___xxtofl@exp^(0+1280),f,c
  1585   002BDA  0E01               	movlw	1
  1586   002BDC  260D               	addwf	___xxtofl@arg^(0+1280),f,c
  1587   002BDE  0E00               	movlw	0
  1588   002BE0  220E               	addwfc	(___xxtofl@arg+1)^(0+1280),f,c
  1589   002BE2  220F               	addwfc	(___xxtofl@arg+2)^(0+1280),f,c
  1590   002BE4  2210               	addwfc	(___xxtofl@arg+3)^(0+1280),f,c
  1591   002BE6  90D8               	bcf	status,0,c
  1592   002BE8  3210               	rrcf	(___xxtofl@arg+3)^(0+1280),f,c
  1593   002BEA  320F               	rrcf	(___xxtofl@arg+2)^(0+1280),f,c
  1594   002BEC  320E               	rrcf	(___xxtofl@arg+1)^(0+1280),f,c
  1595   002BEE  320D               	rrcf	___xxtofl@arg^(0+1280),f,c
  1596   002BF0                     l903:
  1597   002BF0  0E00               	movlw	0
  1598   002BF2  140D               	andwf	___xxtofl@arg^(0+1280),w,c
  1599   002BF4  6E07               	movwf	??___xxtofl^(0+1280),c
  1600   002BF6  0E00               	movlw	0
  1601   002BF8  140E               	andwf	(___xxtofl@arg+1)^(0+1280),w,c
  1602   002BFA  6E08               	movwf	(??___xxtofl+1)^(0+1280),c
  1603   002BFC  0E00               	movlw	0
  1604   002BFE  140F               	andwf	(___xxtofl@arg+2)^(0+1280),w,c
  1605   002C00  6E09               	movwf	(??___xxtofl+2)^(0+1280),c
  1606   002C02  0EFF               	movlw	255
  1607   002C04  1410               	andwf	(___xxtofl@arg+3)^(0+1280),w,c
  1608   002C06  6E0A               	movwf	(??___xxtofl+3)^(0+1280),c
  1609   002C08  5007               	movf	??___xxtofl^(0+1280),w,c
  1610   002C0A  1008               	iorwf	(??___xxtofl+1)^(0+1280),w,c
  1611   002C0C  1009               	iorwf	(??___xxtofl+2)^(0+1280),w,c
  1612   002C0E  100A               	iorwf	(??___xxtofl+3)^(0+1280),w,c
  1613   002C10  B4D8               	btfsc	status,2,c
  1614   002C12  D007               	goto	l2002
  1615   002C14  D7E1               	goto	l1994
  1616   002C16                     l2000:
  1617   002C16  060C               	decf	___xxtofl@exp^(0+1280),f,c
  1618   002C18  90D8               	bcf	status,0,c
  1619   002C1A  360D               	rlcf	___xxtofl@arg^(0+1280),f,c
  1620   002C1C  360E               	rlcf	(___xxtofl@arg+1)^(0+1280),f,c
  1621   002C1E  360F               	rlcf	(___xxtofl@arg+2)^(0+1280),f,c
  1622   002C20  3610               	rlcf	(___xxtofl@arg+3)^(0+1280),f,c
  1623   002C22                     l2002:
  1624   002C22  BE0F               	btfsc	(___xxtofl@arg+2)^(0+1280),7,c
  1625   002C24  D003               	goto	u1090
  1626   002C26  0E02               	movlw	2
  1627   002C28  600C               	cpfslt	___xxtofl@exp^(0+1280),c
  1628   002C2A  D7F5               	goto	l2000
  1629   002C2C                     u1090:
  1630   002C2C  A00C               	btfss	___xxtofl@exp^(0+1280),0,c
  1631   002C2E  9E0F               	bcf	(___xxtofl@arg+2)^(0+1280),7,c
  1632   002C30  90D8               	bcf	status,0,c
  1633   002C32  320C               	rrcf	___xxtofl@exp^(0+1280),f,c
  1634   002C34  C50C  F507         	movff	___xxtofl@exp,??___xxtofl
  1635   002C38  6A08               	clrf	(??___xxtofl+1)^(0+1280),c
  1636   002C3A  6A09               	clrf	(??___xxtofl+2)^(0+1280),c
  1637   002C3C  6A0A               	clrf	(??___xxtofl+3)^(0+1280),c
  1638   002C3E  C507  F50A         	movff	??___xxtofl,??___xxtofl+3
  1639   002C42  6A09               	clrf	(??___xxtofl+2)^(0+1280),c
  1640   002C44  6A08               	clrf	(??___xxtofl+1)^(0+1280),c
  1641   002C46  6A07               	clrf	??___xxtofl^(0+1280),c
  1642   002C48  5007               	movf	??___xxtofl^(0+1280),w,c
  1643   002C4A  120D               	iorwf	___xxtofl@arg^(0+1280),f,c
  1644   002C4C  5008               	movf	(??___xxtofl+1)^(0+1280),w,c
  1645   002C4E  120E               	iorwf	(___xxtofl@arg+1)^(0+1280),f,c
  1646   002C50  5009               	movf	(??___xxtofl+2)^(0+1280),w,c
  1647   002C52  120F               	iorwf	(___xxtofl@arg+2)^(0+1280),f,c
  1648   002C54  500A               	movf	(??___xxtofl+3)^(0+1280),w,c
  1649   002C56  1210               	iorwf	(___xxtofl@arg+3)^(0+1280),f,c
  1650   002C58  500B               	movf	___xxtofl@sign^(0+1280),w,c
  1651   002C5A  A4D8               	btfss	status,2,c
  1652   002C5C  AE06               	btfss	(___xxtofl@val+3)^(0+1280),7,c
  1653   002C5E  D001               	goto	l2018
  1654   002C60  8E10               	bsf	(___xxtofl@arg+3)^(0+1280),7,c
  1655   002C62                     l2018:
  1656   002C62  C50D  F503         	movff	___xxtofl@arg,?___xxtofl
  1657   002C66  C50E  F504         	movff	___xxtofl@arg+1,?___xxtofl+1
  1658   002C6A  C50F  F505         	movff	___xxtofl@arg+2,?___xxtofl+2
  1659   002C6E  C510  F506         	movff	___xxtofl@arg+3,?___xxtofl+3
  1660   002C72  0012               	return		;funcret
  1661   002C74                     __end_of___xxtofl:
  1662                           	callstack 0
  1663                           
  1664 ;; *************** function ___fltol *****************
  1665 ;; Defined at:
  1666 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\fltol.c"
  1667 ;; Parameters:    Size  Location     Type
  1668 ;;  f1              4    2[COMRAM] unsigned char 
  1669 ;; Auto vars:     Size  Location     Type
  1670 ;;  exp1            1   11[COMRAM] unsigned char 
  1671 ;;  sign1           1   10[COMRAM] unsigned char 
  1672 ;; Return value:  Size  Location     Type
  1673 ;;                  4    2[COMRAM] long 
  1674 ;; Registers used:
  1675 ;;		wreg, status,2, status,0
  1676 ;; Tracked objects:
  1677 ;;		On entry : 0/0
  1678 ;;		On exit  : 0/0
  1679 ;;		Unchanged: 0/0
  1680 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1681 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1682 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1683 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1684 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1685 ;;Total ram usage:       10 bytes
  1686 ;; Hardware stack levels used: 1
  1687 ;; Hardware stack levels required when called: 1
  1688 ;; This function calls:
  1689 ;;		Nothing
  1690 ;; This function is called by:
  1691 ;;		_main
  1692 ;; This function uses a non-reentrant model
  1693 ;;
  1694                           
  1695                           	psect	text13
  1696   002D80                     __ptext13:
  1697                           	callstack 0
  1698   002D80                     ___fltol:
  1699                           	callstack 125
  1700                           
  1701                           ;incstack = 0
  1702   002D80  3405               	rlcf	(___fltol@f1+2)^(0+1280),w,c
  1703   002D82  3406               	rlcf	(___fltol@f1+3)^(0+1280),w,c
  1704   002D84  6E0C               	movwf	___fltol@exp1^(0+1280),c
  1705   002D86  500C               	movf	___fltol@exp1^(0+1280),w,c
  1706   002D88  A4D8               	btfss	status,2,c
  1707   002D8A  D009               	goto	l1938
  1708   002D8C                     u960:
  1709   002D8C  0E00               	movlw	0
  1710   002D8E  6E03               	movwf	?___fltol^(0+1280),c
  1711   002D90  0E00               	movlw	0
  1712   002D92  6E04               	movwf	(?___fltol+1)^(0+1280),c
  1713   002D94  0E00               	movlw	0
  1714   002D96  6E05               	movwf	(?___fltol+2)^(0+1280),c
  1715   002D98  0E00               	movlw	0
  1716   002D9A  6E06               	movwf	(?___fltol+3)^(0+1280),c
  1717   002D9C  0012               	return	
  1718   002D9E                     l1938:
  1719   002D9E  C503  F507         	movff	___fltol@f1,??___fltol
  1720   002DA2  C504  F508         	movff	___fltol@f1+1,??___fltol+1
  1721   002DA6  C505  F509         	movff	___fltol@f1+2,??___fltol+2
  1722   002DAA  C506  F50A         	movff	___fltol@f1+3,??___fltol+3
  1723   002DAE  0E20               	movlw	32
  1724   002DB0  D005               	goto	u970
  1725   002DB2                     u975:
  1726   002DB2  90D8               	bcf	status,0,c
  1727   002DB4  320A               	rrcf	(??___fltol+3)^(0+1280),f,c
  1728   002DB6  3209               	rrcf	(??___fltol+2)^(0+1280),f,c
  1729   002DB8  3208               	rrcf	(??___fltol+1)^(0+1280),f,c
  1730   002DBA  3207               	rrcf	??___fltol^(0+1280),f,c
  1731   002DBC                     u970:
  1732   002DBC  2EE8               	decfsz	wreg,f,c
  1733   002DBE  D7F9               	goto	u975
  1734   002DC0  5007               	movf	??___fltol^(0+1280),w,c
  1735   002DC2  6E0B               	movwf	___fltol@sign1^(0+1280),c
  1736   002DC4  8E05               	bsf	(___fltol@f1+2)^(0+1280),7,c
  1737   002DC6  0EFF               	movlw	255
  1738   002DC8  1603               	andwf	___fltol@f1^(0+1280),f,c
  1739   002DCA  0EFF               	movlw	255
  1740   002DCC  1604               	andwf	(___fltol@f1+1)^(0+1280),f,c
  1741   002DCE  0EFF               	movlw	255
  1742   002DD0  1605               	andwf	(___fltol@f1+2)^(0+1280),f,c
  1743   002DD2  0E00               	movlw	0
  1744   002DD4  1606               	andwf	(___fltol@f1+3)^(0+1280),f,c
  1745   002DD6  0E96               	movlw	150
  1746   002DD8  5E0C               	subwf	___fltol@exp1^(0+1280),f,c
  1747   002DDA  AE0C               	btfss	___fltol@exp1^(0+1280),7,c
  1748   002DDC  D00D               	goto	l1958
  1749   002DDE  500C               	movf	___fltol@exp1^(0+1280),w,c
  1750   002DE0  0A80               	xorlw	128
  1751   002DE2  0F97               	addlw	151
  1752   002DE4  A0D8               	btfss	status,0,c
  1753   002DE6  D7D2               	goto	u960
  1754   002DE8                     l1954:
  1755   002DE8  90D8               	bcf	status,0,c
  1756   002DEA  3206               	rrcf	(___fltol@f1+3)^(0+1280),f,c
  1757   002DEC  3205               	rrcf	(___fltol@f1+2)^(0+1280),f,c
  1758   002DEE  3204               	rrcf	(___fltol@f1+1)^(0+1280),f,c
  1759   002DF0  3203               	rrcf	___fltol@f1^(0+1280),f,c
  1760   002DF2  3E0C               	incfsz	___fltol@exp1^(0+1280),f,c
  1761   002DF4  D7F9               	goto	l1954
  1762   002DF6  D00D               	goto	u1010
  1763   002DF8                     l1958:
  1764   002DF8  0E1F               	movlw	31
  1765   002DFA  640C               	cpfsgt	___fltol@exp1^(0+1280),c
  1766   002DFC  D007               	goto	l1966
  1767   002DFE  D7C6               	goto	u960
  1768   002E00                     l1964:
  1769   002E00  90D8               	bcf	status,0,c
  1770   002E02  3603               	rlcf	___fltol@f1^(0+1280),f,c
  1771   002E04  3604               	rlcf	(___fltol@f1+1)^(0+1280),f,c
  1772   002E06  3605               	rlcf	(___fltol@f1+2)^(0+1280),f,c
  1773   002E08  3606               	rlcf	(___fltol@f1+3)^(0+1280),f,c
  1774   002E0A  060C               	decf	___fltol@exp1^(0+1280),f,c
  1775   002E0C                     l1966:
  1776   002E0C  500C               	movf	___fltol@exp1^(0+1280),w,c
  1777   002E0E  A4D8               	btfss	status,2,c
  1778   002E10  D7F7               	goto	l1964
  1779   002E12                     u1010:
  1780   002E12  500B               	movf	___fltol@sign1^(0+1280),w,c
  1781   002E14  B4D8               	btfsc	status,2,c
  1782   002E16  D008               	goto	l1972
  1783   002E18  1E06               	comf	(___fltol@f1+3)^(0+1280),f,c
  1784   002E1A  1E05               	comf	(___fltol@f1+2)^(0+1280),f,c
  1785   002E1C  1E04               	comf	(___fltol@f1+1)^(0+1280),f,c
  1786   002E1E  6C03               	negf	___fltol@f1^(0+1280),c
  1787   002E20  0E00               	movlw	0
  1788   002E22  2204               	addwfc	(___fltol@f1+1)^(0+1280),f,c
  1789   002E24  2205               	addwfc	(___fltol@f1+2)^(0+1280),f,c
  1790   002E26  2206               	addwfc	(___fltol@f1+3)^(0+1280),f,c
  1791   002E28                     l1972:
  1792   002E28  C503  F503         	movff	___fltol@f1,?___fltol
  1793   002E2C  C504  F504         	movff	___fltol@f1+1,?___fltol+1
  1794   002E30  C505  F505         	movff	___fltol@f1+2,?___fltol+2
  1795   002E34  C506  F506         	movff	___fltol@f1+3,?___fltol+3
  1796   002E38  0012               	return		;funcret
  1797   002E3A                     __end_of___fltol:
  1798                           	callstack 0
  1799                           
  1800 ;; *************** function ___fldiv *****************
  1801 ;; Defined at:
  1802 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcdiv.c"
  1803 ;; Parameters:    Size  Location     Type
  1804 ;;  b               4    2[COMRAM] long 
  1805 ;;  a               4    6[COMRAM] long 
  1806 ;; Auto vars:     Size  Location     Type
  1807 ;;  grs             4   21[COMRAM] unsigned long 
  1808 ;;  rem             4   14[COMRAM] unsigned long 
  1809 ;;  new_exp         2   19[COMRAM] short 
  1810 ;;  aexp            1   26[COMRAM] unsigned char 
  1811 ;;  bexp            1   25[COMRAM] unsigned char 
  1812 ;;  sign            1   18[COMRAM] unsigned char 
  1813 ;; Return value:  Size  Location     Type
  1814 ;;                  4    2[COMRAM] unsigned char 
  1815 ;; Registers used:
  1816 ;;		wreg, status,2, status,0
  1817 ;; Tracked objects:
  1818 ;;		On entry : 0/0
  1819 ;;		On exit  : 0/0
  1820 ;;		Unchanged: 0/0
  1821 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1822 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1823 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1824 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1825 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1826 ;;Total ram usage:       25 bytes
  1827 ;; Hardware stack levels used: 1
  1828 ;; Hardware stack levels required when called: 1
  1829 ;; This function calls:
  1830 ;;		Nothing
  1831 ;; This function is called by:
  1832 ;;		_main
  1833 ;; This function uses a non-reentrant model
  1834 ;;
  1835                           
  1836                           	psect	text14
  1837   0028AC                     __ptext14:
  1838                           	callstack 0
  1839   0028AC                     ___fldiv:
  1840                           	callstack 125
  1841                           
  1842                           ;incstack = 0
  1843   0028AC  5006               	movf	(___fldiv@b+3)^(0+1280),w,c
  1844   0028AE  0B80               	andlw	128
  1845   0028B0  6E13               	movwf	___fldiv@sign^(0+1280),c
  1846   0028B2  5006               	movf	(___fldiv@b+3)^(0+1280),w,c
  1847   0028B4  2406               	addwf	(___fldiv@b+3)^(0+1280),w,c
  1848   0028B6  6E1A               	movwf	___fldiv@bexp^(0+1280),c
  1849   0028B8  BE05               	btfsc	(___fldiv@b+2)^(0+1280),7,c
  1850   0028BA  801A               	bsf	___fldiv@bexp^(0+1280),0,c
  1851   0028BC  501A               	movf	___fldiv@bexp^(0+1280),w,c
  1852   0028BE  B4D8               	btfsc	status,2,c
  1853   0028C0  D00D               	goto	l1810
  1854   0028C2  281A               	incf	___fldiv@bexp^(0+1280),w,c
  1855   0028C4  A4D8               	btfss	status,2,c
  1856   0028C6  D008               	goto	l1806
  1857   0028C8  0E00               	movlw	0
  1858   0028CA  6E03               	movwf	___fldiv@b^(0+1280),c
  1859   0028CC  0E00               	movlw	0
  1860   0028CE  6E04               	movwf	(___fldiv@b+1)^(0+1280),c
  1861   0028D0  0E00               	movlw	0
  1862   0028D2  6E05               	movwf	(___fldiv@b+2)^(0+1280),c
  1863   0028D4  0E00               	movlw	0
  1864   0028D6  6E06               	movwf	(___fldiv@b+3)^(0+1280),c
  1865   0028D8                     l1806:
  1866   0028D8  8E05               	bsf	(___fldiv@b+2)^(0+1280),7,c
  1867   0028DA  D006               	goto	L2
  1868   0028DC                     l1810:
  1869   0028DC  0E00               	movlw	0
  1870   0028DE  6E03               	movwf	___fldiv@b^(0+1280),c
  1871   0028E0  0E00               	movlw	0
  1872   0028E2  6E04               	movwf	(___fldiv@b+1)^(0+1280),c
  1873   0028E4  0E00               	movlw	0
  1874   0028E6  6E05               	movwf	(___fldiv@b+2)^(0+1280),c
  1875   0028E8                     L2:
  1876   0028E8  0E00               	movlw	0
  1877   0028EA  6E06               	movwf	(___fldiv@b+3)^(0+1280),c
  1878   0028EC  500A               	movf	(___fldiv@a+3)^(0+1280),w,c
  1879   0028EE  0B80               	andlw	128
  1880   0028F0  1A13               	xorwf	___fldiv@sign^(0+1280),f,c
  1881   0028F2  500A               	movf	(___fldiv@a+3)^(0+1280),w,c
  1882   0028F4  240A               	addwf	(___fldiv@a+3)^(0+1280),w,c
  1883   0028F6  6E1B               	movwf	___fldiv@aexp^(0+1280),c
  1884   0028F8  BE09               	btfsc	(___fldiv@a+2)^(0+1280),7,c
  1885   0028FA  801B               	bsf	___fldiv@aexp^(0+1280),0,c
  1886   0028FC  501B               	movf	___fldiv@aexp^(0+1280),w,c
  1887   0028FE  B4D8               	btfsc	status,2,c
  1888   002900  D00D               	goto	l1830
  1889   002902  281B               	incf	___fldiv@aexp^(0+1280),w,c
  1890   002904  A4D8               	btfss	status,2,c
  1891   002906  D008               	goto	l1826
  1892   002908  0E00               	movlw	0
  1893   00290A  6E07               	movwf	___fldiv@a^(0+1280),c
  1894   00290C  0E00               	movlw	0
  1895   00290E  6E08               	movwf	(___fldiv@a+1)^(0+1280),c
  1896   002910  0E00               	movlw	0
  1897   002912  6E09               	movwf	(___fldiv@a+2)^(0+1280),c
  1898   002914  0E00               	movlw	0
  1899   002916  6E0A               	movwf	(___fldiv@a+3)^(0+1280),c
  1900   002918                     l1826:
  1901   002918  8E09               	bsf	(___fldiv@a+2)^(0+1280),7,c
  1902   00291A  D006               	goto	L3
  1903   00291C                     l1830:
  1904   00291C  0E00               	movlw	0
  1905   00291E  6E07               	movwf	___fldiv@a^(0+1280),c
  1906   002920  0E00               	movlw	0
  1907   002922  6E08               	movwf	(___fldiv@a+1)^(0+1280),c
  1908   002924  0E00               	movlw	0
  1909   002926  6E09               	movwf	(___fldiv@a+2)^(0+1280),c
  1910   002928                     L3:
  1911   002928  0E00               	movlw	0
  1912   00292A  6E0A               	movwf	(___fldiv@a+3)^(0+1280),c
  1913   00292C  5007               	movf	___fldiv@a^(0+1280),w,c
  1914   00292E  1008               	iorwf	(___fldiv@a+1)^(0+1280),w,c
  1915   002930  1009               	iorwf	(___fldiv@a+2)^(0+1280),w,c
  1916   002932  100A               	iorwf	(___fldiv@a+3)^(0+1280),w,c
  1917   002934  A4D8               	btfss	status,2,c
  1918   002936  D017               	goto	l1844
  1919   002938  0E00               	movlw	0
  1920   00293A  6E03               	movwf	___fldiv@b^(0+1280),c
  1921   00293C  0E00               	movlw	0
  1922   00293E  6E04               	movwf	(___fldiv@b+1)^(0+1280),c
  1923   002940  0E00               	movlw	0
  1924   002942  6E05               	movwf	(___fldiv@b+2)^(0+1280),c
  1925   002944  0E00               	movlw	0
  1926   002946  6E06               	movwf	(___fldiv@b+3)^(0+1280),c
  1927   002948  0E80               	movlw	128
  1928   00294A  1205               	iorwf	(___fldiv@b+2)^(0+1280),f,c
  1929   00294C  0E7F               	movlw	127
  1930   00294E  1206               	iorwf	(___fldiv@b+3)^(0+1280),f,c
  1931   002950                     l1838:
  1932   002950  5013               	movf	___fldiv@sign^(0+1280),w,c
  1933   002952  1206               	iorwf	(___fldiv@b+3)^(0+1280),f,c
  1934   002954  C503  F503         	movff	___fldiv@b,?___fldiv
  1935   002958  C504  F504         	movff	___fldiv@b+1,?___fldiv+1
  1936   00295C  C505  F505         	movff	___fldiv@b+2,?___fldiv+2
  1937   002960  C506  F506         	movff	___fldiv@b+3,?___fldiv+3
  1938   002964  0012               	return	
  1939   002966                     l1844:
  1940   002966  501A               	movf	___fldiv@bexp^(0+1280),w,c
  1941   002968  A4D8               	btfss	status,2,c
  1942   00296A  D009               	goto	l1852
  1943   00296C  0E00               	movlw	0
  1944   00296E  6E03               	movwf	?___fldiv^(0+1280),c
  1945   002970  0E00               	movlw	0
  1946   002972  6E04               	movwf	(?___fldiv+1)^(0+1280),c
  1947   002974  0E00               	movlw	0
  1948   002976  6E05               	movwf	(?___fldiv+2)^(0+1280),c
  1949   002978  0E00               	movlw	0
  1950   00297A  6E06               	movwf	(?___fldiv+3)^(0+1280),c
  1951   00297C  0012               	return	
  1952   00297E                     l1852:
  1953   00297E  501B               	movf	___fldiv@aexp^(0+1280),w,c
  1954   002980  C51A  F50B         	movff	___fldiv@bexp,??___fldiv
  1955   002984  6A0C               	clrf	(??___fldiv+1)^(0+1280),c
  1956   002986  5E0B               	subwf	??___fldiv^(0+1280),f,c
  1957   002988  0E00               	movlw	0
  1958   00298A  5A0C               	subwfb	(??___fldiv+1)^(0+1280),f,c
  1959   00298C  0E7F               	movlw	127
  1960   00298E  240B               	addwf	??___fldiv^(0+1280),w,c
  1961   002990  6E14               	movwf	___fldiv@new_exp^(0+1280),c
  1962   002992  0E00               	movlw	0
  1963   002994  200C               	addwfc	(??___fldiv+1)^(0+1280),w,c
  1964   002996  6E15               	movwf	(___fldiv@new_exp+1)^(0+1280),c
  1965   002998  C503  F50F         	movff	___fldiv@b,___fldiv@rem
  1966   00299C  C504  F510         	movff	___fldiv@b+1,___fldiv@rem+1
  1967   0029A0  C505  F511         	movff	___fldiv@b+2,___fldiv@rem+2
  1968   0029A4  C506  F512         	movff	___fldiv@b+3,___fldiv@rem+3
  1969   0029A8  0E00               	movlw	0
  1970   0029AA  6E03               	movwf	___fldiv@b^(0+1280),c
  1971   0029AC  0E00               	movlw	0
  1972   0029AE  6E04               	movwf	(___fldiv@b+1)^(0+1280),c
  1973   0029B0  0E00               	movlw	0
  1974   0029B2  6E05               	movwf	(___fldiv@b+2)^(0+1280),c
  1975   0029B4  0E00               	movlw	0
  1976   0029B6  6E06               	movwf	(___fldiv@b+3)^(0+1280),c
  1977   0029B8  0E00               	movlw	0
  1978   0029BA  6E16               	movwf	___fldiv@grs^(0+1280),c
  1979   0029BC  0E00               	movlw	0
  1980   0029BE  6E17               	movwf	(___fldiv@grs+1)^(0+1280),c
  1981   0029C0  0E00               	movlw	0
  1982   0029C2  6E18               	movwf	(___fldiv@grs+2)^(0+1280),c
  1983   0029C4  0E00               	movlw	0
  1984   0029C6  6E19               	movwf	(___fldiv@grs+3)^(0+1280),c
  1985   0029C8  0E00               	movlw	0
  1986   0029CA  6E1B               	movwf	___fldiv@aexp^(0+1280),c
  1987   0029CC  D028               	goto	l825
  1988   0029CE                     l1862:
  1989   0029CE  501B               	movf	___fldiv@aexp^(0+1280),w,c
  1990   0029D0  B4D8               	btfsc	status,2,c
  1991   0029D2  D011               	goto	l1870
  1992   0029D4  90D8               	bcf	status,0,c
  1993   0029D6  360F               	rlcf	___fldiv@rem^(0+1280),f,c
  1994   0029D8  3610               	rlcf	(___fldiv@rem+1)^(0+1280),f,c
  1995   0029DA  3611               	rlcf	(___fldiv@rem+2)^(0+1280),f,c
  1996   0029DC  3612               	rlcf	(___fldiv@rem+3)^(0+1280),f,c
  1997   0029DE  90D8               	bcf	status,0,c
  1998   0029E0  3603               	rlcf	___fldiv@b^(0+1280),f,c
  1999   0029E2  3604               	rlcf	(___fldiv@b+1)^(0+1280),f,c
  2000   0029E4  3605               	rlcf	(___fldiv@b+2)^(0+1280),f,c
  2001   0029E6  3606               	rlcf	(___fldiv@b+3)^(0+1280),f,c
  2002   0029E8  BE19               	btfsc	(___fldiv@grs+3)^(0+1280),7,c
  2003   0029EA  8003               	bsf	___fldiv@b^(0+1280),0,c
  2004   0029EC  90D8               	bcf	status,0,c
  2005   0029EE  3616               	rlcf	___fldiv@grs^(0+1280),f,c
  2006   0029F0  3617               	rlcf	(___fldiv@grs+1)^(0+1280),f,c
  2007   0029F2  3618               	rlcf	(___fldiv@grs+2)^(0+1280),f,c
  2008   0029F4  3619               	rlcf	(___fldiv@grs+3)^(0+1280),f,c
  2009   0029F6                     l1870:
  2010   0029F6  5007               	movf	___fldiv@a^(0+1280),w,c
  2011   0029F8  5C0F               	subwf	___fldiv@rem^(0+1280),w,c
  2012   0029FA  5008               	movf	(___fldiv@a+1)^(0+1280),w,c
  2013   0029FC  5810               	subwfb	(___fldiv@rem+1)^(0+1280),w,c
  2014   0029FE  5009               	movf	(___fldiv@a+2)^(0+1280),w,c
  2015   002A00  5811               	subwfb	(___fldiv@rem+2)^(0+1280),w,c
  2016   002A02  500A               	movf	(___fldiv@a+3)^(0+1280),w,c
  2017   002A04  5812               	subwfb	(___fldiv@rem+3)^(0+1280),w,c
  2018   002A06  A0D8               	btfss	status,0,c
  2019   002A08  D009               	goto	l1876
  2020   002A0A  8C19               	bsf	(___fldiv@grs+3)^(0+1280),6,c
  2021   002A0C  5007               	movf	___fldiv@a^(0+1280),w,c
  2022   002A0E  5E0F               	subwf	___fldiv@rem^(0+1280),f,c
  2023   002A10  5008               	movf	(___fldiv@a+1)^(0+1280),w,c
  2024   002A12  5A10               	subwfb	(___fldiv@rem+1)^(0+1280),f,c
  2025   002A14  5009               	movf	(___fldiv@a+2)^(0+1280),w,c
  2026   002A16  5A11               	subwfb	(___fldiv@rem+2)^(0+1280),f,c
  2027   002A18  500A               	movf	(___fldiv@a+3)^(0+1280),w,c
  2028   002A1A  5A12               	subwfb	(___fldiv@rem+3)^(0+1280),f,c
  2029   002A1C                     l1876:
  2030   002A1C  2A1B               	incf	___fldiv@aexp^(0+1280),f,c
  2031   002A1E                     l825:
  2032   002A1E  0E19               	movlw	25
  2033   002A20  641B               	cpfsgt	___fldiv@aexp^(0+1280),c
  2034   002A22  D7D5               	goto	l1862
  2035   002A24  500F               	movf	___fldiv@rem^(0+1280),w,c
  2036   002A26  1010               	iorwf	(___fldiv@rem+1)^(0+1280),w,c
  2037   002A28  1011               	iorwf	(___fldiv@rem+2)^(0+1280),w,c
  2038   002A2A  1012               	iorwf	(___fldiv@rem+3)^(0+1280),w,c
  2039   002A2C  B4D8               	btfsc	status,2,c
  2040   002A2E  D011               	goto	l1888
  2041   002A30  8016               	bsf	___fldiv@grs^(0+1280),0,c
  2042   002A32  D00F               	goto	l1888
  2043   002A34                     l1882:
  2044   002A34  90D8               	bcf	status,0,c
  2045   002A36  3603               	rlcf	___fldiv@b^(0+1280),f,c
  2046   002A38  3604               	rlcf	(___fldiv@b+1)^(0+1280),f,c
  2047   002A3A  3605               	rlcf	(___fldiv@b+2)^(0+1280),f,c
  2048   002A3C  3606               	rlcf	(___fldiv@b+3)^(0+1280),f,c
  2049   002A3E  BE19               	btfsc	(___fldiv@grs+3)^(0+1280),7,c
  2050   002A40  8003               	bsf	___fldiv@b^(0+1280),0,c
  2051   002A42  90D8               	bcf	status,0,c
  2052   002A44  3616               	rlcf	___fldiv@grs^(0+1280),f,c
  2053   002A46  3617               	rlcf	(___fldiv@grs+1)^(0+1280),f,c
  2054   002A48  3618               	rlcf	(___fldiv@grs+2)^(0+1280),f,c
  2055   002A4A  3619               	rlcf	(___fldiv@grs+3)^(0+1280),f,c
  2056   002A4C  0614               	decf	___fldiv@new_exp^(0+1280),f,c
  2057   002A4E  A0D8               	btfss	status,0,c
  2058   002A50  0615               	decf	(___fldiv@new_exp+1)^(0+1280),f,c
  2059   002A52                     l1888:
  2060   002A52  AE05               	btfss	(___fldiv@b+2)^(0+1280),7,c
  2061   002A54  D7EF               	goto	l1882
  2062   002A56  0E00               	movlw	0
  2063   002A58  6E1B               	movwf	___fldiv@aexp^(0+1280),c
  2064   002A5A  AE19               	btfss	(___fldiv@grs+3)^(0+1280),7,c
  2065   002A5C  D017               	goto	l836
  2066   002A5E  0EFF               	movlw	255
  2067   002A60  1416               	andwf	___fldiv@grs^(0+1280),w,c
  2068   002A62  6E0B               	movwf	??___fldiv^(0+1280),c
  2069   002A64  0EFF               	movlw	255
  2070   002A66  1417               	andwf	(___fldiv@grs+1)^(0+1280),w,c
  2071   002A68  6E0C               	movwf	(??___fldiv+1)^(0+1280),c
  2072   002A6A  0EFF               	movlw	255
  2073   002A6C  1418               	andwf	(___fldiv@grs+2)^(0+1280),w,c
  2074   002A6E  6E0D               	movwf	(??___fldiv+2)^(0+1280),c
  2075   002A70  0E7F               	movlw	127
  2076   002A72  1419               	andwf	(___fldiv@grs+3)^(0+1280),w,c
  2077   002A74  6E0E               	movwf	(??___fldiv+3)^(0+1280),c
  2078   002A76  500B               	movf	??___fldiv^(0+1280),w,c
  2079   002A78  100C               	iorwf	(??___fldiv+1)^(0+1280),w,c
  2080   002A7A  100D               	iorwf	(??___fldiv+2)^(0+1280),w,c
  2081   002A7C  100E               	iorwf	(??___fldiv+3)^(0+1280),w,c
  2082   002A7E  B4D8               	btfsc	status,2,c
  2083   002A80  D003               	goto	l837
  2084   002A82                     u890:
  2085   002A82  0E01               	movlw	1
  2086   002A84  6E1B               	movwf	___fldiv@aexp^(0+1280),c
  2087   002A86  D002               	goto	l836
  2088   002A88                     l837:
  2089   002A88  B003               	btfsc	___fldiv@b^(0+1280),0,c
  2090   002A8A  D7FB               	goto	u890
  2091   002A8C                     l836:
  2092   002A8C  501B               	movf	___fldiv@aexp^(0+1280),w,c
  2093   002A8E  B4D8               	btfsc	status,2,c
  2094   002A90  D01F               	goto	l1908
  2095   002A92  0E01               	movlw	1
  2096   002A94  2603               	addwf	___fldiv@b^(0+1280),f,c
  2097   002A96  0E00               	movlw	0
  2098   002A98  2204               	addwfc	(___fldiv@b+1)^(0+1280),f,c
  2099   002A9A  2205               	addwfc	(___fldiv@b+2)^(0+1280),f,c
  2100   002A9C  2206               	addwfc	(___fldiv@b+3)^(0+1280),f,c
  2101   002A9E  A006               	btfss	(___fldiv@b+3)^(0+1280),0,c
  2102   002AA0  D017               	goto	l1908
  2103   002AA2  C503  F50B         	movff	___fldiv@b,??___fldiv
  2104   002AA6  C504  F50C         	movff	___fldiv@b+1,??___fldiv+1
  2105   002AAA  C505  F50D         	movff	___fldiv@b+2,??___fldiv+2
  2106   002AAE  C506  F50E         	movff	___fldiv@b+3,??___fldiv+3
  2107   002AB2  340E               	rlcf	(??___fldiv+3)^(0+1280),w,c
  2108   002AB4  320E               	rrcf	(??___fldiv+3)^(0+1280),f,c
  2109   002AB6  320D               	rrcf	(??___fldiv+2)^(0+1280),f,c
  2110   002AB8  320C               	rrcf	(??___fldiv+1)^(0+1280),f,c
  2111   002ABA  320B               	rrcf	??___fldiv^(0+1280),f,c
  2112   002ABC  C50B  F503         	movff	??___fldiv,___fldiv@b
  2113   002AC0  C50C  F504         	movff	??___fldiv+1,___fldiv@b+1
  2114   002AC4  C50D  F505         	movff	??___fldiv+2,___fldiv@b+2
  2115   002AC8  C50E  F506         	movff	??___fldiv+3,___fldiv@b+3
  2116   002ACC  4A14               	infsnz	___fldiv@new_exp^(0+1280),f,c
  2117   002ACE  2A15               	incf	(___fldiv@new_exp+1)^(0+1280),f,c
  2118   002AD0                     l1908:
  2119   002AD0  BE15               	btfsc	(___fldiv@new_exp+1)^(0+1280),7,c
  2120   002AD2  D010               	goto	l1912
  2121   002AD4  5015               	movf	(___fldiv@new_exp+1)^(0+1280),w,c
  2122   002AD6  E103               	bnz	u930
  2123   002AD8  2814               	incf	___fldiv@new_exp^(0+1280),w,c
  2124   002ADA  A0D8               	btfss	status,0,c
  2125   002ADC  D00B               	goto	l1912
  2126   002ADE                     u930:
  2127   002ADE  0E00               	movlw	0
  2128   002AE0  6E15               	movwf	(___fldiv@new_exp+1)^(0+1280),c
  2129   002AE2  6814               	setf	___fldiv@new_exp^(0+1280),c
  2130   002AE4  0E00               	movlw	0
  2131   002AE6  6E03               	movwf	___fldiv@b^(0+1280),c
  2132   002AE8  0E00               	movlw	0
  2133   002AEA  6E04               	movwf	(___fldiv@b+1)^(0+1280),c
  2134   002AEC  0E00               	movlw	0
  2135   002AEE  6E05               	movwf	(___fldiv@b+2)^(0+1280),c
  2136   002AF0  0E00               	movlw	0
  2137   002AF2  6E06               	movwf	(___fldiv@b+3)^(0+1280),c
  2138   002AF4                     l1912:
  2139   002AF4  BE15               	btfsc	(___fldiv@new_exp+1)^(0+1280),7,c
  2140   002AF6  D005               	goto	u940
  2141   002AF8  5015               	movf	(___fldiv@new_exp+1)^(0+1280),w,c
  2142   002AFA  E111               	bnz	l1916
  2143   002AFC  0414               	decf	___fldiv@new_exp^(0+1280),w,c
  2144   002AFE  B0D8               	btfsc	status,0,c
  2145   002B00  D00E               	goto	l1916
  2146   002B02                     u940:
  2147   002B02  0E00               	movlw	0
  2148   002B04  6E15               	movwf	(___fldiv@new_exp+1)^(0+1280),c
  2149   002B06  0E00               	movlw	0
  2150   002B08  6E14               	movwf	___fldiv@new_exp^(0+1280),c
  2151   002B0A  0E00               	movlw	0
  2152   002B0C  6E03               	movwf	___fldiv@b^(0+1280),c
  2153   002B0E  0E00               	movlw	0
  2154   002B10  6E04               	movwf	(___fldiv@b+1)^(0+1280),c
  2155   002B12  0E00               	movlw	0
  2156   002B14  6E05               	movwf	(___fldiv@b+2)^(0+1280),c
  2157   002B16  0E00               	movlw	0
  2158   002B18  6E06               	movwf	(___fldiv@b+3)^(0+1280),c
  2159   002B1A  0E00               	movlw	0
  2160   002B1C  6E13               	movwf	___fldiv@sign^(0+1280),c
  2161   002B1E                     l1916:
  2162   002B1E  C514  F51A         	movff	___fldiv@new_exp,___fldiv@bexp
  2163   002B22  A01A               	btfss	___fldiv@bexp^(0+1280),0,c
  2164   002B24  D002               	goto	l1922
  2165   002B26  8E05               	bsf	(___fldiv@b+2)^(0+1280),7,c
  2166   002B28  D001               	goto	l1924
  2167   002B2A                     l1922:
  2168   002B2A  9E05               	bcf	(___fldiv@b+2)^(0+1280),7,c
  2169   002B2C                     l1924:
  2170   002B2C  90D8               	bcf	status,0,c
  2171   002B2E  301A               	rrcf	___fldiv@bexp^(0+1280),w,c
  2172   002B30  6E06               	movwf	(___fldiv@b+3)^(0+1280),c
  2173   002B32  D70E               	goto	l1838
  2174   002B34                     __end_of___fldiv:
  2175                           	callstack 0
  2176                           
  2177 ;; *************** function _LCD_ESCRIBE_VAR_INT *****************
  2178 ;; Defined at:
  2179 ;;		line 225 in file "LCD.c"
  2180 ;; Parameters:    Size  Location     Type
  2181 ;;  numero          2   14[COMRAM] unsigned int 
  2182 ;;  n_digitos       1   16[COMRAM] unsigned char 
  2183 ;;  punto           1   17[COMRAM] unsigned char 
  2184 ;; Auto vars:     Size  Location     Type
  2185 ;;  unidad          1   24[COMRAM] unsigned char 
  2186 ;;  decena          1   23[COMRAM] unsigned char 
  2187 ;;  centena         1   22[COMRAM] unsigned char 
  2188 ;;  millar          1   21[COMRAM] unsigned char 
  2189 ;;  d_millar        1   20[COMRAM] unsigned char 
  2190 ;; Return value:  Size  Location     Type
  2191 ;;                  1    wreg      void 
  2192 ;; Registers used:
  2193 ;;		wreg, status,2, status,0, cstack
  2194 ;; Tracked objects:
  2195 ;;		On entry : 0/0
  2196 ;;		On exit  : 0/0
  2197 ;;		Unchanged: 0/0
  2198 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2199 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2200 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2201 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2202 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2203 ;;Total ram usage:       11 bytes
  2204 ;; Hardware stack levels used: 1
  2205 ;; Hardware stack levels required when called: 3
  2206 ;; This function calls:
  2207 ;;		_ENVIA_CHAR
  2208 ;;		___lwdiv
  2209 ;;		___lwmod
  2210 ;; This function is called by:
  2211 ;;		_main
  2212 ;; This function uses a non-reentrant model
  2213 ;;
  2214                           
  2215                           	psect	text15
  2216   00252A                     __ptext15:
  2217                           	callstack 0
  2218   00252A                     _LCD_ESCRIBE_VAR_INT:
  2219                           	callstack 123
  2220                           
  2221                           ;LCD.c: 226:     unsigned char d_millar, millar, centena, decena, unidad;;LCD.c: 227:   
      +                            d_millar = numero / 10000;
  2222                           
  2223                           ;incstack = 0
  2224   00252A  C50F  F508         	movff	LCD_ESCRIBE_VAR_INT@numero,___lwdiv@dividend
  2225   00252E  C510  F509         	movff	LCD_ESCRIBE_VAR_INT@numero+1,___lwdiv@dividend+1
  2226   002532  0E27               	movlw	39
  2227   002534  6E0B               	movwf	(___lwdiv@divisor+1)^(0+1280),c
  2228   002536  0E10               	movlw	16
  2229   002538  6E0A               	movwf	___lwdiv@divisor^(0+1280),c
  2230   00253A  ECA3  F017         	call	___lwdiv	;wreg free
  2231   00253E  5008               	movf	?___lwdiv^(0+1280),w,c
  2232   002540  6E15               	movwf	LCD_ESCRIBE_VAR_INT@d_millar^(0+1280),c
  2233                           
  2234                           ;LCD.c: 228:     millar = (numero % 10000) / 1000;
  2235   002542  0E27               	movlw	39
  2236   002544  6E06               	movwf	(___lwmod@divisor+1)^(0+1280),c
  2237   002546  0E10               	movlw	16
  2238   002548  6E05               	movwf	___lwmod@divisor^(0+1280),c
  2239   00254A  C50F  F503         	movff	LCD_ESCRIBE_VAR_INT@numero,___lwmod@dividend
  2240   00254E  C510  F504         	movff	LCD_ESCRIBE_VAR_INT@numero+1,___lwmod@dividend+1
  2241   002552  EC12  F018         	call	___lwmod	;wreg free
  2242   002556  C503  F508         	movff	?___lwmod,___lwdiv@dividend
  2243   00255A  C504  F509         	movff	?___lwmod+1,___lwdiv@dividend+1
  2244   00255E  0E03               	movlw	3
  2245   002560  6E0B               	movwf	(___lwdiv@divisor+1)^(0+1280),c
  2246   002562  0EE8               	movlw	232
  2247   002564  6E0A               	movwf	___lwdiv@divisor^(0+1280),c
  2248   002566  ECA3  F017         	call	___lwdiv	;wreg free
  2249   00256A  5008               	movf	?___lwdiv^(0+1280),w,c
  2250   00256C  6E16               	movwf	LCD_ESCRIBE_VAR_INT@millar^(0+1280),c
  2251                           
  2252                           ;LCD.c: 229:     centena = (numero % 1000) / 100;
  2253   00256E  0E03               	movlw	3
  2254   002570  6E06               	movwf	(___lwmod@divisor+1)^(0+1280),c
  2255   002572  0EE8               	movlw	232
  2256   002574  6E05               	movwf	___lwmod@divisor^(0+1280),c
  2257   002576  C50F  F503         	movff	LCD_ESCRIBE_VAR_INT@numero,___lwmod@dividend
  2258   00257A  C510  F504         	movff	LCD_ESCRIBE_VAR_INT@numero+1,___lwmod@dividend+1
  2259   00257E  EC12  F018         	call	___lwmod	;wreg free
  2260   002582  C503  F508         	movff	?___lwmod,___lwdiv@dividend
  2261   002586  C504  F509         	movff	?___lwmod+1,___lwdiv@dividend+1
  2262   00258A  0E00               	movlw	0
  2263   00258C  6E0B               	movwf	(___lwdiv@divisor+1)^(0+1280),c
  2264   00258E  0E64               	movlw	100
  2265   002590  6E0A               	movwf	___lwdiv@divisor^(0+1280),c
  2266   002592  ECA3  F017         	call	___lwdiv	;wreg free
  2267   002596  5008               	movf	?___lwdiv^(0+1280),w,c
  2268   002598  6E17               	movwf	LCD_ESCRIBE_VAR_INT@centena^(0+1280),c
  2269                           
  2270                           ;LCD.c: 230:     decena = (numero % 100) / 10;
  2271   00259A  0E00               	movlw	0
  2272   00259C  6E06               	movwf	(___lwmod@divisor+1)^(0+1280),c
  2273   00259E  0E64               	movlw	100
  2274   0025A0  6E05               	movwf	___lwmod@divisor^(0+1280),c
  2275   0025A2  C50F  F503         	movff	LCD_ESCRIBE_VAR_INT@numero,___lwmod@dividend
  2276   0025A6  C510  F504         	movff	LCD_ESCRIBE_VAR_INT@numero+1,___lwmod@dividend+1
  2277   0025AA  EC12  F018         	call	___lwmod	;wreg free
  2278   0025AE  C503  F508         	movff	?___lwmod,___lwdiv@dividend
  2279   0025B2  C504  F509         	movff	?___lwmod+1,___lwdiv@dividend+1
  2280   0025B6  0E00               	movlw	0
  2281   0025B8  6E0B               	movwf	(___lwdiv@divisor+1)^(0+1280),c
  2282   0025BA  0E0A               	movlw	10
  2283   0025BC  6E0A               	movwf	___lwdiv@divisor^(0+1280),c
  2284   0025BE  ECA3  F017         	call	___lwdiv	;wreg free
  2285   0025C2  5008               	movf	?___lwdiv^(0+1280),w,c
  2286   0025C4  6E18               	movwf	LCD_ESCRIBE_VAR_INT@decena^(0+1280),c
  2287                           
  2288                           ;LCD.c: 231:     unidad = numero % 10;
  2289   0025C6  C50F  F503         	movff	LCD_ESCRIBE_VAR_INT@numero,___lwmod@dividend
  2290   0025CA  C510  F504         	movff	LCD_ESCRIBE_VAR_INT@numero+1,___lwmod@dividend+1
  2291   0025CE  0E00               	movlw	0
  2292   0025D0  6E06               	movwf	(___lwmod@divisor+1)^(0+1280),c
  2293   0025D2  0E0A               	movlw	10
  2294   0025D4  6E05               	movwf	___lwmod@divisor^(0+1280),c
  2295   0025D6  EC12  F018         	call	___lwmod	;wreg free
  2296   0025DA  5003               	movf	?___lwmod^(0+1280),w,c
  2297   0025DC  6E19               	movwf	LCD_ESCRIBE_VAR_INT@unidad^(0+1280),c
  2298                           
  2299                           ;LCD.c: 232:     switch(n_digitos){
  2300   0025DE  D14E               	goto	l1764
  2301   0025E0                     l1716:
  2302                           
  2303                           ;LCD.c: 234:             ENVIA_CHAR(unidad+0x30);
  2304   0025E0  5019               	movf	LCD_ESCRIBE_VAR_INT@unidad^(0+1280),w,c
  2305   0025E2  0F30               	addlw	48
  2306   0025E4  ECA4  F018         	call	_ENVIA_CHAR
  2307                           
  2308                           ;LCD.c: 235:             break;
  2309   0025E8  0012               	return	
  2310   0025EA                     l1718:
  2311                           
  2312                           ;LCD.c: 237:             if(punto == 0){
  2313   0025EA  5012               	movf	LCD_ESCRIBE_VAR_INT@punto^(0+1280),w,c
  2314   0025EC  A4D8               	btfss	status,2,c
  2315   0025EE  D009               	goto	l1722
  2316                           
  2317                           ;LCD.c: 238:                 ENVIA_CHAR(decena+0x30);
  2318   0025F0  5018               	movf	LCD_ESCRIBE_VAR_INT@decena^(0+1280),w,c
  2319   0025F2  0F30               	addlw	48
  2320   0025F4  ECA4  F018         	call	_ENVIA_CHAR
  2321                           
  2322                           ;LCD.c: 239:                 ENVIA_CHAR(unidad+0x30);
  2323   0025F8  5019               	movf	LCD_ESCRIBE_VAR_INT@unidad^(0+1280),w,c
  2324   0025FA  0F30               	addlw	48
  2325   0025FC  ECA4  F018         	call	_ENVIA_CHAR
  2326                           
  2327                           ;LCD.c: 240:             }
  2328   002600  0012               	return	
  2329   002602                     l1722:
  2330   002602  0412               	decf	LCD_ESCRIBE_VAR_INT@punto^(0+1280),w,c
  2331   002604  A4D8               	btfss	status,2,c
  2332   002606  0012               	return	
  2333                           
  2334                           ;LCD.c: 242:                 ENVIA_CHAR(decena+0x30);
  2335   002608  5018               	movf	LCD_ESCRIBE_VAR_INT@decena^(0+1280),w,c
  2336   00260A  0F30               	addlw	48
  2337   00260C  ECA4  F018         	call	_ENVIA_CHAR
  2338                           
  2339                           ;LCD.c: 243:                 ENVIA_CHAR('.');
  2340   002610  0E2E               	movlw	46
  2341   002612  ECA4  F018         	call	_ENVIA_CHAR
  2342                           
  2343                           ;LCD.c: 244:                 ENVIA_CHAR(unidad+0x30);
  2344   002616  5019               	movf	LCD_ESCRIBE_VAR_INT@unidad^(0+1280),w,c
  2345   002618  0F30               	addlw	48
  2346   00261A  ECA4  F018         	call	_ENVIA_CHAR
  2347   00261E  0012               	return	
  2348   002620                     l1726:
  2349                           
  2350                           ;LCD.c: 250:                     ENVIA_CHAR(centena+0x30);
  2351   002620  5017               	movf	LCD_ESCRIBE_VAR_INT@centena^(0+1280),w,c
  2352   002622  0F30               	addlw	48
  2353   002624  ECA4  F018         	call	_ENVIA_CHAR
  2354                           
  2355                           ;LCD.c: 251:                     ENVIA_CHAR(decena+0x30);
  2356   002628  5018               	movf	LCD_ESCRIBE_VAR_INT@decena^(0+1280),w,c
  2357   00262A  0F30               	addlw	48
  2358   00262C  ECA4  F018         	call	_ENVIA_CHAR
  2359                           
  2360                           ;LCD.c: 252:                     ENVIA_CHAR(unidad+0x30);
  2361   002630  5019               	movf	LCD_ESCRIBE_VAR_INT@unidad^(0+1280),w,c
  2362   002632  0F30               	addlw	48
  2363   002634  ECA4  F018         	call	_ENVIA_CHAR
  2364                           
  2365                           ;LCD.c: 253:                     break;
  2366   002638  0012               	return	
  2367   00263A                     l1728:
  2368                           
  2369                           ;LCD.c: 255:                     ENVIA_CHAR(centena+0x30);
  2370   00263A  5017               	movf	LCD_ESCRIBE_VAR_INT@centena^(0+1280),w,c
  2371   00263C  0F30               	addlw	48
  2372   00263E  ECA4  F018         	call	_ENVIA_CHAR
  2373                           
  2374                           ;LCD.c: 256:                     ENVIA_CHAR(decena+0x30);
  2375   002642  5018               	movf	LCD_ESCRIBE_VAR_INT@decena^(0+1280),w,c
  2376   002644  0F30               	addlw	48
  2377   002646  ECA4  F018         	call	_ENVIA_CHAR
  2378                           
  2379                           ;LCD.c: 257:                     ENVIA_CHAR('.');
  2380   00264A  0E2E               	movlw	46
  2381   00264C  ECA4  F018         	call	_ENVIA_CHAR
  2382                           
  2383                           ;LCD.c: 258:                     ENVIA_CHAR(unidad+0x30);
  2384   002650  5019               	movf	LCD_ESCRIBE_VAR_INT@unidad^(0+1280),w,c
  2385   002652  0F30               	addlw	48
  2386   002654  ECA4  F018         	call	_ENVIA_CHAR
  2387                           
  2388                           ;LCD.c: 259:                     break;
  2389   002658  0012               	return	
  2390   00265A                     l1730:
  2391                           
  2392                           ;LCD.c: 261:                     ENVIA_CHAR(centena+0x30);
  2393   00265A  5017               	movf	LCD_ESCRIBE_VAR_INT@centena^(0+1280),w,c
  2394   00265C  0F30               	addlw	48
  2395   00265E  ECA4  F018         	call	_ENVIA_CHAR
  2396                           
  2397                           ;LCD.c: 262:                     ENVIA_CHAR('.');
  2398   002662  0E2E               	movlw	46
  2399   002664  ECA4  F018         	call	_ENVIA_CHAR
  2400                           
  2401                           ;LCD.c: 263:                     ENVIA_CHAR(decena+0x30);
  2402   002668  5018               	movf	LCD_ESCRIBE_VAR_INT@decena^(0+1280),w,c
  2403   00266A  0F30               	addlw	48
  2404   00266C  ECA4  F018         	call	_ENVIA_CHAR
  2405                           
  2406                           ;LCD.c: 264:                     ENVIA_CHAR(unidad+0x30);
  2407   002670  5019               	movf	LCD_ESCRIBE_VAR_INT@unidad^(0+1280),w,c
  2408   002672  0F30               	addlw	48
  2409   002674  ECA4  F018         	call	_ENVIA_CHAR
  2410                           
  2411                           ;LCD.c: 265:                     break;
  2412   002678  0012               	return	
  2413   00267A                     l1734:
  2414   00267A  5012               	movf	LCD_ESCRIBE_VAR_INT@punto^(0+1280),w,c
  2415   00267C  6E13               	movwf	??_LCD_ESCRIBE_VAR_INT^(0+1280),c
  2416   00267E  6A14               	clrf	(??_LCD_ESCRIBE_VAR_INT+1)^(0+1280),c
  2417                           
  2418                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2419                           ; Switch size 1, requested type "simple"
  2420                           ; Number of cases is 1, Range of values is 0 to 0
  2421                           ; switch strategies available:
  2422                           ; Name         Instructions Cycles
  2423                           ; simple_byte            4     3 (average)
  2424                           ;	Chosen strategy is simple_byte
  2425   002680  5014               	movf	(??_LCD_ESCRIBE_VAR_INT+1)^(0+1280),w,c
  2426   002682  0A00               	xorlw	0	; case 0
  2427   002684  A4D8               	btfss	status,2,c
  2428   002686  0012               	return	
  2429                           
  2430                           ; Switch size 1, requested type "simple"
  2431                           ; Number of cases is 3, Range of values is 0 to 2
  2432                           ; switch strategies available:
  2433                           ; Name         Instructions Cycles
  2434                           ; simple_byte           10     6 (average)
  2435                           ;	Chosen strategy is simple_byte
  2436   002688  5013               	movf	??_LCD_ESCRIBE_VAR_INT^(0+1280),w,c
  2437   00268A  0A00               	xorlw	0	; case 0
  2438   00268C  B4D8               	btfsc	status,2,c
  2439   00268E  D7C8               	goto	l1726
  2440   002690  0A01               	xorlw	1	; case 1
  2441   002692  B4D8               	btfsc	status,2,c
  2442   002694  D7D2               	goto	l1728
  2443   002696  0A03               	xorlw	3	; case 2
  2444   002698  A4D8               	btfss	status,2,c
  2445   00269A  0012               	return	
  2446   00269C  D7DE               	goto	l1730
  2447   00269E                     l1736:
  2448                           
  2449                           ;LCD.c: 271:                     ENVIA_CHAR(millar+0x30);
  2450   00269E  5016               	movf	LCD_ESCRIBE_VAR_INT@millar^(0+1280),w,c
  2451   0026A0  0F30               	addlw	48
  2452   0026A2  ECA4  F018         	call	_ENVIA_CHAR
  2453                           
  2454                           ;LCD.c: 272:                     ENVIA_CHAR(centena+0x30);
  2455   0026A6  5017               	movf	LCD_ESCRIBE_VAR_INT@centena^(0+1280),w,c
  2456   0026A8  0F30               	addlw	48
  2457   0026AA  ECA4  F018         	call	_ENVIA_CHAR
  2458                           
  2459                           ;LCD.c: 273:                     ENVIA_CHAR(decena+0x30);
  2460   0026AE  5018               	movf	LCD_ESCRIBE_VAR_INT@decena^(0+1280),w,c
  2461   0026B0  0F30               	addlw	48
  2462   0026B2  ECA4  F018         	call	_ENVIA_CHAR
  2463                           
  2464                           ;LCD.c: 274:                     ENVIA_CHAR(unidad+0x30);
  2465   0026B6  5019               	movf	LCD_ESCRIBE_VAR_INT@unidad^(0+1280),w,c
  2466   0026B8  0F30               	addlw	48
  2467   0026BA  ECA4  F018         	call	_ENVIA_CHAR
  2468                           
  2469                           ;LCD.c: 275:                     break;
  2470   0026BE  0012               	return	
  2471   0026C0                     l1738:
  2472                           
  2473                           ;LCD.c: 277:                     ENVIA_CHAR(millar+0x30);
  2474   0026C0  5016               	movf	LCD_ESCRIBE_VAR_INT@millar^(0+1280),w,c
  2475   0026C2  0F30               	addlw	48
  2476   0026C4  ECA4  F018         	call	_ENVIA_CHAR
  2477                           
  2478                           ;LCD.c: 278:                     ENVIA_CHAR(centena+0x30);
  2479   0026C8  5017               	movf	LCD_ESCRIBE_VAR_INT@centena^(0+1280),w,c
  2480   0026CA  0F30               	addlw	48
  2481   0026CC  ECA4  F018         	call	_ENVIA_CHAR
  2482                           
  2483                           ;LCD.c: 279:                     ENVIA_CHAR(decena+0x30);
  2484   0026D0  5018               	movf	LCD_ESCRIBE_VAR_INT@decena^(0+1280),w,c
  2485   0026D2  0F30               	addlw	48
  2486   0026D4  ECA4  F018         	call	_ENVIA_CHAR
  2487                           
  2488                           ;LCD.c: 280:                     ENVIA_CHAR('.');
  2489   0026D8  0E2E               	movlw	46
  2490   0026DA  ECA4  F018         	call	_ENVIA_CHAR
  2491                           
  2492                           ;LCD.c: 281:                     ENVIA_CHAR(unidad+0x30);
  2493   0026DE  5019               	movf	LCD_ESCRIBE_VAR_INT@unidad^(0+1280),w,c
  2494   0026E0  0F30               	addlw	48
  2495   0026E2  ECA4  F018         	call	_ENVIA_CHAR
  2496                           
  2497                           ;LCD.c: 282:                     break;
  2498   0026E6  0012               	return	
  2499   0026E8                     l1740:
  2500                           
  2501                           ;LCD.c: 284:                     ENVIA_CHAR(millar+0x30);
  2502   0026E8  5016               	movf	LCD_ESCRIBE_VAR_INT@millar^(0+1280),w,c
  2503   0026EA  0F30               	addlw	48
  2504   0026EC  ECA4  F018         	call	_ENVIA_CHAR
  2505                           
  2506                           ;LCD.c: 285:                     ENVIA_CHAR(centena+0x30);
  2507   0026F0  5017               	movf	LCD_ESCRIBE_VAR_INT@centena^(0+1280),w,c
  2508   0026F2  0F30               	addlw	48
  2509   0026F4  ECA4  F018         	call	_ENVIA_CHAR
  2510                           
  2511                           ;LCD.c: 286:                     ENVIA_CHAR('.');
  2512   0026F8  0E2E               	movlw	46
  2513   0026FA  ECA4  F018         	call	_ENVIA_CHAR
  2514                           
  2515                           ;LCD.c: 287:                     ENVIA_CHAR(decena+0x30);
  2516   0026FE  5018               	movf	LCD_ESCRIBE_VAR_INT@decena^(0+1280),w,c
  2517   002700  0F30               	addlw	48
  2518   002702  ECA4  F018         	call	_ENVIA_CHAR
  2519                           
  2520                           ;LCD.c: 288:                     ENVIA_CHAR(unidad+0x30);
  2521   002706  5019               	movf	LCD_ESCRIBE_VAR_INT@unidad^(0+1280),w,c
  2522   002708  0F30               	addlw	48
  2523   00270A  ECA4  F018         	call	_ENVIA_CHAR
  2524                           
  2525                           ;LCD.c: 289:                     break;
  2526   00270E  0012               	return	
  2527   002710                     l1742:
  2528                           
  2529                           ;LCD.c: 291:                     ENVIA_CHAR(millar+0x30);
  2530   002710  5016               	movf	LCD_ESCRIBE_VAR_INT@millar^(0+1280),w,c
  2531   002712  0F30               	addlw	48
  2532   002714  ECA4  F018         	call	_ENVIA_CHAR
  2533                           
  2534                           ;LCD.c: 292:                     ENVIA_CHAR('.');
  2535   002718  0E2E               	movlw	46
  2536   00271A  ECA4  F018         	call	_ENVIA_CHAR
  2537                           
  2538                           ;LCD.c: 293:                     ENVIA_CHAR(centena+0x30);
  2539   00271E  5017               	movf	LCD_ESCRIBE_VAR_INT@centena^(0+1280),w,c
  2540   002720  0F30               	addlw	48
  2541   002722  ECA4  F018         	call	_ENVIA_CHAR
  2542                           
  2543                           ;LCD.c: 294:                     ENVIA_CHAR(decena+0x30);
  2544   002726  5018               	movf	LCD_ESCRIBE_VAR_INT@decena^(0+1280),w,c
  2545   002728  0F30               	addlw	48
  2546   00272A  ECA4  F018         	call	_ENVIA_CHAR
  2547                           
  2548                           ;LCD.c: 295:                     ENVIA_CHAR(unidad+0x30);
  2549   00272E  5019               	movf	LCD_ESCRIBE_VAR_INT@unidad^(0+1280),w,c
  2550   002730  0F30               	addlw	48
  2551   002732  ECA4  F018         	call	_ENVIA_CHAR
  2552                           
  2553                           ;LCD.c: 296:                     break;
  2554   002736  0012               	return	
  2555   002738                     l1746:
  2556   002738  5012               	movf	LCD_ESCRIBE_VAR_INT@punto^(0+1280),w,c
  2557   00273A  6E13               	movwf	??_LCD_ESCRIBE_VAR_INT^(0+1280),c
  2558   00273C  6A14               	clrf	(??_LCD_ESCRIBE_VAR_INT+1)^(0+1280),c
  2559                           
  2560                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2561                           ; Switch size 1, requested type "simple"
  2562                           ; Number of cases is 1, Range of values is 0 to 0
  2563                           ; switch strategies available:
  2564                           ; Name         Instructions Cycles
  2565                           ; simple_byte            4     3 (average)
  2566                           ;	Chosen strategy is simple_byte
  2567   00273E  5014               	movf	(??_LCD_ESCRIBE_VAR_INT+1)^(0+1280),w,c
  2568   002740  0A00               	xorlw	0	; case 0
  2569   002742  A4D8               	btfss	status,2,c
  2570   002744  0012               	return	
  2571                           
  2572                           ; Switch size 1, requested type "simple"
  2573                           ; Number of cases is 4, Range of values is 0 to 3
  2574                           ; switch strategies available:
  2575                           ; Name         Instructions Cycles
  2576                           ; simple_byte           13     7 (average)
  2577                           ;	Chosen strategy is simple_byte
  2578   002746  5013               	movf	??_LCD_ESCRIBE_VAR_INT^(0+1280),w,c
  2579   002748  0A00               	xorlw	0	; case 0
  2580   00274A  B4D8               	btfsc	status,2,c
  2581   00274C  D7A8               	goto	l1736
  2582   00274E  0A01               	xorlw	1	; case 1
  2583   002750  B4D8               	btfsc	status,2,c
  2584   002752  D7B6               	goto	l1738
  2585   002754  0A03               	xorlw	3	; case 2
  2586   002756  B4D8               	btfsc	status,2,c
  2587   002758  D7C7               	goto	l1740
  2588   00275A  0A01               	xorlw	1	; case 3
  2589   00275C  A4D8               	btfss	status,2,c
  2590   00275E  0012               	return	
  2591   002760  D7D7               	goto	l1742
  2592   002762                     l1748:
  2593                           
  2594                           ;LCD.c: 302:                     ENVIA_CHAR(d_millar+0x30);
  2595   002762  5015               	movf	LCD_ESCRIBE_VAR_INT@d_millar^(0+1280),w,c
  2596   002764  0F30               	addlw	48
  2597   002766  ECA4  F018         	call	_ENVIA_CHAR
  2598                           
  2599                           ;LCD.c: 303:                     ENVIA_CHAR(millar+0x30);
  2600   00276A  5016               	movf	LCD_ESCRIBE_VAR_INT@millar^(0+1280),w,c
  2601   00276C  0F30               	addlw	48
  2602   00276E  ECA4  F018         	call	_ENVIA_CHAR
  2603                           
  2604                           ;LCD.c: 304:                     ENVIA_CHAR(centena+0x30);
  2605   002772  5017               	movf	LCD_ESCRIBE_VAR_INT@centena^(0+1280),w,c
  2606   002774  0F30               	addlw	48
  2607   002776  ECA4  F018         	call	_ENVIA_CHAR
  2608                           
  2609                           ;LCD.c: 305:                     ENVIA_CHAR(decena+0x30);
  2610   00277A  5018               	movf	LCD_ESCRIBE_VAR_INT@decena^(0+1280),w,c
  2611   00277C  0F30               	addlw	48
  2612   00277E  ECA4  F018         	call	_ENVIA_CHAR
  2613                           
  2614                           ;LCD.c: 306:                     ENVIA_CHAR(unidad+0x30);
  2615   002782  5019               	movf	LCD_ESCRIBE_VAR_INT@unidad^(0+1280),w,c
  2616   002784  0F30               	addlw	48
  2617   002786  ECA4  F018         	call	_ENVIA_CHAR
  2618                           
  2619                           ;LCD.c: 307:                     break;
  2620   00278A  0012               	return	
  2621   00278C                     l1750:
  2622                           
  2623                           ;LCD.c: 309:                     ENVIA_CHAR(d_millar+0x30);
  2624   00278C  5015               	movf	LCD_ESCRIBE_VAR_INT@d_millar^(0+1280),w,c
  2625   00278E  0F30               	addlw	48
  2626   002790  ECA4  F018         	call	_ENVIA_CHAR
  2627                           
  2628                           ;LCD.c: 310:                     ENVIA_CHAR(millar+0x30);
  2629   002794  5016               	movf	LCD_ESCRIBE_VAR_INT@millar^(0+1280),w,c
  2630   002796  0F30               	addlw	48
  2631   002798  ECA4  F018         	call	_ENVIA_CHAR
  2632                           
  2633                           ;LCD.c: 311:                     ENVIA_CHAR(centena+0x30);
  2634   00279C  5017               	movf	LCD_ESCRIBE_VAR_INT@centena^(0+1280),w,c
  2635   00279E  0F30               	addlw	48
  2636   0027A0  ECA4  F018         	call	_ENVIA_CHAR
  2637                           
  2638                           ;LCD.c: 312:                     ENVIA_CHAR(decena+0x30);
  2639   0027A4  5018               	movf	LCD_ESCRIBE_VAR_INT@decena^(0+1280),w,c
  2640   0027A6  0F30               	addlw	48
  2641   0027A8  ECA4  F018         	call	_ENVIA_CHAR
  2642                           
  2643                           ;LCD.c: 313:                     ENVIA_CHAR('.');
  2644   0027AC  0E2E               	movlw	46
  2645   0027AE  ECA4  F018         	call	_ENVIA_CHAR
  2646                           
  2647                           ;LCD.c: 314:                     ENVIA_CHAR(unidad+0x30);
  2648   0027B2  5019               	movf	LCD_ESCRIBE_VAR_INT@unidad^(0+1280),w,c
  2649   0027B4  0F30               	addlw	48
  2650   0027B6  ECA4  F018         	call	_ENVIA_CHAR
  2651                           
  2652                           ;LCD.c: 315:                     break;
  2653   0027BA  0012               	return	
  2654   0027BC                     l1752:
  2655                           
  2656                           ;LCD.c: 317:                     ENVIA_CHAR(d_millar+0x30);
  2657   0027BC  5015               	movf	LCD_ESCRIBE_VAR_INT@d_millar^(0+1280),w,c
  2658   0027BE  0F30               	addlw	48
  2659   0027C0  ECA4  F018         	call	_ENVIA_CHAR
  2660                           
  2661                           ;LCD.c: 318:                     ENVIA_CHAR(millar+0x30);
  2662   0027C4  5016               	movf	LCD_ESCRIBE_VAR_INT@millar^(0+1280),w,c
  2663   0027C6  0F30               	addlw	48
  2664   0027C8  ECA4  F018         	call	_ENVIA_CHAR
  2665                           
  2666                           ;LCD.c: 319:                     ENVIA_CHAR(centena+0x30);
  2667   0027CC  5017               	movf	LCD_ESCRIBE_VAR_INT@centena^(0+1280),w,c
  2668   0027CE  0F30               	addlw	48
  2669   0027D0  ECA4  F018         	call	_ENVIA_CHAR
  2670                           
  2671                           ;LCD.c: 320:                     ENVIA_CHAR('.');
  2672   0027D4  0E2E               	movlw	46
  2673   0027D6  ECA4  F018         	call	_ENVIA_CHAR
  2674                           
  2675                           ;LCD.c: 321:                     ENVIA_CHAR(decena+0x30);
  2676   0027DA  5018               	movf	LCD_ESCRIBE_VAR_INT@decena^(0+1280),w,c
  2677   0027DC  0F30               	addlw	48
  2678   0027DE  ECA4  F018         	call	_ENVIA_CHAR
  2679                           
  2680                           ;LCD.c: 322:                     ENVIA_CHAR(unidad+0x30);
  2681   0027E2  5019               	movf	LCD_ESCRIBE_VAR_INT@unidad^(0+1280),w,c
  2682   0027E4  0F30               	addlw	48
  2683   0027E6  ECA4  F018         	call	_ENVIA_CHAR
  2684                           
  2685                           ;LCD.c: 323:                     break;
  2686   0027EA  0012               	return	
  2687   0027EC                     l1754:
  2688                           
  2689                           ;LCD.c: 325:                     ENVIA_CHAR(d_millar+0x30);
  2690   0027EC  5015               	movf	LCD_ESCRIBE_VAR_INT@d_millar^(0+1280),w,c
  2691   0027EE  0F30               	addlw	48
  2692   0027F0  ECA4  F018         	call	_ENVIA_CHAR
  2693                           
  2694                           ;LCD.c: 326:                     ENVIA_CHAR(millar+0x30);
  2695   0027F4  5016               	movf	LCD_ESCRIBE_VAR_INT@millar^(0+1280),w,c
  2696   0027F6  0F30               	addlw	48
  2697   0027F8  ECA4  F018         	call	_ENVIA_CHAR
  2698                           
  2699                           ;LCD.c: 327:                     ENVIA_CHAR('.');
  2700   0027FC  0E2E               	movlw	46
  2701   0027FE  ECA4  F018         	call	_ENVIA_CHAR
  2702                           
  2703                           ;LCD.c: 328:                     ENVIA_CHAR(centena+0x30);
  2704   002802  5017               	movf	LCD_ESCRIBE_VAR_INT@centena^(0+1280),w,c
  2705   002804  0F30               	addlw	48
  2706   002806  ECA4  F018         	call	_ENVIA_CHAR
  2707                           
  2708                           ;LCD.c: 329:                     ENVIA_CHAR(decena+0x30);
  2709   00280A  5018               	movf	LCD_ESCRIBE_VAR_INT@decena^(0+1280),w,c
  2710   00280C  0F30               	addlw	48
  2711   00280E  ECA4  F018         	call	_ENVIA_CHAR
  2712                           
  2713                           ;LCD.c: 330:                     ENVIA_CHAR(unidad+0x30);
  2714   002812  5019               	movf	LCD_ESCRIBE_VAR_INT@unidad^(0+1280),w,c
  2715   002814  0F30               	addlw	48
  2716   002816  ECA4  F018         	call	_ENVIA_CHAR
  2717                           
  2718                           ;LCD.c: 331:                     break;
  2719   00281A  0012               	return	
  2720   00281C                     l1756:
  2721                           
  2722                           ;LCD.c: 333:                     ENVIA_CHAR(d_millar+0x30);
  2723   00281C  5015               	movf	LCD_ESCRIBE_VAR_INT@d_millar^(0+1280),w,c
  2724   00281E  0F30               	addlw	48
  2725   002820  ECA4  F018         	call	_ENVIA_CHAR
  2726                           
  2727                           ;LCD.c: 334:                     ENVIA_CHAR('.');
  2728   002824  0E2E               	movlw	46
  2729   002826  ECA4  F018         	call	_ENVIA_CHAR
  2730                           
  2731                           ;LCD.c: 335:                     ENVIA_CHAR(millar+0x30);
  2732   00282A  5016               	movf	LCD_ESCRIBE_VAR_INT@millar^(0+1280),w,c
  2733   00282C  0F30               	addlw	48
  2734   00282E  ECA4  F018         	call	_ENVIA_CHAR
  2735                           
  2736                           ;LCD.c: 336:                     ENVIA_CHAR(centena+0x30);
  2737   002832  5017               	movf	LCD_ESCRIBE_VAR_INT@centena^(0+1280),w,c
  2738   002834  0F30               	addlw	48
  2739   002836  ECA4  F018         	call	_ENVIA_CHAR
  2740                           
  2741                           ;LCD.c: 337:                     ENVIA_CHAR(decena+0x30);
  2742   00283A  5018               	movf	LCD_ESCRIBE_VAR_INT@decena^(0+1280),w,c
  2743   00283C  0F30               	addlw	48
  2744   00283E  ECA4  F018         	call	_ENVIA_CHAR
  2745                           
  2746                           ;LCD.c: 338:                     ENVIA_CHAR(unidad+0x30);
  2747   002842  5019               	movf	LCD_ESCRIBE_VAR_INT@unidad^(0+1280),w,c
  2748   002844  0F30               	addlw	48
  2749   002846  ECA4  F018         	call	_ENVIA_CHAR
  2750                           
  2751                           ;LCD.c: 339:                     break;
  2752   00284A  0012               	return	
  2753   00284C                     l1760:
  2754   00284C  5012               	movf	LCD_ESCRIBE_VAR_INT@punto^(0+1280),w,c
  2755   00284E  6E13               	movwf	??_LCD_ESCRIBE_VAR_INT^(0+1280),c
  2756   002850  6A14               	clrf	(??_LCD_ESCRIBE_VAR_INT+1)^(0+1280),c
  2757                           
  2758                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2759                           ; Switch size 1, requested type "simple"
  2760                           ; Number of cases is 1, Range of values is 0 to 0
  2761                           ; switch strategies available:
  2762                           ; Name         Instructions Cycles
  2763                           ; simple_byte            4     3 (average)
  2764                           ;	Chosen strategy is simple_byte
  2765   002852  5014               	movf	(??_LCD_ESCRIBE_VAR_INT+1)^(0+1280),w,c
  2766   002854  0A00               	xorlw	0	; case 0
  2767   002856  A4D8               	btfss	status,2,c
  2768   002858  0012               	return	
  2769                           
  2770                           ; Switch size 1, requested type "simple"
  2771                           ; Number of cases is 5, Range of values is 0 to 4
  2772                           ; switch strategies available:
  2773                           ; Name         Instructions Cycles
  2774                           ; simple_byte           16     9 (average)
  2775                           ;	Chosen strategy is simple_byte
  2776   00285A  5013               	movf	??_LCD_ESCRIBE_VAR_INT^(0+1280),w,c
  2777   00285C  0A00               	xorlw	0	; case 0
  2778   00285E  B4D8               	btfsc	status,2,c
  2779   002860  D780               	goto	l1748
  2780   002862  0A01               	xorlw	1	; case 1
  2781   002864  B4D8               	btfsc	status,2,c
  2782   002866  D792               	goto	l1750
  2783   002868  0A03               	xorlw	3	; case 2
  2784   00286A  B4D8               	btfsc	status,2,c
  2785   00286C  D7A7               	goto	l1752
  2786   00286E  0A01               	xorlw	1	; case 3
  2787   002870  B4D8               	btfsc	status,2,c
  2788   002872  D7BC               	goto	l1754
  2789   002874  0A07               	xorlw	7	; case 4
  2790   002876  A4D8               	btfss	status,2,c
  2791   002878  0012               	return	
  2792   00287A  D7D0               	goto	l1756
  2793   00287C                     l1764:
  2794   00287C  5011               	movf	LCD_ESCRIBE_VAR_INT@n_digitos^(0+1280),w,c
  2795   00287E  6E13               	movwf	??_LCD_ESCRIBE_VAR_INT^(0+1280),c
  2796   002880  6A14               	clrf	(??_LCD_ESCRIBE_VAR_INT+1)^(0+1280),c
  2797                           
  2798                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2799                           ; Switch size 1, requested type "simple"
  2800                           ; Number of cases is 1, Range of values is 0 to 0
  2801                           ; switch strategies available:
  2802                           ; Name         Instructions Cycles
  2803                           ; simple_byte            4     3 (average)
  2804                           ;	Chosen strategy is simple_byte
  2805   002882  5014               	movf	(??_LCD_ESCRIBE_VAR_INT+1)^(0+1280),w,c
  2806   002884  0A00               	xorlw	0	; case 0
  2807   002886  A4D8               	btfss	status,2,c
  2808   002888  0012               	return	
  2809                           
  2810                           ; Switch size 1, requested type "simple"
  2811                           ; Number of cases is 5, Range of values is 1 to 5
  2812                           ; switch strategies available:
  2813                           ; Name         Instructions Cycles
  2814                           ; simple_byte           16     9 (average)
  2815                           ;	Chosen strategy is simple_byte
  2816   00288A  5013               	movf	??_LCD_ESCRIBE_VAR_INT^(0+1280),w,c
  2817   00288C  0A01               	xorlw	1	; case 1
  2818   00288E  B4D8               	btfsc	status,2,c
  2819   002890  D6A7               	goto	l1716
  2820   002892  0A03               	xorlw	3	; case 2
  2821   002894  B4D8               	btfsc	status,2,c
  2822   002896  D6A9               	goto	l1718
  2823   002898  0A01               	xorlw	1	; case 3
  2824   00289A  B4D8               	btfsc	status,2,c
  2825   00289C  D6EE               	goto	l1734
  2826   00289E  0A07               	xorlw	7	; case 4
  2827   0028A0  B4D8               	btfsc	status,2,c
  2828   0028A2  D74A               	goto	l1746
  2829   0028A4  0A01               	xorlw	1	; case 5
  2830   0028A6  A4D8               	btfss	status,2,c
  2831   0028A8  0012               	return	
  2832   0028AA  D7D0               	goto	l1760
  2833   0028AC                     __end_of_LCD_ESCRIBE_VAR_INT:
  2834                           	callstack 0
  2835                           
  2836 ;; *************** function ___lwmod *****************
  2837 ;; Defined at:
  2838 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\lwmod.c"
  2839 ;; Parameters:    Size  Location     Type
  2840 ;;  dividend        2    2[COMRAM] unsigned int 
  2841 ;;  divisor         2    4[COMRAM] unsigned int 
  2842 ;; Auto vars:     Size  Location     Type
  2843 ;;  counter         1    6[COMRAM] unsigned char 
  2844 ;; Return value:  Size  Location     Type
  2845 ;;                  2    2[COMRAM] unsigned int 
  2846 ;; Registers used:
  2847 ;;		wreg, status,2, status,0
  2848 ;; Tracked objects:
  2849 ;;		On entry : 0/0
  2850 ;;		On exit  : 0/0
  2851 ;;		Unchanged: 0/0
  2852 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2853 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2854 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2855 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2856 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2857 ;;Total ram usage:        5 bytes
  2858 ;; Hardware stack levels used: 1
  2859 ;; Hardware stack levels required when called: 1
  2860 ;; This function calls:
  2861 ;;		Nothing
  2862 ;; This function is called by:
  2863 ;;		_LCD_ESCRIBE_VAR_INT
  2864 ;; This function uses a non-reentrant model
  2865 ;;
  2866                           
  2867                           	psect	text16
  2868   003024                     __ptext16:
  2869                           	callstack 0
  2870   003024                     ___lwmod:
  2871                           	callstack 124
  2872                           
  2873                           ;incstack = 0
  2874   003024  5005               	movf	___lwmod@divisor^(0+1280),w,c
  2875   003026  1006               	iorwf	(___lwmod@divisor+1)^(0+1280),w,c
  2876   003028  B4D8               	btfsc	status,2,c
  2877   00302A  D018               	goto	l742
  2878   00302C  0E01               	movlw	1
  2879   00302E  6E07               	movwf	___lwmod@counter^(0+1280),c
  2880   003030  D004               	goto	l1704
  2881   003032                     l1702:
  2882   003032  90D8               	bcf	status,0,c
  2883   003034  3605               	rlcf	___lwmod@divisor^(0+1280),f,c
  2884   003036  3606               	rlcf	(___lwmod@divisor+1)^(0+1280),f,c
  2885   003038  2A07               	incf	___lwmod@counter^(0+1280),f,c
  2886   00303A                     l1704:
  2887   00303A  AE06               	btfss	(___lwmod@divisor+1)^(0+1280),7,c
  2888   00303C  D7FA               	goto	l1702
  2889   00303E                     u690:
  2890   00303E  5005               	movf	___lwmod@divisor^(0+1280),w,c
  2891   003040  5C03               	subwf	___lwmod@dividend^(0+1280),w,c
  2892   003042  5006               	movf	(___lwmod@divisor+1)^(0+1280),w,c
  2893   003044  5804               	subwfb	(___lwmod@dividend+1)^(0+1280),w,c
  2894   003046  A0D8               	btfss	status,0,c
  2895   003048  D004               	goto	l1710
  2896   00304A  5005               	movf	___lwmod@divisor^(0+1280),w,c
  2897   00304C  5E03               	subwf	___lwmod@dividend^(0+1280),f,c
  2898   00304E  5006               	movf	(___lwmod@divisor+1)^(0+1280),w,c
  2899   003050  5A04               	subwfb	(___lwmod@dividend+1)^(0+1280),f,c
  2900   003052                     l1710:
  2901   003052  90D8               	bcf	status,0,c
  2902   003054  3206               	rrcf	(___lwmod@divisor+1)^(0+1280),f,c
  2903   003056  3205               	rrcf	___lwmod@divisor^(0+1280),f,c
  2904   003058  2E07               	decfsz	___lwmod@counter^(0+1280),f,c
  2905   00305A  D7F1               	goto	u690
  2906   00305C                     l742:
  2907   00305C  C503  F503         	movff	___lwmod@dividend,?___lwmod
  2908   003060  C504  F504         	movff	___lwmod@dividend+1,?___lwmod+1
  2909   003064  0012               	return		;funcret
  2910   003066                     __end_of___lwmod:
  2911                           	callstack 0
  2912                           
  2913 ;; *************** function ___lwdiv *****************
  2914 ;; Defined at:
  2915 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\lwdiv.c"
  2916 ;; Parameters:    Size  Location     Type
  2917 ;;  dividend        2    7[COMRAM] unsigned int 
  2918 ;;  divisor         2    9[COMRAM] unsigned int 
  2919 ;; Auto vars:     Size  Location     Type
  2920 ;;  quotient        2   11[COMRAM] unsigned int 
  2921 ;;  counter         1   13[COMRAM] unsigned char 
  2922 ;; Return value:  Size  Location     Type
  2923 ;;                  2    7[COMRAM] unsigned int 
  2924 ;; Registers used:
  2925 ;;		wreg, status,2, status,0
  2926 ;; Tracked objects:
  2927 ;;		On entry : 0/0
  2928 ;;		On exit  : 0/0
  2929 ;;		Unchanged: 0/0
  2930 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2931 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2932 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2933 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2934 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2935 ;;Total ram usage:        7 bytes
  2936 ;; Hardware stack levels used: 1
  2937 ;; Hardware stack levels required when called: 1
  2938 ;; This function calls:
  2939 ;;		Nothing
  2940 ;; This function is called by:
  2941 ;;		_LCD_ESCRIBE_VAR_INT
  2942 ;; This function uses a non-reentrant model
  2943 ;;
  2944                           
  2945                           	psect	text17
  2946   002F46                     __ptext17:
  2947                           	callstack 0
  2948   002F46                     ___lwdiv:
  2949                           	callstack 124
  2950                           
  2951                           ;incstack = 0
  2952   002F46  0E00               	movlw	0
  2953   002F48  6E0D               	movwf	(___lwdiv@quotient+1)^(0+1280),c
  2954   002F4A  0E00               	movlw	0
  2955   002F4C  6E0C               	movwf	___lwdiv@quotient^(0+1280),c
  2956   002F4E  500A               	movf	___lwdiv@divisor^(0+1280),w,c
  2957   002F50  100B               	iorwf	(___lwdiv@divisor+1)^(0+1280),w,c
  2958   002F52  B4D8               	btfsc	status,2,c
  2959   002F54  D01C               	goto	l732
  2960   002F56  0E01               	movlw	1
  2961   002F58  6E0E               	movwf	___lwdiv@counter^(0+1280),c
  2962   002F5A  D004               	goto	l1684
  2963   002F5C                     l1682:
  2964   002F5C  90D8               	bcf	status,0,c
  2965   002F5E  360A               	rlcf	___lwdiv@divisor^(0+1280),f,c
  2966   002F60  360B               	rlcf	(___lwdiv@divisor+1)^(0+1280),f,c
  2967   002F62  2A0E               	incf	___lwdiv@counter^(0+1280),f,c
  2968   002F64                     l1684:
  2969   002F64  AE0B               	btfss	(___lwdiv@divisor+1)^(0+1280),7,c
  2970   002F66  D7FA               	goto	l1682
  2971   002F68                     u660:
  2972   002F68  90D8               	bcf	status,0,c
  2973   002F6A  360C               	rlcf	___lwdiv@quotient^(0+1280),f,c
  2974   002F6C  360D               	rlcf	(___lwdiv@quotient+1)^(0+1280),f,c
  2975   002F6E  500A               	movf	___lwdiv@divisor^(0+1280),w,c
  2976   002F70  5C08               	subwf	___lwdiv@dividend^(0+1280),w,c
  2977   002F72  500B               	movf	(___lwdiv@divisor+1)^(0+1280),w,c
  2978   002F74  5809               	subwfb	(___lwdiv@dividend+1)^(0+1280),w,c
  2979   002F76  A0D8               	btfss	status,0,c
  2980   002F78  D005               	goto	l1694
  2981   002F7A  500A               	movf	___lwdiv@divisor^(0+1280),w,c
  2982   002F7C  5E08               	subwf	___lwdiv@dividend^(0+1280),f,c
  2983   002F7E  500B               	movf	(___lwdiv@divisor+1)^(0+1280),w,c
  2984   002F80  5A09               	subwfb	(___lwdiv@dividend+1)^(0+1280),f,c
  2985   002F82  800C               	bsf	___lwdiv@quotient^(0+1280),0,c
  2986   002F84                     l1694:
  2987   002F84  90D8               	bcf	status,0,c
  2988   002F86  320B               	rrcf	(___lwdiv@divisor+1)^(0+1280),f,c
  2989   002F88  320A               	rrcf	___lwdiv@divisor^(0+1280),f,c
  2990   002F8A  2E0E               	decfsz	___lwdiv@counter^(0+1280),f,c
  2991   002F8C  D7ED               	goto	u660
  2992   002F8E                     l732:
  2993   002F8E  C50C  F508         	movff	___lwdiv@quotient,?___lwdiv
  2994   002F92  C50D  F509         	movff	___lwdiv@quotient+1,?___lwdiv+1
  2995   002F96  0012               	return		;funcret
  2996   002F98                     __end_of___lwdiv:
  2997                           	callstack 0
  2998                           
  2999 ;; *************** function _ENVIA_CHAR *****************
  3000 ;; Defined at:
  3001 ;;		line 71 in file "LCD.c"
  3002 ;; Parameters:    Size  Location     Type
  3003 ;;  dato            1    wreg     unsigned char 
  3004 ;; Auto vars:     Size  Location     Type
  3005 ;;  dato            1    3[COMRAM] unsigned char 
  3006 ;;  aux             1    4[COMRAM] unsigned char 
  3007 ;; Return value:  Size  Location     Type
  3008 ;;                  1    wreg      void 
  3009 ;; Registers used:
  3010 ;;		wreg, status,2, status,0, cstack
  3011 ;; Tracked objects:
  3012 ;;		On entry : 0/0
  3013 ;;		On exit  : 0/0
  3014 ;;		Unchanged: 0/0
  3015 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  3016 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3017 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3018 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3019 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3020 ;;Total ram usage:        2 bytes
  3021 ;; Hardware stack levels used: 1
  3022 ;; Hardware stack levels required when called: 2
  3023 ;; This function calls:
  3024 ;;		_ENVIA_NIBBLE
  3025 ;;		_LEER_LCD
  3026 ;; This function is called by:
  3027 ;;		_ESCRIBE_MENSAJE2
  3028 ;;		_LCD_ESCRIBE_VAR_INT
  3029 ;; This function uses a non-reentrant model
  3030 ;;
  3031                           
  3032                           	psect	text18
  3033   003148                     __ptext18:
  3034                           	callstack 0
  3035   003148                     _ENVIA_CHAR:
  3036                           	callstack 122
  3037                           
  3038                           ;incstack = 0
  3039                           ;ENVIA_CHAR@dato stored from wreg
  3040   003148  6E04               	movwf	ENVIA_CHAR@dato^(0+1280),c
  3041                           
  3042                           ;LCD.c: 72:  unsigned char aux;;LCD.c: 73:  LATDbits.LATD0 = 1;
  3043   00314A  80C1               	bsf	193,0,c	;volatile
  3044                           
  3045                           ;LCD.c: 74:  LEER_LCD();
  3046   00314C  EC1D  F017         	call	_LEER_LCD	;wreg free
  3047                           
  3048                           ;LCD.c: 75:  TRISD = 0x00;
  3049   003150  0E00               	movlw	0
  3050   003152  6EC9               	movwf	201,c	;volatile
  3051                           
  3052                           ;LCD.c: 76:     _delay((unsigned long)((100)*(32000000UL/4000000.0)));
  3053   003154  0EA0               	movlw	160
  3054   003156                     u1217:
  3055   003156  D000               	nop2	
  3056   003158  2EE8               	decfsz	wreg,f,c
  3057   00315A  D7FD               	bra	u1217
  3058                           
  3059                           ;LCD.c: 77:  LATDbits.LATD1 = 0;
  3060   00315C  92C1               	bcf	193,1,c	;volatile
  3061                           
  3062                           ;LCD.c: 78:  LATDbits.LATD2 = 0;
  3063   00315E  94C1               	bcf	193,2,c	;volatile
  3064                           
  3065                           ;LCD.c: 79:  LATDbits.LATD0 = 1;
  3066   003160  80C1               	bsf	193,0,c	;volatile
  3067                           
  3068                           ;LCD.c: 80:  aux = dato & 0xF0;
  3069   003162  5004               	movf	ENVIA_CHAR@dato^(0+1280),w,c
  3070   003164  0BF0               	andlw	240
  3071   003166  6E05               	movwf	ENVIA_CHAR@aux^(0+1280),c
  3072                           
  3073                           ;LCD.c: 81:  ENVIA_NIBBLE(aux);
  3074   003168  5005               	movf	ENVIA_CHAR@aux^(0+1280),w,c
  3075   00316A  ECF2  F018         	call	_ENVIA_NIBBLE
  3076                           
  3077                           ;LCD.c: 82:  aux = dato << 4;
  3078   00316E  3804               	swapf	ENVIA_CHAR@dato^(0+1280),w,c
  3079   003170  0BF0               	andlw	240
  3080   003172  6E05               	movwf	ENVIA_CHAR@aux^(0+1280),c
  3081                           
  3082                           ;LCD.c: 83:  ENVIA_NIBBLE(aux);
  3083   003174  5005               	movf	ENVIA_CHAR@aux^(0+1280),w,c
  3084   003176  ECF2  F018         	call	_ENVIA_NIBBLE
  3085   00317A  0012               	return		;funcret
  3086   00317C                     __end_of_ENVIA_CHAR:
  3087                           	callstack 0
  3088                           
  3089 ;; *************** function _LEER_LCD *****************
  3090 ;; Defined at:
  3091 ;;		line 156 in file "LCD.c"
  3092 ;; Parameters:    Size  Location     Type
  3093 ;;		None
  3094 ;; Auto vars:     Size  Location     Type
  3095 ;;  aux             1    2[COMRAM] unsigned char 
  3096 ;; Return value:  Size  Location     Type
  3097 ;;                  1    wreg      void 
  3098 ;; Registers used:
  3099 ;;		wreg, status,2, status,0
  3100 ;; Tracked objects:
  3101 ;;		On entry : 0/0
  3102 ;;		On exit  : 0/0
  3103 ;;		Unchanged: 0/0
  3104 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  3105 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3106 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3107 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3108 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3109 ;;Total ram usage:        1 bytes
  3110 ;; Hardware stack levels used: 1
  3111 ;; Hardware stack levels required when called: 1
  3112 ;; This function calls:
  3113 ;;		Nothing
  3114 ;; This function is called by:
  3115 ;;		_ENVIA_CHAR
  3116 ;;		_ENVIA_LCD_CMD
  3117 ;; This function uses a non-reentrant model
  3118 ;;
  3119                           
  3120                           	psect	text19
  3121   002E3A                     __ptext19:
  3122                           	callstack 0
  3123   002E3A                     _LEER_LCD:
  3124                           	callstack 122
  3125                           
  3126                           ;LCD.c: 157:  unsigned char aux;;LCD.c: 158:  TRISD = 0xF8;
  3127                           
  3128                           ;incstack = 0
  3129   002E3A  0EF8               	movlw	248
  3130   002E3C  6EC9               	movwf	201,c	;volatile
  3131                           
  3132                           ;LCD.c: 159:  LATDbits.LATD0 = 0;
  3133   002E3E  90C1               	bcf	193,0,c	;volatile
  3134                           
  3135                           ;LCD.c: 160:  LATDbits.LATD1 = 1;
  3136   002E40  82C1               	bsf	193,1,c	;volatile
  3137                           
  3138                           ;LCD.c: 161:  LATDbits.LATD2 = 1;
  3139   002E42  84C1               	bsf	193,2,c	;volatile
  3140                           
  3141                           ;LCD.c: 162:     _delay((unsigned long)((100)*(32000000UL/4000000.0)));
  3142   002E44  0EA0               	movlw	160
  3143   002E46                     u1227:
  3144   002E46  D000               	nop2	
  3145   002E48  2EE8               	decfsz	wreg,f,c
  3146   002E4A  D7FD               	bra	u1227
  3147                           
  3148                           ;LCD.c: 163:  aux = PORTD;
  3149   002E4C  C4D1 F503          	movff	1233,LEER_LCD@aux	;volatile
  3150                           
  3151                           ;LCD.c: 164:  LATDbits.LATD2 = 0;
  3152   002E50  94C1               	bcf	193,2,c	;volatile
  3153                           
  3154                           ;LCD.c: 165:     _delay((unsigned long)((100)*(32000000UL/4000000.0)));
  3155   002E52  0EA0               	movlw	160
  3156   002E54                     u1237:
  3157   002E54  D000               	nop2	
  3158   002E56  2EE8               	decfsz	wreg,f,c
  3159   002E58  D7FD               	bra	u1237
  3160                           
  3161                           ;LCD.c: 166:  LATDbits.LATD2 = 1;
  3162   002E5A  84C1               	bsf	193,2,c	;volatile
  3163                           
  3164                           ;LCD.c: 167:     _delay((unsigned long)((100)*(32000000UL/4000000.0)));
  3165   002E5C  0EA0               	movlw	160
  3166   002E5E                     u1247:
  3167   002E5E  D000               	nop2	
  3168   002E60  2EE8               	decfsz	wreg,f,c
  3169   002E62  D7FD               	bra	u1247
  3170   002E64                     l940:
  3171                           
  3172                           ;LCD.c: 168:  LATDbits.LATD2 = 0;
  3173   002E64  94C1               	bcf	193,2,c	;volatile
  3174                           
  3175                           ;LCD.c: 169:  aux = aux & 0x80;
  3176   002E66  5003               	movf	LEER_LCD@aux^(0+1280),w,c
  3177   002E68  0B80               	andlw	128
  3178   002E6A  6E03               	movwf	LEER_LCD@aux^(0+1280),c
  3179                           
  3180                           ;LCD.c: 170:  while(aux == 0x80){
  3181   002E6C  D012               	goto	l956
  3182   002E6E                     l93:
  3183                           
  3184                           ;LCD.c: 171:             LATDbits.LATD2 = 1;
  3185   002E6E  84C1               	bsf	193,2,c	;volatile
  3186                           
  3187                           ;LCD.c: 172:             _delay((unsigned long)((100)*(32000000UL/4000000.0)));
  3188   002E70  0EA0               	movlw	160
  3189   002E72                     u1257:
  3190   002E72  D000               	nop2	
  3191   002E74  2EE8               	decfsz	wreg,f,c
  3192   002E76  D7FD               	bra	u1257
  3193                           
  3194                           ;LCD.c: 173:             aux = PORTD;
  3195   002E78  C4D1 F503          	movff	1233,LEER_LCD@aux	;volatile
  3196                           
  3197                           ;LCD.c: 174:             LATDbits.LATD2 = 0;
  3198   002E7C  94C1               	bcf	193,2,c	;volatile
  3199                           
  3200                           ;LCD.c: 175:             _delay((unsigned long)((100)*(32000000UL/4000000.0)));
  3201   002E7E  0EA0               	movlw	160
  3202   002E80                     u1267:
  3203   002E80  D000               	nop2	
  3204   002E82  2EE8               	decfsz	wreg,f,c
  3205   002E84  D7FD               	bra	u1267
  3206                           
  3207                           ;LCD.c: 176:             LATDbits.LATD2 = 1;
  3208   002E86  84C1               	bsf	193,2,c	;volatile
  3209                           
  3210                           ;LCD.c: 177:             _delay((unsigned long)((100)*(32000000UL/4000000.0)));
  3211   002E88  0EA0               	movlw	160
  3212   002E8A                     u1277:
  3213   002E8A  D000               	nop2	
  3214   002E8C  2EE8               	decfsz	wreg,f,c
  3215   002E8E  D7FD               	bra	u1277
  3216   002E90  D7E9               	goto	l940
  3217   002E92                     l956:
  3218                           
  3219                           ;LCD.c: 170:  while(aux == 0x80){
  3220   002E92  0E80               	movlw	128
  3221   002E94  1803               	xorwf	LEER_LCD@aux^(0+1280),w,c
  3222   002E96  A4D8               	btfss	status,2,c
  3223   002E98  0012               	return	
  3224   002E9A  D7E9               	goto	l93
  3225   002E9C                     __end_of_LEER_LCD:
  3226                           	callstack 0
  3227                           
  3228 ;; *************** function _ENVIA_NIBBLE *****************
  3229 ;; Defined at:
  3230 ;;		line 106 in file "LCD.c"
  3231 ;; Parameters:    Size  Location     Type
  3232 ;;  dato            1    wreg     unsigned char 
  3233 ;; Auto vars:     Size  Location     Type
  3234 ;;  dato            1    2[COMRAM] unsigned char 
  3235 ;; Return value:  Size  Location     Type
  3236 ;;                  1    wreg      void 
  3237 ;; Registers used:
  3238 ;;		wreg, status,2, status,0
  3239 ;; Tracked objects:
  3240 ;;		On entry : 0/4
  3241 ;;		On exit  : 0/0
  3242 ;;		Unchanged: 0/0
  3243 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  3244 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3245 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3246 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3247 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3248 ;;Total ram usage:        1 bytes
  3249 ;; Hardware stack levels used: 1
  3250 ;; Hardware stack levels required when called: 1
  3251 ;; This function calls:
  3252 ;;		Nothing
  3253 ;; This function is called by:
  3254 ;;		_ENVIA_CHAR
  3255 ;;		_LCD_CONFIG
  3256 ;;		_ENVIA_LCD_CMD
  3257 ;; This function uses a non-reentrant model
  3258 ;;
  3259                           
  3260                           	psect	text20
  3261   0031E4                     __ptext20:
  3262                           	callstack 0
  3263   0031E4                     _ENVIA_NIBBLE:
  3264                           	callstack 122
  3265                           
  3266                           ;incstack = 0
  3267                           ;ENVIA_NIBBLE@dato stored from wreg
  3268   0031E4  6E03               	movwf	ENVIA_NIBBLE@dato^(0+1280),c
  3269                           
  3270                           ;LCD.c: 107:  LATD &= 0x0F;
  3271   0031E6  0E0F               	movlw	15
  3272   0031E8  16C1               	andwf	193,f,c	;volatile
  3273                           
  3274                           ;LCD.c: 108:  dato &= 0xF0;
  3275   0031EA  0EF0               	movlw	240
  3276   0031EC  1603               	andwf	ENVIA_NIBBLE@dato^(0+1280),f,c
  3277                           
  3278                           ;LCD.c: 109:  LATD|= dato;
  3279   0031EE  5003               	movf	ENVIA_NIBBLE@dato^(0+1280),w,c	;volatile
  3280   0031F0  12C1               	iorwf	193,f,c	;volatile
  3281                           
  3282                           ;LCD.c: 110:  LATDbits.LATD2 = 1;
  3283   0031F2  84C1               	bsf	193,2,c	;volatile
  3284                           
  3285                           ;LCD.c: 111:     _delay((unsigned long)((100)*(32000000UL/4000000.0)));
  3286   0031F4  0EA0               	movlw	160
  3287   0031F6                     u1287:
  3288   0031F6  D000               	nop2	
  3289   0031F8  2EE8               	decfsz	wreg,f,c
  3290   0031FA  D7FD               	bra	u1287
  3291                           
  3292                           ;LCD.c: 112:  LATDbits.LATD2 = 0;
  3293   0031FC  94C1               	bcf	193,2,c	;volatile
  3294   0031FE  0012               	return		;funcret
  3295   003200                     __end_of_ENVIA_NIBBLE:
  3296                           	callstack 0
  3297                           
  3298 ;; *************** function _CCP1_ISR *****************
  3299 ;; Defined at:
  3300 ;;		line 76 in file "maincode.c"
  3301 ;; Parameters:    Size  Location     Type
  3302 ;;		None
  3303 ;; Auto vars:     Size  Location     Type
  3304 ;;  dato            1    0        unsigned char 
  3305 ;; Return value:  Size  Location     Type
  3306 ;;                  1    wreg      void 
  3307 ;; Registers used:
  3308 ;;		wreg, status,2, status,0
  3309 ;; Tracked objects:
  3310 ;;		On entry : 0/0
  3311 ;;		On exit  : 0/0
  3312 ;;		Unchanged: 0/0
  3313 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  3314 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3315 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3316 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3317 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3318 ;;Total ram usage:        2 bytes
  3319 ;; Hardware stack levels used: 1
  3320 ;; This function calls:
  3321 ;;		Nothing
  3322 ;; This function is called by:
  3323 ;;		Interrupt level 2
  3324 ;; This function uses a non-reentrant model
  3325 ;;
  3326                           
  3327                           	psect	text21
  3328   002E9C                     __ptext21:
  3329                           	callstack 0
  3330   002E9C                     _CCP1_ISR:
  3331                           	callstack 121
  3332                           
  3333                           ;maincode.c: 78:     if(PIR3bits.CCP1IF==1)
  3334                           
  3335                           ;incstack = 0
  3336   002E9C  ACB1               	btfss	177,6,c	;volatile
  3337   002E9E  0011               	retfie		f
  3338                           
  3339                           ;maincode.c: 79:     {;maincode.c: 80:         PIR3bits.CCP1IF=0;
  3340   002EA0  9CB1               	bcf	177,6,c	;volatile
  3341                           
  3342                           ;maincode.c: 81:         switch(estado)
  3343   002EA2  D018               	goto	i2l1510
  3344   002EA4                     i2l1504:
  3345                           
  3346                           ;maincode.c: 84:                 TMR1H=0;
  3347   002EA4  0E00               	movlw	0
  3348   002EA6  0103               	movlb	3	; () banked
  3349   002EA8  6F1D               	movwf	29,b	;volatile
  3350                           
  3351                           ;maincode.c: 85:                 TMR1L=0;
  3352   002EAA  0E00               	movlw	0
  3353   002EAC  6F1C               	movwf	28,b	;volatile
  3354                           
  3355                           ;maincode.c: 86:                 CCP1CONbits.MODE = 4;
  3356   002EAE  5142               	movf	66,w,b	;volatile
  3357   002EB0  0BF0               	andlw	-16
  3358   002EB2  0904               	iorlw	4
  3359   002EB4  6F42               	movwf	66,b	;volatile
  3360                           
  3361                           ;maincode.c: 87:                 estado = 3;
  3362   002EB6  0E03               	movlw	3
  3363   002EB8  6E24               	movwf	_estado^(0+1280),c
  3364                           
  3365                           ;maincode.c: 88:                 break;
  3366   002EBA  0011               	retfie		f
  3367   002EBC                     i2l232:
  3368                           
  3369                           ;maincode.c: 90:                 distancia=CCPR1;
  3370   002EBC  C340 F522          	movff	832,_distancia	;volatile
  3371   002EC0  C341 F523          	movff	833,_distancia+1	;volatile
  3372                           
  3373                           ;maincode.c: 91:                 estado = 4;
  3374   002EC4  0E04               	movlw	4
  3375   002EC6  6E24               	movwf	_estado^(0+1280),c
  3376                           
  3377                           ;maincode.c: 92:                 CCP1CONbits.MODE = 5;
  3378   002EC8  0103               	movlb	3	; () banked
  3379   002ECA  5142               	movf	66,w,b	;volatile
  3380   002ECC  0BF0               	andlw	-16
  3381   002ECE  0905               	iorlw	5
  3382   002ED0  6F42               	movwf	66,b	;volatile
  3383                           
  3384                           ;maincode.c: 93:                 break;
  3385   002ED2  0011               	retfie		f
  3386   002ED4                     i2l1510:
  3387   002ED4  5024               	movf	_estado^(0+1280),w,c
  3388   002ED6  6E01               	movwf	??_CCP1_ISR^(0+1280),c
  3389   002ED8  6A02               	clrf	(??_CCP1_ISR+1)^(0+1280),c
  3390                           
  3391                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3392                           ; Switch size 1, requested type "simple"
  3393                           ; Number of cases is 1, Range of values is 0 to 0
  3394                           ; switch strategies available:
  3395                           ; Name         Instructions Cycles
  3396                           ; simple_byte            4     3 (average)
  3397                           ;	Chosen strategy is simple_byte
  3398   002EDA  5002               	movf	(??_CCP1_ISR+1)^(0+1280),w,c
  3399   002EDC  0A00               	xorlw	0	; case 0
  3400   002EDE  A4D8               	btfss	status,2,c
  3401   002EE0  0011               	retfie		f
  3402                           
  3403                           ; Switch size 1, requested type "simple"
  3404                           ; Number of cases is 2, Range of values is 2 to 3
  3405                           ; switch strategies available:
  3406                           ; Name         Instructions Cycles
  3407                           ; simple_byte            7     4 (average)
  3408                           ;	Chosen strategy is simple_byte
  3409   002EE2  5001               	movf	??_CCP1_ISR^(0+1280),w,c
  3410   002EE4  0A02               	xorlw	2	; case 2
  3411   002EE6  B4D8               	btfsc	status,2,c
  3412   002EE8  D7DD               	goto	i2l1504
  3413   002EEA  0A01               	xorlw	1	; case 3
  3414   002EEC  A4D8               	btfss	status,2,c
  3415   002EEE  0011               	retfie		f
  3416   002EF0  D7E5               	goto	i2l232
  3417   002EF2                     __end_of_CCP1_ISR:
  3418                           	callstack 0
  3419                           
  3420 ;; *************** function _DEFAULT_ISR *****************
  3421 ;; Defined at:
  3422 ;;		line 98 in file "maincode.c"
  3423 ;; Parameters:    Size  Location     Type
  3424 ;;		None
  3425 ;; Auto vars:     Size  Location     Type
  3426 ;;		None
  3427 ;; Return value:  Size  Location     Type
  3428 ;;                  1    wreg      void 
  3429 ;; Registers used:
  3430 ;;		None
  3431 ;; Tracked objects:
  3432 ;;		On entry : 0/0
  3433 ;;		On exit  : 0/0
  3434 ;;		Unchanged: 0/0
  3435 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  3436 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3437 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3438 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3439 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3440 ;;Total ram usage:        0 bytes
  3441 ;; Hardware stack levels used: 1
  3442 ;; This function calls:
  3443 ;;		Nothing
  3444 ;; This function is called by:
  3445 ;;		Interrupt level 2
  3446 ;; This function uses a non-reentrant model
  3447 ;;
  3448                           
  3449                           	psect	text22
  3450   003210                     __ptext22:
  3451                           	callstack 0
  3452   003210                     _DEFAULT_ISR:
  3453                           	callstack 121
  3454                           
  3455                           ;maincode.c: 100:     return;
  3456                           
  3457                           ;incstack = 0
  3458   003210  0011               	retfie		f
  3459   003212                     __end_of_DEFAULT_ISR:
  3460                           	callstack 0
  3461                           
  3462                           ;
  3463                           ; Interrupt Vector Table @ 0x8
  3464                           ;
  3465                           
  3466                           	psect	ivt0x8
  3467   000008                     __pivt0x8:
  3468                           	callstack 0
  3469   000008                     ivt0x8_base:
  3470                           	callstack 0
  3471                           
  3472                           ; Vector 0 : SWINT
  3473   000008  0C84               	dw	_DEFAULT_ISR shr (0+2)
  3474                           
  3475                           ; Vector 1 : HLVD
  3476   00000A  0C84               	dw	_DEFAULT_ISR shr (0+2)
  3477                           
  3478                           ; Vector 2 : OSF
  3479   00000C  0C84               	dw	_DEFAULT_ISR shr (0+2)
  3480                           
  3481                           ; Vector 3 : CSW
  3482   00000E  0C84               	dw	_DEFAULT_ISR shr (0+2)
  3483                           
  3484                           ; Vector 4 : Undefined
  3485   000010  0040               	dw	ivt0x8_undefint shr (0+2)
  3486                           
  3487                           ; Vector 5 : CLC1
  3488   000012  0C84               	dw	_DEFAULT_ISR shr (0+2)
  3489                           
  3490                           ; Vector 6 : Undefined
  3491   000014  0040               	dw	ivt0x8_undefint shr (0+2)
  3492                           
  3493                           ; Vector 7 : IOC
  3494   000016  0C84               	dw	_DEFAULT_ISR shr (0+2)
  3495                           
  3496                           ; Vector 8 : INT0
  3497   000018  0C84               	dw	_DEFAULT_ISR shr (0+2)
  3498                           
  3499                           ; Vector 9 : ZCD
  3500   00001A  0C84               	dw	_DEFAULT_ISR shr (0+2)
  3501                           
  3502                           ; Vector 10 : AD
  3503   00001C  0C84               	dw	_DEFAULT_ISR shr (0+2)
  3504                           
  3505                           ; Vector 11 : ACT
  3506   00001E  0C84               	dw	_DEFAULT_ISR shr (0+2)
  3507                           
  3508                           ; Vector 12 : CMP1
  3509   000020  0C84               	dw	_DEFAULT_ISR shr (0+2)
  3510                           
  3511                           ; Vector 13 : SMT1
  3512   000022  0C84               	dw	_DEFAULT_ISR shr (0+2)
  3513                           
  3514                           ; Vector 14 : SMT1PRA
  3515   000024  0C84               	dw	_DEFAULT_ISR shr (0+2)
  3516                           
  3517                           ; Vector 15 : SMT1PRW
  3518   000026  0C84               	dw	_DEFAULT_ISR shr (0+2)
  3519                           
  3520                           ; Vector 16 : ADT
  3521   000028  0C84               	dw	_DEFAULT_ISR shr (0+2)
  3522                           
  3523                           ; Vector 17 : Undefined
  3524   00002A  0040               	dw	ivt0x8_undefint shr (0+2)
  3525                           
  3526                           ; Vector 18 : Undefined
  3527   00002C  0040               	dw	ivt0x8_undefint shr (0+2)
  3528                           
  3529                           ; Vector 19 : Undefined
  3530   00002E  0040               	dw	ivt0x8_undefint shr (0+2)
  3531                           
  3532                           ; Vector 20 : DMA1SCNT
  3533   000030  0C84               	dw	_DEFAULT_ISR shr (0+2)
  3534                           
  3535                           ; Vector 21 : DMA1DCNT
  3536   000032  0C84               	dw	_DEFAULT_ISR shr (0+2)
  3537                           
  3538                           ; Vector 22 : DMA1OR
  3539   000034  0C84               	dw	_DEFAULT_ISR shr (0+2)
  3540                           
  3541                           ; Vector 23 : DMA1A
  3542   000036  0C84               	dw	_DEFAULT_ISR shr (0+2)
  3543                           
  3544                           ; Vector 24 : SPI1RX
  3545   000038  0C84               	dw	_DEFAULT_ISR shr (0+2)
  3546                           
  3547                           ; Vector 25 : SPI1TX
  3548   00003A  0C84               	dw	_DEFAULT_ISR shr (0+2)
  3549                           
  3550                           ; Vector 26 : SPI1
  3551   00003C  0C84               	dw	_DEFAULT_ISR shr (0+2)
  3552                           
  3553                           ; Vector 27 : TMR2
  3554   00003E  0C84               	dw	_DEFAULT_ISR shr (0+2)
  3555                           
  3556                           ; Vector 28 : TMR1
  3557   000040  0C84               	dw	_DEFAULT_ISR shr (0+2)
  3558                           
  3559                           ; Vector 29 : TMR1G
  3560   000042  0C84               	dw	_DEFAULT_ISR shr (0+2)
  3561                           
  3562                           ; Vector 30 : CCP1
  3563   000044  0BA7               	dw	_CCP1_ISR shr (0+2)
  3564                           
  3565                           ; Vector 31 : TMR0
  3566   000046  0C84               	dw	_DEFAULT_ISR shr (0+2)
  3567                           
  3568                           ; Vector 32 : U1RX
  3569   000048  0C84               	dw	_DEFAULT_ISR shr (0+2)
  3570                           
  3571                           ; Vector 33 : U1TX
  3572   00004A  0C84               	dw	_DEFAULT_ISR shr (0+2)
  3573                           
  3574                           ; Vector 34 : U1E
  3575   00004C  0C84               	dw	_DEFAULT_ISR shr (0+2)
  3576                           
  3577                           ; Vector 35 : U1
  3578   00004E  0C84               	dw	_DEFAULT_ISR shr (0+2)
  3579                           
  3580                           ; Vector 36 : Undefined
  3581   000050  0040               	dw	ivt0x8_undefint shr (0+2)
  3582                           
  3583                           ; Vector 37 : Undefined
  3584   000052  0040               	dw	ivt0x8_undefint shr (0+2)
  3585                           
  3586                           ; Vector 38 : PWM1PR
  3587   000054  0C84               	dw	_DEFAULT_ISR shr (0+2)
  3588                           
  3589                           ; Vector 39 : PWM1
  3590   000056  0C84               	dw	_DEFAULT_ISR shr (0+2)
  3591                           
  3592                           ; Vector 40 : SPI2RX
  3593   000058  0C84               	dw	_DEFAULT_ISR shr (0+2)
  3594                           
  3595                           ; Vector 41 : SPI2TX
  3596   00005A  0C84               	dw	_DEFAULT_ISR shr (0+2)
  3597                           
  3598                           ; Vector 42 : SPI2
  3599   00005C  0C84               	dw	_DEFAULT_ISR shr (0+2)
  3600                           
  3601                           ; Vector 43 : Undefined
  3602   00005E  0040               	dw	ivt0x8_undefint shr (0+2)
  3603                           
  3604                           ; Vector 44 : TMR3
  3605   000060  0C84               	dw	_DEFAULT_ISR shr (0+2)
  3606                           
  3607                           ; Vector 45 : TMR3G
  3608   000062  0C84               	dw	_DEFAULT_ISR shr (0+2)
  3609                           
  3610                           ; Vector 46 : PWM2PR
  3611   000064  0C84               	dw	_DEFAULT_ISR shr (0+2)
  3612                           
  3613                           ; Vector 47 : PWM2
  3614   000066  0C84               	dw	_DEFAULT_ISR shr (0+2)
  3615                           
  3616                           ; Vector 48 : INT1
  3617   000068  0C84               	dw	_DEFAULT_ISR shr (0+2)
  3618                           
  3619                           ; Vector 49 : CLC2
  3620   00006A  0C84               	dw	_DEFAULT_ISR shr (0+2)
  3621                           
  3622                           ; Vector 50 : CWG1
  3623   00006C  0C84               	dw	_DEFAULT_ISR shr (0+2)
  3624                           
  3625                           ; Vector 51 : NCO1
  3626   00006E  0C84               	dw	_DEFAULT_ISR shr (0+2)
  3627                           
  3628                           ; Vector 52 : DMA2SCNT
  3629   000070  0C84               	dw	_DEFAULT_ISR shr (0+2)
  3630                           
  3631                           ; Vector 53 : DMA2DCNT
  3632   000072  0C84               	dw	_DEFAULT_ISR shr (0+2)
  3633                           
  3634                           ; Vector 54 : DMA2OR
  3635   000074  0C84               	dw	_DEFAULT_ISR shr (0+2)
  3636                           
  3637                           ; Vector 55 : DMA2A
  3638   000076  0C84               	dw	_DEFAULT_ISR shr (0+2)
  3639                           
  3640                           ; Vector 56 : I2C1RX
  3641   000078  0C84               	dw	_DEFAULT_ISR shr (0+2)
  3642                           
  3643                           ; Vector 57 : I2C1TX
  3644   00007A  0C84               	dw	_DEFAULT_ISR shr (0+2)
  3645                           
  3646                           ; Vector 58 : I2C1
  3647   00007C  0C84               	dw	_DEFAULT_ISR shr (0+2)
  3648                           
  3649                           ; Vector 59 : I2C1E
  3650   00007E  0C84               	dw	_DEFAULT_ISR shr (0+2)
  3651                           
  3652                           ; Vector 60 : Undefined
  3653   000080  0040               	dw	ivt0x8_undefint shr (0+2)
  3654                           
  3655                           ; Vector 61 : CLC3
  3656   000082  0C84               	dw	_DEFAULT_ISR shr (0+2)
  3657                           
  3658                           ; Vector 62 : PWM3PR
  3659   000084  0C84               	dw	_DEFAULT_ISR shr (0+2)
  3660                           
  3661                           ; Vector 63 : PWM3
  3662   000086  0C84               	dw	_DEFAULT_ISR shr (0+2)
  3663                           
  3664                           ; Vector 64 : U2RX
  3665   000088  0C84               	dw	_DEFAULT_ISR shr (0+2)
  3666                           
  3667                           ; Vector 65 : U2TX
  3668   00008A  0C84               	dw	_DEFAULT_ISR shr (0+2)
  3669                           
  3670                           ; Vector 66 : U2E
  3671   00008C  0C84               	dw	_DEFAULT_ISR shr (0+2)
  3672                           
  3673                           ; Vector 67 : U2
  3674   00008E  0C84               	dw	_DEFAULT_ISR shr (0+2)
  3675                           
  3676                           ; Vector 68 : TMR5
  3677   000090  0C84               	dw	_DEFAULT_ISR shr (0+2)
  3678                           
  3679                           ; Vector 69 : TMR5G
  3680   000092  0C84               	dw	_DEFAULT_ISR shr (0+2)
  3681                           
  3682                           ; Vector 70 : CCP2
  3683   000094  0C84               	dw	_DEFAULT_ISR shr (0+2)
  3684                           
  3685                           ; Vector 71 : SCAN
  3686   000096  0C84               	dw	_DEFAULT_ISR shr (0+2)
  3687                           
  3688                           ; Vector 72 : U3RX
  3689   000098  0C84               	dw	_DEFAULT_ISR shr (0+2)
  3690                           
  3691                           ; Vector 73 : U3TX
  3692   00009A  0C84               	dw	_DEFAULT_ISR shr (0+2)
  3693                           
  3694                           ; Vector 74 : U3E
  3695   00009C  0C84               	dw	_DEFAULT_ISR shr (0+2)
  3696                           
  3697                           ; Vector 75 : U3
  3698   00009E  0C84               	dw	_DEFAULT_ISR shr (0+2)
  3699                           
  3700                           ; Vector 76 : Undefined
  3701   0000A0  0040               	dw	ivt0x8_undefint shr (0+2)
  3702                           
  3703                           ; Vector 77 : CLC4
  3704   0000A2  0C84               	dw	_DEFAULT_ISR shr (0+2)
  3705                           
  3706                           ; Vector 78 : Undefined
  3707   0000A4  0040               	dw	ivt0x8_undefint shr (0+2)
  3708                           
  3709                           ; Vector 79 : Undefined
  3710   0000A6  0040               	dw	ivt0x8_undefint shr (0+2)
  3711                           
  3712                           ; Vector 80 : INT2
  3713   0000A8  0C84               	dw	_DEFAULT_ISR shr (0+2)
  3714                           
  3715                           ; Vector 81 : CLC5
  3716   0000AA  0C84               	dw	_DEFAULT_ISR shr (0+2)
  3717                           
  3718                           ; Vector 82 : CWG2
  3719   0000AC  0C84               	dw	_DEFAULT_ISR shr (0+2)
  3720                           
  3721                           ; Vector 83 : NCO2
  3722   0000AE  0C84               	dw	_DEFAULT_ISR shr (0+2)
  3723                           
  3724                           ; Vector 84 : DMA3SCNT
  3725   0000B0  0C84               	dw	_DEFAULT_ISR shr (0+2)
  3726                           
  3727                           ; Vector 85 : DMA3DCNT
  3728   0000B2  0C84               	dw	_DEFAULT_ISR shr (0+2)
  3729                           
  3730                           ; Vector 86 : DMA3OR
  3731   0000B4  0C84               	dw	_DEFAULT_ISR shr (0+2)
  3732                           
  3733                           ; Vector 87 : DMA3A
  3734   0000B6  0C84               	dw	_DEFAULT_ISR shr (0+2)
  3735                           
  3736                           ; Vector 88 : CCP3
  3737   0000B8  0C84               	dw	_DEFAULT_ISR shr (0+2)
  3738                           
  3739                           ; Vector 89 : CLC6
  3740   0000BA  0C84               	dw	_DEFAULT_ISR shr (0+2)
  3741                           
  3742                           ; Vector 90 : CWG3
  3743   0000BC  0C84               	dw	_DEFAULT_ISR shr (0+2)
  3744                           
  3745                           ; Vector 91 : TMR4
  3746   0000BE  0C84               	dw	_DEFAULT_ISR shr (0+2)
  3747                           
  3748                           ; Vector 92 : DMA4SCNT
  3749   0000C0  0C84               	dw	_DEFAULT_ISR shr (0+2)
  3750                           
  3751                           ; Vector 93 : DMA4DCNT
  3752   0000C2  0C84               	dw	_DEFAULT_ISR shr (0+2)
  3753                           
  3754                           ; Vector 94 : DMA4OR
  3755   0000C4  0C84               	dw	_DEFAULT_ISR shr (0+2)
  3756                           
  3757                           ; Vector 95 : DMA4A
  3758   0000C6  0C84               	dw	_DEFAULT_ISR shr (0+2)
  3759                           
  3760                           ; Vector 96 : U4RX
  3761   0000C8  0C84               	dw	_DEFAULT_ISR shr (0+2)
  3762                           
  3763                           ; Vector 97 : U4TX
  3764   0000CA  0C84               	dw	_DEFAULT_ISR shr (0+2)
  3765                           
  3766                           ; Vector 98 : U4E
  3767   0000CC  0C84               	dw	_DEFAULT_ISR shr (0+2)
  3768                           
  3769                           ; Vector 99 : U4
  3770   0000CE  0C84               	dw	_DEFAULT_ISR shr (0+2)
  3771                           
  3772                           ; Vector 100 : DMA5SCNT
  3773   0000D0  0C84               	dw	_DEFAULT_ISR shr (0+2)
  3774                           
  3775                           ; Vector 101 : DMA5DCNT
  3776   0000D2  0C84               	dw	_DEFAULT_ISR shr (0+2)
  3777                           
  3778                           ; Vector 102 : DMA5OR
  3779   0000D4  0C84               	dw	_DEFAULT_ISR shr (0+2)
  3780                           
  3781                           ; Vector 103 : DMA5A
  3782   0000D6  0C84               	dw	_DEFAULT_ISR shr (0+2)
  3783                           
  3784                           ; Vector 104 : U5RX
  3785   0000D8  0C84               	dw	_DEFAULT_ISR shr (0+2)
  3786                           
  3787                           ; Vector 105 : U5TX
  3788   0000DA  0C84               	dw	_DEFAULT_ISR shr (0+2)
  3789                           
  3790                           ; Vector 106 : U5E
  3791   0000DC  0C84               	dw	_DEFAULT_ISR shr (0+2)
  3792                           
  3793                           ; Vector 107 : U5
  3794   0000DE  0C84               	dw	_DEFAULT_ISR shr (0+2)
  3795                           
  3796                           ; Vector 108 : DMA6SCNT
  3797   0000E0  0C84               	dw	_DEFAULT_ISR shr (0+2)
  3798                           
  3799                           ; Vector 109 : DMA6DCNT
  3800   0000E2  0C84               	dw	_DEFAULT_ISR shr (0+2)
  3801                           
  3802                           ; Vector 110 : DMA6OR
  3803   0000E4  0C84               	dw	_DEFAULT_ISR shr (0+2)
  3804                           
  3805                           ; Vector 111 : DMA6A
  3806   0000E6  0C84               	dw	_DEFAULT_ISR shr (0+2)
  3807                           
  3808                           ; Vector 112 : Undefined
  3809   0000E8  0040               	dw	ivt0x8_undefint shr (0+2)
  3810                           
  3811                           ; Vector 113 : CLC7
  3812   0000EA  0C84               	dw	_DEFAULT_ISR shr (0+2)
  3813                           
  3814                           ; Vector 114 : CMP2
  3815   0000EC  0C84               	dw	_DEFAULT_ISR shr (0+2)
  3816                           
  3817                           ; Vector 115 : NCO3
  3818   0000EE  0C84               	dw	_DEFAULT_ISR shr (0+2)
  3819                           
  3820                           ; Vector 116 : Undefined
  3821   0000F0  0040               	dw	ivt0x8_undefint shr (0+2)
  3822                           
  3823                           ; Vector 117 : Undefined
  3824   0000F2  0040               	dw	ivt0x8_undefint shr (0+2)
  3825                           
  3826                           ; Vector 118 : Undefined
  3827   0000F4  0040               	dw	ivt0x8_undefint shr (0+2)
  3828                           
  3829                           ; Vector 119 : Undefined
  3830   0000F6  0040               	dw	ivt0x8_undefint shr (0+2)
  3831                           
  3832                           ; Vector 120 : NVM
  3833   0000F8  0C84               	dw	_DEFAULT_ISR shr (0+2)
  3834                           
  3835                           ; Vector 121 : CLC8
  3836   0000FA  0C84               	dw	_DEFAULT_ISR shr (0+2)
  3837                           
  3838                           ; Vector 122 : CRC
  3839   0000FC  0C84               	dw	_DEFAULT_ISR shr (0+2)
  3840                           
  3841                           ; Vector 123 : TMR6
  3842   0000FE  0C84               	dw	_DEFAULT_ISR shr (0+2)
  3843   000100                     ivt0x8_undefint:
  3844                           	callstack 0
  3845   000100  00FF               	reset	
  3846                           
  3847                           	psect	rparam
  3848   000000                     
  3849                           	psect	config
  3850                           
  3851                           ;Config register CONFIG1 @ 0x300000
  3852                           ;	External Oscillator Selection
  3853                           ;	FEXTOSC = OFF, Oscillator not enabled
  3854                           ;	Reset Oscillator Selection
  3855                           ;	RSTOSC = EXTOSC, EXTOSC operating per FEXTOSC bits (device manufacturing default)
  3856   300000                     	org	3145728
  3857   300000  FC                 	db	252
  3858                           
  3859                           ;Config register CONFIG2 @ 0x300001
  3860                           ;	Clock out Enable bit
  3861                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
  3862                           ;	PRLOCKED One-Way Set Enable bit
  3863                           ;	PR1WAY = ON, PRLOCKED bit can be cleared and set only once
  3864                           ;	Clock Switch Enable bit
  3865                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
  3866                           ;	Fail-Safe Clock Monitor Enable bit
  3867                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
  3868   300001                     	org	3145729
  3869   300001  FF                 	db	255
  3870                           
  3871                           ;Config register CONFIG3 @ 0x300002
  3872                           ;	MCLR Enable bit
  3873                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
  3874                           ;	Power-up timer selection bits
  3875                           ;	PWRTS = PWRT_64, PWRT set at 64ms
  3876                           ;	Multi-vector enable bit
  3877                           ;	MVECEN = ON, Multi-vector enabled, Vector table used for interrupts
  3878                           ;	IVTLOCK bit One-way set enable bit
  3879                           ;	IVT1WAY = ON, IVTLOCKED bit can be cleared and set only once
  3880                           ;	Low Power BOR Enable bit
  3881                           ;	LPBOREN = OFF, Low-Power BOR disabled
  3882                           ;	Brown-out Reset Enable bits
  3883                           ;	BOREN = OFF, Brown-out Reset disabled
  3884   300002                     	org	3145730
  3885   300002  3D                 	db	61
  3886                           
  3887                           ;Config register CONFIG4 @ 0x300003
  3888                           ;	Brown-out Reset Voltage Selection bits
  3889                           ;	BORV = VBOR_1P9, Brown-out Reset Voltage (VBOR) set to 1.9V
  3890                           ;	ZCD Disable bit
  3891                           ;	ZCD = OFF, ZCD module is disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCD
      +                          CON
  3892                           ;	PPSLOCK bit One-Way Set Enable bit
  3893                           ;	PPS1WAY = ON, PPSLOCKED bit can be cleared and set only once; PPS registers remain loc
      +                          ked after one clear/set cycle
  3894                           ;	Stack Full/Underflow Reset Enable bit
  3895                           ;	STVREN = ON, Stack full/underflow will cause Reset
  3896                           ;	Low Voltage Programming Enable bit
  3897                           ;	LVP = OFF, HV on MCLR/VPP must be used for programming
  3898                           ;	Extended Instruction Set Enable bit
  3899                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
  3900   300003                     	org	3145731
  3901   300003  DF                 	db	223
  3902                           
  3903                           ;Config register CONFIG5 @ 0x300004
  3904                           ;	WDT Period selection bits
  3905                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  3906                           ;	WDT operating mode
  3907                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
  3908   300004                     	org	3145732
  3909   300004  9F                 	db	159
  3910                           
  3911                           ;Config register CONFIG6 @ 0x300005
  3912                           ;	WDT Window Select bits
  3913                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
  3914                           ;	WDT input clock selector
  3915                           ;	WDTCCS = SC, Software Control
  3916   300005                     	org	3145733
  3917   300005  FF                 	db	255
  3918                           
  3919                           ;Config register CONFIG7 @ 0x300006
  3920                           ;	Boot Block Size selection bits
  3921                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
  3922                           ;	Boot Block enable bit
  3923                           ;	BBEN = OFF, Boot block disabled
  3924                           ;	Storage Area Flash enable bit
  3925                           ;	SAFEN = OFF, SAF disabled
  3926                           ;	Background Debugger
  3927                           ;	DEBUG = OFF, Background Debugger disabled
  3928   300006                     	org	3145734
  3929   300006  FF                 	db	255
  3930                           
  3931                           ;Config register CONFIG8 @ 0x300007
  3932                           ;	Boot Block Write Protection bit
  3933                           ;	WRTB = OFF, Boot Block not Write protected
  3934                           ;	Configuration Register Write Protection bit
  3935                           ;	WRTC = OFF, Configuration registers not Write protected
  3936                           ;	Data EEPROM Write Protection bit
  3937                           ;	WRTD = OFF, Data EEPROM not Write protected
  3938                           ;	SAF Write protection bit
  3939                           ;	WRTSAF = OFF, SAF not Write Protected
  3940                           ;	Application Block write protection bit
  3941                           ;	WRTAPP = OFF, Application Block not write protected
  3942   300007                     	org	3145735
  3943   300007  FF                 	db	255
  3944                           
  3945                           ;Config register CONFIG10 @ 0x300009
  3946                           ;	PFM and Data EEPROM Code Protection bit
  3947                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
  3948   300009                     	org	3145737
  3949   300009  FF                 	db	255
  3950                           tosu	equ	0x4FF
  3951                           tosh	equ	0x4FE
  3952                           tosl	equ	0x4FD
  3953                           stkptr	equ	0x4FC
  3954                           pclatu	equ	0x4FB
  3955                           pclath	equ	0x4FA
  3956                           pcl	equ	0x4F9
  3957                           tblptru	equ	0x4F8
  3958                           tblptrh	equ	0x4F7
  3959                           tblptrl	equ	0x4F6
  3960                           tablat	equ	0x4F5
  3961                           prodh	equ	0x4F4
  3962                           prodl	equ	0x4F3
  3963                           indf0	equ	0x4EF
  3964                           postinc0	equ	0x4EE
  3965                           postdec0	equ	0x4ED
  3966                           preinc0	equ	0x4EC
  3967                           plusw0	equ	0x4EB
  3968                           fsr0h	equ	0x4EA
  3969                           fsr0l	equ	0x4E9
  3970                           wreg	equ	0x4E8
  3971                           indf1	equ	0x4E7
  3972                           postinc1	equ	0x4E6
  3973                           postdec1	equ	0x4E5
  3974                           preinc1	equ	0x4E4
  3975                           plusw1	equ	0x4E3
  3976                           fsr1h	equ	0x4E2
  3977                           fsr1l	equ	0x4E1
  3978                           bsr	equ	0x4E0
  3979                           indf2	equ	0x4DF
  3980                           postinc2	equ	0x4DE
  3981                           postdec2	equ	0x4DD
  3982                           preinc2	equ	0x4DC
  3983                           plusw2	equ	0x4DB
  3984                           fsr2h	equ	0x4DA
  3985                           fsr2l	equ	0x4D9
  3986                           status	equ	0x4D8

Data Sizes:
    Strings     40
    Constant    0
    Data        0
    BSS         7
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     29      36
    BANK5           160      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0
    BANK32          256      0       0
    BANK33          256      0       0
    BANK34          256      0       0
    BANK35          256      0       0
    BANK36          256      0       0

Pointer List with Targets:

    ESCRIBE_MENSAJE2@cadena	PTR const unsigned char  size(1) Largest target is 12
		 -> STR_1(CODE[12]), STR_2(CODE[12]), STR_3(CODE[12]), STR_4(CODE[4]), 

    strlen@a	PTR const unsigned char  size(1) Largest target is 12
		 -> STR_1(CODE[12]), STR_2(CODE[12]), STR_3(CODE[12]), STR_4(CODE[4]), 

    strlen@s	PTR const unsigned char  size(1) Largest target is 12
		 -> STR_1(CODE[12]), STR_2(CODE[12]), STR_3(CODE[12]), STR_4(CODE[4]), 


Critical Paths under _main in COMRAM

    _main->___fldiv
    _splash_screen->_ESCRIBE_MENSAJE2
    _POS_CURSOR->_ENVIA_LCD_CMD
    _ESCRIBE_MENSAJE2->_ENVIA_CHAR
    _ESCRIBE_MENSAJE2->_strlen
    _configuro->_LCD_INIT
    _LCD_INIT->_CURSOR_ONOFF
    _LCD_INIT->_LCD_CONFIG
    _LCD_CONFIG->_ENVIA_LCD_CMD
    _CURSOR_ONOFF->_ENVIA_LCD_CMD
    _CURSOR_HOME->_ENVIA_LCD_CMD
    _BORRAR_LCD->_ENVIA_LCD_CMD
    _ENVIA_LCD_CMD->_ENVIA_NIBBLE
    _ENVIA_LCD_CMD->_LEER_LCD
    _LCD_ESCRIBE_VAR_INT->___lwdiv
    ___lwdiv->___lwmod
    _ENVIA_CHAR->_ENVIA_NIBBLE
    _ENVIA_CHAR->_LEER_LCD

Critical Paths under _CCP1_ISR in COMRAM

    None.

Critical Paths under _DEFAULT_ISR in COMRAM

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _CCP1_ISR in BANK5

    None.

Critical Paths under _DEFAULT_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _CCP1_ISR in BANK6

    None.

Critical Paths under _DEFAULT_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _CCP1_ISR in BANK7

    None.

Critical Paths under _DEFAULT_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _CCP1_ISR in BANK8

    None.

Critical Paths under _DEFAULT_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _CCP1_ISR in BANK9

    None.

Critical Paths under _DEFAULT_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _CCP1_ISR in BANK10

    None.

Critical Paths under _DEFAULT_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _CCP1_ISR in BANK11

    None.

Critical Paths under _DEFAULT_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _CCP1_ISR in BANK12

    None.

Critical Paths under _DEFAULT_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _CCP1_ISR in BANK13

    None.

Critical Paths under _DEFAULT_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _CCP1_ISR in BANK14

    None.

Critical Paths under _DEFAULT_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _CCP1_ISR in BANK15

    None.

Critical Paths under _DEFAULT_ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _CCP1_ISR in BANK16

    None.

Critical Paths under _DEFAULT_ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _CCP1_ISR in BANK17

    None.

Critical Paths under _DEFAULT_ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _CCP1_ISR in BANK18

    None.

Critical Paths under _DEFAULT_ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _CCP1_ISR in BANK19

    None.

Critical Paths under _DEFAULT_ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _CCP1_ISR in BANK20

    None.

Critical Paths under _DEFAULT_ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _CCP1_ISR in BANK21

    None.

Critical Paths under _DEFAULT_ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _CCP1_ISR in BANK22

    None.

Critical Paths under _DEFAULT_ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _CCP1_ISR in BANK23

    None.

Critical Paths under _DEFAULT_ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _CCP1_ISR in BANK24

    None.

Critical Paths under _DEFAULT_ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _CCP1_ISR in BANK25

    None.

Critical Paths under _DEFAULT_ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _CCP1_ISR in BANK26

    None.

Critical Paths under _DEFAULT_ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _CCP1_ISR in BANK27

    None.

Critical Paths under _DEFAULT_ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _CCP1_ISR in BANK28

    None.

Critical Paths under _DEFAULT_ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _CCP1_ISR in BANK29

    None.

Critical Paths under _DEFAULT_ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _CCP1_ISR in BANK30

    None.

Critical Paths under _DEFAULT_ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _CCP1_ISR in BANK31

    None.

Critical Paths under _DEFAULT_ISR in BANK31

    None.

Critical Paths under _main in BANK32

    None.

Critical Paths under _CCP1_ISR in BANK32

    None.

Critical Paths under _DEFAULT_ISR in BANK32

    None.

Critical Paths under _main in BANK33

    None.

Critical Paths under _CCP1_ISR in BANK33

    None.

Critical Paths under _DEFAULT_ISR in BANK33

    None.

Critical Paths under _main in BANK34

    None.

Critical Paths under _CCP1_ISR in BANK34

    None.

Critical Paths under _DEFAULT_ISR in BANK34

    None.

Critical Paths under _main in BANK35

    None.

Critical Paths under _CCP1_ISR in BANK35

    None.

Critical Paths under _DEFAULT_ISR in BANK35

    None.

Critical Paths under _main in BANK36

    None.

Critical Paths under _CCP1_ISR in BANK36

    None.

Critical Paths under _DEFAULT_ISR in BANK36

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    8697
                                             27 COMRAM     2     2      0
                   _ESCRIBE_MENSAJE2
                _LCD_ESCRIBE_VAR_INT
                         _POS_CURSOR
                            ___fldiv
                            ___fltol
                           ___xxtofl
                          _configuro
                      _splash_screen
 ---------------------------------------------------------------------------------
 (1) _splash_screen                                        2     2      0    1424
                                              9 COMRAM     2     2      0
                         _BORRAR_LCD
                   _ESCRIBE_MENSAJE2
                         _POS_CURSOR
 ---------------------------------------------------------------------------------
 (2) _POS_CURSOR                                           2     1      1     600
                                              5 COMRAM     2     1      1
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _ESCRIBE_MENSAJE2                                     4     3      1     704
                                              5 COMRAM     4     3      1
                         _ENVIA_CHAR
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _strlen                                               3     1      2     166
                                              2 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _configuro                                            0     0      0     525
                           _LCD_INIT
 ---------------------------------------------------------------------------------
 (2) _LCD_INIT                                             1     1      0     525
                                              6 COMRAM     1     1      0
                         _BORRAR_LCD
                        _CURSOR_HOME
                       _CURSOR_ONOFF
                         _LCD_CONFIG
 ---------------------------------------------------------------------------------
 (3) _LCD_CONFIG                                           1     1      0     135
                                              5 COMRAM     1     1      0
                      _ENVIA_LCD_CMD
                       _ENVIA_NIBBLE
 ---------------------------------------------------------------------------------
 (3) _CURSOR_ONOFF                                         1     1      0     150
                                              5 COMRAM     1     1      0
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (3) _CURSOR_HOME                                          0     0      0     120
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _BORRAR_LCD                                           0     0      0     120
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (3) _ENVIA_LCD_CMD                                        2     2      0     120
                                              3 COMRAM     2     2      0
                       _ENVIA_NIBBLE
                           _LEER_LCD
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     398
                                              2 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (1) ___fltol                                             10     6      4     305
                                              2 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (1) ___fldiv                                             25    17      8    1399
                                              2 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (1) _LCD_ESCRIBE_VAR_INT                                 11     7      4    3342
                                             14 COMRAM    11     7      4
                         _ENVIA_CHAR
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     767
                                              2 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     770
                                              7 COMRAM     7     3      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (3) _ENVIA_CHAR                                           2     2      0     120
                                              3 COMRAM     2     2      0
                       _ENVIA_NIBBLE
                           _LEER_LCD
 ---------------------------------------------------------------------------------
 (4) _LEER_LCD                                             1     1      0      45
                                              2 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _ENVIA_NIBBLE                                         1     1      0      15
                                              2 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _CCP1_ISR                                             3     3      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _DEFAULT_ISR                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ESCRIBE_MENSAJE2
     _ENVIA_CHAR
       _ENVIA_NIBBLE
       _LEER_LCD
     _strlen
   _LCD_ESCRIBE_VAR_INT
     _ENVIA_CHAR
     ___lwdiv
       ___lwmod (ARG)
     ___lwmod
   _POS_CURSOR
     _ENVIA_LCD_CMD
       _ENVIA_NIBBLE
       _LEER_LCD
   ___fldiv
   ___fltol
   ___xxtofl
   _configuro
     _LCD_INIT
       _BORRAR_LCD
         _ENVIA_LCD_CMD
       _CURSOR_HOME
         _ENVIA_LCD_CMD
       _CURSOR_ONOFF
         _ENVIA_LCD_CMD
       _LCD_CONFIG
         _ENVIA_LCD_CMD
         _ENVIA_NIBBLE
   _splash_screen
     _BORRAR_LCD
     _ESCRIBE_MENSAJE2
     _POS_CURSOR

 _CCP1_ISR (ROOT)

 _DEFAULT_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0       0      69        0.0%
EEDATA             400      0       0       0        0.0%
BITBIGSFRllhhhl    268      0       0      84        0.0%
BITBIGSFR_1        100      0       0      68        0.0%
BITBANK36          100      0       0      66        0.0%
BANK36             100      0       0      67        0.0%
BITBANK35          100      0       0      64        0.0%
BANK35             100      0       0      65        0.0%
BITBANK34          100      0       0      62        0.0%
BANK34             100      0       0      63        0.0%
BITBANK33          100      0       0      60        0.0%
BANK33             100      0       0      61        0.0%
BITBANK32          100      0       0      58        0.0%
BANK32             100      0       0      59        0.0%
BITBANK31          100      0       0      56        0.0%
BANK31             100      0       0      57        0.0%
BITBANK30          100      0       0      54        0.0%
BANK30             100      0       0      55        0.0%
BITBANK29          100      0       0      52        0.0%
BANK29             100      0       0      53        0.0%
BITBANK28          100      0       0      50        0.0%
BANK28             100      0       0      51        0.0%
BITBANK27          100      0       0      48        0.0%
BANK27             100      0       0      49        0.0%
BITBANK26          100      0       0      46        0.0%
BANK26             100      0       0      47        0.0%
BITBANK25          100      0       0      44        0.0%
BANK25             100      0       0      45        0.0%
BITBANK24          100      0       0      42        0.0%
BANK24             100      0       0      43        0.0%
BITBANK23          100      0       0      40        0.0%
BANK23             100      0       0      41        0.0%
BITBANK22          100      0       0      38        0.0%
BANK22             100      0       0      39        0.0%
BITBANK21          100      0       0      36        0.0%
BANK21             100      0       0      37        0.0%
BITBANK20          100      0       0      34        0.0%
BANK20             100      0       0      35        0.0%
BITBANK19          100      0       0      32        0.0%
BANK19             100      0       0      33        0.0%
BITBANK18          100      0       0      30        0.0%
BANK18             100      0       0      31        0.0%
BITBANK17          100      0       0      28        0.0%
BANK17             100      0       0      29        0.0%
BITBANK16          100      0       0      26        0.0%
BANK16             100      0       0      27        0.0%
BITBANK15          100      0       0      24        0.0%
BANK15             100      0       0      25        0.0%
BITBANK14          100      0       0      22        0.0%
BANK14             100      0       0      23        0.0%
BITBANK13          100      0       0      20        0.0%
BANK13             100      0       0      21        0.0%
BITBANK12          100      0       0      18        0.0%
BANK12             100      0       0      19        0.0%
BITBANK11          100      0       0      16        0.0%
BANK11             100      0       0      17        0.0%
BITBANK10          100      0       0      14        0.0%
BANK10             100      0       0      15        0.0%
BITBANK9           100      0       0      12        0.0%
BANK9              100      0       0      13        0.0%
BITBANK8           100      0       0      10        0.0%
BANK8              100      0       0      11        0.0%
BITBANK7           100      0       0       8        0.0%
BANK7              100      0       0       9        0.0%
BITBANK6           100      0       0       6        0.0%
BANK6              100      0       0       7        0.0%
BITBIGSFRllhhhl     BD      0       0      81        0.0%
BITBIGSFRlll        AD      0       0      87        0.0%
BITBANK5            A0      0       0       4        0.0%
BANK5               A0      0       0       5        0.0%
BITBIGSFRlhll       88      0       0      78        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     1D      24       1       37.9%
BITBIGSFRhhhh       29      0       0      70        0.0%
BITBIGSFRllhhhl     1E      0       0      82        0.0%
BITBIGSFRlhlhl       F      0       0      77        0.0%
BITBIGSFRllhhhh      F      0       0      80        0.0%
BITBIGSFRlhlhh       C      0       0      76        0.0%
BITBIGSFRllhhhh      7      0       0      79        0.0%
BITBIGSFRhhl         7      0       0      72        0.0%
BITBIGSFRhhhl        4      0       0      71        0.0%
BITBIGSFRhll         4      0       0      74        0.0%
BITBIGSFRllhl        3      0       0      86        0.0%
BITBIGSFRllhhhl      2      0       0      83        0.0%
BITBIGSFRlhh         2      0       0      75        0.0%
BITBIGSFRhlh         1      0       0      73        0.0%
BITBIGSFRllhhl       1      0       0      85        0.0%
BIGSFR_1             0      0       0     200        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      24      88        0.0%
DATA                 0      0      24       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Thu Nov 16 16:15:49 2023

                ___fldiv@aexp 051B                  ___fldiv@bexp 051A                  ___fldiv@sign 0513  
                          l93 2E6E                 _splash_screen 2FE0                 ENVIA_CHAR@aux 0505  
                         l217 2C7E                           l732 2F8E                           l742 305C  
                         l903 2BF0                           l825 2A1E                           l940 2E64  
                         l836 2A8C                           l837 2A88                           l956 2E92  
                         l896 2B72                           l994 31D6                           u660 2F68  
                         u690 303E                           u930 2ADE                           u940 2B02  
                         u960 2D8C                           u890 2A82                           u970 2DBC  
                         u975 2DB2                   LEER_LCD@aux 0503                           wreg 04E8  
                ?_CURSOR_HOME 0501                ??_ENVIA_NIBBLE 0503                  ___fltol@exp1 050C  
              ENVIA_CHAR@dato 0504                          l2000 2C16                          l2002 2C22  
                        l2032 2C8E                          l2018 2C62                          l2036 2D08  
                        l2052 2D5C                          l1710 3052                          l1702 3032  
                        l1704 303A                          l1640 3182                          l1730 265A  
                        l1722 2602                          l1810 28DC                          l1642 3184  
                        l1740 26E8                          l1716 25E0                          l1660 2FCE  
                        l1652 2FAA                          l1750 278C                          l1742 2710  
                        l1734 267A                          l1726 2620                          l1718 25EA  
                        l1830 291C                          l1806 28D8                          l1670 30B6  
                        l1760 284C                          l1752 27BC                          l1736 269E  
                        l1728 263A                          l1912 2AF4                          l1656 2FBC  
                        l1682 2F5C                          l1754 27EC                          l1746 2738  
                        l1738 26C0                          l1922 2B2A                          l1826 2918  
                        l1674 30D2                          l1684 2F64                          l1756 281C  
                        l1748 2762                          l1764 287C                          l1924 2B2C  
                        l1916 2B1E                          l1908 2AD0                          l1852 297E  
                        l1844 2966                          l1694 2F84                          l1870 29F6  
                        l1862 29CE                          l1838 2950                          l1882 2A34  
                        l1954 2DE8                          l1938 2D9E                          l1876 2A1C  
                        l1972 2E28                          l1964 2E00                          l1966 2E0C  
                        l1958 2DF8                          l1990 2BA6                          l1982 2B82  
                        l1888 2A52                          l1992 2BB2                          l1994 2BD8  
                        l1988 2BA0                          STR_1 2519                          STR_2 250D  
                        STR_3 2501                          STR_4 2525                          u1010 2E12  
                        u1207 3122                          u1217 3156                          u1137 2C82  
                        u1090 2C2C                          u1227 2E46                          u1147 2D4A  
                        u1237 2E54                          u1157 300E                          u1247 2E5E  
                        u1167 3076                          _LATD 04C1                          u1257 2E72  
                        u1177 308A                          u1267 2E80                          u1187 2F02  
                        u1277 2E8A                          u1197 2F14                          u1287 31F6  
                        _main 2C74              __end_of_CCP1_ISR 2EF2                          start 0102  
             ___fldiv@new_exp 0514                 ?_CURSOR_ONOFF 0501                  ___param_bank 0000  
             ??_ENVIA_LCD_CMD 0504              __end_of_LCD_INIT 30A4              __end_of_LEER_LCD 2E9C  
              ?_splash_screen 0501                 ___fltol@sign1 050B                         ?_main 0501  
             __end_of___fldiv 2B34                         _CCPR1 0340               __end_of___fltol 2E3A  
                       _T1CLK 0321                         _T1CON 031E               __end_of___lwdiv 2F98  
             __end_of___lwmod 3066                         i2l232 2EBC                         _OSCEN 00B3  
                       _TMR1H 031D                         _TMR1L 031C                         _PORTD 04D1  
                       _TRISD 04C9                   ?_POS_CURSOR 0506   __end_of_LCD_ESCRIBE_VAR_INT 28AC  
                       tablat 04F5                         status 04D8                ??_CURSOR_ONOFF 0506  
             __initialization 31A8                  __end_of_main 2D80     LCD_ESCRIBE_VAR_INT@decena 0518  
                      ??_main 051C                 __activetblptr 0003     LCD_ESCRIBE_VAR_INT@millar 0516  
   LCD_ESCRIBE_VAR_INT@numero 050F     LCD_ESCRIBE_VAR_INT@unidad 0519                        _ANSELD 0418  
                      i2l1510 2ED4                        i2l1504 2EA4                        _OSCFRQ 00B1  
            __end_of___xxtofl 2C74               ??_splash_screen 050A                     ??___fldiv 050B  
        __end_of_ENVIA_NIBBLE 3200                     ??___fltol 0507                     ??___lwdiv 050C  
                   ??___lwmod 0507                        _estado 0524                        clear_0 31AE  
                      isa$std 0001                        _tiempo 051E                        _strlen 317C  
                   ?_CCP1_ISR 0501                  __mediumconst 0000                        tblptrh 04F7  
                      tblptrl 04F6                        tblptru 04F8                  ??_BORRAR_LCD 0506  
                ___xxtofl@arg 050D                     ?_LCD_INIT 0501                  ___xxtofl@exp 050C  
                ___xxtofl@val 0503                     ?_LEER_LCD 0501                    __accesstop 0560  
     __end_of__initialization 31C2                  ??_LCD_CONFIG 0506                 ___rparam_used 0001  
                ??_ENVIA_CHAR 0504                    ___fltol@f1 0503                __pcstackCOMRAM 0501  
              ivt0x8_undefint 0100            __end_of_BORRAR_LCD 3210                    ??_CCP1_ISR 0501  
            _ESCRIBE_MENSAJE2 30A4              ENVIA_LCD_CMD@aux 0505          __end_of_CURSOR_ONOFF 31E4  
          __end_of_LCD_CONFIG 2F46            __end_of_ENVIA_CHAR 317C    LCD_ESCRIBE_VAR_INT@centena 0517  
                  ??_LCD_INIT 0507                    ??_LEER_LCD 0503              ENVIA_NIBBLE@dato 0503  
                     IVTBASEH 045E                       IVTBASEL 045D                       IVTBASEU 045F  
                     ?_strlen 0503                 ??_DEFAULT_ISR 0503                     ?___xxtofl 0503  
                     _OSCCON1 00AD                  ??_POS_CURSOR 0507                       __Hparam 0000  
                     __Lparam 0000             __end_of_configuro 3114                       ___fldiv 28AC  
                     ___fltol 2D80                       ___lwdiv 2F46                       ___lwmod 3024  
                __psmallconst 2500         __end_of_ENVIA_LCD_CMD 3148                       __pcinit 31A8  
          __end_of_POS_CURSOR 2FE0                       __ramtop 2500                       __ptext0 2C74  
                     __ptext1 2FE0                       __ptext2 2F98                       __ptext3 30A4  
                     __ptext4 317C                       __ptext5 30DC                       __ptext6 3066  
                     __ptext7 2EF2                       __ptext8 31C8                       __ptext9 3200  
                  ??___xxtofl 0507                  _ENVIA_NIBBLE 31E4           __end_of_DEFAULT_ISR 3212  
        end_of_initialization 31C2                       postinc0 04EE                       strlen@a 0505  
                     strlen@s 0503             ESCRIBE_MENSAJE2@i 0509                 ___xxtofl@sign 050B  
                   _TRISAbits 04C6                     _TRISCbits 04C8                   ___fldiv@grs 0516  
                 ___fldiv@rem 050F                   _CCP1CONbits 0342      __end_of_ESCRIBE_MENSAJE2 30DC  
                _CURSOR_ONOFF 31C8            CURSOR_ONOFF@estado 0506         __end_of_splash_screen 3024  
                 _DEFAULT_ISR 3210                __end_of_strlen 31A8                 ??_CURSOR_HOME 0506  
         start_initialization 31A8                    ivt0x8_base 0008             ENVIA_LCD_CMD@dato 0504  
 LCD_ESCRIBE_VAR_INT@d_millar 0515                      ??_strlen 0505                     ___fldiv@a 0507  
                   ___fldiv@b 0503                   __pbssCOMRAM 051E           __end_of_CURSOR_HOME 3208  
            ___lwdiv@dividend 0508                      ?___fldiv 0503                      ?___fltol 0503  
                    ?___lwdiv 0508                      ?___lwmod 0503                     _configuro 30DC  
                   _distancia 0522                   __smallconst 2500                      _CCP1_ISR 2E9C  
         _LCD_ESCRIBE_VAR_INT 252A              ___lwdiv@quotient 050C                      _LCD_INIT 3066  
                    _LEER_LCD 2E3A                      _LATAbits 04BE                      _LATDbits 04C1  
                    _PIE3bits 04A1          ?_LCD_ESCRIBE_VAR_INT 050F                      _PIR3bits 04B1  
              POS_CURSOR@fila 0507                    ?_configuro 0501        ESCRIBE_MENSAJE2@cadena 0506  
                 _CURSOR_HOME 3200                   _INTCON0bits 04D6      LCD_ESCRIBE_VAR_INT@punto 0512  
       ??_LCD_ESCRIBE_VAR_INT 0513                      __Hrparam 0000             ?_ESCRIBE_MENSAJE2 0506  
                    __Lrparam 0000            ??_ESCRIBE_MENSAJE2 0507                    _ANSELAbits 0400  
                  _ANSELCbits 0410                  ?_DEFAULT_ISR 0501                      ___xxtofl 2B34  
                    __pivt0x8 0008               ___lwdiv@divisor 050A               ___lwdiv@counter 050E  
                    __ptext10 3208                      __ptext11 3114                      __ptext20 31E4  
                    __ptext12 2B34                      __ptext21 2E9C                      __ptext13 2D80  
                    __ptext22 3210                      __ptext14 28AC                      __ptext15 252A  
                    __ptext16 3024                      __ptext17 2F46                      __ptext18 3148  
                    __ptext19 2E3A  LCD_ESCRIBE_VAR_INT@n_digitos 0511                    _BORRAR_LCD 3208  
                  _LCD_CONFIG 2EF2                    _ENVIA_CHAR 3148                      isa$xinst 0000  
               _ENVIA_LCD_CMD 3114                   ??_configuro 0508                      intlevel2 0000  
            ___lwmod@dividend 0503                ?_ENVIA_LCD_CMD 0501               ___lwmod@divisor 0505  
             ___lwmod@counter 0507           ESCRIBE_MENSAJE2@tam 0508                   ?_BORRAR_LCD 0501  
               ?_ENVIA_NIBBLE 0501                    _POS_CURSOR 2F98                   ?_LCD_CONFIG 0501  
                 ?_ENVIA_CHAR 0501             POS_CURSOR@columna 0506  
