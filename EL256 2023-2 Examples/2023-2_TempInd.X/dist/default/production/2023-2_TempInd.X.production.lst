

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Thu Nov 09 22:46:34 2023

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F57Q43
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1
    22                           	psect	text13,global,reloc=2,class=CODE,delta=1
    23                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text16,global,reloc=2,class=CODE,delta=1
    26                           	psect	text17,global,reloc=2,class=CODE,delta=1
    27                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text19,global,reloc=2,class=CODE,delta=1
    29                           	psect	text20,global,reloc=2,class=CODE,delta=1
    30                           	psect	text21,global,reloc=2,class=CODE,delta=1
    31                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    32                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    33                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    34   000000                     
    35                           ; Generated 17/10/2023 GMT
    36                           ; 
    37                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    38                           ; All rights reserved.
    39                           ; 
    40                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    41                           ; 
    42                           ; Redistribution and use in source and binary forms, with or without modification, are
    43                           ; permitted provided that the following conditions are met:
    44                           ; 
    45                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    46                           ;        conditions and the following disclaimer.
    47                           ; 
    48                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    49                           ;        of conditions and the following disclaimer in the documentation and/or other
    50                           ;        materials provided with the distribution. Publication is not required when
    51                           ;        this file is used in an embedded application.
    52                           ; 
    53                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    54                           ;        software without specific prior written permission.
    55                           ; 
    56                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    57                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    58                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    59                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    60                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    61                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    62                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    63                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    64                           ; 
    65                           ; 
    66                           ; Code-generator required, PIC18F57Q43 Definitions
    67                           ; 
    68                           ; SFR Addresses
    69   000000                     _LATD	set	1217
    70   000000                     _OSCCON1	set	173
    71   000000                     _ANSELD	set	1048
    72   000000                     _LATDbits	set	1217
    73   000000                     _TRISD	set	1225
    74   000000                     _PORTD	set	1233
    75   000000                     _TABLAT	set	1269
    76   000000                     _TBLPTRL	set	1270
    77   000000                     _TBLPTRH	set	1271
    78   000000                     _TBLPTRU	set	1272
    79   000000                     _OSCFRQ	set	177
    80   000000                     _OSCEN	set	179
    81   000000                     _U1TXB	set	675
    82   000000                     _FVRCON	set	983
    83   000000                     _ADPCH	set	1004
    84   000000                     _ADCON0bits	set	1011
    85   000000                     _ADREF	set	1016
    86   000000                     _ADRESL	set	1002
    87   000000                     _ADRESH	set	1003
    88   000000                     _U1ERRIRbits	set	690
    89                           
    90                           	psect	smallconst
    91   002500                     __psmallconst:
    92                           	callstack 0
    93   002500  00                 	db	0
    94   002501                     STR_1:
    95   002501  54                 	db	84	;'T'
    96   002502  65                 	db	101	;'e'
    97   002503  6D                 	db	109	;'m'
    98   002504  70                 	db	112	;'p'
    99   002505  2E                 	db	46
   100   002506  20                 	db	32
   101   002507  49                 	db	73	;'I'
   102   002508  6E                 	db	110	;'n'
   103   002509  64                 	db	100	;'d'
   104   00250A  69                 	db	105	;'i'
   105   00250B  63                 	db	99	;'c'
   106   00250C  61                 	db	97	;'a'
   107   00250D  74                 	db	116	;'t'
   108   00250E  6F                 	db	111	;'o'
   109   00250F  72                 	db	114	;'r'
   110   002510  00                 	db	0
   111   002511                     STR_2:
   112   002511  56                 	db	86	;'V'
   113   002512  61                 	db	97	;'a'
   114   002513  6C                 	db	108	;'l'
   115   002514  75                 	db	117	;'u'
   116   002515  65                 	db	101	;'e'
   117   002516  3A                 	db	58	;':'
   118   002517  20                 	db	32
   119   002518  00                 	db	0
   120   002519                     STR_3:
   121   002519  43                 	db	67	;'C'
   122   00251A  20                 	db	32
   123   00251B  20                 	db	32
   124   00251C  20                 	db	32
   125   00251D  00                 	db	0
   126   00251E  00                 	db	0	; dummy byte at the end
   127   000000                     
   128                           ; #config settings
   129                           
   130                           	psect	cinit
   131   002D2C                     __pcinit:
   132                           	callstack 0
   133   002D2C                     start_initialization:
   134                           	callstack 0
   135   002D2C                     __initialization:
   136                           	callstack 0
   137                           
   138                           ; Clear objects allocated to COMRAM (4 bytes)
   139   002D2C  6A22               	clrf	(__pbssCOMRAM+3)& (0+255),c
   140   002D2E  6A21               	clrf	(__pbssCOMRAM+2)& (0+255),c
   141   002D30  6A20               	clrf	(__pbssCOMRAM+1)& (0+255),c
   142   002D32  6A1F               	clrf	__pbssCOMRAM& (0+255),c
   143   002D34                     end_of_initialization:
   144                           	callstack 0
   145   002D34                     __end_of__initialization:
   146                           	callstack 0
   147   002D34  0100               	movlb	0
   148   002D36  EF54  F013         	goto	_main	;jump to C main() function
   149                           
   150                           	psect	bssCOMRAM
   151   00051F                     __pbssCOMRAM:
   152                           	callstack 0
   153   00051F                     _const_gain:
   154                           	callstack 0
   155   00051F                     	ds	2
   156   000521                     _const_offset:
   157                           	callstack 0
   158   000521                     	ds	2
   159                           
   160                           	psect	cstackCOMRAM
   161   000501                     __pcstackCOMRAM:
   162                           	callstack 0
   163   000501                     ??_get_DIA_values:
   164   000501                     ?_strlen:
   165                           	callstack 0
   166   000501                     ?_tomamuestra_ADC:
   167                           	callstack 0
   168   000501                     ?___lwmod:
   169                           	callstack 0
   170   000501                     ?___tmul:
   171                           	callstack 0
   172   000501                     ?___atdiv:
   173                           	callstack 0
   174   000501                     ENVIA_NIBBLE@dato:
   175                           	callstack 0
   176   000501                     LEER_LCD@aux:
   177                           	callstack 0
   178   000501                     strlen@s:
   179                           	callstack 0
   180   000501                     ___lwmod@dividend:
   181                           	callstack 0
   182   000501                     ___tmul@multiplier:
   183                           	callstack 0
   184   000501                     ___atdiv@dividend:
   185                           	callstack 0
   186                           
   187                           ; 3 bytes @ 0x0
   188   000501                     	ds	1
   189   000502                     ENVIA_CHAR@dato:
   190                           	callstack 0
   191   000502                     ENVIA_LCD_CMD@dato:
   192                           	callstack 0
   193                           
   194                           ; 1 bytes @ 0x1
   195   000502                     	ds	1
   196   000503                     ??_tomamuestra_ADC:
   197   000503                     ENVIA_CHAR@aux:
   198                           	callstack 0
   199   000503                     ENVIA_LCD_CMD@aux:
   200                           	callstack 0
   201   000503                     get_DIA_values@TSHR1H:
   202                           	callstack 0
   203   000503                     strlen@a:
   204                           	callstack 0
   205   000503                     ___lwmod@divisor:
   206                           	callstack 0
   207                           
   208                           ; 2 bytes @ 0x2
   209   000503                     	ds	1
   210   000504                     ??_LCD_CONFIG:
   211   000504                     POS_CURSOR@columna:
   212                           	callstack 0
   213   000504                     CURSOR_ONOFF@estado:
   214                           	callstack 0
   215   000504                     ESCRIBE_MENSAJE2@cadena:
   216                           	callstack 0
   217   000504                     get_DIA_values@TSHR1L:
   218                           	callstack 0
   219   000504                     ___tmul@multiplicand:
   220                           	callstack 0
   221   000504                     ___atdiv@divisor:
   222                           	callstack 0
   223                           
   224                           ; 3 bytes @ 0x3
   225   000504                     	ds	1
   226   000505                     ??_ESCRIBE_MENSAJE2:
   227   000505                     ??_LCD_INIT:
   228   000505                     POS_CURSOR@fila:
   229                           	callstack 0
   230   000505                     tomamuestra_ADC@canal:
   231                           	callstack 0
   232   000505                     get_DIA_values@TSHR3H:
   233                           	callstack 0
   234   000505                     ___lwmod@counter:
   235                           	callstack 0
   236                           
   237                           ; 1 bytes @ 0x4
   238   000505                     	ds	1
   239   000506                     ?___lwdiv:
   240                           	callstack 0
   241   000506                     ESCRIBE_MENSAJE2@tam:
   242                           	callstack 0
   243   000506                     get_DIA_values@TSHR3L:
   244                           	callstack 0
   245   000506                     ___lwdiv@dividend:
   246                           	callstack 0
   247                           
   248                           ; 2 bytes @ 0x5
   249   000506                     	ds	1
   250   000507                     ESCRIBE_MENSAJE2@i:
   251                           	callstack 0
   252   000507                     ___atdiv@counter:
   253                           	callstack 0
   254   000507                     ___tmul@product:
   255                           	callstack 0
   256                           
   257                           ; 3 bytes @ 0x6
   258   000507                     	ds	1
   259   000508                     ___atdiv@sign:
   260                           	callstack 0
   261   000508                     ___lwdiv@divisor:
   262                           	callstack 0
   263                           
   264                           ; 2 bytes @ 0x7
   265   000508                     	ds	1
   266   000509                     ___atdiv@quotient:
   267                           	callstack 0
   268                           
   269                           ; 3 bytes @ 0x8
   270   000509                     	ds	1
   271   00050A                     ___lwdiv@quotient:
   272                           	callstack 0
   273                           
   274                           ; 2 bytes @ 0x9
   275   00050A                     	ds	2
   276   00050C                     ___lwdiv@counter:
   277                           	callstack 0
   278                           
   279                           ; 1 bytes @ 0xB
   280   00050C                     	ds	1
   281   00050D                     LCD_ESCRIBE_VAR_INT@numero:
   282                           	callstack 0
   283                           
   284                           ; 2 bytes @ 0xC
   285   00050D                     	ds	2
   286   00050F                     LCD_ESCRIBE_VAR_INT@n_digitos:
   287                           	callstack 0
   288                           
   289                           ; 1 bytes @ 0xE
   290   00050F                     	ds	1
   291   000510                     ??_LCD_ESCRIBE_VAR_INT:
   292                           
   293                           ; 1 bytes @ 0xF
   294   000510                     	ds	2
   295   000512                     LCD_ESCRIBE_VAR_INT@d_millar:
   296                           	callstack 0
   297                           
   298                           ; 1 bytes @ 0x11
   299   000512                     	ds	1
   300   000513                     LCD_ESCRIBE_VAR_INT@millar:
   301                           	callstack 0
   302                           
   303                           ; 1 bytes @ 0x12
   304   000513                     	ds	1
   305   000514                     LCD_ESCRIBE_VAR_INT@centena:
   306                           	callstack 0
   307                           
   308                           ; 1 bytes @ 0x13
   309   000514                     	ds	1
   310   000515                     LCD_ESCRIBE_VAR_INT@decena:
   311                           	callstack 0
   312                           
   313                           ; 1 bytes @ 0x14
   314   000515                     	ds	1
   315   000516                     LCD_ESCRIBE_VAR_INT@unidad:
   316                           	callstack 0
   317                           
   318                           ; 1 bytes @ 0x15
   319   000516                     	ds	1
   320   000517                     ??_main:
   321                           
   322                           ; 1 bytes @ 0x16
   323   000517                     	ds	3
   324   00051A                     main@lectura_ADC:
   325                           	callstack 0
   326                           
   327                           ; 2 bytes @ 0x19
   328   00051A                     	ds	2
   329   00051C                     main@temporal:
   330                           	callstack 0
   331                           
   332                           ; 3 bytes @ 0x1B
   333   00051C                     	ds	3
   334                           
   335 ;;
   336 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   337 ;;
   338 ;; *************** function _main *****************
   339 ;; Defined at:
   340 ;;		line 77 in file "maincode3.c"
   341 ;; Parameters:    Size  Location     Type
   342 ;;		None
   343 ;; Auto vars:     Size  Location     Type
   344 ;;  temporal        3   27[COMRAM] m
   345 ;;  lectura_ADC     2   25[COMRAM] unsigned int 
   346 ;; Return value:  Size  Location     Type
   347 ;;                  1    wreg      void 
   348 ;; Registers used:
   349 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   350 ;; Tracked objects:
   351 ;;		On entry : 0/0
   352 ;;		On exit  : 0/0
   353 ;;		Unchanged: 0/0
   354 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   355 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   356 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   357 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   358 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   359 ;;Total ram usage:        8 bytes
   360 ;; Hardware stack levels required when called: 5
   361 ;; This function calls:
   362 ;;		_ESCRIBE_MENSAJE2
   363 ;;		_LCD_CHAR_GRADO
   364 ;;		_LCD_ESCRIBE_VAR_INT
   365 ;;		_POS_CURSOR
   366 ;;		___atdiv
   367 ;;		___tmul
   368 ;;		_configuro
   369 ;;		_get_DIA_values
   370 ;;		_tomamuestra_ADC
   371 ;; This function is called by:
   372 ;;		Startup code after reset
   373 ;; This function uses a non-reentrant model
   374 ;;
   375                           
   376                           	psect	text0
   377   0026A8                     __ptext0:
   378                           	callstack 0
   379   0026A8                     _main:
   380                           	callstack 122
   381   0026A8                     
   382                           ;maincode3.c: 78:     configuro();
   383   0026A8  EC5B  F016         	call	_configuro	;wreg free
   384                           
   385                           ;maincode3.c: 79:     POS_CURSOR(1,0);
   386   0026AC  0E00               	movlw	0
   387   0026AE  6E04               	movwf	POS_CURSOR@columna^(0+1280),c
   388   0026B0  0E01               	movlw	1
   389   0026B2  EC4F  F014         	call	_POS_CURSOR
   390   0026B6                     
   391                           ;maincode3.c: 80:     ESCRIBE_MENSAJE2("Temp. Indicator");
   392   0026B6  0E01               	movlw	low STR_1
   393   0026B8  6E04               	movwf	ESCRIBE_MENSAJE2@cadena^(0+1280),c
   394   0026BA  ECB2  F015         	call	_ESCRIBE_MENSAJE2	;wreg free
   395   0026BE                     
   396                           ;maincode3.c: 81:     get_DIA_values();
   397   0026BE  EC5D  F015         	call	_get_DIA_values	;wreg free
   398   0026C2                     l1502:
   399                           
   400                           ;maincode3.c: 83:         unsigned int lectura_ADC;;maincode3.c: 84:         int24_t tem
      +                          poral;;maincode3.c: 92:         lectura_ADC = tomamuestra_ADC(0x3C);
   401   0026C2  0E3C               	movlw	60
   402   0026C4  EC72  F016         	call	_tomamuestra_ADC
   403   0026C8  C501  F51A         	movff	?_tomamuestra_ADC,main@lectura_ADC
   404   0026CC  C502  F51B         	movff	?_tomamuestra_ADC+1,main@lectura_ADC+1
   405   0026D0                     
   406                           ;maincode3.c: 93:         temporal = (int24_t)(lectura_ADC) * const_gain;
   407   0026D0  C51A  F501         	movff	main@lectura_ADC,___tmul@multiplier
   408   0026D4  C51B  F502         	movff	main@lectura_ADC+1,___tmul@multiplier+1
   409   0026D8  6A03               	clrf	(___tmul@multiplier+2)^(0+1280),c
   410   0026DA  C51F  F504         	movff	_const_gain,___tmul@multiplicand
   411   0026DE  C520  F505         	movff	_const_gain+1,___tmul@multiplicand+1
   412   0026E2  6A06               	clrf	(___tmul@multiplicand+2)^(0+1280),c
   413   0026E4  BE05               	btfsc	(___tmul@multiplicand+1)^(0+1280),7,c
   414   0026E6  0606               	decf	(___tmul@multiplicand+2)^(0+1280),f,c
   415   0026E8  EC31  F015         	call	___tmul	;wreg free
   416   0026EC  C501  F51C         	movff	?___tmul,main@temporal
   417   0026F0  C502  F51D         	movff	?___tmul+1,main@temporal+1
   418   0026F4  C503  F51E         	movff	?___tmul+2,main@temporal+2
   419   0026F8                     
   420                           ;maincode3.c: 94:         temporal = temporal / 256;
   421   0026F8  C51C  F501         	movff	main@temporal,___atdiv@dividend
   422   0026FC  C51D  F502         	movff	main@temporal+1,___atdiv@dividend+1
   423   002700  C51E  F503         	movff	main@temporal+2,___atdiv@dividend+2
   424   002704  0E00               	movlw	0
   425   002706  6E04               	movwf	___atdiv@divisor^(0+1280),c
   426   002708  0E01               	movlw	1
   427   00270A  6E05               	movwf	(___atdiv@divisor+1)^(0+1280),c
   428   00270C  0E00               	movlw	0
   429   00270E  6E06               	movwf	(___atdiv@divisor+2)^(0+1280),c
   430   002710  ECDB  F013         	call	___atdiv	;wreg free
   431   002714  C501  F51C         	movff	?___atdiv,main@temporal
   432   002718  C502  F51D         	movff	?___atdiv+1,main@temporal+1
   433   00271C  C503  F51E         	movff	?___atdiv+2,main@temporal+2
   434   002720                     
   435                           ;maincode3.c: 95:         temporal = temporal + const_offset;
   436   002720  C521  F517         	movff	_const_offset,??_main
   437   002724  C522  F518         	movff	_const_offset+1,??_main+1
   438   002728  6A19               	clrf	(??_main+2)^(0+1280),c
   439   00272A  BE18               	btfsc	(??_main+1)^(0+1280),7,c
   440   00272C  6819               	setf	(??_main+2)^(0+1280),c
   441   00272E  501C               	movf	main@temporal^(0+1280),w,c
   442   002730  2417               	addwf	??_main^(0+1280),w,c
   443   002732  6E1C               	movwf	main@temporal^(0+1280),c
   444   002734  501D               	movf	(main@temporal+1)^(0+1280),w,c
   445   002736  2018               	addwfc	(??_main+1)^(0+1280),w,c
   446   002738  6E1D               	movwf	(main@temporal+1)^(0+1280),c
   447   00273A  501E               	movf	(main@temporal+2)^(0+1280),w,c
   448   00273C  2019               	addwfc	(??_main+2)^(0+1280),w,c
   449   00273E  6E1E               	movwf	(main@temporal+2)^(0+1280),c
   450   002740                     
   451                           ;maincode3.c: 96:         temporal = temporal / 10;
   452   002740  C51C  F501         	movff	main@temporal,___atdiv@dividend
   453   002744  C51D  F502         	movff	main@temporal+1,___atdiv@dividend+1
   454   002748  C51E  F503         	movff	main@temporal+2,___atdiv@dividend+2
   455   00274C  0E0A               	movlw	10
   456   00274E  6E04               	movwf	___atdiv@divisor^(0+1280),c
   457   002750  0E00               	movlw	0
   458   002752  6E05               	movwf	(___atdiv@divisor+1)^(0+1280),c
   459   002754  0E00               	movlw	0
   460   002756  6E06               	movwf	(___atdiv@divisor+2)^(0+1280),c
   461   002758  ECDB  F013         	call	___atdiv	;wreg free
   462   00275C  C501  F51C         	movff	?___atdiv,main@temporal
   463   002760  C502  F51D         	movff	?___atdiv+1,main@temporal+1
   464   002764  C503  F51E         	movff	?___atdiv+2,main@temporal+2
   465   002768                     
   466                           ;maincode3.c: 98:         POS_CURSOR(2,0);
   467   002768  0E00               	movlw	0
   468   00276A  6E04               	movwf	POS_CURSOR@columna^(0+1280),c
   469   00276C  0E02               	movlw	2
   470   00276E  EC4F  F014         	call	_POS_CURSOR
   471   002772                     
   472                           ;maincode3.c: 99:         ESCRIBE_MENSAJE2("Value: ");
   473   002772  0E11               	movlw	low STR_2
   474   002774  6E04               	movwf	ESCRIBE_MENSAJE2@cadena^(0+1280),c
   475   002776  ECB2  F015         	call	_ESCRIBE_MENSAJE2	;wreg free
   476   00277A                     
   477                           ;maincode3.c: 100:         LCD_ESCRIBE_VAR_INT(temporal,5);
   478   00277A  C51C  F50D         	movff	main@temporal,LCD_ESCRIBE_VAR_INT@numero
   479   00277E  C51D  F50E         	movff	main@temporal+1,LCD_ESCRIBE_VAR_INT@numero+1
   480   002782  0E05               	movlw	5
   481   002784  6E0F               	movwf	LCD_ESCRIBE_VAR_INT@n_digitos^(0+1280),c
   482   002786  EC90  F012         	call	_LCD_ESCRIBE_VAR_INT	;wreg free
   483   00278A                     
   484                           ;maincode3.c: 101:         LCD_CHAR_GRADO();
   485   00278A  ECA5  F016         	call	_LCD_CHAR_GRADO	;wreg free
   486   00278E                     
   487                           ;maincode3.c: 102:         ESCRIBE_MENSAJE2("C   ");
   488   00278E  0E19               	movlw	low STR_3
   489   002790  6E04               	movwf	ESCRIBE_MENSAJE2@cadena^(0+1280),c
   490   002792  ECB2  F015         	call	_ESCRIBE_MENSAJE2	;wreg free
   491   002796                     
   492                           ;maincode3.c: 103:         _delay((unsigned long)((100)*(32000000UL/4000.0)));
   493   002796  0E05               	movlw	5
   494   002798  6E18               	movwf	(??_main+1)^(0+1280),c
   495   00279A  0E0F               	movlw	15
   496   00279C  6E17               	movwf	??_main^(0+1280),c
   497   00279E  0EF1               	movlw	241
   498   0027A0                     u567:
   499   0027A0  2EE8               	decfsz	wreg,f,c
   500   0027A2  D7FE               	bra	u567
   501   0027A4  2E17               	decfsz	??_main^(0+1280),f,c
   502   0027A6  D7FC               	bra	u567
   503   0027A8  2E18               	decfsz	(??_main+1)^(0+1280),f,c
   504   0027AA  D7FA               	bra	u567
   505   0027AC  0000               	nop	
   506   0027AE  EF61  F013         	goto	l1502
   507   0027B2  EFFE  F0FF         	goto	start
   508   0027B6                     __end_of_main:
   509                           	callstack 0
   510                           
   511 ;; *************** function _tomamuestra_ADC *****************
   512 ;; Defined at:
   513 ;;		line 30 in file "maincode3.c"
   514 ;; Parameters:    Size  Location     Type
   515 ;;  canal           1    wreg     unsigned char 
   516 ;; Auto vars:     Size  Location     Type
   517 ;;  canal           1    4[COMRAM] unsigned char 
   518 ;; Return value:  Size  Location     Type
   519 ;;                  2    0[COMRAM] unsigned int 
   520 ;; Registers used:
   521 ;;		wreg, status,2, status,0
   522 ;; Tracked objects:
   523 ;;		On entry : 0/0
   524 ;;		On exit  : 0/0
   525 ;;		Unchanged: 0/0
   526 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   527 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   528 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   529 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   530 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   531 ;;Total ram usage:        5 bytes
   532 ;; Hardware stack levels used: 1
   533 ;; This function calls:
   534 ;;		Nothing
   535 ;; This function is called by:
   536 ;;		_main
   537 ;; This function uses a non-reentrant model
   538 ;;
   539                           
   540                           	psect	text1
   541   002CE4                     __ptext1:
   542                           	callstack 0
   543   002CE4                     _tomamuestra_ADC:
   544                           	callstack 126
   545                           
   546                           ;incstack = 0
   547                           ;tomamuestra_ADC@canal stored from wreg
   548   002CE4  6E05               	movwf	tomamuestra_ADC@canal^(0+1280),c
   549   002CE6                     
   550                           ;maincode3.c: 31:     ADPCH = canal;
   551   002CE6  C505  F3EC         	movff	tomamuestra_ADC@canal,1004	;volatile
   552   002CEA                     
   553                           ;maincode3.c: 32:     ADCON0bits.GO = 1;
   554   002CEA  0103               	movlb	3	; () banked
   555   002CEC  81F3               	bsf	243,0,b	;volatile
   556   002CEE                     l190:
   557                           
   558                           ; BSR set to: 3
   559   002CEE  B1F3               	btfsc	243,0,b	;volatile
   560   002CF0  EF7C  F016         	goto	u471
   561   002CF4  EF7E  F016         	goto	u470
   562   002CF8                     u471:
   563   002CF8  EF77  F016         	goto	l190
   564   002CFC                     u470:
   565   002CFC                     
   566                           ; BSR set to: 3
   567                           ;maincode3.c: 34:     return (ADRESH << 8) + ADRESL;
   568   002CFC  51EB               	movf	235,w,b	;volatile
   569   002CFE  6E04               	movwf	(??_tomamuestra_ADC+1)^(0+1280),c
   570   002D00  6A03               	clrf	??_tomamuestra_ADC^(0+1280),c
   571   002D02  51EA               	movf	234,w,b	;volatile
   572   002D04  2403               	addwf	??_tomamuestra_ADC^(0+1280),w,c
   573   002D06  6E01               	movwf	?_tomamuestra_ADC^(0+1280),c
   574   002D08  0E00               	movlw	0
   575   002D0A  2004               	addwfc	(??_tomamuestra_ADC+1)^(0+1280),w,c
   576   002D0C  6E02               	movwf	(?_tomamuestra_ADC+1)^(0+1280),c
   577   002D0E                     
   578                           ; BSR set to: 3
   579   002D0E  0012               	return		;funcret
   580   002D10                     __end_of_tomamuestra_ADC:
   581                           	callstack 0
   582                           
   583 ;; *************** function _get_DIA_values *****************
   584 ;; Defined at:
   585 ;;		line 37 in file "maincode3.c"
   586 ;; Parameters:    Size  Location     Type
   587 ;;		None
   588 ;; Auto vars:     Size  Location     Type
   589 ;;  TSHR3L          1    5[COMRAM] unsigned char 
   590 ;;  TSHR3H          1    4[COMRAM] unsigned char 
   591 ;;  TSHR1L          1    3[COMRAM] unsigned char 
   592 ;;  TSHR1H          1    2[COMRAM] unsigned char 
   593 ;; Return value:  Size  Location     Type
   594 ;;                  1    wreg      void 
   595 ;; Registers used:
   596 ;;		wreg, status,2, status,0
   597 ;; Tracked objects:
   598 ;;		On entry : 0/0
   599 ;;		On exit  : 0/0
   600 ;;		Unchanged: 0/0
   601 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   602 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   603 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   604 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   605 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   606 ;;Total ram usage:        6 bytes
   607 ;; Hardware stack levels used: 1
   608 ;; This function calls:
   609 ;;		Nothing
   610 ;; This function is called by:
   611 ;;		_main
   612 ;; This function uses a non-reentrant model
   613 ;;
   614                           
   615                           	psect	text2
   616   002ABA                     __ptext2:
   617                           	callstack 0
   618   002ABA                     _get_DIA_values:
   619                           	callstack 126
   620   002ABA                     
   621                           ;maincode3.c: 38:     unsigned char TSHR1H, TSHR1L, TSHR3H, TSHR3L;;maincode3.c: 39:    
      +                           TBLPTRU = 0x2C;
   622   002ABA  0E2C               	movlw	44
   623   002ABC  6EF8               	movwf	248,c	;volatile
   624                           
   625                           ;maincode3.c: 40:     TBLPTRH = 0x00;
   626   002ABE  0E00               	movlw	0
   627   002AC0  6EF7               	movwf	247,c	;volatile
   628                           
   629                           ;maincode3.c: 41:     TBLPTRL = 0x2A;
   630   002AC2  0E2A               	movlw	42
   631   002AC4  6EF6               	movwf	246,c	;volatile
   632   002AC6  0009               	tblrd		*+	;# 
   633   002AC8                     
   634                           ;maincode3.c: 43:     TSHR1L = TABLAT;
   635   002AC8  C4F5 F504          	movff	tablat,get_DIA_values@TSHR1L	;volatile
   636   002ACC  0008               	tblrd		*	;# 
   637   002ACE                     
   638                           ;maincode3.c: 45:     TSHR1H = TABLAT;
   639   002ACE  C4F5 F503          	movff	tablat,get_DIA_values@TSHR1H	;volatile
   640   002AD2                     
   641                           ;maincode3.c: 46:     const_gain = ((TSHR1H << 8) + TSHR1L);
   642   002AD2  5003               	movf	get_DIA_values@TSHR1H^(0+1280),w,c
   643   002AD4  6E02               	movwf	(??_get_DIA_values+1)^(0+1280),c
   644   002AD6  6A01               	clrf	??_get_DIA_values^(0+1280),c
   645   002AD8  5004               	movf	get_DIA_values@TSHR1L^(0+1280),w,c
   646   002ADA  2401               	addwf	??_get_DIA_values^(0+1280),w,c
   647   002ADC  6E1F               	movwf	_const_gain^(0+1280),c
   648   002ADE  0E00               	movlw	0
   649   002AE0  2002               	addwfc	(??_get_DIA_values+1)^(0+1280),w,c
   650   002AE2  6E20               	movwf	(_const_gain+1)^(0+1280),c
   651   002AE4                     
   652                           ;maincode3.c: 47:     TBLPTRU = 0x2C;
   653   002AE4  0E2C               	movlw	44
   654   002AE6  6EF8               	movwf	248,c	;volatile
   655   002AE8                     
   656                           ;maincode3.c: 48:     TBLPTRH = 0x00;
   657   002AE8  0E00               	movlw	0
   658   002AEA  6EF7               	movwf	247,c	;volatile
   659   002AEC                     
   660                           ;maincode3.c: 49:     TBLPTRL = 0x2E;
   661   002AEC  0E2E               	movlw	46
   662   002AEE  6EF6               	movwf	246,c	;volatile
   663   002AF0  0009               	tblrd		*+	;# 
   664   002AF2                     
   665                           ;maincode3.c: 51:     TSHR3L = TABLAT;
   666   002AF2  C4F5 F506          	movff	tablat,get_DIA_values@TSHR3L	;volatile
   667   002AF6  0008               	tblrd		*	;# 
   668   002AF8                     
   669                           ;maincode3.c: 53:     TSHR3H = TABLAT;
   670   002AF8  C4F5 F505          	movff	tablat,get_DIA_values@TSHR3H	;volatile
   671                           
   672                           ;maincode3.c: 54:     const_offset = ((TSHR3H << 8) + TSHR3L);
   673   002AFC  5005               	movf	get_DIA_values@TSHR3H^(0+1280),w,c
   674   002AFE  6E02               	movwf	(??_get_DIA_values+1)^(0+1280),c
   675   002B00  6A01               	clrf	??_get_DIA_values^(0+1280),c
   676   002B02  5006               	movf	get_DIA_values@TSHR3L^(0+1280),w,c
   677   002B04  2401               	addwf	??_get_DIA_values^(0+1280),w,c
   678   002B06  6E21               	movwf	_const_offset^(0+1280),c
   679   002B08  0E00               	movlw	0
   680   002B0A  2002               	addwfc	(??_get_DIA_values+1)^(0+1280),w,c
   681   002B0C  6E22               	movwf	(_const_offset+1)^(0+1280),c
   682   002B0E  0012               	return		;funcret
   683   002B10                     __end_of_get_DIA_values:
   684                           	callstack 0
   685                           
   686 ;; *************** function _configuro *****************
   687 ;; Defined at:
   688 ;;		line 9 in file "maincode3.c"
   689 ;; Parameters:    Size  Location     Type
   690 ;;		None
   691 ;; Auto vars:     Size  Location     Type
   692 ;;		None
   693 ;; Return value:  Size  Location     Type
   694 ;;                  1    wreg      void 
   695 ;; Registers used:
   696 ;;		wreg, status,2, status,0, cstack
   697 ;; Tracked objects:
   698 ;;		On entry : 0/0
   699 ;;		On exit  : 0/0
   700 ;;		Unchanged: 0/0
   701 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   702 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   703 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   704 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   705 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   706 ;;Total ram usage:        0 bytes
   707 ;; Hardware stack levels used: 1
   708 ;; Hardware stack levels required when called: 4
   709 ;; This function calls:
   710 ;;		_LCD_INIT
   711 ;; This function is called by:
   712 ;;		_main
   713 ;; This function uses a non-reentrant model
   714 ;;
   715                           
   716                           	psect	text3
   717   002CB6                     __ptext3:
   718                           	callstack 0
   719   002CB6                     _configuro:
   720                           	callstack 122
   721   002CB6                     
   722                           ;maincode3.c: 11:     OSCCON1 = 0x60;
   723   002CB6  0E60               	movlw	96
   724   002CB8  0100               	movlb	0	; () banked
   725   002CBA  6FAD               	movwf	173,b	;volatile
   726                           
   727                           ;maincode3.c: 12:     OSCFRQ = 0x06;
   728   002CBC  0E06               	movlw	6
   729   002CBE  6FB1               	movwf	177,b	;volatile
   730                           
   731                           ;maincode3.c: 13:     OSCEN = 0x40;
   732   002CC0  0E40               	movlw	64
   733   002CC2  6FB3               	movwf	179,b	;volatile
   734                           
   735                           ;maincode3.c: 15:     ADCON0bits.ADFM = 1;
   736   002CC4  0103               	movlb	3	; () banked
   737   002CC6  51F3               	movf	243,w,b	;volatile
   738   002CC8  0BF3               	andlw	-13
   739   002CCA  0904               	iorlw	4
   740   002CCC  6FF3               	movwf	243,b	;volatile
   741   002CCE                     
   742                           ; BSR set to: 3
   743                           ;maincode3.c: 16:     ADCON0bits.CS = 1;
   744   002CCE  89F3               	bsf	243,4,b	;volatile
   745                           
   746                           ;maincode3.c: 17:     ADPCH = 0x3C;
   747   002CD0  0E3C               	movlw	60
   748   002CD2  6FEC               	movwf	236,b	;volatile
   749                           
   750                           ;maincode3.c: 18:     ADREF = 0x03;
   751   002CD4  0E03               	movlw	3
   752   002CD6  6FF8               	movwf	248,b	;volatile
   753                           
   754                           ;maincode3.c: 19:     FVRCON = 0xB2;
   755   002CD8  0EB2               	movlw	178
   756   002CDA  6FD7               	movwf	215,b	;volatile
   757   002CDC                     
   758                           ; BSR set to: 3
   759                           ;maincode3.c: 20:     ADCON0bits.ADON = 1;
   760   002CDC  8FF3               	bsf	243,7,b	;volatile
   761   002CDE                     
   762                           ; BSR set to: 3
   763                           ;maincode3.c: 22:     LCD_INIT();
   764   002CDE  ECD4  F015         	call	_LCD_INIT	;wreg free
   765   002CE2  0012               	return		;funcret
   766   002CE4                     __end_of_configuro:
   767                           	callstack 0
   768                           
   769 ;; *************** function _LCD_INIT *****************
   770 ;; Defined at:
   771 ;;		line 192 in file "LCD.c"
   772 ;; Parameters:    Size  Location     Type
   773 ;;		None
   774 ;; Auto vars:     Size  Location     Type
   775 ;;		None
   776 ;; Return value:  Size  Location     Type
   777 ;;                  1    wreg      void 
   778 ;; Registers used:
   779 ;;		wreg, status,2, status,0, cstack
   780 ;; Tracked objects:
   781 ;;		On entry : 0/0
   782 ;;		On exit  : 0/0
   783 ;;		Unchanged: 0/0
   784 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   785 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   786 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   787 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   788 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   789 ;;Total ram usage:        1 bytes
   790 ;; Hardware stack levels used: 1
   791 ;; Hardware stack levels required when called: 3
   792 ;; This function calls:
   793 ;;		_BORRAR_LCD
   794 ;;		_CURSOR_HOME
   795 ;;		_CURSOR_ONOFF
   796 ;;		_LCD_CONFIG
   797 ;; This function is called by:
   798 ;;		_configuro
   799 ;; This function uses a non-reentrant model
   800 ;;
   801                           
   802                           	psect	text4
   803   002BA8                     __ptext4:
   804                           	callstack 0
   805   002BA8                     _LCD_INIT:
   806                           	callstack 122
   807   002BA8                     
   808                           ;LCD.c: 193:     TRISD = 0x00;
   809   002BA8  0E00               	movlw	0
   810   002BAA  6EC9               	movwf	201,c	;volatile
   811                           
   812                           ;LCD.c: 194:     ANSELD = 0x00;
   813   002BAC  0E00               	movlw	0
   814   002BAE  0104               	movlb	4	; () banked
   815   002BB0  6F18               	movwf	24,b	;volatile
   816   002BB2                     
   817                           ; BSR set to: 4
   818                           ;LCD.c: 195:     _delay((unsigned long)((15)*(32000000UL/4000.0)));
   819   002BB2  0E9C               	movlw	156
   820   002BB4  6E05               	movwf	??_LCD_INIT^(0+1280),c
   821   002BB6  0ED7               	movlw	215
   822   002BB8                     u577:
   823   002BB8  2EE8               	decfsz	wreg,f,c
   824   002BBA  D7FE               	bra	u577
   825   002BBC  2E05               	decfsz	??_LCD_INIT^(0+1280),f,c
   826   002BBE  D7FC               	bra	u577
   827   002BC0  0000               	nop	
   828   002BC2                     
   829                           ;LCD.c: 196:     LCD_CONFIG();
   830   002BC2  EC88  F015         	call	_LCD_CONFIG	;wreg free
   831   002BC6                     
   832                           ;LCD.c: 197:     _delay((unsigned long)((15)*(32000000UL/4000.0)));
   833   002BC6  0E9C               	movlw	156
   834   002BC8  6E05               	movwf	??_LCD_INIT^(0+1280),c
   835   002BCA  0ED7               	movlw	215
   836   002BCC                     u587:
   837   002BCC  2EE8               	decfsz	wreg,f,c
   838   002BCE  D7FE               	bra	u587
   839   002BD0  2E05               	decfsz	??_LCD_INIT^(0+1280),f,c
   840   002BD2  D7FC               	bra	u587
   841   002BD4  0000               	nop	
   842   002BD6                     
   843                           ;LCD.c: 198:     BORRAR_LCD();
   844   002BD6  ECA1  F016         	call	_BORRAR_LCD	;wreg free
   845   002BDA                     
   846                           ;LCD.c: 199:     CURSOR_HOME();
   847   002BDA  EC9D  F016         	call	_CURSOR_HOME	;wreg free
   848   002BDE                     
   849                           ;LCD.c: 200:     CURSOR_ONOFF(1);
   850   002BDE  0E01               	movlw	1
   851   002BE0  EC43  F016         	call	_CURSOR_ONOFF
   852   002BE4  0012               	return		;funcret
   853   002BE6                     __end_of_LCD_INIT:
   854                           	callstack 0
   855                           
   856 ;; *************** function _LCD_CONFIG *****************
   857 ;; Defined at:
   858 ;;		line 109 in file "LCD.c"
   859 ;; Parameters:    Size  Location     Type
   860 ;;		None
   861 ;; Auto vars:     Size  Location     Type
   862 ;;		None
   863 ;; Return value:  Size  Location     Type
   864 ;;                  1    wreg      void 
   865 ;; Registers used:
   866 ;;		wreg, status,2, status,0, cstack
   867 ;; Tracked objects:
   868 ;;		On entry : 0/0
   869 ;;		On exit  : 0/0
   870 ;;		Unchanged: 0/0
   871 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   872 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   873 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   874 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   875 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   876 ;;Total ram usage:        1 bytes
   877 ;; Hardware stack levels used: 1
   878 ;; Hardware stack levels required when called: 2
   879 ;; This function calls:
   880 ;;		_ENVIA_LCD_CMD
   881 ;;		_ENVIA_NIBBLE
   882 ;; This function is called by:
   883 ;;		_LCD_INIT
   884 ;; This function uses a non-reentrant model
   885 ;;
   886                           
   887                           	psect	text5
   888   002B10                     __ptext5:
   889                           	callstack 0
   890   002B10                     _LCD_CONFIG:
   891                           	callstack 122
   892   002B10                     
   893                           ;LCD.c: 111:  LATDbits.LATD0 = 0;
   894   002B10  90C1               	bcf	193,0,c	;volatile
   895                           
   896                           ;LCD.c: 112:  LATDbits.LATD1 = 0;
   897   002B12  92C1               	bcf	193,1,c	;volatile
   898   002B14                     
   899                           ;LCD.c: 113:  ENVIA_NIBBLE(0x30);
   900   002B14  0E30               	movlw	48
   901   002B16  EC88  F016         	call	_ENVIA_NIBBLE
   902   002B1A                     
   903                           ;LCD.c: 114:     _delay((unsigned long)((2)*(32000000UL/4000.0)));
   904   002B1A  0E15               	movlw	21
   905   002B1C  6E04               	movwf	??_LCD_CONFIG^(0+1280),c
   906   002B1E  0EC6               	movlw	198
   907   002B20                     u597:
   908   002B20  2EE8               	decfsz	wreg,f,c
   909   002B22  D7FE               	bra	u597
   910   002B24  2E04               	decfsz	??_LCD_CONFIG^(0+1280),f,c
   911   002B26  D7FC               	bra	u597
   912   002B28  D000               	nop2	
   913   002B2A                     
   914                           ;LCD.c: 115:  ENVIA_NIBBLE(0x30);
   915   002B2A  0E30               	movlw	48
   916   002B2C  EC88  F016         	call	_ENVIA_NIBBLE
   917                           
   918                           ;LCD.c: 116:     _delay((unsigned long)((100)*(32000000UL/4000000.0)));
   919   002B30  0EA0               	movlw	160
   920   002B32                     u607:
   921   002B32  D000               	nop2	
   922   002B34  2EE8               	decfsz	wreg,f,c
   923   002B36  D7FD               	bra	u607
   924   002B38                     
   925                           ;LCD.c: 117:     ENVIA_NIBBLE(0x30);
   926   002B38  0E30               	movlw	48
   927   002B3A  EC88  F016         	call	_ENVIA_NIBBLE
   928   002B3E                     
   929                           ;LCD.c: 118:  ENVIA_NIBBLE(0x20);
   930   002B3E  0E20               	movlw	32
   931   002B40  EC88  F016         	call	_ENVIA_NIBBLE
   932   002B44                     
   933                           ;LCD.c: 119:  ENVIA_LCD_CMD(0x01);
   934   002B44  0E01               	movlw	1
   935   002B46  EC0F  F016         	call	_ENVIA_LCD_CMD
   936   002B4A                     
   937                           ;LCD.c: 120:  ENVIA_LCD_CMD(0x28);
   938   002B4A  0E28               	movlw	40
   939   002B4C  EC0F  F016         	call	_ENVIA_LCD_CMD
   940   002B50                     
   941                           ;LCD.c: 121:  ENVIA_LCD_CMD(0x0F);
   942   002B50  0E0F               	movlw	15
   943   002B52  EC0F  F016         	call	_ENVIA_LCD_CMD
   944   002B56                     
   945                           ;LCD.c: 122:  ENVIA_LCD_CMD(0x06);
   946   002B56  0E06               	movlw	6
   947   002B58  EC0F  F016         	call	_ENVIA_LCD_CMD
   948   002B5C                     
   949                           ;LCD.c: 123:  ENVIA_LCD_CMD(0x01);
   950   002B5C  0E01               	movlw	1
   951   002B5E  EC0F  F016         	call	_ENVIA_LCD_CMD
   952   002B62  0012               	return		;funcret
   953   002B64                     __end_of_LCD_CONFIG:
   954                           	callstack 0
   955                           
   956 ;; *************** function _CURSOR_ONOFF *****************
   957 ;; Defined at:
   958 ;;		line 62 in file "LCD.c"
   959 ;; Parameters:    Size  Location     Type
   960 ;;  estado          1    wreg     unsigned char 
   961 ;; Auto vars:     Size  Location     Type
   962 ;;  estado          1    3[COMRAM] unsigned char 
   963 ;; Return value:  Size  Location     Type
   964 ;;                  1    wreg      void 
   965 ;; Registers used:
   966 ;;		wreg, status,2, status,0, cstack
   967 ;; Tracked objects:
   968 ;;		On entry : 0/0
   969 ;;		On exit  : 0/0
   970 ;;		Unchanged: 0/0
   971 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   972 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   973 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   974 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   975 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   976 ;;Total ram usage:        1 bytes
   977 ;; Hardware stack levels used: 1
   978 ;; Hardware stack levels required when called: 2
   979 ;; This function calls:
   980 ;;		_ENVIA_LCD_CMD
   981 ;; This function is called by:
   982 ;;		_LCD_INIT
   983 ;; This function uses a non-reentrant model
   984 ;;
   985                           
   986                           	psect	text6
   987   002C86                     __ptext6:
   988                           	callstack 0
   989   002C86                     _CURSOR_ONOFF:
   990                           	callstack 122
   991                           
   992                           ;incstack = 0
   993                           ;CURSOR_ONOFF@estado stored from wreg
   994   002C86  6E04               	movwf	CURSOR_ONOFF@estado^(0+1280),c
   995   002C88                     
   996                           ;LCD.c: 62: void CURSOR_ONOFF(unsigned char estado);LCD.c: 63: {;LCD.c: 64:  if(estado =
      +                          = 0) ENVIA_LCD_CMD(0x0E);
   997   002C88  5004               	movf	CURSOR_ONOFF@estado^(0+1280),w,c
   998   002C8A  A4D8               	btfss	status,2,c
   999   002C8C  EF4A  F016         	goto	u21
  1000   002C90  EF4C  F016         	goto	u20
  1001   002C94                     u21:
  1002   002C94  EF4F  F016         	goto	l960
  1003   002C98                     u20:
  1004   002C98  0E0E               	movlw	14
  1005   002C9A  EC0F  F016         	call	_ENVIA_LCD_CMD
  1006   002C9E                     l960:
  1007                           
  1008                           ;LCD.c: 65:  if(estado == 1) ENVIA_LCD_CMD(0x0C);
  1009   002C9E  0404               	decf	CURSOR_ONOFF@estado^(0+1280),w,c
  1010   002CA0  A4D8               	btfss	status,2,c
  1011   002CA2  EF55  F016         	goto	u31
  1012   002CA6  EF57  F016         	goto	u30
  1013   002CAA                     u31:
  1014   002CAA  EF5A  F016         	goto	l62
  1015   002CAE                     u30:
  1016   002CAE  0E0C               	movlw	12
  1017   002CB0  EC0F  F016         	call	_ENVIA_LCD_CMD
  1018   002CB4                     l62:
  1019   002CB4  0012               	return		;funcret
  1020   002CB6                     __end_of_CURSOR_ONOFF:
  1021                           	callstack 0
  1022                           
  1023 ;; *************** function _CURSOR_HOME *****************
  1024 ;; Defined at:
  1025 ;;		line 37 in file "LCD.c"
  1026 ;; Parameters:    Size  Location     Type
  1027 ;;		None
  1028 ;; Auto vars:     Size  Location     Type
  1029 ;;		None
  1030 ;; Return value:  Size  Location     Type
  1031 ;;                  1    wreg      void 
  1032 ;; Registers used:
  1033 ;;		wreg, status,2, status,0, cstack
  1034 ;; Tracked objects:
  1035 ;;		On entry : 0/0
  1036 ;;		On exit  : 0/0
  1037 ;;		Unchanged: 0/0
  1038 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1039 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1040 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1041 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1042 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1043 ;;Total ram usage:        0 bytes
  1044 ;; Hardware stack levels used: 1
  1045 ;; Hardware stack levels required when called: 2
  1046 ;; This function calls:
  1047 ;;		_ENVIA_LCD_CMD
  1048 ;; This function is called by:
  1049 ;;		_LCD_INIT
  1050 ;; This function uses a non-reentrant model
  1051 ;;
  1052                           
  1053                           	psect	text7
  1054   002D3A                     __ptext7:
  1055                           	callstack 0
  1056   002D3A                     _CURSOR_HOME:
  1057                           	callstack 122
  1058   002D3A                     
  1059                           ;LCD.c: 39:  ENVIA_LCD_CMD(0x02);
  1060   002D3A  0E02               	movlw	2
  1061   002D3C  EC0F  F016         	call	_ENVIA_LCD_CMD
  1062   002D40  0012               	return		;funcret
  1063   002D42                     __end_of_CURSOR_HOME:
  1064                           	callstack 0
  1065                           
  1066 ;; *************** function _BORRAR_LCD *****************
  1067 ;; Defined at:
  1068 ;;		line 104 in file "LCD.c"
  1069 ;; Parameters:    Size  Location     Type
  1070 ;;		None
  1071 ;; Auto vars:     Size  Location     Type
  1072 ;;		None
  1073 ;; Return value:  Size  Location     Type
  1074 ;;                  1    wreg      void 
  1075 ;; Registers used:
  1076 ;;		wreg, status,2, status,0, cstack
  1077 ;; Tracked objects:
  1078 ;;		On entry : 0/0
  1079 ;;		On exit  : 0/0
  1080 ;;		Unchanged: 0/0
  1081 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1082 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1083 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1084 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1085 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1086 ;;Total ram usage:        0 bytes
  1087 ;; Hardware stack levels used: 1
  1088 ;; Hardware stack levels required when called: 2
  1089 ;; This function calls:
  1090 ;;		_ENVIA_LCD_CMD
  1091 ;; This function is called by:
  1092 ;;		_LCD_INIT
  1093 ;; This function uses a non-reentrant model
  1094 ;;
  1095                           
  1096                           	psect	text8
  1097   002D42                     __ptext8:
  1098                           	callstack 0
  1099   002D42                     _BORRAR_LCD:
  1100                           	callstack 122
  1101   002D42                     
  1102                           ;LCD.c: 106:  ENVIA_LCD_CMD(0x01);
  1103   002D42  0E01               	movlw	1
  1104   002D44  EC0F  F016         	call	_ENVIA_LCD_CMD
  1105   002D48  0012               	return		;funcret
  1106   002D4A                     __end_of_BORRAR_LCD:
  1107                           	callstack 0
  1108                           
  1109 ;; *************** function ___tmul *****************
  1110 ;; Defined at:
  1111 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\Umul24.c"
  1112 ;; Parameters:    Size  Location     Type
  1113 ;;  multiplier      3    0[COMRAM] unsigned um
  1114 ;;  multiplicand    3    3[COMRAM] unsigned um
  1115 ;; Auto vars:     Size  Location     Type
  1116 ;;  product         3    6[COMRAM] unsigned um
  1117 ;; Return value:  Size  Location     Type
  1118 ;;                  3    0[COMRAM] unsigned um
  1119 ;; Registers used:
  1120 ;;		wreg, status,2, status,0
  1121 ;; Tracked objects:
  1122 ;;		On entry : 0/0
  1123 ;;		On exit  : 0/0
  1124 ;;		Unchanged: 0/0
  1125 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1126 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1127 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1128 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1129 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1130 ;;Total ram usage:        9 bytes
  1131 ;; Hardware stack levels used: 1
  1132 ;; This function calls:
  1133 ;;		Nothing
  1134 ;; This function is called by:
  1135 ;;		_main
  1136 ;; This function uses a non-reentrant model
  1137 ;;
  1138                           
  1139                           	psect	text9
  1140   002A62                     __ptext9:
  1141                           	callstack 0
  1142   002A62                     ___tmul:
  1143                           	callstack 126
  1144   002A62  0E00               	movlw	0
  1145   002A64  6E07               	movwf	___tmul@product^(0+1280),c
  1146   002A66  0E00               	movlw	0
  1147   002A68  6E08               	movwf	(___tmul@product+1)^(0+1280),c
  1148   002A6A  0E00               	movlw	0
  1149   002A6C  6E09               	movwf	(___tmul@product+2)^(0+1280),c
  1150   002A6E                     l1446:
  1151   002A6E  A001               	btfss	___tmul@multiplier^(0+1280),0,c
  1152   002A70  EF3C  F015         	goto	u481
  1153   002A74  EF3E  F015         	goto	u480
  1154   002A78                     u481:
  1155   002A78  EF44  F015         	goto	l1450
  1156   002A7C                     u480:
  1157   002A7C  5004               	movf	___tmul@multiplicand^(0+1280),w,c
  1158   002A7E  2607               	addwf	___tmul@product^(0+1280),f,c
  1159   002A80  5005               	movf	(___tmul@multiplicand+1)^(0+1280),w,c
  1160   002A82  2208               	addwfc	(___tmul@product+1)^(0+1280),f,c
  1161   002A84  5006               	movf	(___tmul@multiplicand+2)^(0+1280),w,c
  1162   002A86  2209               	addwfc	(___tmul@product+2)^(0+1280),f,c
  1163   002A88                     l1450:
  1164   002A88  90D8               	bcf	status,0,c
  1165   002A8A  3604               	rlcf	___tmul@multiplicand^(0+1280),f,c
  1166   002A8C  3605               	rlcf	(___tmul@multiplicand+1)^(0+1280),f,c
  1167   002A8E  3606               	rlcf	(___tmul@multiplicand+2)^(0+1280),f,c
  1168   002A90  90D8               	bcf	status,0,c
  1169   002A92  3203               	rrcf	(___tmul@multiplier+2)^(0+1280),f,c
  1170   002A94  3202               	rrcf	(___tmul@multiplier+1)^(0+1280),f,c
  1171   002A96  3201               	rrcf	___tmul@multiplier^(0+1280),f,c
  1172   002A98  5001               	movf	___tmul@multiplier^(0+1280),w,c
  1173   002A9A  1002               	iorwf	(___tmul@multiplier+1)^(0+1280),w,c
  1174   002A9C  1003               	iorwf	(___tmul@multiplier+2)^(0+1280),w,c
  1175   002A9E  A4D8               	btfss	status,2,c
  1176   002AA0  EF54  F015         	goto	u491
  1177   002AA4  EF56  F015         	goto	u490
  1178   002AA8                     u491:
  1179   002AA8  EF37  F015         	goto	l1446
  1180   002AAC                     u490:
  1181   002AAC  C507  F501         	movff	___tmul@product,?___tmul
  1182   002AB0  C508  F502         	movff	___tmul@product+1,?___tmul+1
  1183   002AB4  C509  F503         	movff	___tmul@product+2,?___tmul+2
  1184   002AB8  0012               	return		;funcret
  1185   002ABA                     __end_of___tmul:
  1186                           	callstack 0
  1187                           
  1188 ;; *************** function ___atdiv *****************
  1189 ;; Defined at:
  1190 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\atdiv.c"
  1191 ;; Parameters:    Size  Location     Type
  1192 ;;  dividend        3    0[COMRAM] m
  1193 ;;  divisor         3    3[COMRAM] m
  1194 ;; Auto vars:     Size  Location     Type
  1195 ;;  quotient        3    8[COMRAM] m
  1196 ;;  sign            1    7[COMRAM] unsigned char 
  1197 ;;  counter         1    6[COMRAM] unsigned char 
  1198 ;; Return value:  Size  Location     Type
  1199 ;;                  3    0[COMRAM] m
  1200 ;; Registers used:
  1201 ;;		wreg, status,2, status,0
  1202 ;; Tracked objects:
  1203 ;;		On entry : 0/0
  1204 ;;		On exit  : 0/0
  1205 ;;		Unchanged: 0/0
  1206 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1207 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1208 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1209 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1210 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1211 ;;Total ram usage:       11 bytes
  1212 ;; Hardware stack levels used: 1
  1213 ;; This function calls:
  1214 ;;		Nothing
  1215 ;; This function is called by:
  1216 ;;		_main
  1217 ;; This function uses a non-reentrant model
  1218 ;;
  1219                           
  1220                           	psect	text10
  1221   0027B6                     __ptext10:
  1222                           	callstack 0
  1223   0027B6                     ___atdiv:
  1224                           	callstack 126
  1225   0027B6  0E00               	movlw	0
  1226   0027B8  6E08               	movwf	___atdiv@sign^(0+1280),c
  1227   0027BA  BE06               	btfsc	(___atdiv@divisor+2)^(0+1280),7,c
  1228   0027BC  EFE4  F013         	goto	u500
  1229   0027C0  EFE2  F013         	goto	u501
  1230   0027C4                     u501:
  1231   0027C4  EFEC  F013         	goto	l1462
  1232   0027C8                     u500:
  1233   0027C8  1E06               	comf	(___atdiv@divisor+2)^(0+1280),f,c
  1234   0027CA  1E05               	comf	(___atdiv@divisor+1)^(0+1280),f,c
  1235   0027CC  6C04               	negf	___atdiv@divisor^(0+1280),c
  1236   0027CE  0E00               	movlw	0
  1237   0027D0  2205               	addwfc	(___atdiv@divisor+1)^(0+1280),f,c
  1238   0027D2  2206               	addwfc	(___atdiv@divisor+2)^(0+1280),f,c
  1239   0027D4  0E01               	movlw	1
  1240   0027D6  6E08               	movwf	___atdiv@sign^(0+1280),c
  1241   0027D8                     l1462:
  1242   0027D8  BE03               	btfsc	(___atdiv@dividend+2)^(0+1280),7,c
  1243   0027DA  EFF3  F013         	goto	u510
  1244   0027DE  EFF1  F013         	goto	u511
  1245   0027E2                     u511:
  1246   0027E2  EFFB  F013         	goto	l1468
  1247   0027E6                     u510:
  1248   0027E6  1E03               	comf	(___atdiv@dividend+2)^(0+1280),f,c
  1249   0027E8  1E02               	comf	(___atdiv@dividend+1)^(0+1280),f,c
  1250   0027EA  6C01               	negf	___atdiv@dividend^(0+1280),c
  1251   0027EC  0E00               	movlw	0
  1252   0027EE  2202               	addwfc	(___atdiv@dividend+1)^(0+1280),f,c
  1253   0027F0  2203               	addwfc	(___atdiv@dividend+2)^(0+1280),f,c
  1254   0027F2  0E01               	movlw	1
  1255   0027F4  1A08               	xorwf	___atdiv@sign^(0+1280),f,c
  1256   0027F6                     l1468:
  1257   0027F6  0E00               	movlw	0
  1258   0027F8  6E09               	movwf	___atdiv@quotient^(0+1280),c
  1259   0027FA  0E00               	movlw	0
  1260   0027FC  6E0A               	movwf	(___atdiv@quotient+1)^(0+1280),c
  1261   0027FE  0E00               	movlw	0
  1262   002800  6E0B               	movwf	(___atdiv@quotient+2)^(0+1280),c
  1263   002802  5004               	movf	___atdiv@divisor^(0+1280),w,c
  1264   002804  1005               	iorwf	(___atdiv@divisor+1)^(0+1280),w,c
  1265   002806  1006               	iorwf	(___atdiv@divisor+2)^(0+1280),w,c
  1266   002808  B4D8               	btfsc	status,2,c
  1267   00280A  EF09  F014         	goto	u521
  1268   00280E  EF0B  F014         	goto	u520
  1269   002812                     u521:
  1270   002812  EF3A  F014         	goto	l1488
  1271   002816                     u520:
  1272   002816  0E01               	movlw	1
  1273   002818  6E07               	movwf	___atdiv@counter^(0+1280),c
  1274   00281A  EF14  F014         	goto	l1476
  1275   00281E                     l1474:
  1276   00281E  90D8               	bcf	status,0,c
  1277   002820  3604               	rlcf	___atdiv@divisor^(0+1280),f,c
  1278   002822  3605               	rlcf	(___atdiv@divisor+1)^(0+1280),f,c
  1279   002824  3606               	rlcf	(___atdiv@divisor+2)^(0+1280),f,c
  1280   002826  2A07               	incf	___atdiv@counter^(0+1280),f,c
  1281   002828                     l1476:
  1282   002828  AE06               	btfss	(___atdiv@divisor+2)^(0+1280),7,c
  1283   00282A  EF19  F014         	goto	u531
  1284   00282E  EF1B  F014         	goto	u530
  1285   002832                     u531:
  1286   002832  EF0F  F014         	goto	l1474
  1287   002836                     u530:
  1288   002836                     l1478:
  1289   002836  90D8               	bcf	status,0,c
  1290   002838  3609               	rlcf	___atdiv@quotient^(0+1280),f,c
  1291   00283A  360A               	rlcf	(___atdiv@quotient+1)^(0+1280),f,c
  1292   00283C  360B               	rlcf	(___atdiv@quotient+2)^(0+1280),f,c
  1293   00283E  5004               	movf	___atdiv@divisor^(0+1280),w,c
  1294   002840  5C01               	subwf	___atdiv@dividend^(0+1280),w,c
  1295   002842  5005               	movf	(___atdiv@divisor+1)^(0+1280),w,c
  1296   002844  5802               	subwfb	(___atdiv@dividend+1)^(0+1280),w,c
  1297   002846  5006               	movf	(___atdiv@divisor+2)^(0+1280),w,c
  1298   002848  5803               	subwfb	(___atdiv@dividend+2)^(0+1280),w,c
  1299   00284A  A0D8               	btfss	status,0,c
  1300   00284C  EF2A  F014         	goto	u541
  1301   002850  EF2C  F014         	goto	u540
  1302   002854                     u541:
  1303   002854  EF33  F014         	goto	l403
  1304   002858                     u540:
  1305   002858  5004               	movf	___atdiv@divisor^(0+1280),w,c
  1306   00285A  5E01               	subwf	___atdiv@dividend^(0+1280),f,c
  1307   00285C  5005               	movf	(___atdiv@divisor+1)^(0+1280),w,c
  1308   00285E  5A02               	subwfb	(___atdiv@dividend+1)^(0+1280),f,c
  1309   002860  5006               	movf	(___atdiv@divisor+2)^(0+1280),w,c
  1310   002862  5A03               	subwfb	(___atdiv@dividend+2)^(0+1280),f,c
  1311   002864  8009               	bsf	___atdiv@quotient^(0+1280),0,c
  1312   002866                     l403:
  1313   002866  90D8               	bcf	status,0,c
  1314   002868  3206               	rrcf	(___atdiv@divisor+2)^(0+1280),f,c
  1315   00286A  3205               	rrcf	(___atdiv@divisor+1)^(0+1280),f,c
  1316   00286C  3204               	rrcf	___atdiv@divisor^(0+1280),f,c
  1317   00286E  2E07               	decfsz	___atdiv@counter^(0+1280),f,c
  1318   002870  EF1B  F014         	goto	l1478
  1319   002874                     l1488:
  1320   002874  5008               	movf	___atdiv@sign^(0+1280),w,c
  1321   002876  B4D8               	btfsc	status,2,c
  1322   002878  EF40  F014         	goto	u551
  1323   00287C  EF42  F014         	goto	u550
  1324   002880                     u551:
  1325   002880  EF48  F014         	goto	l1492
  1326   002884                     u550:
  1327   002884  1E0B               	comf	(___atdiv@quotient+2)^(0+1280),f,c
  1328   002886  1E0A               	comf	(___atdiv@quotient+1)^(0+1280),f,c
  1329   002888  6C09               	negf	___atdiv@quotient^(0+1280),c
  1330   00288A  0E00               	movlw	0
  1331   00288C  220A               	addwfc	(___atdiv@quotient+1)^(0+1280),f,c
  1332   00288E  220B               	addwfc	(___atdiv@quotient+2)^(0+1280),f,c
  1333   002890                     l1492:
  1334   002890  C509  F501         	movff	___atdiv@quotient,?___atdiv
  1335   002894  C50A  F502         	movff	___atdiv@quotient+1,?___atdiv+1
  1336   002898  C50B  F503         	movff	___atdiv@quotient+2,?___atdiv+2
  1337   00289C  0012               	return		;funcret
  1338   00289E                     __end_of___atdiv:
  1339                           	callstack 0
  1340                           
  1341 ;; *************** function _POS_CURSOR *****************
  1342 ;; Defined at:
  1343 ;;		line 5 in file "LCD.c"
  1344 ;; Parameters:    Size  Location     Type
  1345 ;;  fila            1    wreg     unsigned char 
  1346 ;;  columna         1    3[COMRAM] unsigned char 
  1347 ;; Auto vars:     Size  Location     Type
  1348 ;;  fila            1    4[COMRAM] unsigned char 
  1349 ;; Return value:  Size  Location     Type
  1350 ;;                  1    wreg      void 
  1351 ;; Registers used:
  1352 ;;		wreg, status,2, status,0, cstack
  1353 ;; Tracked objects:
  1354 ;;		On entry : 0/0
  1355 ;;		On exit  : 0/0
  1356 ;;		Unchanged: 0/0
  1357 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1358 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1359 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1360 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1361 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1362 ;;Total ram usage:        2 bytes
  1363 ;; Hardware stack levels used: 1
  1364 ;; Hardware stack levels required when called: 2
  1365 ;; This function calls:
  1366 ;;		_ENVIA_LCD_CMD
  1367 ;; This function is called by:
  1368 ;;		_main
  1369 ;; This function uses a non-reentrant model
  1370 ;;
  1371                           
  1372                           	psect	text11
  1373   00289E                     __ptext11:
  1374                           	callstack 0
  1375   00289E                     _POS_CURSOR:
  1376                           	callstack 124
  1377                           
  1378                           ;incstack = 0
  1379                           ;POS_CURSOR@fila stored from wreg
  1380   00289E  6E05               	movwf	POS_CURSOR@fila^(0+1280),c
  1381   0028A0                     
  1382                           ;LCD.c: 5: void POS_CURSOR(unsigned char fila,unsigned char columna);LCD.c: 6: {;LCD.c: 
      +                          7:  if(fila == 1)
  1383   0028A0  0405               	decf	POS_CURSOR@fila^(0+1280),w,c
  1384   0028A2  A4D8               	btfss	status,2,c
  1385   0028A4  EF56  F014         	goto	u421
  1386   0028A8  EF58  F014         	goto	u420
  1387   0028AC                     u421:
  1388   0028AC  EF5E  F014         	goto	l1392
  1389   0028B0                     u420:
  1390   0028B0                     
  1391                           ;LCD.c: 8:  {;LCD.c: 9:   ENVIA_LCD_CMD(0x80+columna);
  1392   0028B0  5004               	movf	POS_CURSOR@columna^(0+1280),w,c
  1393   0028B2  0F80               	addlw	128
  1394   0028B4  EC0F  F016         	call	_ENVIA_LCD_CMD
  1395                           
  1396                           ;LCD.c: 10:  }
  1397   0028B8  EF8B  F014         	goto	l32
  1398   0028BC                     l1392:
  1399   0028BC  0E02               	movlw	2
  1400   0028BE  1805               	xorwf	POS_CURSOR@fila^(0+1280),w,c
  1401   0028C0  A4D8               	btfss	status,2,c
  1402   0028C2  EF65  F014         	goto	u431
  1403   0028C6  EF67  F014         	goto	u430
  1404   0028CA                     u431:
  1405   0028CA  EF6D  F014         	goto	l1396
  1406   0028CE                     u430:
  1407   0028CE                     
  1408                           ;LCD.c: 12:  {;LCD.c: 13:   ENVIA_LCD_CMD(0xC0+columna);
  1409   0028CE  5004               	movf	POS_CURSOR@columna^(0+1280),w,c
  1410   0028D0  0FC0               	addlw	192
  1411   0028D2  EC0F  F016         	call	_ENVIA_LCD_CMD
  1412                           
  1413                           ;LCD.c: 14:  }
  1414   0028D6  EF8B  F014         	goto	l32
  1415   0028DA                     l1396:
  1416   0028DA  0E03               	movlw	3
  1417   0028DC  1805               	xorwf	POS_CURSOR@fila^(0+1280),w,c
  1418   0028DE  A4D8               	btfss	status,2,c
  1419   0028E0  EF74  F014         	goto	u441
  1420   0028E4  EF76  F014         	goto	u440
  1421   0028E8                     u441:
  1422   0028E8  EF7C  F014         	goto	l1400
  1423   0028EC                     u440:
  1424   0028EC                     
  1425                           ;LCD.c: 16:  {;LCD.c: 17:   ENVIA_LCD_CMD(0x94+columna);
  1426   0028EC  5004               	movf	POS_CURSOR@columna^(0+1280),w,c
  1427   0028EE  0F94               	addlw	148
  1428   0028F0  EC0F  F016         	call	_ENVIA_LCD_CMD
  1429                           
  1430                           ;LCD.c: 18:  }
  1431   0028F4  EF8B  F014         	goto	l32
  1432   0028F8                     l1400:
  1433   0028F8  0E04               	movlw	4
  1434   0028FA  1805               	xorwf	POS_CURSOR@fila^(0+1280),w,c
  1435   0028FC  A4D8               	btfss	status,2,c
  1436   0028FE  EF83  F014         	goto	u451
  1437   002902  EF85  F014         	goto	u450
  1438   002906                     u451:
  1439   002906  EF8B  F014         	goto	l28
  1440   00290A                     u450:
  1441   00290A                     
  1442                           ;LCD.c: 20:  {;LCD.c: 21:   ENVIA_LCD_CMD(0xD4+columna);
  1443   00290A  5004               	movf	POS_CURSOR@columna^(0+1280),w,c
  1444   00290C  0FD4               	addlw	212
  1445   00290E  EC0F  F016         	call	_ENVIA_LCD_CMD
  1446   002912  EF8B  F014         	goto	l32
  1447   002916                     l28:
  1448   002916                     l32:
  1449   002916  0012               	return		;funcret
  1450   002918                     __end_of_POS_CURSOR:
  1451                           	callstack 0
  1452                           
  1453 ;; *************** function _ENVIA_LCD_CMD *****************
  1454 ;; Defined at:
  1455 ;;		line 136 in file "LCD.c"
  1456 ;; Parameters:    Size  Location     Type
  1457 ;;  dato            1    wreg     unsigned char 
  1458 ;; Auto vars:     Size  Location     Type
  1459 ;;  dato            1    1[COMRAM] unsigned char 
  1460 ;;  aux             1    2[COMRAM] unsigned char 
  1461 ;; Return value:  Size  Location     Type
  1462 ;;                  1    wreg      void 
  1463 ;; Registers used:
  1464 ;;		wreg, status,2, status,0, cstack
  1465 ;; Tracked objects:
  1466 ;;		On entry : 0/0
  1467 ;;		On exit  : 0/0
  1468 ;;		Unchanged: 0/0
  1469 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1470 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1471 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1472 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1473 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1474 ;;Total ram usage:        2 bytes
  1475 ;; Hardware stack levels used: 1
  1476 ;; Hardware stack levels required when called: 1
  1477 ;; This function calls:
  1478 ;;		_ENVIA_NIBBLE
  1479 ;;		_LEER_LCD
  1480 ;; This function is called by:
  1481 ;;		_POS_CURSOR
  1482 ;;		_CURSOR_HOME
  1483 ;;		_CURSOR_ONOFF
  1484 ;;		_BORRAR_LCD
  1485 ;;		_LCD_CONFIG
  1486 ;;		_BLINK_CURSOR
  1487 ;;		_DISPLAY_ONOFF
  1488 ;;		_CURSOR_SHIFTLEFT
  1489 ;;		_CURSOR_SHIFTRIGHT
  1490 ;;		_DISPLAY_SHIFTLEFT
  1491 ;;		_DISPLAY_SHIFTRIGHT
  1492 ;;		_GENERACARACTER
  1493 ;; This function uses a non-reentrant model
  1494 ;;
  1495                           
  1496                           	psect	text12
  1497   002C1E                     __ptext12:
  1498                           	callstack 0
  1499   002C1E                     _ENVIA_LCD_CMD:
  1500                           	callstack 122
  1501                           
  1502                           ;incstack = 0
  1503                           ;ENVIA_LCD_CMD@dato stored from wreg
  1504   002C1E  6E02               	movwf	ENVIA_LCD_CMD@dato^(0+1280),c
  1505   002C20                     
  1506                           ;LCD.c: 136: void ENVIA_LCD_CMD(unsigned char dato);LCD.c: 137: {;LCD.c: 138:  unsigned 
      +                          char aux;;LCD.c: 139:  LATDbits.LATD0 = 0;
  1507   002C20  90C1               	bcf	193,0,c	;volatile
  1508   002C22                     
  1509                           ;LCD.c: 140:  LEER_LCD();
  1510   002C22  ECC6  F014         	call	_LEER_LCD	;wreg free
  1511   002C26                     
  1512                           ;LCD.c: 141:  TRISD = 0b00000000;
  1513   002C26  0E00               	movlw	0
  1514   002C28  6EC9               	movwf	201,c	;volatile
  1515   002C2A                     
  1516                           ;LCD.c: 142:     _delay((unsigned long)((100)*(32000000UL/4000000.0)));
  1517   002C2A  0EA0               	movlw	160
  1518   002C2C                     u617:
  1519   002C2C  D000               	nop2	
  1520   002C2E  2EE8               	decfsz	wreg,f,c
  1521   002C30  D7FD               	bra	u617
  1522   002C32                     
  1523                           ;LCD.c: 143:     LATDbits.LATD1 = 0;
  1524   002C32  92C1               	bcf	193,1,c	;volatile
  1525   002C34                     
  1526                           ;LCD.c: 144:  LATDbits.LATD2 = 0;
  1527   002C34  94C1               	bcf	193,2,c	;volatile
  1528   002C36                     
  1529                           ;LCD.c: 145:  LATDbits.LATD0 = 0;
  1530   002C36  90C1               	bcf	193,0,c	;volatile
  1531   002C38                     
  1532                           ;LCD.c: 146:  aux = dato & 0xF0;
  1533   002C38  5002               	movf	ENVIA_LCD_CMD@dato^(0+1280),w,c
  1534   002C3A  0BF0               	andlw	240
  1535   002C3C  6E03               	movwf	ENVIA_LCD_CMD@aux^(0+1280),c
  1536   002C3E                     
  1537                           ;LCD.c: 147:  ENVIA_NIBBLE(aux);
  1538   002C3E  5003               	movf	ENVIA_LCD_CMD@aux^(0+1280),w,c
  1539   002C40  EC88  F016         	call	_ENVIA_NIBBLE
  1540   002C44                     
  1541                           ;LCD.c: 148:  aux = dato<<4;
  1542   002C44  3802               	swapf	ENVIA_LCD_CMD@dato^(0+1280),w,c
  1543   002C46  0BF0               	andlw	240
  1544   002C48  6E03               	movwf	ENVIA_LCD_CMD@aux^(0+1280),c
  1545   002C4A                     
  1546                           ;LCD.c: 149:  ENVIA_NIBBLE(aux);
  1547   002C4A  5003               	movf	ENVIA_LCD_CMD@aux^(0+1280),w,c
  1548   002C4C  EC88  F016         	call	_ENVIA_NIBBLE
  1549   002C50  0012               	return		;funcret
  1550   002C52                     __end_of_ENVIA_LCD_CMD:
  1551                           	callstack 0
  1552                           
  1553 ;; *************** function _LCD_ESCRIBE_VAR_INT *****************
  1554 ;; Defined at:
  1555 ;;		line 230 in file "LCD.c"
  1556 ;; Parameters:    Size  Location     Type
  1557 ;;  numero          2   12[COMRAM] unsigned int 
  1558 ;;  n_digitos       1   14[COMRAM] unsigned char 
  1559 ;; Auto vars:     Size  Location     Type
  1560 ;;  unidad          1   21[COMRAM] unsigned char 
  1561 ;;  decena          1   20[COMRAM] unsigned char 
  1562 ;;  centena         1   19[COMRAM] unsigned char 
  1563 ;;  millar          1   18[COMRAM] unsigned char 
  1564 ;;  d_millar        1   17[COMRAM] unsigned char 
  1565 ;; Return value:  Size  Location     Type
  1566 ;;                  1    wreg      void 
  1567 ;; Registers used:
  1568 ;;		wreg, status,2, status,0, cstack
  1569 ;; Tracked objects:
  1570 ;;		On entry : 0/0
  1571 ;;		On exit  : 0/0
  1572 ;;		Unchanged: 0/0
  1573 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1574 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1575 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1576 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1577 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1578 ;;Total ram usage:       10 bytes
  1579 ;; Hardware stack levels used: 1
  1580 ;; Hardware stack levels required when called: 2
  1581 ;; This function calls:
  1582 ;;		_ENVIA_CHAR
  1583 ;;		___lwdiv
  1584 ;;		___lwmod
  1585 ;; This function is called by:
  1586 ;;		_main
  1587 ;; This function uses a non-reentrant model
  1588 ;;
  1589                           
  1590                           	psect	text13
  1591   002520                     __ptext13:
  1592                           	callstack 0
  1593   002520                     _LCD_ESCRIBE_VAR_INT:
  1594                           	callstack 124
  1595   002520                     
  1596                           ;LCD.c: 231:     unsigned char d_millar, millar, centena, decena, unidad;;LCD.c: 232:   
      +                            d_millar = numero / 10000;
  1597   002520  C50D  F506         	movff	LCD_ESCRIBE_VAR_INT@numero,___lwdiv@dividend
  1598   002524  C50E  F507         	movff	LCD_ESCRIBE_VAR_INT@numero+1,___lwdiv@dividend+1
  1599   002528  0E27               	movlw	39
  1600   00252A  6E09               	movwf	(___lwdiv@divisor+1)^(0+1280),c
  1601   00252C  0E10               	movlw	16
  1602   00252E  6E08               	movwf	___lwdiv@divisor^(0+1280),c
  1603   002530  EC8C  F014         	call	___lwdiv	;wreg free
  1604   002534  5006               	movf	?___lwdiv^(0+1280),w,c
  1605   002536  6E12               	movwf	LCD_ESCRIBE_VAR_INT@d_millar^(0+1280),c
  1606                           
  1607                           ;LCD.c: 233:     millar = (numero % 10000) / 1000;
  1608   002538  0E27               	movlw	39
  1609   00253A  6E04               	movwf	(___lwmod@divisor+1)^(0+1280),c
  1610   00253C  0E10               	movlw	16
  1611   00253E  6E03               	movwf	___lwmod@divisor^(0+1280),c
  1612   002540  C50D  F501         	movff	LCD_ESCRIBE_VAR_INT@numero,___lwmod@dividend
  1613   002544  C50E  F502         	movff	LCD_ESCRIBE_VAR_INT@numero+1,___lwmod@dividend+1
  1614   002548  ECFF  F014         	call	___lwmod	;wreg free
  1615   00254C  C501  F506         	movff	?___lwmod,___lwdiv@dividend
  1616   002550  C502  F507         	movff	?___lwmod+1,___lwdiv@dividend+1
  1617   002554  0E03               	movlw	3
  1618   002556  6E09               	movwf	(___lwdiv@divisor+1)^(0+1280),c
  1619   002558  0EE8               	movlw	232
  1620   00255A  6E08               	movwf	___lwdiv@divisor^(0+1280),c
  1621   00255C  EC8C  F014         	call	___lwdiv	;wreg free
  1622   002560  5006               	movf	?___lwdiv^(0+1280),w,c
  1623   002562  6E13               	movwf	LCD_ESCRIBE_VAR_INT@millar^(0+1280),c
  1624                           
  1625                           ;LCD.c: 234:     centena = (numero % 1000) / 100;
  1626   002564  0E03               	movlw	3
  1627   002566  6E04               	movwf	(___lwmod@divisor+1)^(0+1280),c
  1628   002568  0EE8               	movlw	232
  1629   00256A  6E03               	movwf	___lwmod@divisor^(0+1280),c
  1630   00256C  C50D  F501         	movff	LCD_ESCRIBE_VAR_INT@numero,___lwmod@dividend
  1631   002570  C50E  F502         	movff	LCD_ESCRIBE_VAR_INT@numero+1,___lwmod@dividend+1
  1632   002574  ECFF  F014         	call	___lwmod	;wreg free
  1633   002578  C501  F506         	movff	?___lwmod,___lwdiv@dividend
  1634   00257C  C502  F507         	movff	?___lwmod+1,___lwdiv@dividend+1
  1635   002580  0E00               	movlw	0
  1636   002582  6E09               	movwf	(___lwdiv@divisor+1)^(0+1280),c
  1637   002584  0E64               	movlw	100
  1638   002586  6E08               	movwf	___lwdiv@divisor^(0+1280),c
  1639   002588  EC8C  F014         	call	___lwdiv	;wreg free
  1640   00258C  5006               	movf	?___lwdiv^(0+1280),w,c
  1641   00258E  6E14               	movwf	LCD_ESCRIBE_VAR_INT@centena^(0+1280),c
  1642                           
  1643                           ;LCD.c: 235:     decena = (numero % 100) / 10;
  1644   002590  0E00               	movlw	0
  1645   002592  6E04               	movwf	(___lwmod@divisor+1)^(0+1280),c
  1646   002594  0E64               	movlw	100
  1647   002596  6E03               	movwf	___lwmod@divisor^(0+1280),c
  1648   002598  C50D  F501         	movff	LCD_ESCRIBE_VAR_INT@numero,___lwmod@dividend
  1649   00259C  C50E  F502         	movff	LCD_ESCRIBE_VAR_INT@numero+1,___lwmod@dividend+1
  1650   0025A0  ECFF  F014         	call	___lwmod	;wreg free
  1651   0025A4  C501  F506         	movff	?___lwmod,___lwdiv@dividend
  1652   0025A8  C502  F507         	movff	?___lwmod+1,___lwdiv@dividend+1
  1653   0025AC  0E00               	movlw	0
  1654   0025AE  6E09               	movwf	(___lwdiv@divisor+1)^(0+1280),c
  1655   0025B0  0E0A               	movlw	10
  1656   0025B2  6E08               	movwf	___lwdiv@divisor^(0+1280),c
  1657   0025B4  EC8C  F014         	call	___lwdiv	;wreg free
  1658   0025B8  5006               	movf	?___lwdiv^(0+1280),w,c
  1659   0025BA  6E15               	movwf	LCD_ESCRIBE_VAR_INT@decena^(0+1280),c
  1660                           
  1661                           ;LCD.c: 236:     unidad = numero % 10;
  1662   0025BC  C50D  F501         	movff	LCD_ESCRIBE_VAR_INT@numero,___lwmod@dividend
  1663   0025C0  C50E  F502         	movff	LCD_ESCRIBE_VAR_INT@numero+1,___lwmod@dividend+1
  1664   0025C4  0E00               	movlw	0
  1665   0025C6  6E04               	movwf	(___lwmod@divisor+1)^(0+1280),c
  1666   0025C8  0E0A               	movlw	10
  1667   0025CA  6E03               	movwf	___lwmod@divisor^(0+1280),c
  1668   0025CC  ECFF  F014         	call	___lwmod	;wreg free
  1669   0025D0  5001               	movf	?___lwmod^(0+1280),w,c
  1670   0025D2  6E16               	movwf	LCD_ESCRIBE_VAR_INT@unidad^(0+1280),c
  1671                           
  1672                           ;LCD.c: 237:     switch(n_digitos){
  1673   0025D4  EF32  F013         	goto	l1430
  1674   0025D8                     l1418:
  1675                           
  1676                           ;LCD.c: 239:             ENVIA_CHAR(unidad+0x30);
  1677   0025D8  5016               	movf	LCD_ESCRIBE_VAR_INT@unidad^(0+1280),w,c
  1678   0025DA  0F30               	addlw	48
  1679   0025DC  EC29  F016         	call	_ENVIA_CHAR
  1680                           
  1681                           ;LCD.c: 240:             break;
  1682   0025E0  EF53  F013         	goto	l122
  1683   0025E4                     l1420:
  1684                           
  1685                           ;LCD.c: 242:             ENVIA_CHAR(decena+0x30);
  1686   0025E4  5015               	movf	LCD_ESCRIBE_VAR_INT@decena^(0+1280),w,c
  1687   0025E6  0F30               	addlw	48
  1688   0025E8  EC29  F016         	call	_ENVIA_CHAR
  1689                           
  1690                           ;LCD.c: 243:             ENVIA_CHAR(unidad+0x30);
  1691   0025EC  5016               	movf	LCD_ESCRIBE_VAR_INT@unidad^(0+1280),w,c
  1692   0025EE  0F30               	addlw	48
  1693   0025F0  EC29  F016         	call	_ENVIA_CHAR
  1694                           
  1695                           ;LCD.c: 244:             break;
  1696   0025F4  EF53  F013         	goto	l122
  1697   0025F8                     l1422:
  1698                           
  1699                           ;LCD.c: 246:             ENVIA_CHAR(centena+0x30);
  1700   0025F8  5014               	movf	LCD_ESCRIBE_VAR_INT@centena^(0+1280),w,c
  1701   0025FA  0F30               	addlw	48
  1702   0025FC  EC29  F016         	call	_ENVIA_CHAR
  1703                           
  1704                           ;LCD.c: 247:             ENVIA_CHAR(decena+0x30);
  1705   002600  5015               	movf	LCD_ESCRIBE_VAR_INT@decena^(0+1280),w,c
  1706   002602  0F30               	addlw	48
  1707   002604  EC29  F016         	call	_ENVIA_CHAR
  1708                           
  1709                           ;LCD.c: 248:             ENVIA_CHAR(unidad+0x30);
  1710   002608  5016               	movf	LCD_ESCRIBE_VAR_INT@unidad^(0+1280),w,c
  1711   00260A  0F30               	addlw	48
  1712   00260C  EC29  F016         	call	_ENVIA_CHAR
  1713                           
  1714                           ;LCD.c: 249:             break;
  1715   002610  EF53  F013         	goto	l122
  1716   002614                     l1424:
  1717                           
  1718                           ;LCD.c: 251:             ENVIA_CHAR(millar+0x30);
  1719   002614  5013               	movf	LCD_ESCRIBE_VAR_INT@millar^(0+1280),w,c
  1720   002616  0F30               	addlw	48
  1721   002618  EC29  F016         	call	_ENVIA_CHAR
  1722                           
  1723                           ;LCD.c: 252:             ENVIA_CHAR(centena+0x30);
  1724   00261C  5014               	movf	LCD_ESCRIBE_VAR_INT@centena^(0+1280),w,c
  1725   00261E  0F30               	addlw	48
  1726   002620  EC29  F016         	call	_ENVIA_CHAR
  1727                           
  1728                           ;LCD.c: 253:             ENVIA_CHAR(decena+0x30);
  1729   002624  5015               	movf	LCD_ESCRIBE_VAR_INT@decena^(0+1280),w,c
  1730   002626  0F30               	addlw	48
  1731   002628  EC29  F016         	call	_ENVIA_CHAR
  1732                           
  1733                           ;LCD.c: 254:             ENVIA_CHAR(unidad+0x30);
  1734   00262C  5016               	movf	LCD_ESCRIBE_VAR_INT@unidad^(0+1280),w,c
  1735   00262E  0F30               	addlw	48
  1736   002630  EC29  F016         	call	_ENVIA_CHAR
  1737                           
  1738                           ;LCD.c: 255:             break;
  1739   002634  EF53  F013         	goto	l122
  1740   002638                     l1426:
  1741                           
  1742                           ;LCD.c: 257:             ENVIA_CHAR(d_millar+0x30);
  1743   002638  5012               	movf	LCD_ESCRIBE_VAR_INT@d_millar^(0+1280),w,c
  1744   00263A  0F30               	addlw	48
  1745   00263C  EC29  F016         	call	_ENVIA_CHAR
  1746                           
  1747                           ;LCD.c: 258:             ENVIA_CHAR(millar+0x30);
  1748   002640  5013               	movf	LCD_ESCRIBE_VAR_INT@millar^(0+1280),w,c
  1749   002642  0F30               	addlw	48
  1750   002644  EC29  F016         	call	_ENVIA_CHAR
  1751                           
  1752                           ;LCD.c: 259:             ENVIA_CHAR(centena+0x30);
  1753   002648  5014               	movf	LCD_ESCRIBE_VAR_INT@centena^(0+1280),w,c
  1754   00264A  0F30               	addlw	48
  1755   00264C  EC29  F016         	call	_ENVIA_CHAR
  1756                           
  1757                           ;LCD.c: 260:             ENVIA_CHAR(decena+0x30);
  1758   002650  5015               	movf	LCD_ESCRIBE_VAR_INT@decena^(0+1280),w,c
  1759   002652  0F30               	addlw	48
  1760   002654  EC29  F016         	call	_ENVIA_CHAR
  1761                           
  1762                           ;LCD.c: 261:             ENVIA_CHAR(unidad+0x30);
  1763   002658  5016               	movf	LCD_ESCRIBE_VAR_INT@unidad^(0+1280),w,c
  1764   00265A  0F30               	addlw	48
  1765   00265C  EC29  F016         	call	_ENVIA_CHAR
  1766                           
  1767                           ;LCD.c: 262:             break;
  1768   002660  EF53  F013         	goto	l122
  1769   002664                     l1430:
  1770   002664  500F               	movf	LCD_ESCRIBE_VAR_INT@n_digitos^(0+1280),w,c
  1771   002666  6E10               	movwf	??_LCD_ESCRIBE_VAR_INT^(0+1280),c
  1772   002668  6A11               	clrf	(??_LCD_ESCRIBE_VAR_INT+1)^(0+1280),c
  1773                           
  1774                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1775                           ; Switch size 1, requested type "simple"
  1776                           ; Number of cases is 1, Range of values is 0 to 0
  1777                           ; switch strategies available:
  1778                           ; Name         Instructions Cycles
  1779                           ; simple_byte            4     3 (average)
  1780                           ;	Chosen strategy is simple_byte
  1781   00266A  5011               	movf	(??_LCD_ESCRIBE_VAR_INT+1)^(0+1280),w,c
  1782   00266C  0A00               	xorlw	0	; case 0
  1783   00266E  B4D8               	btfsc	status,2,c
  1784   002670  EF3C  F013         	goto	l1544
  1785   002674  EF53  F013         	goto	l122
  1786   002678                     l1544:
  1787                           
  1788                           ; Switch size 1, requested type "simple"
  1789                           ; Number of cases is 5, Range of values is 1 to 5
  1790                           ; switch strategies available:
  1791                           ; Name         Instructions Cycles
  1792                           ; simple_byte           16     9 (average)
  1793                           ;	Chosen strategy is simple_byte
  1794   002678  5010               	movf	??_LCD_ESCRIBE_VAR_INT^(0+1280),w,c
  1795   00267A  0A01               	xorlw	1	; case 1
  1796   00267C  B4D8               	btfsc	status,2,c
  1797   00267E  EFEC  F012         	goto	l1418
  1798   002682  0A03               	xorlw	3	; case 2
  1799   002684  B4D8               	btfsc	status,2,c
  1800   002686  EFF2  F012         	goto	l1420
  1801   00268A  0A01               	xorlw	1	; case 3
  1802   00268C  B4D8               	btfsc	status,2,c
  1803   00268E  EFFC  F012         	goto	l1422
  1804   002692  0A07               	xorlw	7	; case 4
  1805   002694  B4D8               	btfsc	status,2,c
  1806   002696  EF0A  F013         	goto	l1424
  1807   00269A  0A01               	xorlw	1	; case 5
  1808   00269C  B4D8               	btfsc	status,2,c
  1809   00269E  EF1C  F013         	goto	l1426
  1810   0026A2  EF53  F013         	goto	l122
  1811   0026A6                     l122:
  1812   0026A6  0012               	return		;funcret
  1813   0026A8                     __end_of_LCD_ESCRIBE_VAR_INT:
  1814                           	callstack 0
  1815                           
  1816 ;; *************** function ___lwmod *****************
  1817 ;; Defined at:
  1818 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\lwmod.c"
  1819 ;; Parameters:    Size  Location     Type
  1820 ;;  dividend        2    0[COMRAM] unsigned int 
  1821 ;;  divisor         2    2[COMRAM] unsigned int 
  1822 ;; Auto vars:     Size  Location     Type
  1823 ;;  counter         1    4[COMRAM] unsigned char 
  1824 ;; Return value:  Size  Location     Type
  1825 ;;                  2    0[COMRAM] unsigned int 
  1826 ;; Registers used:
  1827 ;;		wreg, status,2, status,0
  1828 ;; Tracked objects:
  1829 ;;		On entry : 0/0
  1830 ;;		On exit  : 0/0
  1831 ;;		Unchanged: 0/0
  1832 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1833 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1834 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1835 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1836 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1837 ;;Total ram usage:        5 bytes
  1838 ;; Hardware stack levels used: 1
  1839 ;; This function calls:
  1840 ;;		Nothing
  1841 ;; This function is called by:
  1842 ;;		_LCD_ESCRIBE_VAR_INT
  1843 ;; This function uses a non-reentrant model
  1844 ;;
  1845                           
  1846                           	psect	text14
  1847   0029FE                     __ptext14:
  1848                           	callstack 0
  1849   0029FE                     ___lwmod:
  1850                           	callstack 125
  1851   0029FE  5003               	movf	___lwmod@divisor^(0+1280),w,c
  1852   002A00  1004               	iorwf	(___lwmod@divisor+1)^(0+1280),w,c
  1853   002A02  B4D8               	btfsc	status,2,c
  1854   002A04  EF06  F015         	goto	u391
  1855   002A08  EF08  F015         	goto	u390
  1856   002A0C                     u391:
  1857   002A0C  EF2C  F015         	goto	l708
  1858   002A10                     u390:
  1859   002A10  0E01               	movlw	1
  1860   002A12  6E05               	movwf	___lwmod@counter^(0+1280),c
  1861   002A14  EF10  F015         	goto	l1378
  1862   002A18                     l1376:
  1863   002A18  90D8               	bcf	status,0,c
  1864   002A1A  3603               	rlcf	___lwmod@divisor^(0+1280),f,c
  1865   002A1C  3604               	rlcf	(___lwmod@divisor+1)^(0+1280),f,c
  1866   002A1E  2A05               	incf	___lwmod@counter^(0+1280),f,c
  1867   002A20                     l1378:
  1868   002A20  AE04               	btfss	(___lwmod@divisor+1)^(0+1280),7,c
  1869   002A22  EF15  F015         	goto	u401
  1870   002A26  EF17  F015         	goto	u400
  1871   002A2A                     u401:
  1872   002A2A  EF0C  F015         	goto	l1376
  1873   002A2E                     u400:
  1874   002A2E                     l1380:
  1875   002A2E  5003               	movf	___lwmod@divisor^(0+1280),w,c
  1876   002A30  5C01               	subwf	___lwmod@dividend^(0+1280),w,c
  1877   002A32  5004               	movf	(___lwmod@divisor+1)^(0+1280),w,c
  1878   002A34  5802               	subwfb	(___lwmod@dividend+1)^(0+1280),w,c
  1879   002A36  A0D8               	btfss	status,0,c
  1880   002A38  EF20  F015         	goto	u411
  1881   002A3C  EF22  F015         	goto	u410
  1882   002A40                     u411:
  1883   002A40  EF26  F015         	goto	l1384
  1884   002A44                     u410:
  1885   002A44  5003               	movf	___lwmod@divisor^(0+1280),w,c
  1886   002A46  5E01               	subwf	___lwmod@dividend^(0+1280),f,c
  1887   002A48  5004               	movf	(___lwmod@divisor+1)^(0+1280),w,c
  1888   002A4A  5A02               	subwfb	(___lwmod@dividend+1)^(0+1280),f,c
  1889   002A4C                     l1384:
  1890   002A4C  90D8               	bcf	status,0,c
  1891   002A4E  3204               	rrcf	(___lwmod@divisor+1)^(0+1280),f,c
  1892   002A50  3203               	rrcf	___lwmod@divisor^(0+1280),f,c
  1893   002A52  2E05               	decfsz	___lwmod@counter^(0+1280),f,c
  1894   002A54  EF17  F015         	goto	l1380
  1895   002A58                     l708:
  1896   002A58  C501  F501         	movff	___lwmod@dividend,?___lwmod
  1897   002A5C  C502  F502         	movff	___lwmod@dividend+1,?___lwmod+1
  1898   002A60  0012               	return		;funcret
  1899   002A62                     __end_of___lwmod:
  1900                           	callstack 0
  1901                           
  1902 ;; *************** function ___lwdiv *****************
  1903 ;; Defined at:
  1904 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\lwdiv.c"
  1905 ;; Parameters:    Size  Location     Type
  1906 ;;  dividend        2    5[COMRAM] unsigned int 
  1907 ;;  divisor         2    7[COMRAM] unsigned int 
  1908 ;; Auto vars:     Size  Location     Type
  1909 ;;  quotient        2    9[COMRAM] unsigned int 
  1910 ;;  counter         1   11[COMRAM] unsigned char 
  1911 ;; Return value:  Size  Location     Type
  1912 ;;                  2    5[COMRAM] unsigned int 
  1913 ;; Registers used:
  1914 ;;		wreg, status,2, status,0
  1915 ;; Tracked objects:
  1916 ;;		On entry : 0/0
  1917 ;;		On exit  : 0/0
  1918 ;;		Unchanged: 0/0
  1919 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1920 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1921 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1922 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1923 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1924 ;;Total ram usage:        7 bytes
  1925 ;; Hardware stack levels used: 1
  1926 ;; This function calls:
  1927 ;;		Nothing
  1928 ;; This function is called by:
  1929 ;;		_LCD_ESCRIBE_VAR_INT
  1930 ;; This function uses a non-reentrant model
  1931 ;;
  1932                           
  1933                           	psect	text15
  1934   002918                     __ptext15:
  1935                           	callstack 0
  1936   002918                     ___lwdiv:
  1937                           	callstack 125
  1938   002918  0E00               	movlw	0
  1939   00291A  6E0B               	movwf	(___lwdiv@quotient+1)^(0+1280),c
  1940   00291C  0E00               	movlw	0
  1941   00291E  6E0A               	movwf	___lwdiv@quotient^(0+1280),c
  1942   002920  5008               	movf	___lwdiv@divisor^(0+1280),w,c
  1943   002922  1009               	iorwf	(___lwdiv@divisor+1)^(0+1280),w,c
  1944   002924  B4D8               	btfsc	status,2,c
  1945   002926  EF97  F014         	goto	u361
  1946   00292A  EF99  F014         	goto	u360
  1947   00292E                     u361:
  1948   00292E  EFC1  F014         	goto	l698
  1949   002932                     u360:
  1950   002932  0E01               	movlw	1
  1951   002934  6E0C               	movwf	___lwdiv@counter^(0+1280),c
  1952   002936  EFA1  F014         	goto	l1358
  1953   00293A                     l1356:
  1954   00293A  90D8               	bcf	status,0,c
  1955   00293C  3608               	rlcf	___lwdiv@divisor^(0+1280),f,c
  1956   00293E  3609               	rlcf	(___lwdiv@divisor+1)^(0+1280),f,c
  1957   002940  2A0C               	incf	___lwdiv@counter^(0+1280),f,c
  1958   002942                     l1358:
  1959   002942  AE09               	btfss	(___lwdiv@divisor+1)^(0+1280),7,c
  1960   002944  EFA6  F014         	goto	u371
  1961   002948  EFA8  F014         	goto	u370
  1962   00294C                     u371:
  1963   00294C  EF9D  F014         	goto	l1356
  1964   002950                     u370:
  1965   002950                     l1360:
  1966   002950  90D8               	bcf	status,0,c
  1967   002952  360A               	rlcf	___lwdiv@quotient^(0+1280),f,c
  1968   002954  360B               	rlcf	(___lwdiv@quotient+1)^(0+1280),f,c
  1969   002956  5008               	movf	___lwdiv@divisor^(0+1280),w,c
  1970   002958  5C06               	subwf	___lwdiv@dividend^(0+1280),w,c
  1971   00295A  5009               	movf	(___lwdiv@divisor+1)^(0+1280),w,c
  1972   00295C  5807               	subwfb	(___lwdiv@dividend+1)^(0+1280),w,c
  1973   00295E  A0D8               	btfss	status,0,c
  1974   002960  EFB4  F014         	goto	u381
  1975   002964  EFB6  F014         	goto	u380
  1976   002968                     u381:
  1977   002968  EFBB  F014         	goto	l1368
  1978   00296C                     u380:
  1979   00296C  5008               	movf	___lwdiv@divisor^(0+1280),w,c
  1980   00296E  5E06               	subwf	___lwdiv@dividend^(0+1280),f,c
  1981   002970  5009               	movf	(___lwdiv@divisor+1)^(0+1280),w,c
  1982   002972  5A07               	subwfb	(___lwdiv@dividend+1)^(0+1280),f,c
  1983   002974  800A               	bsf	___lwdiv@quotient^(0+1280),0,c
  1984   002976                     l1368:
  1985   002976  90D8               	bcf	status,0,c
  1986   002978  3209               	rrcf	(___lwdiv@divisor+1)^(0+1280),f,c
  1987   00297A  3208               	rrcf	___lwdiv@divisor^(0+1280),f,c
  1988   00297C  2E0C               	decfsz	___lwdiv@counter^(0+1280),f,c
  1989   00297E  EFA8  F014         	goto	l1360
  1990   002982                     l698:
  1991   002982  C50A  F506         	movff	___lwdiv@quotient,?___lwdiv
  1992   002986  C50B  F507         	movff	___lwdiv@quotient+1,?___lwdiv+1
  1993   00298A  0012               	return		;funcret
  1994   00298C                     __end_of___lwdiv:
  1995                           	callstack 0
  1996                           
  1997 ;; *************** function _LCD_CHAR_GRADO *****************
  1998 ;; Defined at:
  1999 ;;		line 266 in file "LCD.c"
  2000 ;; Parameters:    Size  Location     Type
  2001 ;;		None
  2002 ;; Auto vars:     Size  Location     Type
  2003 ;;		None
  2004 ;; Return value:  Size  Location     Type
  2005 ;;                  1    wreg      void 
  2006 ;; Registers used:
  2007 ;;		wreg, status,2, status,0, cstack
  2008 ;; Tracked objects:
  2009 ;;		On entry : 0/0
  2010 ;;		On exit  : 0/0
  2011 ;;		Unchanged: 0/0
  2012 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2013 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2014 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2015 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2016 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2017 ;;Total ram usage:        0 bytes
  2018 ;; Hardware stack levels used: 1
  2019 ;; Hardware stack levels required when called: 2
  2020 ;; This function calls:
  2021 ;;		_ENVIA_CHAR
  2022 ;; This function is called by:
  2023 ;;		_main
  2024 ;; This function uses a non-reentrant model
  2025 ;;
  2026                           
  2027                           	psect	text16
  2028   002D4A                     __ptext16:
  2029                           	callstack 0
  2030   002D4A                     _LCD_CHAR_GRADO:
  2031                           	callstack 124
  2032   002D4A                     
  2033                           ;LCD.c: 267:     ENVIA_CHAR(0xDF);
  2034   002D4A  0EDF               	movlw	223
  2035   002D4C  EC29  F016         	call	_ENVIA_CHAR
  2036   002D50  0012               	return		;funcret
  2037   002D52                     __end_of_LCD_CHAR_GRADO:
  2038                           	callstack 0
  2039                           
  2040 ;; *************** function _ESCRIBE_MENSAJE2 *****************
  2041 ;; Defined at:
  2042 ;;		line 77 in file "LCD.c"
  2043 ;; Parameters:    Size  Location     Type
  2044 ;;  cadena          1    3[COMRAM] PTR const unsigned char 
  2045 ;;		 -> STR_3(5), STR_2(8), STR_1(16), 
  2046 ;; Auto vars:     Size  Location     Type
  2047 ;;  i               1    6[COMRAM] unsigned char 
  2048 ;;  tam             1    5[COMRAM] unsigned char 
  2049 ;; Return value:  Size  Location     Type
  2050 ;;                  1    wreg      void 
  2051 ;; Registers used:
  2052 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2053 ;; Tracked objects:
  2054 ;;		On entry : 0/0
  2055 ;;		On exit  : 0/0
  2056 ;;		Unchanged: 0/0
  2057 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2058 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2059 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2060 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2061 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2062 ;;Total ram usage:        4 bytes
  2063 ;; Hardware stack levels used: 1
  2064 ;; Hardware stack levels required when called: 2
  2065 ;; This function calls:
  2066 ;;		_ENVIA_CHAR
  2067 ;;		_strlen
  2068 ;; This function is called by:
  2069 ;;		_main
  2070 ;; This function uses a non-reentrant model
  2071 ;;
  2072                           
  2073                           	psect	text17
  2074   002B64                     __ptext17:
  2075                           	callstack 0
  2076   002B64                     _ESCRIBE_MENSAJE2:
  2077                           	callstack 124
  2078   002B64                     
  2079                           ;LCD.c: 77: void ESCRIBE_MENSAJE2(const char *cadena);LCD.c: 78: {;LCD.c: 79:     unsign
      +                          ed char tam;;LCD.c: 80:     tam = strlen(cadena);
  2080   002B64  C504  F501         	movff	ESCRIBE_MENSAJE2@cadena,strlen@s
  2081   002B68  ECF3  F015         	call	_strlen	;wreg free
  2082   002B6C  5001               	movf	?_strlen^(0+1280),w,c
  2083   002B6E  6E06               	movwf	ESCRIBE_MENSAJE2@tam^(0+1280),c
  2084   002B70                     
  2085                           ;LCD.c: 82:  for(i = 0; i<tam; i++)
  2086   002B70  0E00               	movlw	0
  2087   002B72  6E07               	movwf	ESCRIBE_MENSAJE2@i^(0+1280),c
  2088   002B74  EFCA  F015         	goto	l1414
  2089   002B78                     l1410:
  2090                           
  2091                           ;LCD.c: 83:  {;LCD.c: 84:   ENVIA_CHAR(cadena[i]);
  2092   002B78  5004               	movf	ESCRIBE_MENSAJE2@cadena^(0+1280),w,c
  2093   002B7A  2407               	addwf	ESCRIBE_MENSAJE2@i^(0+1280),w,c
  2094   002B7C  6E05               	movwf	??_ESCRIBE_MENSAJE2^(0+1280),c
  2095   002B7E  C505  F4F6         	movff	??_ESCRIBE_MENSAJE2,tblptrl
  2096   002B82                     	if	1	;There is more than 1 active tblptr byte
  2097   002B82  0E25               	movlw	high __smallconst
  2098   002B84  6EF7               	movwf	tblptrh,c
  2099   002B86                     	endif
  2100   002B86                     	if	0	;tblptru may be non-zero
  2101   002B86                     	endif
  2102   002B86                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2103   002B86  0E00               	movlw	low (__smallconst shr (0+16))
  2104   002B88  6EF8               	movwf	tblptru,c
  2105   002B8A                     	endif
  2106   002B8A  0008               	tblrd		*
  2107   002B8C  50F5               	movf	tablat,w,c
  2108   002B8E  EC29  F016         	call	_ENVIA_CHAR
  2109   002B92                     
  2110                           ;LCD.c: 85:  }
  2111   002B92  2A07               	incf	ESCRIBE_MENSAJE2@i^(0+1280),f,c
  2112   002B94                     l1414:
  2113   002B94  5006               	movf	ESCRIBE_MENSAJE2@tam^(0+1280),w,c
  2114   002B96  5C07               	subwf	ESCRIBE_MENSAJE2@i^(0+1280),w,c
  2115   002B98  A0D8               	btfss	status,0,c
  2116   002B9A  EFD1  F015         	goto	u461
  2117   002B9E  EFD3  F015         	goto	u460
  2118   002BA2                     u461:
  2119   002BA2  EFBC  F015         	goto	l1410
  2120   002BA6                     u460:
  2121   002BA6  0012               	return		;funcret
  2122   002BA8                     __end_of_ESCRIBE_MENSAJE2:
  2123                           	callstack 0
  2124                           
  2125 ;; *************** function _strlen *****************
  2126 ;; Defined at:
  2127 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\strlen.c"
  2128 ;; Parameters:    Size  Location     Type
  2129 ;;  s               1    0[COMRAM] PTR const unsigned char 
  2130 ;;		 -> STR_3(5), STR_2(8), STR_1(16), 
  2131 ;; Auto vars:     Size  Location     Type
  2132 ;;  a               1    2[COMRAM] PTR const unsigned char 
  2133 ;;		 -> STR_3(5), STR_2(8), STR_1(16), 
  2134 ;; Return value:  Size  Location     Type
  2135 ;;                  2    0[COMRAM] unsigned int 
  2136 ;; Registers used:
  2137 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  2138 ;; Tracked objects:
  2139 ;;		On entry : 0/0
  2140 ;;		On exit  : 0/0
  2141 ;;		Unchanged: 0/0
  2142 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2143 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2144 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2145 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2146 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2147 ;;Total ram usage:        3 bytes
  2148 ;; Hardware stack levels used: 1
  2149 ;; This function calls:
  2150 ;;		Nothing
  2151 ;; This function is called by:
  2152 ;;		_ESCRIBE_MENSAJE2
  2153 ;; This function uses a non-reentrant model
  2154 ;;
  2155                           
  2156                           	psect	text18
  2157   002BE6                     __ptext18:
  2158                           	callstack 0
  2159   002BE6                     _strlen:
  2160                           	callstack 125
  2161   002BE6  C501  F503         	movff	strlen@s,strlen@a
  2162   002BEA  EFF8  F015         	goto	l1344
  2163   002BEE                     l1342:
  2164   002BEE  2A01               	incf	strlen@s^(0+1280),f,c
  2165   002BF0                     l1344:
  2166   002BF0  C501  F4F6         	movff	strlen@s,tblptrl
  2167   002BF4                     	if	1	;There is more than 1 active tblptr byte
  2168   002BF4  0E25               	movlw	high __smallconst
  2169   002BF6  6EF7               	movwf	tblptrh,c
  2170   002BF8                     	endif
  2171   002BF8                     	if	0	;tblptru may be non-zero
  2172   002BF8                     	endif
  2173   002BF8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2174   002BF8  0E00               	movlw	low (__smallconst shr (0+16))
  2175   002BFA  6EF8               	movwf	tblptru,c
  2176   002BFC                     	endif
  2177   002BFC  0008               	tblrd		*
  2178   002BFE  50F5               	movf	tablat,w,c
  2179   002C00  0900               	iorlw	0
  2180   002C02  A4D8               	btfss	status,2,c
  2181   002C04  EF06  F016         	goto	u351
  2182   002C08  EF08  F016         	goto	u350
  2183   002C0C                     u351:
  2184   002C0C  EFF7  F015         	goto	l1342
  2185   002C10                     u350:
  2186   002C10  5003               	movf	strlen@a^(0+1280),w,c
  2187   002C12  5C01               	subwf	strlen@s^(0+1280),w,c
  2188   002C14  6E01               	movwf	?_strlen^(0+1280),c
  2189   002C16  6A02               	clrf	(?_strlen+1)^(0+1280),c
  2190   002C18  BE01               	btfsc	?_strlen^(0+1280),7,c
  2191   002C1A  0602               	decf	(?_strlen+1)^(0+1280),f,c
  2192   002C1C  0012               	return		;funcret
  2193   002C1E                     __end_of_strlen:
  2194                           	callstack 0
  2195                           
  2196 ;; *************** function _ENVIA_CHAR *****************
  2197 ;; Defined at:
  2198 ;;		line 88 in file "LCD.c"
  2199 ;; Parameters:    Size  Location     Type
  2200 ;;  dato            1    wreg     unsigned char 
  2201 ;; Auto vars:     Size  Location     Type
  2202 ;;  dato            1    1[COMRAM] unsigned char 
  2203 ;;  aux             1    2[COMRAM] unsigned char 
  2204 ;; Return value:  Size  Location     Type
  2205 ;;                  1    wreg      void 
  2206 ;; Registers used:
  2207 ;;		wreg, status,2, status,0, cstack
  2208 ;; Tracked objects:
  2209 ;;		On entry : 0/0
  2210 ;;		On exit  : 0/0
  2211 ;;		Unchanged: 0/0
  2212 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2213 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2214 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2215 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2216 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2217 ;;Total ram usage:        2 bytes
  2218 ;; Hardware stack levels used: 1
  2219 ;; Hardware stack levels required when called: 1
  2220 ;; This function calls:
  2221 ;;		_ENVIA_NIBBLE
  2222 ;;		_LEER_LCD
  2223 ;; This function is called by:
  2224 ;;		_ESCRIBE_MENSAJE2
  2225 ;;		_LCD_ESCRIBE_VAR_INT
  2226 ;;		_LCD_CHAR_GRADO
  2227 ;;		_ESCRIBE_MENSAJE
  2228 ;;		_GENERACARACTER
  2229 ;;		_LCD_ESCRIBE_VAR_CHAR
  2230 ;;		_LCD_VARCHAR_BITS
  2231 ;; This function uses a non-reentrant model
  2232 ;;
  2233                           
  2234                           	psect	text19
  2235   002C52                     __ptext19:
  2236                           	callstack 0
  2237   002C52                     _ENVIA_CHAR:
  2238                           	callstack 124
  2239                           
  2240                           ;incstack = 0
  2241                           ;ENVIA_CHAR@dato stored from wreg
  2242   002C52  6E02               	movwf	ENVIA_CHAR@dato^(0+1280),c
  2243   002C54                     
  2244                           ;LCD.c: 88: void ENVIA_CHAR(unsigned char dato);LCD.c: 89: {;LCD.c: 90:  unsigned char a
      +                          ux;;LCD.c: 91:  LATDbits.LATD0 = 1;
  2245   002C54  80C1               	bsf	193,0,c	;volatile
  2246   002C56                     
  2247                           ;LCD.c: 92:  LEER_LCD();
  2248   002C56  ECC6  F014         	call	_LEER_LCD	;wreg free
  2249   002C5A                     
  2250                           ;LCD.c: 93:  TRISD = 0x00;
  2251   002C5A  0E00               	movlw	0
  2252   002C5C  6EC9               	movwf	201,c	;volatile
  2253   002C5E                     
  2254                           ;LCD.c: 94:     _delay((unsigned long)((100)*(32000000UL/4000000.0)));
  2255   002C5E  0EA0               	movlw	160
  2256   002C60                     u627:
  2257   002C60  D000               	nop2	
  2258   002C62  2EE8               	decfsz	wreg,f,c
  2259   002C64  D7FD               	bra	u627
  2260   002C66                     
  2261                           ;LCD.c: 95:  LATDbits.LATD1 = 0;
  2262   002C66  92C1               	bcf	193,1,c	;volatile
  2263   002C68                     
  2264                           ;LCD.c: 96:  LATDbits.LATD2 = 0;
  2265   002C68  94C1               	bcf	193,2,c	;volatile
  2266   002C6A                     
  2267                           ;LCD.c: 97:  LATDbits.LATD0 = 1;
  2268   002C6A  80C1               	bsf	193,0,c	;volatile
  2269   002C6C                     
  2270                           ;LCD.c: 98:  aux = dato & 0xF0;
  2271   002C6C  5002               	movf	ENVIA_CHAR@dato^(0+1280),w,c
  2272   002C6E  0BF0               	andlw	240
  2273   002C70  6E03               	movwf	ENVIA_CHAR@aux^(0+1280),c
  2274   002C72                     
  2275                           ;LCD.c: 99:  ENVIA_NIBBLE(aux);
  2276   002C72  5003               	movf	ENVIA_CHAR@aux^(0+1280),w,c
  2277   002C74  EC88  F016         	call	_ENVIA_NIBBLE
  2278   002C78                     
  2279                           ;LCD.c: 100:  aux = dato << 4;
  2280   002C78  3802               	swapf	ENVIA_CHAR@dato^(0+1280),w,c
  2281   002C7A  0BF0               	andlw	240
  2282   002C7C  6E03               	movwf	ENVIA_CHAR@aux^(0+1280),c
  2283   002C7E                     
  2284                           ;LCD.c: 101:  ENVIA_NIBBLE(aux);
  2285   002C7E  5003               	movf	ENVIA_CHAR@aux^(0+1280),w,c
  2286   002C80  EC88  F016         	call	_ENVIA_NIBBLE
  2287   002C84  0012               	return		;funcret
  2288   002C86                     __end_of_ENVIA_CHAR:
  2289                           	callstack 0
  2290                           
  2291 ;; *************** function _LEER_LCD *****************
  2292 ;; Defined at:
  2293 ;;		line 152 in file "LCD.c"
  2294 ;; Parameters:    Size  Location     Type
  2295 ;;		None
  2296 ;; Auto vars:     Size  Location     Type
  2297 ;;  aux             1    0[COMRAM] unsigned char 
  2298 ;; Return value:  Size  Location     Type
  2299 ;;                  1    wreg      void 
  2300 ;; Registers used:
  2301 ;;		wreg, status,2, status,0
  2302 ;; Tracked objects:
  2303 ;;		On entry : 0/0
  2304 ;;		On exit  : 0/0
  2305 ;;		Unchanged: 0/0
  2306 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2307 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2308 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2309 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2310 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2311 ;;Total ram usage:        1 bytes
  2312 ;; Hardware stack levels used: 1
  2313 ;; This function calls:
  2314 ;;		Nothing
  2315 ;; This function is called by:
  2316 ;;		_ENVIA_CHAR
  2317 ;;		_ENVIA_LCD_CMD
  2318 ;; This function uses a non-reentrant model
  2319 ;;
  2320                           
  2321                           	psect	text20
  2322   00298C                     __ptext20:
  2323                           	callstack 0
  2324   00298C                     _LEER_LCD:
  2325                           	callstack 122
  2326   00298C                     
  2327                           ;LCD.c: 154:  unsigned char aux;;LCD.c: 155:  TRISD = 0xF8;
  2328   00298C  0EF8               	movlw	248
  2329   00298E  6EC9               	movwf	201,c	;volatile
  2330   002990                     
  2331                           ;LCD.c: 156:  LATDbits.LATD0 = 0;
  2332   002990  90C1               	bcf	193,0,c	;volatile
  2333   002992                     
  2334                           ;LCD.c: 157:  LATDbits.LATD1 = 1;
  2335   002992  82C1               	bsf	193,1,c	;volatile
  2336   002994                     
  2337                           ;LCD.c: 158:  LATDbits.LATD2 = 1;
  2338   002994  84C1               	bsf	193,2,c	;volatile
  2339   002996                     
  2340                           ;LCD.c: 159:     _delay((unsigned long)((100)*(32000000UL/4000000.0)));
  2341   002996  0EA0               	movlw	160
  2342   002998                     u637:
  2343   002998  D000               	nop2	
  2344   00299A  2EE8               	decfsz	wreg,f,c
  2345   00299C  D7FD               	bra	u637
  2346   00299E                     
  2347                           ;LCD.c: 160:  aux = PORTD;
  2348   00299E  C4D1 F501          	movff	1233,LEER_LCD@aux	;volatile
  2349   0029A2                     
  2350                           ;LCD.c: 161:  LATDbits.LATD2 = 0;
  2351   0029A2  94C1               	bcf	193,2,c	;volatile
  2352   0029A4                     
  2353                           ;LCD.c: 162:     _delay((unsigned long)((100)*(32000000UL/4000000.0)));
  2354   0029A4  0EA0               	movlw	160
  2355   0029A6                     u647:
  2356   0029A6  D000               	nop2	
  2357   0029A8  2EE8               	decfsz	wreg,f,c
  2358   0029AA  D7FD               	bra	u647
  2359   0029AC                     
  2360                           ;LCD.c: 163:  LATDbits.LATD2 = 1;
  2361   0029AC  84C1               	bsf	193,2,c	;volatile
  2362   0029AE                     
  2363                           ;LCD.c: 164:     _delay((unsigned long)((100)*(32000000UL/4000000.0)));
  2364   0029AE  0EA0               	movlw	160
  2365   0029B0                     u657:
  2366   0029B0  D000               	nop2	
  2367   0029B2  2EE8               	decfsz	wreg,f,c
  2368   0029B4  D7FD               	bra	u657
  2369   0029B6                     
  2370                           ;LCD.c: 165:  LATDbits.LATD2 = 0;
  2371   0029B6  94C1               	bcf	193,2,c	;volatile
  2372   0029B8                     l908:
  2373                           
  2374                           ;LCD.c: 166:  aux = aux & 0x80;
  2375   0029B8  5001               	movf	LEER_LCD@aux^(0+1280),w,c
  2376   0029BA  0B80               	andlw	128
  2377   0029BC  6E01               	movwf	LEER_LCD@aux^(0+1280),c
  2378                           
  2379                           ;LCD.c: 167:  while(aux == 0x80)
  2380   0029BE  EFF5  F014         	goto	l922
  2381   0029C2                     l93:
  2382                           
  2383                           ;LCD.c: 168:         {;LCD.c: 169:             LATDbits.LATD2 = 1;
  2384   0029C2  84C1               	bsf	193,2,c	;volatile
  2385   0029C4                     
  2386                           ;LCD.c: 170:             _delay((unsigned long)((100)*(32000000UL/4000000.0)));
  2387   0029C4  0EA0               	movlw	160
  2388   0029C6                     u667:
  2389   0029C6  D000               	nop2	
  2390   0029C8  2EE8               	decfsz	wreg,f,c
  2391   0029CA  D7FD               	bra	u667
  2392   0029CC                     
  2393                           ;LCD.c: 171:             aux = PORTD;
  2394   0029CC  C4D1 F501          	movff	1233,LEER_LCD@aux	;volatile
  2395   0029D0                     
  2396                           ;LCD.c: 172:             LATDbits.LATD2 = 0;
  2397   0029D0  94C1               	bcf	193,2,c	;volatile
  2398                           
  2399                           ;LCD.c: 173:             _delay((unsigned long)((100)*(32000000UL/4000000.0)));
  2400   0029D2  0EA0               	movlw	160
  2401   0029D4                     u677:
  2402   0029D4  D000               	nop2	
  2403   0029D6  2EE8               	decfsz	wreg,f,c
  2404   0029D8  D7FD               	bra	u677
  2405   0029DA                     
  2406                           ;LCD.c: 174:             LATDbits.LATD2 = 1;
  2407   0029DA  84C1               	bsf	193,2,c	;volatile
  2408                           
  2409                           ;LCD.c: 175:             _delay((unsigned long)((100)*(32000000UL/4000000.0)));
  2410   0029DC  0EA0               	movlw	160
  2411   0029DE                     u687:
  2412   0029DE  D000               	nop2	
  2413   0029E0  2EE8               	decfsz	wreg,f,c
  2414   0029E2  D7FD               	bra	u687
  2415   0029E4                     
  2416                           ;LCD.c: 176:             LATDbits.LATD2 = 0;
  2417   0029E4  94C1               	bcf	193,2,c	;volatile
  2418   0029E6  EFDC  F014         	goto	l908
  2419   0029EA                     l922:
  2420                           
  2421                           ;LCD.c: 167:  while(aux == 0x80)
  2422   0029EA  0E80               	movlw	128
  2423   0029EC  1801               	xorwf	LEER_LCD@aux^(0+1280),w,c
  2424   0029EE  B4D8               	btfsc	status,2,c
  2425   0029F0  EFFC  F014         	goto	u11
  2426   0029F4  EFFE  F014         	goto	u10
  2427   0029F8                     u11:
  2428   0029F8  EFE1  F014         	goto	l93
  2429   0029FC                     u10:
  2430   0029FC  0012               	return		;funcret
  2431   0029FE                     __end_of_LEER_LCD:
  2432                           	callstack 0
  2433                           
  2434 ;; *************** function _ENVIA_NIBBLE *****************
  2435 ;; Defined at:
  2436 ;;		line 126 in file "LCD.c"
  2437 ;; Parameters:    Size  Location     Type
  2438 ;;  dato            1    wreg     unsigned char 
  2439 ;; Auto vars:     Size  Location     Type
  2440 ;;  dato            1    0[COMRAM] unsigned char 
  2441 ;; Return value:  Size  Location     Type
  2442 ;;                  1    wreg      void 
  2443 ;; Registers used:
  2444 ;;		wreg, status,2, status,0
  2445 ;; Tracked objects:
  2446 ;;		On entry : 0/0
  2447 ;;		On exit  : 0/0
  2448 ;;		Unchanged: 0/0
  2449 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2450 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2451 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2452 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2453 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2454 ;;Total ram usage:        1 bytes
  2455 ;; Hardware stack levels used: 1
  2456 ;; This function calls:
  2457 ;;		Nothing
  2458 ;; This function is called by:
  2459 ;;		_ENVIA_CHAR
  2460 ;;		_LCD_CONFIG
  2461 ;;		_ENVIA_LCD_CMD
  2462 ;; This function uses a non-reentrant model
  2463 ;;
  2464                           
  2465                           	psect	text21
  2466   002D10                     __ptext21:
  2467                           	callstack 0
  2468   002D10                     _ENVIA_NIBBLE:
  2469                           	callstack 123
  2470                           
  2471                           ;incstack = 0
  2472                           ;ENVIA_NIBBLE@dato stored from wreg
  2473   002D10  6E01               	movwf	ENVIA_NIBBLE@dato^(0+1280),c
  2474   002D12                     
  2475                           ;LCD.c: 126: void ENVIA_NIBBLE(unsigned char dato);LCD.c: 127: {;LCD.c: 128:  LATD &= 0x
      +                          0F;
  2476   002D12  0E0F               	movlw	15
  2477   002D14  16C1               	andwf	193,f,c	;volatile
  2478                           
  2479                           ;LCD.c: 129:  dato &= 0xF0;
  2480   002D16  0EF0               	movlw	240
  2481   002D18  1601               	andwf	ENVIA_NIBBLE@dato^(0+1280),f,c
  2482                           
  2483                           ;LCD.c: 130:  LATD|= dato;
  2484   002D1A  5001               	movf	ENVIA_NIBBLE@dato^(0+1280),w,c	;volatile
  2485   002D1C  12C1               	iorwf	193,f,c	;volatile
  2486   002D1E                     
  2487                           ;LCD.c: 131:  LATDbits.LATD2 = 1;
  2488   002D1E  84C1               	bsf	193,2,c	;volatile
  2489   002D20                     
  2490                           ;LCD.c: 132:     _delay((unsigned long)((100)*(32000000UL/4000000.0)));
  2491   002D20  0EA0               	movlw	160
  2492   002D22                     u697:
  2493   002D22  D000               	nop2	
  2494   002D24  2EE8               	decfsz	wreg,f,c
  2495   002D26  D7FD               	bra	u697
  2496   002D28                     
  2497                           ;LCD.c: 133:  LATDbits.LATD2 = 0;
  2498   002D28  94C1               	bcf	193,2,c	;volatile
  2499   002D2A  0012               	return		;funcret
  2500   002D2C                     __end_of_ENVIA_NIBBLE:
  2501                           	callstack 0
  2502                           
  2503                           	psect	rparam
  2504   000000                     
  2505                           	psect	config
  2506                           
  2507                           ;Config register CONFIG1 @ 0x300000
  2508                           ;	External Oscillator Selection
  2509                           ;	FEXTOSC = OFF, Oscillator not enabled
  2510                           ;	Reset Oscillator Selection
  2511                           ;	RSTOSC = EXTOSC, EXTOSC operating per FEXTOSC bits (device manufacturing default)
  2512   300000                     	org	3145728
  2513   300000  FC                 	db	252
  2514                           
  2515                           ;Config register CONFIG2 @ 0x300001
  2516                           ;	Clock out Enable bit
  2517                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
  2518                           ;	PRLOCKED One-Way Set Enable bit
  2519                           ;	PR1WAY = ON, PRLOCKED bit can be cleared and set only once
  2520                           ;	Clock Switch Enable bit
  2521                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
  2522                           ;	Fail-Safe Clock Monitor Enable bit
  2523                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
  2524   300001                     	org	3145729
  2525   300001  FF                 	db	255
  2526                           
  2527                           ;Config register CONFIG3 @ 0x300002
  2528                           ;	MCLR Enable bit
  2529                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
  2530                           ;	Power-up timer selection bits
  2531                           ;	PWRTS = PWRT_64, PWRT set at 64ms
  2532                           ;	Multi-vector enable bit
  2533                           ;	MVECEN = ON, Multi-vector enabled, Vector table used for interrupts
  2534                           ;	IVTLOCK bit One-way set enable bit
  2535                           ;	IVT1WAY = ON, IVTLOCKED bit can be cleared and set only once
  2536                           ;	Low Power BOR Enable bit
  2537                           ;	LPBOREN = OFF, Low-Power BOR disabled
  2538                           ;	Brown-out Reset Enable bits
  2539                           ;	BOREN = OFF, Brown-out Reset disabled
  2540   300002                     	org	3145730
  2541   300002  3D                 	db	61
  2542                           
  2543                           ;Config register CONFIG4 @ 0x300003
  2544                           ;	Brown-out Reset Voltage Selection bits
  2545                           ;	BORV = VBOR_1P9, Brown-out Reset Voltage (VBOR) set to 1.9V
  2546                           ;	ZCD Disable bit
  2547                           ;	ZCD = OFF, ZCD module is disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCD
      +                          CON
  2548                           ;	PPSLOCK bit One-Way Set Enable bit
  2549                           ;	PPS1WAY = ON, PPSLOCKED bit can be cleared and set only once; PPS registers remain loc
      +                          ked after one clear/set cycle
  2550                           ;	Stack Full/Underflow Reset Enable bit
  2551                           ;	STVREN = ON, Stack full/underflow will cause Reset
  2552                           ;	Low Voltage Programming Enable bit
  2553                           ;	LVP = OFF, HV on MCLR/VPP must be used for programming
  2554                           ;	Extended Instruction Set Enable bit
  2555                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
  2556   300003                     	org	3145731
  2557   300003  DF                 	db	223
  2558                           
  2559                           ;Config register CONFIG5 @ 0x300004
  2560                           ;	WDT Period selection bits
  2561                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  2562                           ;	WDT operating mode
  2563                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
  2564   300004                     	org	3145732
  2565   300004  9F                 	db	159
  2566                           
  2567                           ;Config register CONFIG6 @ 0x300005
  2568                           ;	WDT Window Select bits
  2569                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
  2570                           ;	WDT input clock selector
  2571                           ;	WDTCCS = SC, Software Control
  2572   300005                     	org	3145733
  2573   300005  FF                 	db	255
  2574                           
  2575                           ;Config register CONFIG7 @ 0x300006
  2576                           ;	Boot Block Size selection bits
  2577                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
  2578                           ;	Boot Block enable bit
  2579                           ;	BBEN = OFF, Boot block disabled
  2580                           ;	Storage Area Flash enable bit
  2581                           ;	SAFEN = OFF, SAF disabled
  2582                           ;	Background Debugger
  2583                           ;	DEBUG = OFF, Background Debugger disabled
  2584   300006                     	org	3145734
  2585   300006  FF                 	db	255
  2586                           
  2587                           ;Config register CONFIG8 @ 0x300007
  2588                           ;	Boot Block Write Protection bit
  2589                           ;	WRTB = OFF, Boot Block not Write protected
  2590                           ;	Configuration Register Write Protection bit
  2591                           ;	WRTC = OFF, Configuration registers not Write protected
  2592                           ;	Data EEPROM Write Protection bit
  2593                           ;	WRTD = OFF, Data EEPROM not Write protected
  2594                           ;	SAF Write protection bit
  2595                           ;	WRTSAF = OFF, SAF not Write Protected
  2596                           ;	Application Block write protection bit
  2597                           ;	WRTAPP = OFF, Application Block not write protected
  2598   300007                     	org	3145735
  2599   300007  FF                 	db	255
  2600                           
  2601                           ;Config register CONFIG10 @ 0x300009
  2602                           ;	PFM and Data EEPROM Code Protection bit
  2603                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
  2604   300009                     	org	3145737
  2605   300009  FF                 	db	255
  2606                           tosu	equ	0x4FF
  2607                           tosh	equ	0x4FE
  2608                           tosl	equ	0x4FD
  2609                           stkptr	equ	0x4FC
  2610                           pclatu	equ	0x4FB
  2611                           pclath	equ	0x4FA
  2612                           pcl	equ	0x4F9
  2613                           tblptru	equ	0x4F8
  2614                           tblptrh	equ	0x4F7
  2615                           tblptrl	equ	0x4F6
  2616                           tablat	equ	0x4F5
  2617                           prodh	equ	0x4F4
  2618                           prodl	equ	0x4F3
  2619                           indf0	equ	0x4EF
  2620                           postinc0	equ	0x4EE
  2621                           postdec0	equ	0x4ED
  2622                           preinc0	equ	0x4EC
  2623                           plusw0	equ	0x4EB
  2624                           fsr0h	equ	0x4EA
  2625                           fsr0l	equ	0x4E9
  2626                           wreg	equ	0x4E8
  2627                           indf1	equ	0x4E7
  2628                           postinc1	equ	0x4E6
  2629                           postdec1	equ	0x4E5
  2630                           preinc1	equ	0x4E4
  2631                           plusw1	equ	0x4E3
  2632                           fsr1h	equ	0x4E2
  2633                           fsr1l	equ	0x4E1
  2634                           bsr	equ	0x4E0
  2635                           indf2	equ	0x4DF
  2636                           postinc2	equ	0x4DE
  2637                           postdec2	equ	0x4DD
  2638                           preinc2	equ	0x4DC
  2639                           plusw2	equ	0x4DB
  2640                           fsr2h	equ	0x4DA
  2641                           fsr2l	equ	0x4D9
  2642                           status	equ	0x4D8

Data Sizes:
    Strings     29
    Constant    0
    Data        0
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     30      34
    BANK5           160      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0
    BANK32          256      0       0
    BANK33          256      0       0
    BANK34          256      0       0
    BANK35          256      0       0
    BANK36          256      0       0

Pointer List with Targets:

    ESCRIBE_MENSAJE2@cadena	PTR const unsigned char  size(1) Largest target is 16
		 -> STR_1(CODE[16]), STR_2(CODE[8]), STR_3(CODE[5]), 

    strlen@a	PTR const unsigned char  size(1) Largest target is 16
		 -> STR_1(CODE[16]), STR_2(CODE[8]), STR_3(CODE[5]), 

    strlen@s	PTR const unsigned char  size(1) Largest target is 16
		 -> STR_1(CODE[16]), STR_2(CODE[8]), STR_3(CODE[5]), 


Critical Paths under _main in COMRAM

    _main->_LCD_ESCRIBE_VAR_INT
    _configuro->_LCD_INIT
    _LCD_INIT->_CURSOR_ONOFF
    _LCD_INIT->_LCD_CONFIG
    _LCD_CONFIG->_ENVIA_LCD_CMD
    _CURSOR_ONOFF->_ENVIA_LCD_CMD
    _CURSOR_HOME->_ENVIA_LCD_CMD
    _BORRAR_LCD->_ENVIA_LCD_CMD
    _POS_CURSOR->_ENVIA_LCD_CMD
    _ENVIA_LCD_CMD->_ENVIA_NIBBLE
    _ENVIA_LCD_CMD->_LEER_LCD
    _LCD_ESCRIBE_VAR_INT->___lwdiv
    ___lwdiv->___lwmod
    _LCD_CHAR_GRADO->_ENVIA_CHAR
    _ESCRIBE_MENSAJE2->_ENVIA_CHAR
    _ESCRIBE_MENSAJE2->_strlen
    _ENVIA_CHAR->_ENVIA_NIBBLE
    _ENVIA_CHAR->_LEER_LCD

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _main in BANK32

    None.

Critical Paths under _main in BANK33

    None.

Critical Paths under _main in BANK34

    None.

Critical Paths under _main in BANK35

    None.

Critical Paths under _main in BANK36

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0    5042
                                             22 COMRAM     8     8      0
                   _ESCRIBE_MENSAJE2
                     _LCD_CHAR_GRADO
                _LCD_ESCRIBE_VAR_INT
                         _POS_CURSOR
                            ___atdiv
                             ___tmul
                          _configuro
                     _get_DIA_values
                    _tomamuestra_ADC
 ---------------------------------------------------------------------------------
 (1) _tomamuestra_ADC                                      5     3      2      22
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _get_DIA_values                                       6     6      0      60
                                              0 COMRAM     6     6      0
 ---------------------------------------------------------------------------------
 (1) _configuro                                            0     0      0     525
                           _LCD_INIT
 ---------------------------------------------------------------------------------
 (2) _LCD_INIT                                             1     1      0     525
                                              4 COMRAM     1     1      0
                         _BORRAR_LCD
                        _CURSOR_HOME
                       _CURSOR_ONOFF
                         _LCD_CONFIG
 ---------------------------------------------------------------------------------
 (3) _LCD_CONFIG                                           1     1      0     135
                                              3 COMRAM     1     1      0
                      _ENVIA_LCD_CMD
                       _ENVIA_NIBBLE
 ---------------------------------------------------------------------------------
 (3) _CURSOR_ONOFF                                         1     1      0     150
                                              3 COMRAM     1     1      0
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (3) _CURSOR_HOME                                          0     0      0     120
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (3) _BORRAR_LCD                                           0     0      0     120
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (1) ___tmul                                               9     3      6     244
                                              0 COMRAM     9     3      6
 ---------------------------------------------------------------------------------
 (1) ___atdiv                                             11     5      6     604
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (1) _POS_CURSOR                                           2     1      1     448
                                              3 COMRAM     2     1      1
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (4) _ENVIA_LCD_CMD                                        2     2      0     120
                                              1 COMRAM     2     2      0
                       _ENVIA_NIBBLE
                           _LEER_LCD
 ---------------------------------------------------------------------------------
 (1) _LCD_ESCRIBE_VAR_INT                                 10     7      3    2276
                                             12 COMRAM    10     7      3
                         _ENVIA_CHAR
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     767
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     770
                                              5 COMRAM     7     3      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (1) _LCD_CHAR_GRADO                                       0     0      0     120
                         _ENVIA_CHAR
 ---------------------------------------------------------------------------------
 (1) _ESCRIBE_MENSAJE2                                     4     3      1     628
                                              3 COMRAM     4     3      1
                         _ENVIA_CHAR
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strlen                                               3     1      2     166
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _ENVIA_CHAR                                           2     2      0     120
                                              1 COMRAM     2     2      0
                       _ENVIA_NIBBLE
                           _LEER_LCD
 ---------------------------------------------------------------------------------
 (5) _LEER_LCD                                             1     1      0      45
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _ENVIA_NIBBLE                                         1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ESCRIBE_MENSAJE2
     _ENVIA_CHAR
       _ENVIA_NIBBLE
       _LEER_LCD
     _strlen
   _LCD_CHAR_GRADO
     _ENVIA_CHAR
   _LCD_ESCRIBE_VAR_INT
     _ENVIA_CHAR
     ___lwdiv
       ___lwmod (ARG)
     ___lwmod
   _POS_CURSOR
     _ENVIA_LCD_CMD
       _ENVIA_NIBBLE
       _LEER_LCD
   ___atdiv
   ___tmul
   _configuro
     _LCD_INIT
       _BORRAR_LCD
         _ENVIA_LCD_CMD
       _CURSOR_HOME
         _ENVIA_LCD_CMD
       _CURSOR_ONOFF
         _ENVIA_LCD_CMD
       _LCD_CONFIG
         _ENVIA_LCD_CMD
         _ENVIA_NIBBLE
   _get_DIA_values
   _tomamuestra_ADC

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0       0      70        0.0%
EEDATA             400      0       0       0        0.0%
BITBIGSFRllhhhl    1EF      0       0      82        0.0%
BITBIGSFRllhhhl    124      0       0      80        0.0%
BITBIGSFR_1        100      0       0      69        0.0%
BITBANK36          100      0       0      67        0.0%
BANK36             100      0       0      68        0.0%
BITBANK35          100      0       0      65        0.0%
BANK35             100      0       0      66        0.0%
BITBANK34          100      0       0      63        0.0%
BANK34             100      0       0      64        0.0%
BITBANK33          100      0       0      61        0.0%
BANK33             100      0       0      62        0.0%
BITBANK32          100      0       0      59        0.0%
BANK32             100      0       0      60        0.0%
BITBANK31          100      0       0      57        0.0%
BANK31             100      0       0      58        0.0%
BITBANK30          100      0       0      55        0.0%
BANK30             100      0       0      56        0.0%
BITBANK29          100      0       0      53        0.0%
BANK29             100      0       0      54        0.0%
BITBANK28          100      0       0      51        0.0%
BANK28             100      0       0      52        0.0%
BITBANK27          100      0       0      49        0.0%
BANK27             100      0       0      50        0.0%
BITBANK26          100      0       0      47        0.0%
BANK26             100      0       0      48        0.0%
BITBANK25          100      0       0      45        0.0%
BANK25             100      0       0      46        0.0%
BITBANK24          100      0       0      42        0.0%
BANK24             100      0       0      43        0.0%
BITBANK23          100      0       0      40        0.0%
BANK23             100      0       0      41        0.0%
BITBANK22          100      0       0      38        0.0%
BANK22             100      0       0      39        0.0%
BITBANK21          100      0       0      36        0.0%
BANK21             100      0       0      37        0.0%
BITBANK20          100      0       0      34        0.0%
BANK20             100      0       0      35        0.0%
BITBANK19          100      0       0      32        0.0%
BANK19             100      0       0      33        0.0%
BITBANK18          100      0       0      30        0.0%
BANK18             100      0       0      31        0.0%
BITBANK17          100      0       0      28        0.0%
BANK17             100      0       0      29        0.0%
BITBANK16          100      0       0      26        0.0%
BANK16             100      0       0      27        0.0%
BITBANK15          100      0       0      24        0.0%
BANK15             100      0       0      25        0.0%
BITBANK14          100      0       0      22        0.0%
BANK14             100      0       0      23        0.0%
BITBANK13          100      0       0      20        0.0%
BANK13             100      0       0      21        0.0%
BITBANK12          100      0       0      18        0.0%
BANK12             100      0       0      19        0.0%
BITBANK11          100      0       0      16        0.0%
BANK11             100      0       0      17        0.0%
BITBANK10          100      0       0      14        0.0%
BANK10             100      0       0      15        0.0%
BITBANK9           100      0       0      12        0.0%
BANK9              100      0       0      13        0.0%
BITBANK8           100      0       0      10        0.0%
BANK8              100      0       0      11        0.0%
BITBANK7           100      0       0       8        0.0%
BANK7              100      0       0       9        0.0%
BITBANK6           100      0       0       6        0.0%
BANK6              100      0       0       7        0.0%
BITBIGSFRlll        AD      0       0      85        0.0%
BITBIGSFRlh         A8      0       0      75        0.0%
BITBANK5            A0      0       0       4        0.0%
BANK5               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     1E      22       1       35.8%
BITBIGSFRhhhl       23      0       0      72        0.0%
BITBIGSFRllhhhh     1F      0       0      76        0.0%
BITBIGSFRllhhhl     12      0       0      79        0.0%
BITBIGSFRllhhhl      E      0       0      81        0.0%
BITBIGSFRhhhh        7      0       0      71        0.0%
BITBIGSFRhhl         7      0       0      73        0.0%
BITBIGSFRhl          7      0       0      74        0.0%
BITBIGSFRllhhhl      6      0       0      78        0.0%
BITBIGSFRllhhhh      4      0       0      77        0.0%
BITBIGSFRllhl        3      0       0      84        0.0%
BITBIGSFRllhhl       1      0       0      83        0.0%
BIGSFR_1             0      0       0     200        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      22      44        0.0%
DATA                 0      0      22       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Thu Nov 09 22:46:34 2023

                          l32 2916                            l28 2916                            l45 2D40  
                          l62 2CB4                            l80 2D48                            l74 2BA6  
                          l83 2B62                            l93 29C2                            l77 2C84  
                          l86 2D2A                            l95 29FC                            l89 2C50  
                          u10 29FC                            u11 29F8                            u20 2C98  
                          u21 2C94                            u30 2CAE                            u31 2CAA  
            ___atdiv@quotient 0509                 ENVIA_CHAR@aux 0503                           l103 2BE4  
                         l122 26A6                           l212 2AAC                           l125 2D50  
                         l213 2AB8                           l403 2866                           l181 2CE2  
                         l406 289C                           l190 2CEE                           l193 2D0E  
                         l196 2B0E                           l705 298A                           l715 2A60  
                         l900 29A4                           l708 2A58                           l910 29C4  
                         l902 29AC                           l912 29CC                           l904 29AE  
                         l930 2D28                           l914 29D0                           l922 29EA  
                         l906 29B6                           l924 2D12                           l916 29DA  
                         l908 29B8                           l940 2C32                           l932 2C20  
                         l926 2D1E                           l918 29E4                           l950 2C44  
                         l942 2C34                           l934 2C22                           l928 2D20  
                         l952 2C4A                           l944 2C36                           l936 2C26  
                         l960 2C9E                           l890 2992                           l698 2982  
                         l946 2C38                           l938 2C2A                           l954 2D3A  
                         l962 2CAE                           l970 2B1A                           l892 2994  
                         l884 2C1C                           l948 2C3E                           l964 2D42  
                         l956 2C88                           l980 2B4A                           l972 2B2A  
                         l894 2996                           l886 298C                           l990 2C56  
                         l958 2C98                           l982 2B50                           l974 2B38  
                         l966 2B10                           l896 299E                           l888 2990  
                         l992 2C5A                           l984 2B56                           l976 2B3E  
                         l968 2B14                           l898 29A2                           l994 2C5E  
                         l986 2B5C                           l978 2B44                           l996 2C66  
                         l988 2C54                           l998 2C68                           u400 2A2E  
                         u401 2A2A                           u410 2A44                           u411 2A40  
                         u420 28B0                           u500 27C8                           u421 28AC  
                         u501 27C4                           u350 2C10                           u430 28CE  
                         u510 27E6                           u351 2C0C                           u431 28CA  
                         u511 27E2                           u360 2932                           u440 28EC  
                         u520 2816                           u361 292E                           u441 28E8  
                         u521 2812                           u370 2950                           u450 290A  
                         u530 2836                           u371 294C                           u451 2906  
                         u531 2832                           u460 2BA6                           u380 296C  
                         u540 2858                           u461 2BA2                           u381 2968  
                         u541 2854                           u390 2A10                           u550 2884  
                         u470 2CFC                           u391 2A0C                           u551 2880  
                         u607 2B32                           u471 2CF8                           u480 2A7C  
                         u617 2C2C                           u481 2A78                           u490 2AAC  
                         u627 2C60                           u491 2AA8                           u637 2998  
                         u647 29A6                           u567 27A0                           u657 29B0  
                         u577 2BB8                           u667 29C6                           u587 2BCC  
                         u677 29D4                           u597 2B20                           u687 29DE  
                         u697 2D22                   LEER_LCD@aux 0501                           wreg 04E8  
                ?_CURSOR_HOME 0501              ??_LCD_CHAR_GRADO 0504                ??_ENVIA_NIBBLE 0501  
              ENVIA_CHAR@dato 0502                          l1000 2C6A                          l1002 2C6C  
                        l1004 2C72                          l1020 2BA8                          l1006 2C78  
                        l1030 2BDA                          l1022 2BB2                          l1008 2C7E  
                        l1120 2D4A                          l1032 2BDE                          l1024 2BC2  
                        l1026 2BC6                          l1122 2CB6                          l1028 2BD6  
                        l1124 2CCE                          l1140 2AC8                          l1126 2CDC  
                        l1150 2AEC                          l1142 2ACE                          l1400 28F8  
                        l1128 2CDE                          l1152 2AF2                          l1144 2AD2  
                        l1410 2B78                          l1402 290A                          l1154 2AF8  
                        l1146 2AE4                          l1138 2ABA                          l1340 2BE6  
                        l1412 2B92                          l1404 2B64                          l1420 25E4  
                        l1148 2AE8                          l1500 26BE                          l1342 2BEE  
                        l1414 2B94                          l1406 2B70                          l1350 2918  
                        l1422 25F8                          l1430 2664                          l1510 2740  
                        l1502 26C2                          l1344 2BF0                          l1408 2B70  
                        l1360 2950                          l1352 2920                          l1424 2614  
                        l1416 2520                          l1440 2CFC                          l1520 278E  
                        l1512 2768                          l1504 26D0                          l1346 2C10  
                        l1370 297C                          l1362 2956                          l1354 2932  
                        l1426 2638                          l1418 25D8                          l1450 2A88  
                        l1522 2796                          l1514 2772                          l1506 26F8  
                        l1364 296C                          l1356 293A                          l1380 2A2E  
                        l1372 29FE                          l1460 27D4                          l1452 2A98  
                        l1444 2A62                          l1436 2CE6                          l1516 277A  
                        l1508 2720                          l1366 2974                          l1358 2942  
                        l1382 2A44                          l1374 2A10                          l1390 28B0  
                        l1470 2802                          l1462 27D8                          l1454 27B6  
                        l1446 2A6E                          l1438 2CEA                          l1518 278A  
                        l1368 2976                          l1384 2A4C                          l1376 2A18  
                        l1544 2678                          l1392 28BC                          l1480 283E  
                        l1472 2816                          l1464 27E6                          l1456 27BA  
                        l1448 2A7C                          l1386 2A52                          l1378 2A20  
                        l1394 28CE                          l1490 2884                          l1482 2858  
                        l1474 281E                          l1466 27F2                          l1458 27C8  
                        l1396 28DA                          l1388 28A0                          l1492 2890  
                        l1484 2864                          l1476 2828                          l1468 27F6  
                        l1398 28EC                          l1486 286E                          l1478 2836  
                        l1488 2874                          l1496 26A8                          l1498 26B6  
                        STR_1 2501                          STR_2 2511                          STR_3 2519  
                        _LATD 04C1                          _main 26A8                          start FFFC  
               ?_CURSOR_ONOFF 0501             ??_tomamuestra_ADC 0503                  ___param_bank 0000  
             ??_ENVIA_LCD_CMD 0502              __end_of_LCD_INIT 2BE6              __end_of_LEER_LCD 29FE  
                       ?_main 0501               __end_of___atdiv 289E                         _ADPCH 03EC  
                       _ADREF 03F8               __end_of___lwdiv 298C               __end_of___lwmod 2A62  
                       _U1TXB 02A3                         _OSCEN 00B3                         _PORTD 04D1  
                       _TRISD 04C9                   ?_POS_CURSOR 0504                  main@temporal 051C  
 __end_of_LCD_ESCRIBE_VAR_INT 26A8                         tablat 04F5                         status 04D8  
              ??_CURSOR_ONOFF 0504               __initialization 2D2C                  __end_of_main 27B6  
   LCD_ESCRIBE_VAR_INT@decena 0515                        ??_main 0517                 __activetblptr 0003  
   LCD_ESCRIBE_VAR_INT@millar 0513     LCD_ESCRIBE_VAR_INT@numero 050D     LCD_ESCRIBE_VAR_INT@unidad 0516  
                      _ADRESH 03EB                        _ADRESL 03EA                        _ANSELD 0418  
                      _TABLAT 04F5                        _FVRCON 03D7                        _OSCFRQ 00B1  
                      ___tmul 2A62                     ??___atdiv 0507          __end_of_ENVIA_NIBBLE 2D2C  
                   ??___lwdiv 050A                     ??___lwmod 0505                        isa$std 0001  
                      _strlen 2BE6                  __mediumconst 0000                        tblptrh 04F7  
                      tblptrl 04F6                        tblptru 04F8                  ??_BORRAR_LCD 0504  
                   ?_LCD_INIT 0501                     ?_LEER_LCD 0501                    __accesstop 0560  
     __end_of__initialization 2D34                  ??_LCD_CONFIG 0504                 ___rparam_used 0001  
                ??_ENVIA_CHAR 0502                __pcstackCOMRAM 0501            __end_of_BORRAR_LCD 2D4A  
              _get_DIA_values 2ABA              _ESCRIBE_MENSAJE2 2B64              ENVIA_LCD_CMD@aux 0503  
        __end_of_CURSOR_ONOFF 2CB6            __end_of_LCD_CONFIG 2B64            __end_of_ENVIA_CHAR 2C86  
  LCD_ESCRIBE_VAR_INT@centena 0514               _tomamuestra_ADC 2CE4                    ??_LCD_INIT 0505  
                  ??_LEER_LCD 0501              ENVIA_NIBBLE@dato 0501                       ?___tmul 0501  
      __end_of_get_DIA_values 2B10                       ?_strlen 0501                       _OSCCON1 00AD  
                     _TBLPTRH 04F7                       _TBLPTRL 04F6                       _TBLPTRU 04F8  
                ??_POS_CURSOR 0505                    _const_gain 051F                       __Hparam 0000  
                     __Lparam 0000          tomamuestra_ADC@canal 0505             __end_of_configuro 2CE4  
                     ___atdiv 27B6                       ___lwdiv 2918                       ___lwmod 29FE  
                __psmallconst 2500         __end_of_ENVIA_LCD_CMD 2C52                       __pcinit 2D2C  
          __end_of_POS_CURSOR 2918                       __ramtop 2500               ?_get_DIA_values 0501  
                     __ptext0 26A8                       __ptext1 2CE4                       __ptext2 2ABA  
                     __ptext3 2CB6                       __ptext4 2BA8                       __ptext5 2B10  
                     __ptext6 2C86                       __ptext7 2D3A                       __ptext8 2D42  
                     __ptext9 2A62       __end_of_tomamuestra_ADC 2D10                  _ENVIA_NIBBLE 2D10  
        end_of_initialization 2D34                       strlen@a 0503                       strlen@s 0501  
           ESCRIBE_MENSAJE2@i 0507      __end_of_ESCRIBE_MENSAJE2 2BA8                  _CURSOR_ONOFF 2C86  
          CURSOR_ONOFF@estado 0504                  _const_offset 0521                __end_of___tmul 2ABA  
              __end_of_strlen 2C1E                 ??_CURSOR_HOME 0504              ?_tomamuestra_ADC 0501  
         start_initialization 2D2C             ENVIA_LCD_CMD@dato 0502                      ??___tmul 0507  
 LCD_ESCRIBE_VAR_INT@d_millar 0512                ___tmul@product 0507                      ??_strlen 0503  
                 __pbssCOMRAM 051F           __end_of_CURSOR_HOME 2D42                _LCD_CHAR_GRADO 2D4A  
            ___lwdiv@dividend 0506              ??_get_DIA_values 0501                      ?___atdiv 0501  
                    ?___lwdiv 0506                      ?___lwmod 0501                     _configuro 2CB6  
                 __smallconst 2500           _LCD_ESCRIBE_VAR_INT 2520              ___lwdiv@quotient 050A  
                 _U1ERRIRbits 02B2        __end_of_LCD_CHAR_GRADO 2D52                      _LCD_INIT 2BA8  
                    _LEER_LCD 298C                      _LATDbits 04C1               main@lectura_ADC 051A  
        ?_LCD_ESCRIBE_VAR_INT 050D                POS_CURSOR@fila 0505                    ?_configuro 0501  
                  _ADCON0bits 03F3        ESCRIBE_MENSAJE2@cadena 0504           ___tmul@multiplicand 0504  
                 _CURSOR_HOME 2D3A               ?_LCD_CHAR_GRADO 0501         ??_LCD_ESCRIBE_VAR_INT 0510  
                    __Hrparam 0000             ?_ESCRIBE_MENSAJE2 0504                      __Lrparam 0000  
          ??_ESCRIBE_MENSAJE2 0505               ___lwdiv@divisor 0508               ___lwdiv@counter 050C  
                    __ptext10 27B6                      __ptext11 289E                      __ptext20 298C  
                    __ptext12 2C1E                      __ptext21 2D10                      __ptext13 2520  
                    __ptext14 29FE                      __ptext15 2918                      __ptext16 2D4A  
                    __ptext17 2B64                      __ptext18 2BE6                      __ptext19 2C52  
LCD_ESCRIBE_VAR_INT@n_digitos 050F                    _BORRAR_LCD 2D42                    _LCD_CONFIG 2B10  
                  _ENVIA_CHAR 2C52          get_DIA_values@TSHR1H 0503          get_DIA_values@TSHR3H 0505  
        get_DIA_values@TSHR1L 0504          get_DIA_values@TSHR3L 0506                      isa$xinst 0000  
               _ENVIA_LCD_CMD 2C1E                   ??_configuro 0506              ___lwmod@dividend 0501  
           ___tmul@multiplier 0501                ?_ENVIA_LCD_CMD 0501               ___lwmod@divisor 0503  
             ___lwmod@counter 0505           ESCRIBE_MENSAJE2@tam 0506              ___atdiv@dividend 0501  
                 ?_BORRAR_LCD 0501                 ?_ENVIA_NIBBLE 0501                    _POS_CURSOR 289E  
             ___atdiv@divisor 0504                   ?_LCD_CONFIG 0501               ___atdiv@counter 0507  
                 ?_ENVIA_CHAR 0501             POS_CURSOR@columna 0504                  ___atdiv@sign 0508  
