

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Wed Oct 11 21:32:45 2023

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F57Q43
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1
    22                           	psect	text13,global,reloc=2,class=CODE,delta=1
    23                           	psect	text14,global,reloc=2,class=CODE,delta=1
    24                           	psect	text15,global,reloc=2,class=CODE,delta=1
    25                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    26                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    27                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    28   000000                     
    29                           ; Generated 18/07/2023 GMT
    30                           ; 
    31                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    32                           ; All rights reserved.
    33                           ; 
    34                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    35                           ; 
    36                           ; Redistribution and use in source and binary forms, with or without modification, are
    37                           ; permitted provided that the following conditions are met:
    38                           ; 
    39                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    40                           ;        conditions and the following disclaimer.
    41                           ; 
    42                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    43                           ;        of conditions and the following disclaimer in the documentation and/or other
    44                           ;        materials provided with the distribution. Publication is not required when
    45                           ;        this file is used in an embedded application.
    46                           ; 
    47                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    48                           ;        software without specific prior written permission.
    49                           ; 
    50                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    51                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    52                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    53                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    54                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    55                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    56                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    57                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    58                           ; 
    59                           ; 
    60                           ; Code-generator required, PIC18F57Q43 Definitions
    61                           ; 
    62                           ; SFR Addresses
    63   000000                     _LATD	set	1217
    64   000000                     _OSCCON1	set	173
    65   000000                     _LATDbits	set	1217
    66   000000                     _LATFbits	set	1219
    67   000000                     _TRISAbits	set	1222
    68   000000                     _TRISBbits	set	1223
    69   000000                     _TRISD	set	1225
    70   000000                     _TRISFbits	set	1227
    71   000000                     _PORTD	set	1233
    72   000000                     _OSCFRQ	set	177
    73   000000                     _OSCEN	set	179
    74   000000                     _ADRESL	set	1002
    75   000000                     _ADRESH	set	1003
    76   000000                     _ADPCH	set	1004
    77   000000                     _ADCON0bits	set	1011
    78   000000                     _ANSELBbits	set	1032
    79   000000                     _ANSELD	set	1048
    80   000000                     _ANSELFbits	set	1064
    81   000000                     _WPUBbits	set	1033
    82   000000                     _PORTBbits	set	1231
    83   000000                     _ANSELAbits	set	1024
    84                           
    85                           	psect	smallconst
    86   002500                     __psmallconst:
    87                           	callstack 0
    88   002500  00                 	db	0
    89   002501                     STR_3:
    90   002501  50                 	db	80	;'P'
    91   002502  61                 	db	97	;'a'
    92   002503  72                 	db	114	;'r'
    93   002504  70                 	db	112	;'p'
    94   002505  61                 	db	97	;'a'
    95   002506  64                 	db	100	;'d'
    96   002507  65                 	db	101	;'e'
    97   002508  6F                 	db	111	;'o'
    98   002509  20                 	db	32
    99   00250A  6C                 	db	108	;'l'
   100   00250B  65                 	db	101	;'e'
   101   00250C  6E                 	db	110	;'n'
   102   00250D  74                 	db	116	;'t'
   103   00250E  6F                 	db	111	;'o'
   104   00250F  20                 	db	32
   105   002510  00                 	db	0
   106   002511                     STR_2:
   107   002511  50                 	db	80	;'P'
   108   002512  61                 	db	97	;'a'
   109   002513  72                 	db	114	;'r'
   110   002514  70                 	db	112	;'p'
   111   002515  61                 	db	97	;'a'
   112   002516  64                 	db	100	;'d'
   113   002517  65                 	db	101	;'e'
   114   002518  6F                 	db	111	;'o'
   115   002519  20                 	db	32
   116   00251A  72                 	db	114	;'r'
   117   00251B  61                 	db	97	;'a'
   118   00251C  70                 	db	112	;'p'
   119   00251D  69                 	db	105	;'i'
   120   00251E  64                 	db	100	;'d'
   121   00251F  6F                 	db	111	;'o'
   122   002520  00                 	db	0
   123   002521                     STR_1:
   124   002521  53                 	db	83	;'S'
   125   002522  65                 	db	101	;'e'
   126   002523  6D                 	db	109	;'m'
   127   002524  61                 	db	97	;'a'
   128   002525  6E                 	db	110	;'n'
   129   002526  6F                 	db	111	;'o'
   130   002527  6E                 	db	110	;'n'
   131   002528  20                 	db	32
   132   002529  39                 	db	57	;'9'
   133   00252A  00                 	db	0
   134   00252B                     STR_4:
   135   00252B  41                 	db	65	;'A'
   136   00252C  44                 	db	68	;'D'
   137   00252D  43                 	db	67	;'C'
   138   00252E  20                 	db	32
   139   00252F  43                 	db	67	;'C'
   140   002530  48                 	db	72	;'H'
   141   002531  30                 	db	48	;'0'
   142   002532  3A                 	db	58	;':'
   143   002533  00                 	db	0
   144   002534  00                 	db	0	; dummy byte at the end
   145   000000                     
   146                           ; #config settings
   147                           
   148                           	psect	cinit
   149   002A48                     __pcinit:
   150                           	callstack 0
   151   002A48                     start_initialization:
   152                           	callstack 0
   153   002A48                     __initialization:
   154                           	callstack 0
   155                           
   156                           ; Clear objects allocated to COMRAM (10 bytes)
   157   002A48  EE01  F111         	lfsr	0,__pbssCOMRAM
   158   002A4C  0E0A               	movlw	10
   159   002A4E                     clear_0:
   160   002A4E  6AEE               	clrf	postinc0,c
   161   002A50  06E8               	decf	wreg,f,c
   162   002A52  E1FD               	bnz	clear_0
   163   002A54                     end_of_initialization:
   164                           	callstack 0
   165   002A54                     __end_of__initialization:
   166                           	callstack 0
   167   002A54  0E00               	movlw	low (__Lsmallconst shr (0+16))
   168   002A56  6EF8               	movwf	tblptru,c
   169   002A58  0E25               	movlw	high __Lsmallconst
   170   002A5A  6EF7               	movwf	tblptrh,c
   171   002A5C  0100               	movlb	0
   172   002A5E  EF9B  F012         	goto	_main	;jump to C main() function
   173                           
   174                           	psect	bssCOMRAM
   175   000511                     __pbssCOMRAM:
   176                           	callstack 0
   177   000511                     _unidad:
   178                           	callstack 0
   179   000511                     	ds	2
   180   000513                     _decena:
   181                           	callstack 0
   182   000513                     	ds	2
   183   000515                     _centena:
   184                           	callstack 0
   185   000515                     	ds	2
   186   000517                     _millar:
   187                           	callstack 0
   188   000517                     	ds	2
   189   000519                     _resultado:
   190                           	callstack 0
   191   000519                     	ds	2
   192                           
   193                           	psect	cstackCOMRAM
   194   000501                     __pcstackCOMRAM:
   195                           	callstack 0
   196   000501                     ?___lwmod:
   197                           	callstack 0
   198   000501                     ENVIA_NIBBLE@dato:
   199                           	callstack 0
   200   000501                     LEER_LCD@aux:
   201                           	callstack 0
   202   000501                     ___lwmod@dividend:
   203                           	callstack 0
   204                           
   205                           ; 2 bytes @ 0x0
   206   000501                     	ds	1
   207   000502                     ENVIA_CHAR@dato:
   208                           	callstack 0
   209   000502                     ENVIA_LCD_CMD@dato:
   210                           	callstack 0
   211                           
   212                           ; 1 bytes @ 0x1
   213   000502                     	ds	1
   214   000503                     ENVIA_CHAR@aux:
   215                           	callstack 0
   216   000503                     ENVIA_LCD_CMD@aux:
   217                           	callstack 0
   218   000503                     ___lwmod@divisor:
   219                           	callstack 0
   220                           
   221                           ; 2 bytes @ 0x2
   222   000503                     	ds	1
   223   000504                     ??_LCD_CONFIG:
   224   000504                     POS_CURSOR@columna:
   225                           	callstack 0
   226   000504                     CURSOR_ONOFF@estado:
   227                           	callstack 0
   228   000504                     ESCRIBE_MENSAJE@cadena:
   229                           	callstack 0
   230                           
   231                           ; 1 bytes @ 0x3
   232   000504                     	ds	1
   233   000505                     ??_lcd_init:
   234   000505                     POS_CURSOR@fila:
   235                           	callstack 0
   236   000505                     ESCRIBE_MENSAJE@tam:
   237                           	callstack 0
   238   000505                     ___lwmod@counter:
   239                           	callstack 0
   240                           
   241                           ; 1 bytes @ 0x4
   242   000505                     	ds	1
   243   000506                     ??_ESCRIBE_MENSAJE:
   244   000506                     ?___lwdiv:
   245                           	callstack 0
   246   000506                     ___lwdiv@dividend:
   247                           	callstack 0
   248                           
   249                           ; 2 bytes @ 0x5
   250   000506                     	ds	1
   251   000507                     ESCRIBE_MENSAJE@i:
   252                           	callstack 0
   253                           
   254                           ; 1 bytes @ 0x6
   255   000507                     	ds	1
   256   000508                     ___lwdiv@divisor:
   257                           	callstack 0
   258                           
   259                           ; 2 bytes @ 0x7
   260   000508                     	ds	2
   261   00050A                     ___lwdiv@quotient:
   262                           	callstack 0
   263                           
   264                           ; 2 bytes @ 0x9
   265   00050A                     	ds	2
   266   00050C                     ___lwdiv@counter:
   267                           	callstack 0
   268                           
   269                           ; 1 bytes @ 0xB
   270   00050C                     	ds	1
   271   00050D                     convierte@valor:
   272                           	callstack 0
   273                           
   274                           ; 2 bytes @ 0xC
   275   00050D                     	ds	2
   276   00050F                     ??_main:
   277                           
   278                           ; 1 bytes @ 0xE
   279   00050F                     	ds	2
   280                           
   281 ;;
   282 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   283 ;;
   284 ;; *************** function _main *****************
   285 ;; Defined at:
   286 ;;		line 46 in file "maincode3.c"
   287 ;; Parameters:    Size  Location     Type
   288 ;;		None
   289 ;; Auto vars:     Size  Location     Type
   290 ;;		None
   291 ;; Return value:  Size  Location     Type
   292 ;;                  1    wreg      void 
   293 ;; Registers used:
   294 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   295 ;; Tracked objects:
   296 ;;		On entry : 0/0
   297 ;;		On exit  : 0/0
   298 ;;		Unchanged: 0/0
   299 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   300 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   301 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   302 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   303 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   304 ;;Total ram usage:        2 bytes
   305 ;; Hardware stack levels required when called: 4
   306 ;; This function calls:
   307 ;;		_ENVIA_CHAR
   308 ;;		_ESCRIBE_MENSAJE
   309 ;;		_POS_CURSOR
   310 ;;		_configuro
   311 ;;		_convierte
   312 ;;		_lcd_init
   313 ;; This function is called by:
   314 ;;		Startup code after reset
   315 ;; This function uses a non-reentrant model
   316 ;;
   317                           
   318                           	psect	text0
   319   002536                     __ptext0:
   320                           	callstack 0
   321   002536                     _main:
   322                           	callstack 123
   323   002536                     
   324                           ;maincode3.c: 47:     configuro();
   325   002536  EC95  F014         	call	_configuro	;wreg free
   326   00253A                     
   327                           ;maincode3.c: 48:     lcd_init();
   328   00253A  EC7A  F014         	call	_lcd_init	;wreg free
   329   00253E                     
   330                           ;maincode3.c: 49:     POS_CURSOR(1,3);
   331   00253E  0E03               	movlw	3
   332   002540  6E04               	movwf	POS_CURSOR@columna^(0+1280),c
   333   002542  0E01               	movlw	1
   334   002544  EC5D  F014         	call	_POS_CURSOR
   335   002548                     
   336                           ;maincode3.c: 50:     ESCRIBE_MENSAJE("Semanon 9", 9);
   337   002548  0E21               	movlw	low STR_1
   338   00254A  6E04               	movwf	ESCRIBE_MENSAJE@cadena^(0+1280),c
   339   00254C  0E09               	movlw	9
   340   00254E  6E05               	movwf	ESCRIBE_MENSAJE@tam^(0+1280),c
   341   002550  ECCA  F014         	call	_ESCRIBE_MENSAJE	;wreg free
   342   002554                     
   343                           ;maincode3.c: 51:     _delay((unsigned long)((3000)*(48000000UL/4000.0)));
   344   002554  0EB7               	movlw	183
   345   002556  6E10               	movwf	(??_main+1)^(0+1280),c
   346   002558  0EA1               	movlw	161
   347   00255A  6E0F               	movwf	??_main^(0+1280),c
   348   00255C  0EC4               	movlw	196
   349   00255E                     u317:
   350   00255E  2EE8               	decfsz	wreg,f,c
   351   002560  D7FE               	bra	u317
   352   002562  2E0F               	decfsz	??_main^(0+1280),f,c
   353   002564  D7FC               	bra	u317
   354   002566  2E10               	decfsz	(??_main+1)^(0+1280),f,c
   355   002568  D7FA               	bra	u317
   356   00256A                     l1200:
   357                           
   358                           ;maincode3.c: 53:         if(PORTBbits.RB4 == 0){
   359   00256A  B8CF               	btfsc	207,4,c	;volatile
   360   00256C  EFBA  F012         	goto	u291
   361   002570  EFBC  F012         	goto	u290
   362   002574                     u291:
   363   002574  EFE1  F012         	goto	l1214
   364   002578                     u290:
   365   002578                     
   366                           ;maincode3.c: 54:             POS_CURSOR(1,0);
   367   002578  0E00               	movlw	0
   368   00257A  6E04               	movwf	POS_CURSOR@columna^(0+1280),c
   369   00257C  0E01               	movlw	1
   370   00257E  EC5D  F014         	call	_POS_CURSOR
   371   002582                     
   372                           ;maincode3.c: 55:             ESCRIBE_MENSAJE("Parpadeo rapido", 15);
   373   002582  0E11               	movlw	low STR_2
   374   002584  6E04               	movwf	ESCRIBE_MENSAJE@cadena^(0+1280),c
   375   002586  0E0F               	movlw	15
   376   002588  6E05               	movwf	ESCRIBE_MENSAJE@tam^(0+1280),c
   377   00258A  ECCA  F014         	call	_ESCRIBE_MENSAJE	;wreg free
   378   00258E                     
   379                           ;maincode3.c: 56:             LATFbits.LATF3 = 0;
   380   00258E  96C3               	bcf	195,3,c	;volatile
   381   002590                     
   382                           ;maincode3.c: 57:             _delay((unsigned long)((50)*(48000000UL/4000.0)));
   383   002590  0E04               	movlw	4
   384   002592  6E10               	movwf	(??_main+1)^(0+1280),c
   385   002594  0E0C               	movlw	12
   386   002596  6E0F               	movwf	??_main^(0+1280),c
   387   002598  0E34               	movlw	52
   388   00259A                     u327:
   389   00259A  2EE8               	decfsz	wreg,f,c
   390   00259C  D7FE               	bra	u327
   391   00259E  2E0F               	decfsz	??_main^(0+1280),f,c
   392   0025A0  D7FC               	bra	u327
   393   0025A2  2E10               	decfsz	(??_main+1)^(0+1280),f,c
   394   0025A4  D7FA               	bra	u327
   395   0025A6                     
   396                           ;maincode3.c: 58:             LATFbits.LATF3 = 1;
   397   0025A6  86C3               	bsf	195,3,c	;volatile
   398   0025A8                     
   399                           ;maincode3.c: 59:             _delay((unsigned long)((50)*(48000000UL/4000.0)));
   400   0025A8  0E04               	movlw	4
   401   0025AA  6E10               	movwf	(??_main+1)^(0+1280),c
   402   0025AC  0E0C               	movlw	12
   403   0025AE  6E0F               	movwf	??_main^(0+1280),c
   404   0025B0  0E34               	movlw	52
   405   0025B2                     u337:
   406   0025B2  2EE8               	decfsz	wreg,f,c
   407   0025B4  D7FE               	bra	u337
   408   0025B6  2E0F               	decfsz	??_main^(0+1280),f,c
   409   0025B8  D7FC               	bra	u337
   410   0025BA  2E10               	decfsz	(??_main+1)^(0+1280),f,c
   411   0025BC  D7FA               	bra	u337
   412                           
   413                           ;maincode3.c: 60:         }
   414   0025BE  EF04  F013         	goto	l1226
   415   0025C2                     l1214:
   416                           
   417                           ;maincode3.c: 62:             POS_CURSOR(1,0);
   418   0025C2  0E00               	movlw	0
   419   0025C4  6E04               	movwf	POS_CURSOR@columna^(0+1280),c
   420   0025C6  0E01               	movlw	1
   421   0025C8  EC5D  F014         	call	_POS_CURSOR
   422   0025CC                     
   423                           ;maincode3.c: 63:             ESCRIBE_MENSAJE("Parpadeo lento ", 15);
   424   0025CC  0E01               	movlw	low STR_3
   425   0025CE  6E04               	movwf	ESCRIBE_MENSAJE@cadena^(0+1280),c
   426   0025D0  0E0F               	movlw	15
   427   0025D2  6E05               	movwf	ESCRIBE_MENSAJE@tam^(0+1280),c
   428   0025D4  ECCA  F014         	call	_ESCRIBE_MENSAJE	;wreg free
   429   0025D8                     
   430                           ;maincode3.c: 64:             LATFbits.LATF3 = 0;
   431   0025D8  96C3               	bcf	195,3,c	;volatile
   432   0025DA                     
   433                           ;maincode3.c: 65:             _delay((unsigned long)((200)*(48000000UL/4000.0)));
   434   0025DA  0E0D               	movlw	13
   435   0025DC  6E10               	movwf	(??_main+1)^(0+1280),c
   436   0025DE  0E2D               	movlw	45
   437   0025E0  6E0F               	movwf	??_main^(0+1280),c
   438   0025E2  0ED8               	movlw	216
   439   0025E4                     u347:
   440   0025E4  2EE8               	decfsz	wreg,f,c
   441   0025E6  D7FE               	bra	u347
   442   0025E8  2E0F               	decfsz	??_main^(0+1280),f,c
   443   0025EA  D7FC               	bra	u347
   444   0025EC  2E10               	decfsz	(??_main+1)^(0+1280),f,c
   445   0025EE  D7FA               	bra	u347
   446   0025F0                     
   447                           ;maincode3.c: 66:             LATFbits.LATF3 = 1;
   448   0025F0  86C3               	bsf	195,3,c	;volatile
   449   0025F2                     
   450                           ;maincode3.c: 67:             _delay((unsigned long)((200)*(48000000UL/4000.0)));
   451   0025F2  0E0D               	movlw	13
   452   0025F4  6E10               	movwf	(??_main+1)^(0+1280),c
   453   0025F6  0E2D               	movlw	45
   454   0025F8  6E0F               	movwf	??_main^(0+1280),c
   455   0025FA  0ED8               	movlw	216
   456   0025FC                     u357:
   457   0025FC  2EE8               	decfsz	wreg,f,c
   458   0025FE  D7FE               	bra	u357
   459   002600  2E0F               	decfsz	??_main^(0+1280),f,c
   460   002602  D7FC               	bra	u357
   461   002604  2E10               	decfsz	(??_main+1)^(0+1280),f,c
   462   002606  D7FA               	bra	u357
   463   002608                     l1226:
   464                           
   465                           ;maincode3.c: 69:         ADCON0bits.GO = 1;
   466   002608  0103               	movlb	3	; () banked
   467   00260A  81F3               	bsf	243,0,b	;volatile
   468   00260C                     l153:
   469                           
   470                           ; BSR set to: 3
   471   00260C  B1F3               	btfsc	243,0,b	;volatile
   472   00260E  EF0B  F013         	goto	u301
   473   002612  EF0D  F013         	goto	u300
   474   002616                     u301:
   475   002616  EF06  F013         	goto	l153
   476   00261A                     u300:
   477   00261A                     
   478                           ; BSR set to: 3
   479                           ;maincode3.c: 71:         resultado = (ADRESH << 8) + ADRESL;
   480   00261A  51EB               	movf	235,w,b	;volatile
   481   00261C  6E10               	movwf	(??_main+1)^(0+1280),c
   482   00261E  6A0F               	clrf	??_main^(0+1280),c
   483   002620  51EA               	movf	234,w,b	;volatile
   484   002622  240F               	addwf	??_main^(0+1280),w,c
   485   002624  6E19               	movwf	_resultado^(0+1280),c
   486   002626  0E00               	movlw	0
   487   002628  2010               	addwfc	(??_main+1)^(0+1280),w,c
   488   00262A  6E1A               	movwf	(_resultado+1)^(0+1280),c
   489   00262C                     
   490                           ; BSR set to: 3
   491                           ;maincode3.c: 72:         convierte(resultado);
   492   00262C  C519  F50D         	movff	_resultado,convierte@valor
   493   002630  C51A  F50E         	movff	_resultado+1,convierte@valor+1
   494   002634  EC3B  F013         	call	_convierte	;wreg free
   495   002638                     
   496                           ;maincode3.c: 73:         POS_CURSOR(2,0);
   497   002638  0E00               	movlw	0
   498   00263A  6E04               	movwf	POS_CURSOR@columna^(0+1280),c
   499   00263C  0E02               	movlw	2
   500   00263E  EC5D  F014         	call	_POS_CURSOR
   501   002642                     
   502                           ;maincode3.c: 74:         ESCRIBE_MENSAJE("ADC CH0:", 8);
   503   002642  0E2B               	movlw	low STR_4
   504   002644  6E04               	movwf	ESCRIBE_MENSAJE@cadena^(0+1280),c
   505   002646  0E08               	movlw	8
   506   002648  6E05               	movwf	ESCRIBE_MENSAJE@tam^(0+1280),c
   507   00264A  ECCA  F014         	call	_ESCRIBE_MENSAJE	;wreg free
   508   00264E                     
   509                           ;maincode3.c: 75:         ENVIA_CHAR(millar+0x30);
   510   00264E  5017               	movf	_millar^(0+1280),w,c
   511   002650  0F30               	addlw	48
   512   002652  ECE4  F014         	call	_ENVIA_CHAR
   513   002656                     
   514                           ;maincode3.c: 76:         ENVIA_CHAR(centena+0x30);
   515   002656  5015               	movf	_centena^(0+1280),w,c
   516   002658  0F30               	addlw	48
   517   00265A  ECE4  F014         	call	_ENVIA_CHAR
   518   00265E                     
   519                           ;maincode3.c: 77:         ENVIA_CHAR(decena+0x30);
   520   00265E  5013               	movf	_decena^(0+1280),w,c
   521   002660  0F30               	addlw	48
   522   002662  ECE4  F014         	call	_ENVIA_CHAR
   523   002666                     
   524                           ;maincode3.c: 78:         ENVIA_CHAR(unidad+0x30);
   525   002666  5011               	movf	_unidad^(0+1280),w,c
   526   002668  0F30               	addlw	48
   527   00266A  ECE4  F014         	call	_ENVIA_CHAR
   528   00266E  EFB5  F012         	goto	l1200
   529   002672  EFFE  F0FF         	goto	start
   530   002676                     __end_of_main:
   531                           	callstack 0
   532                           
   533 ;; *************** function _lcd_init *****************
   534 ;; Defined at:
   535 ;;		line 29 in file "maincode3.c"
   536 ;; Parameters:    Size  Location     Type
   537 ;;		None
   538 ;; Auto vars:     Size  Location     Type
   539 ;;		None
   540 ;; Return value:  Size  Location     Type
   541 ;;                  1    wreg      void 
   542 ;; Registers used:
   543 ;;		wreg, status,2, status,0, cstack
   544 ;; Tracked objects:
   545 ;;		On entry : 0/0
   546 ;;		On exit  : 0/0
   547 ;;		Unchanged: 0/0
   548 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   549 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   550 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   551 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   552 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   553 ;;Total ram usage:        2 bytes
   554 ;; Hardware stack levels used: 1
   555 ;; Hardware stack levels required when called: 3
   556 ;; This function calls:
   557 ;;		_BORRAR_LCD
   558 ;;		_CURSOR_HOME
   559 ;;		_CURSOR_ONOFF
   560 ;;		_LCD_CONFIG
   561 ;; This function is called by:
   562 ;;		_main
   563 ;; This function uses a non-reentrant model
   564 ;;
   565                           
   566                           	psect	text1
   567   0028F4                     __ptext1:
   568                           	callstack 0
   569   0028F4                     _lcd_init:
   570                           	callstack 123
   571   0028F4                     
   572                           ;maincode3.c: 30:     TRISD = 0x00;
   573   0028F4  0E00               	movlw	0
   574   0028F6  6EC9               	movwf	201,c	;volatile
   575                           
   576                           ;maincode3.c: 31:     ANSELD = 0x00;
   577   0028F8  0E00               	movlw	0
   578   0028FA  0104               	movlb	4	; () banked
   579   0028FC  6F18               	movwf	24,b	;volatile
   580   0028FE                     
   581                           ; BSR set to: 4
   582                           ;maincode3.c: 32:     LCD_CONFIG();
   583   0028FE  EC2D  F014         	call	_LCD_CONFIG	;wreg free
   584   002902                     
   585                           ;maincode3.c: 33:     _delay((unsigned long)((19)*(48000000UL/4000.0)));
   586   002902  0E02               	movlw	2
   587   002904  6E06               	movwf	(??_lcd_init+1)^(0+1280),c
   588   002906  0E29               	movlw	41
   589   002908  6E05               	movwf	??_lcd_init^(0+1280),c
   590   00290A  0E17               	movlw	23
   591   00290C                     u367:
   592   00290C  2EE8               	decfsz	wreg,f,c
   593   00290E  D7FE               	bra	u367
   594   002910  2E05               	decfsz	??_lcd_init^(0+1280),f,c
   595   002912  D7FC               	bra	u367
   596   002914  2E06               	decfsz	(??_lcd_init+1)^(0+1280),f,c
   597   002916  D7FA               	bra	u367
   598   002918  0000               	nop	
   599   00291A                     
   600                           ;maincode3.c: 34:     BORRAR_LCD();
   601   00291A  EC35  F015         	call	_BORRAR_LCD	;wreg free
   602   00291E                     
   603                           ;maincode3.c: 35:     CURSOR_HOME();
   604   00291E  EC31  F015         	call	_CURSOR_HOME	;wreg free
   605   002922                     
   606                           ;maincode3.c: 36:     CURSOR_ONOFF(1);
   607   002922  0E01               	movlw	1
   608   002924  ECFE  F014         	call	_CURSOR_ONOFF
   609   002928  0012               	return		;funcret
   610   00292A                     __end_of_lcd_init:
   611                           	callstack 0
   612                           
   613 ;; *************** function _LCD_CONFIG *****************
   614 ;; Defined at:
   615 ;;		line 72 in file "LCD.c"
   616 ;; Parameters:    Size  Location     Type
   617 ;;		None
   618 ;; Auto vars:     Size  Location     Type
   619 ;;		None
   620 ;; Return value:  Size  Location     Type
   621 ;;                  1    wreg      void 
   622 ;; Registers used:
   623 ;;		wreg, status,2, status,0, cstack
   624 ;; Tracked objects:
   625 ;;		On entry : 0/0
   626 ;;		On exit  : 0/0
   627 ;;		Unchanged: 0/0
   628 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   629 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   630 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   631 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   632 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   633 ;;Total ram usage:        1 bytes
   634 ;; Hardware stack levels used: 1
   635 ;; Hardware stack levels required when called: 2
   636 ;; This function calls:
   637 ;;		_ENVIA_LCD_CMD
   638 ;;		_ENVIA_NIBBLE
   639 ;; This function is called by:
   640 ;;		_lcd_init
   641 ;; This function uses a non-reentrant model
   642 ;;
   643                           
   644                           	psect	text2
   645   00285A                     __ptext2:
   646                           	callstack 0
   647   00285A                     _LCD_CONFIG:
   648                           	callstack 123
   649   00285A                     
   650                           ;LCD.c: 74:  LATDbits.LATD0 = 0;
   651   00285A  90C1               	bcf	193,0,c	;volatile
   652                           
   653                           ;LCD.c: 75:  LATDbits.LATD1 = 0;
   654   00285C  92C1               	bcf	193,1,c	;volatile
   655   00285E                     
   656                           ;LCD.c: 76:  ENVIA_NIBBLE(0x30);
   657   00285E  0E30               	movlw	48
   658   002860  EC16  F015         	call	_ENVIA_NIBBLE
   659   002864                     
   660                           ;LCD.c: 77:         _delay(24000);
   661   002864  0E20               	movlw	32
   662   002866  6E04               	movwf	??_LCD_CONFIG^(0+1280),c
   663   002868  0E2A               	movlw	42
   664   00286A                     u377:
   665   00286A  2EE8               	decfsz	wreg,f,c
   666   00286C  D7FE               	bra	u377
   667   00286E  2E04               	decfsz	??_LCD_CONFIG^(0+1280),f,c
   668   002870  D7FC               	bra	u377
   669   002872                     
   670                           ;LCD.c: 78:         _delay(24000);
   671   002872  0E20               	movlw	32
   672   002874  6E04               	movwf	??_LCD_CONFIG^(0+1280),c
   673   002876  0E2A               	movlw	42
   674   002878                     u387:
   675   002878  2EE8               	decfsz	wreg,f,c
   676   00287A  D7FE               	bra	u387
   677   00287C  2E04               	decfsz	??_LCD_CONFIG^(0+1280),f,c
   678   00287E  D7FC               	bra	u387
   679                           
   680                           ;LCD.c: 81:  ENVIA_NIBBLE(0x30);
   681   002880  0E30               	movlw	48
   682   002882  EC16  F015         	call	_ENVIA_NIBBLE
   683   002886                     
   684                           ;LCD.c: 83:  _delay(1200);
   685   002886  0EF0               	movlw	240
   686   002888                     u397:
   687   002888  D000               	nop2	
   688   00288A  2EE8               	decfsz	wreg,f,c
   689   00288C  D7FD               	bra	u397
   690   00288E                     
   691                           ;LCD.c: 84:         ENVIA_NIBBLE(0x30);
   692   00288E  0E30               	movlw	48
   693   002890  EC16  F015         	call	_ENVIA_NIBBLE
   694   002894                     
   695                           ;LCD.c: 85:  ENVIA_NIBBLE(0x20);
   696   002894  0E20               	movlw	32
   697   002896  EC16  F015         	call	_ENVIA_NIBBLE
   698   00289A                     
   699                           ;LCD.c: 86:  ENVIA_LCD_CMD(0x01);
   700   00289A  0E01               	movlw	1
   701   00289C  ECB0  F014         	call	_ENVIA_LCD_CMD
   702   0028A0                     
   703                           ;LCD.c: 87:  ENVIA_LCD_CMD(0x28);
   704   0028A0  0E28               	movlw	40
   705   0028A2  ECB0  F014         	call	_ENVIA_LCD_CMD
   706   0028A6                     
   707                           ;LCD.c: 88:  ENVIA_LCD_CMD(0x0F);
   708   0028A6  0E0F               	movlw	15
   709   0028A8  ECB0  F014         	call	_ENVIA_LCD_CMD
   710   0028AC                     
   711                           ;LCD.c: 89:  ENVIA_LCD_CMD(0x06);
   712   0028AC  0E06               	movlw	6
   713   0028AE  ECB0  F014         	call	_ENVIA_LCD_CMD
   714   0028B2                     
   715                           ;LCD.c: 90:  ENVIA_LCD_CMD(0x01);
   716   0028B2  0E01               	movlw	1
   717   0028B4  ECB0  F014         	call	_ENVIA_LCD_CMD
   718   0028B8  0012               	return		;funcret
   719   0028BA                     __end_of_LCD_CONFIG:
   720                           	callstack 0
   721                           
   722 ;; *************** function _CURSOR_ONOFF *****************
   723 ;; Defined at:
   724 ;;		line 35 in file "LCD.c"
   725 ;; Parameters:    Size  Location     Type
   726 ;;  estado          1    wreg     unsigned char 
   727 ;; Auto vars:     Size  Location     Type
   728 ;;  estado          1    3[COMRAM] unsigned char 
   729 ;; Return value:  Size  Location     Type
   730 ;;                  1    wreg      void 
   731 ;; Registers used:
   732 ;;		wreg, status,2, status,0, cstack
   733 ;; Tracked objects:
   734 ;;		On entry : 0/0
   735 ;;		On exit  : 0/0
   736 ;;		Unchanged: 0/0
   737 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   738 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   739 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   740 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   741 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   742 ;;Total ram usage:        1 bytes
   743 ;; Hardware stack levels used: 1
   744 ;; Hardware stack levels required when called: 2
   745 ;; This function calls:
   746 ;;		_ENVIA_LCD_CMD
   747 ;; This function is called by:
   748 ;;		_lcd_init
   749 ;; This function uses a non-reentrant model
   750 ;;
   751                           
   752                           	psect	text3
   753   0029FC                     __ptext3:
   754                           	callstack 0
   755   0029FC                     _CURSOR_ONOFF:
   756                           	callstack 123
   757                           
   758                           ;incstack = 0
   759                           ;CURSOR_ONOFF@estado stored from wreg
   760   0029FC  6E04               	movwf	CURSOR_ONOFF@estado^(0+1280),c
   761   0029FE                     
   762                           ;LCD.c: 35: void CURSOR_ONOFF(unsigned char estado);LCD.c: 36: {;LCD.c: 37:  if(estado =
      +                          = 0) ENVIA_LCD_CMD(0x0E);
   763   0029FE  5004               	movf	CURSOR_ONOFF@estado^(0+1280),w,c
   764   002A00  A4D8               	btfss	status,2,c
   765   002A02  EF05  F015         	goto	u21
   766   002A06  EF07  F015         	goto	u20
   767   002A0A                     u21:
   768   002A0A  EF0A  F015         	goto	l908
   769   002A0E                     u20:
   770   002A0E  0E0E               	movlw	14
   771   002A10  ECB0  F014         	call	_ENVIA_LCD_CMD
   772   002A14                     l908:
   773                           
   774                           ;LCD.c: 38:  if(estado == 1) ENVIA_LCD_CMD(0x0C);
   775   002A14  0404               	decf	CURSOR_ONOFF@estado^(0+1280),w,c
   776   002A16  A4D8               	btfss	status,2,c
   777   002A18  EF10  F015         	goto	u31
   778   002A1C  EF12  F015         	goto	u30
   779   002A20                     u31:
   780   002A20  EF15  F015         	goto	l42
   781   002A24                     u30:
   782   002A24  0E0C               	movlw	12
   783   002A26  ECB0  F014         	call	_ENVIA_LCD_CMD
   784   002A2A                     l42:
   785   002A2A  0012               	return		;funcret
   786   002A2C                     __end_of_CURSOR_ONOFF:
   787                           	callstack 0
   788                           
   789 ;; *************** function _CURSOR_HOME *****************
   790 ;; Defined at:
   791 ;;		line 30 in file "LCD.c"
   792 ;; Parameters:    Size  Location     Type
   793 ;;		None
   794 ;; Auto vars:     Size  Location     Type
   795 ;;		None
   796 ;; Return value:  Size  Location     Type
   797 ;;                  1    wreg      void 
   798 ;; Registers used:
   799 ;;		wreg, status,2, status,0, cstack
   800 ;; Tracked objects:
   801 ;;		On entry : 0/0
   802 ;;		On exit  : 0/0
   803 ;;		Unchanged: 0/0
   804 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   805 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   806 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   807 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   808 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   809 ;;Total ram usage:        0 bytes
   810 ;; Hardware stack levels used: 1
   811 ;; Hardware stack levels required when called: 2
   812 ;; This function calls:
   813 ;;		_ENVIA_LCD_CMD
   814 ;; This function is called by:
   815 ;;		_lcd_init
   816 ;; This function uses a non-reentrant model
   817 ;;
   818                           
   819                           	psect	text4
   820   002A62                     __ptext4:
   821                           	callstack 0
   822   002A62                     _CURSOR_HOME:
   823                           	callstack 123
   824   002A62                     
   825                           ;LCD.c: 32:  ENVIA_LCD_CMD(0x02);
   826   002A62  0E02               	movlw	2
   827   002A64  ECB0  F014         	call	_ENVIA_LCD_CMD
   828   002A68  0012               	return		;funcret
   829   002A6A                     __end_of_CURSOR_HOME:
   830                           	callstack 0
   831                           
   832 ;; *************** function _BORRAR_LCD *****************
   833 ;; Defined at:
   834 ;;		line 67 in file "LCD.c"
   835 ;; Parameters:    Size  Location     Type
   836 ;;		None
   837 ;; Auto vars:     Size  Location     Type
   838 ;;		None
   839 ;; Return value:  Size  Location     Type
   840 ;;                  1    wreg      void 
   841 ;; Registers used:
   842 ;;		wreg, status,2, status,0, cstack
   843 ;; Tracked objects:
   844 ;;		On entry : 0/0
   845 ;;		On exit  : 0/0
   846 ;;		Unchanged: 0/0
   847 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   848 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   849 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   850 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   851 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   852 ;;Total ram usage:        0 bytes
   853 ;; Hardware stack levels used: 1
   854 ;; Hardware stack levels required when called: 2
   855 ;; This function calls:
   856 ;;		_ENVIA_LCD_CMD
   857 ;; This function is called by:
   858 ;;		_lcd_init
   859 ;; This function uses a non-reentrant model
   860 ;;
   861                           
   862                           	psect	text5
   863   002A6A                     __ptext5:
   864                           	callstack 0
   865   002A6A                     _BORRAR_LCD:
   866                           	callstack 123
   867   002A6A                     
   868                           ;LCD.c: 69:  ENVIA_LCD_CMD(0x01);
   869   002A6A  0E01               	movlw	1
   870   002A6C  ECB0  F014         	call	_ENVIA_LCD_CMD
   871   002A70  0012               	return		;funcret
   872   002A72                     __end_of_BORRAR_LCD:
   873                           	callstack 0
   874                           
   875 ;; *************** function _convierte *****************
   876 ;; Defined at:
   877 ;;		line 39 in file "maincode3.c"
   878 ;; Parameters:    Size  Location     Type
   879 ;;  valor           2   12[COMRAM] unsigned int 
   880 ;; Auto vars:     Size  Location     Type
   881 ;;		None
   882 ;; Return value:  Size  Location     Type
   883 ;;                  1    wreg      void 
   884 ;; Registers used:
   885 ;;		wreg, status,2, status,0, cstack
   886 ;; Tracked objects:
   887 ;;		On entry : 0/0
   888 ;;		On exit  : 0/0
   889 ;;		Unchanged: 0/0
   890 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   891 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   892 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   893 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   894 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   895 ;;Total ram usage:        2 bytes
   896 ;; Hardware stack levels used: 1
   897 ;; Hardware stack levels required when called: 1
   898 ;; This function calls:
   899 ;;		___lwdiv
   900 ;;		___lwmod
   901 ;; This function is called by:
   902 ;;		_main
   903 ;; This function uses a non-reentrant model
   904 ;;
   905                           
   906                           	psect	text6
   907   002676                     __ptext6:
   908                           	callstack 0
   909   002676                     _convierte:
   910                           	callstack 125
   911   002676                     
   912                           ;maincode3.c: 40:     millar = valor / 1000;
   913   002676  C50D  F506         	movff	convierte@valor,___lwdiv@dividend
   914   00267A  C50E  F507         	movff	convierte@valor+1,___lwdiv@dividend+1
   915   00267E  0E03               	movlw	3
   916   002680  6E09               	movwf	(___lwdiv@divisor+1)^(0+1280),c
   917   002682  0EE8               	movlw	232
   918   002684  6E08               	movwf	___lwdiv@divisor^(0+1280),c
   919   002686  EC88  F013         	call	___lwdiv	;wreg free
   920   00268A  C506  F517         	movff	?___lwdiv,_millar
   921   00268E  C507  F518         	movff	?___lwdiv+1,_millar+1
   922                           
   923                           ;maincode3.c: 41:     centena = (valor % 1000) / 100;
   924   002692  0E03               	movlw	3
   925   002694  6E04               	movwf	(___lwmod@divisor+1)^(0+1280),c
   926   002696  0EE8               	movlw	232
   927   002698  6E03               	movwf	___lwmod@divisor^(0+1280),c
   928   00269A  C50D  F501         	movff	convierte@valor,___lwmod@dividend
   929   00269E  C50E  F502         	movff	convierte@valor+1,___lwmod@dividend+1
   930   0026A2  ECFB  F013         	call	___lwmod	;wreg free
   931   0026A6  C501  F506         	movff	?___lwmod,___lwdiv@dividend
   932   0026AA  C502  F507         	movff	?___lwmod+1,___lwdiv@dividend+1
   933   0026AE  0E00               	movlw	0
   934   0026B0  6E09               	movwf	(___lwdiv@divisor+1)^(0+1280),c
   935   0026B2  0E64               	movlw	100
   936   0026B4  6E08               	movwf	___lwdiv@divisor^(0+1280),c
   937   0026B6  EC88  F013         	call	___lwdiv	;wreg free
   938   0026BA  C506  F515         	movff	?___lwdiv,_centena
   939   0026BE  C507  F516         	movff	?___lwdiv+1,_centena+1
   940                           
   941                           ;maincode3.c: 42:     decena = (valor % 100) / 10;
   942   0026C2  0E00               	movlw	0
   943   0026C4  6E04               	movwf	(___lwmod@divisor+1)^(0+1280),c
   944   0026C6  0E64               	movlw	100
   945   0026C8  6E03               	movwf	___lwmod@divisor^(0+1280),c
   946   0026CA  C50D  F501         	movff	convierte@valor,___lwmod@dividend
   947   0026CE  C50E  F502         	movff	convierte@valor+1,___lwmod@dividend+1
   948   0026D2  ECFB  F013         	call	___lwmod	;wreg free
   949   0026D6  C501  F506         	movff	?___lwmod,___lwdiv@dividend
   950   0026DA  C502  F507         	movff	?___lwmod+1,___lwdiv@dividend+1
   951   0026DE  0E00               	movlw	0
   952   0026E0  6E09               	movwf	(___lwdiv@divisor+1)^(0+1280),c
   953   0026E2  0E0A               	movlw	10
   954   0026E4  6E08               	movwf	___lwdiv@divisor^(0+1280),c
   955   0026E6  EC88  F013         	call	___lwdiv	;wreg free
   956   0026EA  C506  F513         	movff	?___lwdiv,_decena
   957   0026EE  C507  F514         	movff	?___lwdiv+1,_decena+1
   958                           
   959                           ;maincode3.c: 43:     unidad = valor % 10;
   960   0026F2  C50D  F501         	movff	convierte@valor,___lwmod@dividend
   961   0026F6  C50E  F502         	movff	convierte@valor+1,___lwmod@dividend+1
   962   0026FA  0E00               	movlw	0
   963   0026FC  6E04               	movwf	(___lwmod@divisor+1)^(0+1280),c
   964   0026FE  0E0A               	movlw	10
   965   002700  6E03               	movwf	___lwmod@divisor^(0+1280),c
   966   002702  ECFB  F013         	call	___lwmod	;wreg free
   967   002706  C501  F511         	movff	?___lwmod,_unidad
   968   00270A  C502  F512         	movff	?___lwmod+1,_unidad+1
   969   00270E  0012               	return		;funcret
   970   002710                     __end_of_convierte:
   971                           	callstack 0
   972                           
   973 ;; *************** function ___lwmod *****************
   974 ;; Defined at:
   975 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\lwmod.c"
   976 ;; Parameters:    Size  Location     Type
   977 ;;  dividend        2    0[COMRAM] unsigned int 
   978 ;;  divisor         2    2[COMRAM] unsigned int 
   979 ;; Auto vars:     Size  Location     Type
   980 ;;  counter         1    4[COMRAM] unsigned char 
   981 ;; Return value:  Size  Location     Type
   982 ;;                  2    0[COMRAM] unsigned int 
   983 ;; Registers used:
   984 ;;		wreg, status,2, status,0
   985 ;; Tracked objects:
   986 ;;		On entry : 0/0
   987 ;;		On exit  : 0/0
   988 ;;		Unchanged: 0/0
   989 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   990 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   991 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   992 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   993 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   994 ;;Total ram usage:        5 bytes
   995 ;; Hardware stack levels used: 1
   996 ;; This function calls:
   997 ;;		Nothing
   998 ;; This function is called by:
   999 ;;		_convierte
  1000 ;; This function uses a non-reentrant model
  1001 ;;
  1002                           
  1003                           	psect	text7
  1004   0027F6                     __ptext7:
  1005                           	callstack 0
  1006   0027F6                     ___lwmod:
  1007                           	callstack 125
  1008   0027F6  5003               	movf	___lwmod@divisor^(0+1280),w,c
  1009   0027F8  1004               	iorwf	(___lwmod@divisor+1)^(0+1280),w,c
  1010   0027FA  B4D8               	btfsc	status,2,c
  1011   0027FC  EF02  F014         	goto	u231
  1012   002800  EF04  F014         	goto	u230
  1013   002804                     u231:
  1014   002804  EF28  F014         	goto	l662
  1015   002808                     u230:
  1016   002808  0E01               	movlw	1
  1017   00280A  6E05               	movwf	___lwmod@counter^(0+1280),c
  1018   00280C  EF0C  F014         	goto	l1162
  1019   002810                     l1160:
  1020   002810  90D8               	bcf	status,0,c
  1021   002812  3603               	rlcf	___lwmod@divisor^(0+1280),f,c
  1022   002814  3604               	rlcf	(___lwmod@divisor+1)^(0+1280),f,c
  1023   002816  2A05               	incf	___lwmod@counter^(0+1280),f,c
  1024   002818                     l1162:
  1025   002818  AE04               	btfss	(___lwmod@divisor+1)^(0+1280),7,c
  1026   00281A  EF11  F014         	goto	u241
  1027   00281E  EF13  F014         	goto	u240
  1028   002822                     u241:
  1029   002822  EF08  F014         	goto	l1160
  1030   002826                     u240:
  1031   002826                     l1164:
  1032   002826  5003               	movf	___lwmod@divisor^(0+1280),w,c
  1033   002828  5C01               	subwf	___lwmod@dividend^(0+1280),w,c
  1034   00282A  5004               	movf	(___lwmod@divisor+1)^(0+1280),w,c
  1035   00282C  5802               	subwfb	(___lwmod@dividend+1)^(0+1280),w,c
  1036   00282E  A0D8               	btfss	status,0,c
  1037   002830  EF1C  F014         	goto	u251
  1038   002834  EF1E  F014         	goto	u250
  1039   002838                     u251:
  1040   002838  EF22  F014         	goto	l1168
  1041   00283C                     u250:
  1042   00283C  5003               	movf	___lwmod@divisor^(0+1280),w,c
  1043   00283E  5E01               	subwf	___lwmod@dividend^(0+1280),f,c
  1044   002840  5004               	movf	(___lwmod@divisor+1)^(0+1280),w,c
  1045   002842  5A02               	subwfb	(___lwmod@dividend+1)^(0+1280),f,c
  1046   002844                     l1168:
  1047   002844  90D8               	bcf	status,0,c
  1048   002846  3204               	rrcf	(___lwmod@divisor+1)^(0+1280),f,c
  1049   002848  3203               	rrcf	___lwmod@divisor^(0+1280),f,c
  1050   00284A  2E05               	decfsz	___lwmod@counter^(0+1280),f,c
  1051   00284C  EF13  F014         	goto	l1164
  1052   002850                     l662:
  1053   002850  C501  F501         	movff	___lwmod@dividend,?___lwmod
  1054   002854  C502  F502         	movff	___lwmod@dividend+1,?___lwmod+1
  1055   002858  0012               	return		;funcret
  1056   00285A                     __end_of___lwmod:
  1057                           	callstack 0
  1058                           
  1059 ;; *************** function ___lwdiv *****************
  1060 ;; Defined at:
  1061 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\lwdiv.c"
  1062 ;; Parameters:    Size  Location     Type
  1063 ;;  dividend        2    5[COMRAM] unsigned int 
  1064 ;;  divisor         2    7[COMRAM] unsigned int 
  1065 ;; Auto vars:     Size  Location     Type
  1066 ;;  quotient        2    9[COMRAM] unsigned int 
  1067 ;;  counter         1   11[COMRAM] unsigned char 
  1068 ;; Return value:  Size  Location     Type
  1069 ;;                  2    5[COMRAM] unsigned int 
  1070 ;; Registers used:
  1071 ;;		wreg, status,2, status,0
  1072 ;; Tracked objects:
  1073 ;;		On entry : 0/0
  1074 ;;		On exit  : 0/0
  1075 ;;		Unchanged: 0/0
  1076 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1077 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1078 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1079 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1080 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1081 ;;Total ram usage:        7 bytes
  1082 ;; Hardware stack levels used: 1
  1083 ;; This function calls:
  1084 ;;		Nothing
  1085 ;; This function is called by:
  1086 ;;		_convierte
  1087 ;; This function uses a non-reentrant model
  1088 ;;
  1089                           
  1090                           	psect	text8
  1091   002710                     __ptext8:
  1092                           	callstack 0
  1093   002710                     ___lwdiv:
  1094                           	callstack 125
  1095   002710  0E00               	movlw	0
  1096   002712  6E0B               	movwf	(___lwdiv@quotient+1)^(0+1280),c
  1097   002714  0E00               	movlw	0
  1098   002716  6E0A               	movwf	___lwdiv@quotient^(0+1280),c
  1099   002718  5008               	movf	___lwdiv@divisor^(0+1280),w,c
  1100   00271A  1009               	iorwf	(___lwdiv@divisor+1)^(0+1280),w,c
  1101   00271C  B4D8               	btfsc	status,2,c
  1102   00271E  EF93  F013         	goto	u201
  1103   002722  EF95  F013         	goto	u200
  1104   002726                     u201:
  1105   002726  EFBD  F013         	goto	l652
  1106   00272A                     u200:
  1107   00272A  0E01               	movlw	1
  1108   00272C  6E0C               	movwf	___lwdiv@counter^(0+1280),c
  1109   00272E  EF9D  F013         	goto	l1142
  1110   002732                     l1140:
  1111   002732  90D8               	bcf	status,0,c
  1112   002734  3608               	rlcf	___lwdiv@divisor^(0+1280),f,c
  1113   002736  3609               	rlcf	(___lwdiv@divisor+1)^(0+1280),f,c
  1114   002738  2A0C               	incf	___lwdiv@counter^(0+1280),f,c
  1115   00273A                     l1142:
  1116   00273A  AE09               	btfss	(___lwdiv@divisor+1)^(0+1280),7,c
  1117   00273C  EFA2  F013         	goto	u211
  1118   002740  EFA4  F013         	goto	u210
  1119   002744                     u211:
  1120   002744  EF99  F013         	goto	l1140
  1121   002748                     u210:
  1122   002748                     l1144:
  1123   002748  90D8               	bcf	status,0,c
  1124   00274A  360A               	rlcf	___lwdiv@quotient^(0+1280),f,c
  1125   00274C  360B               	rlcf	(___lwdiv@quotient+1)^(0+1280),f,c
  1126   00274E  5008               	movf	___lwdiv@divisor^(0+1280),w,c
  1127   002750  5C06               	subwf	___lwdiv@dividend^(0+1280),w,c
  1128   002752  5009               	movf	(___lwdiv@divisor+1)^(0+1280),w,c
  1129   002754  5807               	subwfb	(___lwdiv@dividend+1)^(0+1280),w,c
  1130   002756  A0D8               	btfss	status,0,c
  1131   002758  EFB0  F013         	goto	u221
  1132   00275C  EFB2  F013         	goto	u220
  1133   002760                     u221:
  1134   002760  EFB7  F013         	goto	l1152
  1135   002764                     u220:
  1136   002764  5008               	movf	___lwdiv@divisor^(0+1280),w,c
  1137   002766  5E06               	subwf	___lwdiv@dividend^(0+1280),f,c
  1138   002768  5009               	movf	(___lwdiv@divisor+1)^(0+1280),w,c
  1139   00276A  5A07               	subwfb	(___lwdiv@dividend+1)^(0+1280),f,c
  1140   00276C  800A               	bsf	___lwdiv@quotient^(0+1280),0,c
  1141   00276E                     l1152:
  1142   00276E  90D8               	bcf	status,0,c
  1143   002770  3209               	rrcf	(___lwdiv@divisor+1)^(0+1280),f,c
  1144   002772  3208               	rrcf	___lwdiv@divisor^(0+1280),f,c
  1145   002774  2E0C               	decfsz	___lwdiv@counter^(0+1280),f,c
  1146   002776  EFA4  F013         	goto	l1144
  1147   00277A                     l652:
  1148   00277A  C50A  F506         	movff	___lwdiv@quotient,?___lwdiv
  1149   00277E  C50B  F507         	movff	___lwdiv@quotient+1,?___lwdiv+1
  1150   002782  0012               	return		;funcret
  1151   002784                     __end_of___lwdiv:
  1152                           	callstack 0
  1153                           
  1154 ;; *************** function _configuro *****************
  1155 ;; Defined at:
  1156 ;;		line 9 in file "maincode3.c"
  1157 ;; Parameters:    Size  Location     Type
  1158 ;;		None
  1159 ;; Auto vars:     Size  Location     Type
  1160 ;;		None
  1161 ;; Return value:  Size  Location     Type
  1162 ;;                  1    wreg      void 
  1163 ;; Registers used:
  1164 ;;		wreg, status,2
  1165 ;; Tracked objects:
  1166 ;;		On entry : 0/0
  1167 ;;		On exit  : 0/0
  1168 ;;		Unchanged: 0/0
  1169 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1170 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1171 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1172 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1173 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1174 ;;Total ram usage:        0 bytes
  1175 ;; Hardware stack levels used: 1
  1176 ;; This function calls:
  1177 ;;		Nothing
  1178 ;; This function is called by:
  1179 ;;		_main
  1180 ;; This function uses a non-reentrant model
  1181 ;;
  1182                           
  1183                           	psect	text9
  1184   00292A                     __ptext9:
  1185                           	callstack 0
  1186   00292A                     _configuro:
  1187                           	callstack 126
  1188   00292A                     
  1189                           ;maincode3.c: 11:     OSCCON1 = 0x60;
  1190   00292A  0E60               	movlw	96
  1191   00292C  0100               	movlb	0	; () banked
  1192   00292E  6FAD               	movwf	173,b	;volatile
  1193                           
  1194                           ;maincode3.c: 12:     OSCFRQ = 0x07;
  1195   002930  0E07               	movlw	7
  1196   002932  6FB1               	movwf	177,b	;volatile
  1197                           
  1198                           ;maincode3.c: 13:     OSCEN = 0x40;
  1199   002934  0E40               	movlw	64
  1200   002936  6FB3               	movwf	179,b	;volatile
  1201   002938                     
  1202                           ; BSR set to: 0
  1203                           ;maincode3.c: 15:     TRISBbits.TRISB4 = 1;
  1204   002938  88C7               	bsf	199,4,c	;volatile
  1205   00293A                     
  1206                           ; BSR set to: 0
  1207                           ;maincode3.c: 16:     ANSELBbits.ANSELB4 = 0;
  1208   00293A  0104               	movlb	4	; () banked
  1209   00293C  9908               	bcf	8,4,b	;volatile
  1210   00293E                     
  1211                           ; BSR set to: 4
  1212                           ;maincode3.c: 17:     WPUBbits.WPUB4 = 1;
  1213   00293E  8909               	bsf	9,4,b	;volatile
  1214   002940                     
  1215                           ; BSR set to: 4
  1216                           ;maincode3.c: 18:     TRISFbits.TRISF3 = 0;
  1217   002940  96CB               	bcf	203,3,c	;volatile
  1218   002942                     
  1219                           ; BSR set to: 4
  1220                           ;maincode3.c: 19:     ANSELFbits.ANSELF3 = 0;
  1221   002942  9728               	bcf	40,3,b	;volatile
  1222                           
  1223                           ;maincode3.c: 21:     ADCON0bits.FM = 1;
  1224   002944  0103               	movlb	3	; () banked
  1225   002946  51F3               	movf	243,w,b	;volatile
  1226   002948  0BF3               	andlw	-13
  1227   00294A  0904               	iorlw	4
  1228   00294C  6FF3               	movwf	243,b	;volatile
  1229   00294E                     
  1230                           ; BSR set to: 3
  1231                           ;maincode3.c: 22:     ADCON0bits.CS = 1;
  1232   00294E  89F3               	bsf	243,4,b	;volatile
  1233                           
  1234                           ;maincode3.c: 23:     ADPCH = 0x00;
  1235   002950  0E00               	movlw	0
  1236   002952  6FEC               	movwf	236,b	;volatile
  1237   002954                     
  1238                           ; BSR set to: 3
  1239                           ;maincode3.c: 24:     TRISAbits.TRISA0 = 1;
  1240   002954  80C6               	bsf	198,0,c	;volatile
  1241   002956                     
  1242                           ; BSR set to: 3
  1243                           ;maincode3.c: 25:     ANSELAbits.ANSELA0 = 1;
  1244   002956  0104               	movlb	4	; () banked
  1245   002958  8100               	bsf	0,0,b	;volatile
  1246   00295A                     
  1247                           ; BSR set to: 4
  1248                           ;maincode3.c: 26:     ADCON0bits.ON = 1;
  1249   00295A  0103               	movlb	3	; () banked
  1250   00295C  8FF3               	bsf	243,7,b	;volatile
  1251   00295E                     
  1252                           ; BSR set to: 3
  1253   00295E  0012               	return		;funcret
  1254   002960                     __end_of_configuro:
  1255                           	callstack 0
  1256                           
  1257 ;; *************** function _POS_CURSOR *****************
  1258 ;; Defined at:
  1259 ;;		line 6 in file "LCD.c"
  1260 ;; Parameters:    Size  Location     Type
  1261 ;;  fila            1    wreg     unsigned char 
  1262 ;;  columna         1    3[COMRAM] unsigned char 
  1263 ;; Auto vars:     Size  Location     Type
  1264 ;;  fila            1    4[COMRAM] unsigned char 
  1265 ;; Return value:  Size  Location     Type
  1266 ;;                  1    wreg      void 
  1267 ;; Registers used:
  1268 ;;		wreg, status,2, status,0, cstack
  1269 ;; Tracked objects:
  1270 ;;		On entry : 0/0
  1271 ;;		On exit  : 0/0
  1272 ;;		Unchanged: 0/0
  1273 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1274 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1275 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1276 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1277 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1278 ;;Total ram usage:        2 bytes
  1279 ;; Hardware stack levels used: 1
  1280 ;; Hardware stack levels required when called: 2
  1281 ;; This function calls:
  1282 ;;		_ENVIA_LCD_CMD
  1283 ;; This function is called by:
  1284 ;;		_main
  1285 ;; This function uses a non-reentrant model
  1286 ;;
  1287                           
  1288                           	psect	text10
  1289   0028BA                     __ptext10:
  1290                           	callstack 0
  1291   0028BA                     _POS_CURSOR:
  1292                           	callstack 124
  1293                           
  1294                           ; BSR set to: 3
  1295                           ;incstack = 0
  1296                           ;POS_CURSOR@fila stored from wreg
  1297   0028BA  6E05               	movwf	POS_CURSOR@fila^(0+1280),c
  1298   0028BC                     
  1299                           ;LCD.c: 6: void POS_CURSOR(unsigned char fila,unsigned char columna);LCD.c: 7: {;LCD.c: 
      +                          8:  if(fila == 1)
  1300   0028BC  0405               	decf	POS_CURSOR@fila^(0+1280),w,c
  1301   0028BE  A4D8               	btfss	status,2,c
  1302   0028C0  EF64  F014         	goto	u261
  1303   0028C4  EF66  F014         	goto	u260
  1304   0028C8                     u261:
  1305   0028C8  EF6C  F014         	goto	l1176
  1306   0028CC                     u260:
  1307   0028CC                     
  1308                           ;LCD.c: 9:  {;LCD.c: 10:   ENVIA_LCD_CMD(0x80+columna);
  1309   0028CC  5004               	movf	POS_CURSOR@columna^(0+1280),w,c
  1310   0028CE  0F80               	addlw	128
  1311   0028D0  ECB0  F014         	call	_ENVIA_LCD_CMD
  1312                           
  1313                           ;LCD.c: 11:  }
  1314   0028D4  EF79  F014         	goto	l24
  1315   0028D8                     l1176:
  1316   0028D8  0E02               	movlw	2
  1317   0028DA  1805               	xorwf	POS_CURSOR@fila^(0+1280),w,c
  1318   0028DC  A4D8               	btfss	status,2,c
  1319   0028DE  EF73  F014         	goto	u271
  1320   0028E2  EF75  F014         	goto	u270
  1321   0028E6                     u271:
  1322   0028E6  EF79  F014         	goto	l24
  1323   0028EA                     u270:
  1324   0028EA                     
  1325                           ;LCD.c: 13:  {;LCD.c: 14:   ENVIA_LCD_CMD(0xC0+columna);
  1326   0028EA  5004               	movf	POS_CURSOR@columna^(0+1280),w,c
  1327   0028EC  0FC0               	addlw	192
  1328   0028EE  ECB0  F014         	call	_ENVIA_LCD_CMD
  1329   0028F2                     l24:
  1330   0028F2  0012               	return		;funcret
  1331   0028F4                     __end_of_POS_CURSOR:
  1332                           	callstack 0
  1333                           
  1334 ;; *************** function _ENVIA_LCD_CMD *****************
  1335 ;; Defined at:
  1336 ;;		line 104 in file "LCD.c"
  1337 ;; Parameters:    Size  Location     Type
  1338 ;;  dato            1    wreg     unsigned char 
  1339 ;; Auto vars:     Size  Location     Type
  1340 ;;  dato            1    1[COMRAM] unsigned char 
  1341 ;;  aux             1    2[COMRAM] unsigned char 
  1342 ;; Return value:  Size  Location     Type
  1343 ;;                  1    wreg      void 
  1344 ;; Registers used:
  1345 ;;		wreg, status,2, status,0, cstack
  1346 ;; Tracked objects:
  1347 ;;		On entry : 0/0
  1348 ;;		On exit  : 0/0
  1349 ;;		Unchanged: 0/0
  1350 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1351 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1352 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1353 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1354 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1355 ;;Total ram usage:        2 bytes
  1356 ;; Hardware stack levels used: 1
  1357 ;; Hardware stack levels required when called: 1
  1358 ;; This function calls:
  1359 ;;		_ENVIA_NIBBLE
  1360 ;;		_LEER_LCD
  1361 ;; This function is called by:
  1362 ;;		_POS_CURSOR
  1363 ;;		_CURSOR_HOME
  1364 ;;		_CURSOR_ONOFF
  1365 ;;		_BORRAR_LCD
  1366 ;;		_LCD_CONFIG
  1367 ;;		_BLINK_CURSOR
  1368 ;;		_DISPLAY_ONOFF
  1369 ;;		_GENERACARACTER
  1370 ;; This function uses a non-reentrant model
  1371 ;;
  1372                           
  1373                           	psect	text11
  1374   002960                     __ptext11:
  1375                           	callstack 0
  1376   002960                     _ENVIA_LCD_CMD:
  1377                           	callstack 123
  1378                           
  1379                           ;incstack = 0
  1380                           ;ENVIA_LCD_CMD@dato stored from wreg
  1381   002960  6E02               	movwf	ENVIA_LCD_CMD@dato^(0+1280),c
  1382   002962                     
  1383                           ;LCD.c: 104: void ENVIA_LCD_CMD(unsigned char dato);LCD.c: 105: {;LCD.c: 106:  unsigned 
      +                          char aux;;LCD.c: 107:  LATDbits.LATD0 = 0;
  1384   002962  90C1               	bcf	193,0,c	;volatile
  1385   002964                     
  1386                           ;LCD.c: 108:  LEER_LCD();
  1387   002964  ECC2  F013         	call	_LEER_LCD	;wreg free
  1388   002968                     
  1389                           ;LCD.c: 109:  TRISD = 0b00000000;
  1390   002968  0E00               	movlw	0
  1391   00296A  6EC9               	movwf	201,c	;volatile
  1392   00296C                     
  1393                           ;LCD.c: 111:         _delay(1200);
  1394   00296C  0EF0               	movlw	240
  1395   00296E                     u407:
  1396   00296E  D000               	nop2	
  1397   002970  2EE8               	decfsz	wreg,f,c
  1398   002972  D7FD               	bra	u407
  1399   002974                     
  1400                           ;LCD.c: 112:         LATDbits.LATD1 = 0;
  1401   002974  92C1               	bcf	193,1,c	;volatile
  1402   002976                     
  1403                           ;LCD.c: 113:  LATDbits.LATD2 = 0;
  1404   002976  94C1               	bcf	193,2,c	;volatile
  1405   002978                     
  1406                           ;LCD.c: 114:  LATDbits.LATD0 = 0;
  1407   002978  90C1               	bcf	193,0,c	;volatile
  1408   00297A                     
  1409                           ;LCD.c: 115:  aux = dato & 0xF0;
  1410   00297A  5002               	movf	ENVIA_LCD_CMD@dato^(0+1280),w,c
  1411   00297C  0BF0               	andlw	240
  1412   00297E  6E03               	movwf	ENVIA_LCD_CMD@aux^(0+1280),c
  1413   002980                     
  1414                           ;LCD.c: 116:  ENVIA_NIBBLE(aux);
  1415   002980  5003               	movf	ENVIA_LCD_CMD@aux^(0+1280),w,c
  1416   002982  EC16  F015         	call	_ENVIA_NIBBLE
  1417   002986                     
  1418                           ;LCD.c: 117:  aux = dato<<4;
  1419   002986  3802               	swapf	ENVIA_LCD_CMD@dato^(0+1280),w,c
  1420   002988  0BF0               	andlw	240
  1421   00298A  6E03               	movwf	ENVIA_LCD_CMD@aux^(0+1280),c
  1422   00298C                     
  1423                           ;LCD.c: 118:  ENVIA_NIBBLE(aux);
  1424   00298C  5003               	movf	ENVIA_LCD_CMD@aux^(0+1280),w,c
  1425   00298E  EC16  F015         	call	_ENVIA_NIBBLE
  1426   002992  0012               	return		;funcret
  1427   002994                     __end_of_ENVIA_LCD_CMD:
  1428                           	callstack 0
  1429                           
  1430 ;; *************** function _ESCRIBE_MENSAJE *****************
  1431 ;; Defined at:
  1432 ;;		line 41 in file "LCD.c"
  1433 ;; Parameters:    Size  Location     Type
  1434 ;;  cadena          1    3[COMRAM] PTR const unsigned char 
  1435 ;;		 -> STR_4(9), STR_3(16), STR_2(16), STR_1(10), 
  1436 ;;  tam             1    4[COMRAM] unsigned char 
  1437 ;; Auto vars:     Size  Location     Type
  1438 ;;  i               1    6[COMRAM] unsigned char 
  1439 ;; Return value:  Size  Location     Type
  1440 ;;                  1    wreg      void 
  1441 ;; Registers used:
  1442 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1443 ;; Tracked objects:
  1444 ;;		On entry : 0/0
  1445 ;;		On exit  : 0/0
  1446 ;;		Unchanged: 0/0
  1447 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1448 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1449 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1450 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1451 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1452 ;;Total ram usage:        4 bytes
  1453 ;; Hardware stack levels used: 1
  1454 ;; Hardware stack levels required when called: 2
  1455 ;; This function calls:
  1456 ;;		_ENVIA_CHAR
  1457 ;; This function is called by:
  1458 ;;		_main
  1459 ;; This function uses a non-reentrant model
  1460 ;;
  1461                           
  1462                           	psect	text12
  1463   002994                     __ptext12:
  1464                           	callstack 0
  1465   002994                     _ESCRIBE_MENSAJE:
  1466                           	callstack 124
  1467   002994                     
  1468                           ;LCD.c: 41: void ESCRIBE_MENSAJE(const char *cadena,unsigned char tam);LCD.c: 42: {;LCD.
      +                          c: 43:  unsigned char i = 0;
  1469   002994  0E00               	movlw	0
  1470   002996  6E07               	movwf	ESCRIBE_MENSAJE@i^(0+1280),c
  1471                           
  1472                           ;LCD.c: 44:  for(i = 0; i<tam; i++)
  1473   002998  0E00               	movlw	0
  1474   00299A  6E07               	movwf	ESCRIBE_MENSAJE@i^(0+1280),c
  1475   00299C  EFDA  F014         	goto	l1186
  1476   0029A0                     l1182:
  1477                           
  1478                           ;LCD.c: 45:  {;LCD.c: 46:   ENVIA_CHAR(cadena[i]);
  1479   0029A0  5004               	movf	ESCRIBE_MENSAJE@cadena^(0+1280),w,c
  1480   0029A2  2407               	addwf	ESCRIBE_MENSAJE@i^(0+1280),w,c
  1481   0029A4  6E06               	movwf	??_ESCRIBE_MENSAJE^(0+1280),c
  1482   0029A6  C506  F4F6         	movff	??_ESCRIBE_MENSAJE,tblptrl
  1483   0029AA                     	if	0	;There is only one active tblptr byte
  1484   0029AA                     	endif
  1485   0029AA                     	if	0	;tblptru may be non-zero
  1486   0029AA                     	endif
  1487   0029AA                     	if	0	;tblptru may be non-zero
  1488   0029AA                     	endif
  1489   0029AA  0008               	tblrd		*
  1490   0029AC  50F5               	movf	tablat,w,c
  1491   0029AE  ECE4  F014         	call	_ENVIA_CHAR
  1492   0029B2                     
  1493                           ;LCD.c: 47:  }
  1494   0029B2  2A07               	incf	ESCRIBE_MENSAJE@i^(0+1280),f,c
  1495   0029B4                     l1186:
  1496   0029B4  5005               	movf	ESCRIBE_MENSAJE@tam^(0+1280),w,c
  1497   0029B6  5C07               	subwf	ESCRIBE_MENSAJE@i^(0+1280),w,c
  1498   0029B8  A0D8               	btfss	status,0,c
  1499   0029BA  EFE1  F014         	goto	u281
  1500   0029BE  EFE3  F014         	goto	u280
  1501   0029C2                     u281:
  1502   0029C2  EFD0  F014         	goto	l1182
  1503   0029C6                     u280:
  1504   0029C6  0012               	return		;funcret
  1505   0029C8                     __end_of_ESCRIBE_MENSAJE:
  1506                           	callstack 0
  1507                           
  1508 ;; *************** function _ENVIA_CHAR *****************
  1509 ;; Defined at:
  1510 ;;		line 50 in file "LCD.c"
  1511 ;; Parameters:    Size  Location     Type
  1512 ;;  dato            1    wreg     unsigned char 
  1513 ;; Auto vars:     Size  Location     Type
  1514 ;;  dato            1    1[COMRAM] unsigned char 
  1515 ;;  aux             1    2[COMRAM] unsigned char 
  1516 ;; Return value:  Size  Location     Type
  1517 ;;                  1    wreg      void 
  1518 ;; Registers used:
  1519 ;;		wreg, status,2, status,0, cstack
  1520 ;; Tracked objects:
  1521 ;;		On entry : 0/0
  1522 ;;		On exit  : 0/0
  1523 ;;		Unchanged: 0/0
  1524 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1525 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1526 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1527 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1528 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1529 ;;Total ram usage:        2 bytes
  1530 ;; Hardware stack levels used: 1
  1531 ;; Hardware stack levels required when called: 1
  1532 ;; This function calls:
  1533 ;;		_ENVIA_NIBBLE
  1534 ;;		_LEER_LCD
  1535 ;; This function is called by:
  1536 ;;		_ESCRIBE_MENSAJE
  1537 ;;		_main
  1538 ;;		_GENERACARACTER
  1539 ;; This function uses a non-reentrant model
  1540 ;;
  1541                           
  1542                           	psect	text13
  1543   0029C8                     __ptext13:
  1544                           	callstack 0
  1545   0029C8                     _ENVIA_CHAR:
  1546                           	callstack 124
  1547                           
  1548                           ;incstack = 0
  1549                           ;ENVIA_CHAR@dato stored from wreg
  1550   0029C8  6E02               	movwf	ENVIA_CHAR@dato^(0+1280),c
  1551   0029CA                     
  1552                           ;LCD.c: 50: void ENVIA_CHAR(unsigned char dato);LCD.c: 51: {;LCD.c: 52:  unsigned char a
      +                          ux;;LCD.c: 53:  LATDbits.LATD0 = 1;
  1553   0029CA  80C1               	bsf	193,0,c	;volatile
  1554   0029CC                     
  1555                           ;LCD.c: 54:  LEER_LCD();
  1556   0029CC  ECC2  F013         	call	_LEER_LCD	;wreg free
  1557   0029D0                     
  1558                           ;LCD.c: 55:  TRISD = 0x00;
  1559   0029D0  0E00               	movlw	0
  1560   0029D2  6EC9               	movwf	201,c	;volatile
  1561   0029D4                     
  1562                           ;LCD.c: 56:         _delay(1200);
  1563   0029D4  0EF0               	movlw	240
  1564   0029D6                     u417:
  1565   0029D6  D000               	nop2	
  1566   0029D8  2EE8               	decfsz	wreg,f,c
  1567   0029DA  D7FD               	bra	u417
  1568   0029DC                     
  1569                           ;LCD.c: 58:  LATDbits.LATD1 = 0;
  1570   0029DC  92C1               	bcf	193,1,c	;volatile
  1571   0029DE                     
  1572                           ;LCD.c: 59:  LATDbits.LATD2 = 0;
  1573   0029DE  94C1               	bcf	193,2,c	;volatile
  1574   0029E0                     
  1575                           ;LCD.c: 60:  LATDbits.LATD0 = 1;
  1576   0029E0  80C1               	bsf	193,0,c	;volatile
  1577   0029E2                     
  1578                           ;LCD.c: 61:  aux = dato & 0xF0;
  1579   0029E2  5002               	movf	ENVIA_CHAR@dato^(0+1280),w,c
  1580   0029E4  0BF0               	andlw	240
  1581   0029E6  6E03               	movwf	ENVIA_CHAR@aux^(0+1280),c
  1582   0029E8                     
  1583                           ;LCD.c: 62:  ENVIA_NIBBLE(aux);
  1584   0029E8  5003               	movf	ENVIA_CHAR@aux^(0+1280),w,c
  1585   0029EA  EC16  F015         	call	_ENVIA_NIBBLE
  1586   0029EE                     
  1587                           ;LCD.c: 63:  aux = dato << 4;
  1588   0029EE  3802               	swapf	ENVIA_CHAR@dato^(0+1280),w,c
  1589   0029F0  0BF0               	andlw	240
  1590   0029F2  6E03               	movwf	ENVIA_CHAR@aux^(0+1280),c
  1591   0029F4                     
  1592                           ;LCD.c: 64:  ENVIA_NIBBLE(aux);
  1593   0029F4  5003               	movf	ENVIA_CHAR@aux^(0+1280),w,c
  1594   0029F6  EC16  F015         	call	_ENVIA_NIBBLE
  1595   0029FA  0012               	return		;funcret
  1596   0029FC                     __end_of_ENVIA_CHAR:
  1597                           	callstack 0
  1598                           
  1599 ;; *************** function _LEER_LCD *****************
  1600 ;; Defined at:
  1601 ;;		line 121 in file "LCD.c"
  1602 ;; Parameters:    Size  Location     Type
  1603 ;;		None
  1604 ;; Auto vars:     Size  Location     Type
  1605 ;;  aux             1    0[COMRAM] unsigned char 
  1606 ;; Return value:  Size  Location     Type
  1607 ;;                  1    wreg      void 
  1608 ;; Registers used:
  1609 ;;		wreg, status,2, status,0
  1610 ;; Tracked objects:
  1611 ;;		On entry : 0/0
  1612 ;;		On exit  : 0/0
  1613 ;;		Unchanged: 0/0
  1614 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1615 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1616 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1617 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1618 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1619 ;;Total ram usage:        1 bytes
  1620 ;; Hardware stack levels used: 1
  1621 ;; This function calls:
  1622 ;;		Nothing
  1623 ;; This function is called by:
  1624 ;;		_ENVIA_CHAR
  1625 ;;		_ENVIA_LCD_CMD
  1626 ;; This function uses a non-reentrant model
  1627 ;;
  1628                           
  1629                           	psect	text14
  1630   002784                     __ptext14:
  1631                           	callstack 0
  1632   002784                     _LEER_LCD:
  1633                           	callstack 123
  1634   002784                     
  1635                           ;LCD.c: 123:  unsigned char aux;;LCD.c: 124:  TRISD = 0xF8;
  1636   002784  0EF8               	movlw	248
  1637   002786  6EC9               	movwf	201,c	;volatile
  1638   002788                     
  1639                           ;LCD.c: 125:  LATDbits.LATD0 = 0;
  1640   002788  90C1               	bcf	193,0,c	;volatile
  1641   00278A                     
  1642                           ;LCD.c: 126:  LATDbits.LATD1 = 1;
  1643   00278A  82C1               	bsf	193,1,c	;volatile
  1644   00278C                     
  1645                           ;LCD.c: 127:  LATDbits.LATD2 = 1;
  1646   00278C  84C1               	bsf	193,2,c	;volatile
  1647   00278E                     
  1648                           ;LCD.c: 128:         _delay(1200);
  1649   00278E  0EF0               	movlw	240
  1650   002790                     u427:
  1651   002790  D000               	nop2	
  1652   002792  2EE8               	decfsz	wreg,f,c
  1653   002794  D7FD               	bra	u427
  1654   002796                     
  1655                           ;LCD.c: 130:  aux = PORTD;
  1656   002796  C4D1 F501          	movff	1233,LEER_LCD@aux	;volatile
  1657   00279A                     
  1658                           ;LCD.c: 131:  LATDbits.LATD2 = 0;
  1659   00279A  94C1               	bcf	193,2,c	;volatile
  1660   00279C                     
  1661                           ;LCD.c: 132:         _delay(1200);
  1662   00279C  0EF0               	movlw	240
  1663   00279E                     u437:
  1664   00279E  D000               	nop2	
  1665   0027A0  2EE8               	decfsz	wreg,f,c
  1666   0027A2  D7FD               	bra	u437
  1667   0027A4                     
  1668                           ;LCD.c: 134:  LATDbits.LATD2 = 1;
  1669   0027A4  84C1               	bsf	193,2,c	;volatile
  1670   0027A6                     
  1671                           ;LCD.c: 135:         _delay(1200);
  1672   0027A6  0EF0               	movlw	240
  1673   0027A8                     u447:
  1674   0027A8  D000               	nop2	
  1675   0027AA  2EE8               	decfsz	wreg,f,c
  1676   0027AC  D7FD               	bra	u447
  1677   0027AE                     
  1678                           ;LCD.c: 137:  LATDbits.LATD2 = 0;
  1679   0027AE  94C1               	bcf	193,2,c	;volatile
  1680   0027B0                     l856:
  1681                           
  1682                           ;LCD.c: 138:  aux = aux & 0x80;
  1683   0027B0  5001               	movf	LEER_LCD@aux^(0+1280),w,c
  1684   0027B2  0B80               	andlw	128
  1685   0027B4  6E01               	movwf	LEER_LCD@aux^(0+1280),c
  1686                           
  1687                           ;LCD.c: 139:  while(aux == 0x80)
  1688   0027B6  EFF1  F013         	goto	l870
  1689   0027BA                     l67:
  1690                           
  1691                           ;LCD.c: 140:         {;LCD.c: 141:             LATDbits.LATD2 = 1;
  1692   0027BA  84C1               	bsf	193,2,c	;volatile
  1693   0027BC                     
  1694                           ;LCD.c: 142:             _delay(1200);
  1695   0027BC  0EF0               	movlw	240
  1696   0027BE                     u457:
  1697   0027BE  D000               	nop2	
  1698   0027C0  2EE8               	decfsz	wreg,f,c
  1699   0027C2  D7FD               	bra	u457
  1700   0027C4                     
  1701                           ;LCD.c: 143:             aux = PORTD;
  1702   0027C4  C4D1 F501          	movff	1233,LEER_LCD@aux	;volatile
  1703   0027C8                     
  1704                           ;LCD.c: 144:             LATDbits.LATD2 = 0;
  1705   0027C8  94C1               	bcf	193,2,c	;volatile
  1706                           
  1707                           ;LCD.c: 145:             _delay(1200);
  1708   0027CA  0EF0               	movlw	240
  1709   0027CC                     u467:
  1710   0027CC  D000               	nop2	
  1711   0027CE  2EE8               	decfsz	wreg,f,c
  1712   0027D0  D7FD               	bra	u467
  1713   0027D2                     
  1714                           ;LCD.c: 146:             LATDbits.LATD2 = 1;
  1715   0027D2  84C1               	bsf	193,2,c	;volatile
  1716                           
  1717                           ;LCD.c: 147:             _delay(1200);
  1718   0027D4  0EF0               	movlw	240
  1719   0027D6                     u477:
  1720   0027D6  D000               	nop2	
  1721   0027D8  2EE8               	decfsz	wreg,f,c
  1722   0027DA  D7FD               	bra	u477
  1723   0027DC                     
  1724                           ;LCD.c: 148:             LATDbits.LATD2 = 0;
  1725   0027DC  94C1               	bcf	193,2,c	;volatile
  1726   0027DE  EFD8  F013         	goto	l856
  1727   0027E2                     l870:
  1728                           
  1729                           ;LCD.c: 139:  while(aux == 0x80)
  1730   0027E2  0E80               	movlw	128
  1731   0027E4  1801               	xorwf	LEER_LCD@aux^(0+1280),w,c
  1732   0027E6  B4D8               	btfsc	status,2,c
  1733   0027E8  EFF8  F013         	goto	u11
  1734   0027EC  EFFA  F013         	goto	u10
  1735   0027F0                     u11:
  1736   0027F0  EFDD  F013         	goto	l67
  1737   0027F4                     u10:
  1738   0027F4  0012               	return		;funcret
  1739   0027F6                     __end_of_LEER_LCD:
  1740                           	callstack 0
  1741                           
  1742 ;; *************** function _ENVIA_NIBBLE *****************
  1743 ;; Defined at:
  1744 ;;		line 93 in file "LCD.c"
  1745 ;; Parameters:    Size  Location     Type
  1746 ;;  dato            1    wreg     unsigned char 
  1747 ;; Auto vars:     Size  Location     Type
  1748 ;;  dato            1    0[COMRAM] unsigned char 
  1749 ;; Return value:  Size  Location     Type
  1750 ;;                  1    wreg      void 
  1751 ;; Registers used:
  1752 ;;		wreg, status,2, status,0
  1753 ;; Tracked objects:
  1754 ;;		On entry : 0/0
  1755 ;;		On exit  : 0/0
  1756 ;;		Unchanged: 0/0
  1757 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1758 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1759 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1760 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1761 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1762 ;;Total ram usage:        1 bytes
  1763 ;; Hardware stack levels used: 1
  1764 ;; This function calls:
  1765 ;;		Nothing
  1766 ;; This function is called by:
  1767 ;;		_ENVIA_CHAR
  1768 ;;		_LCD_CONFIG
  1769 ;;		_ENVIA_LCD_CMD
  1770 ;; This function uses a non-reentrant model
  1771 ;;
  1772                           
  1773                           	psect	text15
  1774   002A2C                     __ptext15:
  1775                           	callstack 0
  1776   002A2C                     _ENVIA_NIBBLE:
  1777                           	callstack 124
  1778                           
  1779                           ;incstack = 0
  1780                           ;ENVIA_NIBBLE@dato stored from wreg
  1781   002A2C  6E01               	movwf	ENVIA_NIBBLE@dato^(0+1280),c
  1782   002A2E                     
  1783                           ;LCD.c: 93: void ENVIA_NIBBLE(unsigned char dato);LCD.c: 94: {;LCD.c: 95:  LATD &= 0x0F;
  1784   002A2E  0E0F               	movlw	15
  1785   002A30  16C1               	andwf	193,f,c	;volatile
  1786                           
  1787                           ;LCD.c: 96:  dato &= 0xF0;
  1788   002A32  0EF0               	movlw	240
  1789   002A34  1601               	andwf	ENVIA_NIBBLE@dato^(0+1280),f,c
  1790                           
  1791                           ;LCD.c: 97:  LATD|= dato;
  1792   002A36  5001               	movf	ENVIA_NIBBLE@dato^(0+1280),w,c	;volatile
  1793   002A38  12C1               	iorwf	193,f,c	;volatile
  1794   002A3A                     
  1795                           ;LCD.c: 98:  LATDbits.LATD2 = 1;
  1796   002A3A  84C1               	bsf	193,2,c	;volatile
  1797   002A3C                     
  1798                           ;LCD.c: 100:         _delay(1200);
  1799   002A3C  0EF0               	movlw	240
  1800   002A3E                     u487:
  1801   002A3E  D000               	nop2	
  1802   002A40  2EE8               	decfsz	wreg,f,c
  1803   002A42  D7FD               	bra	u487
  1804   002A44                     
  1805                           ;LCD.c: 101:  LATDbits.LATD2 = 0;
  1806   002A44  94C1               	bcf	193,2,c	;volatile
  1807   002A46  0012               	return		;funcret
  1808   002A48                     __end_of_ENVIA_NIBBLE:
  1809                           	callstack 0
  1810                           
  1811                           	psect	rparam
  1812   000000                     
  1813                           	psect	config
  1814                           
  1815                           ;Config register CONFIG1 @ 0x300000
  1816                           ;	External Oscillator Selection
  1817                           ;	FEXTOSC = OFF, Oscillator not enabled
  1818                           ;	Reset Oscillator Selection
  1819                           ;	RSTOSC = EXTOSC, EXTOSC operating per FEXTOSC bits (device manufacturing default)
  1820   300000                     	org	3145728
  1821   300000  FC                 	db	252
  1822                           
  1823                           ;Config register CONFIG2 @ 0x300001
  1824                           ;	Clock out Enable bit
  1825                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
  1826                           ;	PRLOCKED One-Way Set Enable bit
  1827                           ;	PR1WAY = ON, PRLOCKED bit can be cleared and set only once
  1828                           ;	Clock Switch Enable bit
  1829                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
  1830                           ;	Fail-Safe Clock Monitor Enable bit
  1831                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
  1832   300001                     	org	3145729
  1833   300001  FF                 	db	255
  1834                           
  1835                           ;Config register CONFIG3 @ 0x300002
  1836                           ;	MCLR Enable bit
  1837                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
  1838                           ;	Power-up timer selection bits
  1839                           ;	PWRTS = PWRT_64, PWRT set at 64ms
  1840                           ;	Multi-vector enable bit
  1841                           ;	MVECEN = ON, Multi-vector enabled, Vector table used for interrupts
  1842                           ;	IVTLOCK bit One-way set enable bit
  1843                           ;	IVT1WAY = ON, IVTLOCKED bit can be cleared and set only once
  1844                           ;	Low Power BOR Enable bit
  1845                           ;	LPBOREN = OFF, Low-Power BOR disabled
  1846                           ;	Brown-out Reset Enable bits
  1847                           ;	BOREN = OFF, Brown-out Reset disabled
  1848   300002                     	org	3145730
  1849   300002  3D                 	db	61
  1850                           
  1851                           ;Config register CONFIG4 @ 0x300003
  1852                           ;	Brown-out Reset Voltage Selection bits
  1853                           ;	BORV = VBOR_1P9, Brown-out Reset Voltage (VBOR) set to 1.9V
  1854                           ;	ZCD Disable bit
  1855                           ;	ZCD = OFF, ZCD module is disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCD
      +                          CON
  1856                           ;	PPSLOCK bit One-Way Set Enable bit
  1857                           ;	PPS1WAY = ON, PPSLOCKED bit can be cleared and set only once; PPS registers remain loc
      +                          ked after one clear/set cycle
  1858                           ;	Stack Full/Underflow Reset Enable bit
  1859                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1860                           ;	Low Voltage Programming Enable bit
  1861                           ;	LVP = OFF, HV on MCLR/VPP must be used for programming
  1862                           ;	Extended Instruction Set Enable bit
  1863                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
  1864   300003                     	org	3145731
  1865   300003  DF                 	db	223
  1866                           
  1867                           ;Config register CONFIG5 @ 0x300004
  1868                           ;	WDT Period selection bits
  1869                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  1870                           ;	WDT operating mode
  1871                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
  1872   300004                     	org	3145732
  1873   300004  9F                 	db	159
  1874                           
  1875                           ;Config register CONFIG6 @ 0x300005
  1876                           ;	WDT Window Select bits
  1877                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
  1878                           ;	WDT input clock selector
  1879                           ;	WDTCCS = SC, Software Control
  1880   300005                     	org	3145733
  1881   300005  FF                 	db	255
  1882                           
  1883                           ;Config register CONFIG7 @ 0x300006
  1884                           ;	Boot Block Size selection bits
  1885                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
  1886                           ;	Boot Block enable bit
  1887                           ;	BBEN = OFF, Boot block disabled
  1888                           ;	Storage Area Flash enable bit
  1889                           ;	SAFEN = OFF, SAF disabled
  1890                           ;	Background Debugger
  1891                           ;	DEBUG = OFF, Background Debugger disabled
  1892   300006                     	org	3145734
  1893   300006  FF                 	db	255
  1894                           
  1895                           ;Config register CONFIG8 @ 0x300007
  1896                           ;	Boot Block Write Protection bit
  1897                           ;	WRTB = OFF, Boot Block not Write protected
  1898                           ;	Configuration Register Write Protection bit
  1899                           ;	WRTC = OFF, Configuration registers not Write protected
  1900                           ;	Data EEPROM Write Protection bit
  1901                           ;	WRTD = OFF, Data EEPROM not Write protected
  1902                           ;	SAF Write protection bit
  1903                           ;	WRTSAF = OFF, SAF not Write Protected
  1904                           ;	Application Block write protection bit
  1905                           ;	WRTAPP = OFF, Application Block not write protected
  1906   300007                     	org	3145735
  1907   300007  FF                 	db	255
  1908                           
  1909                           ;Config register CONFIG10 @ 0x300009
  1910                           ;	PFM and Data EEPROM Code Protection bit
  1911                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
  1912   300009                     	org	3145737
  1913   300009  FF                 	db	255
  1914                           tosu	equ	0x4FF
  1915                           tosh	equ	0x4FE
  1916                           tosl	equ	0x4FD
  1917                           stkptr	equ	0x4FC
  1918                           pclatu	equ	0x4FB
  1919                           pclath	equ	0x4FA
  1920                           pcl	equ	0x4F9
  1921                           tblptru	equ	0x4F8
  1922                           tblptrh	equ	0x4F7
  1923                           tblptrl	equ	0x4F6
  1924                           tablat	equ	0x4F5
  1925                           prodh	equ	0x4F4
  1926                           prodl	equ	0x4F3
  1927                           indf0	equ	0x4EF
  1928                           postinc0	equ	0x4EE
  1929                           postdec0	equ	0x4ED
  1930                           preinc0	equ	0x4EC
  1931                           plusw0	equ	0x4EB
  1932                           fsr0h	equ	0x4EA
  1933                           fsr0l	equ	0x4E9
  1934                           wreg	equ	0x4E8
  1935                           indf1	equ	0x4E7
  1936                           postinc1	equ	0x4E6
  1937                           postdec1	equ	0x4E5
  1938                           preinc1	equ	0x4E4
  1939                           plusw1	equ	0x4E3
  1940                           fsr1h	equ	0x4E2
  1941                           fsr1l	equ	0x4E1
  1942                           bsr	equ	0x4E0
  1943                           indf2	equ	0x4DF
  1944                           postinc2	equ	0x4DE
  1945                           postdec2	equ	0x4DD
  1946                           preinc2	equ	0x4DC
  1947                           plusw2	equ	0x4DB
  1948                           fsr2h	equ	0x4DA
  1949                           fsr2l	equ	0x4D9
  1950                           status	equ	0x4D8

Data Sizes:
    Strings     51
    Constant    0
    Data        0
    BSS         10
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     16      26
    BANK5           160      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0
    BANK32          256      0       0
    BANK33          256      0       0
    BANK34          256      0       0
    BANK35          256      0       0
    BANK36          256      0       0

Pointer List with Targets:

    ESCRIBE_MENSAJE@cadena	PTR const unsigned char  size(1) Largest target is 16
		 -> STR_1(CODE[10]), STR_2(CODE[16]), STR_3(CODE[16]), STR_4(CODE[9]), 


Critical Paths under _main in COMRAM

    _main->_convierte
    _lcd_init->_CURSOR_ONOFF
    _lcd_init->_LCD_CONFIG
    _LCD_CONFIG->_ENVIA_LCD_CMD
    _CURSOR_ONOFF->_ENVIA_LCD_CMD
    _CURSOR_HOME->_ENVIA_LCD_CMD
    _BORRAR_LCD->_ENVIA_LCD_CMD
    _convierte->___lwdiv
    ___lwdiv->___lwmod
    _POS_CURSOR->_ENVIA_LCD_CMD
    _ENVIA_LCD_CMD->_ENVIA_NIBBLE
    _ENVIA_LCD_CMD->_LEER_LCD
    _ESCRIBE_MENSAJE->_ENVIA_CHAR
    _ENVIA_CHAR->_ENVIA_NIBBLE
    _ENVIA_CHAR->_LEER_LCD

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _main in BANK32

    None.

Critical Paths under _main in BANK33

    None.

Critical Paths under _main in BANK34

    None.

Critical Paths under _main in BANK35

    None.

Critical Paths under _main in BANK36

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    3373
                                             14 COMRAM     2     2      0
                         _ENVIA_CHAR
                    _ESCRIBE_MENSAJE
                         _POS_CURSOR
                          _configuro
                          _convierte
                           _lcd_init
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             2     2      0     525
                                              4 COMRAM     2     2      0
                         _BORRAR_LCD
                        _CURSOR_HOME
                       _CURSOR_ONOFF
                         _LCD_CONFIG
 ---------------------------------------------------------------------------------
 (2) _LCD_CONFIG                                           1     1      0     135
                                              3 COMRAM     1     1      0
                      _ENVIA_LCD_CMD
                       _ENVIA_NIBBLE
 ---------------------------------------------------------------------------------
 (2) _CURSOR_ONOFF                                         1     1      0     150
                                              3 COMRAM     1     1      0
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _CURSOR_HOME                                          0     0      0     120
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _BORRAR_LCD                                           0     0      0     120
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (1) _convierte                                            2     0      2    1397
                                             12 COMRAM     2     0      2
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     615
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     618
                                              5 COMRAM     7     3      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (1) _configuro                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _POS_CURSOR                                           2     1      1     512
                                              3 COMRAM     2     1      1
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (3) _ENVIA_LCD_CMD                                        2     2      0     120
                                              1 COMRAM     2     2      0
                       _ENVIA_NIBBLE
                           _LEER_LCD
 ---------------------------------------------------------------------------------
 (1) _ESCRIBE_MENSAJE                                      4     2      2     819
                                              3 COMRAM     4     2      2
                         _ENVIA_CHAR
 ---------------------------------------------------------------------------------
 (2) _ENVIA_CHAR                                           2     2      0     120
                                              1 COMRAM     2     2      0
                       _ENVIA_NIBBLE
                           _LEER_LCD
 ---------------------------------------------------------------------------------
 (4) _LEER_LCD                                             1     1      0      45
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _ENVIA_NIBBLE                                         1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ENVIA_CHAR
     _ENVIA_NIBBLE
     _LEER_LCD
   _ESCRIBE_MENSAJE
     _ENVIA_CHAR
   _POS_CURSOR
     _ENVIA_LCD_CMD
       _ENVIA_NIBBLE
       _LEER_LCD
   _configuro
   _convierte
     ___lwdiv
       ___lwmod (ARG)
     ___lwmod
   _lcd_init
     _BORRAR_LCD
       _ENVIA_LCD_CMD
     _CURSOR_HOME
       _ENVIA_LCD_CMD
     _CURSOR_ONOFF
       _ENVIA_LCD_CMD
     _LCD_CONFIG
       _ENVIA_LCD_CMD
       _ENVIA_NIBBLE

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0       0      70        0.0%
EEDATA             400      0       0       0        0.0%
BITBIGSFRlhhhll    336      0       0      84        0.0%
BITBIGSFR_1        100      0       0      69        0.0%
BITBANK36          100      0       0      67        0.0%
BANK36             100      0       0      68        0.0%
BITBANK35          100      0       0      65        0.0%
BANK35             100      0       0      66        0.0%
BITBANK34          100      0       0      63        0.0%
BANK34             100      0       0      64        0.0%
BITBANK33          100      0       0      61        0.0%
BANK33             100      0       0      62        0.0%
BITBANK32          100      0       0      59        0.0%
BANK32             100      0       0      60        0.0%
BITBANK31          100      0       0      57        0.0%
BANK31             100      0       0      58        0.0%
BITBANK30          100      0       0      55        0.0%
BANK30             100      0       0      56        0.0%
BITBANK29          100      0       0      53        0.0%
BANK29             100      0       0      54        0.0%
BITBANK28          100      0       0      51        0.0%
BANK28             100      0       0      52        0.0%
BITBANK27          100      0       0      49        0.0%
BANK27             100      0       0      50        0.0%
BITBANK26          100      0       0      47        0.0%
BANK26             100      0       0      48        0.0%
BITBANK25          100      0       0      45        0.0%
BANK25             100      0       0      46        0.0%
BITBANK24          100      0       0      42        0.0%
BANK24             100      0       0      43        0.0%
BITBANK23          100      0       0      40        0.0%
BANK23             100      0       0      41        0.0%
BITBANK22          100      0       0      38        0.0%
BANK22             100      0       0      39        0.0%
BITBANK21          100      0       0      36        0.0%
BANK21             100      0       0      37        0.0%
BITBANK20          100      0       0      34        0.0%
BANK20             100      0       0      35        0.0%
BITBANK19          100      0       0      32        0.0%
BANK19             100      0       0      33        0.0%
BITBANK18          100      0       0      30        0.0%
BANK18             100      0       0      31        0.0%
BITBANK17          100      0       0      28        0.0%
BANK17             100      0       0      29        0.0%
BITBANK16          100      0       0      26        0.0%
BANK16             100      0       0      27        0.0%
BITBANK15          100      0       0      24        0.0%
BANK15             100      0       0      25        0.0%
BITBANK14          100      0       0      22        0.0%
BANK14             100      0       0      23        0.0%
BITBANK13          100      0       0      20        0.0%
BANK13             100      0       0      21        0.0%
BITBANK12          100      0       0      18        0.0%
BANK12             100      0       0      19        0.0%
BITBANK11          100      0       0      16        0.0%
BANK11             100      0       0      17        0.0%
BITBANK10          100      0       0      14        0.0%
BANK10             100      0       0      15        0.0%
BITBANK9           100      0       0      12        0.0%
BANK9              100      0       0      13        0.0%
BITBANK8           100      0       0      10        0.0%
BANK8              100      0       0      11        0.0%
BITBANK7           100      0       0       8        0.0%
BANK7              100      0       0       9        0.0%
BITBANK6           100      0       0       6        0.0%
BANK6              100      0       0       7        0.0%
BITBIGSFRll         AD      0       0      87        0.0%
BITBANK5            A0      0       0       4        0.0%
BANK5               A0      0       0       5        0.0%
BITBIGSFRlhhhhh     98      0       0      78        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     10      1A       1       27.4%
BITBIGSFRhhh        2E      0       0      71        0.0%
BITBIGSFRlhhhhl      F      0       0      79        0.0%
BITBIGSFRlhhhhl      E      0       0      80        0.0%
BITBIGSFRlhhhlh      C      0       0      82        0.0%
BITBIGSFRlhhhlh      7      0       0      81        0.0%
BITBIGSFRlhhhll      6      0       0      83        0.0%
BITBIGSFRhhlhl       3      0       0      73        0.0%
BITBIGSFRlhl         3      0       0      86        0.0%
BITBIGSFRhllh        2      0       0      76        0.0%
BITBIGSFRhhlhh       1      0       0      72        0.0%
BITBIGSFRhlh         1      0       0      75        0.0%
BITBIGSFRlhhl        1      0       0      85        0.0%
BITBIGSFRhhll        1      0       0      74        0.0%
BITBIGSFRhlll        1      0       0      77        0.0%
BIGSFR_1             0      0       0     200        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      1A      44        0.0%
DATA                 0      0      1A       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Wed Oct 11 21:32:45 2023

                     l24 28F2                       l42 2A2A                       l51 29FA  
                     l60 2A46                       l37 2A68                       l54 2A70  
                     l63 2992                       l48 29C6                       l57 28B8  
                     l67 27BA                       l69 27F4                       u10 27F4  
                     u11 27F0                       u20 2A0E                       u21 2A0A  
                     u30 2A24                       u31 2A20            ENVIA_CHAR@aux 0503  
                    l142 2928                      l145 270E                      l153 260C  
                    l139 295E                      l900 298C                      l652 277A  
                    l662 2850                      l902 2A62                      l910 2A24  
                    l840 278C                      l920 29DC                      l912 29CA  
                    l904 29FE                      l850 27A4                      l842 278E  
                    l834 2784                      l930 29EE                      l922 29DE  
                    l914 29CC                      l906 2A0E                      l659 2782  
                    l860 27C4                      l852 27A6                      l844 2796  
                    l836 2788                      l932 29F4                      l924 29E0  
                    l916 29D0                      l908 2A14                      l940 2864  
                    l669 2858                      l862 27C8                      l870 27E2  
                    l854 27AE                      l846 279A                      l838 278A  
                    l926 29E2                      l918 29D4                      l934 2A6A  
                    l950 289A                      l942 2872                      l872 2A2E  
                    l864 27D2                      l856 27B0                      l848 279C  
                    l928 29E8                      l880 2962                      l952 28A0  
                    l944 2886                      l936 285A                      l874 2A3A  
                    l866 27DC                      l858 27BC                      l890 2976  
                    l882 2964                      l954 28A6                      l946 288E  
                    l938 285E                      l876 2A3C                      l892 2978  
                    l884 2968                      l956 28AC                      l948 2894  
                    l878 2A44                      l894 297A                      l886 296C  
                    l958 28B2                      l896 2980                      l888 2974  
                    l898 2986                      u200 272A                      u201 2726  
                    u210 2748                      u211 2744                      u220 2764  
                    u300 261A                      u221 2760                      u301 2616  
                    u230 2808                      u231 2804                      u240 2826  
                    u241 2822                      u250 283C                      u251 2838  
                    u260 28CC                      u261 28C8                      u317 255E  
                    u270 28EA                      u407 296E                      u271 28E6  
                    u327 259A                      u280 29C6                      u417 29D6  
                    u281 29C2                      u337 25B2                      u290 2578  
                    u427 2790                      u347 25E4                      u291 2574  
                    u437 279E                      u357 25FC                      u447 27A8  
                    u367 290C                      u457 27BE                      u377 286A  
                    u467 27CC                      u387 2878                      u477 27D6  
                    u397 2888                      u487 2A3E              LEER_LCD@aux 0501  
                    wreg 04E8             ?_CURSOR_HOME 0501           ??_ENVIA_NIBBLE 0501  
         ENVIA_CHAR@dato 0502                     l1020 293E                     l1030 2956  
                   l1022 2940                     l1014 292A                     l1032 295A  
                   l1024 2942                     l1016 2938                     l1040 291A  
                   l1200 256A                     l1026 294E                     l1018 293A  
                   l1042 291E                     l1034 28F4                     l1210 25A6  
                   l1202 2578                     l1028 2954                     l1140 2732  
                   l1044 2922                     l1036 28FE                     l1220 25DA  
                   l1212 25A8                     l1204 2582                     l1150 276C  
                   l1142 273A                     l1134 2710                     l1038 2902  
                   l1230 262C                     l1222 25F0                     l1206 258E  
                   l1214 25C2                     l1152 276E                     l1144 2748  
                   l1136 2718                     l1160 2810                     l1240 265E  
                   l1232 2638                     l1224 25F2                     l1216 25CC  
                   l1208 2590                     l1154 2774                     l1146 274E  
                   l1138 272A                     l1170 284A                     l1162 2818  
                   l1242 2666                     l1234 2642                     l1218 25D8  
                   l1226 2608                     l1180 2994                     l1172 28BC  
                   l1148 2764                     l1164 2826                     l1156 27F6  
                   l1236 264E                     l1228 261A                     l1182 29A0  
                   l1174 28CC                     l1166 283C                     l1158 2808  
                   l1238 2656                     l1190 2536                     l1184 29B2  
                   l1176 28D8                     l1168 2844                     l1192 253A  
                   l1186 29B4                     l1178 28EA                     l1194 253E  
                   l1188 2676                     l1196 2548                     l1198 2554  
                   STR_1 2521                     STR_2 2511                     STR_3 2501  
                   STR_4 252B                     _LATD 04C1                     _main 2536  
                   start FFFC            ?_CURSOR_ONOFF 0501             ___param_bank 0000  
        ??_ENVIA_LCD_CMD 0502         __end_of_LEER_LCD 27F6                    ?_main 0501  
                  _ADPCH 03EC          __end_of___lwdiv 2784          __end_of___lwmod 285A  
                  _OSCEN 00B3                    _PORTD 04D1                    _TRISD 04C9  
            ?_POS_CURSOR 0504                    tablat 04F5                    status 04D8  
         ??_CURSOR_ONOFF 0504          __initialization 2A48             __end_of_main 2676  
        _ESCRIBE_MENSAJE 2994                   ??_main 050F            __activetblptr 0001  
                 _ADRESH 03EB                   _ADRESL 03EA                   _ANSELD 0418  
                 _OSCFRQ 00B1         __end_of_lcd_init 292A                   _decena 0513  
   __end_of_ENVIA_NIBBLE 2A48                ??___lwdiv 050A                ??___lwmod 0505  
                 _millar 0517                   clear_0 2A4E                   isa$std 0001  
                 _unidad 0511             __mediumconst 0000                   tblptrh 04F7  
                 tblptrl 04F6                   tblptru 04F8             ??_BORRAR_LCD 0504  
              ?_LEER_LCD 0501               __accesstop 0560  __end_of__initialization 2A54  
           ??_LCD_CONFIG 0504            ___rparam_used 0001             ??_ENVIA_CHAR 0502  
__end_of_ESCRIBE_MENSAJE 29C8           __pcstackCOMRAM 0501       __end_of_BORRAR_LCD 2A72  
       ENVIA_LCD_CMD@aux 0503     __end_of_CURSOR_ONOFF 2A2C       __end_of_LCD_CONFIG 28BA  
     __end_of_ENVIA_CHAR 29FC               ??_LEER_LCD 0501         ENVIA_NIBBLE@dato 0501  
                _OSCCON1 00AD             ??_POS_CURSOR 0505                ?_lcd_init 0501  
                __Hparam 0000                  __Lparam 0000         ?_ESCRIBE_MENSAJE 0504  
      __end_of_configuro 2960                  ___lwdiv 2710                  ___lwmod 27F6  
           __psmallconst 2500    __end_of_ENVIA_LCD_CMD 2994        __end_of_convierte 2710  
                __pcinit 2A48       __end_of_POS_CURSOR 28F4                  __ramtop 2500  
                _centena 0515                  __ptext0 2536                  __ptext1 28F4  
                __ptext2 285A                  __ptext3 29FC                  __ptext4 2A62  
                __ptext5 2A6A                  __ptext6 2676                  __ptext7 27F6  
                __ptext8 2710                  __ptext9 292A               ??_lcd_init 0505  
           _ENVIA_NIBBLE 2A2C     end_of_initialization 2A54                  postinc0 04EE  
              _PORTBbits 04CF                _TRISAbits 04C6                _TRISBbits 04C7  
              _TRISFbits 04CB             _CURSOR_ONOFF 29FC       CURSOR_ONOFF@estado 0504  
          ??_CURSOR_HOME 0504      start_initialization 2A48        ENVIA_LCD_CMD@dato 0502  
            __pbssCOMRAM 0511      __end_of_CURSOR_HOME 2A6A         ___lwdiv@dividend 0506  
               ?___lwdiv 0506                 ?___lwmod 0501                _configuro 292A  
            __smallconst 2500                _convierte 2676         ___lwdiv@quotient 050A  
               _LEER_LCD 2784                 _LATDbits 04C1                 _LATFbits 04C3  
              _resultado 0519         ESCRIBE_MENSAJE@i 0507           POS_CURSOR@fila 0505  
             ?_configuro 0501               _ADCON0bits 03F3               ?_convierte 050D  
               _WPUBbits 0409              _CURSOR_HOME 2A62                 __Hrparam 0000  
               __Lrparam 0000             __Lsmallconst 2500               _ANSELAbits 0400  
             _ANSELBbits 0408               _ANSELFbits 0428          ___lwdiv@divisor 0508  
        ___lwdiv@counter 050C                 __ptext10 28BA                 __ptext11 2960  
               __ptext12 2994                 __ptext13 29C8                 __ptext14 2784  
               __ptext15 2A2C               _BORRAR_LCD 2A6A                 _lcd_init 28F4  
         convierte@valor 050D               _LCD_CONFIG 285A               _ENVIA_CHAR 29C8  
               isa$xinst 0000            _ENVIA_LCD_CMD 2960              ??_configuro 0501  
            ??_convierte 050F        ??_ESCRIBE_MENSAJE 0506    ESCRIBE_MENSAJE@cadena 0504  
       ___lwmod@dividend 0501           ?_ENVIA_LCD_CMD 0501          ___lwmod@divisor 0503  
        ___lwmod@counter 0505              ?_BORRAR_LCD 0501            ?_ENVIA_NIBBLE 0501  
             _POS_CURSOR 28BA              ?_LCD_CONFIG 0501       ESCRIBE_MENSAJE@tam 0505  
            ?_ENVIA_CHAR 0501        POS_CURSOR@columna 0504  
