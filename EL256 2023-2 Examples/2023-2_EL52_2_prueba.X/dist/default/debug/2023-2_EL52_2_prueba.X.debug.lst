

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Thu Oct 12 21:16:19 2023

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F57Q43
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text13,global,reloc=2,class=CODE,delta=1
    23                           	psect	text14,global,reloc=2,class=CODE,delta=1
    24                           	psect	text15,global,reloc=2,class=CODE,delta=1
    25                           	psect	text16,global,reloc=2,class=CODE,delta=1
    26                           	psect	text17,global,reloc=2,class=CODE,delta=1
    27                           	psect	text18,global,reloc=2,class=CODE,delta=1
    28                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    29                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    30                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    31   000000                     
    32                           ; Generated 18/07/2023 GMT
    33                           ; 
    34                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    35                           ; All rights reserved.
    36                           ; 
    37                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    38                           ; 
    39                           ; Redistribution and use in source and binary forms, with or without modification, are
    40                           ; permitted provided that the following conditions are met:
    41                           ; 
    42                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    43                           ;        conditions and the following disclaimer.
    44                           ; 
    45                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    46                           ;        of conditions and the following disclaimer in the documentation and/or other
    47                           ;        materials provided with the distribution. Publication is not required when
    48                           ;        this file is used in an embedded application.
    49                           ; 
    50                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    51                           ;        software without specific prior written permission.
    52                           ; 
    53                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    54                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    55                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    56                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    57                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    58                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    59                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    60                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    61                           ; 
    62                           ; 
    63                           ; Code-generator required, PIC18F57Q43 Definitions
    64                           ; 
    65                           ; SFR Addresses
    66   000000                     _LATD	set	1217
    67   000000                     _OSCCON1	set	173
    68   000000                     _LATDbits	set	1217
    69   000000                     _TRISAbits	set	1222
    70   000000                     _TRISBbits	set	1223
    71   000000                     _TRISD	set	1225
    72   000000                     _TRISFbits	set	1227
    73   000000                     _PORTD	set	1233
    74   000000                     _OSCFRQ	set	177
    75   000000                     _OSCEN	set	179
    76   000000                     _ADRESL	set	1002
    77   000000                     _ADRESH	set	1003
    78   000000                     _ADPCH	set	1004
    79   000000                     _ADCON0bits	set	1011
    80   000000                     _ANSELBbits	set	1032
    81   000000                     _ANSELD	set	1048
    82   000000                     _ANSELFbits	set	1064
    83   000000                     _WPUBbits	set	1033
    84   000000                     _ANSELAbits	set	1024
    85                           
    86                           	psect	smallconst
    87   002500                     __psmallconst:
    88                           	callstack 0
    89   002500  00                 	db	0
    90   002501                     STR_1:
    91   002501  45                 	db	69	;'E'
    92   002502  6A                 	db	106	;'j'
    93   002503  65                 	db	101	;'e'
    94   002504  72                 	db	114	;'r'
    95   002505  63                 	db	99	;'c'
    96   002506  69                 	db	105	;'i'
    97   002507  63                 	db	99	;'c'
    98   002508  69                 	db	105	;'i'
    99   002509  6F                 	db	111	;'o'
   100   00250A  6D                 	db	109	;'m'
   101   00250B  6F                 	db	111	;'o'
   102   00250C  6E                 	db	110	;'n'
   103   00250D  00                 	db	0
   104   00250E                     STR_2:
   105   00250E  41                 	db	65	;'A'
   106   00250F  44                 	db	68	;'D'
   107   002510  43                 	db	67	;'C'
   108   002511  20                 	db	32
   109   002512  43                 	db	67	;'C'
   110   002513  48                 	db	72	;'H'
   111   002514  30                 	db	48	;'0'
   112   002515  3A                 	db	58	;':'
   113   002516  00                 	db	0
   114   002517  00                 	db	0	; dummy byte at the end
   115   000000                     
   116                           ; #config settings
   117                           
   118                           	psect	cinit
   119   003246                     __pcinit:
   120                           	callstack 0
   121   003246                     start_initialization:
   122                           	callstack 0
   123   003246                     __initialization:
   124                           	callstack 0
   125                           
   126                           ; Clear objects allocated to COMRAM (18 bytes)
   127   003246  EE01  F11F         	lfsr	0,__pbssCOMRAM
   128   00324A  0E12               	movlw	18
   129   00324C                     clear_0:
   130   00324C  6AEE               	clrf	postinc0,c
   131   00324E  06E8               	decf	wreg,f,c
   132   003250  E1FD               	bnz	clear_0
   133   003252                     end_of_initialization:
   134                           	callstack 0
   135   003252                     __end_of__initialization:
   136                           	callstack 0
   137   003252  0E00               	movlw	low (__Lsmallconst shr (0+16))
   138   003254  6EF8               	movwf	tblptru,c
   139   003256  0E25               	movlw	high __Lsmallconst
   140   003258  6EF7               	movwf	tblptrh,c
   141   00325A  0100               	movlb	0
   142   00325C  EFC6  F015         	goto	_main	;jump to C main() function
   143                           
   144                           	psect	bssCOMRAM
   145   00051F                     __pbssCOMRAM:
   146                           	callstack 0
   147   00051F                     _unidad:
   148                           	callstack 0
   149   00051F                     	ds	4
   150   000523                     _decena:
   151                           	callstack 0
   152   000523                     	ds	4
   153   000527                     _centena:
   154                           	callstack 0
   155   000527                     	ds	4
   156   00052B                     _millar:
   157                           	callstack 0
   158   00052B                     	ds	4
   159   00052F                     _resultado:
   160                           	callstack 0
   161   00052F                     	ds	2
   162                           
   163                           	psect	cstackCOMRAM
   164   000501                     __pcstackCOMRAM:
   165                           	callstack 0
   166   000501                     ?___lwmod:
   167                           	callstack 0
   168   000501                     ?___fladd:
   169                           	callstack 0
   170   000501                     ENVIA_NIBBLE@dato:
   171                           	callstack 0
   172   000501                     LEER_LCD@aux:
   173                           	callstack 0
   174   000501                     ___lwmod@dividend:
   175                           	callstack 0
   176   000501                     ___fladd@b:
   177                           	callstack 0
   178                           
   179                           ; 4 bytes @ 0x0
   180   000501                     	ds	1
   181   000502                     ENVIA_CHAR@dato:
   182                           	callstack 0
   183   000502                     ENVIA_LCD_CMD@dato:
   184                           	callstack 0
   185                           
   186                           ; 1 bytes @ 0x1
   187   000502                     	ds	1
   188   000503                     ENVIA_CHAR@aux:
   189                           	callstack 0
   190   000503                     ENVIA_LCD_CMD@aux:
   191                           	callstack 0
   192   000503                     ___lwmod@divisor:
   193                           	callstack 0
   194                           
   195                           ; 2 bytes @ 0x2
   196   000503                     	ds	1
   197   000504                     ??_LCD_CONFIG:
   198   000504                     POS_CURSOR@columna:
   199                           	callstack 0
   200   000504                     CURSOR_ONOFF@estado:
   201                           	callstack 0
   202   000504                     ESCRIBE_MENSAJE@cadena:
   203                           	callstack 0
   204                           
   205                           ; 1 bytes @ 0x3
   206   000504                     	ds	1
   207   000505                     ??_lcd_init:
   208   000505                     POS_CURSOR@fila:
   209                           	callstack 0
   210   000505                     ESCRIBE_MENSAJE@tam:
   211                           	callstack 0
   212   000505                     ___lwmod@counter:
   213                           	callstack 0
   214   000505                     ___fladd@a:
   215                           	callstack 0
   216                           
   217                           ; 4 bytes @ 0x4
   218   000505                     	ds	1
   219   000506                     ??_ESCRIBE_MENSAJE:
   220   000506                     ?___lwdiv:
   221                           	callstack 0
   222   000506                     ___lwdiv@dividend:
   223                           	callstack 0
   224                           
   225                           ; 2 bytes @ 0x5
   226   000506                     	ds	1
   227   000507                     ESCRIBE_MENSAJE@i:
   228                           	callstack 0
   229                           
   230                           ; 1 bytes @ 0x6
   231   000507                     	ds	1
   232   000508                     ___lwdiv@divisor:
   233                           	callstack 0
   234                           
   235                           ; 2 bytes @ 0x7
   236   000508                     	ds	1
   237   000509                     ??___fladd:
   238                           
   239                           ; 1 bytes @ 0x8
   240   000509                     	ds	1
   241   00050A                     ___lwdiv@quotient:
   242                           	callstack 0
   243                           
   244                           ; 2 bytes @ 0x9
   245   00050A                     	ds	2
   246   00050C                     ___lwdiv@counter:
   247                           	callstack 0
   248                           
   249                           ; 1 bytes @ 0xB
   250   00050C                     	ds	1
   251   00050D                     ?___xxtofl:
   252                           	callstack 0
   253   00050D                     ___fladd@signs:
   254                           	callstack 0
   255   00050D                     ___xxtofl@val:
   256                           	callstack 0
   257                           
   258                           ; 4 bytes @ 0xC
   259   00050D                     	ds	1
   260   00050E                     ___fladd@aexp:
   261                           	callstack 0
   262                           
   263                           ; 1 bytes @ 0xD
   264   00050E                     	ds	1
   265   00050F                     ___fladd@bexp:
   266                           	callstack 0
   267                           
   268                           ; 1 bytes @ 0xE
   269   00050F                     	ds	1
   270   000510                     ___fladd@grs:
   271                           	callstack 0
   272                           
   273                           ; 1 bytes @ 0xF
   274   000510                     	ds	1
   275   000511                     ??___xxtofl:
   276   000511                     ?___fltol:
   277                           	callstack 0
   278   000511                     ___fltol@f1:
   279                           	callstack 0
   280                           
   281                           ; 4 bytes @ 0x10
   282   000511                     	ds	4
   283   000515                     ??___fltol:
   284   000515                     ___xxtofl@sign:
   285                           	callstack 0
   286                           
   287                           ; 1 bytes @ 0x14
   288   000515                     	ds	1
   289   000516                     ___xxtofl@exp:
   290                           	callstack 0
   291                           
   292                           ; 1 bytes @ 0x15
   293   000516                     	ds	1
   294   000517                     ___xxtofl@arg:
   295                           	callstack 0
   296                           
   297                           ; 4 bytes @ 0x16
   298   000517                     	ds	2
   299   000519                     ___fltol@sign1:
   300                           	callstack 0
   301                           
   302                           ; 1 bytes @ 0x18
   303   000519                     	ds	1
   304   00051A                     ___fltol@exp1:
   305                           	callstack 0
   306                           
   307                           ; 1 bytes @ 0x19
   308   00051A                     	ds	1
   309   00051B                     convierte@valor:
   310                           	callstack 0
   311                           
   312                           ; 2 bytes @ 0x1A
   313   00051B                     	ds	2
   314   00051D                     ??_main:
   315                           
   316                           ; 1 bytes @ 0x1C
   317   00051D                     	ds	2
   318                           
   319 ;;
   320 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   321 ;;
   322 ;; *************** function _main *****************
   323 ;; Defined at:
   324 ;;		line 46 in file "maincode03.c"
   325 ;; Parameters:    Size  Location     Type
   326 ;;		None
   327 ;; Auto vars:     Size  Location     Type
   328 ;;		None
   329 ;; Return value:  Size  Location     Type
   330 ;;                  1    wreg      void 
   331 ;; Registers used:
   332 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   333 ;; Tracked objects:
   334 ;;		On entry : 0/0
   335 ;;		On exit  : 0/0
   336 ;;		Unchanged: 0/0
   337 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   338 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   339 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   340 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   341 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   342 ;;Total ram usage:        2 bytes
   343 ;; Hardware stack levels required when called: 4
   344 ;; This function calls:
   345 ;;		_ENVIA_CHAR
   346 ;;		_ESCRIBE_MENSAJE
   347 ;;		_POS_CURSOR
   348 ;;		___fladd
   349 ;;		___fltol
   350 ;;		_configuro
   351 ;;		_convierte
   352 ;;		_lcd_init
   353 ;; This function is called by:
   354 ;;		Startup code after reset
   355 ;; This function uses a non-reentrant model
   356 ;;
   357                           
   358                           	psect	text0
   359   002B8C                     __ptext0:
   360                           	callstack 0
   361   002B8C                     _main:
   362                           	callstack 123
   363   002B8C                     
   364                           ;maincode03.c: 47:     configuro();
   365   002B8C  EC94  F018         	call	_configuro	;wreg free
   366   002B90                     
   367                           ;maincode03.c: 48:     lcd_init();
   368   002B90  EC79  F018         	call	_lcd_init	;wreg free
   369   002B94                     
   370                           ;maincode03.c: 49:     POS_CURSOR(1,2);
   371   002B94  0E02               	movlw	2
   372   002B96  6E04               	movwf	POS_CURSOR@columna^(0+1280),c
   373   002B98  0E01               	movlw	1
   374   002B9A  EC5C  F018         	call	_POS_CURSOR
   375   002B9E                     
   376                           ;maincode03.c: 50:     ESCRIBE_MENSAJE("Ejerciciomon", 12);
   377   002B9E  0E01               	movlw	low STR_1
   378   002BA0  6E04               	movwf	ESCRIBE_MENSAJE@cadena^(0+1280),c
   379   002BA2  0E0C               	movlw	12
   380   002BA4  6E05               	movwf	ESCRIBE_MENSAJE@tam^(0+1280),c
   381   002BA6  ECC9  F018         	call	_ESCRIBE_MENSAJE	;wreg free
   382   002BAA                     
   383                           ;maincode03.c: 51:     _delay((unsigned long)((3000)*(48000000UL/4000.0)));
   384   002BAA  0EB7               	movlw	183
   385   002BAC  6E1E               	movwf	(??_main+1)^(0+1280),c
   386   002BAE  0EA1               	movlw	161
   387   002BB0  6E1D               	movwf	??_main^(0+1280),c
   388   002BB2  0EC4               	movlw	196
   389   002BB4                     u1417:
   390   002BB4  2EE8               	decfsz	wreg,f,c
   391   002BB6  D7FE               	bra	u1417
   392   002BB8  2E1D               	decfsz	??_main^(0+1280),f,c
   393   002BBA  D7FC               	bra	u1417
   394   002BBC  2E1E               	decfsz	(??_main+1)^(0+1280),f,c
   395   002BBE  D7FA               	bra	u1417
   396   002BC0                     l1752:
   397                           
   398                           ;maincode03.c: 53:         ADCON0bits.GO = 1;
   399   002BC0  0103               	movlb	3	; () banked
   400   002BC2  81F3               	bsf	243,0,b	;volatile
   401   002BC4                     l147:
   402                           
   403                           ; BSR set to: 3
   404   002BC4  B1F3               	btfsc	243,0,b	;volatile
   405   002BC6  EFE7  F015         	goto	u1401
   406   002BCA  EFE9  F015         	goto	u1400
   407   002BCE                     u1401:
   408   002BCE  EFE2  F015         	goto	l147
   409   002BD2                     u1400:
   410   002BD2                     
   411                           ; BSR set to: 3
   412                           ;maincode03.c: 55:         resultado = (ADRESH << 8) + ADRESL;
   413   002BD2  51EB               	movf	235,w,b	;volatile
   414   002BD4  6E1E               	movwf	(??_main+1)^(0+1280),c
   415   002BD6  6A1D               	clrf	??_main^(0+1280),c
   416   002BD8  51EA               	movf	234,w,b	;volatile
   417   002BDA  241D               	addwf	??_main^(0+1280),w,c
   418   002BDC  6E2F               	movwf	_resultado^(0+1280),c
   419   002BDE  0E00               	movlw	0
   420   002BE0  201E               	addwfc	(??_main+1)^(0+1280),w,c
   421   002BE2  6E30               	movwf	(_resultado+1)^(0+1280),c
   422   002BE4                     
   423                           ; BSR set to: 3
   424                           ;maincode03.c: 56:         convierte(resultado);
   425   002BE4  C52F  F51B         	movff	_resultado,convierte@valor
   426   002BE8  C530  F51C         	movff	_resultado+1,convierte@valor+1
   427   002BEC  EC06  F017         	call	_convierte	;wreg free
   428   002BF0                     
   429                           ;maincode03.c: 57:         POS_CURSOR(2,2);
   430   002BF0  0E02               	movlw	2
   431   002BF2  6E04               	movwf	POS_CURSOR@columna^(0+1280),c
   432   002BF4  0E02               	movlw	2
   433   002BF6  EC5C  F018         	call	_POS_CURSOR
   434   002BFA                     
   435                           ;maincode03.c: 58:         ESCRIBE_MENSAJE("ADC CH0:", 8);
   436   002BFA  0E0E               	movlw	low STR_2
   437   002BFC  6E04               	movwf	ESCRIBE_MENSAJE@cadena^(0+1280),c
   438   002BFE  0E08               	movlw	8
   439   002C00  6E05               	movwf	ESCRIBE_MENSAJE@tam^(0+1280),c
   440   002C02  ECC9  F018         	call	_ESCRIBE_MENSAJE	;wreg free
   441   002C06                     
   442                           ;maincode03.c: 59:         ENVIA_CHAR(millar+0x30);
   443   002C06  0E00               	movlw	0
   444   002C08  6E05               	movwf	___fladd@a^(0+1280),c
   445   002C0A  0E00               	movlw	0
   446   002C0C  6E06               	movwf	(___fladd@a+1)^(0+1280),c
   447   002C0E  0E40               	movlw	64
   448   002C10  6E07               	movwf	(___fladd@a+2)^(0+1280),c
   449   002C12  0E42               	movlw	66
   450   002C14  6E08               	movwf	(___fladd@a+3)^(0+1280),c
   451   002C16  C52B  F501         	movff	_millar,___fladd@b
   452   002C1A  C52C  F502         	movff	_millar+1,___fladd@b+1
   453   002C1E  C52D  F503         	movff	_millar+2,___fladd@b+2
   454   002C22  C52E  F504         	movff	_millar+3,___fladd@b+3
   455   002C26  EC8C  F012         	call	___fladd	;wreg free
   456   002C2A  C501  F511         	movff	?___fladd,___fltol@f1
   457   002C2E  C502  F512         	movff	?___fladd+1,___fltol@f1+1
   458   002C32  C503  F513         	movff	?___fladd+2,___fltol@f1+2
   459   002C36  C504  F514         	movff	?___fladd+3,___fltol@f1+3
   460   002C3A  EC83  F016         	call	___fltol	;wreg free
   461   002C3E  5011               	movf	?___fltol^(0+1280),w,c
   462   002C40  ECE3  F018         	call	_ENVIA_CHAR
   463   002C44                     
   464                           ;maincode03.c: 60:         ENVIA_CHAR(centena+0x30);
   465   002C44  0E00               	movlw	0
   466   002C46  6E05               	movwf	___fladd@a^(0+1280),c
   467   002C48  0E00               	movlw	0
   468   002C4A  6E06               	movwf	(___fladd@a+1)^(0+1280),c
   469   002C4C  0E40               	movlw	64
   470   002C4E  6E07               	movwf	(___fladd@a+2)^(0+1280),c
   471   002C50  0E42               	movlw	66
   472   002C52  6E08               	movwf	(___fladd@a+3)^(0+1280),c
   473   002C54  C527  F501         	movff	_centena,___fladd@b
   474   002C58  C528  F502         	movff	_centena+1,___fladd@b+1
   475   002C5C  C529  F503         	movff	_centena+2,___fladd@b+2
   476   002C60  C52A  F504         	movff	_centena+3,___fladd@b+3
   477   002C64  EC8C  F012         	call	___fladd	;wreg free
   478   002C68  C501  F511         	movff	?___fladd,___fltol@f1
   479   002C6C  C502  F512         	movff	?___fladd+1,___fltol@f1+1
   480   002C70  C503  F513         	movff	?___fladd+2,___fltol@f1+2
   481   002C74  C504  F514         	movff	?___fladd+3,___fltol@f1+3
   482   002C78  EC83  F016         	call	___fltol	;wreg free
   483   002C7C  5011               	movf	?___fltol^(0+1280),w,c
   484   002C7E  ECE3  F018         	call	_ENVIA_CHAR
   485   002C82                     
   486                           ;maincode03.c: 61:         ENVIA_CHAR(decena+0x30);
   487   002C82  0E00               	movlw	0
   488   002C84  6E05               	movwf	___fladd@a^(0+1280),c
   489   002C86  0E00               	movlw	0
   490   002C88  6E06               	movwf	(___fladd@a+1)^(0+1280),c
   491   002C8A  0E40               	movlw	64
   492   002C8C  6E07               	movwf	(___fladd@a+2)^(0+1280),c
   493   002C8E  0E42               	movlw	66
   494   002C90  6E08               	movwf	(___fladd@a+3)^(0+1280),c
   495   002C92  C523  F501         	movff	_decena,___fladd@b
   496   002C96  C524  F502         	movff	_decena+1,___fladd@b+1
   497   002C9A  C525  F503         	movff	_decena+2,___fladd@b+2
   498   002C9E  C526  F504         	movff	_decena+3,___fladd@b+3
   499   002CA2  EC8C  F012         	call	___fladd	;wreg free
   500   002CA6  C501  F511         	movff	?___fladd,___fltol@f1
   501   002CAA  C502  F512         	movff	?___fladd+1,___fltol@f1+1
   502   002CAE  C503  F513         	movff	?___fladd+2,___fltol@f1+2
   503   002CB2  C504  F514         	movff	?___fladd+3,___fltol@f1+3
   504   002CB6  EC83  F016         	call	___fltol	;wreg free
   505   002CBA  5011               	movf	?___fltol^(0+1280),w,c
   506   002CBC  ECE3  F018         	call	_ENVIA_CHAR
   507   002CC0                     
   508                           ;maincode03.c: 62:         ENVIA_CHAR(unidad+0x30);
   509   002CC0  0E00               	movlw	0
   510   002CC2  6E05               	movwf	___fladd@a^(0+1280),c
   511   002CC4  0E00               	movlw	0
   512   002CC6  6E06               	movwf	(___fladd@a+1)^(0+1280),c
   513   002CC8  0E40               	movlw	64
   514   002CCA  6E07               	movwf	(___fladd@a+2)^(0+1280),c
   515   002CCC  0E42               	movlw	66
   516   002CCE  6E08               	movwf	(___fladd@a+3)^(0+1280),c
   517   002CD0  C51F  F501         	movff	_unidad,___fladd@b
   518   002CD4  C520  F502         	movff	_unidad+1,___fladd@b+1
   519   002CD8  C521  F503         	movff	_unidad+2,___fladd@b+2
   520   002CDC  C522  F504         	movff	_unidad+3,___fladd@b+3
   521   002CE0  EC8C  F012         	call	___fladd	;wreg free
   522   002CE4  C501  F511         	movff	?___fladd,___fltol@f1
   523   002CE8  C502  F512         	movff	?___fladd+1,___fltol@f1+1
   524   002CEC  C503  F513         	movff	?___fladd+2,___fltol@f1+2
   525   002CF0  C504  F514         	movff	?___fladd+3,___fltol@f1+3
   526   002CF4  EC83  F016         	call	___fltol	;wreg free
   527   002CF8  5011               	movf	?___fltol^(0+1280),w,c
   528   002CFA  ECE3  F018         	call	_ENVIA_CHAR
   529   002CFE  EFE0  F015         	goto	l1752
   530   002D02  EFFE  F0FF         	goto	start
   531   002D06                     __end_of_main:
   532                           	callstack 0
   533                           
   534 ;; *************** function _lcd_init *****************
   535 ;; Defined at:
   536 ;;		line 29 in file "maincode03.c"
   537 ;; Parameters:    Size  Location     Type
   538 ;;		None
   539 ;; Auto vars:     Size  Location     Type
   540 ;;		None
   541 ;; Return value:  Size  Location     Type
   542 ;;                  1    wreg      void 
   543 ;; Registers used:
   544 ;;		wreg, status,2, status,0, cstack
   545 ;; Tracked objects:
   546 ;;		On entry : 0/0
   547 ;;		On exit  : 0/0
   548 ;;		Unchanged: 0/0
   549 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   550 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   551 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   552 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   553 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   554 ;;Total ram usage:        2 bytes
   555 ;; Hardware stack levels used: 1
   556 ;; Hardware stack levels required when called: 3
   557 ;; This function calls:
   558 ;;		_BORRAR_LCD
   559 ;;		_CURSOR_HOME
   560 ;;		_CURSOR_ONOFF
   561 ;;		_LCD_CONFIG
   562 ;; This function is called by:
   563 ;;		_main
   564 ;; This function uses a non-reentrant model
   565 ;;
   566                           
   567                           	psect	text1
   568   0030F2                     __ptext1:
   569                           	callstack 0
   570   0030F2                     _lcd_init:
   571                           	callstack 123
   572   0030F2                     
   573                           ;maincode03.c: 30:     TRISD = 0x00;
   574   0030F2  0E00               	movlw	0
   575   0030F4  6EC9               	movwf	201,c	;volatile
   576                           
   577                           ;maincode03.c: 31:     ANSELD = 0x00;
   578   0030F6  0E00               	movlw	0
   579   0030F8  0104               	movlb	4	; () banked
   580   0030FA  6F18               	movwf	24,b	;volatile
   581   0030FC                     
   582                           ; BSR set to: 4
   583                           ;maincode03.c: 32:     LCD_CONFIG();
   584   0030FC  EC2C  F018         	call	_LCD_CONFIG	;wreg free
   585   003100                     
   586                           ;maincode03.c: 33:     _delay((unsigned long)((19)*(48000000UL/4000.0)));
   587   003100  0E02               	movlw	2
   588   003102  6E06               	movwf	(??_lcd_init+1)^(0+1280),c
   589   003104  0E29               	movlw	41
   590   003106  6E05               	movwf	??_lcd_init^(0+1280),c
   591   003108  0E17               	movlw	23
   592   00310A                     u1427:
   593   00310A  2EE8               	decfsz	wreg,f,c
   594   00310C  D7FE               	bra	u1427
   595   00310E  2E05               	decfsz	??_lcd_init^(0+1280),f,c
   596   003110  D7FC               	bra	u1427
   597   003112  2E06               	decfsz	(??_lcd_init+1)^(0+1280),f,c
   598   003114  D7FA               	bra	u1427
   599   003116  0000               	nop	
   600   003118                     
   601                           ;maincode03.c: 34:     BORRAR_LCD();
   602   003118  EC34  F019         	call	_BORRAR_LCD	;wreg free
   603   00311C                     
   604                           ;maincode03.c: 35:     CURSOR_HOME();
   605   00311C  EC30  F019         	call	_CURSOR_HOME	;wreg free
   606   003120                     
   607                           ;maincode03.c: 36:     CURSOR_ONOFF(1);
   608   003120  0E01               	movlw	1
   609   003122  ECFD  F018         	call	_CURSOR_ONOFF
   610   003126  0012               	return		;funcret
   611   003128                     __end_of_lcd_init:
   612                           	callstack 0
   613                           
   614 ;; *************** function _LCD_CONFIG *****************
   615 ;; Defined at:
   616 ;;		line 72 in file "LCD.c"
   617 ;; Parameters:    Size  Location     Type
   618 ;;		None
   619 ;; Auto vars:     Size  Location     Type
   620 ;;		None
   621 ;; Return value:  Size  Location     Type
   622 ;;                  1    wreg      void 
   623 ;; Registers used:
   624 ;;		wreg, status,2, status,0, cstack
   625 ;; Tracked objects:
   626 ;;		On entry : 0/0
   627 ;;		On exit  : 0/0
   628 ;;		Unchanged: 0/0
   629 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   630 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   631 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   632 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   633 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   634 ;;Total ram usage:        1 bytes
   635 ;; Hardware stack levels used: 1
   636 ;; Hardware stack levels required when called: 2
   637 ;; This function calls:
   638 ;;		_ENVIA_LCD_CMD
   639 ;;		_ENVIA_NIBBLE
   640 ;; This function is called by:
   641 ;;		_lcd_init
   642 ;; This function uses a non-reentrant model
   643 ;;
   644                           
   645                           	psect	text2
   646   003058                     __ptext2:
   647                           	callstack 0
   648   003058                     _LCD_CONFIG:
   649                           	callstack 123
   650   003058                     
   651                           ;LCD.c: 74:  LATDbits.LATD0 = 0;
   652   003058  90C1               	bcf	193,0,c	;volatile
   653                           
   654                           ;LCD.c: 75:  LATDbits.LATD1 = 0;
   655   00305A  92C1               	bcf	193,1,c	;volatile
   656   00305C                     
   657                           ;LCD.c: 76:  ENVIA_NIBBLE(0x30);
   658   00305C  0E30               	movlw	48
   659   00305E  EC15  F019         	call	_ENVIA_NIBBLE
   660   003062                     
   661                           ;LCD.c: 77:         _delay(24000);
   662   003062  0E20               	movlw	32
   663   003064  6E04               	movwf	??_LCD_CONFIG^(0+1280),c
   664   003066  0E2A               	movlw	42
   665   003068                     u1437:
   666   003068  2EE8               	decfsz	wreg,f,c
   667   00306A  D7FE               	bra	u1437
   668   00306C  2E04               	decfsz	??_LCD_CONFIG^(0+1280),f,c
   669   00306E  D7FC               	bra	u1437
   670   003070                     
   671                           ;LCD.c: 78:         _delay(24000);
   672   003070  0E20               	movlw	32
   673   003072  6E04               	movwf	??_LCD_CONFIG^(0+1280),c
   674   003074  0E2A               	movlw	42
   675   003076                     u1447:
   676   003076  2EE8               	decfsz	wreg,f,c
   677   003078  D7FE               	bra	u1447
   678   00307A  2E04               	decfsz	??_LCD_CONFIG^(0+1280),f,c
   679   00307C  D7FC               	bra	u1447
   680                           
   681                           ;LCD.c: 81:  ENVIA_NIBBLE(0x30);
   682   00307E  0E30               	movlw	48
   683   003080  EC15  F019         	call	_ENVIA_NIBBLE
   684   003084                     
   685                           ;LCD.c: 83:  _delay(1200);
   686   003084  0EF0               	movlw	240
   687   003086                     u1457:
   688   003086  D000               	nop2	
   689   003088  2EE8               	decfsz	wreg,f,c
   690   00308A  D7FD               	bra	u1457
   691   00308C                     
   692                           ;LCD.c: 84:         ENVIA_NIBBLE(0x30);
   693   00308C  0E30               	movlw	48
   694   00308E  EC15  F019         	call	_ENVIA_NIBBLE
   695   003092                     
   696                           ;LCD.c: 85:  ENVIA_NIBBLE(0x20);
   697   003092  0E20               	movlw	32
   698   003094  EC15  F019         	call	_ENVIA_NIBBLE
   699   003098                     
   700                           ;LCD.c: 86:  ENVIA_LCD_CMD(0x01);
   701   003098  0E01               	movlw	1
   702   00309A  ECAF  F018         	call	_ENVIA_LCD_CMD
   703   00309E                     
   704                           ;LCD.c: 87:  ENVIA_LCD_CMD(0x28);
   705   00309E  0E28               	movlw	40
   706   0030A0  ECAF  F018         	call	_ENVIA_LCD_CMD
   707   0030A4                     
   708                           ;LCD.c: 88:  ENVIA_LCD_CMD(0x0F);
   709   0030A4  0E0F               	movlw	15
   710   0030A6  ECAF  F018         	call	_ENVIA_LCD_CMD
   711   0030AA                     
   712                           ;LCD.c: 89:  ENVIA_LCD_CMD(0x06);
   713   0030AA  0E06               	movlw	6
   714   0030AC  ECAF  F018         	call	_ENVIA_LCD_CMD
   715   0030B0                     
   716                           ;LCD.c: 90:  ENVIA_LCD_CMD(0x01);
   717   0030B0  0E01               	movlw	1
   718   0030B2  ECAF  F018         	call	_ENVIA_LCD_CMD
   719   0030B6  0012               	return		;funcret
   720   0030B8                     __end_of_LCD_CONFIG:
   721                           	callstack 0
   722                           
   723 ;; *************** function _CURSOR_ONOFF *****************
   724 ;; Defined at:
   725 ;;		line 35 in file "LCD.c"
   726 ;; Parameters:    Size  Location     Type
   727 ;;  estado          1    wreg     unsigned char 
   728 ;; Auto vars:     Size  Location     Type
   729 ;;  estado          1    3[COMRAM] unsigned char 
   730 ;; Return value:  Size  Location     Type
   731 ;;                  1    wreg      void 
   732 ;; Registers used:
   733 ;;		wreg, status,2, status,0, cstack
   734 ;; Tracked objects:
   735 ;;		On entry : 0/0
   736 ;;		On exit  : 0/0
   737 ;;		Unchanged: 0/0
   738 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   739 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   740 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   741 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   742 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   743 ;;Total ram usage:        1 bytes
   744 ;; Hardware stack levels used: 1
   745 ;; Hardware stack levels required when called: 2
   746 ;; This function calls:
   747 ;;		_ENVIA_LCD_CMD
   748 ;; This function is called by:
   749 ;;		_lcd_init
   750 ;; This function uses a non-reentrant model
   751 ;;
   752                           
   753                           	psect	text3
   754   0031FA                     __ptext3:
   755                           	callstack 0
   756   0031FA                     _CURSOR_ONOFF:
   757                           	callstack 123
   758                           
   759                           ;incstack = 0
   760                           ;CURSOR_ONOFF@estado stored from wreg
   761   0031FA  6E04               	movwf	CURSOR_ONOFF@estado^(0+1280),c
   762   0031FC                     
   763                           ;LCD.c: 35: void CURSOR_ONOFF(unsigned char estado);LCD.c: 36: {;LCD.c: 37:  if(estado =
      +                          = 0) ENVIA_LCD_CMD(0x0E);
   764   0031FC  5004               	movf	CURSOR_ONOFF@estado^(0+1280),w,c
   765   0031FE  A4D8               	btfss	status,2,c
   766   003200  EF04  F019         	goto	u21
   767   003204  EF06  F019         	goto	u20
   768   003208                     u21:
   769   003208  EF09  F019         	goto	l902
   770   00320C                     u20:
   771   00320C  0E0E               	movlw	14
   772   00320E  ECAF  F018         	call	_ENVIA_LCD_CMD
   773   003212                     l902:
   774                           
   775                           ;LCD.c: 38:  if(estado == 1) ENVIA_LCD_CMD(0x0C);
   776   003212  0404               	decf	CURSOR_ONOFF@estado^(0+1280),w,c
   777   003214  A4D8               	btfss	status,2,c
   778   003216  EF0F  F019         	goto	u31
   779   00321A  EF11  F019         	goto	u30
   780   00321E                     u31:
   781   00321E  EF14  F019         	goto	l42
   782   003222                     u30:
   783   003222  0E0C               	movlw	12
   784   003224  ECAF  F018         	call	_ENVIA_LCD_CMD
   785   003228                     l42:
   786   003228  0012               	return		;funcret
   787   00322A                     __end_of_CURSOR_ONOFF:
   788                           	callstack 0
   789                           
   790 ;; *************** function _CURSOR_HOME *****************
   791 ;; Defined at:
   792 ;;		line 30 in file "LCD.c"
   793 ;; Parameters:    Size  Location     Type
   794 ;;		None
   795 ;; Auto vars:     Size  Location     Type
   796 ;;		None
   797 ;; Return value:  Size  Location     Type
   798 ;;                  1    wreg      void 
   799 ;; Registers used:
   800 ;;		wreg, status,2, status,0, cstack
   801 ;; Tracked objects:
   802 ;;		On entry : 0/0
   803 ;;		On exit  : 0/0
   804 ;;		Unchanged: 0/0
   805 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   806 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   807 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   808 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   809 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   810 ;;Total ram usage:        0 bytes
   811 ;; Hardware stack levels used: 1
   812 ;; Hardware stack levels required when called: 2
   813 ;; This function calls:
   814 ;;		_ENVIA_LCD_CMD
   815 ;; This function is called by:
   816 ;;		_lcd_init
   817 ;; This function uses a non-reentrant model
   818 ;;
   819                           
   820                           	psect	text4
   821   003260                     __ptext4:
   822                           	callstack 0
   823   003260                     _CURSOR_HOME:
   824                           	callstack 123
   825   003260                     
   826                           ;LCD.c: 32:  ENVIA_LCD_CMD(0x02);
   827   003260  0E02               	movlw	2
   828   003262  ECAF  F018         	call	_ENVIA_LCD_CMD
   829   003266  0012               	return		;funcret
   830   003268                     __end_of_CURSOR_HOME:
   831                           	callstack 0
   832                           
   833 ;; *************** function _BORRAR_LCD *****************
   834 ;; Defined at:
   835 ;;		line 67 in file "LCD.c"
   836 ;; Parameters:    Size  Location     Type
   837 ;;		None
   838 ;; Auto vars:     Size  Location     Type
   839 ;;		None
   840 ;; Return value:  Size  Location     Type
   841 ;;                  1    wreg      void 
   842 ;; Registers used:
   843 ;;		wreg, status,2, status,0, cstack
   844 ;; Tracked objects:
   845 ;;		On entry : 0/0
   846 ;;		On exit  : 0/0
   847 ;;		Unchanged: 0/0
   848 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   849 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   850 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   851 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   852 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   853 ;;Total ram usage:        0 bytes
   854 ;; Hardware stack levels used: 1
   855 ;; Hardware stack levels required when called: 2
   856 ;; This function calls:
   857 ;;		_ENVIA_LCD_CMD
   858 ;; This function is called by:
   859 ;;		_lcd_init
   860 ;; This function uses a non-reentrant model
   861 ;;
   862                           
   863                           	psect	text5
   864   003268                     __ptext5:
   865                           	callstack 0
   866   003268                     _BORRAR_LCD:
   867                           	callstack 123
   868   003268                     
   869                           ;LCD.c: 69:  ENVIA_LCD_CMD(0x01);
   870   003268  0E01               	movlw	1
   871   00326A  ECAF  F018         	call	_ENVIA_LCD_CMD
   872   00326E  0012               	return		;funcret
   873   003270                     __end_of_BORRAR_LCD:
   874                           	callstack 0
   875                           
   876 ;; *************** function _convierte *****************
   877 ;; Defined at:
   878 ;;		line 39 in file "maincode03.c"
   879 ;; Parameters:    Size  Location     Type
   880 ;;  valor           2   26[COMRAM] unsigned int 
   881 ;; Auto vars:     Size  Location     Type
   882 ;;		None
   883 ;; Return value:  Size  Location     Type
   884 ;;                  1    wreg      void 
   885 ;; Registers used:
   886 ;;		wreg, status,2, status,0, cstack
   887 ;; Tracked objects:
   888 ;;		On entry : 0/0
   889 ;;		On exit  : 0/0
   890 ;;		Unchanged: 0/0
   891 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   892 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   893 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   894 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   895 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   896 ;;Total ram usage:        2 bytes
   897 ;; Hardware stack levels used: 1
   898 ;; Hardware stack levels required when called: 1
   899 ;; This function calls:
   900 ;;		___lwdiv
   901 ;;		___lwmod
   902 ;;		___xxtofl
   903 ;; This function is called by:
   904 ;;		_main
   905 ;; This function uses a non-reentrant model
   906 ;;
   907                           
   908                           	psect	text6
   909   002E0C                     __ptext6:
   910                           	callstack 0
   911   002E0C                     _convierte:
   912                           	callstack 125
   913   002E0C                     
   914                           ;maincode03.c: 40:     millar = valor / 1000;
   915   002E0C  0E03               	movlw	3
   916   002E0E  6E09               	movwf	(___lwdiv@divisor+1)^(0+1280),c
   917   002E10  0EE8               	movlw	232
   918   002E12  6E08               	movwf	___lwdiv@divisor^(0+1280),c
   919   002E14  C51B  F506         	movff	convierte@valor,___lwdiv@dividend
   920   002E18  C51C  F507         	movff	convierte@valor+1,___lwdiv@dividend+1
   921   002E1C  EC87  F017         	call	___lwdiv	;wreg free
   922   002E20  C506  F50D         	movff	?___lwdiv,___xxtofl@val
   923   002E24  C507  F50E         	movff	?___lwdiv+1,___xxtofl@val+1
   924   002E28  6A0F               	clrf	(___xxtofl@val+2)^(0+1280),c
   925   002E2A  6A10               	clrf	(___xxtofl@val+3)^(0+1280),c
   926   002E2C  0E00               	movlw	0
   927   002E2E  ECEC  F014         	call	___xxtofl
   928   002E32  C50D  F52B         	movff	?___xxtofl,_millar
   929   002E36  C50E  F52C         	movff	?___xxtofl+1,_millar+1
   930   002E3A  C50F  F52D         	movff	?___xxtofl+2,_millar+2
   931   002E3E  C510  F52E         	movff	?___xxtofl+3,_millar+3
   932                           
   933                           ;maincode03.c: 41:     centena = (valor % 1000) / 100;
   934   002E42  0E00               	movlw	0
   935   002E44  6E09               	movwf	(___lwdiv@divisor+1)^(0+1280),c
   936   002E46  0E64               	movlw	100
   937   002E48  6E08               	movwf	___lwdiv@divisor^(0+1280),c
   938   002E4A  0E03               	movlw	3
   939   002E4C  6E04               	movwf	(___lwmod@divisor+1)^(0+1280),c
   940   002E4E  0EE8               	movlw	232
   941   002E50  6E03               	movwf	___lwmod@divisor^(0+1280),c
   942   002E52  C51B  F501         	movff	convierte@valor,___lwmod@dividend
   943   002E56  C51C  F502         	movff	convierte@valor+1,___lwmod@dividend+1
   944   002E5A  ECFA  F017         	call	___lwmod	;wreg free
   945   002E5E  C501  F506         	movff	?___lwmod,___lwdiv@dividend
   946   002E62  C502  F507         	movff	?___lwmod+1,___lwdiv@dividend+1
   947   002E66  EC87  F017         	call	___lwdiv	;wreg free
   948   002E6A  C506  F50D         	movff	?___lwdiv,___xxtofl@val
   949   002E6E  C507  F50E         	movff	?___lwdiv+1,___xxtofl@val+1
   950   002E72  6A0F               	clrf	(___xxtofl@val+2)^(0+1280),c
   951   002E74  6A10               	clrf	(___xxtofl@val+3)^(0+1280),c
   952   002E76  0E00               	movlw	0
   953   002E78  ECEC  F014         	call	___xxtofl
   954   002E7C  C50D  F527         	movff	?___xxtofl,_centena
   955   002E80  C50E  F528         	movff	?___xxtofl+1,_centena+1
   956   002E84  C50F  F529         	movff	?___xxtofl+2,_centena+2
   957   002E88  C510  F52A         	movff	?___xxtofl+3,_centena+3
   958                           
   959                           ;maincode03.c: 42:     decena = (valor % 100) / 10;
   960   002E8C  0E00               	movlw	0
   961   002E8E  6E09               	movwf	(___lwdiv@divisor+1)^(0+1280),c
   962   002E90  0E0A               	movlw	10
   963   002E92  6E08               	movwf	___lwdiv@divisor^(0+1280),c
   964   002E94  0E00               	movlw	0
   965   002E96  6E04               	movwf	(___lwmod@divisor+1)^(0+1280),c
   966   002E98  0E64               	movlw	100
   967   002E9A  6E03               	movwf	___lwmod@divisor^(0+1280),c
   968   002E9C  C51B  F501         	movff	convierte@valor,___lwmod@dividend
   969   002EA0  C51C  F502         	movff	convierte@valor+1,___lwmod@dividend+1
   970   002EA4  ECFA  F017         	call	___lwmod	;wreg free
   971   002EA8  C501  F506         	movff	?___lwmod,___lwdiv@dividend
   972   002EAC  C502  F507         	movff	?___lwmod+1,___lwdiv@dividend+1
   973   002EB0  EC87  F017         	call	___lwdiv	;wreg free
   974   002EB4  C506  F50D         	movff	?___lwdiv,___xxtofl@val
   975   002EB8  C507  F50E         	movff	?___lwdiv+1,___xxtofl@val+1
   976   002EBC  6A0F               	clrf	(___xxtofl@val+2)^(0+1280),c
   977   002EBE  6A10               	clrf	(___xxtofl@val+3)^(0+1280),c
   978   002EC0  0E00               	movlw	0
   979   002EC2  ECEC  F014         	call	___xxtofl
   980   002EC6  C50D  F523         	movff	?___xxtofl,_decena
   981   002ECA  C50E  F524         	movff	?___xxtofl+1,_decena+1
   982   002ECE  C50F  F525         	movff	?___xxtofl+2,_decena+2
   983   002ED2  C510  F526         	movff	?___xxtofl+3,_decena+3
   984                           
   985                           ;maincode03.c: 43:     unidad = valor % 10;
   986   002ED6  0E00               	movlw	0
   987   002ED8  6E04               	movwf	(___lwmod@divisor+1)^(0+1280),c
   988   002EDA  0E0A               	movlw	10
   989   002EDC  6E03               	movwf	___lwmod@divisor^(0+1280),c
   990   002EDE  C51B  F501         	movff	convierte@valor,___lwmod@dividend
   991   002EE2  C51C  F502         	movff	convierte@valor+1,___lwmod@dividend+1
   992   002EE6  ECFA  F017         	call	___lwmod	;wreg free
   993   002EEA  C501  F50D         	movff	?___lwmod,___xxtofl@val
   994   002EEE  C502  F50E         	movff	?___lwmod+1,___xxtofl@val+1
   995   002EF2  6A0F               	clrf	(___xxtofl@val+2)^(0+1280),c
   996   002EF4  6A10               	clrf	(___xxtofl@val+3)^(0+1280),c
   997   002EF6  0E00               	movlw	0
   998   002EF8  ECEC  F014         	call	___xxtofl
   999   002EFC  C50D  F51F         	movff	?___xxtofl,_unidad
  1000   002F00  C50E  F520         	movff	?___xxtofl+1,_unidad+1
  1001   002F04  C50F  F521         	movff	?___xxtofl+2,_unidad+2
  1002   002F08  C510  F522         	movff	?___xxtofl+3,_unidad+3
  1003   002F0C  0012               	return		;funcret
  1004   002F0E                     __end_of_convierte:
  1005                           	callstack 0
  1006                           
  1007 ;; *************** function ___xxtofl *****************
  1008 ;; Defined at:
  1009 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\xxtofl.c"
  1010 ;; Parameters:    Size  Location     Type
  1011 ;;  sign            1    wreg     unsigned char 
  1012 ;;  val             4   12[COMRAM] long 
  1013 ;; Auto vars:     Size  Location     Type
  1014 ;;  sign            1   20[COMRAM] unsigned char 
  1015 ;;  arg             4   22[COMRAM] unsigned long 
  1016 ;;  exp             1   21[COMRAM] unsigned char 
  1017 ;; Return value:  Size  Location     Type
  1018 ;;                  4   12[COMRAM] unsigned char 
  1019 ;; Registers used:
  1020 ;;		wreg, status,2, status,0
  1021 ;; Tracked objects:
  1022 ;;		On entry : 0/0
  1023 ;;		On exit  : 0/0
  1024 ;;		Unchanged: 0/0
  1025 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1026 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1027 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1028 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1029 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1030 ;;Total ram usage:       14 bytes
  1031 ;; Hardware stack levels used: 1
  1032 ;; This function calls:
  1033 ;;		Nothing
  1034 ;; This function is called by:
  1035 ;;		_convierte
  1036 ;; This function uses a non-reentrant model
  1037 ;;
  1038                           
  1039                           	psect	text7
  1040   0029D8                     __ptext7:
  1041                           	callstack 0
  1042   0029D8                     ___xxtofl:
  1043                           	callstack 125
  1044                           
  1045                           ;incstack = 0
  1046                           ;___xxtofl@sign stored from wreg
  1047   0029D8  6E15               	movwf	___xxtofl@sign^(0+1280),c
  1048   0029DA  5015               	movf	___xxtofl@sign^(0+1280),w,c
  1049   0029DC  B4D8               	btfsc	status,2,c
  1050   0029DE  EFF3  F014         	goto	u811
  1051   0029E2  EFF5  F014         	goto	u810
  1052   0029E6                     u811:
  1053   0029E6  EF17  F015         	goto	l810
  1054   0029EA                     u810:
  1055   0029EA  BE10               	btfsc	(___xxtofl@val+3)^(0+1280),7,c
  1056   0029EC  EFFC  F014         	goto	u820
  1057   0029F0  EFFA  F014         	goto	u821
  1058   0029F4                     u821:
  1059   0029F4  EF17  F015         	goto	l810
  1060   0029F8                     u820:
  1061   0029F8  C50D  F511         	movff	___xxtofl@val,??___xxtofl
  1062   0029FC  C50E  F512         	movff	___xxtofl@val+1,??___xxtofl+1
  1063   002A00  C50F  F513         	movff	___xxtofl@val+2,??___xxtofl+2
  1064   002A04  C510  F514         	movff	___xxtofl@val+3,??___xxtofl+3
  1065   002A08  1E11               	comf	??___xxtofl^(0+1280),f,c
  1066   002A0A  1E12               	comf	(??___xxtofl+1)^(0+1280),f,c
  1067   002A0C  1E13               	comf	(??___xxtofl+2)^(0+1280),f,c
  1068   002A0E  1E14               	comf	(??___xxtofl+3)^(0+1280),f,c
  1069   002A10  2A11               	incf	??___xxtofl^(0+1280),f,c
  1070   002A12  0E00               	movlw	0
  1071   002A14  2212               	addwfc	(??___xxtofl+1)^(0+1280),f,c
  1072   002A16  2213               	addwfc	(??___xxtofl+2)^(0+1280),f,c
  1073   002A18  2214               	addwfc	(??___xxtofl+3)^(0+1280),f,c
  1074   002A1A  C511  F517         	movff	??___xxtofl,___xxtofl@arg
  1075   002A1E  C512  F518         	movff	??___xxtofl+1,___xxtofl@arg+1
  1076   002A22  C513  F519         	movff	??___xxtofl+2,___xxtofl@arg+2
  1077   002A26  C514  F51A         	movff	??___xxtofl+3,___xxtofl@arg+3
  1078   002A2A  EF1F  F015         	goto	l1438
  1079   002A2E                     l810:
  1080   002A2E  C50D  F517         	movff	___xxtofl@val,___xxtofl@arg
  1081   002A32  C50E  F518         	movff	___xxtofl@val+1,___xxtofl@arg+1
  1082   002A36  C50F  F519         	movff	___xxtofl@val+2,___xxtofl@arg+2
  1083   002A3A  C510  F51A         	movff	___xxtofl@val+3,___xxtofl@arg+3
  1084   002A3E                     l1438:
  1085   002A3E  500D               	movf	___xxtofl@val^(0+1280),w,c
  1086   002A40  100E               	iorwf	(___xxtofl@val+1)^(0+1280),w,c
  1087   002A42  100F               	iorwf	(___xxtofl@val+2)^(0+1280),w,c
  1088   002A44  1010               	iorwf	(___xxtofl@val+3)^(0+1280),w,c
  1089   002A46  A4D8               	btfss	status,2,c
  1090   002A48  EF28  F015         	goto	u831
  1091   002A4C  EF2A  F015         	goto	u830
  1092   002A50                     u831:
  1093   002A50  EF34  F015         	goto	l1444
  1094   002A54                     u830:
  1095   002A54  0E00               	movlw	0
  1096   002A56  6E0D               	movwf	?___xxtofl^(0+1280),c
  1097   002A58  0E00               	movlw	0
  1098   002A5A  6E0E               	movwf	(?___xxtofl+1)^(0+1280),c
  1099   002A5C  0E00               	movlw	0
  1100   002A5E  6E0F               	movwf	(?___xxtofl+2)^(0+1280),c
  1101   002A60  0E00               	movlw	0
  1102   002A62  6E10               	movwf	(?___xxtofl+3)^(0+1280),c
  1103   002A64  EFC5  F015         	goto	l813
  1104   002A68                     l1444:
  1105   002A68  0E96               	movlw	150
  1106   002A6A  6E16               	movwf	___xxtofl@exp^(0+1280),c
  1107   002A6C  EF3E  F015         	goto	l1448
  1108   002A70                     l1446:
  1109   002A70  2A16               	incf	___xxtofl@exp^(0+1280),f,c
  1110   002A72  90D8               	bcf	status,0,c
  1111   002A74  321A               	rrcf	(___xxtofl@arg+3)^(0+1280),f,c
  1112   002A76  3219               	rrcf	(___xxtofl@arg+2)^(0+1280),f,c
  1113   002A78  3218               	rrcf	(___xxtofl@arg+1)^(0+1280),f,c
  1114   002A7A  3217               	rrcf	___xxtofl@arg^(0+1280),f,c
  1115   002A7C                     l1448:
  1116   002A7C  0E00               	movlw	0
  1117   002A7E  1417               	andwf	___xxtofl@arg^(0+1280),w,c
  1118   002A80  6E11               	movwf	??___xxtofl^(0+1280),c
  1119   002A82  0E00               	movlw	0
  1120   002A84  1418               	andwf	(___xxtofl@arg+1)^(0+1280),w,c
  1121   002A86  6E12               	movwf	(??___xxtofl+1)^(0+1280),c
  1122   002A88  0E00               	movlw	0
  1123   002A8A  1419               	andwf	(___xxtofl@arg+2)^(0+1280),w,c
  1124   002A8C  6E13               	movwf	(??___xxtofl+2)^(0+1280),c
  1125   002A8E  0EFE               	movlw	254
  1126   002A90  141A               	andwf	(___xxtofl@arg+3)^(0+1280),w,c
  1127   002A92  6E14               	movwf	(??___xxtofl+3)^(0+1280),c
  1128   002A94  5011               	movf	??___xxtofl^(0+1280),w,c
  1129   002A96  1012               	iorwf	(??___xxtofl+1)^(0+1280),w,c
  1130   002A98  1013               	iorwf	(??___xxtofl+2)^(0+1280),w,c
  1131   002A9A  1014               	iorwf	(??___xxtofl+3)^(0+1280),w,c
  1132   002A9C  A4D8               	btfss	status,2,c
  1133   002A9E  EF53  F015         	goto	u841
  1134   002AA2  EF55  F015         	goto	u840
  1135   002AA6                     u841:
  1136   002AA6  EF38  F015         	goto	l1446
  1137   002AAA                     u840:
  1138   002AAA  EF63  F015         	goto	l817
  1139   002AAE                     l1450:
  1140   002AAE  2A16               	incf	___xxtofl@exp^(0+1280),f,c
  1141   002AB0  0E01               	movlw	1
  1142   002AB2  2617               	addwf	___xxtofl@arg^(0+1280),f,c
  1143   002AB4  0E00               	movlw	0
  1144   002AB6  2218               	addwfc	(___xxtofl@arg+1)^(0+1280),f,c
  1145   002AB8  2219               	addwfc	(___xxtofl@arg+2)^(0+1280),f,c
  1146   002ABA  221A               	addwfc	(___xxtofl@arg+3)^(0+1280),f,c
  1147   002ABC  90D8               	bcf	status,0,c
  1148   002ABE  321A               	rrcf	(___xxtofl@arg+3)^(0+1280),f,c
  1149   002AC0  3219               	rrcf	(___xxtofl@arg+2)^(0+1280),f,c
  1150   002AC2  3218               	rrcf	(___xxtofl@arg+1)^(0+1280),f,c
  1151   002AC4  3217               	rrcf	___xxtofl@arg^(0+1280),f,c
  1152   002AC6                     l817:
  1153   002AC6  0E00               	movlw	0
  1154   002AC8  1417               	andwf	___xxtofl@arg^(0+1280),w,c
  1155   002ACA  6E11               	movwf	??___xxtofl^(0+1280),c
  1156   002ACC  0E00               	movlw	0
  1157   002ACE  1418               	andwf	(___xxtofl@arg+1)^(0+1280),w,c
  1158   002AD0  6E12               	movwf	(??___xxtofl+1)^(0+1280),c
  1159   002AD2  0E00               	movlw	0
  1160   002AD4  1419               	andwf	(___xxtofl@arg+2)^(0+1280),w,c
  1161   002AD6  6E13               	movwf	(??___xxtofl+2)^(0+1280),c
  1162   002AD8  0EFF               	movlw	255
  1163   002ADA  141A               	andwf	(___xxtofl@arg+3)^(0+1280),w,c
  1164   002ADC  6E14               	movwf	(??___xxtofl+3)^(0+1280),c
  1165   002ADE  5011               	movf	??___xxtofl^(0+1280),w,c
  1166   002AE0  1012               	iorwf	(??___xxtofl+1)^(0+1280),w,c
  1167   002AE2  1013               	iorwf	(??___xxtofl+2)^(0+1280),w,c
  1168   002AE4  1014               	iorwf	(??___xxtofl+3)^(0+1280),w,c
  1169   002AE6  A4D8               	btfss	status,2,c
  1170   002AE8  EF78  F015         	goto	u851
  1171   002AEC  EF7A  F015         	goto	u850
  1172   002AF0                     u851:
  1173   002AF0  EF57  F015         	goto	l1450
  1174   002AF4                     u850:
  1175   002AF4  EF82  F015         	goto	l1458
  1176   002AF8                     l1456:
  1177   002AF8  0616               	decf	___xxtofl@exp^(0+1280),f,c
  1178   002AFA  90D8               	bcf	status,0,c
  1179   002AFC  3617               	rlcf	___xxtofl@arg^(0+1280),f,c
  1180   002AFE  3618               	rlcf	(___xxtofl@arg+1)^(0+1280),f,c
  1181   002B00  3619               	rlcf	(___xxtofl@arg+2)^(0+1280),f,c
  1182   002B02  361A               	rlcf	(___xxtofl@arg+3)^(0+1280),f,c
  1183   002B04                     l1458:
  1184   002B04  BE19               	btfsc	(___xxtofl@arg+2)^(0+1280),7,c
  1185   002B06  EF87  F015         	goto	u861
  1186   002B0A  EF89  F015         	goto	u860
  1187   002B0E                     u861:
  1188   002B0E  EF91  F015         	goto	l824
  1189   002B12                     u860:
  1190   002B12  0E02               	movlw	2
  1191   002B14  6016               	cpfslt	___xxtofl@exp^(0+1280),c
  1192   002B16  EF8F  F015         	goto	u871
  1193   002B1A  EF91  F015         	goto	u870
  1194   002B1E                     u871:
  1195   002B1E  EF7C  F015         	goto	l1456
  1196   002B22                     u870:
  1197   002B22                     l824:
  1198   002B22  B016               	btfsc	___xxtofl@exp^(0+1280),0,c
  1199   002B24  EF96  F015         	goto	u881
  1200   002B28  EF98  F015         	goto	u880
  1201   002B2C                     u881:
  1202   002B2C  EF99  F015         	goto	l1464
  1203   002B30                     u880:
  1204   002B30  9E19               	bcf	(___xxtofl@arg+2)^(0+1280),7,c
  1205   002B32                     l1464:
  1206   002B32  90D8               	bcf	status,0,c
  1207   002B34  3216               	rrcf	___xxtofl@exp^(0+1280),f,c
  1208   002B36  C516  F511         	movff	___xxtofl@exp,??___xxtofl
  1209   002B3A  6A12               	clrf	(??___xxtofl+1)^(0+1280),c
  1210   002B3C  6A13               	clrf	(??___xxtofl+2)^(0+1280),c
  1211   002B3E  6A14               	clrf	(??___xxtofl+3)^(0+1280),c
  1212   002B40  C511  F514         	movff	??___xxtofl,??___xxtofl+3
  1213   002B44  6A13               	clrf	(??___xxtofl+2)^(0+1280),c
  1214   002B46  6A12               	clrf	(??___xxtofl+1)^(0+1280),c
  1215   002B48  6A11               	clrf	??___xxtofl^(0+1280),c
  1216   002B4A  5011               	movf	??___xxtofl^(0+1280),w,c
  1217   002B4C  1217               	iorwf	___xxtofl@arg^(0+1280),f,c
  1218   002B4E  5012               	movf	(??___xxtofl+1)^(0+1280),w,c
  1219   002B50  1218               	iorwf	(___xxtofl@arg+1)^(0+1280),f,c
  1220   002B52  5013               	movf	(??___xxtofl+2)^(0+1280),w,c
  1221   002B54  1219               	iorwf	(___xxtofl@arg+2)^(0+1280),f,c
  1222   002B56  5014               	movf	(??___xxtofl+3)^(0+1280),w,c
  1223   002B58  121A               	iorwf	(___xxtofl@arg+3)^(0+1280),f,c
  1224   002B5A  5015               	movf	___xxtofl@sign^(0+1280),w,c
  1225   002B5C  B4D8               	btfsc	status,2,c
  1226   002B5E  EFB3  F015         	goto	u891
  1227   002B62  EFB5  F015         	goto	u890
  1228   002B66                     u891:
  1229   002B66  EFBD  F015         	goto	l1474
  1230   002B6A                     u890:
  1231   002B6A  BE10               	btfsc	(___xxtofl@val+3)^(0+1280),7,c
  1232   002B6C  EFBC  F015         	goto	u900
  1233   002B70  EFBA  F015         	goto	u901
  1234   002B74                     u901:
  1235   002B74  EFBD  F015         	goto	l1474
  1236   002B78                     u900:
  1237   002B78  8E1A               	bsf	(___xxtofl@arg+3)^(0+1280),7,c
  1238   002B7A                     l1474:
  1239   002B7A  C517  F50D         	movff	___xxtofl@arg,?___xxtofl
  1240   002B7E  C518  F50E         	movff	___xxtofl@arg+1,?___xxtofl+1
  1241   002B82  C519  F50F         	movff	___xxtofl@arg+2,?___xxtofl+2
  1242   002B86  C51A  F510         	movff	___xxtofl@arg+3,?___xxtofl+3
  1243   002B8A                     l813:
  1244   002B8A  0012               	return		;funcret
  1245   002B8C                     __end_of___xxtofl:
  1246                           	callstack 0
  1247                           
  1248 ;; *************** function ___lwmod *****************
  1249 ;; Defined at:
  1250 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\lwmod.c"
  1251 ;; Parameters:    Size  Location     Type
  1252 ;;  dividend        2    0[COMRAM] unsigned int 
  1253 ;;  divisor         2    2[COMRAM] unsigned int 
  1254 ;; Auto vars:     Size  Location     Type
  1255 ;;  counter         1    4[COMRAM] unsigned char 
  1256 ;; Return value:  Size  Location     Type
  1257 ;;                  2    0[COMRAM] unsigned int 
  1258 ;; Registers used:
  1259 ;;		wreg, status,2, status,0
  1260 ;; Tracked objects:
  1261 ;;		On entry : 0/0
  1262 ;;		On exit  : 0/0
  1263 ;;		Unchanged: 0/0
  1264 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1265 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1266 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1267 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1268 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1269 ;;Total ram usage:        5 bytes
  1270 ;; Hardware stack levels used: 1
  1271 ;; This function calls:
  1272 ;;		Nothing
  1273 ;; This function is called by:
  1274 ;;		_convierte
  1275 ;; This function uses a non-reentrant model
  1276 ;;
  1277                           
  1278                           	psect	text8
  1279   002FF4                     __ptext8:
  1280                           	callstack 0
  1281   002FF4                     ___lwmod:
  1282                           	callstack 125
  1283   002FF4  5003               	movf	___lwmod@divisor^(0+1280),w,c
  1284   002FF6  1004               	iorwf	(___lwmod@divisor+1)^(0+1280),w,c
  1285   002FF8  B4D8               	btfsc	status,2,c
  1286   002FFA  EF01  F018         	goto	u781
  1287   002FFE  EF03  F018         	goto	u780
  1288   003002                     u781:
  1289   003002  EF27  F018         	goto	l656
  1290   003006                     u780:
  1291   003006  0E01               	movlw	1
  1292   003008  6E05               	movwf	___lwmod@counter^(0+1280),c
  1293   00300A  EF0B  F018         	goto	l1422
  1294   00300E                     l1420:
  1295   00300E  90D8               	bcf	status,0,c
  1296   003010  3603               	rlcf	___lwmod@divisor^(0+1280),f,c
  1297   003012  3604               	rlcf	(___lwmod@divisor+1)^(0+1280),f,c
  1298   003014  2A05               	incf	___lwmod@counter^(0+1280),f,c
  1299   003016                     l1422:
  1300   003016  AE04               	btfss	(___lwmod@divisor+1)^(0+1280),7,c
  1301   003018  EF10  F018         	goto	u791
  1302   00301C  EF12  F018         	goto	u790
  1303   003020                     u791:
  1304   003020  EF07  F018         	goto	l1420
  1305   003024                     u790:
  1306   003024                     l1424:
  1307   003024  5003               	movf	___lwmod@divisor^(0+1280),w,c
  1308   003026  5C01               	subwf	___lwmod@dividend^(0+1280),w,c
  1309   003028  5004               	movf	(___lwmod@divisor+1)^(0+1280),w,c
  1310   00302A  5802               	subwfb	(___lwmod@dividend+1)^(0+1280),w,c
  1311   00302C  A0D8               	btfss	status,0,c
  1312   00302E  EF1B  F018         	goto	u801
  1313   003032  EF1D  F018         	goto	u800
  1314   003036                     u801:
  1315   003036  EF21  F018         	goto	l1428
  1316   00303A                     u800:
  1317   00303A  5003               	movf	___lwmod@divisor^(0+1280),w,c
  1318   00303C  5E01               	subwf	___lwmod@dividend^(0+1280),f,c
  1319   00303E  5004               	movf	(___lwmod@divisor+1)^(0+1280),w,c
  1320   003040  5A02               	subwfb	(___lwmod@dividend+1)^(0+1280),f,c
  1321   003042                     l1428:
  1322   003042  90D8               	bcf	status,0,c
  1323   003044  3204               	rrcf	(___lwmod@divisor+1)^(0+1280),f,c
  1324   003046  3203               	rrcf	___lwmod@divisor^(0+1280),f,c
  1325   003048  2E05               	decfsz	___lwmod@counter^(0+1280),f,c
  1326   00304A  EF12  F018         	goto	l1424
  1327   00304E                     l656:
  1328   00304E  C501  F501         	movff	___lwmod@dividend,?___lwmod
  1329   003052  C502  F502         	movff	___lwmod@dividend+1,?___lwmod+1
  1330   003056  0012               	return		;funcret
  1331   003058                     __end_of___lwmod:
  1332                           	callstack 0
  1333                           
  1334 ;; *************** function ___lwdiv *****************
  1335 ;; Defined at:
  1336 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\lwdiv.c"
  1337 ;; Parameters:    Size  Location     Type
  1338 ;;  dividend        2    5[COMRAM] unsigned int 
  1339 ;;  divisor         2    7[COMRAM] unsigned int 
  1340 ;; Auto vars:     Size  Location     Type
  1341 ;;  quotient        2    9[COMRAM] unsigned int 
  1342 ;;  counter         1   11[COMRAM] unsigned char 
  1343 ;; Return value:  Size  Location     Type
  1344 ;;                  2    5[COMRAM] unsigned int 
  1345 ;; Registers used:
  1346 ;;		wreg, status,2, status,0
  1347 ;; Tracked objects:
  1348 ;;		On entry : 0/0
  1349 ;;		On exit  : 0/0
  1350 ;;		Unchanged: 0/0
  1351 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1352 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1353 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1354 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1355 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1356 ;;Total ram usage:        7 bytes
  1357 ;; Hardware stack levels used: 1
  1358 ;; This function calls:
  1359 ;;		Nothing
  1360 ;; This function is called by:
  1361 ;;		_convierte
  1362 ;; This function uses a non-reentrant model
  1363 ;;
  1364                           
  1365                           	psect	text9
  1366   002F0E                     __ptext9:
  1367                           	callstack 0
  1368   002F0E                     ___lwdiv:
  1369                           	callstack 125
  1370   002F0E  0E00               	movlw	0
  1371   002F10  6E0B               	movwf	(___lwdiv@quotient+1)^(0+1280),c
  1372   002F12  0E00               	movlw	0
  1373   002F14  6E0A               	movwf	___lwdiv@quotient^(0+1280),c
  1374   002F16  5008               	movf	___lwdiv@divisor^(0+1280),w,c
  1375   002F18  1009               	iorwf	(___lwdiv@divisor+1)^(0+1280),w,c
  1376   002F1A  B4D8               	btfsc	status,2,c
  1377   002F1C  EF92  F017         	goto	u751
  1378   002F20  EF94  F017         	goto	u750
  1379   002F24                     u751:
  1380   002F24  EFBC  F017         	goto	l646
  1381   002F28                     u750:
  1382   002F28  0E01               	movlw	1
  1383   002F2A  6E0C               	movwf	___lwdiv@counter^(0+1280),c
  1384   002F2C  EF9C  F017         	goto	l1402
  1385   002F30                     l1400:
  1386   002F30  90D8               	bcf	status,0,c
  1387   002F32  3608               	rlcf	___lwdiv@divisor^(0+1280),f,c
  1388   002F34  3609               	rlcf	(___lwdiv@divisor+1)^(0+1280),f,c
  1389   002F36  2A0C               	incf	___lwdiv@counter^(0+1280),f,c
  1390   002F38                     l1402:
  1391   002F38  AE09               	btfss	(___lwdiv@divisor+1)^(0+1280),7,c
  1392   002F3A  EFA1  F017         	goto	u761
  1393   002F3E  EFA3  F017         	goto	u760
  1394   002F42                     u761:
  1395   002F42  EF98  F017         	goto	l1400
  1396   002F46                     u760:
  1397   002F46                     l1404:
  1398   002F46  90D8               	bcf	status,0,c
  1399   002F48  360A               	rlcf	___lwdiv@quotient^(0+1280),f,c
  1400   002F4A  360B               	rlcf	(___lwdiv@quotient+1)^(0+1280),f,c
  1401   002F4C  5008               	movf	___lwdiv@divisor^(0+1280),w,c
  1402   002F4E  5C06               	subwf	___lwdiv@dividend^(0+1280),w,c
  1403   002F50  5009               	movf	(___lwdiv@divisor+1)^(0+1280),w,c
  1404   002F52  5807               	subwfb	(___lwdiv@dividend+1)^(0+1280),w,c
  1405   002F54  A0D8               	btfss	status,0,c
  1406   002F56  EFAF  F017         	goto	u771
  1407   002F5A  EFB1  F017         	goto	u770
  1408   002F5E                     u771:
  1409   002F5E  EFB6  F017         	goto	l1412
  1410   002F62                     u770:
  1411   002F62  5008               	movf	___lwdiv@divisor^(0+1280),w,c
  1412   002F64  5E06               	subwf	___lwdiv@dividend^(0+1280),f,c
  1413   002F66  5009               	movf	(___lwdiv@divisor+1)^(0+1280),w,c
  1414   002F68  5A07               	subwfb	(___lwdiv@dividend+1)^(0+1280),f,c
  1415   002F6A  800A               	bsf	___lwdiv@quotient^(0+1280),0,c
  1416   002F6C                     l1412:
  1417   002F6C  90D8               	bcf	status,0,c
  1418   002F6E  3209               	rrcf	(___lwdiv@divisor+1)^(0+1280),f,c
  1419   002F70  3208               	rrcf	___lwdiv@divisor^(0+1280),f,c
  1420   002F72  2E0C               	decfsz	___lwdiv@counter^(0+1280),f,c
  1421   002F74  EFA3  F017         	goto	l1404
  1422   002F78                     l646:
  1423   002F78  C50A  F506         	movff	___lwdiv@quotient,?___lwdiv
  1424   002F7C  C50B  F507         	movff	___lwdiv@quotient+1,?___lwdiv+1
  1425   002F80  0012               	return		;funcret
  1426   002F82                     __end_of___lwdiv:
  1427                           	callstack 0
  1428                           
  1429 ;; *************** function _configuro *****************
  1430 ;; Defined at:
  1431 ;;		line 9 in file "maincode03.c"
  1432 ;; Parameters:    Size  Location     Type
  1433 ;;		None
  1434 ;; Auto vars:     Size  Location     Type
  1435 ;;		None
  1436 ;; Return value:  Size  Location     Type
  1437 ;;                  1    wreg      void 
  1438 ;; Registers used:
  1439 ;;		wreg, status,2
  1440 ;; Tracked objects:
  1441 ;;		On entry : 0/0
  1442 ;;		On exit  : 0/0
  1443 ;;		Unchanged: 0/0
  1444 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1445 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1446 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1447 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1448 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1449 ;;Total ram usage:        0 bytes
  1450 ;; Hardware stack levels used: 1
  1451 ;; This function calls:
  1452 ;;		Nothing
  1453 ;; This function is called by:
  1454 ;;		_main
  1455 ;; This function uses a non-reentrant model
  1456 ;;
  1457                           
  1458                           	psect	text10
  1459   003128                     __ptext10:
  1460                           	callstack 0
  1461   003128                     _configuro:
  1462                           	callstack 126
  1463   003128                     
  1464                           ;maincode03.c: 11:     OSCCON1 = 0x60;
  1465   003128  0E60               	movlw	96
  1466   00312A  0100               	movlb	0	; () banked
  1467   00312C  6FAD               	movwf	173,b	;volatile
  1468                           
  1469                           ;maincode03.c: 12:     OSCFRQ = 0x07;
  1470   00312E  0E07               	movlw	7
  1471   003130  6FB1               	movwf	177,b	;volatile
  1472                           
  1473                           ;maincode03.c: 13:     OSCEN = 0x40;
  1474   003132  0E40               	movlw	64
  1475   003134  6FB3               	movwf	179,b	;volatile
  1476   003136                     
  1477                           ; BSR set to: 0
  1478                           ;maincode03.c: 15:     TRISBbits.TRISB4 = 1;
  1479   003136  88C7               	bsf	199,4,c	;volatile
  1480   003138                     
  1481                           ; BSR set to: 0
  1482                           ;maincode03.c: 16:     ANSELBbits.ANSELB4 = 0;
  1483   003138  0104               	movlb	4	; () banked
  1484   00313A  9908               	bcf	8,4,b	;volatile
  1485   00313C                     
  1486                           ; BSR set to: 4
  1487                           ;maincode03.c: 17:     WPUBbits.WPUB4 = 1;
  1488   00313C  8909               	bsf	9,4,b	;volatile
  1489   00313E                     
  1490                           ; BSR set to: 4
  1491                           ;maincode03.c: 18:     TRISFbits.TRISF3 = 0;
  1492   00313E  96CB               	bcf	203,3,c	;volatile
  1493   003140                     
  1494                           ; BSR set to: 4
  1495                           ;maincode03.c: 19:     ANSELFbits.ANSELF3 = 0;
  1496   003140  9728               	bcf	40,3,b	;volatile
  1497                           
  1498                           ;maincode03.c: 21:     ADCON0bits.FM = 1;
  1499   003142  0103               	movlb	3	; () banked
  1500   003144  51F3               	movf	243,w,b	;volatile
  1501   003146  0BF3               	andlw	-13
  1502   003148  0904               	iorlw	4
  1503   00314A  6FF3               	movwf	243,b	;volatile
  1504   00314C                     
  1505                           ; BSR set to: 3
  1506                           ;maincode03.c: 22:     ADCON0bits.CS = 1;
  1507   00314C  89F3               	bsf	243,4,b	;volatile
  1508                           
  1509                           ;maincode03.c: 23:     ADPCH = 0x00;
  1510   00314E  0E00               	movlw	0
  1511   003150  6FEC               	movwf	236,b	;volatile
  1512   003152                     
  1513                           ; BSR set to: 3
  1514                           ;maincode03.c: 24:     TRISAbits.TRISA0 = 1;
  1515   003152  80C6               	bsf	198,0,c	;volatile
  1516   003154                     
  1517                           ; BSR set to: 3
  1518                           ;maincode03.c: 25:     ANSELAbits.ANSELA0 = 1;
  1519   003154  0104               	movlb	4	; () banked
  1520   003156  8100               	bsf	0,0,b	;volatile
  1521   003158                     
  1522                           ; BSR set to: 4
  1523                           ;maincode03.c: 26:     ADCON0bits.ON = 1;
  1524   003158  0103               	movlb	3	; () banked
  1525   00315A  8FF3               	bsf	243,7,b	;volatile
  1526   00315C                     
  1527                           ; BSR set to: 3
  1528   00315C  0012               	return		;funcret
  1529   00315E                     __end_of_configuro:
  1530                           	callstack 0
  1531                           
  1532 ;; *************** function ___fltol *****************
  1533 ;; Defined at:
  1534 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\fltol.c"
  1535 ;; Parameters:    Size  Location     Type
  1536 ;;  f1              4   16[COMRAM] void 
  1537 ;; Auto vars:     Size  Location     Type
  1538 ;;  exp1            1   25[COMRAM] unsigned char 
  1539 ;;  sign1           1   24[COMRAM] unsigned char 
  1540 ;; Return value:  Size  Location     Type
  1541 ;;                  4   16[COMRAM] long 
  1542 ;; Registers used:
  1543 ;;		wreg, status,2, status,0
  1544 ;; Tracked objects:
  1545 ;;		On entry : 0/0
  1546 ;;		On exit  : 0/0
  1547 ;;		Unchanged: 0/0
  1548 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1549 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1550 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1551 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1552 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1553 ;;Total ram usage:       10 bytes
  1554 ;; Hardware stack levels used: 1
  1555 ;; This function calls:
  1556 ;;		Nothing
  1557 ;; This function is called by:
  1558 ;;		_main
  1559 ;; This function uses a non-reentrant model
  1560 ;;
  1561                           
  1562                           	psect	text11
  1563   002D06                     __ptext11:
  1564                           	callstack 0
  1565   002D06                     ___fltol:
  1566                           	callstack 126
  1567   002D06  3413               	rlcf	(___fltol@f1+2)^(0+1280),w,c
  1568   002D08  3414               	rlcf	(___fltol@f1+3)^(0+1280),w,c
  1569   002D0A  6E1A               	movwf	___fltol@exp1^(0+1280),c
  1570   002D0C  501A               	movf	___fltol@exp1^(0+1280),w,c
  1571   002D0E  A4D8               	btfss	status,2,c
  1572   002D10  EF8C  F016         	goto	u1331
  1573   002D14  EF8E  F016         	goto	u1330
  1574   002D18                     u1331:
  1575   002D18  EF98  F016         	goto	l1704
  1576   002D1C                     u1330:
  1577   002D1C                     l1700:
  1578   002D1C  0E00               	movlw	0
  1579   002D1E  6E11               	movwf	?___fltol^(0+1280),c
  1580   002D20  0E00               	movlw	0
  1581   002D22  6E12               	movwf	(?___fltol+1)^(0+1280),c
  1582   002D24  0E00               	movlw	0
  1583   002D26  6E13               	movwf	(?___fltol+2)^(0+1280),c
  1584   002D28  0E00               	movlw	0
  1585   002D2A  6E14               	movwf	(?___fltol+3)^(0+1280),c
  1586   002D2C  EF05  F017         	goto	l452
  1587   002D30                     l1704:
  1588   002D30  C511  F515         	movff	___fltol@f1,??___fltol
  1589   002D34  C512  F516         	movff	___fltol@f1+1,??___fltol+1
  1590   002D38  C513  F517         	movff	___fltol@f1+2,??___fltol+2
  1591   002D3C  C514  F518         	movff	___fltol@f1+3,??___fltol+3
  1592   002D40  0E20               	movlw	32
  1593   002D42  EFA8  F016         	goto	u1340
  1594   002D46                     u1345:
  1595   002D46  90D8               	bcf	status,0,c
  1596   002D48  3218               	rrcf	(??___fltol+3)^(0+1280),f,c
  1597   002D4A  3217               	rrcf	(??___fltol+2)^(0+1280),f,c
  1598   002D4C  3216               	rrcf	(??___fltol+1)^(0+1280),f,c
  1599   002D4E  3215               	rrcf	??___fltol^(0+1280),f,c
  1600   002D50                     u1340:
  1601   002D50  2EE8               	decfsz	wreg,f,c
  1602   002D52  EFA3  F016         	goto	u1345
  1603   002D56  5015               	movf	??___fltol^(0+1280),w,c
  1604   002D58  6E19               	movwf	___fltol@sign1^(0+1280),c
  1605   002D5A  8E13               	bsf	(___fltol@f1+2)^(0+1280),7,c
  1606   002D5C  0EFF               	movlw	255
  1607   002D5E  1611               	andwf	___fltol@f1^(0+1280),f,c
  1608   002D60  0EFF               	movlw	255
  1609   002D62  1612               	andwf	(___fltol@f1+1)^(0+1280),f,c
  1610   002D64  0EFF               	movlw	255
  1611   002D66  1613               	andwf	(___fltol@f1+2)^(0+1280),f,c
  1612   002D68  0E00               	movlw	0
  1613   002D6A  1614               	andwf	(___fltol@f1+3)^(0+1280),f,c
  1614   002D6C  0E96               	movlw	150
  1615   002D6E  5E1A               	subwf	___fltol@exp1^(0+1280),f,c
  1616   002D70  BE1A               	btfsc	___fltol@exp1^(0+1280),7,c
  1617   002D72  EFBF  F016         	goto	u1350
  1618   002D76  EFBD  F016         	goto	u1351
  1619   002D7A                     u1351:
  1620   002D7A  EFD5  F016         	goto	l1724
  1621   002D7E                     u1350:
  1622   002D7E  501A               	movf	___fltol@exp1^(0+1280),w,c
  1623   002D80  0A80               	xorlw	128
  1624   002D82  0F97               	addlw	151
  1625   002D84  B0D8               	btfsc	status,0,c
  1626   002D86  EFC7  F016         	goto	u1361
  1627   002D8A  EFC9  F016         	goto	u1360
  1628   002D8E                     u1361:
  1629   002D8E  EFCB  F016         	goto	l1720
  1630   002D92                     u1360:
  1631   002D92  EF8E  F016         	goto	l1700
  1632   002D96                     l1720:
  1633   002D96  90D8               	bcf	status,0,c
  1634   002D98  3214               	rrcf	(___fltol@f1+3)^(0+1280),f,c
  1635   002D9A  3213               	rrcf	(___fltol@f1+2)^(0+1280),f,c
  1636   002D9C  3212               	rrcf	(___fltol@f1+1)^(0+1280),f,c
  1637   002D9E  3211               	rrcf	___fltol@f1^(0+1280),f,c
  1638   002DA0  3E1A               	incfsz	___fltol@exp1^(0+1280),f,c
  1639   002DA2  EFCB  F016         	goto	l1720
  1640   002DA6  EFED  F016         	goto	l1734
  1641   002DAA                     l1724:
  1642   002DAA  0E1F               	movlw	31
  1643   002DAC  641A               	cpfsgt	___fltol@exp1^(0+1280),c
  1644   002DAE  EFDB  F016         	goto	u1371
  1645   002DB2  EFDD  F016         	goto	u1370
  1646   002DB6                     u1371:
  1647   002DB6  EFE5  F016         	goto	l1732
  1648   002DBA                     u1370:
  1649   002DBA  EF8E  F016         	goto	l1700
  1650   002DBE                     l1730:
  1651   002DBE  90D8               	bcf	status,0,c
  1652   002DC0  3611               	rlcf	___fltol@f1^(0+1280),f,c
  1653   002DC2  3612               	rlcf	(___fltol@f1+1)^(0+1280),f,c
  1654   002DC4  3613               	rlcf	(___fltol@f1+2)^(0+1280),f,c
  1655   002DC6  3614               	rlcf	(___fltol@f1+3)^(0+1280),f,c
  1656   002DC8  061A               	decf	___fltol@exp1^(0+1280),f,c
  1657   002DCA                     l1732:
  1658   002DCA  501A               	movf	___fltol@exp1^(0+1280),w,c
  1659   002DCC  A4D8               	btfss	status,2,c
  1660   002DCE  EFEB  F016         	goto	u1381
  1661   002DD2  EFED  F016         	goto	u1380
  1662   002DD6                     u1381:
  1663   002DD6  EFDF  F016         	goto	l1730
  1664   002DDA                     u1380:
  1665   002DDA                     l1734:
  1666   002DDA  5019               	movf	___fltol@sign1^(0+1280),w,c
  1667   002DDC  B4D8               	btfsc	status,2,c
  1668   002DDE  EFF3  F016         	goto	u1391
  1669   002DE2  EFF5  F016         	goto	u1390
  1670   002DE6                     u1391:
  1671   002DE6  EFFD  F016         	goto	l1738
  1672   002DEA                     u1390:
  1673   002DEA  1E14               	comf	(___fltol@f1+3)^(0+1280),f,c
  1674   002DEC  1E13               	comf	(___fltol@f1+2)^(0+1280),f,c
  1675   002DEE  1E12               	comf	(___fltol@f1+1)^(0+1280),f,c
  1676   002DF0  6C11               	negf	___fltol@f1^(0+1280),c
  1677   002DF2  0E00               	movlw	0
  1678   002DF4  2212               	addwfc	(___fltol@f1+1)^(0+1280),f,c
  1679   002DF6  2213               	addwfc	(___fltol@f1+2)^(0+1280),f,c
  1680   002DF8  2214               	addwfc	(___fltol@f1+3)^(0+1280),f,c
  1681   002DFA                     l1738:
  1682   002DFA  C511  F511         	movff	___fltol@f1,?___fltol
  1683   002DFE  C512  F512         	movff	___fltol@f1+1,?___fltol+1
  1684   002E02  C513  F513         	movff	___fltol@f1+2,?___fltol+2
  1685   002E06  C514  F514         	movff	___fltol@f1+3,?___fltol+3
  1686   002E0A                     l452:
  1687   002E0A  0012               	return		;funcret
  1688   002E0C                     __end_of___fltol:
  1689                           	callstack 0
  1690                           
  1691 ;; *************** function ___fladd *****************
  1692 ;; Defined at:
  1693 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcadd.c"
  1694 ;; Parameters:    Size  Location     Type
  1695 ;;  b               4    0[COMRAM] long 
  1696 ;;  a               4    4[COMRAM] long 
  1697 ;; Auto vars:     Size  Location     Type
  1698 ;;  grs             1   15[COMRAM] unsigned char 
  1699 ;;  bexp            1   14[COMRAM] unsigned char 
  1700 ;;  aexp            1   13[COMRAM] unsigned char 
  1701 ;;  signs           1   12[COMRAM] unsigned char 
  1702 ;; Return value:  Size  Location     Type
  1703 ;;                  4    0[COMRAM] unsigned char 
  1704 ;; Registers used:
  1705 ;;		wreg, status,2, status,0
  1706 ;; Tracked objects:
  1707 ;;		On entry : 0/0
  1708 ;;		On exit  : 0/0
  1709 ;;		Unchanged: 0/0
  1710 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1711 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1712 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1713 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1714 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1715 ;;Total ram usage:       16 bytes
  1716 ;; Hardware stack levels used: 1
  1717 ;; This function calls:
  1718 ;;		Nothing
  1719 ;; This function is called by:
  1720 ;;		_main
  1721 ;; This function uses a non-reentrant model
  1722 ;;
  1723                           
  1724                           	psect	text12
  1725   002518                     __ptext12:
  1726                           	callstack 0
  1727   002518                     ___fladd:
  1728                           	callstack 126
  1729   002518  5004               	movf	(___fladd@b+3)^(0+1280),w,c
  1730   00251A  0B80               	andlw	128
  1731   00251C  6E0D               	movwf	___fladd@signs^(0+1280),c
  1732   00251E  5004               	movf	(___fladd@b+3)^(0+1280),w,c
  1733   002520  2404               	addwf	(___fladd@b+3)^(0+1280),w,c
  1734   002522  6E0F               	movwf	___fladd@bexp^(0+1280),c
  1735   002524  AE03               	btfss	(___fladd@b+2)^(0+1280),7,c
  1736   002526  EF97  F012         	goto	u941
  1737   00252A  EF99  F012         	goto	u940
  1738   00252E                     u941:
  1739   00252E  EF9A  F012         	goto	l1502
  1740   002532                     u940:
  1741   002532  800F               	bsf	___fladd@bexp^(0+1280),0,c
  1742   002534                     l1502:
  1743   002534  500F               	movf	___fladd@bexp^(0+1280),w,c
  1744   002536  B4D8               	btfsc	status,2,c
  1745   002538  EFA0  F012         	goto	u951
  1746   00253C  EFA2  F012         	goto	u950
  1747   002540                     u951:
  1748   002540  EFB7  F012         	goto	l1512
  1749   002544                     u950:
  1750   002544  280F               	incf	___fladd@bexp^(0+1280),w,c
  1751   002546  A4D8               	btfss	status,2,c
  1752   002548  EFA8  F012         	goto	u961
  1753   00254C  EFAA  F012         	goto	u960
  1754   002550                     u961:
  1755   002550  EFB2  F012         	goto	l1508
  1756   002554                     u960:
  1757   002554  0E00               	movlw	0
  1758   002556  6E01               	movwf	___fladd@b^(0+1280),c
  1759   002558  0E00               	movlw	0
  1760   00255A  6E02               	movwf	(___fladd@b+1)^(0+1280),c
  1761   00255C  0E00               	movlw	0
  1762   00255E  6E03               	movwf	(___fladd@b+2)^(0+1280),c
  1763   002560  0E00               	movlw	0
  1764   002562  6E04               	movwf	(___fladd@b+3)^(0+1280),c
  1765   002564                     l1508:
  1766   002564  8E03               	bsf	(___fladd@b+2)^(0+1280),7,c
  1767   002566  0E00               	movlw	0
  1768   002568  6E04               	movwf	(___fladd@b+3)^(0+1280),c
  1769   00256A  EFBF  F012         	goto	l1514
  1770   00256E                     l1512:
  1771   00256E  0E00               	movlw	0
  1772   002570  6E01               	movwf	___fladd@b^(0+1280),c
  1773   002572  0E00               	movlw	0
  1774   002574  6E02               	movwf	(___fladd@b+1)^(0+1280),c
  1775   002576  0E00               	movlw	0
  1776   002578  6E03               	movwf	(___fladd@b+2)^(0+1280),c
  1777   00257A  0E00               	movlw	0
  1778   00257C  6E04               	movwf	(___fladd@b+3)^(0+1280),c
  1779   00257E                     l1514:
  1780   00257E  5008               	movf	(___fladd@a+3)^(0+1280),w,c
  1781   002580  0B80               	andlw	128
  1782   002582  6E0E               	movwf	___fladd@aexp^(0+1280),c
  1783   002584  500D               	movf	___fladd@signs^(0+1280),w,c
  1784   002586  180E               	xorwf	___fladd@aexp^(0+1280),w,c
  1785   002588  B4D8               	btfsc	status,2,c
  1786   00258A  EFC9  F012         	goto	u971
  1787   00258E  EFCB  F012         	goto	u970
  1788   002592                     u971:
  1789   002592  EFCC  F012         	goto	l1520
  1790   002596                     u970:
  1791   002596  8C0D               	bsf	___fladd@signs^(0+1280),6,c
  1792   002598                     l1520:
  1793   002598  5008               	movf	(___fladd@a+3)^(0+1280),w,c
  1794   00259A  2408               	addwf	(___fladd@a+3)^(0+1280),w,c
  1795   00259C  6E0E               	movwf	___fladd@aexp^(0+1280),c
  1796   00259E  AE07               	btfss	(___fladd@a+2)^(0+1280),7,c
  1797   0025A0  EFD4  F012         	goto	u981
  1798   0025A4  EFD6  F012         	goto	u980
  1799   0025A8                     u981:
  1800   0025A8  EFD7  F012         	goto	l1526
  1801   0025AC                     u980:
  1802   0025AC  800E               	bsf	___fladd@aexp^(0+1280),0,c
  1803   0025AE                     l1526:
  1804   0025AE  500E               	movf	___fladd@aexp^(0+1280),w,c
  1805   0025B0  B4D8               	btfsc	status,2,c
  1806   0025B2  EFDD  F012         	goto	u991
  1807   0025B6  EFDF  F012         	goto	u990
  1808   0025BA                     u991:
  1809   0025BA  EFF4  F012         	goto	l1536
  1810   0025BE                     u990:
  1811   0025BE  280E               	incf	___fladd@aexp^(0+1280),w,c
  1812   0025C0  A4D8               	btfss	status,2,c
  1813   0025C2  EFE5  F012         	goto	u1001
  1814   0025C6  EFE7  F012         	goto	u1000
  1815   0025CA                     u1001:
  1816   0025CA  EFEF  F012         	goto	l1532
  1817   0025CE                     u1000:
  1818   0025CE  0E00               	movlw	0
  1819   0025D0  6E05               	movwf	___fladd@a^(0+1280),c
  1820   0025D2  0E00               	movlw	0
  1821   0025D4  6E06               	movwf	(___fladd@a+1)^(0+1280),c
  1822   0025D6  0E00               	movlw	0
  1823   0025D8  6E07               	movwf	(___fladd@a+2)^(0+1280),c
  1824   0025DA  0E00               	movlw	0
  1825   0025DC  6E08               	movwf	(___fladd@a+3)^(0+1280),c
  1826   0025DE                     l1532:
  1827   0025DE  8E07               	bsf	(___fladd@a+2)^(0+1280),7,c
  1828   0025E0  0E00               	movlw	0
  1829   0025E2  6E08               	movwf	(___fladd@a+3)^(0+1280),c
  1830   0025E4  EFFC  F012         	goto	l1538
  1831   0025E8                     l1536:
  1832   0025E8  0E00               	movlw	0
  1833   0025EA  6E05               	movwf	___fladd@a^(0+1280),c
  1834   0025EC  0E00               	movlw	0
  1835   0025EE  6E06               	movwf	(___fladd@a+1)^(0+1280),c
  1836   0025F0  0E00               	movlw	0
  1837   0025F2  6E07               	movwf	(___fladd@a+2)^(0+1280),c
  1838   0025F4  0E00               	movlw	0
  1839   0025F6  6E08               	movwf	(___fladd@a+3)^(0+1280),c
  1840   0025F8                     l1538:
  1841   0025F8  500F               	movf	___fladd@bexp^(0+1280),w,c
  1842   0025FA  5C0E               	subwf	___fladd@aexp^(0+1280),w,c
  1843   0025FC  B0D8               	btfsc	status,0,c
  1844   0025FE  EF03  F013         	goto	u1011
  1845   002602  EF05  F013         	goto	u1010
  1846   002606                     u1011:
  1847   002606  EF2C  F013         	goto	l1574
  1848   00260A                     u1010:
  1849   00260A  AC0D               	btfss	___fladd@signs^(0+1280),6,c
  1850   00260C  EF0A  F013         	goto	u1021
  1851   002610  EF0C  F013         	goto	u1020
  1852   002614                     u1021:
  1853   002614  EF0E  F013         	goto	l1544
  1854   002618                     u1020:
  1855   002618  0E80               	movlw	128
  1856   00261A  1A0D               	xorwf	___fladd@signs^(0+1280),f,c
  1857   00261C                     l1544:
  1858   00261C  C50F  F510         	movff	___fladd@bexp,___fladd@grs
  1859   002620  C50E  F50F         	movff	___fladd@aexp,___fladd@bexp
  1860   002624  C510  F50E         	movff	___fladd@grs,___fladd@aexp
  1861   002628  C501  F510         	movff	___fladd@b,___fladd@grs
  1862   00262C  C505  F501         	movff	___fladd@a,___fladd@b
  1863   002630  C510  F505         	movff	___fladd@grs,___fladd@a
  1864   002634  C502  F510         	movff	___fladd@b+1,___fladd@grs
  1865   002638  C506  F502         	movff	___fladd@a+1,___fladd@b+1
  1866   00263C  C510  F506         	movff	___fladd@grs,___fladd@a+1
  1867   002640  C503  F510         	movff	___fladd@b+2,___fladd@grs
  1868   002644  C507  F503         	movff	___fladd@a+2,___fladd@b+2
  1869   002648  C510  F507         	movff	___fladd@grs,___fladd@a+2
  1870   00264C  C504  F510         	movff	___fladd@b+3,___fladd@grs
  1871   002650  C508  F504         	movff	___fladd@a+3,___fladd@b+3
  1872   002654  C510  F508         	movff	___fladd@grs,___fladd@a+3
  1873   002658                     l1574:
  1874   002658  0E00               	movlw	0
  1875   00265A  6E10               	movwf	___fladd@grs^(0+1280),c
  1876   00265C  500F               	movf	___fladd@bexp^(0+1280),w,c
  1877   00265E  C50E  F509         	movff	___fladd@aexp,??___fladd
  1878   002662  6A0A               	clrf	(??___fladd+1)^(0+1280),c
  1879   002664  5E09               	subwf	??___fladd^(0+1280),f,c
  1880   002666  0E00               	movlw	0
  1881   002668  5A0A               	subwfb	(??___fladd+1)^(0+1280),f,c
  1882   00266A  BE0A               	btfsc	(??___fladd+1)^(0+1280),7,c
  1883   00266C  EF41  F013         	goto	u1031
  1884   002670  500A               	movf	(??___fladd+1)^(0+1280),w,c
  1885   002672  E109               	bnz	u1030
  1886   002674  0E1A               	movlw	26
  1887   002676  5C09               	subwf	??___fladd^(0+1280),w,c
  1888   002678  A0D8               	btfss	status,0,c
  1889   00267A  EF41  F013         	goto	u1031
  1890   00267E  EF43  F013         	goto	u1030
  1891   002682                     u1031:
  1892   002682  EF7A  F013         	goto	l684
  1893   002686                     u1030:
  1894   002686  5001               	movf	___fladd@b^(0+1280),w,c
  1895   002688  1002               	iorwf	(___fladd@b+1)^(0+1280),w,c
  1896   00268A  1003               	iorwf	(___fladd@b+2)^(0+1280),w,c
  1897   00268C  1004               	iorwf	(___fladd@b+3)^(0+1280),w,c
  1898   00268E  A4D8               	btfss	status,2,c
  1899   002690  EF4C  F013         	goto	u1041
  1900   002694  EF4F  F013         	goto	u1040
  1901   002698                     u1041:
  1902   002698  0E01               	movlw	1
  1903   00269A  EF50  F013         	goto	u1050
  1904   00269E                     u1040:
  1905   00269E  0E00               	movlw	0
  1906   0026A0                     u1050:
  1907   0026A0  6E10               	movwf	___fladd@grs^(0+1280),c
  1908   0026A2  0E00               	movlw	0
  1909   0026A4  6E01               	movwf	___fladd@b^(0+1280),c
  1910   0026A6  0E00               	movlw	0
  1911   0026A8  6E02               	movwf	(___fladd@b+1)^(0+1280),c
  1912   0026AA  0E00               	movlw	0
  1913   0026AC  6E03               	movwf	(___fladd@b+2)^(0+1280),c
  1914   0026AE  0E00               	movlw	0
  1915   0026B0  6E04               	movwf	(___fladd@b+3)^(0+1280),c
  1916   0026B2  C50E  F50F         	movff	___fladd@aexp,___fladd@bexp
  1917   0026B6  EF83  F013         	goto	l683
  1918   0026BA                     l685:
  1919   0026BA  A010               	btfss	___fladd@grs^(0+1280),0,c
  1920   0026BC  EF62  F013         	goto	u1061
  1921   0026C0  EF64  F013         	goto	u1060
  1922   0026C4                     u1061:
  1923   0026C4  EF6A  F013         	goto	l1586
  1924   0026C8                     u1060:
  1925   0026C8  90D8               	bcf	status,0,c
  1926   0026CA  3010               	rrcf	___fladd@grs^(0+1280),w,c
  1927   0026CC  0901               	iorlw	1
  1928   0026CE  6E10               	movwf	___fladd@grs^(0+1280),c
  1929   0026D0  EF6C  F013         	goto	l1588
  1930   0026D4                     l1586:
  1931   0026D4  90D8               	bcf	status,0,c
  1932   0026D6  3210               	rrcf	___fladd@grs^(0+1280),f,c
  1933   0026D8                     l1588:
  1934   0026D8  A001               	btfss	___fladd@b^(0+1280),0,c
  1935   0026DA  EF71  F013         	goto	u1071
  1936   0026DE  EF73  F013         	goto	u1070
  1937   0026E2                     u1071:
  1938   0026E2  EF74  F013         	goto	l1592
  1939   0026E6                     u1070:
  1940   0026E6  8E10               	bsf	___fladd@grs^(0+1280),7,c
  1941   0026E8                     l1592:
  1942   0026E8  3404               	rlcf	(___fladd@b+3)^(0+1280),w,c
  1943   0026EA  3204               	rrcf	(___fladd@b+3)^(0+1280),f,c
  1944   0026EC  3203               	rrcf	(___fladd@b+2)^(0+1280),f,c
  1945   0026EE  3202               	rrcf	(___fladd@b+1)^(0+1280),f,c
  1946   0026F0  3201               	rrcf	___fladd@b^(0+1280),f,c
  1947   0026F2  2A0F               	incf	___fladd@bexp^(0+1280),f,c
  1948   0026F4                     l684:
  1949   0026F4  500E               	movf	___fladd@aexp^(0+1280),w,c
  1950   0026F6  5C0F               	subwf	___fladd@bexp^(0+1280),w,c
  1951   0026F8  A0D8               	btfss	status,0,c
  1952   0026FA  EF81  F013         	goto	u1081
  1953   0026FE  EF83  F013         	goto	u1080
  1954   002702                     u1081:
  1955   002702  EF5D  F013         	goto	l685
  1956   002706                     u1080:
  1957   002706                     l683:
  1958   002706  BC0D               	btfsc	___fladd@signs^(0+1280),6,c
  1959   002708  EF88  F013         	goto	u1091
  1960   00270C  EF8A  F013         	goto	u1090
  1961   002710                     u1091:
  1962   002710  EFCA  F013         	goto	l1620
  1963   002714                     u1090:
  1964   002714  500F               	movf	___fladd@bexp^(0+1280),w,c
  1965   002716  A4D8               	btfss	status,2,c
  1966   002718  EF90  F013         	goto	u1101
  1967   00271C  EF92  F013         	goto	u1100
  1968   002720                     u1101:
  1969   002720  EF9C  F013         	goto	l1602
  1970   002724                     u1100:
  1971   002724  0E00               	movlw	0
  1972   002726  6E01               	movwf	?___fladd^(0+1280),c
  1973   002728  0E00               	movlw	0
  1974   00272A  6E02               	movwf	(?___fladd+1)^(0+1280),c
  1975   00272C  0E00               	movlw	0
  1976   00272E  6E03               	movwf	(?___fladd+2)^(0+1280),c
  1977   002730  0E00               	movlw	0
  1978   002732  6E04               	movwf	(?___fladd+3)^(0+1280),c
  1979   002734  EFEB  F014         	goto	l692
  1980   002738                     l1602:
  1981   002738  5005               	movf	___fladd@a^(0+1280),w,c
  1982   00273A  2601               	addwf	___fladd@b^(0+1280),f,c
  1983   00273C  5006               	movf	(___fladd@a+1)^(0+1280),w,c
  1984   00273E  2202               	addwfc	(___fladd@b+1)^(0+1280),f,c
  1985   002740  5007               	movf	(___fladd@a+2)^(0+1280),w,c
  1986   002742  2203               	addwfc	(___fladd@b+2)^(0+1280),f,c
  1987   002744  5008               	movf	(___fladd@a+3)^(0+1280),w,c
  1988   002746  2204               	addwfc	(___fladd@b+3)^(0+1280),f,c
  1989   002748  A004               	btfss	(___fladd@b+3)^(0+1280),0,c
  1990   00274A  EFA9  F013         	goto	u1111
  1991   00274E  EFAB  F013         	goto	u1110
  1992   002752                     u1111:
  1993   002752  EF57  F014         	goto	l1656
  1994   002756                     u1110:
  1995   002756  A010               	btfss	___fladd@grs^(0+1280),0,c
  1996   002758  EFB0  F013         	goto	u1121
  1997   00275C  EFB2  F013         	goto	u1120
  1998   002760                     u1121:
  1999   002760  EFB8  F013         	goto	l1610
  2000   002764                     u1120:
  2001   002764  90D8               	bcf	status,0,c
  2002   002766  3010               	rrcf	___fladd@grs^(0+1280),w,c
  2003   002768  0901               	iorlw	1
  2004   00276A  6E10               	movwf	___fladd@grs^(0+1280),c
  2005   00276C  EFBA  F013         	goto	l1612
  2006   002770                     l1610:
  2007   002770  90D8               	bcf	status,0,c
  2008   002772  3210               	rrcf	___fladd@grs^(0+1280),f,c
  2009   002774                     l1612:
  2010   002774  A001               	btfss	___fladd@b^(0+1280),0,c
  2011   002776  EFBF  F013         	goto	u1131
  2012   00277A  EFC1  F013         	goto	u1130
  2013   00277E                     u1131:
  2014   00277E  EFC2  F013         	goto	l1616
  2015   002782                     u1130:
  2016   002782  8E10               	bsf	___fladd@grs^(0+1280),7,c
  2017   002784                     l1616:
  2018   002784  3404               	rlcf	(___fladd@b+3)^(0+1280),w,c
  2019   002786  3204               	rrcf	(___fladd@b+3)^(0+1280),f,c
  2020   002788  3203               	rrcf	(___fladd@b+2)^(0+1280),f,c
  2021   00278A  3202               	rrcf	(___fladd@b+1)^(0+1280),f,c
  2022   00278C  3201               	rrcf	___fladd@b^(0+1280),f,c
  2023   00278E  2A0F               	incf	___fladd@bexp^(0+1280),f,c
  2024   002790  EF57  F014         	goto	l1656
  2025   002794                     l1620:
  2026   002794  5005               	movf	___fladd@a^(0+1280),w,c
  2027   002796  5C01               	subwf	___fladd@b^(0+1280),w,c
  2028   002798  5006               	movf	(___fladd@a+1)^(0+1280),w,c
  2029   00279A  5802               	subwfb	(___fladd@b+1)^(0+1280),w,c
  2030   00279C  5007               	movf	(___fladd@a+2)^(0+1280),w,c
  2031   00279E  5803               	subwfb	(___fladd@b+2)^(0+1280),w,c
  2032   0027A0  5004               	movf	(___fladd@b+3)^(0+1280),w,c
  2033   0027A2  0A80               	xorlw	128
  2034   0027A4  6E09               	movwf	??___fladd^(0+1280),c
  2035   0027A6  5008               	movf	(___fladd@a+3)^(0+1280),w,c
  2036   0027A8  0A80               	xorlw	128
  2037   0027AA  5809               	subwfb	??___fladd^(0+1280),w,c
  2038   0027AC  B0D8               	btfsc	status,0,c
  2039   0027AE  EFDB  F013         	goto	u1141
  2040   0027B2  EFDD  F013         	goto	u1140
  2041   0027B6                     u1141:
  2042   0027B6  EF08  F014         	goto	l1630
  2043   0027BA                     u1140:
  2044   0027BA  5001               	movf	___fladd@b^(0+1280),w,c
  2045   0027BC  5C05               	subwf	___fladd@a^(0+1280),w,c
  2046   0027BE  6E09               	movwf	??___fladd^(0+1280),c
  2047   0027C0  5002               	movf	(___fladd@b+1)^(0+1280),w,c
  2048   0027C2  5806               	subwfb	(___fladd@a+1)^(0+1280),w,c
  2049   0027C4  6E0A               	movwf	(??___fladd+1)^(0+1280),c
  2050   0027C6  5003               	movf	(___fladd@b+2)^(0+1280),w,c
  2051   0027C8  5807               	subwfb	(___fladd@a+2)^(0+1280),w,c
  2052   0027CA  6E0B               	movwf	(??___fladd+2)^(0+1280),c
  2053   0027CC  5004               	movf	(___fladd@b+3)^(0+1280),w,c
  2054   0027CE  5808               	subwfb	(___fladd@a+3)^(0+1280),w,c
  2055   0027D0  6E0C               	movwf	(??___fladd+3)^(0+1280),c
  2056   0027D2  0EFF               	movlw	255
  2057   0027D4  2409               	addwf	??___fladd^(0+1280),w,c
  2058   0027D6  6E01               	movwf	___fladd@b^(0+1280),c
  2059   0027D8  0EFF               	movlw	255
  2060   0027DA  200A               	addwfc	(??___fladd+1)^(0+1280),w,c
  2061   0027DC  6E02               	movwf	(___fladd@b+1)^(0+1280),c
  2062   0027DE  0EFF               	movlw	255
  2063   0027E0  200B               	addwfc	(??___fladd+2)^(0+1280),w,c
  2064   0027E2  6E03               	movwf	(___fladd@b+2)^(0+1280),c
  2065   0027E4  0EFF               	movlw	255
  2066   0027E6  200C               	addwfc	(??___fladd+3)^(0+1280),w,c
  2067   0027E8  6E04               	movwf	(___fladd@b+3)^(0+1280),c
  2068   0027EA  0E80               	movlw	128
  2069   0027EC  1A0D               	xorwf	___fladd@signs^(0+1280),f,c
  2070   0027EE  6C10               	negf	___fladd@grs^(0+1280),c
  2071   0027F0  5010               	movf	___fladd@grs^(0+1280),w,c
  2072   0027F2  A4D8               	btfss	status,2,c
  2073   0027F4  EFFE  F013         	goto	u1151
  2074   0027F8  EF00  F014         	goto	u1150
  2075   0027FC                     u1151:
  2076   0027FC  EF10  F014         	goto	l700
  2077   002800                     u1150:
  2078   002800  0E01               	movlw	1
  2079   002802  2601               	addwf	___fladd@b^(0+1280),f,c
  2080   002804  0E00               	movlw	0
  2081   002806  2202               	addwfc	(___fladd@b+1)^(0+1280),f,c
  2082   002808  2203               	addwfc	(___fladd@b+2)^(0+1280),f,c
  2083   00280A  2204               	addwfc	(___fladd@b+3)^(0+1280),f,c
  2084   00280C  EF10  F014         	goto	l700
  2085   002810                     l1630:
  2086   002810  5005               	movf	___fladd@a^(0+1280),w,c
  2087   002812  5E01               	subwf	___fladd@b^(0+1280),f,c
  2088   002814  5006               	movf	(___fladd@a+1)^(0+1280),w,c
  2089   002816  5A02               	subwfb	(___fladd@b+1)^(0+1280),f,c
  2090   002818  5007               	movf	(___fladd@a+2)^(0+1280),w,c
  2091   00281A  5A03               	subwfb	(___fladd@b+2)^(0+1280),f,c
  2092   00281C  5008               	movf	(___fladd@a+3)^(0+1280),w,c
  2093   00281E  5A04               	subwfb	(___fladd@b+3)^(0+1280),f,c
  2094   002820                     l700:
  2095   002820  5001               	movf	___fladd@b^(0+1280),w,c
  2096   002822  1002               	iorwf	(___fladd@b+1)^(0+1280),w,c
  2097   002824  1003               	iorwf	(___fladd@b+2)^(0+1280),w,c
  2098   002826  1004               	iorwf	(___fladd@b+3)^(0+1280),w,c
  2099   002828  A4D8               	btfss	status,2,c
  2100   00282A  EF19  F014         	goto	u1161
  2101   00282E  EF1B  F014         	goto	u1160
  2102   002832                     u1161:
  2103   002832  EF50  F014         	goto	l1654
  2104   002836                     u1160:
  2105   002836  5010               	movf	___fladd@grs^(0+1280),w,c
  2106   002838  A4D8               	btfss	status,2,c
  2107   00283A  EF21  F014         	goto	u1171
  2108   00283E  EF23  F014         	goto	u1170
  2109   002842                     u1171:
  2110   002842  EF50  F014         	goto	l1654
  2111   002846                     u1170:
  2112   002846  0E00               	movlw	0
  2113   002848  6E01               	movwf	?___fladd^(0+1280),c
  2114   00284A  0E00               	movlw	0
  2115   00284C  6E02               	movwf	(?___fladd+1)^(0+1280),c
  2116   00284E  0E00               	movlw	0
  2117   002850  6E03               	movwf	(?___fladd+2)^(0+1280),c
  2118   002852  0E00               	movlw	0
  2119   002854  6E04               	movwf	(?___fladd+3)^(0+1280),c
  2120   002856  EFEB  F014         	goto	l692
  2121   00285A                     l1638:
  2122   00285A  90D8               	bcf	status,0,c
  2123   00285C  3601               	rlcf	___fladd@b^(0+1280),f,c
  2124   00285E  3602               	rlcf	(___fladd@b+1)^(0+1280),f,c
  2125   002860  3603               	rlcf	(___fladd@b+2)^(0+1280),f,c
  2126   002862  3604               	rlcf	(___fladd@b+3)^(0+1280),f,c
  2127   002864  AE10               	btfss	___fladd@grs^(0+1280),7,c
  2128   002866  EF37  F014         	goto	u1181
  2129   00286A  EF39  F014         	goto	u1180
  2130   00286E                     u1181:
  2131   00286E  EF3A  F014         	goto	l1644
  2132   002872                     u1180:
  2133   002872  8001               	bsf	___fladd@b^(0+1280),0,c
  2134   002874                     l1644:
  2135   002874  A010               	btfss	___fladd@grs^(0+1280),0,c
  2136   002876  EF3F  F014         	goto	u1191
  2137   00287A  EF41  F014         	goto	u1190
  2138   00287E                     u1191:
  2139   00287E  EF45  F014         	goto	l1648
  2140   002882                     u1190:
  2141   002882  80D8               	bsf	status,0,c
  2142   002884  3610               	rlcf	___fladd@grs^(0+1280),f,c
  2143   002886  EF47  F014         	goto	l1650
  2144   00288A                     l1648:
  2145   00288A  90D8               	bcf	status,0,c
  2146   00288C  3610               	rlcf	___fladd@grs^(0+1280),f,c
  2147   00288E                     l1650:
  2148   00288E  500F               	movf	___fladd@bexp^(0+1280),w,c
  2149   002890  B4D8               	btfsc	status,2,c
  2150   002892  EF4D  F014         	goto	u1201
  2151   002896  EF4F  F014         	goto	u1200
  2152   00289A                     u1201:
  2153   00289A  EF50  F014         	goto	l1654
  2154   00289E                     u1200:
  2155   00289E  060F               	decf	___fladd@bexp^(0+1280),f,c
  2156   0028A0                     l1654:
  2157   0028A0  AE03               	btfss	(___fladd@b+2)^(0+1280),7,c
  2158   0028A2  EF55  F014         	goto	u1211
  2159   0028A6  EF57  F014         	goto	u1210
  2160   0028AA                     u1211:
  2161   0028AA  EF2D  F014         	goto	l1638
  2162   0028AE                     u1210:
  2163   0028AE                     l1656:
  2164   0028AE  0E00               	movlw	0
  2165   0028B0  6E0E               	movwf	___fladd@aexp^(0+1280),c
  2166   0028B2  AE10               	btfss	___fladd@grs^(0+1280),7,c
  2167   0028B4  EF5E  F014         	goto	u1221
  2168   0028B8  EF60  F014         	goto	u1220
  2169   0028BC                     u1221:
  2170   0028BC  EF78  F014         	goto	l709
  2171   0028C0                     u1220:
  2172   0028C0  C510  F509         	movff	___fladd@grs,??___fladd
  2173   0028C4  0E7F               	movlw	127
  2174   0028C6  1609               	andwf	??___fladd^(0+1280),f,c
  2175   0028C8  B4D8               	btfsc	status,2,c
  2176   0028CA  EF69  F014         	goto	u1231
  2177   0028CE  EF6B  F014         	goto	u1230
  2178   0028D2                     u1231:
  2179   0028D2  EF6F  F014         	goto	l710
  2180   0028D6                     u1230:
  2181   0028D6                     l1662:
  2182   0028D6  0E01               	movlw	1
  2183   0028D8  6E0E               	movwf	___fladd@aexp^(0+1280),c
  2184   0028DA  EF78  F014         	goto	l709
  2185   0028DE                     l710:
  2186   0028DE  A001               	btfss	___fladd@b^(0+1280),0,c
  2187   0028E0  EF74  F014         	goto	u1241
  2188   0028E4  EF76  F014         	goto	u1240
  2189   0028E8                     u1241:
  2190   0028E8  EF78  F014         	goto	l709
  2191   0028EC                     u1240:
  2192   0028EC  EF6B  F014         	goto	l1662
  2193   0028F0                     l709:
  2194   0028F0  500E               	movf	___fladd@aexp^(0+1280),w,c
  2195   0028F2  B4D8               	btfsc	status,2,c
  2196   0028F4  EF7E  F014         	goto	u1251
  2197   0028F8  EF80  F014         	goto	u1250
  2198   0028FC                     u1251:
  2199   0028FC  EFAB  F014         	goto	l1674
  2200   002900                     u1250:
  2201   002900  0E01               	movlw	1
  2202   002902  2601               	addwf	___fladd@b^(0+1280),f,c
  2203   002904  0E00               	movlw	0
  2204   002906  2202               	addwfc	(___fladd@b+1)^(0+1280),f,c
  2205   002908  2203               	addwfc	(___fladd@b+2)^(0+1280),f,c
  2206   00290A  2204               	addwfc	(___fladd@b+3)^(0+1280),f,c
  2207   00290C  A004               	btfss	(___fladd@b+3)^(0+1280),0,c
  2208   00290E  EF8B  F014         	goto	u1261
  2209   002912  EF8D  F014         	goto	u1260
  2210   002916                     u1261:
  2211   002916  EFAB  F014         	goto	l1674
  2212   00291A                     u1260:
  2213   00291A  C501  F509         	movff	___fladd@b,??___fladd
  2214   00291E  C502  F50A         	movff	___fladd@b+1,??___fladd+1
  2215   002922  C503  F50B         	movff	___fladd@b+2,??___fladd+2
  2216   002926  C504  F50C         	movff	___fladd@b+3,??___fladd+3
  2217   00292A  340C               	rlcf	(??___fladd+3)^(0+1280),w,c
  2218   00292C  320C               	rrcf	(??___fladd+3)^(0+1280),f,c
  2219   00292E  320B               	rrcf	(??___fladd+2)^(0+1280),f,c
  2220   002930  320A               	rrcf	(??___fladd+1)^(0+1280),f,c
  2221   002932  3209               	rrcf	??___fladd^(0+1280),f,c
  2222   002934  C509  F501         	movff	??___fladd,___fladd@b
  2223   002938  C50A  F502         	movff	??___fladd+1,___fladd@b+1
  2224   00293C  C50B  F503         	movff	??___fladd+2,___fladd@b+2
  2225   002940  C50C  F504         	movff	??___fladd+3,___fladd@b+3
  2226   002944  280F               	incf	___fladd@bexp^(0+1280),w,c
  2227   002946  B4D8               	btfsc	status,2,c
  2228   002948  EFA8  F014         	goto	u1271
  2229   00294C  EFAA  F014         	goto	u1270
  2230   002950                     u1271:
  2231   002950  EFAB  F014         	goto	l1674
  2232   002954                     u1270:
  2233   002954  2A0F               	incf	___fladd@bexp^(0+1280),f,c
  2234   002956                     l1674:
  2235   002956  280F               	incf	___fladd@bexp^(0+1280),w,c
  2236   002958  B4D8               	btfsc	status,2,c
  2237   00295A  EFB1  F014         	goto	u1281
  2238   00295E  EFB3  F014         	goto	u1280
  2239   002962                     u1281:
  2240   002962  EFBB  F014         	goto	l1678
  2241   002966                     u1280:
  2242   002966  500F               	movf	___fladd@bexp^(0+1280),w,c
  2243   002968  A4D8               	btfss	status,2,c
  2244   00296A  EFB9  F014         	goto	u1291
  2245   00296E  EFBB  F014         	goto	u1290
  2246   002972                     u1291:
  2247   002972  EFCD  F014         	goto	l1682
  2248   002976                     u1290:
  2249   002976                     l1678:
  2250   002976  0E00               	movlw	0
  2251   002978  6E01               	movwf	___fladd@b^(0+1280),c
  2252   00297A  0E00               	movlw	0
  2253   00297C  6E02               	movwf	(___fladd@b+1)^(0+1280),c
  2254   00297E  0E00               	movlw	0
  2255   002980  6E03               	movwf	(___fladd@b+2)^(0+1280),c
  2256   002982  0E00               	movlw	0
  2257   002984  6E04               	movwf	(___fladd@b+3)^(0+1280),c
  2258   002986  500F               	movf	___fladd@bexp^(0+1280),w,c
  2259   002988  A4D8               	btfss	status,2,c
  2260   00298A  EFC9  F014         	goto	u1301
  2261   00298E  EFCB  F014         	goto	u1300
  2262   002992                     u1301:
  2263   002992  EFCD  F014         	goto	l1682
  2264   002996                     u1300:
  2265   002996  0E00               	movlw	0
  2266   002998  6E0D               	movwf	___fladd@signs^(0+1280),c
  2267   00299A                     l1682:
  2268   00299A  A00F               	btfss	___fladd@bexp^(0+1280),0,c
  2269   00299C  EFD2  F014         	goto	u1311
  2270   0029A0  EFD4  F014         	goto	u1310
  2271   0029A4                     u1311:
  2272   0029A4  EFD7  F014         	goto	l1686
  2273   0029A8                     u1310:
  2274   0029A8  8E03               	bsf	(___fladd@b+2)^(0+1280),7,c
  2275   0029AA  EFD8  F014         	goto	l1688
  2276   0029AE                     l1686:
  2277   0029AE  9E03               	bcf	(___fladd@b+2)^(0+1280),7,c
  2278   0029B0                     l1688:
  2279   0029B0  90D8               	bcf	status,0,c
  2280   0029B2  300F               	rrcf	___fladd@bexp^(0+1280),w,c
  2281   0029B4  6E04               	movwf	(___fladd@b+3)^(0+1280),c
  2282   0029B6  AE0D               	btfss	___fladd@signs^(0+1280),7,c
  2283   0029B8  EFE0  F014         	goto	u1321
  2284   0029BC  EFE2  F014         	goto	u1320
  2285   0029C0                     u1321:
  2286   0029C0  EFE3  F014         	goto	l1694
  2287   0029C4                     u1320:
  2288   0029C4  8E04               	bsf	(___fladd@b+3)^(0+1280),7,c
  2289   0029C6                     l1694:
  2290   0029C6  C501  F501         	movff	___fladd@b,?___fladd
  2291   0029CA  C502  F502         	movff	___fladd@b+1,?___fladd+1
  2292   0029CE  C503  F503         	movff	___fladd@b+2,?___fladd+2
  2293   0029D2  C504  F504         	movff	___fladd@b+3,?___fladd+3
  2294   0029D6                     l692:
  2295   0029D6  0012               	return		;funcret
  2296   0029D8                     __end_of___fladd:
  2297                           	callstack 0
  2298                           
  2299 ;; *************** function _POS_CURSOR *****************
  2300 ;; Defined at:
  2301 ;;		line 6 in file "LCD.c"
  2302 ;; Parameters:    Size  Location     Type
  2303 ;;  fila            1    wreg     unsigned char 
  2304 ;;  columna         1    3[COMRAM] unsigned char 
  2305 ;; Auto vars:     Size  Location     Type
  2306 ;;  fila            1    4[COMRAM] unsigned char 
  2307 ;; Return value:  Size  Location     Type
  2308 ;;                  1    wreg      void 
  2309 ;; Registers used:
  2310 ;;		wreg, status,2, status,0, cstack
  2311 ;; Tracked objects:
  2312 ;;		On entry : 0/0
  2313 ;;		On exit  : 0/0
  2314 ;;		Unchanged: 0/0
  2315 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2316 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2317 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2318 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2319 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2320 ;;Total ram usage:        2 bytes
  2321 ;; Hardware stack levels used: 1
  2322 ;; Hardware stack levels required when called: 2
  2323 ;; This function calls:
  2324 ;;		_ENVIA_LCD_CMD
  2325 ;; This function is called by:
  2326 ;;		_main
  2327 ;; This function uses a non-reentrant model
  2328 ;;
  2329                           
  2330                           	psect	text13
  2331   0030B8                     __ptext13:
  2332                           	callstack 0
  2333   0030B8                     _POS_CURSOR:
  2334                           	callstack 124
  2335                           
  2336                           ;incstack = 0
  2337                           ;POS_CURSOR@fila stored from wreg
  2338   0030B8  6E05               	movwf	POS_CURSOR@fila^(0+1280),c
  2339   0030BA                     
  2340                           ;LCD.c: 6: void POS_CURSOR(unsigned char fila,unsigned char columna);LCD.c: 7: {;LCD.c: 
      +                          8:  if(fila == 1)
  2341   0030BA  0405               	decf	POS_CURSOR@fila^(0+1280),w,c
  2342   0030BC  A4D8               	btfss	status,2,c
  2343   0030BE  EF63  F018         	goto	u911
  2344   0030C2  EF65  F018         	goto	u910
  2345   0030C6                     u911:
  2346   0030C6  EF6B  F018         	goto	l1482
  2347   0030CA                     u910:
  2348   0030CA                     
  2349                           ;LCD.c: 9:  {;LCD.c: 10:   ENVIA_LCD_CMD(0x80+columna);
  2350   0030CA  5004               	movf	POS_CURSOR@columna^(0+1280),w,c
  2351   0030CC  0F80               	addlw	128
  2352   0030CE  ECAF  F018         	call	_ENVIA_LCD_CMD
  2353                           
  2354                           ;LCD.c: 11:  }
  2355   0030D2  EF78  F018         	goto	l24
  2356   0030D6                     l1482:
  2357   0030D6  0E02               	movlw	2
  2358   0030D8  1805               	xorwf	POS_CURSOR@fila^(0+1280),w,c
  2359   0030DA  A4D8               	btfss	status,2,c
  2360   0030DC  EF72  F018         	goto	u921
  2361   0030E0  EF74  F018         	goto	u920
  2362   0030E4                     u921:
  2363   0030E4  EF78  F018         	goto	l24
  2364   0030E8                     u920:
  2365   0030E8                     
  2366                           ;LCD.c: 13:  {;LCD.c: 14:   ENVIA_LCD_CMD(0xC0+columna);
  2367   0030E8  5004               	movf	POS_CURSOR@columna^(0+1280),w,c
  2368   0030EA  0FC0               	addlw	192
  2369   0030EC  ECAF  F018         	call	_ENVIA_LCD_CMD
  2370   0030F0                     l24:
  2371   0030F0  0012               	return		;funcret
  2372   0030F2                     __end_of_POS_CURSOR:
  2373                           	callstack 0
  2374                           
  2375 ;; *************** function _ENVIA_LCD_CMD *****************
  2376 ;; Defined at:
  2377 ;;		line 104 in file "LCD.c"
  2378 ;; Parameters:    Size  Location     Type
  2379 ;;  dato            1    wreg     unsigned char 
  2380 ;; Auto vars:     Size  Location     Type
  2381 ;;  dato            1    1[COMRAM] unsigned char 
  2382 ;;  aux             1    2[COMRAM] unsigned char 
  2383 ;; Return value:  Size  Location     Type
  2384 ;;                  1    wreg      void 
  2385 ;; Registers used:
  2386 ;;		wreg, status,2, status,0, cstack
  2387 ;; Tracked objects:
  2388 ;;		On entry : 0/0
  2389 ;;		On exit  : 0/0
  2390 ;;		Unchanged: 0/0
  2391 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2392 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2393 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2394 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2395 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2396 ;;Total ram usage:        2 bytes
  2397 ;; Hardware stack levels used: 1
  2398 ;; Hardware stack levels required when called: 1
  2399 ;; This function calls:
  2400 ;;		_ENVIA_NIBBLE
  2401 ;;		_LEER_LCD
  2402 ;; This function is called by:
  2403 ;;		_POS_CURSOR
  2404 ;;		_CURSOR_HOME
  2405 ;;		_CURSOR_ONOFF
  2406 ;;		_BORRAR_LCD
  2407 ;;		_LCD_CONFIG
  2408 ;;		_BLINK_CURSOR
  2409 ;;		_DISPLAY_ONOFF
  2410 ;;		_GENERACARACTER
  2411 ;; This function uses a non-reentrant model
  2412 ;;
  2413                           
  2414                           	psect	text14
  2415   00315E                     __ptext14:
  2416                           	callstack 0
  2417   00315E                     _ENVIA_LCD_CMD:
  2418                           	callstack 123
  2419                           
  2420                           ;incstack = 0
  2421                           ;ENVIA_LCD_CMD@dato stored from wreg
  2422   00315E  6E02               	movwf	ENVIA_LCD_CMD@dato^(0+1280),c
  2423   003160                     
  2424                           ;LCD.c: 104: void ENVIA_LCD_CMD(unsigned char dato);LCD.c: 105: {;LCD.c: 106:  unsigned 
      +                          char aux;;LCD.c: 107:  LATDbits.LATD0 = 0;
  2425   003160  90C1               	bcf	193,0,c	;volatile
  2426   003162                     
  2427                           ;LCD.c: 108:  LEER_LCD();
  2428   003162  ECC1  F017         	call	_LEER_LCD	;wreg free
  2429   003166                     
  2430                           ;LCD.c: 109:  TRISD = 0b00000000;
  2431   003166  0E00               	movlw	0
  2432   003168  6EC9               	movwf	201,c	;volatile
  2433   00316A                     
  2434                           ;LCD.c: 111:         _delay(1200);
  2435   00316A  0EF0               	movlw	240
  2436   00316C                     u1467:
  2437   00316C  D000               	nop2	
  2438   00316E  2EE8               	decfsz	wreg,f,c
  2439   003170  D7FD               	bra	u1467
  2440   003172                     
  2441                           ;LCD.c: 112:         LATDbits.LATD1 = 0;
  2442   003172  92C1               	bcf	193,1,c	;volatile
  2443   003174                     
  2444                           ;LCD.c: 113:  LATDbits.LATD2 = 0;
  2445   003174  94C1               	bcf	193,2,c	;volatile
  2446   003176                     
  2447                           ;LCD.c: 114:  LATDbits.LATD0 = 0;
  2448   003176  90C1               	bcf	193,0,c	;volatile
  2449   003178                     
  2450                           ;LCD.c: 115:  aux = dato & 0xF0;
  2451   003178  5002               	movf	ENVIA_LCD_CMD@dato^(0+1280),w,c
  2452   00317A  0BF0               	andlw	240
  2453   00317C  6E03               	movwf	ENVIA_LCD_CMD@aux^(0+1280),c
  2454   00317E                     
  2455                           ;LCD.c: 116:  ENVIA_NIBBLE(aux);
  2456   00317E  5003               	movf	ENVIA_LCD_CMD@aux^(0+1280),w,c
  2457   003180  EC15  F019         	call	_ENVIA_NIBBLE
  2458   003184                     
  2459                           ;LCD.c: 117:  aux = dato<<4;
  2460   003184  3802               	swapf	ENVIA_LCD_CMD@dato^(0+1280),w,c
  2461   003186  0BF0               	andlw	240
  2462   003188  6E03               	movwf	ENVIA_LCD_CMD@aux^(0+1280),c
  2463   00318A                     
  2464                           ;LCD.c: 118:  ENVIA_NIBBLE(aux);
  2465   00318A  5003               	movf	ENVIA_LCD_CMD@aux^(0+1280),w,c
  2466   00318C  EC15  F019         	call	_ENVIA_NIBBLE
  2467   003190  0012               	return		;funcret
  2468   003192                     __end_of_ENVIA_LCD_CMD:
  2469                           	callstack 0
  2470                           
  2471 ;; *************** function _ESCRIBE_MENSAJE *****************
  2472 ;; Defined at:
  2473 ;;		line 41 in file "LCD.c"
  2474 ;; Parameters:    Size  Location     Type
  2475 ;;  cadena          1    3[COMRAM] PTR const unsigned char 
  2476 ;;		 -> STR_2(9), STR_1(13), 
  2477 ;;  tam             1    4[COMRAM] unsigned char 
  2478 ;; Auto vars:     Size  Location     Type
  2479 ;;  i               1    6[COMRAM] unsigned char 
  2480 ;; Return value:  Size  Location     Type
  2481 ;;                  1    wreg      void 
  2482 ;; Registers used:
  2483 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2484 ;; Tracked objects:
  2485 ;;		On entry : 0/0
  2486 ;;		On exit  : 0/0
  2487 ;;		Unchanged: 0/0
  2488 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2489 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2490 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2491 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2492 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2493 ;;Total ram usage:        4 bytes
  2494 ;; Hardware stack levels used: 1
  2495 ;; Hardware stack levels required when called: 2
  2496 ;; This function calls:
  2497 ;;		_ENVIA_CHAR
  2498 ;; This function is called by:
  2499 ;;		_main
  2500 ;; This function uses a non-reentrant model
  2501 ;;
  2502                           
  2503                           	psect	text15
  2504   003192                     __ptext15:
  2505                           	callstack 0
  2506   003192                     _ESCRIBE_MENSAJE:
  2507                           	callstack 124
  2508   003192                     
  2509                           ;LCD.c: 41: void ESCRIBE_MENSAJE(const char *cadena,unsigned char tam);LCD.c: 42: {;LCD.
      +                          c: 43:  unsigned char i = 0;
  2510   003192  0E00               	movlw	0
  2511   003194  6E07               	movwf	ESCRIBE_MENSAJE@i^(0+1280),c
  2512                           
  2513                           ;LCD.c: 44:  for(i = 0; i<tam; i++)
  2514   003196  0E00               	movlw	0
  2515   003198  6E07               	movwf	ESCRIBE_MENSAJE@i^(0+1280),c
  2516   00319A  EFD9  F018         	goto	l1492
  2517   00319E                     l1488:
  2518                           
  2519                           ;LCD.c: 45:  {;LCD.c: 46:   ENVIA_CHAR(cadena[i]);
  2520   00319E  5004               	movf	ESCRIBE_MENSAJE@cadena^(0+1280),w,c
  2521   0031A0  2407               	addwf	ESCRIBE_MENSAJE@i^(0+1280),w,c
  2522   0031A2  6E06               	movwf	??_ESCRIBE_MENSAJE^(0+1280),c
  2523   0031A4  C506  F4F6         	movff	??_ESCRIBE_MENSAJE,tblptrl
  2524   0031A8                     	if	0	;There is only one active tblptr byte
  2525   0031A8                     	endif
  2526   0031A8                     	if	0	;tblptru may be non-zero
  2527   0031A8                     	endif
  2528   0031A8                     	if	0	;tblptru may be non-zero
  2529   0031A8                     	endif
  2530   0031A8  0008               	tblrd		*
  2531   0031AA  50F5               	movf	tablat,w,c
  2532   0031AC  ECE3  F018         	call	_ENVIA_CHAR
  2533   0031B0                     
  2534                           ;LCD.c: 47:  }
  2535   0031B0  2A07               	incf	ESCRIBE_MENSAJE@i^(0+1280),f,c
  2536   0031B2                     l1492:
  2537   0031B2  5005               	movf	ESCRIBE_MENSAJE@tam^(0+1280),w,c
  2538   0031B4  5C07               	subwf	ESCRIBE_MENSAJE@i^(0+1280),w,c
  2539   0031B6  A0D8               	btfss	status,0,c
  2540   0031B8  EFE0  F018         	goto	u931
  2541   0031BC  EFE2  F018         	goto	u930
  2542   0031C0                     u931:
  2543   0031C0  EFCF  F018         	goto	l1488
  2544   0031C4                     u930:
  2545   0031C4  0012               	return		;funcret
  2546   0031C6                     __end_of_ESCRIBE_MENSAJE:
  2547                           	callstack 0
  2548                           
  2549 ;; *************** function _ENVIA_CHAR *****************
  2550 ;; Defined at:
  2551 ;;		line 50 in file "LCD.c"
  2552 ;; Parameters:    Size  Location     Type
  2553 ;;  dato            1    wreg     unsigned char 
  2554 ;; Auto vars:     Size  Location     Type
  2555 ;;  dato            1    1[COMRAM] unsigned char 
  2556 ;;  aux             1    2[COMRAM] unsigned char 
  2557 ;; Return value:  Size  Location     Type
  2558 ;;                  1    wreg      void 
  2559 ;; Registers used:
  2560 ;;		wreg, status,2, status,0, cstack
  2561 ;; Tracked objects:
  2562 ;;		On entry : 0/0
  2563 ;;		On exit  : 0/0
  2564 ;;		Unchanged: 0/0
  2565 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2566 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2567 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2568 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2569 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2570 ;;Total ram usage:        2 bytes
  2571 ;; Hardware stack levels used: 1
  2572 ;; Hardware stack levels required when called: 1
  2573 ;; This function calls:
  2574 ;;		_ENVIA_NIBBLE
  2575 ;;		_LEER_LCD
  2576 ;; This function is called by:
  2577 ;;		_ESCRIBE_MENSAJE
  2578 ;;		_main
  2579 ;;		_GENERACARACTER
  2580 ;; This function uses a non-reentrant model
  2581 ;;
  2582                           
  2583                           	psect	text16
  2584   0031C6                     __ptext16:
  2585                           	callstack 0
  2586   0031C6                     _ENVIA_CHAR:
  2587                           	callstack 124
  2588                           
  2589                           ;incstack = 0
  2590                           ;ENVIA_CHAR@dato stored from wreg
  2591   0031C6  6E02               	movwf	ENVIA_CHAR@dato^(0+1280),c
  2592   0031C8                     
  2593                           ;LCD.c: 50: void ENVIA_CHAR(unsigned char dato);LCD.c: 51: {;LCD.c: 52:  unsigned char a
      +                          ux;;LCD.c: 53:  LATDbits.LATD0 = 1;
  2594   0031C8  80C1               	bsf	193,0,c	;volatile
  2595   0031CA                     
  2596                           ;LCD.c: 54:  LEER_LCD();
  2597   0031CA  ECC1  F017         	call	_LEER_LCD	;wreg free
  2598   0031CE                     
  2599                           ;LCD.c: 55:  TRISD = 0x00;
  2600   0031CE  0E00               	movlw	0
  2601   0031D0  6EC9               	movwf	201,c	;volatile
  2602   0031D2                     
  2603                           ;LCD.c: 56:         _delay(1200);
  2604   0031D2  0EF0               	movlw	240
  2605   0031D4                     u1477:
  2606   0031D4  D000               	nop2	
  2607   0031D6  2EE8               	decfsz	wreg,f,c
  2608   0031D8  D7FD               	bra	u1477
  2609   0031DA                     
  2610                           ;LCD.c: 58:  LATDbits.LATD1 = 0;
  2611   0031DA  92C1               	bcf	193,1,c	;volatile
  2612   0031DC                     
  2613                           ;LCD.c: 59:  LATDbits.LATD2 = 0;
  2614   0031DC  94C1               	bcf	193,2,c	;volatile
  2615   0031DE                     
  2616                           ;LCD.c: 60:  LATDbits.LATD0 = 1;
  2617   0031DE  80C1               	bsf	193,0,c	;volatile
  2618   0031E0                     
  2619                           ;LCD.c: 61:  aux = dato & 0xF0;
  2620   0031E0  5002               	movf	ENVIA_CHAR@dato^(0+1280),w,c
  2621   0031E2  0BF0               	andlw	240
  2622   0031E4  6E03               	movwf	ENVIA_CHAR@aux^(0+1280),c
  2623   0031E6                     
  2624                           ;LCD.c: 62:  ENVIA_NIBBLE(aux);
  2625   0031E6  5003               	movf	ENVIA_CHAR@aux^(0+1280),w,c
  2626   0031E8  EC15  F019         	call	_ENVIA_NIBBLE
  2627   0031EC                     
  2628                           ;LCD.c: 63:  aux = dato << 4;
  2629   0031EC  3802               	swapf	ENVIA_CHAR@dato^(0+1280),w,c
  2630   0031EE  0BF0               	andlw	240
  2631   0031F0  6E03               	movwf	ENVIA_CHAR@aux^(0+1280),c
  2632   0031F2                     
  2633                           ;LCD.c: 64:  ENVIA_NIBBLE(aux);
  2634   0031F2  5003               	movf	ENVIA_CHAR@aux^(0+1280),w,c
  2635   0031F4  EC15  F019         	call	_ENVIA_NIBBLE
  2636   0031F8  0012               	return		;funcret
  2637   0031FA                     __end_of_ENVIA_CHAR:
  2638                           	callstack 0
  2639                           
  2640 ;; *************** function _LEER_LCD *****************
  2641 ;; Defined at:
  2642 ;;		line 121 in file "LCD.c"
  2643 ;; Parameters:    Size  Location     Type
  2644 ;;		None
  2645 ;; Auto vars:     Size  Location     Type
  2646 ;;  aux             1    0[COMRAM] unsigned char 
  2647 ;; Return value:  Size  Location     Type
  2648 ;;                  1    wreg      void 
  2649 ;; Registers used:
  2650 ;;		wreg, status,2, status,0
  2651 ;; Tracked objects:
  2652 ;;		On entry : 0/0
  2653 ;;		On exit  : 0/0
  2654 ;;		Unchanged: 0/0
  2655 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2656 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2657 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2658 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2659 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2660 ;;Total ram usage:        1 bytes
  2661 ;; Hardware stack levels used: 1
  2662 ;; This function calls:
  2663 ;;		Nothing
  2664 ;; This function is called by:
  2665 ;;		_ENVIA_CHAR
  2666 ;;		_ENVIA_LCD_CMD
  2667 ;; This function uses a non-reentrant model
  2668 ;;
  2669                           
  2670                           	psect	text17
  2671   002F82                     __ptext17:
  2672                           	callstack 0
  2673   002F82                     _LEER_LCD:
  2674                           	callstack 123
  2675   002F82                     
  2676                           ;LCD.c: 123:  unsigned char aux;;LCD.c: 124:  TRISD = 0xF8;
  2677   002F82  0EF8               	movlw	248
  2678   002F84  6EC9               	movwf	201,c	;volatile
  2679   002F86                     
  2680                           ;LCD.c: 125:  LATDbits.LATD0 = 0;
  2681   002F86  90C1               	bcf	193,0,c	;volatile
  2682   002F88                     
  2683                           ;LCD.c: 126:  LATDbits.LATD1 = 1;
  2684   002F88  82C1               	bsf	193,1,c	;volatile
  2685   002F8A                     
  2686                           ;LCD.c: 127:  LATDbits.LATD2 = 1;
  2687   002F8A  84C1               	bsf	193,2,c	;volatile
  2688   002F8C                     
  2689                           ;LCD.c: 128:         _delay(1200);
  2690   002F8C  0EF0               	movlw	240
  2691   002F8E                     u1487:
  2692   002F8E  D000               	nop2	
  2693   002F90  2EE8               	decfsz	wreg,f,c
  2694   002F92  D7FD               	bra	u1487
  2695   002F94                     
  2696                           ;LCD.c: 130:  aux = PORTD;
  2697   002F94  C4D1 F501          	movff	1233,LEER_LCD@aux	;volatile
  2698   002F98                     
  2699                           ;LCD.c: 131:  LATDbits.LATD2 = 0;
  2700   002F98  94C1               	bcf	193,2,c	;volatile
  2701   002F9A                     
  2702                           ;LCD.c: 132:         _delay(1200);
  2703   002F9A  0EF0               	movlw	240
  2704   002F9C                     u1497:
  2705   002F9C  D000               	nop2	
  2706   002F9E  2EE8               	decfsz	wreg,f,c
  2707   002FA0  D7FD               	bra	u1497
  2708   002FA2                     
  2709                           ;LCD.c: 134:  LATDbits.LATD2 = 1;
  2710   002FA2  84C1               	bsf	193,2,c	;volatile
  2711   002FA4                     
  2712                           ;LCD.c: 135:         _delay(1200);
  2713   002FA4  0EF0               	movlw	240
  2714   002FA6                     u1507:
  2715   002FA6  D000               	nop2	
  2716   002FA8  2EE8               	decfsz	wreg,f,c
  2717   002FAA  D7FD               	bra	u1507
  2718   002FAC                     
  2719                           ;LCD.c: 137:  LATDbits.LATD2 = 0;
  2720   002FAC  94C1               	bcf	193,2,c	;volatile
  2721   002FAE                     l850:
  2722                           
  2723                           ;LCD.c: 138:  aux = aux & 0x80;
  2724   002FAE  5001               	movf	LEER_LCD@aux^(0+1280),w,c
  2725   002FB0  0B80               	andlw	128
  2726   002FB2  6E01               	movwf	LEER_LCD@aux^(0+1280),c
  2727                           
  2728                           ;LCD.c: 139:  while(aux == 0x80)
  2729   002FB4  EFF0  F017         	goto	l864
  2730   002FB8                     l67:
  2731                           
  2732                           ;LCD.c: 140:         {;LCD.c: 141:             LATDbits.LATD2 = 1;
  2733   002FB8  84C1               	bsf	193,2,c	;volatile
  2734   002FBA                     
  2735                           ;LCD.c: 142:             _delay(1200);
  2736   002FBA  0EF0               	movlw	240
  2737   002FBC                     u1517:
  2738   002FBC  D000               	nop2	
  2739   002FBE  2EE8               	decfsz	wreg,f,c
  2740   002FC0  D7FD               	bra	u1517
  2741   002FC2                     
  2742                           ;LCD.c: 143:             aux = PORTD;
  2743   002FC2  C4D1 F501          	movff	1233,LEER_LCD@aux	;volatile
  2744   002FC6                     
  2745                           ;LCD.c: 144:             LATDbits.LATD2 = 0;
  2746   002FC6  94C1               	bcf	193,2,c	;volatile
  2747                           
  2748                           ;LCD.c: 145:             _delay(1200);
  2749   002FC8  0EF0               	movlw	240
  2750   002FCA                     u1527:
  2751   002FCA  D000               	nop2	
  2752   002FCC  2EE8               	decfsz	wreg,f,c
  2753   002FCE  D7FD               	bra	u1527
  2754   002FD0                     
  2755                           ;LCD.c: 146:             LATDbits.LATD2 = 1;
  2756   002FD0  84C1               	bsf	193,2,c	;volatile
  2757                           
  2758                           ;LCD.c: 147:             _delay(1200);
  2759   002FD2  0EF0               	movlw	240
  2760   002FD4                     u1537:
  2761   002FD4  D000               	nop2	
  2762   002FD6  2EE8               	decfsz	wreg,f,c
  2763   002FD8  D7FD               	bra	u1537
  2764   002FDA                     
  2765                           ;LCD.c: 148:             LATDbits.LATD2 = 0;
  2766   002FDA  94C1               	bcf	193,2,c	;volatile
  2767   002FDC  EFD7  F017         	goto	l850
  2768   002FE0                     l864:
  2769                           
  2770                           ;LCD.c: 139:  while(aux == 0x80)
  2771   002FE0  0E80               	movlw	128
  2772   002FE2  1801               	xorwf	LEER_LCD@aux^(0+1280),w,c
  2773   002FE4  B4D8               	btfsc	status,2,c
  2774   002FE6  EFF7  F017         	goto	u11
  2775   002FEA  EFF9  F017         	goto	u10
  2776   002FEE                     u11:
  2777   002FEE  EFDC  F017         	goto	l67
  2778   002FF2                     u10:
  2779   002FF2  0012               	return		;funcret
  2780   002FF4                     __end_of_LEER_LCD:
  2781                           	callstack 0
  2782                           
  2783 ;; *************** function _ENVIA_NIBBLE *****************
  2784 ;; Defined at:
  2785 ;;		line 93 in file "LCD.c"
  2786 ;; Parameters:    Size  Location     Type
  2787 ;;  dato            1    wreg     unsigned char 
  2788 ;; Auto vars:     Size  Location     Type
  2789 ;;  dato            1    0[COMRAM] unsigned char 
  2790 ;; Return value:  Size  Location     Type
  2791 ;;                  1    wreg      void 
  2792 ;; Registers used:
  2793 ;;		wreg, status,2, status,0
  2794 ;; Tracked objects:
  2795 ;;		On entry : 0/0
  2796 ;;		On exit  : 0/0
  2797 ;;		Unchanged: 0/0
  2798 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2799 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2800 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2801 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2802 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2803 ;;Total ram usage:        1 bytes
  2804 ;; Hardware stack levels used: 1
  2805 ;; This function calls:
  2806 ;;		Nothing
  2807 ;; This function is called by:
  2808 ;;		_ENVIA_CHAR
  2809 ;;		_LCD_CONFIG
  2810 ;;		_ENVIA_LCD_CMD
  2811 ;; This function uses a non-reentrant model
  2812 ;;
  2813                           
  2814                           	psect	text18
  2815   00322A                     __ptext18:
  2816                           	callstack 0
  2817   00322A                     _ENVIA_NIBBLE:
  2818                           	callstack 124
  2819                           
  2820                           ;incstack = 0
  2821                           ;ENVIA_NIBBLE@dato stored from wreg
  2822   00322A  6E01               	movwf	ENVIA_NIBBLE@dato^(0+1280),c
  2823   00322C                     
  2824                           ;LCD.c: 93: void ENVIA_NIBBLE(unsigned char dato);LCD.c: 94: {;LCD.c: 95:  LATD &= 0x0F;
  2825   00322C  0E0F               	movlw	15
  2826   00322E  16C1               	andwf	193,f,c	;volatile
  2827                           
  2828                           ;LCD.c: 96:  dato &= 0xF0;
  2829   003230  0EF0               	movlw	240
  2830   003232  1601               	andwf	ENVIA_NIBBLE@dato^(0+1280),f,c
  2831                           
  2832                           ;LCD.c: 97:  LATD|= dato;
  2833   003234  5001               	movf	ENVIA_NIBBLE@dato^(0+1280),w,c	;volatile
  2834   003236  12C1               	iorwf	193,f,c	;volatile
  2835   003238                     
  2836                           ;LCD.c: 98:  LATDbits.LATD2 = 1;
  2837   003238  84C1               	bsf	193,2,c	;volatile
  2838   00323A                     
  2839                           ;LCD.c: 100:         _delay(1200);
  2840   00323A  0EF0               	movlw	240
  2841   00323C                     u1547:
  2842   00323C  D000               	nop2	
  2843   00323E  2EE8               	decfsz	wreg,f,c
  2844   003240  D7FD               	bra	u1547
  2845   003242                     
  2846                           ;LCD.c: 101:  LATDbits.LATD2 = 0;
  2847   003242  94C1               	bcf	193,2,c	;volatile
  2848   003244  0012               	return		;funcret
  2849   003246                     __end_of_ENVIA_NIBBLE:
  2850                           	callstack 0
  2851                           
  2852                           	psect	rparam
  2853   000000                     
  2854                           	psect	config
  2855                           
  2856                           ;Config register CONFIG1 @ 0x300000
  2857                           ;	External Oscillator Selection
  2858                           ;	FEXTOSC = OFF, Oscillator not enabled
  2859                           ;	Reset Oscillator Selection
  2860                           ;	RSTOSC = EXTOSC, EXTOSC operating per FEXTOSC bits (device manufacturing default)
  2861   300000                     	org	3145728
  2862   300000  FC                 	db	252
  2863                           
  2864                           ;Config register CONFIG2 @ 0x300001
  2865                           ;	Clock out Enable bit
  2866                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
  2867                           ;	PRLOCKED One-Way Set Enable bit
  2868                           ;	PR1WAY = ON, PRLOCKED bit can be cleared and set only once
  2869                           ;	Clock Switch Enable bit
  2870                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
  2871                           ;	Fail-Safe Clock Monitor Enable bit
  2872                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
  2873   300001                     	org	3145729
  2874   300001  FF                 	db	255
  2875                           
  2876                           ;Config register CONFIG3 @ 0x300002
  2877                           ;	MCLR Enable bit
  2878                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
  2879                           ;	Power-up timer selection bits
  2880                           ;	PWRTS = PWRT_64, PWRT set at 64ms
  2881                           ;	Multi-vector enable bit
  2882                           ;	MVECEN = ON, Multi-vector enabled, Vector table used for interrupts
  2883                           ;	IVTLOCK bit One-way set enable bit
  2884                           ;	IVT1WAY = ON, IVTLOCKED bit can be cleared and set only once
  2885                           ;	Low Power BOR Enable bit
  2886                           ;	LPBOREN = OFF, Low-Power BOR disabled
  2887                           ;	Brown-out Reset Enable bits
  2888                           ;	BOREN = OFF, Brown-out Reset disabled
  2889   300002                     	org	3145730
  2890   300002  3D                 	db	61
  2891                           
  2892                           ;Config register CONFIG4 @ 0x300003
  2893                           ;	Brown-out Reset Voltage Selection bits
  2894                           ;	BORV = VBOR_1P9, Brown-out Reset Voltage (VBOR) set to 1.9V
  2895                           ;	ZCD Disable bit
  2896                           ;	ZCD = OFF, ZCD module is disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCD
      +                          CON
  2897                           ;	PPSLOCK bit One-Way Set Enable bit
  2898                           ;	PPS1WAY = ON, PPSLOCKED bit can be cleared and set only once; PPS registers remain loc
      +                          ked after one clear/set cycle
  2899                           ;	Stack Full/Underflow Reset Enable bit
  2900                           ;	STVREN = ON, Stack full/underflow will cause Reset
  2901                           ;	Low Voltage Programming Enable bit
  2902                           ;	LVP = OFF, HV on MCLR/VPP must be used for programming
  2903                           ;	Extended Instruction Set Enable bit
  2904                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
  2905   300003                     	org	3145731
  2906   300003  DF                 	db	223
  2907                           
  2908                           ;Config register CONFIG5 @ 0x300004
  2909                           ;	WDT Period selection bits
  2910                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  2911                           ;	WDT operating mode
  2912                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
  2913   300004                     	org	3145732
  2914   300004  9F                 	db	159
  2915                           
  2916                           ;Config register CONFIG6 @ 0x300005
  2917                           ;	WDT Window Select bits
  2918                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
  2919                           ;	WDT input clock selector
  2920                           ;	WDTCCS = SC, Software Control
  2921   300005                     	org	3145733
  2922   300005  FF                 	db	255
  2923                           
  2924                           ;Config register CONFIG7 @ 0x300006
  2925                           ;	Boot Block Size selection bits
  2926                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
  2927                           ;	Boot Block enable bit
  2928                           ;	BBEN = OFF, Boot block disabled
  2929                           ;	Storage Area Flash enable bit
  2930                           ;	SAFEN = OFF, SAF disabled
  2931                           ;	Background Debugger
  2932                           ;	DEBUG = OFF, Background Debugger disabled
  2933   300006                     	org	3145734
  2934   300006  FF                 	db	255
  2935                           
  2936                           ;Config register CONFIG8 @ 0x300007
  2937                           ;	Boot Block Write Protection bit
  2938                           ;	WRTB = OFF, Boot Block not Write protected
  2939                           ;	Configuration Register Write Protection bit
  2940                           ;	WRTC = OFF, Configuration registers not Write protected
  2941                           ;	Data EEPROM Write Protection bit
  2942                           ;	WRTD = OFF, Data EEPROM not Write protected
  2943                           ;	SAF Write protection bit
  2944                           ;	WRTSAF = OFF, SAF not Write Protected
  2945                           ;	Application Block write protection bit
  2946                           ;	WRTAPP = OFF, Application Block not write protected
  2947   300007                     	org	3145735
  2948   300007  FF                 	db	255
  2949                           
  2950                           ;Config register CONFIG10 @ 0x300009
  2951                           ;	PFM and Data EEPROM Code Protection bit
  2952                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
  2953   300009                     	org	3145737
  2954   300009  FF                 	db	255
  2955                           tosu	equ	0x4FF
  2956                           tosh	equ	0x4FE
  2957                           tosl	equ	0x4FD
  2958                           stkptr	equ	0x4FC
  2959                           pclatu	equ	0x4FB
  2960                           pclath	equ	0x4FA
  2961                           pcl	equ	0x4F9
  2962                           tblptru	equ	0x4F8
  2963                           tblptrh	equ	0x4F7
  2964                           tblptrl	equ	0x4F6
  2965                           tablat	equ	0x4F5
  2966                           prodh	equ	0x4F4
  2967                           prodl	equ	0x4F3
  2968                           indf0	equ	0x4EF
  2969                           postinc0	equ	0x4EE
  2970                           postdec0	equ	0x4ED
  2971                           preinc0	equ	0x4EC
  2972                           plusw0	equ	0x4EB
  2973                           fsr0h	equ	0x4EA
  2974                           fsr0l	equ	0x4E9
  2975                           wreg	equ	0x4E8
  2976                           indf1	equ	0x4E7
  2977                           postinc1	equ	0x4E6
  2978                           postdec1	equ	0x4E5
  2979                           preinc1	equ	0x4E4
  2980                           plusw1	equ	0x4E3
  2981                           fsr1h	equ	0x4E2
  2982                           fsr1l	equ	0x4E1
  2983                           bsr	equ	0x4E0
  2984                           indf2	equ	0x4DF
  2985                           postinc2	equ	0x4DE
  2986                           postdec2	equ	0x4DD
  2987                           preinc2	equ	0x4DC
  2988                           plusw2	equ	0x4DB
  2989                           fsr2h	equ	0x4DA
  2990                           fsr2l	equ	0x4D9
  2991                           status	equ	0x4D8

Data Sizes:
    Strings     22
    Constant    0
    Data        0
    BSS         18
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     30      48
    BANK5           160      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0
    BANK32          256      0       0
    BANK33          256      0       0
    BANK34          256      0       0
    BANK35          256      0       0
    BANK36          256      0       0

Pointer List with Targets:

    ESCRIBE_MENSAJE@cadena	PTR const unsigned char  size(1) Largest target is 13
		 -> STR_1(CODE[13]), STR_2(CODE[9]), 


Critical Paths under _main in COMRAM

    _main->_convierte
    _lcd_init->_CURSOR_ONOFF
    _lcd_init->_LCD_CONFIG
    _LCD_CONFIG->_ENVIA_LCD_CMD
    _CURSOR_ONOFF->_ENVIA_LCD_CMD
    _CURSOR_HOME->_ENVIA_LCD_CMD
    _BORRAR_LCD->_ENVIA_LCD_CMD
    _convierte->___xxtofl
    ___xxtofl->___lwdiv
    ___lwdiv->___lwmod
    ___fltol->___fladd
    _POS_CURSOR->_ENVIA_LCD_CMD
    _ENVIA_LCD_CMD->_ENVIA_NIBBLE
    _ENVIA_LCD_CMD->_LEER_LCD
    _ESCRIBE_MENSAJE->_ENVIA_CHAR
    _ENVIA_CHAR->_ENVIA_NIBBLE
    _ENVIA_CHAR->_LEER_LCD

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _main in BANK32

    None.

Critical Paths under _main in BANK33

    None.

Critical Paths under _main in BANK34

    None.

Critical Paths under _main in BANK35

    None.

Critical Paths under _main in BANK36

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    6920
                                             28 COMRAM     2     2      0
                         _ENVIA_CHAR
                    _ESCRIBE_MENSAJE
                         _POS_CURSOR
                            ___fladd
                            ___fltol
                          _configuro
                          _convierte
                           _lcd_init
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             2     2      0     525
                                              4 COMRAM     2     2      0
                         _BORRAR_LCD
                        _CURSOR_HOME
                       _CURSOR_ONOFF
                         _LCD_CONFIG
 ---------------------------------------------------------------------------------
 (2) _LCD_CONFIG                                           1     1      0     135
                                              3 COMRAM     1     1      0
                      _ENVIA_LCD_CMD
                       _ENVIA_NIBBLE
 ---------------------------------------------------------------------------------
 (2) _CURSOR_ONOFF                                         1     1      0     150
                                              3 COMRAM     1     1      0
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _CURSOR_HOME                                          0     0      0     120
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _BORRAR_LCD                                           0     0      0     120
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (1) _convierte                                            2     0      2    2023
                                             26 COMRAM     2     0      2
                            ___lwdiv
                            ___lwmod
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     626
                                             12 COMRAM    14    10      4
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     615
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     618
                                              5 COMRAM     7     3      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (1) _configuro                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___fltol                                             10     6      4     533
                                             16 COMRAM    10     6      4
                            ___fladd (ARG)
 ---------------------------------------------------------------------------------
 (1) ___fladd                                             16     8      8    2844
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (1) _POS_CURSOR                                           2     1      1     360
                                              3 COMRAM     2     1      1
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (3) _ENVIA_LCD_CMD                                        2     2      0     120
                                              1 COMRAM     2     2      0
                       _ENVIA_NIBBLE
                           _LEER_LCD
 ---------------------------------------------------------------------------------
 (1) _ESCRIBE_MENSAJE                                      4     2      2     515
                                              3 COMRAM     4     2      2
                         _ENVIA_CHAR
 ---------------------------------------------------------------------------------
 (2) _ENVIA_CHAR                                           2     2      0     120
                                              1 COMRAM     2     2      0
                       _ENVIA_NIBBLE
                           _LEER_LCD
 ---------------------------------------------------------------------------------
 (4) _LEER_LCD                                             1     1      0      45
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _ENVIA_NIBBLE                                         1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ENVIA_CHAR
     _ENVIA_NIBBLE
     _LEER_LCD
   _ESCRIBE_MENSAJE
     _ENVIA_CHAR
   _POS_CURSOR
     _ENVIA_LCD_CMD
       _ENVIA_NIBBLE
       _LEER_LCD
   ___fladd
   ___fltol
     ___fladd (ARG)
   _configuro
   _convierte
     ___lwdiv
       ___lwmod (ARG)
     ___lwmod
     ___xxtofl
       ___lwdiv (ARG)
       ___lwmod (ARG)
   _lcd_init
     _BORRAR_LCD
       _ENVIA_LCD_CMD
     _CURSOR_HOME
       _ENVIA_LCD_CMD
     _CURSOR_ONOFF
       _ENVIA_LCD_CMD
     _LCD_CONFIG
       _ENVIA_LCD_CMD
       _ENVIA_NIBBLE

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0       0      69        0.0%
EEDATA             400      0       0       0        0.0%
BITBIGSFRlhhhll    336      0       0      81        0.0%
BITBIGSFR_1        100      0       0      68        0.0%
BITBANK36          100      0       0      66        0.0%
BANK36             100      0       0      67        0.0%
BITBANK35          100      0       0      64        0.0%
BANK35             100      0       0      65        0.0%
BITBANK34          100      0       0      62        0.0%
BANK34             100      0       0      63        0.0%
BITBANK33          100      0       0      60        0.0%
BANK33             100      0       0      61        0.0%
BITBANK32          100      0       0      58        0.0%
BANK32             100      0       0      59        0.0%
BITBANK31          100      0       0      56        0.0%
BANK31             100      0       0      57        0.0%
BITBANK30          100      0       0      54        0.0%
BANK30             100      0       0      55        0.0%
BITBANK29          100      0       0      52        0.0%
BANK29             100      0       0      53        0.0%
BITBANK28          100      0       0      50        0.0%
BANK28             100      0       0      51        0.0%
BITBANK27          100      0       0      48        0.0%
BANK27             100      0       0      49        0.0%
BITBANK26          100      0       0      46        0.0%
BANK26             100      0       0      47        0.0%
BITBANK25          100      0       0      44        0.0%
BANK25             100      0       0      45        0.0%
BITBANK24          100      0       0      42        0.0%
BANK24             100      0       0      43        0.0%
BITBANK23          100      0       0      40        0.0%
BANK23             100      0       0      41        0.0%
BITBANK22          100      0       0      38        0.0%
BANK22             100      0       0      39        0.0%
BITBANK21          100      0       0      36        0.0%
BANK21             100      0       0      37        0.0%
BITBANK20          100      0       0      34        0.0%
BANK20             100      0       0      35        0.0%
BITBANK19          100      0       0      32        0.0%
BANK19             100      0       0      33        0.0%
BITBANK18          100      0       0      30        0.0%
BANK18             100      0       0      31        0.0%
BITBANK17          100      0       0      28        0.0%
BANK17             100      0       0      29        0.0%
BITBANK16          100      0       0      26        0.0%
BANK16             100      0       0      27        0.0%
BITBANK15          100      0       0      24        0.0%
BANK15             100      0       0      25        0.0%
BITBANK14          100      0       0      22        0.0%
BANK14             100      0       0      23        0.0%
BITBANK13          100      0       0      20        0.0%
BANK13             100      0       0      21        0.0%
BITBANK12          100      0       0      18        0.0%
BANK12             100      0       0      19        0.0%
BITBANK11          100      0       0      16        0.0%
BANK11             100      0       0      17        0.0%
BITBANK10          100      0       0      14        0.0%
BANK10             100      0       0      15        0.0%
BITBANK9           100      0       0      12        0.0%
BANK9              100      0       0      13        0.0%
BITBANK8           100      0       0      10        0.0%
BANK8              100      0       0      11        0.0%
BITBANK7           100      0       0       8        0.0%
BANK7              100      0       0       9        0.0%
BITBANK6           100      0       0       6        0.0%
BANK6              100      0       0       7        0.0%
BITBIGSFRll         AD      0       0      84        0.0%
BITBANK5            A0      0       0       4        0.0%
BANK5               A0      0       0       5        0.0%
BITBIGSFRlhhhhh     98      0       0      75        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     1E      30       1       50.5%
BITBIGSFRhhh        2E      0       0      70        0.0%
BITBIGSFRlhhhhl      F      0       0      76        0.0%
BITBIGSFRlhhhhl      E      0       0      77        0.0%
BITBIGSFRlhhhlh      C      0       0      79        0.0%
BITBIGSFRlhhhlh      7      0       0      78        0.0%
BITBIGSFRlhhhll      6      0       0      80        0.0%
BITBIGSFRhhlh        5      0       0      71        0.0%
BITBIGSFRhll         4      0       0      74        0.0%
BITBIGSFRlhl         3      0       0      83        0.0%
BITBIGSFRhlh         1      0       0      73        0.0%
BITBIGSFRlhhl        1      0       0      82        0.0%
BITBIGSFRhhll        1      0       0      72        0.0%
BIGSFR_1             0      0       0     200        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      30      85        0.0%
DATA                 0      0      30       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Thu Oct 12 21:16:19 2023

                     l24 30F0                       l42 3228                       l51 31F8  
                     l60 3244                       l37 3266                       l54 326E  
                     l63 3190                       l48 31C4                       l57 30B6  
                     l67 2FB8                       l69 2FF2                       u10 2FF2  
                     u11 2FEE                       u20 320C                       u21 3208  
                     u30 3222                       u31 321E            ENVIA_CHAR@aux 0503  
                    l141 2F0C                      l135 315C                      l138 3126  
                    l147 2BC4                      l700 2820                      l452 2E0A  
                    l710 28DE                      l810 2A2E                      l900 320C  
                    l709 28F0                      l653 2F80                      l813 2B8A  
                    l830 2F86                      l910 31CE                      l646 2F78  
                    l902 3212                      l663 3056                      l840 2F98  
                    l832 2F88                      l920 31E0                      l912 31D2  
                    l656 304E                      l824 2B22                      l904 3222  
                    l817 2AC6                      l850 2FAE                      l842 2F9A  
                    l834 2F8A                      l922 31E6                      l914 31DA  
                    l906 31C8                      l930 3058                      l683 2706  
                    l860 2FDA                      l852 2FBA                      l844 2FA2  
                    l836 2F8C                      l828 2F82                      l924 31EC  
                    l916 31DC                      l908 31CA                      l692 29D6  
                    l684 26F4                      l940 308C                      l932 305C  
                    l685 26BA                      l870 323A                      l854 2FC2  
                    l846 2FA4                      l838 2F94                      l926 31F2  
                    l918 31DE                      l950 30AA                      l942 3092  
                    l934 3062                      l872 3242                      l856 2FC6  
                    l864 2FE0                      l848 2FAC                      l880 316A  
                    l928 3268                      l952 30B0                      l944 3098  
                    l936 3070                      l866 322C                      l858 2FD0  
                    l890 317E                      l882 3172                      l874 3160  
                    l946 309E                      l938 3084                      l868 3238  
                    l892 3184                      l884 3174                      l876 3162  
                    l948 30A4                      l894 318A                      l886 3176  
                    l878 3166                      l888 3178                      l896 3260  
                    l898 31FC                      u800 303A                      u801 3036  
                    u810 29EA                      u811 29E6                      u900 2B78  
                    u820 29F8                      u901 2B74                      u821 29F4  
                    u910 30CA                      u750 2F28                      u830 2A54  
                    u911 30C6                      u751 2F24                      u831 2A50  
                    u920 30E8                      u760 2F46                      u840 2AAA  
                    u921 30E4                      u761 2F42                      u841 2AA6  
                    u930 31C4                      u770 2F62                      u850 2AF4  
                    u931 31C0                      u771 2F5E                      u851 2AF0  
                    u940 2532                      u780 3006                      u860 2B12  
                    u941 252E                      u781 3002                      u861 2B0E  
                    u950 2544                      u790 3024                      u870 2B22  
                    u951 2540                      u791 3020                      u871 2B1E  
                    u960 2554                      u880 2B30                      u961 2550  
                    u881 2B2C                      u970 2596                      u890 2B6A  
                    u971 2592                      u891 2B66                      u980 25AC  
                    u981 25A8                      u990 25BE                      u991 25BA  
            LEER_LCD@aux 0501                      wreg 04E8             ?_CURSOR_HOME 0501  
         ??_ENVIA_NIBBLE 0501             ___fltol@exp1 051A           ENVIA_CHAR@dato 0502  
                   l1060 313C                     l1070 3154                     l1062 313E  
                   l1054 3128                     l1072 3158                     l1064 3140  
                   l1056 3136                     l1400 2F30                     l1080 3118  
                   l1066 314C                     l1058 3138                     l1410 2F6A  
                   l1402 2F38                     l1082 311C                     l1074 30F2  
                   l1500 2532                     l1068 3152                     l1412 2F6C  
                   l1404 2F46                     l1420 300E                     l1084 3120  
                   l1076 30FC                     l1510 2566                     l1502 2534  
                   l1414 2F72                     l1406 2F4C                     l1430 3048  
                   l1422 3016                     l1078 3100                     l1520 2598  
                   l1504 2544                     l1512 256E                     l1408 2F62  
                   l1424 3024                     l1416 2FF4                     l1440 2A54  
                   l1432 29DA                     l1610 2770                     l1602 2738  
                   l1530 25CE                     l1522 259E                     l1514 257E  
                   l1506 2554                     l1426 303A                     l1418 3006  
                   l1450 2AAE                     l1434 29EA                     l1612 2774  
                   l1604 2748                     l1620 2794                     l1540 260A  
                   l1532 25DE                     l1524 25AC                     l1516 2584  
                   l1508 2564                     l1700 2D1C                     l1428 3042  
                   l1460 2B12                     l1452 2AB0                     l1444 2A68  
                   l1436 29F8                     l1622 27BA                     l1630 2810  
                   l1614 2782                     l1606 2756                     l1550 2628  
                   l1542 2618                     l1534 25E0                     l1526 25AE  
                   l1518 2596                     l1710 2D6C                     l1470 2B6A  
                   l1462 2B30                     l1454 2ABC                     l1446 2A70  
                   l1438 2A3E                     l1480 30CA                     l1640 2864  
                   l1632 2836                     l1624 27EE                     l1616 2784  
                   l1608 2764                     l1560 263C                     l1552 262C  
                   l1544 261C                     l1528 25BE                     l1536 25E8  
                   l1720 2D96                     l1712 2D70                     l1704 2D30  
                   l1472 2B78                     l1464 2B32                     l1456 2AF8  
                   l1448 2A7C                     l1490 31B0                     l1482 30D6  
                   l1650 288E                     l1642 2872                     l1634 2846  
                   l1626 27F0                     l1618 278E                     l1570 2650  
                   l1562 2640                     l1554 2630                     l1546 2620  
                   l1538 25F8                     l1730 2DBE                     l1722 2DA0  
                   l1714 2D7E                     l1706 2D5A                     l1394 2F0E  
                   l1474 2B7A                     l1466 2B36                     l1458 2B04  
                   l1492 31B2                     l1484 30E8                     l1660 28C0  
                   l1652 289E                     l1644 2874                     l1628 2800  
                   l1580 26A2                     l1572 2654                     l1564 2644  
                   l1556 2634                     l1548 2624                     l1732 2DCA  
                   l1724 2DAA                     l1708 2D5C                     l1396 2F16  
                   l1468 2B5A                     l1486 3192                     l1478 30BA  
                   l1670 291A                     l1662 28D6                     l1646 2882  
                   l1638 285A                     l1654 28A0                     l1590 26E6  
                   l1582 26B2                     l1566 2648                     l1558 2638  
                   l1574 2658                     l1734 2DDA                     l1398 2F28  
                   l1494 2E0C                     l1750 2BAA                     l1742 2B8C  
                   l1488 319E                     l1680 2996                     l1672 2954  
                   l1648 288A                     l1656 28AE                     l1592 26E8  
                   l1584 26C8                     l1576 265C                     l1568 264C  
                   l1496 2518                     l1736 2DEA                     l1760 2BFA  
                   l1752 2BC0                     l1744 2B90                     l1690 29B6  
                   l1682 299A                     l1666 2900                     l1674 2956  
                   l1658 28B2                     l1594 26F2                     l1586 26D4  
                   l1578 2686                     l1498 2524                     l1738 2DFA  
                   l1762 2C06                     l1754 2BD2                     l1746 2B94  
                   l1692 29C4                     l1684 29A8                     l1676 2966  
                   l1668 290C                     l1596 2714                     l1588 26D8  
                   l1764 2C44                     l1756 2BE4                     l1748 2B9E  
                   l1694 29C6                     l1686 29AE                     l1678 2976  
                   l1598 2724                     l1766 2C82                     l1758 2BF0  
                   l1688 29B0                     l1768 2CC0                     l1698 2D06  
                   STR_1 2501                     STR_2 250E                     u1000 25CE  
                   u1001 25CA                     u1010 260A                     u1011 2606  
                   u1100 2724                     u1020 2618                     u1101 2720  
                   u1021 2614                     u1110 2756                     u1030 2686  
                   u1111 2752                     u1031 2682                     u1200 289E  
                   u1120 2764                     u1040 269E                     u1201 289A  
                   u1121 2760                     u1041 2698                     u1210 28AE  
                   u1130 2782                     u1050 26A0                     u1211 28AA  
                   u1131 277E                     u1300 2996                     u1220 28C0  
                   u1140 27BA                     u1060 26C8                     u1301 2992  
                   u1221 28BC                     u1141 27B6                     u1061 26C4  
                   u1310 29A8                     u1230 28D6                     u1150 2800  
                   u1070 26E6                     u1311 29A4                     u1231 28D2  
                   u1151 27FC                     u1071 26E2                     u1320 29C4  
                   u1240 28EC                     u1160 2836                     u1080 2706  
                   u1400 2BD2                     u1321 29C0                     u1241 28E8  
                   u1161 2832                     u1081 2702                     u1401 2BCE  
                   u1250 2900                     u1170 2846                     u1090 2714  
                   u1330 2D1C                     u1251 28FC                     u1171 2842  
                   u1091 2710                     u1331 2D18                     u1260 291A  
                   u1180 2872                     u1340 2D50                     u1261 2916  
                   u1181 286E                     u1270 2954                     u1190 2882  
                   u1350 2D7E                     u1271 2950                     u1191 287E  
                   u1351 2D7A                     u1280 2966                     u1360 2D92  
                   _LATD 04C1                     u1281 2962                     u1361 2D8E  
                   u1345 2D46                     u1417 2BB4                     u1290 2976  
                   u1370 2DBA                     u1507 2FA6                     u1291 2972  
                   u1371 2DB6                     u1427 310A                     u1380 2DDA  
                   u1517 2FBC                     u1381 2DD6                     u1437 3068  
                   u1390 2DEA                     u1527 2FCA                     u1391 2DE6  
                   u1447 3076                     u1537 2FD4                     u1457 3086  
                   u1547 323C                     u1467 316C                     u1477 31D4  
                   u1487 2F8E                     u1497 2F9C                     _main 2B8C  
                   start FFFC            ?_CURSOR_ONOFF 0501             ___param_bank 0000  
        ??_ENVIA_LCD_CMD 0502         __end_of_LEER_LCD 2FF4            ___fltol@sign1 0519  
        __end_of___fladd 29D8                    ?_main 0501                    _ADPCH 03EC  
        __end_of___fltol 2E0C          __end_of___lwdiv 2F82          __end_of___lwmod 3058  
                  _OSCEN 00B3                    _PORTD 04D1                    _TRISD 04C9  
            ?_POS_CURSOR 0504                    tablat 04F5                    status 04D8  
         ??_CURSOR_ONOFF 0504          __initialization 3246             __end_of_main 2D06  
        _ESCRIBE_MENSAJE 3192                   ??_main 051D            __activetblptr 0001  
                 _ADRESH 03EB                   _ADRESL 03EA                   _ANSELD 0418  
                 _OSCFRQ 00B1         __end_of___xxtofl 2B8C         __end_of_lcd_init 3128  
              ??___fladd 0509                   _decena 0523     __end_of_ENVIA_NIBBLE 3246  
              ??___fltol 0515                ??___lwdiv 050A                ??___lwmod 0505  
                 _millar 052B                   clear_0 324C                   isa$std 0001  
                 _unidad 051F             __mediumconst 0000                   tblptrh 04F7  
                 tblptrl 04F6                   tblptru 04F8             ??_BORRAR_LCD 0504  
           ___xxtofl@arg 0517             ___xxtofl@exp 0516             ___xxtofl@val 050D  
              ?_LEER_LCD 0501               __accesstop 0560  __end_of__initialization 3252  
           ??_LCD_CONFIG 0504            ___rparam_used 0001             ??_ENVIA_CHAR 0502  
             ___fltol@f1 0511  __end_of_ESCRIBE_MENSAJE 31C6           __pcstackCOMRAM 0501  
     __end_of_BORRAR_LCD 3270         ENVIA_LCD_CMD@aux 0503     __end_of_CURSOR_ONOFF 322A  
     __end_of_LCD_CONFIG 30B8       __end_of_ENVIA_CHAR 31FA               ??_LEER_LCD 0501  
       ENVIA_NIBBLE@dato 0501                ?___xxtofl 050D                  _OSCCON1 00AD  
           ??_POS_CURSOR 0505                ?_lcd_init 0501                  __Hparam 0000  
                __Lparam 0000         ?_ESCRIBE_MENSAJE 0504        __end_of_configuro 315E  
                ___fladd 2518                  ___fltol 2D06                  ___lwdiv 2F0E  
                ___lwmod 2FF4             __psmallconst 2500    __end_of_ENVIA_LCD_CMD 3192  
      __end_of_convierte 2F0E                  __pcinit 3246       __end_of_POS_CURSOR 30F2  
                __ramtop 2500                  _centena 0527                  __ptext0 2B8C  
                __ptext1 30F2                  __ptext2 3058                  __ptext3 31FA  
                __ptext4 3260                  __ptext5 3268                  __ptext6 2E0C  
                __ptext7 29D8                  __ptext8 2FF4                  __ptext9 2F0E  
             ??___xxtofl 0511               ??_lcd_init 0505             _ENVIA_NIBBLE 322A  
   end_of_initialization 3252                  postinc0 04EE              ___fladd@grs 0510  
          ___xxtofl@sign 0515                _TRISAbits 04C6                _TRISBbits 04C7  
              _TRISFbits 04CB             _CURSOR_ONOFF 31FA       CURSOR_ONOFF@estado 0504  
          ??_CURSOR_HOME 0504      start_initialization 3246        ENVIA_LCD_CMD@dato 0502  
              ___fladd@a 0505                ___fladd@b 0501              __pbssCOMRAM 051F  
    __end_of_CURSOR_HOME 3268         ___lwdiv@dividend 0506                 ?___fladd 0501  
               ?___fltol 0511                 ?___lwdiv 0506                 ?___lwmod 0501  
              _configuro 3128              __smallconst 2500                _convierte 2E0C  
       ___lwdiv@quotient 050A                 _LEER_LCD 2F82                 _LATDbits 04C1  
              _resultado 052F         ESCRIBE_MENSAJE@i 0507           POS_CURSOR@fila 0505  
             ?_configuro 0501               _ADCON0bits 03F3               ?_convierte 051B  
               _WPUBbits 0409              _CURSOR_HOME 3260                 __Hrparam 0000  
               __Lrparam 0000             __Lsmallconst 2500               _ANSELAbits 0400  
             _ANSELBbits 0408               _ANSELFbits 0428                 ___xxtofl 29D8  
        ___lwdiv@divisor 0508          ___lwdiv@counter 050C                 __ptext10 3128  
               __ptext11 2D06                 __ptext12 2518                 __ptext13 30B8  
               __ptext14 315E                 __ptext15 3192                 __ptext16 31C6  
               __ptext17 2F82                 __ptext18 322A               _BORRAR_LCD 3268  
               _lcd_init 30F2           convierte@valor 051B               _LCD_CONFIG 3058  
             _ENVIA_CHAR 31C6                 isa$xinst 0000            _ENVIA_LCD_CMD 315E  
            ??_configuro 0501              ??_convierte 051D        ??_ESCRIBE_MENSAJE 0506  
  ESCRIBE_MENSAJE@cadena 0504         ___lwmod@dividend 0501           ?_ENVIA_LCD_CMD 0501  
        ___lwmod@divisor 0503          ___lwmod@counter 0505              ?_BORRAR_LCD 0501  
          ?_ENVIA_NIBBLE 0501            ___fladd@signs 050D               _POS_CURSOR 30B8  
           ___fladd@aexp 050E             ___fladd@bexp 050F              ?_LCD_CONFIG 0501  
     ESCRIBE_MENSAJE@tam 0505              ?_ENVIA_CHAR 0501        POS_CURSOR@columna 0504  
