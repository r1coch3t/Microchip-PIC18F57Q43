

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Wed Nov 01 16:45:13 2023

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og9 
     1                           	processor	18F57Q43
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1
    14                           	psect	text6,global,reloc=2,class=CODE,delta=1
    15                           	psect	text7,global,reloc=2,class=CODE,delta=1
    16                           	psect	text8,global,reloc=2,class=CODE,delta=1
    17                           	psect	text9,global,reloc=2,class=CODE,delta=1
    18                           	psect	text10,global,reloc=2,class=CODE,delta=1
    19                           	psect	text11,global,reloc=2,class=CODE,delta=1
    20                           	psect	text12,global,reloc=2,class=CODE,delta=1
    21                           	psect	text13,global,reloc=2,class=CODE,delta=1
    22                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text16,global,reloc=2,class=CODE,delta=1
    25                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text18,global,reloc=2,class=CODE,delta=1
    27                           	psect	text19,global,reloc=2,class=CODE,delta=1
    28                           	psect	text20,global,reloc=2,class=CODE,delta=1
    29                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    30                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    31                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    32   000000                     
    33                           ; Generated 17/10/2023 GMT
    34                           ; 
    35                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    36                           ; All rights reserved.
    37                           ; 
    38                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    39                           ; 
    40                           ; Redistribution and use in source and binary forms, with or without modification, are
    41                           ; permitted provided that the following conditions are met:
    42                           ; 
    43                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    44                           ;        conditions and the following disclaimer.
    45                           ; 
    46                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    47                           ;        of conditions and the following disclaimer in the documentation and/or other
    48                           ;        materials provided with the distribution. Publication is not required when
    49                           ;        this file is used in an embedded application.
    50                           ; 
    51                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    52                           ;        software without specific prior written permission.
    53                           ; 
    54                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    55                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    56                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    57                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    58                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    59                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    60                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    61                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    62                           ; 
    63                           ; 
    64                           ; Code-generator required, PIC18F57Q43 Definitions
    65                           ; 
    66                           ; SFR Addresses
    67   000000                     _LATD	set	1217
    68   000000                     _OSCCON1	set	173
    69   000000                     _OSCFRQ	set	177
    70   000000                     _OSCEN	set	179
    71   000000                     _RF1PPS	set	554
    72   000000                     _ADPCH	set	1004
    73   000000                     _ADCON0bits	set	1011
    74   000000                     _ANSELAbits	set	1024
    75   000000                     _TRISAbits	set	1222
    76   000000                     _TRISD	set	1225
    77   000000                     _TRISFbits	set	1227
    78   000000                     _ANSELD	set	1048
    79   000000                     _ANSELFbits	set	1064
    80   000000                     _T2PR	set	803
    81   000000                     _PORTD	set	1233
    82   000000                     _LATDbits	set	1217
    83   000000                     _T2CLKCON	set	806
    84   000000                     _T2CON	set	804
    85   000000                     _CCPR1L	set	832
    86   000000                     _CCPR1H	set	833
    87   000000                     _CCP1CON	set	834
    88   000000                     _ADRESL	set	1002
    89   000000                     _ADRESH	set	1003
    90                           
    91                           	psect	smallconst
    92   002500                     __psmallconst:
    93                           	callstack 0
    94   002500  00                 	db	0
    95   002501                     STR_1:
    96   002501  4C                 	db	76	;'L'
    97   002502  6F                 	db	111	;'o'
    98   002503  73                 	db	115	;'s'
    99   002504  20                 	db	32
   100   002505  53                 	db	83	;'S'
   101   002506  61                 	db	97	;'a'
   102   002507  6E                 	db	110	;'n'
   103   002508  74                 	db	116	;'t'
   104   002509  6F                 	db	111	;'o'
   105   00250A  73                 	db	115	;'s'
   106   00250B  00                 	db	0
   107   00250C                     STR_2:
   108   00250C  41                 	db	65	;'A'
   109   00250D  44                 	db	68	;'D'
   110   00250E  43                 	db	67	;'C'
   111   00250F  20                 	db	32
   112   002510  43                 	db	67	;'C'
   113   002511  48                 	db	72	;'H'
   114   002512  30                 	db	48	;'0'
   115   002513  3A                 	db	58	;':'
   116   002514  00                 	db	0
   117   002515  00                 	db	0	; dummy byte at the end
   118   000000                     
   119                           ; #config settings
   120                           
   121                           	psect	cinit
   122   002FA2                     __pcinit:
   123                           	callstack 0
   124   002FA2                     start_initialization:
   125                           	callstack 0
   126   002FA2                     __initialization:
   127                           	callstack 0
   128   002FA2                     end_of_initialization:
   129                           	callstack 0
   130   002FA2                     __end_of__initialization:
   131                           	callstack 0
   132   002FA2  0100               	movlb	0
   133   002FA4  EF08  F017         	goto	_main	;jump to C main() function
   134                           
   135                           	psect	cstackCOMRAM
   136   000501                     __pcstackCOMRAM:
   137                           	callstack 0
   138   000501                     ?_strlen:
   139                           	callstack 0
   140   000501                     ?___lwmod:
   141                           	callstack 0
   142   000501                     ?___fltol:
   143                           	callstack 0
   144   000501                     ?___xxtofl:
   145                           	callstack 0
   146   000501                     ENVIA_NIBBLE@dato:
   147                           	callstack 0
   148   000501                     LEER_LCD@aux:
   149                           	callstack 0
   150   000501                     strlen@s:
   151                           	callstack 0
   152   000501                     ___lwmod@dividend:
   153                           	callstack 0
   154   000501                     ___fltol@f1:
   155                           	callstack 0
   156   000501                     ___xxtofl@val:
   157                           	callstack 0
   158                           
   159                           ; 4 bytes @ 0x0
   160   000501                     	ds	1
   161   000502                     ENVIA_CHAR@dato:
   162                           	callstack 0
   163   000502                     ENVIA_LCD_CMD@dato:
   164                           	callstack 0
   165                           
   166                           ; 1 bytes @ 0x1
   167   000502                     	ds	1
   168   000503                     ENVIA_CHAR@aux:
   169                           	callstack 0
   170   000503                     ENVIA_LCD_CMD@aux:
   171                           	callstack 0
   172   000503                     strlen@a:
   173                           	callstack 0
   174   000503                     ___lwmod@divisor:
   175                           	callstack 0
   176                           
   177                           ; 2 bytes @ 0x2
   178   000503                     	ds	1
   179   000504                     ??_LCD_CONFIG:
   180   000504                     POS_CURSOR@columna:
   181                           	callstack 0
   182   000504                     CURSOR_ONOFF@estado:
   183                           	callstack 0
   184   000504                     ESCRIBE_MENSAJE2@cadena:
   185                           	callstack 0
   186                           
   187                           ; 1 bytes @ 0x3
   188   000504                     	ds	1
   189   000505                     ??_LCD_INIT:
   190   000505                     ??_ESCRIBE_MENSAJE2:
   191   000505                     ??___fltol:
   192   000505                     ??___xxtofl:
   193   000505                     POS_CURSOR@fila:
   194                           	callstack 0
   195   000505                     ___lwmod@counter:
   196                           	callstack 0
   197                           
   198                           ; 1 bytes @ 0x4
   199   000505                     	ds	1
   200   000506                     ?___lwdiv:
   201                           	callstack 0
   202   000506                     ESCRIBE_MENSAJE2@tam:
   203                           	callstack 0
   204   000506                     ___lwdiv@dividend:
   205                           	callstack 0
   206                           
   207                           ; 2 bytes @ 0x5
   208   000506                     	ds	1
   209   000507                     ESCRIBE_MENSAJE2@i:
   210                           	callstack 0
   211                           
   212                           ; 1 bytes @ 0x6
   213   000507                     	ds	1
   214   000508                     ___lwdiv@divisor:
   215                           	callstack 0
   216                           
   217                           ; 2 bytes @ 0x7
   218   000508                     	ds	1
   219   000509                     ___fltol@sign1:
   220                           	callstack 0
   221   000509                     ___xxtofl@sign:
   222                           	callstack 0
   223                           
   224                           ; 1 bytes @ 0x8
   225   000509                     	ds	1
   226   00050A                     ___fltol@exp1:
   227                           	callstack 0
   228   00050A                     ___xxtofl@exp:
   229                           	callstack 0
   230   00050A                     ___lwdiv@quotient:
   231                           	callstack 0
   232                           
   233                           ; 2 bytes @ 0x9
   234   00050A                     	ds	1
   235   00050B                     ___xxtofl@arg:
   236                           	callstack 0
   237                           
   238                           ; 4 bytes @ 0xA
   239   00050B                     	ds	1
   240   00050C                     ___lwdiv@counter:
   241                           	callstack 0
   242                           
   243                           ; 1 bytes @ 0xB
   244   00050C                     	ds	3
   245   00050F                     ?___flmul:
   246                           	callstack 0
   247   00050F                     ___flmul@b:
   248                           	callstack 0
   249                           
   250                           ; 4 bytes @ 0xE
   251   00050F                     	ds	4
   252   000513                     ___flmul@a:
   253                           	callstack 0
   254                           
   255                           ; 4 bytes @ 0x12
   256   000513                     	ds	4
   257   000517                     ??___flmul:
   258                           
   259                           ; 1 bytes @ 0x16
   260   000517                     	ds	4
   261   00051B                     ___flmul@sign:
   262                           	callstack 0
   263                           
   264                           ; 1 bytes @ 0x1A
   265   00051B                     	ds	1
   266   00051C                     ___flmul@aexp:
   267                           	callstack 0
   268                           
   269                           ; 1 bytes @ 0x1B
   270   00051C                     	ds	1
   271   00051D                     ___flmul@grs:
   272                           	callstack 0
   273                           
   274                           ; 4 bytes @ 0x1C
   275   00051D                     	ds	4
   276   000521                     ___flmul@bexp:
   277                           	callstack 0
   278                           
   279                           ; 1 bytes @ 0x20
   280   000521                     	ds	1
   281   000522                     ___flmul@prod:
   282                           	callstack 0
   283                           
   284                           ; 4 bytes @ 0x21
   285   000522                     	ds	4
   286   000526                     ___flmul@temp:
   287                           	callstack 0
   288                           
   289                           ; 2 bytes @ 0x25
   290   000526                     	ds	2
   291   000528                     ?_tomamuestra_ADC:
   292                           	callstack 0
   293                           
   294                           ; 2 bytes @ 0x27
   295   000528                     	ds	2
   296   00052A                     ??_tomamuestra_ADC:
   297                           
   298                           ; 1 bytes @ 0x29
   299   00052A                     	ds	2
   300   00052C                     tomamuestra_ADC@temporal:
   301                           	callstack 0
   302                           
   303                           ; 4 bytes @ 0x2B
   304   00052C                     	ds	4
   305   000530                     tomamuestra_ADC@canal:
   306                           	callstack 0
   307                           
   308                           ; 1 bytes @ 0x2F
   309   000530                     	ds	1
   310   000531                     tomamuestra_ADC@lectura:
   311                           	callstack 0
   312                           
   313                           ; 2 bytes @ 0x30
   314   000531                     	ds	2
   315   000533                     LCD_ESCRIBE_VAR_INT@numero:
   316                           	callstack 0
   317                           
   318                           ; 2 bytes @ 0x32
   319   000533                     	ds	2
   320   000535                     LCD_ESCRIBE_VAR_INT@n_digitos:
   321                           	callstack 0
   322                           
   323                           ; 1 bytes @ 0x34
   324   000535                     	ds	1
   325   000536                     ??_LCD_ESCRIBE_VAR_INT:
   326                           
   327                           ; 1 bytes @ 0x35
   328   000536                     	ds	2
   329   000538                     LCD_ESCRIBE_VAR_INT@d_millar:
   330                           	callstack 0
   331                           
   332                           ; 1 bytes @ 0x37
   333   000538                     	ds	1
   334   000539                     LCD_ESCRIBE_VAR_INT@millar:
   335                           	callstack 0
   336                           
   337                           ; 1 bytes @ 0x38
   338   000539                     	ds	1
   339   00053A                     LCD_ESCRIBE_VAR_INT@centena:
   340                           	callstack 0
   341                           
   342                           ; 1 bytes @ 0x39
   343   00053A                     	ds	1
   344   00053B                     LCD_ESCRIBE_VAR_INT@decena:
   345                           	callstack 0
   346                           
   347                           ; 1 bytes @ 0x3A
   348   00053B                     	ds	1
   349   00053C                     LCD_ESCRIBE_VAR_INT@unidad:
   350                           	callstack 0
   351                           
   352                           ; 1 bytes @ 0x3B
   353   00053C                     	ds	1
   354   00053D                     
   355                           ; 1 bytes @ 0x3C
   356 ;;
   357 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   358 ;;
   359 ;; *************** function _main *****************
   360 ;; Defined at:
   361 ;;		line 44 in file "maincode.c"
   362 ;; Parameters:    Size  Location     Type
   363 ;;		None
   364 ;; Auto vars:     Size  Location     Type
   365 ;;		None
   366 ;; Return value:  Size  Location     Type
   367 ;;                  1    wreg      void 
   368 ;; Registers used:
   369 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   370 ;; Tracked objects:
   371 ;;		On entry : 0/0
   372 ;;		On exit  : 0/0
   373 ;;		Unchanged: 0/0
   374 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   375 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   376 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   377 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   378 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   379 ;;Total ram usage:        0 bytes
   380 ;; Hardware stack levels required when called: 5
   381 ;; This function calls:
   382 ;;		_ESCRIBE_MENSAJE2
   383 ;;		_LCD_ESCRIBE_VAR_INT
   384 ;;		_POS_CURSOR
   385 ;;		_configuro
   386 ;;		_tomamuestra_ADC
   387 ;; This function is called by:
   388 ;;		Startup code after reset
   389 ;; This function uses a non-reentrant model
   390 ;;
   391                           
   392                           	psect	text0
   393   002E10                     __ptext0:
   394                           	callstack 0
   395   002E10                     _main:
   396                           	callstack 122
   397                           
   398                           ;maincode.c: 45:     configuro();
   399                           
   400                           ;incstack = 0
   401   002E10  EC71  F016         	call	_configuro	;wreg free
   402                           
   403                           ;maincode.c: 46:     POS_CURSOR(1,0);
   404   002E14  0E00               	movlw	0
   405   002E16  6E04               	movwf	POS_CURSOR@columna^(0+1280),c
   406   002E18  0E01               	movlw	1
   407   002E1A  ECC3  F016         	call	_POS_CURSOR
   408                           
   409                           ;maincode.c: 47:     ESCRIBE_MENSAJE2("Los Santos");
   410   002E1E  0E01               	movlw	low STR_1
   411   002E20  6E04               	movwf	ESCRIBE_MENSAJE2@cadena^(0+1280),c
   412   002E22  EC47  F017         	call	_ESCRIBE_MENSAJE2	;wreg free
   413   002E26                     l1742:
   414                           
   415                           ;maincode.c: 49:         POS_CURSOR(2,0);
   416   002E26  0E00               	movlw	0
   417   002E28  6E04               	movwf	POS_CURSOR@columna^(0+1280),c
   418   002E2A  0E02               	movlw	2
   419   002E2C  ECC3  F016         	call	_POS_CURSOR
   420                           
   421                           ;maincode.c: 50:         ESCRIBE_MENSAJE2("ADC CH0:");
   422   002E30  0E0C               	movlw	low STR_2
   423   002E32  6E04               	movwf	ESCRIBE_MENSAJE2@cadena^(0+1280),c
   424   002E34  EC47  F017         	call	_ESCRIBE_MENSAJE2	;wreg free
   425                           
   426                           ;maincode.c: 51:         LCD_ESCRIBE_VAR_INT(tomamuestra_ADC(0), 4);
   427   002E38  0E00               	movlw	0
   428   002E3A  ECD2  F015         	call	_tomamuestra_ADC
   429   002E3E  C528  F533         	movff	?_tomamuestra_ADC,LCD_ESCRIBE_VAR_INT@numero
   430   002E42  C529  F534         	movff	?_tomamuestra_ADC+1,LCD_ESCRIBE_VAR_INT@numero+1
   431   002E46  0E04               	movlw	4
   432   002E48  6E35               	movwf	LCD_ESCRIBE_VAR_INT@n_digitos^(0+1280),c
   433   002E4A  EC21  F014         	call	_LCD_ESCRIBE_VAR_INT	;wreg free
   434   002E4E  D7EB               	goto	l1742
   435   002E50                     __end_of_main:
   436                           	callstack 0
   437                           
   438 ;; *************** function _tomamuestra_ADC *****************
   439 ;; Defined at:
   440 ;;		line 32 in file "maincode.c"
   441 ;; Parameters:    Size  Location     Type
   442 ;;  canal           1    wreg     unsigned char 
   443 ;; Auto vars:     Size  Location     Type
   444 ;;  canal           1   47[COMRAM] unsigned char 
   445 ;;  temporal        4   43[COMRAM] float 
   446 ;;  lectura         2   48[COMRAM] unsigned int 
   447 ;; Return value:  Size  Location     Type
   448 ;;                  2   39[COMRAM] unsigned int 
   449 ;; Registers used:
   450 ;;		wreg, status,2, status,0, prodl, prodh, cstack
   451 ;; Tracked objects:
   452 ;;		On entry : 0/0
   453 ;;		On exit  : 3F/3
   454 ;;		Unchanged: 0/0
   455 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   456 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   457 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   458 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   459 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   460 ;;Total ram usage:       11 bytes
   461 ;; Hardware stack levels used: 1
   462 ;; Hardware stack levels required when called: 1
   463 ;; This function calls:
   464 ;;		___flmul
   465 ;;		___fltol
   466 ;;		___xxtofl
   467 ;; This function is called by:
   468 ;;		_main
   469 ;; This function uses a non-reentrant model
   470 ;;
   471                           
   472                           	psect	text1
   473   002BA4                     __ptext1:
   474                           	callstack 0
   475   002BA4                     _tomamuestra_ADC:
   476                           	callstack 125
   477                           
   478                           ;incstack = 0
   479                           ;tomamuestra_ADC@canal stored from wreg
   480   002BA4  6E30               	movwf	tomamuestra_ADC@canal^(0+1280),c
   481                           
   482                           ;maincode.c: 34:     float temporal;;maincode.c: 35:     ADPCH = canal;
   483   002BA6  C530  F3EC         	movff	tomamuestra_ADC@canal,1004	;volatile
   484                           
   485                           ;maincode.c: 36:     ADCON0bits.GO = 1;
   486   002BAA  0103               	movlb	3	; () banked
   487   002BAC  81F3               	bsf	243,0,b	;volatile
   488   002BAE                     l50:
   489                           
   490                           ; BSR set to: 3
   491   002BAE  B1F3               	btfsc	243,0,b	;volatile
   492   002BB0  D7FE               	goto	l50
   493                           
   494                           ; BSR set to: 3
   495                           ;maincode.c: 38:     lectura = (ADRESH << 8) + ADRESL;
   496   002BB2  51EB               	movf	235,w,b	;volatile
   497   002BB4  6E2B               	movwf	(??_tomamuestra_ADC+1)^(0+1280),c
   498   002BB6  6A2A               	clrf	??_tomamuestra_ADC^(0+1280),c
   499   002BB8  51EA               	movf	234,w,b	;volatile
   500   002BBA  242A               	addwf	??_tomamuestra_ADC^(0+1280),w,c
   501   002BBC  6E31               	movwf	tomamuestra_ADC@lectura^(0+1280),c
   502   002BBE  0E00               	movlw	0
   503   002BC0  202B               	addwfc	(??_tomamuestra_ADC+1)^(0+1280),w,c
   504   002BC2  6E32               	movwf	(tomamuestra_ADC@lectura+1)^(0+1280),c
   505                           
   506                           ; BSR set to: 3
   507                           ;maincode.c: 39:     temporal = lectura * 0.061;
   508   002BC4  C531  F501         	movff	tomamuestra_ADC@lectura,___xxtofl@val
   509   002BC8  C532  F502         	movff	tomamuestra_ADC@lectura+1,___xxtofl@val+1
   510   002BCC  6A03               	clrf	(___xxtofl@val+2)^(0+1280),c
   511   002BCE  6A04               	clrf	(___xxtofl@val+3)^(0+1280),c
   512   002BD0  0E00               	movlw	0
   513   002BD2  ECD5  F014         	call	___xxtofl
   514   002BD6  C501  F50F         	movff	?___xxtofl,___flmul@b
   515   002BDA  C502  F510         	movff	?___xxtofl+1,___flmul@b+1
   516   002BDE  C503  F511         	movff	?___xxtofl+2,___flmul@b+2
   517   002BE2  C504  F512         	movff	?___xxtofl+3,___flmul@b+3
   518   002BE6  0E23               	movlw	35
   519   002BE8  6E13               	movwf	___flmul@a^(0+1280),c
   520   002BEA  0EDB               	movlw	219
   521   002BEC  6E14               	movwf	(___flmul@a+1)^(0+1280),c
   522   002BEE  0E79               	movlw	121
   523   002BF0  6E15               	movwf	(___flmul@a+2)^(0+1280),c
   524   002BF2  0E3D               	movlw	61
   525   002BF4  6E16               	movwf	(___flmul@a+3)^(0+1280),c
   526   002BF6  EC8B  F012         	call	___flmul	;wreg free
   527   002BFA  C50F  F52C         	movff	?___flmul,tomamuestra_ADC@temporal
   528   002BFE  C510  F52D         	movff	?___flmul+1,tomamuestra_ADC@temporal+1
   529   002C02  C511  F52E         	movff	?___flmul+2,tomamuestra_ADC@temporal+2
   530   002C06  C512  F52F         	movff	?___flmul+3,tomamuestra_ADC@temporal+3
   531                           
   532                           ;maincode.c: 40:     CCPR1H = temporal;
   533   002C0A  C52C  F501         	movff	tomamuestra_ADC@temporal,___fltol@f1
   534   002C0E  C52D  F502         	movff	tomamuestra_ADC@temporal+1,___fltol@f1+1
   535   002C12  C52E  F503         	movff	tomamuestra_ADC@temporal+2,___fltol@f1+2
   536   002C16  C52F  F504         	movff	tomamuestra_ADC@temporal+3,___fltol@f1+3
   537   002C1A  EC75  F015         	call	___fltol	;wreg free
   538   002C1E  5001               	movf	?___fltol^(0+1280),w,c
   539   002C20  0103               	movlb	3	; () banked
   540   002C22  6F41               	movwf	65,b	;volatile
   541                           
   542                           ; BSR set to: 3
   543                           ;maincode.c: 41:     return lectura;
   544   002C24  C531  F528         	movff	tomamuestra_ADC@lectura,?_tomamuestra_ADC
   545   002C28  C532  F529         	movff	tomamuestra_ADC@lectura+1,?_tomamuestra_ADC+1
   546                           
   547                           ; BSR set to: 3
   548   002C2C  0012               	return		;funcret
   549   002C2E                     __end_of_tomamuestra_ADC:
   550                           	callstack 0
   551                           
   552 ;; *************** function ___xxtofl *****************
   553 ;; Defined at:
   554 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\xxtofl.c"
   555 ;; Parameters:    Size  Location     Type
   556 ;;  sign            1    wreg     unsigned char 
   557 ;;  val             4    0[COMRAM] long 
   558 ;; Auto vars:     Size  Location     Type
   559 ;;  sign            1    8[COMRAM] unsigned char 
   560 ;;  arg             4   10[COMRAM] unsigned long 
   561 ;;  exp             1    9[COMRAM] unsigned char 
   562 ;; Return value:  Size  Location     Type
   563 ;;                  4    0[COMRAM] unsigned char 
   564 ;; Registers used:
   565 ;;		wreg, status,2, status,0
   566 ;; Tracked objects:
   567 ;;		On entry : 3F/3
   568 ;;		On exit  : 0/0
   569 ;;		Unchanged: 0/0
   570 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   571 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   572 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   573 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   574 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   575 ;;Total ram usage:       14 bytes
   576 ;; Hardware stack levels used: 1
   577 ;; This function calls:
   578 ;;		Nothing
   579 ;; This function is called by:
   580 ;;		_tomamuestra_ADC
   581 ;; This function uses a non-reentrant model
   582 ;;
   583                           
   584                           	psect	text2
   585   0029AA                     __ptext2:
   586                           	callstack 0
   587   0029AA                     ___xxtofl:
   588                           	callstack 125
   589                           
   590                           ; BSR set to: 3
   591                           ;incstack = 0
   592                           ;___xxtofl@sign stored from wreg
   593   0029AA  6E09               	movwf	___xxtofl@sign^(0+1280),c
   594   0029AC  5009               	movf	___xxtofl@sign^(0+1280),w,c
   595   0029AE  A4D8               	btfss	status,2,c
   596   0029B0  AE04               	btfss	(___xxtofl@val+3)^(0+1280),7,c
   597   0029B2  D01A               	goto	l850
   598   0029B4  C501  F505         	movff	___xxtofl@val,??___xxtofl
   599   0029B8  C502  F506         	movff	___xxtofl@val+1,??___xxtofl+1
   600   0029BC  C503  F507         	movff	___xxtofl@val+2,??___xxtofl+2
   601   0029C0  C504  F508         	movff	___xxtofl@val+3,??___xxtofl+3
   602   0029C4  1E05               	comf	??___xxtofl^(0+1280),f,c
   603   0029C6  1E06               	comf	(??___xxtofl+1)^(0+1280),f,c
   604   0029C8  1E07               	comf	(??___xxtofl+2)^(0+1280),f,c
   605   0029CA  1E08               	comf	(??___xxtofl+3)^(0+1280),f,c
   606   0029CC  2A05               	incf	??___xxtofl^(0+1280),f,c
   607   0029CE  0E00               	movlw	0
   608   0029D0  2206               	addwfc	(??___xxtofl+1)^(0+1280),f,c
   609   0029D2  2207               	addwfc	(??___xxtofl+2)^(0+1280),f,c
   610   0029D4  2208               	addwfc	(??___xxtofl+3)^(0+1280),f,c
   611   0029D6  C505  F50B         	movff	??___xxtofl,___xxtofl@arg
   612   0029DA  C506  F50C         	movff	??___xxtofl+1,___xxtofl@arg+1
   613   0029DE  C507  F50D         	movff	??___xxtofl+2,___xxtofl@arg+2
   614   0029E2  C508  F50E         	movff	??___xxtofl+3,___xxtofl@arg+3
   615   0029E6  D008               	goto	l1634
   616   0029E8                     l850:
   617   0029E8  C501  F50B         	movff	___xxtofl@val,___xxtofl@arg
   618   0029EC  C502  F50C         	movff	___xxtofl@val+1,___xxtofl@arg+1
   619   0029F0  C503  F50D         	movff	___xxtofl@val+2,___xxtofl@arg+2
   620   0029F4  C504  F50E         	movff	___xxtofl@val+3,___xxtofl@arg+3
   621   0029F8                     l1634:
   622   0029F8  5001               	movf	___xxtofl@val^(0+1280),w,c
   623   0029FA  1002               	iorwf	(___xxtofl@val+1)^(0+1280),w,c
   624   0029FC  1003               	iorwf	(___xxtofl@val+2)^(0+1280),w,c
   625   0029FE  1004               	iorwf	(___xxtofl@val+3)^(0+1280),w,c
   626   002A00  A4D8               	btfss	status,2,c
   627   002A02  D009               	goto	l1640
   628   002A04  0E00               	movlw	0
   629   002A06  6E01               	movwf	?___xxtofl^(0+1280),c
   630   002A08  0E00               	movlw	0
   631   002A0A  6E02               	movwf	(?___xxtofl+1)^(0+1280),c
   632   002A0C  0E00               	movlw	0
   633   002A0E  6E03               	movwf	(?___xxtofl+2)^(0+1280),c
   634   002A10  0E00               	movlw	0
   635   002A12  6E04               	movwf	(?___xxtofl+3)^(0+1280),c
   636   002A14  0012               	return	
   637   002A16                     l1640:
   638   002A16  0E96               	movlw	150
   639   002A18  6E0A               	movwf	___xxtofl@exp^(0+1280),c
   640   002A1A  D006               	goto	l1644
   641   002A1C                     l1642:
   642   002A1C  2A0A               	incf	___xxtofl@exp^(0+1280),f,c
   643   002A1E  90D8               	bcf	status,0,c
   644   002A20  320E               	rrcf	(___xxtofl@arg+3)^(0+1280),f,c
   645   002A22  320D               	rrcf	(___xxtofl@arg+2)^(0+1280),f,c
   646   002A24  320C               	rrcf	(___xxtofl@arg+1)^(0+1280),f,c
   647   002A26  320B               	rrcf	___xxtofl@arg^(0+1280),f,c
   648   002A28                     l1644:
   649   002A28  0E00               	movlw	0
   650   002A2A  140B               	andwf	___xxtofl@arg^(0+1280),w,c
   651   002A2C  6E05               	movwf	??___xxtofl^(0+1280),c
   652   002A2E  0E00               	movlw	0
   653   002A30  140C               	andwf	(___xxtofl@arg+1)^(0+1280),w,c
   654   002A32  6E06               	movwf	(??___xxtofl+1)^(0+1280),c
   655   002A34  0E00               	movlw	0
   656   002A36  140D               	andwf	(___xxtofl@arg+2)^(0+1280),w,c
   657   002A38  6E07               	movwf	(??___xxtofl+2)^(0+1280),c
   658   002A3A  0EFE               	movlw	254
   659   002A3C  140E               	andwf	(___xxtofl@arg+3)^(0+1280),w,c
   660   002A3E  6E08               	movwf	(??___xxtofl+3)^(0+1280),c
   661   002A40  5005               	movf	??___xxtofl^(0+1280),w,c
   662   002A42  1006               	iorwf	(??___xxtofl+1)^(0+1280),w,c
   663   002A44  1007               	iorwf	(??___xxtofl+2)^(0+1280),w,c
   664   002A46  1008               	iorwf	(??___xxtofl+3)^(0+1280),w,c
   665   002A48  B4D8               	btfsc	status,2,c
   666   002A4A  D00D               	goto	l857
   667   002A4C  D7E7               	goto	l1642
   668   002A4E                     l1646:
   669   002A4E  2A0A               	incf	___xxtofl@exp^(0+1280),f,c
   670   002A50  0E01               	movlw	1
   671   002A52  260B               	addwf	___xxtofl@arg^(0+1280),f,c
   672   002A54  0E00               	movlw	0
   673   002A56  220C               	addwfc	(___xxtofl@arg+1)^(0+1280),f,c
   674   002A58  220D               	addwfc	(___xxtofl@arg+2)^(0+1280),f,c
   675   002A5A  220E               	addwfc	(___xxtofl@arg+3)^(0+1280),f,c
   676   002A5C  90D8               	bcf	status,0,c
   677   002A5E  320E               	rrcf	(___xxtofl@arg+3)^(0+1280),f,c
   678   002A60  320D               	rrcf	(___xxtofl@arg+2)^(0+1280),f,c
   679   002A62  320C               	rrcf	(___xxtofl@arg+1)^(0+1280),f,c
   680   002A64  320B               	rrcf	___xxtofl@arg^(0+1280),f,c
   681   002A66                     l857:
   682   002A66  0E00               	movlw	0
   683   002A68  140B               	andwf	___xxtofl@arg^(0+1280),w,c
   684   002A6A  6E05               	movwf	??___xxtofl^(0+1280),c
   685   002A6C  0E00               	movlw	0
   686   002A6E  140C               	andwf	(___xxtofl@arg+1)^(0+1280),w,c
   687   002A70  6E06               	movwf	(??___xxtofl+1)^(0+1280),c
   688   002A72  0E00               	movlw	0
   689   002A74  140D               	andwf	(___xxtofl@arg+2)^(0+1280),w,c
   690   002A76  6E07               	movwf	(??___xxtofl+2)^(0+1280),c
   691   002A78  0EFF               	movlw	255
   692   002A7A  140E               	andwf	(___xxtofl@arg+3)^(0+1280),w,c
   693   002A7C  6E08               	movwf	(??___xxtofl+3)^(0+1280),c
   694   002A7E  5005               	movf	??___xxtofl^(0+1280),w,c
   695   002A80  1006               	iorwf	(??___xxtofl+1)^(0+1280),w,c
   696   002A82  1007               	iorwf	(??___xxtofl+2)^(0+1280),w,c
   697   002A84  1008               	iorwf	(??___xxtofl+3)^(0+1280),w,c
   698   002A86  B4D8               	btfsc	status,2,c
   699   002A88  D007               	goto	l1654
   700   002A8A  D7E1               	goto	l1646
   701   002A8C                     l1652:
   702   002A8C  060A               	decf	___xxtofl@exp^(0+1280),f,c
   703   002A8E  90D8               	bcf	status,0,c
   704   002A90  360B               	rlcf	___xxtofl@arg^(0+1280),f,c
   705   002A92  360C               	rlcf	(___xxtofl@arg+1)^(0+1280),f,c
   706   002A94  360D               	rlcf	(___xxtofl@arg+2)^(0+1280),f,c
   707   002A96  360E               	rlcf	(___xxtofl@arg+3)^(0+1280),f,c
   708   002A98                     l1654:
   709   002A98  BE0D               	btfsc	(___xxtofl@arg+2)^(0+1280),7,c
   710   002A9A  D003               	goto	u900
   711   002A9C  0E02               	movlw	2
   712   002A9E  600A               	cpfslt	___xxtofl@exp^(0+1280),c
   713   002AA0  D7F5               	goto	l1652
   714   002AA2                     u900:
   715   002AA2  A00A               	btfss	___xxtofl@exp^(0+1280),0,c
   716   002AA4  9E0D               	bcf	(___xxtofl@arg+2)^(0+1280),7,c
   717   002AA6  90D8               	bcf	status,0,c
   718   002AA8  320A               	rrcf	___xxtofl@exp^(0+1280),f,c
   719   002AAA  C50A  F505         	movff	___xxtofl@exp,??___xxtofl
   720   002AAE  6A06               	clrf	(??___xxtofl+1)^(0+1280),c
   721   002AB0  6A07               	clrf	(??___xxtofl+2)^(0+1280),c
   722   002AB2  6A08               	clrf	(??___xxtofl+3)^(0+1280),c
   723   002AB4  C505  F508         	movff	??___xxtofl,??___xxtofl+3
   724   002AB8  6A07               	clrf	(??___xxtofl+2)^(0+1280),c
   725   002ABA  6A06               	clrf	(??___xxtofl+1)^(0+1280),c
   726   002ABC  6A05               	clrf	??___xxtofl^(0+1280),c
   727   002ABE  5005               	movf	??___xxtofl^(0+1280),w,c
   728   002AC0  120B               	iorwf	___xxtofl@arg^(0+1280),f,c
   729   002AC2  5006               	movf	(??___xxtofl+1)^(0+1280),w,c
   730   002AC4  120C               	iorwf	(___xxtofl@arg+1)^(0+1280),f,c
   731   002AC6  5007               	movf	(??___xxtofl+2)^(0+1280),w,c
   732   002AC8  120D               	iorwf	(___xxtofl@arg+2)^(0+1280),f,c
   733   002ACA  5008               	movf	(??___xxtofl+3)^(0+1280),w,c
   734   002ACC  120E               	iorwf	(___xxtofl@arg+3)^(0+1280),f,c
   735   002ACE  5009               	movf	___xxtofl@sign^(0+1280),w,c
   736   002AD0  A4D8               	btfss	status,2,c
   737   002AD2  AE04               	btfss	(___xxtofl@val+3)^(0+1280),7,c
   738   002AD4  D001               	goto	l1670
   739   002AD6  8E0E               	bsf	(___xxtofl@arg+3)^(0+1280),7,c
   740   002AD8                     l1670:
   741   002AD8  C50B  F501         	movff	___xxtofl@arg,?___xxtofl
   742   002ADC  C50C  F502         	movff	___xxtofl@arg+1,?___xxtofl+1
   743   002AE0  C50D  F503         	movff	___xxtofl@arg+2,?___xxtofl+2
   744   002AE4  C50E  F504         	movff	___xxtofl@arg+3,?___xxtofl+3
   745   002AE8  0012               	return		;funcret
   746   002AEA                     __end_of___xxtofl:
   747                           	callstack 0
   748                           
   749 ;; *************** function ___fltol *****************
   750 ;; Defined at:
   751 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\fltol.c"
   752 ;; Parameters:    Size  Location     Type
   753 ;;  f1              4    0[COMRAM] unsigned char 
   754 ;; Auto vars:     Size  Location     Type
   755 ;;  exp1            1    9[COMRAM] unsigned char 
   756 ;;  sign1           1    8[COMRAM] unsigned char 
   757 ;; Return value:  Size  Location     Type
   758 ;;                  4    0[COMRAM] long 
   759 ;; Registers used:
   760 ;;		wreg, status,2, status,0
   761 ;; Tracked objects:
   762 ;;		On entry : 0/3
   763 ;;		On exit  : 0/0
   764 ;;		Unchanged: 0/0
   765 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   766 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   767 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   768 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   769 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   770 ;;Total ram usage:       10 bytes
   771 ;; Hardware stack levels used: 1
   772 ;; This function calls:
   773 ;;		Nothing
   774 ;; This function is called by:
   775 ;;		_tomamuestra_ADC
   776 ;; This function uses a non-reentrant model
   777 ;;
   778                           
   779                           	psect	text3
   780   002AEA                     __ptext3:
   781                           	callstack 0
   782   002AEA                     ___fltol:
   783                           	callstack 125
   784                           
   785                           ;incstack = 0
   786   002AEA  3403               	rlcf	(___fltol@f1+2)^(0+1280),w,c
   787   002AEC  3404               	rlcf	(___fltol@f1+3)^(0+1280),w,c
   788   002AEE  6E0A               	movwf	___fltol@exp1^(0+1280),c
   789   002AF0  500A               	movf	___fltol@exp1^(0+1280),w,c
   790   002AF2  A4D8               	btfss	status,2,c
   791   002AF4  D009               	goto	l1552
   792   002AF6                     u710:
   793   002AF6  0E00               	movlw	0
   794   002AF8  6E01               	movwf	?___fltol^(0+1280),c
   795   002AFA  0E00               	movlw	0
   796   002AFC  6E02               	movwf	(?___fltol+1)^(0+1280),c
   797   002AFE  0E00               	movlw	0
   798   002B00  6E03               	movwf	(?___fltol+2)^(0+1280),c
   799   002B02  0E00               	movlw	0
   800   002B04  6E04               	movwf	(?___fltol+3)^(0+1280),c
   801   002B06  0012               	return	
   802   002B08                     l1552:
   803   002B08  C501  F505         	movff	___fltol@f1,??___fltol
   804   002B0C  C502  F506         	movff	___fltol@f1+1,??___fltol+1
   805   002B10  C503  F507         	movff	___fltol@f1+2,??___fltol+2
   806   002B14  C504  F508         	movff	___fltol@f1+3,??___fltol+3
   807   002B18  0E20               	movlw	32
   808   002B1A  D005               	goto	u720
   809   002B1C                     u725:
   810   002B1C  90D8               	bcf	status,0,c
   811   002B1E  3208               	rrcf	(??___fltol+3)^(0+1280),f,c
   812   002B20  3207               	rrcf	(??___fltol+2)^(0+1280),f,c
   813   002B22  3206               	rrcf	(??___fltol+1)^(0+1280),f,c
   814   002B24  3205               	rrcf	??___fltol^(0+1280),f,c
   815   002B26                     u720:
   816   002B26  2EE8               	decfsz	wreg,f,c
   817   002B28  D7F9               	goto	u725
   818   002B2A  5005               	movf	??___fltol^(0+1280),w,c
   819   002B2C  6E09               	movwf	___fltol@sign1^(0+1280),c
   820   002B2E  8E03               	bsf	(___fltol@f1+2)^(0+1280),7,c
   821   002B30  0EFF               	movlw	255
   822   002B32  1601               	andwf	___fltol@f1^(0+1280),f,c
   823   002B34  0EFF               	movlw	255
   824   002B36  1602               	andwf	(___fltol@f1+1)^(0+1280),f,c
   825   002B38  0EFF               	movlw	255
   826   002B3A  1603               	andwf	(___fltol@f1+2)^(0+1280),f,c
   827   002B3C  0E00               	movlw	0
   828   002B3E  1604               	andwf	(___fltol@f1+3)^(0+1280),f,c
   829   002B40  0E96               	movlw	150
   830   002B42  5E0A               	subwf	___fltol@exp1^(0+1280),f,c
   831   002B44  AE0A               	btfss	___fltol@exp1^(0+1280),7,c
   832   002B46  D00D               	goto	l1572
   833   002B48  500A               	movf	___fltol@exp1^(0+1280),w,c
   834   002B4A  0A80               	xorlw	128
   835   002B4C  0F97               	addlw	151
   836   002B4E  A0D8               	btfss	status,0,c
   837   002B50  D7D2               	goto	u710
   838   002B52                     l1568:
   839   002B52  90D8               	bcf	status,0,c
   840   002B54  3204               	rrcf	(___fltol@f1+3)^(0+1280),f,c
   841   002B56  3203               	rrcf	(___fltol@f1+2)^(0+1280),f,c
   842   002B58  3202               	rrcf	(___fltol@f1+1)^(0+1280),f,c
   843   002B5A  3201               	rrcf	___fltol@f1^(0+1280),f,c
   844   002B5C  3E0A               	incfsz	___fltol@exp1^(0+1280),f,c
   845   002B5E  D7F9               	goto	l1568
   846   002B60  D00D               	goto	u760
   847   002B62                     l1572:
   848   002B62  0E1F               	movlw	31
   849   002B64  640A               	cpfsgt	___fltol@exp1^(0+1280),c
   850   002B66  D007               	goto	l1580
   851   002B68  D7C6               	goto	u710
   852   002B6A                     l1578:
   853   002B6A  90D8               	bcf	status,0,c
   854   002B6C  3601               	rlcf	___fltol@f1^(0+1280),f,c
   855   002B6E  3602               	rlcf	(___fltol@f1+1)^(0+1280),f,c
   856   002B70  3603               	rlcf	(___fltol@f1+2)^(0+1280),f,c
   857   002B72  3604               	rlcf	(___fltol@f1+3)^(0+1280),f,c
   858   002B74  060A               	decf	___fltol@exp1^(0+1280),f,c
   859   002B76                     l1580:
   860   002B76  500A               	movf	___fltol@exp1^(0+1280),w,c
   861   002B78  A4D8               	btfss	status,2,c
   862   002B7A  D7F7               	goto	l1578
   863   002B7C                     u760:
   864   002B7C  5009               	movf	___fltol@sign1^(0+1280),w,c
   865   002B7E  B4D8               	btfsc	status,2,c
   866   002B80  D008               	goto	l1586
   867   002B82  1E04               	comf	(___fltol@f1+3)^(0+1280),f,c
   868   002B84  1E03               	comf	(___fltol@f1+2)^(0+1280),f,c
   869   002B86  1E02               	comf	(___fltol@f1+1)^(0+1280),f,c
   870   002B88  6C01               	negf	___fltol@f1^(0+1280),c
   871   002B8A  0E00               	movlw	0
   872   002B8C  2202               	addwfc	(___fltol@f1+1)^(0+1280),f,c
   873   002B8E  2203               	addwfc	(___fltol@f1+2)^(0+1280),f,c
   874   002B90  2204               	addwfc	(___fltol@f1+3)^(0+1280),f,c
   875   002B92                     l1586:
   876   002B92  C501  F501         	movff	___fltol@f1,?___fltol
   877   002B96  C502  F502         	movff	___fltol@f1+1,?___fltol+1
   878   002B9A  C503  F503         	movff	___fltol@f1+2,?___fltol+2
   879   002B9E  C504  F504         	movff	___fltol@f1+3,?___fltol+3
   880   002BA2  0012               	return		;funcret
   881   002BA4                     __end_of___fltol:
   882                           	callstack 0
   883                           
   884 ;; *************** function ___flmul *****************
   885 ;; Defined at:
   886 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcmul.c"
   887 ;; Parameters:    Size  Location     Type
   888 ;;  b               4   14[COMRAM] long 
   889 ;;  a               4   18[COMRAM] long 
   890 ;; Auto vars:     Size  Location     Type
   891 ;;  prod            4   33[COMRAM] struct .
   892 ;;  grs             4   28[COMRAM] unsigned long 
   893 ;;  temp            2   37[COMRAM] struct .
   894 ;;  bexp            1   32[COMRAM] unsigned char 
   895 ;;  aexp            1   27[COMRAM] unsigned char 
   896 ;;  sign            1   26[COMRAM] unsigned char 
   897 ;; Return value:  Size  Location     Type
   898 ;;                  4   14[COMRAM] unsigned char 
   899 ;; Registers used:
   900 ;;		wreg, status,2, status,0, prodl, prodh
   901 ;; Tracked objects:
   902 ;;		On entry : 0/3
   903 ;;		On exit  : 0/0
   904 ;;		Unchanged: 0/0
   905 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   906 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   907 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   908 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   909 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   910 ;;Total ram usage:       25 bytes
   911 ;; Hardware stack levels used: 1
   912 ;; This function calls:
   913 ;;		Nothing
   914 ;; This function is called by:
   915 ;;		_tomamuestra_ADC
   916 ;; This function uses a non-reentrant model
   917 ;;
   918                           
   919                           	psect	text4
   920   002516                     __ptext4:
   921                           	callstack 0
   922   002516                     ___flmul:
   923                           	callstack 125
   924                           
   925                           ;incstack = 0
   926   002516  5012               	movf	(___flmul@b+3)^(0+1280),w,c
   927   002518  0B80               	andlw	128
   928   00251A  6E1B               	movwf	___flmul@sign^(0+1280),c
   929   00251C  5012               	movf	(___flmul@b+3)^(0+1280),w,c
   930   00251E  2412               	addwf	(___flmul@b+3)^(0+1280),w,c
   931   002520  6E21               	movwf	___flmul@bexp^(0+1280),c
   932   002522  BE11               	btfsc	(___flmul@b+2)^(0+1280),7,c
   933   002524  8021               	bsf	___flmul@bexp^(0+1280),0,c
   934   002526  5021               	movf	___flmul@bexp^(0+1280),w,c
   935   002528  B4D8               	btfsc	status,2,c
   936   00252A  D00D               	goto	l1430
   937   00252C  2821               	incf	___flmul@bexp^(0+1280),w,c
   938   00252E  A4D8               	btfss	status,2,c
   939   002530  D008               	goto	l1428
   940   002532  0E00               	movlw	0
   941   002534  6E0F               	movwf	___flmul@b^(0+1280),c
   942   002536  0E00               	movlw	0
   943   002538  6E10               	movwf	(___flmul@b+1)^(0+1280),c
   944   00253A  0E00               	movlw	0
   945   00253C  6E11               	movwf	(___flmul@b+2)^(0+1280),c
   946   00253E  0E00               	movlw	0
   947   002540  6E12               	movwf	(___flmul@b+3)^(0+1280),c
   948   002542                     l1428:
   949   002542  8E11               	bsf	(___flmul@b+2)^(0+1280),7,c
   950   002544  D008               	goto	l1432
   951   002546                     l1430:
   952   002546  0E00               	movlw	0
   953   002548  6E0F               	movwf	___flmul@b^(0+1280),c
   954   00254A  0E00               	movlw	0
   955   00254C  6E10               	movwf	(___flmul@b+1)^(0+1280),c
   956   00254E  0E00               	movlw	0
   957   002550  6E11               	movwf	(___flmul@b+2)^(0+1280),c
   958   002552  0E00               	movlw	0
   959   002554  6E12               	movwf	(___flmul@b+3)^(0+1280),c
   960   002556                     l1432:
   961   002556  5016               	movf	(___flmul@a+3)^(0+1280),w,c
   962   002558  0B80               	andlw	128
   963   00255A  1A1B               	xorwf	___flmul@sign^(0+1280),f,c
   964   00255C  5016               	movf	(___flmul@a+3)^(0+1280),w,c
   965   00255E  2416               	addwf	(___flmul@a+3)^(0+1280),w,c
   966   002560  6E1C               	movwf	___flmul@aexp^(0+1280),c
   967   002562  BE15               	btfsc	(___flmul@a+2)^(0+1280),7,c
   968   002564  801C               	bsf	___flmul@aexp^(0+1280),0,c
   969   002566  501C               	movf	___flmul@aexp^(0+1280),w,c
   970   002568  B4D8               	btfsc	status,2,c
   971   00256A  D00D               	goto	l1448
   972   00256C  281C               	incf	___flmul@aexp^(0+1280),w,c
   973   00256E  A4D8               	btfss	status,2,c
   974   002570  D008               	goto	l1446
   975   002572  0E00               	movlw	0
   976   002574  6E13               	movwf	___flmul@a^(0+1280),c
   977   002576  0E00               	movlw	0
   978   002578  6E14               	movwf	(___flmul@a+1)^(0+1280),c
   979   00257A  0E00               	movlw	0
   980   00257C  6E15               	movwf	(___flmul@a+2)^(0+1280),c
   981   00257E  0E00               	movlw	0
   982   002580  6E16               	movwf	(___flmul@a+3)^(0+1280),c
   983   002582                     l1446:
   984   002582  8E15               	bsf	(___flmul@a+2)^(0+1280),7,c
   985   002584  D008               	goto	l809
   986   002586                     l1448:
   987   002586  0E00               	movlw	0
   988   002588  6E13               	movwf	___flmul@a^(0+1280),c
   989   00258A  0E00               	movlw	0
   990   00258C  6E14               	movwf	(___flmul@a+1)^(0+1280),c
   991   00258E  0E00               	movlw	0
   992   002590  6E15               	movwf	(___flmul@a+2)^(0+1280),c
   993   002592  0E00               	movlw	0
   994   002594  6E16               	movwf	(___flmul@a+3)^(0+1280),c
   995   002596                     l809:
   996   002596  501C               	movf	___flmul@aexp^(0+1280),w,c
   997   002598  B4D8               	btfsc	status,2,c
   998   00259A  D003               	goto	u600
   999   00259C  5021               	movf	___flmul@bexp^(0+1280),w,c
  1000   00259E  A4D8               	btfss	status,2,c
  1001   0025A0  D009               	goto	l1456
  1002   0025A2                     u600:
  1003   0025A2  0E00               	movlw	0
  1004   0025A4  6E0F               	movwf	?___flmul^(0+1280),c
  1005   0025A6  0E00               	movlw	0
  1006   0025A8  6E10               	movwf	(?___flmul+1)^(0+1280),c
  1007   0025AA  0E00               	movlw	0
  1008   0025AC  6E11               	movwf	(?___flmul+2)^(0+1280),c
  1009   0025AE  0E00               	movlw	0
  1010   0025B0  6E12               	movwf	(?___flmul+3)^(0+1280),c
  1011   0025B2  0012               	return	
  1012   0025B4                     l1456:
  1013   0025B4  5015               	movf	(___flmul@a+2)^(0+1280),w,c
  1014   0025B6  020F               	mulwf	___flmul@b^(0+1280),c
  1015   0025B8  C4F3 F526          	movff	prodl,___flmul@temp
  1016   0025BC  C4F4 F527          	movff	prodh,___flmul@temp+1
  1017   0025C0  5026               	movf	___flmul@temp^(0+1280),w,c
  1018   0025C2  6E1D               	movwf	___flmul@grs^(0+1280),c
  1019   0025C4  6A1E               	clrf	(___flmul@grs+1)^(0+1280),c
  1020   0025C6  6A1F               	clrf	(___flmul@grs+2)^(0+1280),c
  1021   0025C8  6A20               	clrf	(___flmul@grs+3)^(0+1280),c
  1022   0025CA  5027               	movf	(___flmul@temp+1)^(0+1280),w,c
  1023   0025CC  6E22               	movwf	___flmul@prod^(0+1280),c
  1024   0025CE  6A23               	clrf	(___flmul@prod+1)^(0+1280),c
  1025   0025D0  6A24               	clrf	(___flmul@prod+2)^(0+1280),c
  1026   0025D2  6A25               	clrf	(___flmul@prod+3)^(0+1280),c
  1027   0025D4  5014               	movf	(___flmul@a+1)^(0+1280),w,c
  1028   0025D6  0210               	mulwf	(___flmul@b+1)^(0+1280),c
  1029   0025D8  C4F3 F526          	movff	prodl,___flmul@temp
  1030   0025DC  C4F4 F527          	movff	prodh,___flmul@temp+1
  1031   0025E0  5026               	movf	___flmul@temp^(0+1280),w,c
  1032   0025E2  261D               	addwf	___flmul@grs^(0+1280),f,c
  1033   0025E4  0E00               	movlw	0
  1034   0025E6  221E               	addwfc	(___flmul@grs+1)^(0+1280),f,c
  1035   0025E8  221F               	addwfc	(___flmul@grs+2)^(0+1280),f,c
  1036   0025EA  2220               	addwfc	(___flmul@grs+3)^(0+1280),f,c
  1037   0025EC  5027               	movf	(___flmul@temp+1)^(0+1280),w,c
  1038   0025EE  2622               	addwf	___flmul@prod^(0+1280),f,c
  1039   0025F0  0E00               	movlw	0
  1040   0025F2  2223               	addwfc	(___flmul@prod+1)^(0+1280),f,c
  1041   0025F4  2224               	addwfc	(___flmul@prod+2)^(0+1280),f,c
  1042   0025F6  2225               	addwfc	(___flmul@prod+3)^(0+1280),f,c
  1043   0025F8  5013               	movf	___flmul@a^(0+1280),w,c
  1044   0025FA  0211               	mulwf	(___flmul@b+2)^(0+1280),c
  1045   0025FC  C4F3 F526          	movff	prodl,___flmul@temp
  1046   002600  C4F4 F527          	movff	prodh,___flmul@temp+1
  1047   002604  5026               	movf	___flmul@temp^(0+1280),w,c
  1048   002606  261D               	addwf	___flmul@grs^(0+1280),f,c
  1049   002608  0E00               	movlw	0
  1050   00260A  221E               	addwfc	(___flmul@grs+1)^(0+1280),f,c
  1051   00260C  221F               	addwfc	(___flmul@grs+2)^(0+1280),f,c
  1052   00260E  2220               	addwfc	(___flmul@grs+3)^(0+1280),f,c
  1053   002610  5027               	movf	(___flmul@temp+1)^(0+1280),w,c
  1054   002612  2622               	addwf	___flmul@prod^(0+1280),f,c
  1055   002614  0E00               	movlw	0
  1056   002616  2223               	addwfc	(___flmul@prod+1)^(0+1280),f,c
  1057   002618  2224               	addwfc	(___flmul@prod+2)^(0+1280),f,c
  1058   00261A  2225               	addwfc	(___flmul@prod+3)^(0+1280),f,c
  1059   00261C  C51F  F520         	movff	___flmul@grs+2,___flmul@grs+3
  1060   002620  C51E  F51F         	movff	___flmul@grs+1,___flmul@grs+2
  1061   002624  C51D  F51E         	movff	___flmul@grs,___flmul@grs+1
  1062   002628  6A1D               	clrf	___flmul@grs^(0+1280),c
  1063   00262A  5013               	movf	___flmul@a^(0+1280),w,c
  1064   00262C  0210               	mulwf	(___flmul@b+1)^(0+1280),c
  1065   00262E  C4F3 F526          	movff	prodl,___flmul@temp
  1066   002632  C4F4 F527          	movff	prodh,___flmul@temp+1
  1067   002636  5026               	movf	___flmul@temp^(0+1280),w,c
  1068   002638  261D               	addwf	___flmul@grs^(0+1280),f,c
  1069   00263A  5027               	movf	(___flmul@temp+1)^(0+1280),w,c
  1070   00263C  221E               	addwfc	(___flmul@grs+1)^(0+1280),f,c
  1071   00263E  0E00               	movlw	0
  1072   002640  221F               	addwfc	(___flmul@grs+2)^(0+1280),f,c
  1073   002642  0E00               	movlw	0
  1074   002644  2220               	addwfc	(___flmul@grs+3)^(0+1280),f,c
  1075   002646  5014               	movf	(___flmul@a+1)^(0+1280),w,c
  1076   002648  020F               	mulwf	___flmul@b^(0+1280),c
  1077   00264A  C4F3 F526          	movff	prodl,___flmul@temp
  1078   00264E  C4F4 F527          	movff	prodh,___flmul@temp+1
  1079   002652  5026               	movf	___flmul@temp^(0+1280),w,c
  1080   002654  261D               	addwf	___flmul@grs^(0+1280),f,c
  1081   002656  5027               	movf	(___flmul@temp+1)^(0+1280),w,c
  1082   002658  221E               	addwfc	(___flmul@grs+1)^(0+1280),f,c
  1083   00265A  0E00               	movlw	0
  1084   00265C  221F               	addwfc	(___flmul@grs+2)^(0+1280),f,c
  1085   00265E  0E00               	movlw	0
  1086   002660  2220               	addwfc	(___flmul@grs+3)^(0+1280),f,c
  1087   002662  C51F  F520         	movff	___flmul@grs+2,___flmul@grs+3
  1088   002666  C51E  F51F         	movff	___flmul@grs+1,___flmul@grs+2
  1089   00266A  C51D  F51E         	movff	___flmul@grs,___flmul@grs+1
  1090   00266E  6A1D               	clrf	___flmul@grs^(0+1280),c
  1091   002670  5013               	movf	___flmul@a^(0+1280),w,c
  1092   002672  020F               	mulwf	___flmul@b^(0+1280),c
  1093   002674  C4F3 F526          	movff	prodl,___flmul@temp
  1094   002678  C4F4 F527          	movff	prodh,___flmul@temp+1
  1095   00267C  5026               	movf	___flmul@temp^(0+1280),w,c
  1096   00267E  261D               	addwf	___flmul@grs^(0+1280),f,c
  1097   002680  5027               	movf	(___flmul@temp+1)^(0+1280),w,c
  1098   002682  221E               	addwfc	(___flmul@grs+1)^(0+1280),f,c
  1099   002684  0E00               	movlw	0
  1100   002686  221F               	addwfc	(___flmul@grs+2)^(0+1280),f,c
  1101   002688  0E00               	movlw	0
  1102   00268A  2220               	addwfc	(___flmul@grs+3)^(0+1280),f,c
  1103   00268C  5015               	movf	(___flmul@a+2)^(0+1280),w,c
  1104   00268E  0210               	mulwf	(___flmul@b+1)^(0+1280),c
  1105   002690  C4F3 F526          	movff	prodl,___flmul@temp
  1106   002694  C4F4 F527          	movff	prodh,___flmul@temp+1
  1107   002698  5026               	movf	___flmul@temp^(0+1280),w,c
  1108   00269A  2622               	addwf	___flmul@prod^(0+1280),f,c
  1109   00269C  5027               	movf	(___flmul@temp+1)^(0+1280),w,c
  1110   00269E  2223               	addwfc	(___flmul@prod+1)^(0+1280),f,c
  1111   0026A0  0E00               	movlw	0
  1112   0026A2  2224               	addwfc	(___flmul@prod+2)^(0+1280),f,c
  1113   0026A4  0E00               	movlw	0
  1114   0026A6  2225               	addwfc	(___flmul@prod+3)^(0+1280),f,c
  1115   0026A8  5014               	movf	(___flmul@a+1)^(0+1280),w,c
  1116   0026AA  0211               	mulwf	(___flmul@b+2)^(0+1280),c
  1117   0026AC  C4F3 F526          	movff	prodl,___flmul@temp
  1118   0026B0  C4F4 F527          	movff	prodh,___flmul@temp+1
  1119   0026B4  5026               	movf	___flmul@temp^(0+1280),w,c
  1120   0026B6  2622               	addwf	___flmul@prod^(0+1280),f,c
  1121   0026B8  5027               	movf	(___flmul@temp+1)^(0+1280),w,c
  1122   0026BA  2223               	addwfc	(___flmul@prod+1)^(0+1280),f,c
  1123   0026BC  0E00               	movlw	0
  1124   0026BE  2224               	addwfc	(___flmul@prod+2)^(0+1280),f,c
  1125   0026C0  0E00               	movlw	0
  1126   0026C2  2225               	addwfc	(___flmul@prod+3)^(0+1280),f,c
  1127   0026C4  5015               	movf	(___flmul@a+2)^(0+1280),w,c
  1128   0026C6  0211               	mulwf	(___flmul@b+2)^(0+1280),c
  1129   0026C8  C4F3 F526          	movff	prodl,___flmul@temp
  1130   0026CC  C4F4 F527          	movff	prodh,___flmul@temp+1
  1131   0026D0  5026               	movf	___flmul@temp^(0+1280),w,c
  1132   0026D2  6E17               	movwf	??___flmul^(0+1280),c
  1133   0026D4  5027               	movf	(___flmul@temp+1)^(0+1280),w,c
  1134   0026D6  6E18               	movwf	(??___flmul+1)^(0+1280),c
  1135   0026D8  6A19               	clrf	(??___flmul+2)^(0+1280),c
  1136   0026DA  6A1A               	clrf	(??___flmul+3)^(0+1280),c
  1137   0026DC  C519  F51A         	movff	??___flmul+2,??___flmul+3
  1138   0026E0  C518  F519         	movff	??___flmul+1,??___flmul+2
  1139   0026E4  C517  F518         	movff	??___flmul,??___flmul+1
  1140   0026E8  6A17               	clrf	??___flmul^(0+1280),c
  1141   0026EA  5017               	movf	??___flmul^(0+1280),w,c
  1142   0026EC  2622               	addwf	___flmul@prod^(0+1280),f,c
  1143   0026EE  5018               	movf	(??___flmul+1)^(0+1280),w,c
  1144   0026F0  2223               	addwfc	(___flmul@prod+1)^(0+1280),f,c
  1145   0026F2  5019               	movf	(??___flmul+2)^(0+1280),w,c
  1146   0026F4  2224               	addwfc	(___flmul@prod+2)^(0+1280),f,c
  1147   0026F6  501A               	movf	(??___flmul+3)^(0+1280),w,c
  1148   0026F8  2225               	addwfc	(___flmul@prod+3)^(0+1280),f,c
  1149   0026FA  5020               	movf	(___flmul@grs+3)^(0+1280),w,c
  1150   0026FC  2622               	addwf	___flmul@prod^(0+1280),f,c
  1151   0026FE  0E00               	movlw	0
  1152   002700  2223               	addwfc	(___flmul@prod+1)^(0+1280),f,c
  1153   002702  2224               	addwfc	(___flmul@prod+2)^(0+1280),f,c
  1154   002704  2225               	addwfc	(___flmul@prod+3)^(0+1280),f,c
  1155   002706  C51F  F520         	movff	___flmul@grs+2,___flmul@grs+3
  1156   00270A  C51E  F51F         	movff	___flmul@grs+1,___flmul@grs+2
  1157   00270E  C51D  F51E         	movff	___flmul@grs,___flmul@grs+1
  1158   002712  6A1D               	clrf	___flmul@grs^(0+1280),c
  1159   002714  501C               	movf	___flmul@aexp^(0+1280),w,c
  1160   002716  C521  F517         	movff	___flmul@bexp,??___flmul
  1161   00271A  6A18               	clrf	(??___flmul+1)^(0+1280),c
  1162   00271C  2617               	addwf	??___flmul^(0+1280),f,c
  1163   00271E  0E00               	movlw	0
  1164   002720  2218               	addwfc	(??___flmul+1)^(0+1280),f,c
  1165   002722  0E82               	movlw	130
  1166   002724  2417               	addwf	??___flmul^(0+1280),w,c
  1167   002726  6E26               	movwf	___flmul@temp^(0+1280),c
  1168   002728  0EFF               	movlw	255
  1169   00272A  2018               	addwfc	(??___flmul+1)^(0+1280),w,c
  1170   00272C  6E27               	movwf	(___flmul@temp+1)^(0+1280),c
  1171   00272E  D00F               	goto	l1504
  1172   002730                     l1498:
  1173   002730  90D8               	bcf	status,0,c
  1174   002732  3622               	rlcf	___flmul@prod^(0+1280),f,c
  1175   002734  3623               	rlcf	(___flmul@prod+1)^(0+1280),f,c
  1176   002736  3624               	rlcf	(___flmul@prod+2)^(0+1280),f,c
  1177   002738  3625               	rlcf	(___flmul@prod+3)^(0+1280),f,c
  1178   00273A  BE20               	btfsc	(___flmul@grs+3)^(0+1280),7,c
  1179   00273C  8022               	bsf	___flmul@prod^(0+1280),0,c
  1180   00273E  90D8               	bcf	status,0,c
  1181   002740  361D               	rlcf	___flmul@grs^(0+1280),f,c
  1182   002742  361E               	rlcf	(___flmul@grs+1)^(0+1280),f,c
  1183   002744  361F               	rlcf	(___flmul@grs+2)^(0+1280),f,c
  1184   002746  3620               	rlcf	(___flmul@grs+3)^(0+1280),f,c
  1185   002748  0626               	decf	___flmul@temp^(0+1280),f,c
  1186   00274A  A0D8               	btfss	status,0,c
  1187   00274C  0627               	decf	(___flmul@temp+1)^(0+1280),f,c
  1188   00274E                     l1504:
  1189   00274E  AE24               	btfss	(___flmul@prod+2)^(0+1280),7,c
  1190   002750  D7EF               	goto	l1498
  1191   002752  0E00               	movlw	0
  1192   002754  6E1C               	movwf	___flmul@aexp^(0+1280),c
  1193   002756  AE20               	btfss	(___flmul@grs+3)^(0+1280),7,c
  1194   002758  D017               	goto	l818
  1195   00275A  0EFF               	movlw	255
  1196   00275C  141D               	andwf	___flmul@grs^(0+1280),w,c
  1197   00275E  6E17               	movwf	??___flmul^(0+1280),c
  1198   002760  0EFF               	movlw	255
  1199   002762  141E               	andwf	(___flmul@grs+1)^(0+1280),w,c
  1200   002764  6E18               	movwf	(??___flmul+1)^(0+1280),c
  1201   002766  0EFF               	movlw	255
  1202   002768  141F               	andwf	(___flmul@grs+2)^(0+1280),w,c
  1203   00276A  6E19               	movwf	(??___flmul+2)^(0+1280),c
  1204   00276C  0E7F               	movlw	127
  1205   00276E  1420               	andwf	(___flmul@grs+3)^(0+1280),w,c
  1206   002770  6E1A               	movwf	(??___flmul+3)^(0+1280),c
  1207   002772  5017               	movf	??___flmul^(0+1280),w,c
  1208   002774  1018               	iorwf	(??___flmul+1)^(0+1280),w,c
  1209   002776  1019               	iorwf	(??___flmul+2)^(0+1280),w,c
  1210   002778  101A               	iorwf	(??___flmul+3)^(0+1280),w,c
  1211   00277A  B4D8               	btfsc	status,2,c
  1212   00277C  D003               	goto	l819
  1213   00277E                     u640:
  1214   00277E  0E01               	movlw	1
  1215   002780  6E1C               	movwf	___flmul@aexp^(0+1280),c
  1216   002782  D002               	goto	l818
  1217   002784                     l819:
  1218   002784  B022               	btfsc	___flmul@prod^(0+1280),0,c
  1219   002786  D7FB               	goto	u640
  1220   002788                     l818:
  1221   002788  501C               	movf	___flmul@aexp^(0+1280),w,c
  1222   00278A  B4D8               	btfsc	status,2,c
  1223   00278C  D01F               	goto	l1524
  1224   00278E  0E01               	movlw	1
  1225   002790  2622               	addwf	___flmul@prod^(0+1280),f,c
  1226   002792  0E00               	movlw	0
  1227   002794  2223               	addwfc	(___flmul@prod+1)^(0+1280),f,c
  1228   002796  2224               	addwfc	(___flmul@prod+2)^(0+1280),f,c
  1229   002798  2225               	addwfc	(___flmul@prod+3)^(0+1280),f,c
  1230   00279A  A025               	btfss	(___flmul@prod+3)^(0+1280),0,c
  1231   00279C  D017               	goto	l1524
  1232   00279E  C522  F517         	movff	___flmul@prod,??___flmul
  1233   0027A2  C523  F518         	movff	___flmul@prod+1,??___flmul+1
  1234   0027A6  C524  F519         	movff	___flmul@prod+2,??___flmul+2
  1235   0027AA  C525  F51A         	movff	___flmul@prod+3,??___flmul+3
  1236   0027AE  341A               	rlcf	(??___flmul+3)^(0+1280),w,c
  1237   0027B0  321A               	rrcf	(??___flmul+3)^(0+1280),f,c
  1238   0027B2  3219               	rrcf	(??___flmul+2)^(0+1280),f,c
  1239   0027B4  3218               	rrcf	(??___flmul+1)^(0+1280),f,c
  1240   0027B6  3217               	rrcf	??___flmul^(0+1280),f,c
  1241   0027B8  C517  F522         	movff	??___flmul,___flmul@prod
  1242   0027BC  C518  F523         	movff	??___flmul+1,___flmul@prod+1
  1243   0027C0  C519  F524         	movff	??___flmul+2,___flmul@prod+2
  1244   0027C4  C51A  F525         	movff	??___flmul+3,___flmul@prod+3
  1245   0027C8  4A26               	infsnz	___flmul@temp^(0+1280),f,c
  1246   0027CA  2A27               	incf	(___flmul@temp+1)^(0+1280),f,c
  1247   0027CC                     l1524:
  1248   0027CC  BE27               	btfsc	(___flmul@temp+1)^(0+1280),7,c
  1249   0027CE  D00D               	goto	l1528
  1250   0027D0  5027               	movf	(___flmul@temp+1)^(0+1280),w,c
  1251   0027D2  E103               	bnz	u680
  1252   0027D4  2826               	incf	___flmul@temp^(0+1280),w,c
  1253   0027D6  A0D8               	btfss	status,0,c
  1254   0027D8  D008               	goto	l1528
  1255   0027DA                     u680:
  1256   0027DA  0E00               	movlw	0
  1257   0027DC  6E22               	movwf	___flmul@prod^(0+1280),c
  1258   0027DE  0E00               	movlw	0
  1259   0027E0  6E23               	movwf	(___flmul@prod+1)^(0+1280),c
  1260   0027E2  0E80               	movlw	128
  1261   0027E4  6E24               	movwf	(___flmul@prod+2)^(0+1280),c
  1262   0027E6  0E7F               	movlw	127
  1263   0027E8  D020               	goto	L1
  1264   0027EA                     l1528:
  1265   0027EA  BE27               	btfsc	(___flmul@temp+1)^(0+1280),7,c
  1266   0027EC  D005               	goto	u690
  1267   0027EE  5027               	movf	(___flmul@temp+1)^(0+1280),w,c
  1268   0027F0  E10E               	bnz	l826
  1269   0027F2  0426               	decf	___flmul@temp^(0+1280),w,c
  1270   0027F4  B0D8               	btfsc	status,0,c
  1271   0027F6  D00B               	goto	l826
  1272   0027F8                     u690:
  1273   0027F8  0E00               	movlw	0
  1274   0027FA  6E22               	movwf	___flmul@prod^(0+1280),c
  1275   0027FC  0E00               	movlw	0
  1276   0027FE  6E23               	movwf	(___flmul@prod+1)^(0+1280),c
  1277   002800  0E00               	movlw	0
  1278   002802  6E24               	movwf	(___flmul@prod+2)^(0+1280),c
  1279   002804  0E00               	movlw	0
  1280   002806  6E25               	movwf	(___flmul@prod+3)^(0+1280),c
  1281   002808  0E00               	movlw	0
  1282   00280A  6E1B               	movwf	___flmul@sign^(0+1280),c
  1283   00280C  D00F               	goto	l1540
  1284   00280E                     l826:
  1285   00280E  C526  F521         	movff	___flmul@temp,___flmul@bexp
  1286   002812  0EFF               	movlw	255
  1287   002814  1622               	andwf	___flmul@prod^(0+1280),f,c
  1288   002816  0EFF               	movlw	255
  1289   002818  1623               	andwf	(___flmul@prod+1)^(0+1280),f,c
  1290   00281A  0E7F               	movlw	127
  1291   00281C  1624               	andwf	(___flmul@prod+2)^(0+1280),f,c
  1292   00281E  0E00               	movlw	0
  1293   002820  1625               	andwf	(___flmul@prod+3)^(0+1280),f,c
  1294   002822  B021               	btfsc	___flmul@bexp^(0+1280),0,c
  1295   002824  8E24               	bsf	(___flmul@prod+2)^(0+1280),7,c
  1296   002826  90D8               	bcf	status,0,c
  1297   002828  3021               	rrcf	___flmul@bexp^(0+1280),w,c
  1298   00282A                     L1:
  1299   00282A  6E25               	movwf	(___flmul@prod+3)^(0+1280),c
  1300   00282C                     l1540:
  1301   00282C  501B               	movf	___flmul@sign^(0+1280),w,c
  1302   00282E  1225               	iorwf	(___flmul@prod+3)^(0+1280),f,c
  1303   002830  C522  F50F         	movff	___flmul@prod,?___flmul
  1304   002834  C523  F510         	movff	___flmul@prod+1,?___flmul+1
  1305   002838  C524  F511         	movff	___flmul@prod+2,?___flmul+2
  1306   00283C  C525  F512         	movff	___flmul@prod+3,?___flmul+3
  1307   002840  0012               	return		;funcret
  1308   002842                     __end_of___flmul:
  1309                           	callstack 0
  1310                           
  1311 ;; *************** function _configuro *****************
  1312 ;; Defined at:
  1313 ;;		line 6 in file "maincode.c"
  1314 ;; Parameters:    Size  Location     Type
  1315 ;;		None
  1316 ;; Auto vars:     Size  Location     Type
  1317 ;;		None
  1318 ;; Return value:  Size  Location     Type
  1319 ;;                  1    wreg      void 
  1320 ;; Registers used:
  1321 ;;		wreg, status,2, status,0, cstack
  1322 ;; Tracked objects:
  1323 ;;		On entry : 0/0
  1324 ;;		On exit  : 3F/3
  1325 ;;		Unchanged: 0/0
  1326 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1327 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1328 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1329 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1330 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1331 ;;Total ram usage:        0 bytes
  1332 ;; Hardware stack levels used: 1
  1333 ;; Hardware stack levels required when called: 4
  1334 ;; This function calls:
  1335 ;;		_LCD_INIT
  1336 ;; This function is called by:
  1337 ;;		_main
  1338 ;; This function uses a non-reentrant model
  1339 ;;
  1340                           
  1341                           	psect	text5
  1342   002CE2                     __ptext5:
  1343                           	callstack 0
  1344   002CE2                     _configuro:
  1345                           	callstack 122
  1346                           
  1347                           ;maincode.c: 8:     OSCCON1 = 0x60;
  1348                           
  1349                           ;incstack = 0
  1350   002CE2  0E60               	movlw	96
  1351   002CE4  0100               	movlb	0	; () banked
  1352   002CE6  6FAD               	movwf	173,b	;volatile
  1353                           
  1354                           ;maincode.c: 9:     OSCFRQ = 0x05;
  1355   002CE8  0E05               	movlw	5
  1356   002CEA  6FB1               	movwf	177,b	;volatile
  1357                           
  1358                           ;maincode.c: 10:     OSCEN = 0x40;
  1359   002CEC  0E40               	movlw	64
  1360   002CEE  6FB3               	movwf	179,b	;volatile
  1361                           
  1362                           ; BSR set to: 0
  1363                           ;maincode.c: 12:     LCD_INIT();
  1364   002CF0  EC28  F017         	call	_LCD_INIT	;wreg free
  1365                           
  1366                           ;maincode.c: 14:     TRISAbits.TRISA0 = 1;
  1367   002CF4  80C6               	bsf	198,0,c	;volatile
  1368                           
  1369                           ;maincode.c: 15:     ANSELAbits.ANSELA0 = 1;
  1370   002CF6  0104               	movlb	4	; () banked
  1371   002CF8  8100               	bsf	0,0,b	;volatile
  1372                           
  1373                           ; BSR set to: 4
  1374                           ;maincode.c: 16:     ADCON0bits.ADFM = 1;
  1375   002CFA  0103               	movlb	3	; () banked
  1376   002CFC  51F3               	movf	243,w,b	;volatile
  1377   002CFE  0BF3               	andlw	-13
  1378   002D00  0904               	iorlw	4
  1379   002D02  6FF3               	movwf	243,b	;volatile
  1380                           
  1381                           ; BSR set to: 3
  1382                           ;maincode.c: 17:     ADCON0bits.CS = 1;
  1383   002D04  89F3               	bsf	243,4,b	;volatile
  1384                           
  1385                           ; BSR set to: 3
  1386                           ;maincode.c: 18:     ADPCH = 0x00;
  1387   002D06  0E00               	movlw	0
  1388   002D08  6FEC               	movwf	236,b	;volatile
  1389                           
  1390                           ; BSR set to: 3
  1391                           ;maincode.c: 19:     ADCON0bits.ON = 1;
  1392   002D0A  8FF3               	bsf	243,7,b	;volatile
  1393                           
  1394                           ; BSR set to: 3
  1395                           ;maincode.c: 21:     RF1PPS = 0x15;
  1396   002D0C  0E15               	movlw	21
  1397   002D0E  0102               	movlb	2	; () banked
  1398   002D10  6F2A               	movwf	42,b	;volatile
  1399                           
  1400                           ; BSR set to: 2
  1401                           ;maincode.c: 22:     TRISFbits.TRISF1 = 0;
  1402   002D12  92CB               	bcf	203,1,c	;volatile
  1403                           
  1404                           ; BSR set to: 2
  1405                           ;maincode.c: 23:     ANSELFbits.ANSELF1 = 0;
  1406   002D14  0104               	movlb	4	; () banked
  1407   002D16  9328               	bcf	40,1,b	;volatile
  1408                           
  1409                           ; BSR set to: 4
  1410                           ;maincode.c: 24:     T2PR = 250;
  1411   002D18  0EFA               	movlw	250
  1412   002D1A  0103               	movlb	3	; () banked
  1413   002D1C  6F23               	movwf	35,b	;volatile
  1414                           
  1415                           ; BSR set to: 3
  1416                           ;maincode.c: 25:     CCP1CON = 0x9C;
  1417   002D1E  0E9C               	movlw	156
  1418   002D20  6F42               	movwf	66,b	;volatile
  1419                           
  1420                           ; BSR set to: 3
  1421                           ;maincode.c: 26:     CCPR1H = 125;
  1422   002D22  0E7D               	movlw	125
  1423   002D24  6F41               	movwf	65,b	;volatile
  1424                           
  1425                           ; BSR set to: 3
  1426                           ;maincode.c: 27:     CCPR1L = 0;
  1427   002D26  0E00               	movlw	0
  1428   002D28  6F40               	movwf	64,b	;volatile
  1429                           
  1430                           ; BSR set to: 3
  1431                           ;maincode.c: 28:     T2CON = 0xA0;
  1432   002D2A  0EA0               	movlw	160
  1433   002D2C  6F24               	movwf	36,b	;volatile
  1434                           
  1435                           ; BSR set to: 3
  1436                           ;maincode.c: 29:     T2CLKCON = 0x01;
  1437   002D2E  0E01               	movlw	1
  1438   002D30  6F26               	movwf	38,b	;volatile
  1439                           
  1440                           ; BSR set to: 3
  1441   002D32  0012               	return		;funcret
  1442   002D34                     __end_of_configuro:
  1443                           	callstack 0
  1444                           
  1445 ;; *************** function _LCD_INIT *****************
  1446 ;; Defined at:
  1447 ;;		line 196 in file "LCD.c"
  1448 ;; Parameters:    Size  Location     Type
  1449 ;;		None
  1450 ;; Auto vars:     Size  Location     Type
  1451 ;;		None
  1452 ;; Return value:  Size  Location     Type
  1453 ;;                  1    wreg      void 
  1454 ;; Registers used:
  1455 ;;		wreg, status,2, status,0, cstack
  1456 ;; Tracked objects:
  1457 ;;		On entry : 3F/0
  1458 ;;		On exit  : 0/0
  1459 ;;		Unchanged: 0/0
  1460 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1461 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1462 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1463 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1464 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1465 ;;Total ram usage:        1 bytes
  1466 ;; Hardware stack levels used: 1
  1467 ;; Hardware stack levels required when called: 3
  1468 ;; This function calls:
  1469 ;;		_BORRAR_LCD
  1470 ;;		_CURSOR_HOME
  1471 ;;		_CURSOR_ONOFF
  1472 ;;		_LCD_CONFIG
  1473 ;; This function is called by:
  1474 ;;		_configuro
  1475 ;; This function uses a non-reentrant model
  1476 ;;
  1477                           
  1478                           	psect	text6
  1479   002E50                     __ptext6:
  1480                           	callstack 0
  1481   002E50                     _LCD_INIT:
  1482                           	callstack 122
  1483                           
  1484                           ; BSR set to: 0
  1485                           ;LCD.c: 197:     TRISD = 0x00;
  1486                           
  1487                           ; BSR set to: 3
  1488                           ;incstack = 0
  1489   002E50  0E00               	movlw	0
  1490   002E52  6EC9               	movwf	201,c	;volatile
  1491                           
  1492                           ;LCD.c: 198:     ANSELD = 0x00;
  1493   002E54  0E00               	movlw	0
  1494   002E56  0104               	movlb	4	; () banked
  1495   002E58  6F18               	movwf	24,b	;volatile
  1496                           
  1497                           ; BSR set to: 4
  1498                           ;LCD.c: 199:     _delay((unsigned long)((15)*(16000000UL/4000.0)));
  1499   002E5A  0E4E               	movlw	78
  1500   002E5C  6E05               	movwf	??_LCD_INIT^(0+1280),c
  1501   002E5E  0EEB               	movlw	235
  1502   002E60                     u1007:
  1503   002E60  2EE8               	decfsz	wreg,f,c
  1504   002E62  D7FE               	bra	u1007
  1505   002E64  2E05               	decfsz	??_LCD_INIT^(0+1280),f,c
  1506   002E66  D7FC               	bra	u1007
  1507   002E68  0000               	nop	
  1508                           
  1509                           ;LCD.c: 200:     LCD_CONFIG();
  1510   002E6A  EC47  F016         	call	_LCD_CONFIG	;wreg free
  1511                           
  1512                           ;LCD.c: 201:     _delay((unsigned long)((15)*(16000000UL/4000.0)));
  1513   002E6E  0E4E               	movlw	78
  1514   002E70  6E05               	movwf	??_LCD_INIT^(0+1280),c
  1515   002E72  0EEB               	movlw	235
  1516   002E74                     u1017:
  1517   002E74  2EE8               	decfsz	wreg,f,c
  1518   002E76  D7FE               	bra	u1017
  1519   002E78  2E05               	decfsz	??_LCD_INIT^(0+1280),f,c
  1520   002E7A  D7FC               	bra	u1017
  1521   002E7C  0000               	nop	
  1522                           
  1523                           ;LCD.c: 202:     BORRAR_LCD();
  1524   002E7E  ECCD  F017         	call	_BORRAR_LCD	;wreg free
  1525                           
  1526                           ;LCD.c: 203:     CURSOR_HOME();
  1527   002E82  ECC9  F017         	call	_CURSOR_HOME	;wreg free
  1528                           
  1529                           ;LCD.c: 204:     CURSOR_ONOFF(1);
  1530   002E86  0E01               	movlw	1
  1531   002E88  ECAD  F017         	call	_CURSOR_ONOFF
  1532   002E8C  0012               	return		;funcret
  1533   002E8E                     __end_of_LCD_INIT:
  1534                           	callstack 0
  1535                           
  1536 ;; *************** function _LCD_CONFIG *****************
  1537 ;; Defined at:
  1538 ;;		line 113 in file "LCD.c"
  1539 ;; Parameters:    Size  Location     Type
  1540 ;;		None
  1541 ;; Auto vars:     Size  Location     Type
  1542 ;;		None
  1543 ;; Return value:  Size  Location     Type
  1544 ;;                  1    wreg      void 
  1545 ;; Registers used:
  1546 ;;		wreg, status,2, status,0, cstack
  1547 ;; Tracked objects:
  1548 ;;		On entry : 0/4
  1549 ;;		On exit  : 0/0
  1550 ;;		Unchanged: 0/0
  1551 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1552 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1553 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1554 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1555 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1556 ;;Total ram usage:        1 bytes
  1557 ;; Hardware stack levels used: 1
  1558 ;; Hardware stack levels required when called: 2
  1559 ;; This function calls:
  1560 ;;		_ENVIA_LCD_CMD
  1561 ;;		_ENVIA_NIBBLE
  1562 ;; This function is called by:
  1563 ;;		_LCD_INIT
  1564 ;; This function uses a non-reentrant model
  1565 ;;
  1566                           
  1567                           	psect	text7
  1568   002C8E                     __ptext7:
  1569                           	callstack 0
  1570   002C8E                     _LCD_CONFIG:
  1571                           	callstack 122
  1572                           
  1573                           ;LCD.c: 115:  LATDbits.LATD0 = 0;
  1574                           
  1575                           ;incstack = 0
  1576   002C8E  90C1               	bcf	193,0,c	;volatile
  1577                           
  1578                           ;LCD.c: 116:  LATDbits.LATD1 = 0;
  1579   002C90  92C1               	bcf	193,1,c	;volatile
  1580                           
  1581                           ;LCD.c: 117:  ENVIA_NIBBLE(0x30);
  1582   002C92  0E30               	movlw	48
  1583   002C94  ECBB  F017         	call	_ENVIA_NIBBLE
  1584                           
  1585                           ;LCD.c: 118:     _delay((unsigned long)((2)*(16000000UL/4000.0)));
  1586   002C98  0E0B               	movlw	11
  1587   002C9A  6E04               	movwf	??_LCD_CONFIG^(0+1280),c
  1588   002C9C  0E62               	movlw	98
  1589   002C9E                     u1027:
  1590   002C9E  2EE8               	decfsz	wreg,f,c
  1591   002CA0  D7FE               	bra	u1027
  1592   002CA2  2E04               	decfsz	??_LCD_CONFIG^(0+1280),f,c
  1593   002CA4  D7FC               	bra	u1027
  1594   002CA6  D000               	nop2	
  1595                           
  1596                           ;LCD.c: 119:  ENVIA_NIBBLE(0x30);
  1597   002CA8  0E30               	movlw	48
  1598   002CAA  ECBB  F017         	call	_ENVIA_NIBBLE
  1599                           
  1600                           ;LCD.c: 120:     _delay((unsigned long)((100)*(16000000UL/4000000.0)));
  1601   002CAE  0E85               	movlw	133
  1602   002CB0                     u1037:
  1603   002CB0  2EE8               	decfsz	wreg,f,c
  1604   002CB2  D7FE               	bra	u1037
  1605   002CB4  0000               	nop	
  1606                           
  1607                           ;LCD.c: 121:     ENVIA_NIBBLE(0x30);
  1608   002CB6  0E30               	movlw	48
  1609   002CB8  ECBB  F017         	call	_ENVIA_NIBBLE
  1610                           
  1611                           ;LCD.c: 122:  ENVIA_NIBBLE(0x20);
  1612   002CBC  0E20               	movlw	32
  1613   002CBE  ECBB  F017         	call	_ENVIA_NIBBLE
  1614                           
  1615                           ;LCD.c: 123:  ENVIA_LCD_CMD(0x01);
  1616   002CC2  0E01               	movlw	1
  1617   002CC4  EC63  F017         	call	_ENVIA_LCD_CMD
  1618                           
  1619                           ;LCD.c: 124:  ENVIA_LCD_CMD(0x28);
  1620   002CC8  0E28               	movlw	40
  1621   002CCA  EC63  F017         	call	_ENVIA_LCD_CMD
  1622                           
  1623                           ;LCD.c: 125:  ENVIA_LCD_CMD(0x0F);
  1624   002CCE  0E0F               	movlw	15
  1625   002CD0  EC63  F017         	call	_ENVIA_LCD_CMD
  1626                           
  1627                           ;LCD.c: 126:  ENVIA_LCD_CMD(0x06);
  1628   002CD4  0E06               	movlw	6
  1629   002CD6  EC63  F017         	call	_ENVIA_LCD_CMD
  1630                           
  1631                           ;LCD.c: 127:  ENVIA_LCD_CMD(0x01);
  1632   002CDA  0E01               	movlw	1
  1633   002CDC  EC63  F017         	call	_ENVIA_LCD_CMD
  1634   002CE0  0012               	return		;funcret
  1635   002CE2                     __end_of_LCD_CONFIG:
  1636                           	callstack 0
  1637                           
  1638 ;; *************** function _CURSOR_ONOFF *****************
  1639 ;; Defined at:
  1640 ;;		line 66 in file "LCD.c"
  1641 ;; Parameters:    Size  Location     Type
  1642 ;;  estado          1    wreg     unsigned char 
  1643 ;; Auto vars:     Size  Location     Type
  1644 ;;  estado          1    3[COMRAM] unsigned char 
  1645 ;; Return value:  Size  Location     Type
  1646 ;;                  1    wreg      void 
  1647 ;; Registers used:
  1648 ;;		wreg, status,2, status,0, cstack
  1649 ;; Tracked objects:
  1650 ;;		On entry : 0/4
  1651 ;;		On exit  : 0/0
  1652 ;;		Unchanged: 0/0
  1653 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1654 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1655 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1656 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1657 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1658 ;;Total ram usage:        1 bytes
  1659 ;; Hardware stack levels used: 1
  1660 ;; Hardware stack levels required when called: 2
  1661 ;; This function calls:
  1662 ;;		_ENVIA_LCD_CMD
  1663 ;; This function is called by:
  1664 ;;		_LCD_INIT
  1665 ;; This function uses a non-reentrant model
  1666 ;;
  1667                           
  1668                           	psect	text8
  1669   002F5A                     __ptext8:
  1670                           	callstack 0
  1671   002F5A                     _CURSOR_ONOFF:
  1672                           	callstack 122
  1673                           
  1674                           ;incstack = 0
  1675                           ;CURSOR_ONOFF@estado stored from wreg
  1676   002F5A  6E04               	movwf	CURSOR_ONOFF@estado^(0+1280),c
  1677                           
  1678                           ;LCD.c: 66: void CURSOR_ONOFF(unsigned char estado);LCD.c: 67: {;LCD.c: 68:  if(estado =
      +                          = 0) ENVIA_LCD_CMD(0x0E);
  1679   002F5C  5004               	movf	CURSOR_ONOFF@estado^(0+1280),w,c
  1680   002F5E  A4D8               	btfss	status,2,c
  1681   002F60  D003               	goto	l948
  1682   002F62  0E0E               	movlw	14
  1683   002F64  EC63  F017         	call	_ENVIA_LCD_CMD
  1684   002F68                     l948:
  1685                           
  1686                           ;LCD.c: 69:  if(estado == 1) ENVIA_LCD_CMD(0x0C);
  1687   002F68  0404               	decf	CURSOR_ONOFF@estado^(0+1280),w,c
  1688   002F6A  A4D8               	btfss	status,2,c
  1689   002F6C  0012               	return	
  1690   002F6E  0E0C               	movlw	12
  1691   002F70  EC63  F017         	call	_ENVIA_LCD_CMD
  1692   002F74  0012               	return		;funcret
  1693   002F76                     __end_of_CURSOR_ONOFF:
  1694                           	callstack 0
  1695                           
  1696 ;; *************** function _CURSOR_HOME *****************
  1697 ;; Defined at:
  1698 ;;		line 41 in file "LCD.c"
  1699 ;; Parameters:    Size  Location     Type
  1700 ;;		None
  1701 ;; Auto vars:     Size  Location     Type
  1702 ;;		None
  1703 ;; Return value:  Size  Location     Type
  1704 ;;                  1    wreg      void 
  1705 ;; Registers used:
  1706 ;;		wreg, status,2, status,0, cstack
  1707 ;; Tracked objects:
  1708 ;;		On entry : 0/4
  1709 ;;		On exit  : 0/0
  1710 ;;		Unchanged: 0/0
  1711 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1712 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1713 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1714 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1715 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1716 ;;Total ram usage:        0 bytes
  1717 ;; Hardware stack levels used: 1
  1718 ;; Hardware stack levels required when called: 2
  1719 ;; This function calls:
  1720 ;;		_ENVIA_LCD_CMD
  1721 ;; This function is called by:
  1722 ;;		_LCD_INIT
  1723 ;; This function uses a non-reentrant model
  1724 ;;
  1725                           
  1726                           	psect	text9
  1727   002F92                     __ptext9:
  1728                           	callstack 0
  1729   002F92                     _CURSOR_HOME:
  1730                           	callstack 122
  1731                           
  1732                           ;LCD.c: 43:  ENVIA_LCD_CMD(0x02);
  1733                           
  1734                           ;incstack = 0
  1735   002F92  0E02               	movlw	2
  1736   002F94  EC63  F017         	call	_ENVIA_LCD_CMD
  1737   002F98  0012               	return		;funcret
  1738   002F9A                     __end_of_CURSOR_HOME:
  1739                           	callstack 0
  1740                           
  1741 ;; *************** function _BORRAR_LCD *****************
  1742 ;; Defined at:
  1743 ;;		line 108 in file "LCD.c"
  1744 ;; Parameters:    Size  Location     Type
  1745 ;;		None
  1746 ;; Auto vars:     Size  Location     Type
  1747 ;;		None
  1748 ;; Return value:  Size  Location     Type
  1749 ;;                  1    wreg      void 
  1750 ;; Registers used:
  1751 ;;		wreg, status,2, status,0, cstack
  1752 ;; Tracked objects:
  1753 ;;		On entry : 0/4
  1754 ;;		On exit  : 0/0
  1755 ;;		Unchanged: 0/0
  1756 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1757 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1758 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1759 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1760 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1761 ;;Total ram usage:        0 bytes
  1762 ;; Hardware stack levels used: 1
  1763 ;; Hardware stack levels required when called: 2
  1764 ;; This function calls:
  1765 ;;		_ENVIA_LCD_CMD
  1766 ;; This function is called by:
  1767 ;;		_LCD_INIT
  1768 ;; This function uses a non-reentrant model
  1769 ;;
  1770                           
  1771                           	psect	text10
  1772   002F9A                     __ptext10:
  1773                           	callstack 0
  1774   002F9A                     _BORRAR_LCD:
  1775                           	callstack 122
  1776                           
  1777                           ;LCD.c: 110:  ENVIA_LCD_CMD(0x01);
  1778                           
  1779                           ;incstack = 0
  1780   002F9A  0E01               	movlw	1
  1781   002F9C  EC63  F017         	call	_ENVIA_LCD_CMD
  1782   002FA0  0012               	return		;funcret
  1783   002FA2                     __end_of_BORRAR_LCD:
  1784                           	callstack 0
  1785                           
  1786 ;; *************** function _POS_CURSOR *****************
  1787 ;; Defined at:
  1788 ;;		line 9 in file "LCD.c"
  1789 ;; Parameters:    Size  Location     Type
  1790 ;;  fila            1    wreg     unsigned char 
  1791 ;;  columna         1    3[COMRAM] unsigned char 
  1792 ;; Auto vars:     Size  Location     Type
  1793 ;;  fila            1    4[COMRAM] unsigned char 
  1794 ;; Return value:  Size  Location     Type
  1795 ;;                  1    wreg      void 
  1796 ;; Registers used:
  1797 ;;		wreg, status,2, status,0, cstack
  1798 ;; Tracked objects:
  1799 ;;		On entry : 0/3
  1800 ;;		On exit  : 0/0
  1801 ;;		Unchanged: 0/0
  1802 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1803 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1804 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1805 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1806 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1807 ;;Total ram usage:        2 bytes
  1808 ;; Hardware stack levels used: 1
  1809 ;; Hardware stack levels required when called: 2
  1810 ;; This function calls:
  1811 ;;		_ENVIA_LCD_CMD
  1812 ;; This function is called by:
  1813 ;;		_main
  1814 ;; This function uses a non-reentrant model
  1815 ;;
  1816                           
  1817                           	psect	text11
  1818   002D86                     __ptext11:
  1819                           	callstack 0
  1820   002D86                     _POS_CURSOR:
  1821                           	callstack 124
  1822                           
  1823                           ;incstack = 0
  1824                           ;POS_CURSOR@fila stored from wreg
  1825   002D86  6E05               	movwf	POS_CURSOR@fila^(0+1280),c
  1826                           
  1827                           ;LCD.c: 9: void POS_CURSOR(unsigned char fila,unsigned char columna);LCD.c: 10: {;LCD.c:
      +                           11:  if(fila == 1)
  1828   002D88  0405               	decf	POS_CURSOR@fila^(0+1280),w,c
  1829   002D8A  A4D8               	btfss	status,2,c
  1830   002D8C  D005               	goto	l1694
  1831                           
  1832                           ;LCD.c: 12:  {;LCD.c: 13:   ENVIA_LCD_CMD(0x80+columna);
  1833   002D8E  5004               	movf	POS_CURSOR@columna^(0+1280),w,c
  1834   002D90  0F80               	addlw	128
  1835   002D92  EC63  F017         	call	_ENVIA_LCD_CMD
  1836                           
  1837                           ;LCD.c: 14:  }
  1838   002D96  0012               	return	
  1839   002D98                     l1694:
  1840   002D98  0E02               	movlw	2
  1841   002D9A  1805               	xorwf	POS_CURSOR@fila^(0+1280),w,c
  1842   002D9C  A4D8               	btfss	status,2,c
  1843   002D9E  D005               	goto	l1698
  1844                           
  1845                           ;LCD.c: 16:  {;LCD.c: 17:   ENVIA_LCD_CMD(0xC0+columna);
  1846   002DA0  5004               	movf	POS_CURSOR@columna^(0+1280),w,c
  1847   002DA2  0FC0               	addlw	192
  1848   002DA4  EC63  F017         	call	_ENVIA_LCD_CMD
  1849                           
  1850                           ;LCD.c: 18:  }
  1851   002DA8  0012               	return	
  1852   002DAA                     l1698:
  1853   002DAA  0E03               	movlw	3
  1854   002DAC  1805               	xorwf	POS_CURSOR@fila^(0+1280),w,c
  1855   002DAE  A4D8               	btfss	status,2,c
  1856   002DB0  D005               	goto	l1702
  1857                           
  1858                           ;LCD.c: 20:  {;LCD.c: 21:   ENVIA_LCD_CMD(0x94+columna);
  1859   002DB2  5004               	movf	POS_CURSOR@columna^(0+1280),w,c
  1860   002DB4  0F94               	addlw	148
  1861   002DB6  EC63  F017         	call	_ENVIA_LCD_CMD
  1862                           
  1863                           ;LCD.c: 22:  }
  1864   002DBA  0012               	return	
  1865   002DBC                     l1702:
  1866   002DBC  0E04               	movlw	4
  1867   002DBE  1805               	xorwf	POS_CURSOR@fila^(0+1280),w,c
  1868   002DC0  A4D8               	btfss	status,2,c
  1869   002DC2  0012               	return	
  1870                           
  1871                           ;LCD.c: 24:  {;LCD.c: 25:   ENVIA_LCD_CMD(0xD4+columna);
  1872   002DC4  5004               	movf	POS_CURSOR@columna^(0+1280),w,c
  1873   002DC6  0FD4               	addlw	212
  1874   002DC8  EC63  F017         	call	_ENVIA_LCD_CMD
  1875   002DCC  0012               	return	
  1876   002DCE                     __end_of_POS_CURSOR:
  1877                           	callstack 0
  1878                           
  1879 ;; *************** function _ENVIA_LCD_CMD *****************
  1880 ;; Defined at:
  1881 ;;		line 140 in file "LCD.c"
  1882 ;; Parameters:    Size  Location     Type
  1883 ;;  dato            1    wreg     unsigned char 
  1884 ;; Auto vars:     Size  Location     Type
  1885 ;;  dato            1    1[COMRAM] unsigned char 
  1886 ;;  aux             1    2[COMRAM] unsigned char 
  1887 ;; Return value:  Size  Location     Type
  1888 ;;                  1    wreg      void 
  1889 ;; Registers used:
  1890 ;;		wreg, status,2, status,0, cstack
  1891 ;; Tracked objects:
  1892 ;;		On entry : 0/4
  1893 ;;		On exit  : 0/0
  1894 ;;		Unchanged: 0/0
  1895 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1896 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1897 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1898 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1899 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1900 ;;Total ram usage:        2 bytes
  1901 ;; Hardware stack levels used: 1
  1902 ;; Hardware stack levels required when called: 1
  1903 ;; This function calls:
  1904 ;;		_ENVIA_NIBBLE
  1905 ;;		_LEER_LCD
  1906 ;; This function is called by:
  1907 ;;		_POS_CURSOR
  1908 ;;		_CURSOR_HOME
  1909 ;;		_CURSOR_ONOFF
  1910 ;;		_BORRAR_LCD
  1911 ;;		_LCD_CONFIG
  1912 ;; This function uses a non-reentrant model
  1913 ;;
  1914                           
  1915                           	psect	text12
  1916   002EC6                     __ptext12:
  1917                           	callstack 0
  1918   002EC6                     _ENVIA_LCD_CMD:
  1919                           	callstack 122
  1920                           
  1921                           ;incstack = 0
  1922                           ;ENVIA_LCD_CMD@dato stored from wreg
  1923   002EC6  6E02               	movwf	ENVIA_LCD_CMD@dato^(0+1280),c
  1924                           
  1925                           ;LCD.c: 140: void ENVIA_LCD_CMD(unsigned char dato);LCD.c: 141: {;LCD.c: 142:  unsigned 
      +                          char aux;;LCD.c: 143:  LATDbits.LATD0 = 0;
  1926   002EC8  90C1               	bcf	193,0,c	;volatile
  1927                           
  1928                           ;LCD.c: 144:  LEER_LCD();
  1929   002ECA  EC17  F016         	call	_LEER_LCD	;wreg free
  1930                           
  1931                           ;LCD.c: 145:  TRISD = 0b00000000;
  1932   002ECE  0E00               	movlw	0
  1933   002ED0  6EC9               	movwf	201,c	;volatile
  1934                           
  1935                           ;LCD.c: 146:     _delay((unsigned long)((100)*(16000000UL/4000000.0)));
  1936   002ED2  0E85               	movlw	133
  1937   002ED4                     u1047:
  1938   002ED4  2EE8               	decfsz	wreg,f,c
  1939   002ED6  D7FE               	bra	u1047
  1940   002ED8  0000               	nop	
  1941                           
  1942                           ;LCD.c: 147:     LATDbits.LATD1 = 0;
  1943   002EDA  92C1               	bcf	193,1,c	;volatile
  1944                           
  1945                           ;LCD.c: 148:  LATDbits.LATD2 = 0;
  1946   002EDC  94C1               	bcf	193,2,c	;volatile
  1947                           
  1948                           ;LCD.c: 149:  LATDbits.LATD0 = 0;
  1949   002EDE  90C1               	bcf	193,0,c	;volatile
  1950                           
  1951                           ;LCD.c: 150:  aux = dato & 0xF0;
  1952   002EE0  5002               	movf	ENVIA_LCD_CMD@dato^(0+1280),w,c
  1953   002EE2  0BF0               	andlw	240
  1954   002EE4  6E03               	movwf	ENVIA_LCD_CMD@aux^(0+1280),c
  1955                           
  1956                           ;LCD.c: 151:  ENVIA_NIBBLE(aux);
  1957   002EE6  5003               	movf	ENVIA_LCD_CMD@aux^(0+1280),w,c
  1958   002EE8  ECBB  F017         	call	_ENVIA_NIBBLE
  1959                           
  1960                           ;LCD.c: 152:  aux = dato<<4;
  1961   002EEC  3802               	swapf	ENVIA_LCD_CMD@dato^(0+1280),w,c
  1962   002EEE  0BF0               	andlw	240
  1963   002EF0  6E03               	movwf	ENVIA_LCD_CMD@aux^(0+1280),c
  1964                           
  1965                           ;LCD.c: 153:  ENVIA_NIBBLE(aux);
  1966   002EF2  5003               	movf	ENVIA_LCD_CMD@aux^(0+1280),w,c
  1967   002EF4  ECBB  F017         	call	_ENVIA_NIBBLE
  1968   002EF8  0012               	return		;funcret
  1969   002EFA                     __end_of_ENVIA_LCD_CMD:
  1970                           	callstack 0
  1971                           
  1972 ;; *************** function _LCD_ESCRIBE_VAR_INT *****************
  1973 ;; Defined at:
  1974 ;;		line 228 in file "LCD.c"
  1975 ;; Parameters:    Size  Location     Type
  1976 ;;  numero          2   50[COMRAM] unsigned int 
  1977 ;;  n_digitos       1   52[COMRAM] unsigned char 
  1978 ;; Auto vars:     Size  Location     Type
  1979 ;;  unidad          1   59[COMRAM] unsigned char 
  1980 ;;  decena          1   58[COMRAM] unsigned char 
  1981 ;;  centena         1   57[COMRAM] unsigned char 
  1982 ;;  millar          1   56[COMRAM] unsigned char 
  1983 ;;  d_millar        1   55[COMRAM] unsigned char 
  1984 ;; Return value:  Size  Location     Type
  1985 ;;                  1    wreg      void 
  1986 ;; Registers used:
  1987 ;;		wreg, status,2, status,0, cstack
  1988 ;; Tracked objects:
  1989 ;;		On entry : 3F/3
  1990 ;;		On exit  : 0/0
  1991 ;;		Unchanged: 0/0
  1992 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1993 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1994 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1995 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1996 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1997 ;;Total ram usage:       10 bytes
  1998 ;; Hardware stack levels used: 1
  1999 ;; Hardware stack levels required when called: 2
  2000 ;; This function calls:
  2001 ;;		_ENVIA_CHAR
  2002 ;;		___lwdiv
  2003 ;;		___lwmod
  2004 ;; This function is called by:
  2005 ;;		_main
  2006 ;; This function uses a non-reentrant model
  2007 ;;
  2008                           
  2009                           	psect	text13
  2010   002842                     __ptext13:
  2011                           	callstack 0
  2012   002842                     _LCD_ESCRIBE_VAR_INT:
  2013                           	callstack 124
  2014                           
  2015                           ; BSR set to: 3
  2016                           ;LCD.c: 229:     unsigned char d_millar, millar, centena, decena, unidad;;LCD.c: 230:   
      +                            d_millar = numero / 10000;
  2017                           
  2018                           ;incstack = 0
  2019   002842  C533  F506         	movff	LCD_ESCRIBE_VAR_INT@numero,___lwdiv@dividend
  2020   002846  C534  F507         	movff	LCD_ESCRIBE_VAR_INT@numero+1,___lwdiv@dividend+1
  2021   00284A  0E27               	movlw	39
  2022   00284C  6E09               	movwf	(___lwdiv@divisor+1)^(0+1280),c
  2023   00284E  0E10               	movlw	16
  2024   002850  6E08               	movwf	___lwdiv@divisor^(0+1280),c
  2025   002852  EC9A  F016         	call	___lwdiv	;wreg free
  2026   002856  5006               	movf	?___lwdiv^(0+1280),w,c
  2027   002858  6E38               	movwf	LCD_ESCRIBE_VAR_INT@d_millar^(0+1280),c
  2028                           
  2029                           ;LCD.c: 231:     millar = (numero % 10000) / 1000;
  2030   00285A  0E27               	movlw	39
  2031   00285C  6E04               	movwf	(___lwmod@divisor+1)^(0+1280),c
  2032   00285E  0E10               	movlw	16
  2033   002860  6E03               	movwf	___lwmod@divisor^(0+1280),c
  2034   002862  C533  F501         	movff	LCD_ESCRIBE_VAR_INT@numero,___lwmod@dividend
  2035   002866  C534  F502         	movff	LCD_ESCRIBE_VAR_INT@numero+1,___lwmod@dividend+1
  2036   00286A  ECE7  F016         	call	___lwmod	;wreg free
  2037   00286E  C501  F506         	movff	?___lwmod,___lwdiv@dividend
  2038   002872  C502  F507         	movff	?___lwmod+1,___lwdiv@dividend+1
  2039   002876  0E03               	movlw	3
  2040   002878  6E09               	movwf	(___lwdiv@divisor+1)^(0+1280),c
  2041   00287A  0EE8               	movlw	232
  2042   00287C  6E08               	movwf	___lwdiv@divisor^(0+1280),c
  2043   00287E  EC9A  F016         	call	___lwdiv	;wreg free
  2044   002882  5006               	movf	?___lwdiv^(0+1280),w,c
  2045   002884  6E39               	movwf	LCD_ESCRIBE_VAR_INT@millar^(0+1280),c
  2046                           
  2047                           ;LCD.c: 232:     centena = (numero % 1000) / 100;
  2048   002886  0E03               	movlw	3
  2049   002888  6E04               	movwf	(___lwmod@divisor+1)^(0+1280),c
  2050   00288A  0EE8               	movlw	232
  2051   00288C  6E03               	movwf	___lwmod@divisor^(0+1280),c
  2052   00288E  C533  F501         	movff	LCD_ESCRIBE_VAR_INT@numero,___lwmod@dividend
  2053   002892  C534  F502         	movff	LCD_ESCRIBE_VAR_INT@numero+1,___lwmod@dividend+1
  2054   002896  ECE7  F016         	call	___lwmod	;wreg free
  2055   00289A  C501  F506         	movff	?___lwmod,___lwdiv@dividend
  2056   00289E  C502  F507         	movff	?___lwmod+1,___lwdiv@dividend+1
  2057   0028A2  0E00               	movlw	0
  2058   0028A4  6E09               	movwf	(___lwdiv@divisor+1)^(0+1280),c
  2059   0028A6  0E64               	movlw	100
  2060   0028A8  6E08               	movwf	___lwdiv@divisor^(0+1280),c
  2061   0028AA  EC9A  F016         	call	___lwdiv	;wreg free
  2062   0028AE  5006               	movf	?___lwdiv^(0+1280),w,c
  2063   0028B0  6E3A               	movwf	LCD_ESCRIBE_VAR_INT@centena^(0+1280),c
  2064                           
  2065                           ;LCD.c: 233:     decena = (numero % 100) / 10;
  2066   0028B2  0E00               	movlw	0
  2067   0028B4  6E04               	movwf	(___lwmod@divisor+1)^(0+1280),c
  2068   0028B6  0E64               	movlw	100
  2069   0028B8  6E03               	movwf	___lwmod@divisor^(0+1280),c
  2070   0028BA  C533  F501         	movff	LCD_ESCRIBE_VAR_INT@numero,___lwmod@dividend
  2071   0028BE  C534  F502         	movff	LCD_ESCRIBE_VAR_INT@numero+1,___lwmod@dividend+1
  2072   0028C2  ECE7  F016         	call	___lwmod	;wreg free
  2073   0028C6  C501  F506         	movff	?___lwmod,___lwdiv@dividend
  2074   0028CA  C502  F507         	movff	?___lwmod+1,___lwdiv@dividend+1
  2075   0028CE  0E00               	movlw	0
  2076   0028D0  6E09               	movwf	(___lwdiv@divisor+1)^(0+1280),c
  2077   0028D2  0E0A               	movlw	10
  2078   0028D4  6E08               	movwf	___lwdiv@divisor^(0+1280),c
  2079   0028D6  EC9A  F016         	call	___lwdiv	;wreg free
  2080   0028DA  5006               	movf	?___lwdiv^(0+1280),w,c
  2081   0028DC  6E3B               	movwf	LCD_ESCRIBE_VAR_INT@decena^(0+1280),c
  2082                           
  2083                           ;LCD.c: 234:     unidad = numero % 10;
  2084   0028DE  C533  F501         	movff	LCD_ESCRIBE_VAR_INT@numero,___lwmod@dividend
  2085   0028E2  C534  F502         	movff	LCD_ESCRIBE_VAR_INT@numero+1,___lwmod@dividend+1
  2086   0028E6  0E00               	movlw	0
  2087   0028E8  6E04               	movwf	(___lwmod@divisor+1)^(0+1280),c
  2088   0028EA  0E0A               	movlw	10
  2089   0028EC  6E03               	movwf	___lwmod@divisor^(0+1280),c
  2090   0028EE  ECE7  F016         	call	___lwmod	;wreg free
  2091   0028F2  5001               	movf	?___lwmod^(0+1280),w,c
  2092   0028F4  6E3C               	movwf	LCD_ESCRIBE_VAR_INT@unidad^(0+1280),c
  2093                           
  2094                           ;LCD.c: 235:     switch(n_digitos){
  2095   0028F6  D041               	goto	l1732
  2096   0028F8                     l1720:
  2097                           
  2098                           ;LCD.c: 237:             ENVIA_CHAR(unidad+0x30);
  2099   0028F8  503C               	movf	LCD_ESCRIBE_VAR_INT@unidad^(0+1280),w,c
  2100   0028FA  0F30               	addlw	48
  2101   0028FC  EC7D  F017         	call	_ENVIA_CHAR
  2102                           
  2103                           ;LCD.c: 238:             break;
  2104   002900  0012               	return	
  2105   002902                     l1722:
  2106                           
  2107                           ;LCD.c: 240:             ENVIA_CHAR(decena+0x30);
  2108   002902  503B               	movf	LCD_ESCRIBE_VAR_INT@decena^(0+1280),w,c
  2109   002904  0F30               	addlw	48
  2110   002906  EC7D  F017         	call	_ENVIA_CHAR
  2111                           
  2112                           ;LCD.c: 241:             ENVIA_CHAR(unidad+0x30);
  2113   00290A  503C               	movf	LCD_ESCRIBE_VAR_INT@unidad^(0+1280),w,c
  2114   00290C  0F30               	addlw	48
  2115   00290E  EC7D  F017         	call	_ENVIA_CHAR
  2116                           
  2117                           ;LCD.c: 242:             break;
  2118   002912  0012               	return	
  2119   002914                     l1724:
  2120                           
  2121                           ;LCD.c: 244:             ENVIA_CHAR(centena+0x30);
  2122   002914  503A               	movf	LCD_ESCRIBE_VAR_INT@centena^(0+1280),w,c
  2123   002916  0F30               	addlw	48
  2124   002918  EC7D  F017         	call	_ENVIA_CHAR
  2125                           
  2126                           ;LCD.c: 245:             ENVIA_CHAR(decena+0x30);
  2127   00291C  503B               	movf	LCD_ESCRIBE_VAR_INT@decena^(0+1280),w,c
  2128   00291E  0F30               	addlw	48
  2129   002920  EC7D  F017         	call	_ENVIA_CHAR
  2130                           
  2131                           ;LCD.c: 246:             ENVIA_CHAR(unidad+0x30);
  2132   002924  503C               	movf	LCD_ESCRIBE_VAR_INT@unidad^(0+1280),w,c
  2133   002926  0F30               	addlw	48
  2134   002928  EC7D  F017         	call	_ENVIA_CHAR
  2135                           
  2136                           ;LCD.c: 247:             break;
  2137   00292C  0012               	return	
  2138   00292E                     l1726:
  2139                           
  2140                           ;LCD.c: 249:             ENVIA_CHAR(millar+0x30);
  2141   00292E  5039               	movf	LCD_ESCRIBE_VAR_INT@millar^(0+1280),w,c
  2142   002930  0F30               	addlw	48
  2143   002932  EC7D  F017         	call	_ENVIA_CHAR
  2144                           
  2145                           ;LCD.c: 250:             ENVIA_CHAR(centena+0x30);
  2146   002936  503A               	movf	LCD_ESCRIBE_VAR_INT@centena^(0+1280),w,c
  2147   002938  0F30               	addlw	48
  2148   00293A  EC7D  F017         	call	_ENVIA_CHAR
  2149                           
  2150                           ;LCD.c: 251:             ENVIA_CHAR(decena+0x30);
  2151   00293E  503B               	movf	LCD_ESCRIBE_VAR_INT@decena^(0+1280),w,c
  2152   002940  0F30               	addlw	48
  2153   002942  EC7D  F017         	call	_ENVIA_CHAR
  2154                           
  2155                           ;LCD.c: 252:             ENVIA_CHAR(unidad+0x30);
  2156   002946  503C               	movf	LCD_ESCRIBE_VAR_INT@unidad^(0+1280),w,c
  2157   002948  0F30               	addlw	48
  2158   00294A  EC7D  F017         	call	_ENVIA_CHAR
  2159                           
  2160                           ;LCD.c: 253:             break;
  2161   00294E  0012               	return	
  2162   002950                     l1728:
  2163                           
  2164                           ;LCD.c: 255:             ENVIA_CHAR(d_millar+0x30);
  2165   002950  5038               	movf	LCD_ESCRIBE_VAR_INT@d_millar^(0+1280),w,c
  2166   002952  0F30               	addlw	48
  2167   002954  EC7D  F017         	call	_ENVIA_CHAR
  2168                           
  2169                           ;LCD.c: 256:             ENVIA_CHAR(millar+0x30);
  2170   002958  5039               	movf	LCD_ESCRIBE_VAR_INT@millar^(0+1280),w,c
  2171   00295A  0F30               	addlw	48
  2172   00295C  EC7D  F017         	call	_ENVIA_CHAR
  2173                           
  2174                           ;LCD.c: 257:             ENVIA_CHAR(centena+0x30);
  2175   002960  503A               	movf	LCD_ESCRIBE_VAR_INT@centena^(0+1280),w,c
  2176   002962  0F30               	addlw	48
  2177   002964  EC7D  F017         	call	_ENVIA_CHAR
  2178                           
  2179                           ;LCD.c: 258:             ENVIA_CHAR(decena+0x30);
  2180   002968  503B               	movf	LCD_ESCRIBE_VAR_INT@decena^(0+1280),w,c
  2181   00296A  0F30               	addlw	48
  2182   00296C  EC7D  F017         	call	_ENVIA_CHAR
  2183                           
  2184                           ;LCD.c: 259:             ENVIA_CHAR(unidad+0x30);
  2185   002970  503C               	movf	LCD_ESCRIBE_VAR_INT@unidad^(0+1280),w,c
  2186   002972  0F30               	addlw	48
  2187   002974  EC7D  F017         	call	_ENVIA_CHAR
  2188                           
  2189                           ;LCD.c: 260:             break;
  2190   002978  0012               	return	
  2191   00297A                     l1732:
  2192   00297A  5035               	movf	LCD_ESCRIBE_VAR_INT@n_digitos^(0+1280),w,c
  2193   00297C  6E36               	movwf	??_LCD_ESCRIBE_VAR_INT^(0+1280),c
  2194   00297E  6A37               	clrf	(??_LCD_ESCRIBE_VAR_INT+1)^(0+1280),c
  2195                           
  2196                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2197                           ; Switch size 1, requested type "simple"
  2198                           ; Number of cases is 1, Range of values is 0 to 0
  2199                           ; switch strategies available:
  2200                           ; Name         Instructions Cycles
  2201                           ; simple_byte            4     3 (average)
  2202                           ;	Chosen strategy is simple_byte
  2203   002980  5037               	movf	(??_LCD_ESCRIBE_VAR_INT+1)^(0+1280),w,c
  2204   002982  0A00               	xorlw	0	; case 0
  2205   002984  A4D8               	btfss	status,2,c
  2206   002986  0012               	return	
  2207                           
  2208                           ; Switch size 1, requested type "simple"
  2209                           ; Number of cases is 5, Range of values is 1 to 5
  2210                           ; switch strategies available:
  2211                           ; Name         Instructions Cycles
  2212                           ; simple_byte           16     9 (average)
  2213                           ;	Chosen strategy is simple_byte
  2214   002988  5036               	movf	??_LCD_ESCRIBE_VAR_INT^(0+1280),w,c
  2215   00298A  0A01               	xorlw	1	; case 1
  2216   00298C  B4D8               	btfsc	status,2,c
  2217   00298E  D7B4               	goto	l1720
  2218   002990  0A03               	xorlw	3	; case 2
  2219   002992  B4D8               	btfsc	status,2,c
  2220   002994  D7B6               	goto	l1722
  2221   002996  0A01               	xorlw	1	; case 3
  2222   002998  B4D8               	btfsc	status,2,c
  2223   00299A  D7BC               	goto	l1724
  2224   00299C  0A07               	xorlw	7	; case 4
  2225   00299E  B4D8               	btfsc	status,2,c
  2226   0029A0  D7C6               	goto	l1726
  2227   0029A2  0A01               	xorlw	1	; case 5
  2228   0029A4  A4D8               	btfss	status,2,c
  2229   0029A6  0012               	return	
  2230   0029A8  D7D3               	goto	l1728
  2231   0029AA                     __end_of_LCD_ESCRIBE_VAR_INT:
  2232                           	callstack 0
  2233                           
  2234 ;; *************** function ___lwmod *****************
  2235 ;; Defined at:
  2236 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\lwmod.c"
  2237 ;; Parameters:    Size  Location     Type
  2238 ;;  dividend        2    0[COMRAM] unsigned int 
  2239 ;;  divisor         2    2[COMRAM] unsigned int 
  2240 ;; Auto vars:     Size  Location     Type
  2241 ;;  counter         1    4[COMRAM] unsigned char 
  2242 ;; Return value:  Size  Location     Type
  2243 ;;                  2    0[COMRAM] unsigned int 
  2244 ;; Registers used:
  2245 ;;		wreg, status,2, status,0
  2246 ;; Tracked objects:
  2247 ;;		On entry : 0/3
  2248 ;;		On exit  : 0/0
  2249 ;;		Unchanged: 0/0
  2250 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2251 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2252 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2253 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2254 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2255 ;;Total ram usage:        5 bytes
  2256 ;; Hardware stack levels used: 1
  2257 ;; This function calls:
  2258 ;;		Nothing
  2259 ;; This function is called by:
  2260 ;;		_LCD_ESCRIBE_VAR_INT
  2261 ;; This function uses a non-reentrant model
  2262 ;;
  2263                           
  2264                           	psect	text14
  2265   002DCE                     __ptext14:
  2266                           	callstack 0
  2267   002DCE                     ___lwmod:
  2268                           	callstack 125
  2269                           
  2270                           ;incstack = 0
  2271   002DCE  5003               	movf	___lwmod@divisor^(0+1280),w,c
  2272   002DD0  1004               	iorwf	(___lwmod@divisor+1)^(0+1280),w,c
  2273   002DD2  B4D8               	btfsc	status,2,c
  2274   002DD4  D018               	goto	l696
  2275   002DD6  0E01               	movlw	1
  2276   002DD8  6E05               	movwf	___lwmod@counter^(0+1280),c
  2277   002DDA  D004               	goto	l1618
  2278   002DDC                     l1616:
  2279   002DDC  90D8               	bcf	status,0,c
  2280   002DDE  3603               	rlcf	___lwmod@divisor^(0+1280),f,c
  2281   002DE0  3604               	rlcf	(___lwmod@divisor+1)^(0+1280),f,c
  2282   002DE2  2A05               	incf	___lwmod@counter^(0+1280),f,c
  2283   002DE4                     l1618:
  2284   002DE4  AE04               	btfss	(___lwmod@divisor+1)^(0+1280),7,c
  2285   002DE6  D7FA               	goto	l1616
  2286   002DE8                     u820:
  2287   002DE8  5003               	movf	___lwmod@divisor^(0+1280),w,c
  2288   002DEA  5C01               	subwf	___lwmod@dividend^(0+1280),w,c
  2289   002DEC  5004               	movf	(___lwmod@divisor+1)^(0+1280),w,c
  2290   002DEE  5802               	subwfb	(___lwmod@dividend+1)^(0+1280),w,c
  2291   002DF0  A0D8               	btfss	status,0,c
  2292   002DF2  D004               	goto	l1624
  2293   002DF4  5003               	movf	___lwmod@divisor^(0+1280),w,c
  2294   002DF6  5E01               	subwf	___lwmod@dividend^(0+1280),f,c
  2295   002DF8  5004               	movf	(___lwmod@divisor+1)^(0+1280),w,c
  2296   002DFA  5A02               	subwfb	(___lwmod@dividend+1)^(0+1280),f,c
  2297   002DFC                     l1624:
  2298   002DFC  90D8               	bcf	status,0,c
  2299   002DFE  3204               	rrcf	(___lwmod@divisor+1)^(0+1280),f,c
  2300   002E00  3203               	rrcf	___lwmod@divisor^(0+1280),f,c
  2301   002E02  2E05               	decfsz	___lwmod@counter^(0+1280),f,c
  2302   002E04  D7F1               	goto	u820
  2303   002E06                     l696:
  2304   002E06  C501  F501         	movff	___lwmod@dividend,?___lwmod
  2305   002E0A  C502  F502         	movff	___lwmod@dividend+1,?___lwmod+1
  2306   002E0E  0012               	return		;funcret
  2307   002E10                     __end_of___lwmod:
  2308                           	callstack 0
  2309                           
  2310 ;; *************** function ___lwdiv *****************
  2311 ;; Defined at:
  2312 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\lwdiv.c"
  2313 ;; Parameters:    Size  Location     Type
  2314 ;;  dividend        2    5[COMRAM] unsigned int 
  2315 ;;  divisor         2    7[COMRAM] unsigned int 
  2316 ;; Auto vars:     Size  Location     Type
  2317 ;;  quotient        2    9[COMRAM] unsigned int 
  2318 ;;  counter         1   11[COMRAM] unsigned char 
  2319 ;; Return value:  Size  Location     Type
  2320 ;;                  2    5[COMRAM] unsigned int 
  2321 ;; Registers used:
  2322 ;;		wreg, status,2, status,0
  2323 ;; Tracked objects:
  2324 ;;		On entry : 0/3
  2325 ;;		On exit  : 0/0
  2326 ;;		Unchanged: 0/0
  2327 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2328 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2329 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2330 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2331 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2332 ;;Total ram usage:        7 bytes
  2333 ;; Hardware stack levels used: 1
  2334 ;; This function calls:
  2335 ;;		Nothing
  2336 ;; This function is called by:
  2337 ;;		_LCD_ESCRIBE_VAR_INT
  2338 ;; This function uses a non-reentrant model
  2339 ;;
  2340                           
  2341                           	psect	text15
  2342   002D34                     __ptext15:
  2343                           	callstack 0
  2344   002D34                     ___lwdiv:
  2345                           	callstack 125
  2346                           
  2347                           ;incstack = 0
  2348   002D34  0E00               	movlw	0
  2349   002D36  6E0B               	movwf	(___lwdiv@quotient+1)^(0+1280),c
  2350   002D38  0E00               	movlw	0
  2351   002D3A  6E0A               	movwf	___lwdiv@quotient^(0+1280),c
  2352   002D3C  5008               	movf	___lwdiv@divisor^(0+1280),w,c
  2353   002D3E  1009               	iorwf	(___lwdiv@divisor+1)^(0+1280),w,c
  2354   002D40  B4D8               	btfsc	status,2,c
  2355   002D42  D01C               	goto	l686
  2356   002D44  0E01               	movlw	1
  2357   002D46  6E0C               	movwf	___lwdiv@counter^(0+1280),c
  2358   002D48  D004               	goto	l1598
  2359   002D4A                     l1596:
  2360   002D4A  90D8               	bcf	status,0,c
  2361   002D4C  3608               	rlcf	___lwdiv@divisor^(0+1280),f,c
  2362   002D4E  3609               	rlcf	(___lwdiv@divisor+1)^(0+1280),f,c
  2363   002D50  2A0C               	incf	___lwdiv@counter^(0+1280),f,c
  2364   002D52                     l1598:
  2365   002D52  AE09               	btfss	(___lwdiv@divisor+1)^(0+1280),7,c
  2366   002D54  D7FA               	goto	l1596
  2367   002D56                     u790:
  2368   002D56  90D8               	bcf	status,0,c
  2369   002D58  360A               	rlcf	___lwdiv@quotient^(0+1280),f,c
  2370   002D5A  360B               	rlcf	(___lwdiv@quotient+1)^(0+1280),f,c
  2371   002D5C  5008               	movf	___lwdiv@divisor^(0+1280),w,c
  2372   002D5E  5C06               	subwf	___lwdiv@dividend^(0+1280),w,c
  2373   002D60  5009               	movf	(___lwdiv@divisor+1)^(0+1280),w,c
  2374   002D62  5807               	subwfb	(___lwdiv@dividend+1)^(0+1280),w,c
  2375   002D64  A0D8               	btfss	status,0,c
  2376   002D66  D005               	goto	l1608
  2377   002D68  5008               	movf	___lwdiv@divisor^(0+1280),w,c
  2378   002D6A  5E06               	subwf	___lwdiv@dividend^(0+1280),f,c
  2379   002D6C  5009               	movf	(___lwdiv@divisor+1)^(0+1280),w,c
  2380   002D6E  5A07               	subwfb	(___lwdiv@dividend+1)^(0+1280),f,c
  2381   002D70  800A               	bsf	___lwdiv@quotient^(0+1280),0,c
  2382   002D72                     l1608:
  2383   002D72  90D8               	bcf	status,0,c
  2384   002D74  3209               	rrcf	(___lwdiv@divisor+1)^(0+1280),f,c
  2385   002D76  3208               	rrcf	___lwdiv@divisor^(0+1280),f,c
  2386   002D78  2E0C               	decfsz	___lwdiv@counter^(0+1280),f,c
  2387   002D7A  D7ED               	goto	u790
  2388   002D7C                     l686:
  2389   002D7C  C50A  F506         	movff	___lwdiv@quotient,?___lwdiv
  2390   002D80  C50B  F507         	movff	___lwdiv@quotient+1,?___lwdiv+1
  2391   002D84  0012               	return		;funcret
  2392   002D86                     __end_of___lwdiv:
  2393                           	callstack 0
  2394                           
  2395 ;; *************** function _ESCRIBE_MENSAJE2 *****************
  2396 ;; Defined at:
  2397 ;;		line 81 in file "LCD.c"
  2398 ;; Parameters:    Size  Location     Type
  2399 ;;  cadena          1    3[COMRAM] PTR const unsigned char 
  2400 ;;		 -> STR_2(9), STR_1(11), 
  2401 ;; Auto vars:     Size  Location     Type
  2402 ;;  i               1    6[COMRAM] unsigned char 
  2403 ;;  tam             1    5[COMRAM] unsigned char 
  2404 ;; Return value:  Size  Location     Type
  2405 ;;                  1    wreg      void 
  2406 ;; Registers used:
  2407 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2408 ;; Tracked objects:
  2409 ;;		On entry : 0/0
  2410 ;;		On exit  : 0/0
  2411 ;;		Unchanged: 0/0
  2412 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2413 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2414 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2415 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2416 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2417 ;;Total ram usage:        4 bytes
  2418 ;; Hardware stack levels used: 1
  2419 ;; Hardware stack levels required when called: 2
  2420 ;; This function calls:
  2421 ;;		_ENVIA_CHAR
  2422 ;;		_strlen
  2423 ;; This function is called by:
  2424 ;;		_main
  2425 ;; This function uses a non-reentrant model
  2426 ;;
  2427                           
  2428                           	psect	text16
  2429   002E8E                     __ptext16:
  2430                           	callstack 0
  2431   002E8E                     _ESCRIBE_MENSAJE2:
  2432                           	callstack 124
  2433                           
  2434                           ;LCD.c: 81: void ESCRIBE_MENSAJE2(const char *cadena);LCD.c: 82: {;LCD.c: 83:     unsign
      +                          ed char tam;;LCD.c: 84:     tam = strlen(cadena);
  2435                           
  2436                           ;incstack = 0
  2437   002E8E  C504  F501         	movff	ESCRIBE_MENSAJE2@cadena,strlen@s
  2438   002E92  EC97  F017         	call	_strlen	;wreg free
  2439   002E96  5001               	movf	?_strlen^(0+1280),w,c
  2440   002E98  6E06               	movwf	ESCRIBE_MENSAJE2@tam^(0+1280),c
  2441                           
  2442                           ;LCD.c: 86:  for(i = 0; i<tam; i++)
  2443   002E9A  0E00               	movlw	0
  2444   002E9C  6E07               	movwf	ESCRIBE_MENSAJE2@i^(0+1280),c
  2445   002E9E  D00E               	goto	l1716
  2446   002EA0                     l1712:
  2447                           
  2448                           ;LCD.c: 87:  {;LCD.c: 88:   ENVIA_CHAR(cadena[i]);
  2449   002EA0  5004               	movf	ESCRIBE_MENSAJE2@cadena^(0+1280),w,c
  2450   002EA2  2407               	addwf	ESCRIBE_MENSAJE2@i^(0+1280),w,c
  2451   002EA4  6E05               	movwf	??_ESCRIBE_MENSAJE2^(0+1280),c
  2452   002EA6  C505  F4F6         	movff	??_ESCRIBE_MENSAJE2,tblptrl
  2453   002EAA                     	if	1	;There is more than 1 active tblptr byte
  2454   002EAA  0E25               	movlw	high __smallconst
  2455   002EAC  6EF7               	movwf	tblptrh,c
  2456   002EAE                     	endif
  2457   002EAE                     	if	0	;tblptru may be non-zero
  2458   002EAE                     	endif
  2459   002EAE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2460   002EAE  0E00               	movlw	low (__smallconst shr (0+16))
  2461   002EB0  6EF8               	movwf	tblptru,c
  2462   002EB2                     	endif
  2463   002EB2  0008               	tblrd		*
  2464   002EB4  50F5               	movf	tablat,w,c
  2465   002EB6  EC7D  F017         	call	_ENVIA_CHAR
  2466                           
  2467                           ;LCD.c: 89:  }
  2468   002EBA  2A07               	incf	ESCRIBE_MENSAJE2@i^(0+1280),f,c
  2469   002EBC                     l1716:
  2470   002EBC  5006               	movf	ESCRIBE_MENSAJE2@tam^(0+1280),w,c
  2471   002EBE  5C07               	subwf	ESCRIBE_MENSAJE2@i^(0+1280),w,c
  2472   002EC0  B0D8               	btfsc	status,0,c
  2473   002EC2  0012               	return	
  2474   002EC4  D7ED               	goto	l1712
  2475   002EC6                     __end_of_ESCRIBE_MENSAJE2:
  2476                           	callstack 0
  2477                           
  2478 ;; *************** function _strlen *****************
  2479 ;; Defined at:
  2480 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\strlen.c"
  2481 ;; Parameters:    Size  Location     Type
  2482 ;;  s               1    0[COMRAM] PTR const unsigned char 
  2483 ;;		 -> STR_2(9), STR_1(11), 
  2484 ;; Auto vars:     Size  Location     Type
  2485 ;;  a               1    2[COMRAM] PTR const unsigned char 
  2486 ;;		 -> STR_2(9), STR_1(11), 
  2487 ;; Return value:  Size  Location     Type
  2488 ;;                  2    0[COMRAM] unsigned int 
  2489 ;; Registers used:
  2490 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  2491 ;; Tracked objects:
  2492 ;;		On entry : 0/0
  2493 ;;		On exit  : 0/0
  2494 ;;		Unchanged: 0/0
  2495 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2496 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2497 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2498 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2499 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2500 ;;Total ram usage:        3 bytes
  2501 ;; Hardware stack levels used: 1
  2502 ;; This function calls:
  2503 ;;		Nothing
  2504 ;; This function is called by:
  2505 ;;		_ESCRIBE_MENSAJE2
  2506 ;; This function uses a non-reentrant model
  2507 ;;
  2508                           
  2509                           	psect	text17
  2510   002F2E                     __ptext17:
  2511                           	callstack 0
  2512   002F2E                     _strlen:
  2513                           	callstack 125
  2514                           
  2515                           ;incstack = 0
  2516   002F2E  C501  F503         	movff	strlen@s,strlen@a
  2517   002F32  D001               	goto	l1410
  2518   002F34                     l1408:
  2519   002F34  2A01               	incf	strlen@s^(0+1280),f,c
  2520   002F36                     l1410:
  2521   002F36  C501  F4F6         	movff	strlen@s,tblptrl
  2522   002F3A                     	if	1	;There is more than 1 active tblptr byte
  2523   002F3A  0E25               	movlw	high __smallconst
  2524   002F3C  6EF7               	movwf	tblptrh,c
  2525   002F3E                     	endif
  2526   002F3E                     	if	0	;tblptru may be non-zero
  2527   002F3E                     	endif
  2528   002F3E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2529   002F3E  0E00               	movlw	low (__smallconst shr (0+16))
  2530   002F40  6EF8               	movwf	tblptru,c
  2531   002F42                     	endif
  2532   002F42  0008               	tblrd		*
  2533   002F44  50F5               	movf	tablat,w,c
  2534   002F46  0900               	iorlw	0
  2535   002F48  A4D8               	btfss	status,2,c
  2536   002F4A  D7F4               	goto	l1408
  2537   002F4C  5003               	movf	strlen@a^(0+1280),w,c
  2538   002F4E  5C01               	subwf	strlen@s^(0+1280),w,c
  2539   002F50  6E01               	movwf	?_strlen^(0+1280),c
  2540   002F52  6A02               	clrf	(?_strlen+1)^(0+1280),c
  2541   002F54  BE01               	btfsc	?_strlen^(0+1280),7,c
  2542   002F56  0602               	decf	(?_strlen+1)^(0+1280),f,c
  2543   002F58  0012               	return		;funcret
  2544   002F5A                     __end_of_strlen:
  2545                           	callstack 0
  2546                           
  2547 ;; *************** function _ENVIA_CHAR *****************
  2548 ;; Defined at:
  2549 ;;		line 92 in file "LCD.c"
  2550 ;; Parameters:    Size  Location     Type
  2551 ;;  dato            1    wreg     unsigned char 
  2552 ;; Auto vars:     Size  Location     Type
  2553 ;;  dato            1    1[COMRAM] unsigned char 
  2554 ;;  aux             1    2[COMRAM] unsigned char 
  2555 ;; Return value:  Size  Location     Type
  2556 ;;                  1    wreg      void 
  2557 ;; Registers used:
  2558 ;;		wreg, status,2, status,0, cstack
  2559 ;; Tracked objects:
  2560 ;;		On entry : 0/3
  2561 ;;		On exit  : 0/0
  2562 ;;		Unchanged: 0/0
  2563 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2564 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2565 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2566 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2567 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2568 ;;Total ram usage:        2 bytes
  2569 ;; Hardware stack levels used: 1
  2570 ;; Hardware stack levels required when called: 1
  2571 ;; This function calls:
  2572 ;;		_ENVIA_NIBBLE
  2573 ;;		_LEER_LCD
  2574 ;; This function is called by:
  2575 ;;		_ESCRIBE_MENSAJE2
  2576 ;;		_LCD_ESCRIBE_VAR_INT
  2577 ;; This function uses a non-reentrant model
  2578 ;;
  2579                           
  2580                           	psect	text18
  2581   002EFA                     __ptext18:
  2582                           	callstack 0
  2583   002EFA                     _ENVIA_CHAR:
  2584                           	callstack 124
  2585                           
  2586                           ;incstack = 0
  2587                           ;ENVIA_CHAR@dato stored from wreg
  2588   002EFA  6E02               	movwf	ENVIA_CHAR@dato^(0+1280),c
  2589                           
  2590                           ;LCD.c: 92: void ENVIA_CHAR(unsigned char dato);LCD.c: 93: {;LCD.c: 94:  unsigned char a
      +                          ux;;LCD.c: 95:  LATDbits.LATD0 = 1;
  2591   002EFC  80C1               	bsf	193,0,c	;volatile
  2592                           
  2593                           ;LCD.c: 96:  LEER_LCD();
  2594   002EFE  EC17  F016         	call	_LEER_LCD	;wreg free
  2595                           
  2596                           ;LCD.c: 97:  TRISD = 0x00;
  2597   002F02  0E00               	movlw	0
  2598   002F04  6EC9               	movwf	201,c	;volatile
  2599                           
  2600                           ;LCD.c: 98:     _delay((unsigned long)((100)*(16000000UL/4000000.0)));
  2601   002F06  0E85               	movlw	133
  2602   002F08                     u1057:
  2603   002F08  2EE8               	decfsz	wreg,f,c
  2604   002F0A  D7FE               	bra	u1057
  2605   002F0C  0000               	nop	
  2606                           
  2607                           ;LCD.c: 99:  LATDbits.LATD1 = 0;
  2608   002F0E  92C1               	bcf	193,1,c	;volatile
  2609                           
  2610                           ;LCD.c: 100:  LATDbits.LATD2 = 0;
  2611   002F10  94C1               	bcf	193,2,c	;volatile
  2612                           
  2613                           ;LCD.c: 101:  LATDbits.LATD0 = 1;
  2614   002F12  80C1               	bsf	193,0,c	;volatile
  2615                           
  2616                           ;LCD.c: 102:  aux = dato & 0xF0;
  2617   002F14  5002               	movf	ENVIA_CHAR@dato^(0+1280),w,c
  2618   002F16  0BF0               	andlw	240
  2619   002F18  6E03               	movwf	ENVIA_CHAR@aux^(0+1280),c
  2620                           
  2621                           ;LCD.c: 103:  ENVIA_NIBBLE(aux);
  2622   002F1A  5003               	movf	ENVIA_CHAR@aux^(0+1280),w,c
  2623   002F1C  ECBB  F017         	call	_ENVIA_NIBBLE
  2624                           
  2625                           ;LCD.c: 104:  aux = dato << 4;
  2626   002F20  3802               	swapf	ENVIA_CHAR@dato^(0+1280),w,c
  2627   002F22  0BF0               	andlw	240
  2628   002F24  6E03               	movwf	ENVIA_CHAR@aux^(0+1280),c
  2629                           
  2630                           ;LCD.c: 105:  ENVIA_NIBBLE(aux);
  2631   002F26  5003               	movf	ENVIA_CHAR@aux^(0+1280),w,c
  2632   002F28  ECBB  F017         	call	_ENVIA_NIBBLE
  2633   002F2C  0012               	return		;funcret
  2634   002F2E                     __end_of_ENVIA_CHAR:
  2635                           	callstack 0
  2636                           
  2637 ;; *************** function _LEER_LCD *****************
  2638 ;; Defined at:
  2639 ;;		line 156 in file "LCD.c"
  2640 ;; Parameters:    Size  Location     Type
  2641 ;;		None
  2642 ;; Auto vars:     Size  Location     Type
  2643 ;;  aux             1    0[COMRAM] unsigned char 
  2644 ;; Return value:  Size  Location     Type
  2645 ;;                  1    wreg      void 
  2646 ;; Registers used:
  2647 ;;		wreg, status,2, status,0
  2648 ;; Tracked objects:
  2649 ;;		On entry : 0/4
  2650 ;;		On exit  : 0/0
  2651 ;;		Unchanged: 0/0
  2652 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2653 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2654 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2655 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2656 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2657 ;;Total ram usage:        1 bytes
  2658 ;; Hardware stack levels used: 1
  2659 ;; This function calls:
  2660 ;;		Nothing
  2661 ;; This function is called by:
  2662 ;;		_ENVIA_CHAR
  2663 ;;		_ENVIA_LCD_CMD
  2664 ;; This function uses a non-reentrant model
  2665 ;;
  2666                           
  2667                           	psect	text19
  2668   002C2E                     __ptext19:
  2669                           	callstack 0
  2670   002C2E                     _LEER_LCD:
  2671                           	callstack 122
  2672                           
  2673                           ;LCD.c: 158:  unsigned char aux;;LCD.c: 159:  TRISD = 0xF8;
  2674                           
  2675                           ;incstack = 0
  2676   002C2E  0EF8               	movlw	248
  2677   002C30  6EC9               	movwf	201,c	;volatile
  2678                           
  2679                           ;LCD.c: 160:  LATDbits.LATD0 = 0;
  2680   002C32  90C1               	bcf	193,0,c	;volatile
  2681                           
  2682                           ;LCD.c: 161:  LATDbits.LATD1 = 1;
  2683   002C34  82C1               	bsf	193,1,c	;volatile
  2684                           
  2685                           ;LCD.c: 162:  LATDbits.LATD2 = 1;
  2686   002C36  84C1               	bsf	193,2,c	;volatile
  2687                           
  2688                           ;LCD.c: 163:     _delay((unsigned long)((100)*(16000000UL/4000000.0)));
  2689   002C38  0E85               	movlw	133
  2690   002C3A                     u1067:
  2691   002C3A  2EE8               	decfsz	wreg,f,c
  2692   002C3C  D7FE               	bra	u1067
  2693   002C3E  0000               	nop	
  2694                           
  2695                           ;LCD.c: 164:  aux = PORTD;
  2696   002C40  C4D1 F501          	movff	1233,LEER_LCD@aux	;volatile
  2697                           
  2698                           ;LCD.c: 165:  LATDbits.LATD2 = 0;
  2699   002C44  94C1               	bcf	193,2,c	;volatile
  2700                           
  2701                           ;LCD.c: 166:     _delay((unsigned long)((100)*(16000000UL/4000000.0)));
  2702   002C46  0E85               	movlw	133
  2703   002C48                     u1077:
  2704   002C48  2EE8               	decfsz	wreg,f,c
  2705   002C4A  D7FE               	bra	u1077
  2706   002C4C  0000               	nop	
  2707                           
  2708                           ;LCD.c: 167:  LATDbits.LATD2 = 1;
  2709   002C4E  84C1               	bsf	193,2,c	;volatile
  2710                           
  2711                           ;LCD.c: 168:     _delay((unsigned long)((100)*(16000000UL/4000000.0)));
  2712   002C50  0E85               	movlw	133
  2713   002C52                     u1087:
  2714   002C52  2EE8               	decfsz	wreg,f,c
  2715   002C54  D7FE               	bra	u1087
  2716   002C56  0000               	nop	
  2717                           
  2718                           ;LCD.c: 169:  LATDbits.LATD2 = 0;
  2719   002C58  94C1               	bcf	193,2,c	;volatile
  2720                           
  2721                           ;LCD.c: 170:  aux = aux & 0x80;
  2722   002C5A  5001               	movf	LEER_LCD@aux^(0+1280),w,c
  2723   002C5C  0B80               	andlw	128
  2724   002C5E  6E01               	movwf	LEER_LCD@aux^(0+1280),c
  2725                           
  2726                           ;LCD.c: 171:  while(aux == 0x80)
  2727   002C60  D011               	goto	l910
  2728   002C62                     l154:
  2729                           
  2730                           ;LCD.c: 172:         {;LCD.c: 173:             LATDbits.LATD2 = 1;
  2731   002C62  84C1               	bsf	193,2,c	;volatile
  2732                           
  2733                           ;LCD.c: 174:             _delay((unsigned long)((100)*(16000000UL/4000000.0)));
  2734   002C64  0E85               	movlw	133
  2735   002C66                     u1097:
  2736   002C66  2EE8               	decfsz	wreg,f,c
  2737   002C68  D7FE               	bra	u1097
  2738   002C6A  0000               	nop	
  2739                           
  2740                           ;LCD.c: 175:             aux = PORTD;
  2741   002C6C  C4D1 F501          	movff	1233,LEER_LCD@aux	;volatile
  2742                           
  2743                           ;LCD.c: 176:             LATDbits.LATD2 = 0;
  2744   002C70  94C1               	bcf	193,2,c	;volatile
  2745                           
  2746                           ;LCD.c: 177:             _delay((unsigned long)((100)*(16000000UL/4000000.0)));
  2747   002C72  0E85               	movlw	133
  2748   002C74                     u1107:
  2749   002C74  2EE8               	decfsz	wreg,f,c
  2750   002C76  D7FE               	bra	u1107
  2751   002C78  0000               	nop	
  2752                           
  2753                           ;LCD.c: 178:             LATDbits.LATD2 = 1;
  2754   002C7A  84C1               	bsf	193,2,c	;volatile
  2755                           
  2756                           ;LCD.c: 179:             _delay((unsigned long)((100)*(16000000UL/4000000.0)));
  2757   002C7C  0E85               	movlw	133
  2758   002C7E                     u1117:
  2759   002C7E  2EE8               	decfsz	wreg,f,c
  2760   002C80  D7FE               	bra	u1117
  2761   002C82  D7E9               	goto	L2
  2762   002C84                     l910:
  2763                           
  2764                           ;LCD.c: 171:  while(aux == 0x80)
  2765   002C84  0E80               	movlw	128
  2766   002C86  1801               	xorwf	LEER_LCD@aux^(0+1280),w,c
  2767   002C88  A4D8               	btfss	status,2,c
  2768   002C8A  0012               	return	
  2769   002C8C  D7EA               	goto	l154
  2770   002C8E                     __end_of_LEER_LCD:
  2771                           	callstack 0
  2772                           
  2773 ;; *************** function _ENVIA_NIBBLE *****************
  2774 ;; Defined at:
  2775 ;;		line 130 in file "LCD.c"
  2776 ;; Parameters:    Size  Location     Type
  2777 ;;  dato            1    wreg     unsigned char 
  2778 ;; Auto vars:     Size  Location     Type
  2779 ;;  dato            1    0[COMRAM] unsigned char 
  2780 ;; Return value:  Size  Location     Type
  2781 ;;                  1    wreg      void 
  2782 ;; Registers used:
  2783 ;;		wreg, status,2, status,0
  2784 ;; Tracked objects:
  2785 ;;		On entry : 0/4
  2786 ;;		On exit  : 0/0
  2787 ;;		Unchanged: 0/0
  2788 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2789 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2790 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2791 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2792 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2793 ;;Total ram usage:        1 bytes
  2794 ;; Hardware stack levels used: 1
  2795 ;; This function calls:
  2796 ;;		Nothing
  2797 ;; This function is called by:
  2798 ;;		_ENVIA_CHAR
  2799 ;;		_LCD_CONFIG
  2800 ;;		_ENVIA_LCD_CMD
  2801 ;; This function uses a non-reentrant model
  2802 ;;
  2803                           
  2804                           	psect	text20
  2805   002F76                     __ptext20:
  2806                           	callstack 0
  2807   002F76                     _ENVIA_NIBBLE:
  2808                           	callstack 123
  2809                           
  2810                           ;incstack = 0
  2811                           ;ENVIA_NIBBLE@dato stored from wreg
  2812   002F76  6E01               	movwf	ENVIA_NIBBLE@dato^(0+1280),c
  2813                           
  2814                           ;LCD.c: 130: void ENVIA_NIBBLE(unsigned char dato);LCD.c: 131: {;LCD.c: 132:  LATD &= 0x
      +                          0F;
  2815   002F78  0E0F               	movlw	15
  2816   002F7A  16C1               	andwf	193,f,c	;volatile
  2817                           
  2818                           ;LCD.c: 133:  dato &= 0xF0;
  2819   002F7C  0EF0               	movlw	240
  2820   002F7E  1601               	andwf	ENVIA_NIBBLE@dato^(0+1280),f,c
  2821                           
  2822                           ;LCD.c: 134:  LATD|= dato;
  2823   002F80  5001               	movf	ENVIA_NIBBLE@dato^(0+1280),w,c	;volatile
  2824   002F82  12C1               	iorwf	193,f,c	;volatile
  2825                           
  2826                           ;LCD.c: 135:  LATDbits.LATD2 = 1;
  2827   002F84  84C1               	bsf	193,2,c	;volatile
  2828                           
  2829                           ;LCD.c: 136:     _delay((unsigned long)((100)*(16000000UL/4000000.0)));
  2830   002F86  0E85               	movlw	133
  2831   002F88                     u1127:
  2832   002F88  2EE8               	decfsz	wreg,f,c
  2833   002F8A  D7FE               	bra	u1127
  2834   002F8C  0000               	nop	
  2835                           
  2836                           ;LCD.c: 137:  LATDbits.LATD2 = 0;
  2837   002F8E  94C1               	bcf	193,2,c	;volatile
  2838   002F90  0012               	return		;funcret
  2839   002F92                     __end_of_ENVIA_NIBBLE:
  2840                           	callstack 0
  2841                           
  2842                           	psect	rparam
  2843   000000                     
  2844                           	psect	config
  2845                           
  2846                           ;Config register CONFIG1 @ 0x300000
  2847                           ;	External Oscillator Selection
  2848                           ;	FEXTOSC = OFF, Oscillator not enabled
  2849                           ;	Reset Oscillator Selection
  2850                           ;	RSTOSC = EXTOSC, EXTOSC operating per FEXTOSC bits (device manufacturing default)
  2851   300000                     	org	3145728
  2852   300000  FC                 	db	252
  2853                           
  2854                           ;Config register CONFIG2 @ 0x300001
  2855                           ;	Clock out Enable bit
  2856                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
  2857                           ;	PRLOCKED One-Way Set Enable bit
  2858                           ;	PR1WAY = ON, PRLOCKED bit can be cleared and set only once
  2859                           ;	Clock Switch Enable bit
  2860                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
  2861                           ;	Fail-Safe Clock Monitor Enable bit
  2862                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
  2863   300001                     	org	3145729
  2864   300001  FF                 	db	255
  2865                           
  2866                           ;Config register CONFIG3 @ 0x300002
  2867                           ;	MCLR Enable bit
  2868                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
  2869                           ;	Power-up timer selection bits
  2870                           ;	PWRTS = PWRT_64, PWRT set at 64ms
  2871                           ;	Multi-vector enable bit
  2872                           ;	MVECEN = ON, Multi-vector enabled, Vector table used for interrupts
  2873                           ;	IVTLOCK bit One-way set enable bit
  2874                           ;	IVT1WAY = ON, IVTLOCKED bit can be cleared and set only once
  2875                           ;	Low Power BOR Enable bit
  2876                           ;	LPBOREN = OFF, Low-Power BOR disabled
  2877                           ;	Brown-out Reset Enable bits
  2878                           ;	BOREN = OFF, Brown-out Reset disabled
  2879   300002                     	org	3145730
  2880   300002  3D                 	db	61
  2881                           
  2882                           ;Config register CONFIG4 @ 0x300003
  2883                           ;	Brown-out Reset Voltage Selection bits
  2884                           ;	BORV = VBOR_1P9, Brown-out Reset Voltage (VBOR) set to 1.9V
  2885                           ;	ZCD Disable bit
  2886                           ;	ZCD = OFF, ZCD module is disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCD
      +                          CON
  2887                           ;	PPSLOCK bit One-Way Set Enable bit
  2888                           ;	PPS1WAY = ON, PPSLOCKED bit can be cleared and set only once; PPS registers remain loc
      +                          ked after one clear/set cycle
  2889                           ;	Stack Full/Underflow Reset Enable bit
  2890                           ;	STVREN = ON, Stack full/underflow will cause Reset
  2891                           ;	Low Voltage Programming Enable bit
  2892                           ;	LVP = OFF, HV on MCLR/VPP must be used for programming
  2893                           ;	Extended Instruction Set Enable bit
  2894                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
  2895   300003                     	org	3145731
  2896   300003  DF                 	db	223
  2897                           
  2898                           ;Config register CONFIG5 @ 0x300004
  2899                           ;	WDT Period selection bits
  2900                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  2901                           ;	WDT operating mode
  2902                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
  2903   300004                     	org	3145732
  2904   300004  9F                 	db	159
  2905                           
  2906                           ;Config register CONFIG6 @ 0x300005
  2907                           ;	WDT Window Select bits
  2908                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
  2909                           ;	WDT input clock selector
  2910                           ;	WDTCCS = SC, Software Control
  2911   300005                     	org	3145733
  2912   300005  FF                 	db	255
  2913                           
  2914                           ;Config register CONFIG7 @ 0x300006
  2915                           ;	Boot Block Size selection bits
  2916                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
  2917                           ;	Boot Block enable bit
  2918                           ;	BBEN = OFF, Boot block disabled
  2919                           ;	Storage Area Flash enable bit
  2920                           ;	SAFEN = OFF, SAF disabled
  2921                           ;	Background Debugger
  2922                           ;	DEBUG = OFF, Background Debugger disabled
  2923   300006                     	org	3145734
  2924   300006  FF                 	db	255
  2925                           
  2926                           ;Config register CONFIG8 @ 0x300007
  2927                           ;	Boot Block Write Protection bit
  2928                           ;	WRTB = OFF, Boot Block not Write protected
  2929                           ;	Configuration Register Write Protection bit
  2930                           ;	WRTC = OFF, Configuration registers not Write protected
  2931                           ;	Data EEPROM Write Protection bit
  2932                           ;	WRTD = OFF, Data EEPROM not Write protected
  2933                           ;	SAF Write protection bit
  2934                           ;	WRTSAF = OFF, SAF not Write Protected
  2935                           ;	Application Block write protection bit
  2936                           ;	WRTAPP = OFF, Application Block not write protected
  2937   300007                     	org	3145735
  2938   300007  FF                 	db	255
  2939                           
  2940                           ;Config register CONFIG10 @ 0x300009
  2941                           ;	PFM and Data EEPROM Code Protection bit
  2942                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
  2943   300009                     	org	3145737
  2944   300009  FF                 	db	255
  2945                           tosu	equ	0x4FF
  2946                           tosh	equ	0x4FE
  2947                           tosl	equ	0x4FD
  2948                           stkptr	equ	0x4FC
  2949                           pclatu	equ	0x4FB
  2950                           pclath	equ	0x4FA
  2951                           pcl	equ	0x4F9
  2952                           tblptru	equ	0x4F8
  2953                           tblptrh	equ	0x4F7
  2954                           tblptrl	equ	0x4F6
  2955                           tablat	equ	0x4F5
  2956                           prodh	equ	0x4F4
  2957                           prodl	equ	0x4F3
  2958                           indf0	equ	0x4EF
  2959                           postinc0	equ	0x4EE
  2960                           postdec0	equ	0x4ED
  2961                           preinc0	equ	0x4EC
  2962                           plusw0	equ	0x4EB
  2963                           fsr0h	equ	0x4EA
  2964                           fsr0l	equ	0x4E9
  2965                           wreg	equ	0x4E8
  2966                           indf1	equ	0x4E7
  2967                           postinc1	equ	0x4E6
  2968                           postdec1	equ	0x4E5
  2969                           preinc1	equ	0x4E4
  2970                           plusw1	equ	0x4E3
  2971                           fsr1h	equ	0x4E2
  2972                           fsr1l	equ	0x4E1
  2973                           bsr	equ	0x4E0
  2974                           indf2	equ	0x4DF
  2975                           postinc2	equ	0x4DE
  2976                           postdec2	equ	0x4DD
  2977                           preinc2	equ	0x4DC
  2978                           plusw2	equ	0x4DB
  2979                           fsr2h	equ	0x4DA
  2980                           fsr2l	equ	0x4D9
  2981                           status	equ	0x4D8

Data Sizes:
    Strings     20
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     60      60
    BANK5           160      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0
    BANK32          256      0       0
    BANK33          256      0       0
    BANK34          256      0       0
    BANK35          256      0       0
    BANK36          256      0       0

Pointer List with Targets:

    ESCRIBE_MENSAJE2@cadena	PTR const unsigned char  size(1) Largest target is 11
		 -> STR_1(CODE[11]), STR_2(CODE[9]), 

    strlen@a	PTR const unsigned char  size(1) Largest target is 11
		 -> STR_1(CODE[11]), STR_2(CODE[9]), 

    strlen@s	PTR const unsigned char  size(1) Largest target is 11
		 -> STR_1(CODE[11]), STR_2(CODE[9]), 


Critical Paths under _main in COMRAM

    _main->_LCD_ESCRIBE_VAR_INT
    _tomamuestra_ADC->___flmul
    ___flmul->___xxtofl
    _configuro->_LCD_INIT
    _LCD_INIT->_CURSOR_ONOFF
    _LCD_INIT->_LCD_CONFIG
    _LCD_CONFIG->_ENVIA_LCD_CMD
    _CURSOR_ONOFF->_ENVIA_LCD_CMD
    _CURSOR_HOME->_ENVIA_LCD_CMD
    _BORRAR_LCD->_ENVIA_LCD_CMD
    _POS_CURSOR->_ENVIA_LCD_CMD
    _ENVIA_LCD_CMD->_ENVIA_NIBBLE
    _ENVIA_LCD_CMD->_LEER_LCD
    _LCD_ESCRIBE_VAR_INT->_tomamuestra_ADC
    ___lwdiv->___lwmod
    _ESCRIBE_MENSAJE2->_ENVIA_CHAR
    _ESCRIBE_MENSAJE2->_strlen
    _ENVIA_CHAR->_ENVIA_NIBBLE
    _ENVIA_CHAR->_LEER_LCD

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _main in BANK32

    None.

Critical Paths under _main in BANK33

    None.

Critical Paths under _main in BANK34

    None.

Critical Paths under _main in BANK35

    None.

Critical Paths under _main in BANK36

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    6340
                   _ESCRIBE_MENSAJE2
                _LCD_ESCRIBE_VAR_INT
                         _POS_CURSOR
                          _configuro
                    _tomamuestra_ADC
 ---------------------------------------------------------------------------------
 (1) _tomamuestra_ADC                                     11     9      2    2539
                                             39 COMRAM    11     9      2
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     398
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     305
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             25    17      8    1745
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _configuro                                            0     0      0     525
                           _LCD_INIT
 ---------------------------------------------------------------------------------
 (2) _LCD_INIT                                             1     1      0     525
                                              4 COMRAM     1     1      0
                         _BORRAR_LCD
                        _CURSOR_HOME
                       _CURSOR_ONOFF
                         _LCD_CONFIG
 ---------------------------------------------------------------------------------
 (3) _LCD_CONFIG                                           1     1      0     135
                                              3 COMRAM     1     1      0
                      _ENVIA_LCD_CMD
                       _ENVIA_NIBBLE
 ---------------------------------------------------------------------------------
 (3) _CURSOR_ONOFF                                         1     1      0     150
                                              3 COMRAM     1     1      0
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (3) _CURSOR_HOME                                          0     0      0     120
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (3) _BORRAR_LCD                                           0     0      0     120
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (1) _POS_CURSOR                                           2     1      1     448
                                              3 COMRAM     2     1      1
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (4) _ENVIA_LCD_CMD                                        2     2      0     120
                                              1 COMRAM     2     2      0
                       _ENVIA_NIBBLE
                           _LEER_LCD
 ---------------------------------------------------------------------------------
 (1) _LCD_ESCRIBE_VAR_INT                                 10     7      3    2276
                                             50 COMRAM    10     7      3
                         _ENVIA_CHAR
                            ___lwdiv
                            ___lwmod
                    _tomamuestra_ADC (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     767
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     770
                                              5 COMRAM     7     3      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (1) _ESCRIBE_MENSAJE2                                     4     3      1     552
                                              3 COMRAM     4     3      1
                         _ENVIA_CHAR
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strlen                                               3     1      2     166
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _ENVIA_CHAR                                           2     2      0     120
                                              1 COMRAM     2     2      0
                       _ENVIA_NIBBLE
                           _LEER_LCD
 ---------------------------------------------------------------------------------
 (5) _LEER_LCD                                             1     1      0      45
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _ENVIA_NIBBLE                                         1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ESCRIBE_MENSAJE2
     _ENVIA_CHAR
       _ENVIA_NIBBLE
       _LEER_LCD
     _strlen
   _LCD_ESCRIBE_VAR_INT
     _ENVIA_CHAR
     ___lwdiv
       ___lwmod (ARG)
     ___lwmod
     _tomamuestra_ADC (ARG)
       ___flmul
         ___xxtofl (ARG)
       ___fltol
       ___xxtofl
   _POS_CURSOR
     _ENVIA_LCD_CMD
       _ENVIA_NIBBLE
       _LEER_LCD
   _configuro
     _LCD_INIT
       _BORRAR_LCD
         _ENVIA_LCD_CMD
       _CURSOR_HOME
         _ENVIA_LCD_CMD
       _CURSOR_ONOFF
         _ENVIA_LCD_CMD
       _LCD_CONFIG
         _ENVIA_LCD_CMD
         _ENVIA_NIBBLE
   _tomamuestra_ADC

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             400      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F     3C      3C       1       63.2%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK5            A0      0       0       4        0.0%
BANK5               A0      0       0       5        0.0%
BITBANK6           100      0       0       6        0.0%
BANK6              100      0       0       7        0.0%
BITBANK7           100      0       0       8        0.0%
BANK7              100      0       0       9        0.0%
BITBANK8           100      0       0      10        0.0%
BANK8              100      0       0      11        0.0%
BITBANK9           100      0       0      12        0.0%
BANK9              100      0       0      13        0.0%
BITBANK10          100      0       0      14        0.0%
BANK10             100      0       0      15        0.0%
BITBANK11          100      0       0      16        0.0%
BANK11             100      0       0      17        0.0%
BITBANK12          100      0       0      18        0.0%
BANK12             100      0       0      19        0.0%
BITBANK13          100      0       0      20        0.0%
BANK13             100      0       0      21        0.0%
BITBANK14          100      0       0      22        0.0%
BANK14             100      0       0      23        0.0%
BITBANK15          100      0       0      24        0.0%
BANK15             100      0       0      25        0.0%
BITBANK16          100      0       0      26        0.0%
BANK16             100      0       0      27        0.0%
BITBANK17          100      0       0      28        0.0%
BANK17             100      0       0      29        0.0%
BITBANK18          100      0       0      30        0.0%
BANK18             100      0       0      31        0.0%
BITBANK19          100      0       0      32        0.0%
BANK19             100      0       0      33        0.0%
BITBANK20          100      0       0      34        0.0%
BANK20             100      0       0      35        0.0%
BITBANK21          100      0       0      36        0.0%
BANK21             100      0       0      37        0.0%
BITBANK22          100      0       0      38        0.0%
BANK22             100      0       0      39        0.0%
BITBANK23          100      0       0      40        0.0%
BANK23             100      0       0      41        0.0%
BITBANK24          100      0       0      42        0.0%
BANK24             100      0       0      43        0.0%
BITBANK25          100      0       0      44        0.0%
BANK25             100      0       0      45        0.0%
BITBANK26          100      0       0      46        0.0%
BANK26             100      0       0      47        0.0%
BITBANK27          100      0       0      48        0.0%
BANK27             100      0       0      49        0.0%
BITBANK28          100      0       0      50        0.0%
BANK28             100      0       0      51        0.0%
BITBANK29          100      0       0      52        0.0%
BANK29             100      0       0      53        0.0%
BITBANK30          100      0       0      54        0.0%
BANK30             100      0       0      55        0.0%
BITBANK31          100      0       0      56        0.0%
BANK31             100      0       0      57        0.0%
BITBANK32          100      0       0      58        0.0%
BANK32             100      0       0      59        0.0%
BITBANK33          100      0       0      60        0.0%
BANK33             100      0       0      61        0.0%
BITBANK34          100      0       0      62        0.0%
BANK34             100      0       0      63        0.0%
BITBANK35          100      0       0      64        0.0%
BANK35             100      0       0      65        0.0%
BITBANK36          100      0       0      66        0.0%
BANK36             100      0       0      67        0.0%
BITBIGSFR_1        100      0       0      68        0.0%
BIGRAM            1FFF      0       0      69        0.0%
BITBIGSFRhhhhhh     2E      0       0      70        0.0%
BITBIGSFRhhhhhl      5      0       0      71        0.0%
BITBIGSFRhhhhlh      1      0       0      72        0.0%
BITBIGSFRhhhhll      2      0       0      73        0.0%
BITBIGSFRhhhlhh      4      0       0      74        0.0%
BITBIGSFRhhhlhh     98      0       0      75        0.0%
BITBIGSFRhhhlhl      F      0       0      76        0.0%
BITBIGSFRhhhlhl     17      0       0      77        0.0%
BITBIGSFRhhhllh      C      0       0      78        0.0%
BITBIGSFRhhhlll      6      0       0      79        0.0%
BITBIGSFRhhhlll     A7      0       0      80        0.0%
BITBIGSFRhhhlll     19      0       0      81        0.0%
BITBIGSFRhhhlll      1      0       0      82        0.0%
BITBIGSFRhhhlll     F8      0       0      83        0.0%
BITBIGSFRhhhlll    176      0       0      84        0.0%
BITBIGSFRhhl         1      0       0      85        0.0%
BITBIGSFRhl          3      0       0      86        0.0%
BITBIGSFRl          AD      0       0      87        0.0%
ABS                  0      0       0      88        0.0%
BIGSFR_1             0      0       0     200        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Wed Nov 01 16:45:13 2023

                          l50 2BAE                 ENVIA_CHAR@aux 0503                           l154 2C62  
                         l910 2C84                           l809 2596                           l826 280E  
                         l818 2788                           l850 29E8                           l819 2784  
                         l686 2D7C                           l696 2E06                           l857 2A66  
                         l948 2F68                           u600 25A2                           u710 2AF6  
                         u640 277E                           u720 2B26                           u820 2DE8  
                         u900 2AA2                           u725 2B1C                           u680 27DA  
                         u760 2B7C                           u690 27F8                           u790 2D56  
                 LEER_LCD@aux 0501                           wreg 04E8                  ?_CURSOR_HOME 0501  
                ___flmul@aexp 051C                  ___flmul@bexp 0521                  ___flmul@sign 051B  
                ___flmul@temp 0526                  ___flmul@prod 0522                ??_ENVIA_NIBBLE 0501  
                ___fltol@exp1 050A                ENVIA_CHAR@dato 0502                          l1410 2F36  
                        l1430 2546                          l1408 2F34                          l1504 274E  
                        l1432 2556                          l1540 282C                          l1524 27CC  
                        l1428 2542                          l1702 2DBC                          l1446 2582  
                        l1712 2EA0                          l1608 2D72                          l1624 2DFC  
                        l1616 2DDC                          l1720 28F8                          l1528 27EA  
                        l1456 25B4                          l1448 2586                          l1552 2B08  
                        l1640 2A16                          l1618 2DE4                          l1722 2902  
                        l1642 2A1C                          l1634 29F8                          l1716 2EBC  
                        l1724 2914                          l1732 297A                          l1580 2B76  
                        l1572 2B62                          l1652 2A8C                          l1644 2A28  
                        l1726 292E                          l1670 2AD8                          l1654 2A98  
                        l1646 2A4E                          l1742 2E26                          l1728 2950  
                        l1568 2B52                          l1498 2730                          l1586 2B92  
                        l1578 2B6A                          l1596 2D4A                          l1598 2D52  
                        l1694 2D98                          l1698 2DAA                          STR_1 2501  
                        STR_2 250C                          u1007 2E60                          u1017 2E74  
                        u1107 2C74                          u1027 2C9E                          u1117 2C7E  
                        u1037 2CB0                          u1127 2F88                          u1047 2ED4  
                        u1057 2F08                          u1067 2C3A                          u1077 2C48  
                        u1087 2C52                          _LATD 04C1                          u1097 2C66  
                        _T2PR 0323                          _main 2E10                          prodh 04F4  
                        prodl 04F3                          start FFFC                 ?_CURSOR_ONOFF 0501  
           ??_tomamuestra_ADC 052A                  ___param_bank 0000               ??_ENVIA_LCD_CMD 0502  
            __end_of_LCD_INIT 2E8E              __end_of_LEER_LCD 2C8E                 ___fltol@sign1 0509  
                       ?_main 0501                         _ADPCH 03EC               __end_of___flmul 2842  
             __end_of___fltol 2BA4                         _T2CON 0324               __end_of___lwdiv 2D86  
             __end_of___lwmod 2E10                         _OSCEN 00B3                         _PORTD 04D1  
                       _TRISD 04C9                   ?_POS_CURSOR 0504   __end_of_LCD_ESCRIBE_VAR_INT 29AA  
                       tablat 04F5                         status 04D8                ??_CURSOR_ONOFF 0504  
             __initialization 2FA2                  __end_of_main 2E50     LCD_ESCRIBE_VAR_INT@decena 053B  
                      ??_main 053D                 __activetblptr 0003     LCD_ESCRIBE_VAR_INT@millar 0539  
   LCD_ESCRIBE_VAR_INT@numero 0533     LCD_ESCRIBE_VAR_INT@unidad 053C                        _ADRESH 03EB  
                      _ADRESL 03EA                        _CCPR1H 0341                        _CCPR1L 0340  
                      _ANSELD 0418                        _RF1PPS 022A                        _OSCFRQ 00B1  
            __end_of___xxtofl 2AEA          __end_of_ENVIA_NIBBLE 2F92                     ??___flmul 0517  
                   ??___fltol 0505                     ??___lwdiv 050A                     ??___lwmod 0505  
                      isa$std 0001                        _strlen 2F2E                  __mediumconst 0000  
                      tblptrh 04F7                        tblptrl 04F6                        tblptru 04F8  
                ??_BORRAR_LCD 0504                  ___xxtofl@arg 050B                     ?_LCD_INIT 0501  
                ___xxtofl@exp 050A                  ___xxtofl@val 0501                     ?_LEER_LCD 0501  
                  __accesstop 0560       __end_of__initialization 2FA2                  ??_LCD_CONFIG 0504  
               ___rparam_used 0001                  ??_ENVIA_CHAR 0502                    ___fltol@f1 0501  
     tomamuestra_ADC@temporal 052C                __pcstackCOMRAM 0501            __end_of_BORRAR_LCD 2FA2  
            _ESCRIBE_MENSAJE2 2E8E              ENVIA_LCD_CMD@aux 0503          __end_of_CURSOR_ONOFF 2F76  
          __end_of_LCD_CONFIG 2CE2            __end_of_ENVIA_CHAR 2F2E    LCD_ESCRIBE_VAR_INT@centena 053A  
             _tomamuestra_ADC 2BA4                    ??_LCD_INIT 0505                    ??_LEER_LCD 0501  
            ENVIA_NIBBLE@dato 0501                       _CCP1CON 0342                       ?_strlen 0501  
                   ?___xxtofl 0501                       _OSCCON1 00AD                  ??_POS_CURSOR 0505  
                     __Hparam 0000                       __Lparam 0000          tomamuestra_ADC@canal 0530  
           __end_of_configuro 2D34                       ___flmul 2516                       ___fltol 2AEA  
                     ___lwdiv 2D34                       ___lwmod 2DCE                  __psmallconst 2500  
       __end_of_ENVIA_LCD_CMD 2EFA                       __pcinit 2FA2            __end_of_POS_CURSOR 2DCE  
                     __ramtop 2500                       __ptext0 2E10                       __ptext1 2BA4  
                     __ptext2 29AA                       __ptext3 2AEA                       __ptext4 2516  
                     __ptext5 2CE2                       __ptext6 2E50                       __ptext7 2C8E  
                     __ptext8 2F5A                       __ptext9 2F92       __end_of_tomamuestra_ADC 2C2E  
                  ??___xxtofl 0505                  _ENVIA_NIBBLE 2F76          end_of_initialization 2FA2  
                     strlen@a 0503                       strlen@s 0501             ESCRIBE_MENSAJE2@i 0507  
               ___xxtofl@sign 0509                     _TRISAbits 04C6                     _TRISFbits 04CB  
                 ___flmul@grs 051D      __end_of_ESCRIBE_MENSAJE2 2EC6                  _CURSOR_ONOFF 2F5A  
          CURSOR_ONOFF@estado 0504                __end_of_strlen 2F5A                 ??_CURSOR_HOME 0504  
            ?_tomamuestra_ADC 0528           start_initialization 2FA2             ENVIA_LCD_CMD@dato 0502  
 LCD_ESCRIBE_VAR_INT@d_millar 0538        tomamuestra_ADC@lectura 0531                      ??_strlen 0503  
                   ___flmul@a 0513                     ___flmul@b 050F           __end_of_CURSOR_HOME 2F9A  
            ___lwdiv@dividend 0506                      ?___flmul 050F                      ?___fltol 0501  
                    ?___lwdiv 0506                      ?___lwmod 0501                     _configuro 2CE2  
                 __smallconst 2500           _LCD_ESCRIBE_VAR_INT 2842              ___lwdiv@quotient 050A  
                    _T2CLKCON 0326                      _LCD_INIT 2E50                      _LEER_LCD 2C2E  
                    _LATDbits 04C1          ?_LCD_ESCRIBE_VAR_INT 0533                POS_CURSOR@fila 0505  
                  ?_configuro 0501                    _ADCON0bits 03F3        ESCRIBE_MENSAJE2@cadena 0504  
                 _CURSOR_HOME 2F92         ??_LCD_ESCRIBE_VAR_INT 0536                      __Hrparam 0000  
           ?_ESCRIBE_MENSAJE2 0504                      __Lrparam 0000            ??_ESCRIBE_MENSAJE2 0505  
                  _ANSELAbits 0400                    _ANSELFbits 0428                      ___xxtofl 29AA  
             ___lwdiv@divisor 0508               ___lwdiv@counter 050C                      __ptext10 2F9A  
                    __ptext11 2D86                      __ptext20 2F76                      __ptext12 2EC6  
                    __ptext13 2842                      __ptext14 2DCE                      __ptext15 2D34  
                    __ptext16 2E8E                      __ptext17 2F2E                      __ptext18 2EFA  
                    __ptext19 2C2E  LCD_ESCRIBE_VAR_INT@n_digitos 0535                    _BORRAR_LCD 2F9A  
                  _LCD_CONFIG 2C8E                    _ENVIA_CHAR 2EFA                      isa$xinst 0000  
               _ENVIA_LCD_CMD 2EC6                   ??_configuro 0506              ___lwmod@dividend 0501  
              ?_ENVIA_LCD_CMD 0501               ___lwmod@divisor 0503               ___lwmod@counter 0505  
         ESCRIBE_MENSAJE2@tam 0506                   ?_BORRAR_LCD 0501                 ?_ENVIA_NIBBLE 0501  
                  _POS_CURSOR 2D86                   ?_LCD_CONFIG 0501                   ?_ENVIA_CHAR 0501  
           POS_CURSOR@columna 0504  
