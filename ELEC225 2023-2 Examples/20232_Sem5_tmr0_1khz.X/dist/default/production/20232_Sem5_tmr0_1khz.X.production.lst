

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Tue Sep 26 12:31:56 2023

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F57Q43
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1
    14                           	psect	text6,global,reloc=2,class=CODE,delta=1
    15                           	psect	text7,global,reloc=2,class=CODE,delta=1
    16                           	psect	text8,global,reloc=2,class=CODE,delta=1
    17                           	psect	text9,global,reloc=2,class=CODE,delta=1
    18                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    19                           	psect	text11,global,reloc=2,class=CODE,delta=1
    20                           	psect	text12,global,reloc=2,class=CODE,delta=1
    21                           	psect	text13,global,reloc=2,class=CODE,delta=1
    22                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    23                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    24                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    25   000000                     
    26                           ; Generated 18/07/2023 GMT
    27                           ; 
    28                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    29                           ; All rights reserved.
    30                           ; 
    31                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    32                           ; 
    33                           ; Redistribution and use in source and binary forms, with or without modification, are
    34                           ; permitted provided that the following conditions are met:
    35                           ; 
    36                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    37                           ;        conditions and the following disclaimer.
    38                           ; 
    39                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    40                           ;        of conditions and the following disclaimer in the documentation and/or other
    41                           ;        materials provided with the distribution. Publication is not required when
    42                           ;        this file is used in an embedded application.
    43                           ; 
    44                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    45                           ;        software without specific prior written permission.
    46                           ; 
    47                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    48                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    49                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    50                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    51                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    52                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    53                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    54                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    55                           ; 
    56                           ; 
    57                           ; Code-generator required, PIC18F57Q43 Definitions
    58                           ; 
    59                           ; SFR Addresses
    60   000000                     _LATD	set	1217
    61   000000                     _OSCCON1	set	173
    62   000000                     _OSCFRQ	set	177
    63   000000                     _OSCEN	set	179
    64   000000                     _TMR0H	set	793
    65   000000                     _T0CON0	set	794
    66   000000                     _ANSELBbits	set	1032
    67   000000                     _TRISBbits	set	1223
    68   000000                     _TRISD	set	1225
    69   000000                     _PORTBbits	set	1231
    70   000000                     _ANSELD	set	1048
    71   000000                     _PIR3bits	set	1201
    72   000000                     _LATBbits	set	1215
    73   000000                     _WPUBbits	set	1033
    74   000000                     _T0CON1	set	795
    75   000000                     _PORTD	set	1233
    76   000000                     _LATDbits	set	1217
    77                           
    78                           	psect	smallconst
    79   002500                     __psmallconst:
    80                           	callstack 0
    81   002500  00                 	db	0
    82   002501                     STR_2:
    83   002501  66                 	db	102	;'f'
    84   002502  3A                 	db	58	;':'
    85   002503  31                 	db	49	;'1'
    86   002504  2E                 	db	46
    87   002505  30                 	db	48	;'0'
    88   002506  30                 	db	48	;'0'
    89   002507  4B                 	db	75	;'K'
    90   002508  48                 	db	72	;'H'
    91   002509  7A                 	db	122	;'z'
    92   00250A  20                 	db	32
    93   00250B  44                 	db	68	;'D'
    94   00250C  43                 	db	67	;'C'
    95   00250D  3A                 	db	58	;':'
    96   00250E  32                 	db	50	;'2'
    97   00250F  30                 	db	48	;'0'
    98   002510  25                 	db	37
    99   002511  00                 	db	0
   100   002512                     STR_3:
   101   002512  66                 	db	102	;'f'
   102   002513  3A                 	db	58	;':'
   103   002514  31                 	db	49	;'1'
   104   002515  2E                 	db	46
   105   002516  30                 	db	48	;'0'
   106   002517  30                 	db	48	;'0'
   107   002518  4B                 	db	75	;'K'
   108   002519  48                 	db	72	;'H'
   109   00251A  7A                 	db	122	;'z'
   110   00251B  20                 	db	32
   111   00251C  44                 	db	68	;'D'
   112   00251D  43                 	db	67	;'C'
   113   00251E  3A                 	db	58	;':'
   114   00251F  37                 	db	55	;'7'
   115   002520  30                 	db	48	;'0'
   116   002521  25                 	db	37
   117   002522  00                 	db	0
   118   002523                     STR_1:
   119   002523  47                 	db	71	;'G'
   120   002524  65                 	db	101	;'e'
   121   002525  6E                 	db	110	;'n'
   122   002526  65                 	db	101	;'e'
   123   002527  72                 	db	114	;'r'
   124   002528  61                 	db	97	;'a'
   125   002529  64                 	db	100	;'d'
   126   00252A  6F                 	db	111	;'o'
   127   00252B  72                 	db	114	;'r'
   128   00252C  20                 	db	32
   129   00252D  53                 	db	83	;'S'
   130   00252E  51                 	db	81	;'Q'
   131   00252F  52                 	db	82	;'R'
   132   002530  57                 	db	87	;'W'
   133   002531  41                 	db	65	;'A'
   134   002532  56                 	db	86	;'V'
   135   002533  00                 	db	0
   136   002534  00                 	db	0	; dummy byte at the end
   137   000000                     
   138                           ; #config settings
   139                           
   140                           	psect	cinit
   141   0028D0                     __pcinit:
   142                           	callstack 0
   143   0028D0                     start_initialization:
   144                           	callstack 0
   145   0028D0                     __initialization:
   146                           	callstack 0
   147   0028D0                     end_of_initialization:
   148                           	callstack 0
   149   0028D0                     __end_of__initialization:
   150                           	callstack 0
   151   0028D0  0100               	movlb	0
   152   0028D2  EF9B  F012         	goto	_main	;jump to C main() function
   153                           
   154                           	psect	cstackCOMRAM
   155   000501                     __pcstackCOMRAM:
   156                           	callstack 0
   157   000501                     ?_strlen:
   158                           	callstack 0
   159   000501                     ENVIA_NIBBLE@dato:
   160                           	callstack 0
   161   000501                     LEER_LCD@aux:
   162                           	callstack 0
   163   000501                     strlen@s:
   164                           	callstack 0
   165                           
   166                           ; 1 bytes @ 0x0
   167   000501                     	ds	1
   168   000502                     ENVIA_CHAR@dato:
   169                           	callstack 0
   170   000502                     ENVIA_LCD_CMD@dato:
   171                           	callstack 0
   172                           
   173                           ; 1 bytes @ 0x1
   174   000502                     	ds	1
   175   000503                     ENVIA_CHAR@aux:
   176                           	callstack 0
   177   000503                     ENVIA_LCD_CMD@aux:
   178                           	callstack 0
   179   000503                     strlen@a:
   180                           	callstack 0
   181                           
   182                           ; 1 bytes @ 0x2
   183   000503                     	ds	1
   184   000504                     ??_LCD_CONFIG:
   185   000504                     POS_CURSOR@columna:
   186                           	callstack 0
   187   000504                     CURSOR_ONOFF@estado:
   188                           	callstack 0
   189   000504                     ESCRIBE_MENSAJE2@cadena:
   190                           	callstack 0
   191                           
   192                           ; 1 bytes @ 0x3
   193   000504                     	ds	1
   194   000505                     ??_LCD_INIT:
   195   000505                     ??_ESCRIBE_MENSAJE2:
   196   000505                     POS_CURSOR@fila:
   197                           	callstack 0
   198                           
   199                           ; 1 bytes @ 0x4
   200   000505                     	ds	1
   201   000506                     ESCRIBE_MENSAJE2@tam:
   202                           	callstack 0
   203                           
   204                           ; 1 bytes @ 0x5
   205   000506                     	ds	1
   206   000507                     ESCRIBE_MENSAJE2@i:
   207                           	callstack 0
   208                           
   209                           ; 1 bytes @ 0x6
   210   000507                     	ds	1
   211   000508                     
   212                           ; 1 bytes @ 0x7
   213 ;;
   214 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   215 ;;
   216 ;; *************** function _main *****************
   217 ;; Defined at:
   218 ;;		line 21 in file "maincode2.c"
   219 ;; Parameters:    Size  Location     Type
   220 ;;		None
   221 ;; Auto vars:     Size  Location     Type
   222 ;;		None
   223 ;; Return value:  Size  Location     Type
   224 ;;                  1    wreg      void 
   225 ;; Registers used:
   226 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   227 ;; Tracked objects:
   228 ;;		On entry : 0/0
   229 ;;		On exit  : 0/0
   230 ;;		Unchanged: 0/0
   231 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   232 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   233 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   234 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   235 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   236 ;;Total ram usage:        0 bytes
   237 ;; Hardware stack levels required when called: 5
   238 ;; This function calls:
   239 ;;		_ESCRIBE_MENSAJE2
   240 ;;		_POS_CURSOR
   241 ;;		_configuro
   242 ;; This function is called by:
   243 ;;		Startup code after reset
   244 ;; This function uses a non-reentrant model
   245 ;;
   246                           
   247                           	psect	text0
   248   002536                     __ptext0:
   249                           	callstack 0
   250   002536                     _main:
   251                           	callstack 122
   252   002536                     
   253                           ;maincode2.c: 22:     configuro();
   254   002536  EC3B  F014         	call	_configuro	;wreg free
   255                           
   256                           ;maincode2.c: 23:     POS_CURSOR(1,0);
   257   00253A  0E00               	movlw	0
   258   00253C  6E04               	movwf	POS_CURSOR@columna^(0+1280),c
   259   00253E  0E01               	movlw	1
   260   002540  ECF5  F012         	call	_POS_CURSOR
   261   002544                     
   262                           ;maincode2.c: 24:     ESCRIBE_MENSAJE2("Generador SQRWAV");
   263   002544  0E23               	movlw	low STR_1
   264   002546  6E04               	movwf	ESCRIBE_MENSAJE2@cadena^(0+1280),c
   265   002548  EC94  F013         	call	_ESCRIBE_MENSAJE2	;wreg free
   266   00254C                     l1228:
   267                           
   268                           ;maincode2.c: 26:         if(PORTBbits.RB4 == 0){
   269   00254C  B8CF               	btfsc	207,4,c	;volatile
   270   00254E  EFAB  F012         	goto	u301
   271   002552  EFAD  F012         	goto	u300
   272   002556                     u301:
   273   002556  EFD0  F012         	goto	l1240
   274   00255A                     u300:
   275   00255A                     
   276                           ;maincode2.c: 27:             POS_CURSOR(2,0);
   277   00255A  0E00               	movlw	0
   278   00255C  6E04               	movwf	POS_CURSOR@columna^(0+1280),c
   279   00255E  0E02               	movlw	2
   280   002560  ECF5  F012         	call	_POS_CURSOR
   281   002564                     
   282                           ;maincode2.c: 28:             ESCRIBE_MENSAJE2("f:1.00KHz DC:20%");
   283   002564  0E01               	movlw	low STR_2
   284   002566  6E04               	movwf	ESCRIBE_MENSAJE2@cadena^(0+1280),c
   285   002568  EC94  F013         	call	_ESCRIBE_MENSAJE2	;wreg free
   286   00256C                     
   287                           ;maincode2.c: 29:             LATBbits.LATB0 = 1;
   288   00256C  80BF               	bsf	191,0,c	;volatile
   289   00256E                     
   290                           ;maincode2.c: 30:             TMR0H = 50;
   291   00256E  0E32               	movlw	50
   292   002570  0103               	movlb	3	; () banked
   293   002572  6F19               	movwf	25,b	;volatile
   294   002574                     l40:
   295   002574  AEB1               	btfss	177,7,c	;volatile
   296   002576  EFBF  F012         	goto	u311
   297   00257A  EFC1  F012         	goto	u310
   298   00257E                     u311:
   299   00257E  EFBA  F012         	goto	l40
   300   002582                     u310:
   301   002582                     
   302                           ;maincode2.c: 32:             PIR3bits.TMR0IF = 0;
   303   002582  9EB1               	bcf	177,7,c	;volatile
   304                           
   305                           ;maincode2.c: 33:             LATBbits.LATB0 = 0;
   306   002584  90BF               	bcf	191,0,c	;volatile
   307   002586                     
   308                           ;maincode2.c: 34:             TMR0H = 200;
   309   002586  0EC8               	movlw	200
   310   002588  0103               	movlb	3	; () banked
   311   00258A  6F19               	movwf	25,b	;volatile
   312   00258C                     l43:
   313   00258C  AEB1               	btfss	177,7,c	;volatile
   314   00258E  EFCB  F012         	goto	u321
   315   002592  EFCD  F012         	goto	u320
   316   002596                     u321:
   317   002596  EFC6  F012         	goto	l43
   318   00259A                     u320:
   319   00259A                     
   320                           ;maincode2.c: 36:             PIR3bits.TMR0IF = 0;
   321   00259A  9EB1               	bcf	177,7,c	;volatile
   322                           
   323                           ;maincode2.c: 37:         }
   324   00259C  EFA6  F012         	goto	l1228
   325   0025A0                     l1240:
   326                           
   327                           ;maincode2.c: 39:             POS_CURSOR(2,0);
   328   0025A0  0E00               	movlw	0
   329   0025A2  6E04               	movwf	POS_CURSOR@columna^(0+1280),c
   330   0025A4  0E02               	movlw	2
   331   0025A6  ECF5  F012         	call	_POS_CURSOR
   332   0025AA                     
   333                           ;maincode2.c: 40:             ESCRIBE_MENSAJE2("f:1.00KHz DC:70%");
   334   0025AA  0E12               	movlw	low STR_3
   335   0025AC  6E04               	movwf	ESCRIBE_MENSAJE2@cadena^(0+1280),c
   336   0025AE  EC94  F013         	call	_ESCRIBE_MENSAJE2	;wreg free
   337   0025B2                     
   338                           ;maincode2.c: 41:             LATBbits.LATB0 = 1;
   339   0025B2  80BF               	bsf	191,0,c	;volatile
   340   0025B4                     
   341                           ;maincode2.c: 42:             TMR0H = 175;
   342   0025B4  0EAF               	movlw	175
   343   0025B6  0103               	movlb	3	; () banked
   344   0025B8  6F19               	movwf	25,b	;volatile
   345   0025BA                     l47:
   346   0025BA  AEB1               	btfss	177,7,c	;volatile
   347   0025BC  EFE2  F012         	goto	u331
   348   0025C0  EFE4  F012         	goto	u330
   349   0025C4                     u331:
   350   0025C4  EFDD  F012         	goto	l47
   351   0025C8                     u330:
   352   0025C8                     
   353                           ;maincode2.c: 44:             PIR3bits.TMR0IF = 0;
   354   0025C8  9EB1               	bcf	177,7,c	;volatile
   355                           
   356                           ;maincode2.c: 45:             LATBbits.LATB0 = 0;
   357   0025CA  90BF               	bcf	191,0,c	;volatile
   358   0025CC                     
   359                           ;maincode2.c: 46:             TMR0H = 75;
   360   0025CC  0E4B               	movlw	75
   361   0025CE  0103               	movlb	3	; () banked
   362   0025D0  6F19               	movwf	25,b	;volatile
   363   0025D2                     l50:
   364   0025D2  AEB1               	btfss	177,7,c	;volatile
   365   0025D4  EFEE  F012         	goto	u341
   366   0025D8  EFF0  F012         	goto	u340
   367   0025DC                     u341:
   368   0025DC  EFE9  F012         	goto	l50
   369   0025E0                     u340:
   370   0025E0                     
   371                           ;maincode2.c: 48:             PIR3bits.TMR0IF = 0;
   372   0025E0  9EB1               	bcf	177,7,c	;volatile
   373   0025E2  EFA6  F012         	goto	l1228
   374   0025E6  EFFE  F0FF         	goto	start
   375   0025EA                     __end_of_main:
   376                           	callstack 0
   377                           
   378 ;; *************** function _configuro *****************
   379 ;; Defined at:
   380 ;;		line 6 in file "maincode2.c"
   381 ;; Parameters:    Size  Location     Type
   382 ;;		None
   383 ;; Auto vars:     Size  Location     Type
   384 ;;		None
   385 ;; Return value:  Size  Location     Type
   386 ;;                  1    wreg      void 
   387 ;; Registers used:
   388 ;;		wreg, status,2, status,0, cstack
   389 ;; Tracked objects:
   390 ;;		On entry : 0/0
   391 ;;		On exit  : 0/0
   392 ;;		Unchanged: 0/0
   393 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   394 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   395 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   396 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   397 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   398 ;;Total ram usage:        0 bytes
   399 ;; Hardware stack levels used: 1
   400 ;; Hardware stack levels required when called: 4
   401 ;; This function calls:
   402 ;;		_LCD_INIT
   403 ;; This function is called by:
   404 ;;		_main
   405 ;; This function uses a non-reentrant model
   406 ;;
   407                           
   408                           	psect	text1
   409   002876                     __ptext1:
   410                           	callstack 0
   411   002876                     _configuro:
   412                           	callstack 122
   413   002876                     
   414                           ;maincode2.c: 7:     OSCCON1 = 0x60;
   415   002876  0E60               	movlw	96
   416   002878  0100               	movlb	0	; () banked
   417   00287A  6FAD               	movwf	173,b	;volatile
   418                           
   419                           ;maincode2.c: 8:     OSCFRQ = 0x02;
   420   00287C  0E02               	movlw	2
   421   00287E  6FB1               	movwf	177,b	;volatile
   422                           
   423                           ;maincode2.c: 9:     OSCEN = 0x40;
   424   002880  0E40               	movlw	64
   425   002882  6FB3               	movwf	179,b	;volatile
   426   002884                     
   427                           ; BSR set to: 0
   428                           ;maincode2.c: 10:     TRISBbits.TRISB0 = 0;
   429   002884  90C7               	bcf	199,0,c	;volatile
   430   002886                     
   431                           ; BSR set to: 0
   432                           ;maincode2.c: 11:     ANSELBbits.ANSELB0 = 0;
   433   002886  0104               	movlb	4	; () banked
   434   002888  9108               	bcf	8,0,b	;volatile
   435   00288A                     
   436                           ; BSR set to: 4
   437                           ;maincode2.c: 12:     TRISBbits.TRISB4 = 1;
   438   00288A  88C7               	bsf	199,4,c	;volatile
   439   00288C                     
   440                           ; BSR set to: 4
   441                           ;maincode2.c: 13:     ANSELBbits.ANSELB4 = 0;
   442   00288C  9908               	bcf	8,4,b	;volatile
   443   00288E                     
   444                           ; BSR set to: 4
   445                           ;maincode2.c: 14:     WPUBbits.WPUB4 = 1;
   446   00288E  8909               	bsf	9,4,b	;volatile
   447                           
   448                           ;maincode2.c: 15:     T0CON0 = 0x80;
   449   002890  0E80               	movlw	128
   450   002892  0103               	movlb	3	; () banked
   451   002894  6F1A               	movwf	26,b	;volatile
   452                           
   453                           ;maincode2.c: 16:     T0CON1 = 0x42;
   454   002896  0E42               	movlw	66
   455   002898  6F1B               	movwf	27,b	;volatile
   456                           
   457                           ;maincode2.c: 17:     TMR0H = 250;
   458   00289A  0EFA               	movlw	250
   459   00289C  6F19               	movwf	25,b	;volatile
   460   00289E                     
   461                           ; BSR set to: 3
   462                           ;maincode2.c: 18:     LCD_INIT();
   463   00289E  ECB6  F013         	call	_LCD_INIT	;wreg free
   464   0028A2  0012               	return		;funcret
   465   0028A4                     __end_of_configuro:
   466                           	callstack 0
   467                           
   468 ;; *************** function _LCD_INIT *****************
   469 ;; Defined at:
   470 ;;		line 196 in file "LCD.c"
   471 ;; Parameters:    Size  Location     Type
   472 ;;		None
   473 ;; Auto vars:     Size  Location     Type
   474 ;;		None
   475 ;; Return value:  Size  Location     Type
   476 ;;                  1    wreg      void 
   477 ;; Registers used:
   478 ;;		wreg, status,2, status,0, cstack
   479 ;; Tracked objects:
   480 ;;		On entry : 0/0
   481 ;;		On exit  : 0/0
   482 ;;		Unchanged: 0/0
   483 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   484 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   485 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   486 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   487 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   488 ;;Total ram usage:        1 bytes
   489 ;; Hardware stack levels used: 1
   490 ;; Hardware stack levels required when called: 3
   491 ;; This function calls:
   492 ;;		_BORRAR_LCD
   493 ;;		_CURSOR_HOME
   494 ;;		_CURSOR_ONOFF
   495 ;;		_LCD_CONFIG
   496 ;; This function is called by:
   497 ;;		_configuro
   498 ;; This function uses a non-reentrant model
   499 ;;
   500                           
   501                           	psect	text2
   502   00276C                     __ptext2:
   503                           	callstack 0
   504   00276C                     _LCD_INIT:
   505                           	callstack 122
   506   00276C                     
   507                           ;LCD.c: 197:     TRISD = 0x00;
   508   00276C  0E00               	movlw	0
   509   00276E  6EC9               	movwf	201,c	;volatile
   510                           
   511                           ;LCD.c: 198:     ANSELD = 0x00;
   512   002770  0E00               	movlw	0
   513   002772  0104               	movlb	4	; () banked
   514   002774  6F18               	movwf	24,b	;volatile
   515   002776                     
   516                           ; BSR set to: 4
   517                           ;LCD.c: 199:     _delay((unsigned long)((15)*(4000000UL/4000.0)));
   518   002776  0E14               	movlw	20
   519   002778  6E05               	movwf	??_LCD_INIT^(0+1280),c
   520   00277A  0E7A               	movlw	122
   521   00277C                     u357:
   522   00277C  2EE8               	decfsz	wreg,f,c
   523   00277E  D7FE               	bra	u357
   524   002780  2E05               	decfsz	??_LCD_INIT^(0+1280),f,c
   525   002782  D7FC               	bra	u357
   526   002784                     
   527                           ;LCD.c: 200:     LCD_CONFIG();
   528   002784  EC6B  F013         	call	_LCD_CONFIG	;wreg free
   529   002788                     
   530                           ;LCD.c: 201:     _delay((unsigned long)((15)*(4000000UL/4000.0)));
   531   002788  0E14               	movlw	20
   532   00278A  6E05               	movwf	??_LCD_INIT^(0+1280),c
   533   00278C  0E7A               	movlw	122
   534   00278E                     u367:
   535   00278E  2EE8               	decfsz	wreg,f,c
   536   002790  D7FE               	bra	u367
   537   002792  2E05               	decfsz	??_LCD_INIT^(0+1280),f,c
   538   002794  D7FC               	bra	u367
   539   002796                     
   540                           ;LCD.c: 202:     BORRAR_LCD();
   541   002796  EC64  F014         	call	_BORRAR_LCD	;wreg free
   542   00279A                     
   543                           ;LCD.c: 203:     CURSOR_HOME();
   544   00279A  EC60  F014         	call	_CURSOR_HOME	;wreg free
   545   00279E                     
   546                           ;LCD.c: 204:     CURSOR_ONOFF(1);
   547   00279E  0E01               	movlw	1
   548   0027A0  EC23  F014         	call	_CURSOR_ONOFF
   549   0027A4  0012               	return		;funcret
   550   0027A6                     __end_of_LCD_INIT:
   551                           	callstack 0
   552                           
   553 ;; *************** function _LCD_CONFIG *****************
   554 ;; Defined at:
   555 ;;		line 113 in file "LCD.c"
   556 ;; Parameters:    Size  Location     Type
   557 ;;		None
   558 ;; Auto vars:     Size  Location     Type
   559 ;;		None
   560 ;; Return value:  Size  Location     Type
   561 ;;                  1    wreg      void 
   562 ;; Registers used:
   563 ;;		wreg, status,2, status,0, cstack
   564 ;; Tracked objects:
   565 ;;		On entry : 0/0
   566 ;;		On exit  : 0/0
   567 ;;		Unchanged: 0/0
   568 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   569 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   570 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   571 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   572 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   573 ;;Total ram usage:        1 bytes
   574 ;; Hardware stack levels used: 1
   575 ;; Hardware stack levels required when called: 2
   576 ;; This function calls:
   577 ;;		_ENVIA_LCD_CMD
   578 ;;		_ENVIA_NIBBLE
   579 ;; This function is called by:
   580 ;;		_LCD_INIT
   581 ;; This function uses a non-reentrant model
   582 ;;
   583                           
   584                           	psect	text3
   585   0026D6                     __ptext3:
   586                           	callstack 0
   587   0026D6                     _LCD_CONFIG:
   588                           	callstack 122
   589   0026D6                     
   590                           ;LCD.c: 115:  LATDbits.LATD0 = 0;
   591   0026D6  90C1               	bcf	193,0,c	;volatile
   592                           
   593                           ;LCD.c: 116:  LATDbits.LATD1 = 0;
   594   0026D8  92C1               	bcf	193,1,c	;volatile
   595   0026DA                     
   596                           ;LCD.c: 117:  ENVIA_NIBBLE(0x30);
   597   0026DA  0E30               	movlw	48
   598   0026DC  EC52  F014         	call	_ENVIA_NIBBLE
   599   0026E0                     
   600                           ;LCD.c: 118:     _delay((unsigned long)((2)*(4000000UL/4000.0)));
   601   0026E0  0E03               	movlw	3
   602   0026E2  6E04               	movwf	??_LCD_CONFIG^(0+1280),c
   603   0026E4  0E98               	movlw	152
   604   0026E6                     u377:
   605   0026E6  2EE8               	decfsz	wreg,f,c
   606   0026E8  D7FE               	bra	u377
   607   0026EA  2E04               	decfsz	??_LCD_CONFIG^(0+1280),f,c
   608   0026EC  D7FC               	bra	u377
   609   0026EE                     
   610                           ;LCD.c: 119:  ENVIA_NIBBLE(0x30);
   611   0026EE  0E30               	movlw	48
   612   0026F0  EC52  F014         	call	_ENVIA_NIBBLE
   613                           
   614                           ;LCD.c: 120:     _delay((unsigned long)((100)*(4000000UL/4000000.0)));
   615   0026F4  0E21               	movlw	33
   616   0026F6                     u387:
   617   0026F6  2EE8               	decfsz	wreg,f,c
   618   0026F8  D7FE               	bra	u387
   619   0026FA  0000               	nop	
   620   0026FC                     
   621                           ;LCD.c: 121:     ENVIA_NIBBLE(0x30);
   622   0026FC  0E30               	movlw	48
   623   0026FE  EC52  F014         	call	_ENVIA_NIBBLE
   624   002702                     
   625                           ;LCD.c: 122:  ENVIA_NIBBLE(0x20);
   626   002702  0E20               	movlw	32
   627   002704  EC52  F014         	call	_ENVIA_NIBBLE
   628   002708                     
   629                           ;LCD.c: 123:  ENVIA_LCD_CMD(0x01);
   630   002708  0E01               	movlw	1
   631   00270A  ECEF  F013         	call	_ENVIA_LCD_CMD
   632   00270E                     
   633                           ;LCD.c: 124:  ENVIA_LCD_CMD(0x28);
   634   00270E  0E28               	movlw	40
   635   002710  ECEF  F013         	call	_ENVIA_LCD_CMD
   636   002714                     
   637                           ;LCD.c: 125:  ENVIA_LCD_CMD(0x0F);
   638   002714  0E0F               	movlw	15
   639   002716  ECEF  F013         	call	_ENVIA_LCD_CMD
   640   00271A                     
   641                           ;LCD.c: 126:  ENVIA_LCD_CMD(0x06);
   642   00271A  0E06               	movlw	6
   643   00271C  ECEF  F013         	call	_ENVIA_LCD_CMD
   644   002720                     
   645                           ;LCD.c: 127:  ENVIA_LCD_CMD(0x01);
   646   002720  0E01               	movlw	1
   647   002722  ECEF  F013         	call	_ENVIA_LCD_CMD
   648   002726  0012               	return		;funcret
   649   002728                     __end_of_LCD_CONFIG:
   650                           	callstack 0
   651                           
   652 ;; *************** function _CURSOR_ONOFF *****************
   653 ;; Defined at:
   654 ;;		line 66 in file "LCD.c"
   655 ;; Parameters:    Size  Location     Type
   656 ;;  estado          1    wreg     unsigned char 
   657 ;; Auto vars:     Size  Location     Type
   658 ;;  estado          1    3[COMRAM] unsigned char 
   659 ;; Return value:  Size  Location     Type
   660 ;;                  1    wreg      void 
   661 ;; Registers used:
   662 ;;		wreg, status,2, status,0, cstack
   663 ;; Tracked objects:
   664 ;;		On entry : 0/0
   665 ;;		On exit  : 0/0
   666 ;;		Unchanged: 0/0
   667 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   668 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   669 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   670 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   671 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   672 ;;Total ram usage:        1 bytes
   673 ;; Hardware stack levels used: 1
   674 ;; Hardware stack levels required when called: 2
   675 ;; This function calls:
   676 ;;		_ENVIA_LCD_CMD
   677 ;; This function is called by:
   678 ;;		_LCD_INIT
   679 ;; This function uses a non-reentrant model
   680 ;;
   681                           
   682                           	psect	text4
   683   002846                     __ptext4:
   684                           	callstack 0
   685   002846                     _CURSOR_ONOFF:
   686                           	callstack 122
   687                           
   688                           ;incstack = 0
   689                           ;CURSOR_ONOFF@estado stored from wreg
   690   002846  6E04               	movwf	CURSOR_ONOFF@estado^(0+1280),c
   691   002848                     
   692                           ;LCD.c: 66: void CURSOR_ONOFF(unsigned char estado);LCD.c: 67: {;LCD.c: 68:  if(estado =
      +                          = 0) ENVIA_LCD_CMD(0x0E);
   693   002848  5004               	movf	CURSOR_ONOFF@estado^(0+1280),w,c
   694   00284A  A4D8               	btfss	status,2,c
   695   00284C  EF2A  F014         	goto	u21
   696   002850  EF2C  F014         	goto	u20
   697   002854                     u21:
   698   002854  EF2F  F014         	goto	l942
   699   002858                     u20:
   700   002858  0E0E               	movlw	14
   701   00285A  ECEF  F013         	call	_ENVIA_LCD_CMD
   702   00285E                     l942:
   703                           
   704                           ;LCD.c: 69:  if(estado == 1) ENVIA_LCD_CMD(0x0C);
   705   00285E  0404               	decf	CURSOR_ONOFF@estado^(0+1280),w,c
   706   002860  A4D8               	btfss	status,2,c
   707   002862  EF35  F014         	goto	u31
   708   002866  EF37  F014         	goto	u30
   709   00286A                     u31:
   710   00286A  EF3A  F014         	goto	l117
   711   00286E                     u30:
   712   00286E  0E0C               	movlw	12
   713   002870  ECEF  F013         	call	_ENVIA_LCD_CMD
   714   002874                     l117:
   715   002874  0012               	return		;funcret
   716   002876                     __end_of_CURSOR_ONOFF:
   717                           	callstack 0
   718                           
   719 ;; *************** function _CURSOR_HOME *****************
   720 ;; Defined at:
   721 ;;		line 41 in file "LCD.c"
   722 ;; Parameters:    Size  Location     Type
   723 ;;		None
   724 ;; Auto vars:     Size  Location     Type
   725 ;;		None
   726 ;; Return value:  Size  Location     Type
   727 ;;                  1    wreg      void 
   728 ;; Registers used:
   729 ;;		wreg, status,2, status,0, cstack
   730 ;; Tracked objects:
   731 ;;		On entry : 0/0
   732 ;;		On exit  : 0/0
   733 ;;		Unchanged: 0/0
   734 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   735 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   736 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   737 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   738 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   739 ;;Total ram usage:        0 bytes
   740 ;; Hardware stack levels used: 1
   741 ;; Hardware stack levels required when called: 2
   742 ;; This function calls:
   743 ;;		_ENVIA_LCD_CMD
   744 ;; This function is called by:
   745 ;;		_LCD_INIT
   746 ;; This function uses a non-reentrant model
   747 ;;
   748                           
   749                           	psect	text5
   750   0028C0                     __ptext5:
   751                           	callstack 0
   752   0028C0                     _CURSOR_HOME:
   753                           	callstack 122
   754   0028C0                     
   755                           ;LCD.c: 43:  ENVIA_LCD_CMD(0x02);
   756   0028C0  0E02               	movlw	2
   757   0028C2  ECEF  F013         	call	_ENVIA_LCD_CMD
   758   0028C6  0012               	return		;funcret
   759   0028C8                     __end_of_CURSOR_HOME:
   760                           	callstack 0
   761                           
   762 ;; *************** function _BORRAR_LCD *****************
   763 ;; Defined at:
   764 ;;		line 108 in file "LCD.c"
   765 ;; Parameters:    Size  Location     Type
   766 ;;		None
   767 ;; Auto vars:     Size  Location     Type
   768 ;;		None
   769 ;; Return value:  Size  Location     Type
   770 ;;                  1    wreg      void 
   771 ;; Registers used:
   772 ;;		wreg, status,2, status,0, cstack
   773 ;; Tracked objects:
   774 ;;		On entry : 0/0
   775 ;;		On exit  : 0/0
   776 ;;		Unchanged: 0/0
   777 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   778 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   779 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   780 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   781 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   782 ;;Total ram usage:        0 bytes
   783 ;; Hardware stack levels used: 1
   784 ;; Hardware stack levels required when called: 2
   785 ;; This function calls:
   786 ;;		_ENVIA_LCD_CMD
   787 ;; This function is called by:
   788 ;;		_LCD_INIT
   789 ;; This function uses a non-reentrant model
   790 ;;
   791                           
   792                           	psect	text6
   793   0028C8                     __ptext6:
   794                           	callstack 0
   795   0028C8                     _BORRAR_LCD:
   796                           	callstack 122
   797   0028C8                     
   798                           ;LCD.c: 110:  ENVIA_LCD_CMD(0x01);
   799   0028C8  0E01               	movlw	1
   800   0028CA  ECEF  F013         	call	_ENVIA_LCD_CMD
   801   0028CE  0012               	return		;funcret
   802   0028D0                     __end_of_BORRAR_LCD:
   803                           	callstack 0
   804                           
   805 ;; *************** function _POS_CURSOR *****************
   806 ;; Defined at:
   807 ;;		line 9 in file "LCD.c"
   808 ;; Parameters:    Size  Location     Type
   809 ;;  fila            1    wreg     unsigned char 
   810 ;;  columna         1    3[COMRAM] unsigned char 
   811 ;; Auto vars:     Size  Location     Type
   812 ;;  fila            1    4[COMRAM] unsigned char 
   813 ;; Return value:  Size  Location     Type
   814 ;;                  1    wreg      void 
   815 ;; Registers used:
   816 ;;		wreg, status,2, status,0, cstack
   817 ;; Tracked objects:
   818 ;;		On entry : 0/0
   819 ;;		On exit  : 0/0
   820 ;;		Unchanged: 0/0
   821 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   822 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   823 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   824 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   825 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   826 ;;Total ram usage:        2 bytes
   827 ;; Hardware stack levels used: 1
   828 ;; Hardware stack levels required when called: 2
   829 ;; This function calls:
   830 ;;		_ENVIA_LCD_CMD
   831 ;; This function is called by:
   832 ;;		_main
   833 ;; This function uses a non-reentrant model
   834 ;;
   835                           
   836                           	psect	text7
   837   0025EA                     __ptext7:
   838                           	callstack 0
   839   0025EA                     _POS_CURSOR:
   840                           	callstack 124
   841                           
   842                           ;incstack = 0
   843                           ;POS_CURSOR@fila stored from wreg
   844   0025EA  6E05               	movwf	POS_CURSOR@fila^(0+1280),c
   845   0025EC                     
   846                           ;LCD.c: 9: void POS_CURSOR(unsigned char fila,unsigned char columna);LCD.c: 10: {;LCD.c:
      +                           11:  if(fila == 1)
   847   0025EC  0405               	decf	POS_CURSOR@fila^(0+1280),w,c
   848   0025EE  A4D8               	btfss	status,2,c
   849   0025F0  EFFC  F012         	goto	u251
   850   0025F4  EFFE  F012         	goto	u250
   851   0025F8                     u251:
   852   0025F8  EF04  F013         	goto	l1200
   853   0025FC                     u250:
   854   0025FC                     
   855                           ;LCD.c: 12:  {;LCD.c: 13:   ENVIA_LCD_CMD(0x80+columna);
   856   0025FC  5004               	movf	POS_CURSOR@columna^(0+1280),w,c
   857   0025FE  0F80               	addlw	128
   858   002600  ECEF  F013         	call	_ENVIA_LCD_CMD
   859                           
   860                           ;LCD.c: 14:  }
   861   002604  EF31  F013         	goto	l87
   862   002608                     l1200:
   863   002608  0E02               	movlw	2
   864   00260A  1805               	xorwf	POS_CURSOR@fila^(0+1280),w,c
   865   00260C  A4D8               	btfss	status,2,c
   866   00260E  EF0B  F013         	goto	u261
   867   002612  EF0D  F013         	goto	u260
   868   002616                     u261:
   869   002616  EF13  F013         	goto	l1204
   870   00261A                     u260:
   871   00261A                     
   872                           ;LCD.c: 16:  {;LCD.c: 17:   ENVIA_LCD_CMD(0xC0+columna);
   873   00261A  5004               	movf	POS_CURSOR@columna^(0+1280),w,c
   874   00261C  0FC0               	addlw	192
   875   00261E  ECEF  F013         	call	_ENVIA_LCD_CMD
   876                           
   877                           ;LCD.c: 18:  }
   878   002622  EF31  F013         	goto	l87
   879   002626                     l1204:
   880   002626  0E03               	movlw	3
   881   002628  1805               	xorwf	POS_CURSOR@fila^(0+1280),w,c
   882   00262A  A4D8               	btfss	status,2,c
   883   00262C  EF1A  F013         	goto	u271
   884   002630  EF1C  F013         	goto	u270
   885   002634                     u271:
   886   002634  EF22  F013         	goto	l1208
   887   002638                     u270:
   888   002638                     
   889                           ;LCD.c: 20:  {;LCD.c: 21:   ENVIA_LCD_CMD(0x94+columna);
   890   002638  5004               	movf	POS_CURSOR@columna^(0+1280),w,c
   891   00263A  0F94               	addlw	148
   892   00263C  ECEF  F013         	call	_ENVIA_LCD_CMD
   893                           
   894                           ;LCD.c: 22:  }
   895   002640  EF31  F013         	goto	l87
   896   002644                     l1208:
   897   002644  0E04               	movlw	4
   898   002646  1805               	xorwf	POS_CURSOR@fila^(0+1280),w,c
   899   002648  A4D8               	btfss	status,2,c
   900   00264A  EF29  F013         	goto	u281
   901   00264E  EF2B  F013         	goto	u280
   902   002652                     u281:
   903   002652  EF31  F013         	goto	l83
   904   002656                     u280:
   905   002656                     
   906                           ;LCD.c: 24:  {;LCD.c: 25:   ENVIA_LCD_CMD(0xD4+columna);
   907   002656  5004               	movf	POS_CURSOR@columna^(0+1280),w,c
   908   002658  0FD4               	addlw	212
   909   00265A  ECEF  F013         	call	_ENVIA_LCD_CMD
   910   00265E  EF31  F013         	goto	l87
   911   002662                     l83:
   912   002662                     l87:
   913   002662  0012               	return		;funcret
   914   002664                     __end_of_POS_CURSOR:
   915                           	callstack 0
   916                           
   917 ;; *************** function _ENVIA_LCD_CMD *****************
   918 ;; Defined at:
   919 ;;		line 140 in file "LCD.c"
   920 ;; Parameters:    Size  Location     Type
   921 ;;  dato            1    wreg     unsigned char 
   922 ;; Auto vars:     Size  Location     Type
   923 ;;  dato            1    1[COMRAM] unsigned char 
   924 ;;  aux             1    2[COMRAM] unsigned char 
   925 ;; Return value:  Size  Location     Type
   926 ;;                  1    wreg      void 
   927 ;; Registers used:
   928 ;;		wreg, status,2, status,0, cstack
   929 ;; Tracked objects:
   930 ;;		On entry : 0/0
   931 ;;		On exit  : 0/0
   932 ;;		Unchanged: 0/0
   933 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   934 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   935 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   936 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   937 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   938 ;;Total ram usage:        2 bytes
   939 ;; Hardware stack levels used: 1
   940 ;; Hardware stack levels required when called: 1
   941 ;; This function calls:
   942 ;;		_ENVIA_NIBBLE
   943 ;;		_LEER_LCD
   944 ;; This function is called by:
   945 ;;		_POS_CURSOR
   946 ;;		_CURSOR_HOME
   947 ;;		_CURSOR_ONOFF
   948 ;;		_BORRAR_LCD
   949 ;;		_LCD_CONFIG
   950 ;;		_BLINK_CURSOR
   951 ;;		_DISPLAY_ONOFF
   952 ;;		_CURSOR_SHIFTLEFT
   953 ;;		_CURSOR_SHIFTRIGHT
   954 ;;		_DISPLAY_SHIFTLEFT
   955 ;;		_DISPLAY_SHIFTRIGHT
   956 ;;		_GENERACARACTER
   957 ;; This function uses a non-reentrant model
   958 ;;
   959                           
   960                           	psect	text8
   961   0027DE                     __ptext8:
   962                           	callstack 0
   963   0027DE                     _ENVIA_LCD_CMD:
   964                           	callstack 122
   965                           
   966                           ;incstack = 0
   967                           ;ENVIA_LCD_CMD@dato stored from wreg
   968   0027DE  6E02               	movwf	ENVIA_LCD_CMD@dato^(0+1280),c
   969   0027E0                     
   970                           ;LCD.c: 140: void ENVIA_LCD_CMD(unsigned char dato);LCD.c: 141: {;LCD.c: 142:  unsigned 
      +                          char aux;;LCD.c: 143:  LATDbits.LATD0 = 0;
   971   0027E0  90C1               	bcf	193,0,c	;volatile
   972   0027E2                     
   973                           ;LCD.c: 144:  LEER_LCD();
   974   0027E2  EC32  F013         	call	_LEER_LCD	;wreg free
   975   0027E6                     
   976                           ;LCD.c: 145:  TRISD = 0b00000000;
   977   0027E6  0E00               	movlw	0
   978   0027E8  6EC9               	movwf	201,c	;volatile
   979   0027EA                     
   980                           ;LCD.c: 146:     _delay((unsigned long)((100)*(4000000UL/4000000.0)));
   981   0027EA  0E21               	movlw	33
   982   0027EC                     u397:
   983   0027EC  2EE8               	decfsz	wreg,f,c
   984   0027EE  D7FE               	bra	u397
   985   0027F0  0000               	nop	
   986   0027F2                     
   987                           ;LCD.c: 147:     LATDbits.LATD1 = 0;
   988   0027F2  92C1               	bcf	193,1,c	;volatile
   989   0027F4                     
   990                           ;LCD.c: 148:  LATDbits.LATD2 = 0;
   991   0027F4  94C1               	bcf	193,2,c	;volatile
   992   0027F6                     
   993                           ;LCD.c: 149:  LATDbits.LATD0 = 0;
   994   0027F6  90C1               	bcf	193,0,c	;volatile
   995   0027F8                     
   996                           ;LCD.c: 150:  aux = dato & 0xF0;
   997   0027F8  5002               	movf	ENVIA_LCD_CMD@dato^(0+1280),w,c
   998   0027FA  0BF0               	andlw	240
   999   0027FC  6E03               	movwf	ENVIA_LCD_CMD@aux^(0+1280),c
  1000   0027FE                     
  1001                           ;LCD.c: 151:  ENVIA_NIBBLE(aux);
  1002   0027FE  5003               	movf	ENVIA_LCD_CMD@aux^(0+1280),w,c
  1003   002800  EC52  F014         	call	_ENVIA_NIBBLE
  1004   002804                     
  1005                           ;LCD.c: 152:  aux = dato<<4;
  1006   002804  3802               	swapf	ENVIA_LCD_CMD@dato^(0+1280),w,c
  1007   002806  0BF0               	andlw	240
  1008   002808  6E03               	movwf	ENVIA_LCD_CMD@aux^(0+1280),c
  1009   00280A                     
  1010                           ;LCD.c: 153:  ENVIA_NIBBLE(aux);
  1011   00280A  5003               	movf	ENVIA_LCD_CMD@aux^(0+1280),w,c
  1012   00280C  EC52  F014         	call	_ENVIA_NIBBLE
  1013   002810  0012               	return		;funcret
  1014   002812                     __end_of_ENVIA_LCD_CMD:
  1015                           	callstack 0
  1016                           
  1017 ;; *************** function _ESCRIBE_MENSAJE2 *****************
  1018 ;; Defined at:
  1019 ;;		line 81 in file "LCD.c"
  1020 ;; Parameters:    Size  Location     Type
  1021 ;;  cadena          1    3[COMRAM] PTR const unsigned char 
  1022 ;;		 -> STR_3(17), STR_2(17), STR_1(17), 
  1023 ;; Auto vars:     Size  Location     Type
  1024 ;;  i               1    6[COMRAM] unsigned char 
  1025 ;;  tam             1    5[COMRAM] unsigned char 
  1026 ;; Return value:  Size  Location     Type
  1027 ;;                  1    wreg      void 
  1028 ;; Registers used:
  1029 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1030 ;; Tracked objects:
  1031 ;;		On entry : 0/0
  1032 ;;		On exit  : 0/0
  1033 ;;		Unchanged: 0/0
  1034 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1035 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1036 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1037 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1038 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1039 ;;Total ram usage:        4 bytes
  1040 ;; Hardware stack levels used: 1
  1041 ;; Hardware stack levels required when called: 2
  1042 ;; This function calls:
  1043 ;;		_ENVIA_CHAR
  1044 ;;		_strlen
  1045 ;; This function is called by:
  1046 ;;		_main
  1047 ;; This function uses a non-reentrant model
  1048 ;;
  1049                           
  1050                           	psect	text9
  1051   002728                     __ptext9:
  1052                           	callstack 0
  1053   002728                     _ESCRIBE_MENSAJE2:
  1054                           	callstack 124
  1055   002728                     
  1056                           ;LCD.c: 81: void ESCRIBE_MENSAJE2(const char *cadena);LCD.c: 82: {;LCD.c: 83:     unsign
      +                          ed char tam;;LCD.c: 84:     tam = strlen(cadena);
  1057   002728  C504  F501         	movff	ESCRIBE_MENSAJE2@cadena,strlen@s
  1058   00272C  ECD3  F013         	call	_strlen	;wreg free
  1059   002730  5001               	movf	?_strlen^(0+1280),w,c
  1060   002732  6E06               	movwf	ESCRIBE_MENSAJE2@tam^(0+1280),c
  1061   002734                     
  1062                           ;LCD.c: 86:  for(i = 0; i<tam; i++)
  1063   002734  0E00               	movlw	0
  1064   002736  6E07               	movwf	ESCRIBE_MENSAJE2@i^(0+1280),c
  1065   002738  EFAC  F013         	goto	l1222
  1066   00273C                     l1218:
  1067                           
  1068                           ;LCD.c: 87:  {;LCD.c: 88:   ENVIA_CHAR(cadena[i]);
  1069   00273C  5004               	movf	ESCRIBE_MENSAJE2@cadena^(0+1280),w,c
  1070   00273E  2407               	addwf	ESCRIBE_MENSAJE2@i^(0+1280),w,c
  1071   002740  6E05               	movwf	??_ESCRIBE_MENSAJE2^(0+1280),c
  1072   002742  C505  F4F6         	movff	??_ESCRIBE_MENSAJE2,tblptrl
  1073   002746                     	if	1	;There is more than 1 active tblptr byte
  1074   002746  0E25               	movlw	high __smallconst
  1075   002748  6EF7               	movwf	tblptrh,c
  1076   00274A                     	endif
  1077   00274A                     	if	0	;tblptru may be non-zero
  1078   00274A                     	endif
  1079   00274A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1080   00274A  0E00               	movlw	low (__smallconst shr (0+16))
  1081   00274C  6EF8               	movwf	tblptru,c
  1082   00274E                     	endif
  1083   00274E  0008               	tblrd		*
  1084   002750  50F5               	movf	tablat,w,c
  1085   002752  EC09  F014         	call	_ENVIA_CHAR
  1086   002756                     
  1087                           ;LCD.c: 89:  }
  1088   002756  2A07               	incf	ESCRIBE_MENSAJE2@i^(0+1280),f,c
  1089   002758                     l1222:
  1090   002758  5006               	movf	ESCRIBE_MENSAJE2@tam^(0+1280),w,c
  1091   00275A  5C07               	subwf	ESCRIBE_MENSAJE2@i^(0+1280),w,c
  1092   00275C  A0D8               	btfss	status,0,c
  1093   00275E  EFB3  F013         	goto	u291
  1094   002762  EFB5  F013         	goto	u290
  1095   002766                     u291:
  1096   002766  EF9E  F013         	goto	l1218
  1097   00276A                     u290:
  1098   00276A  0012               	return		;funcret
  1099   00276C                     __end_of_ESCRIBE_MENSAJE2:
  1100                           	callstack 0
  1101                           
  1102 ;; *************** function _strlen *****************
  1103 ;; Defined at:
  1104 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\strlen.c"
  1105 ;; Parameters:    Size  Location     Type
  1106 ;;  s               1    0[COMRAM] PTR const unsigned char 
  1107 ;;		 -> STR_3(17), STR_2(17), STR_1(17), 
  1108 ;; Auto vars:     Size  Location     Type
  1109 ;;  a               1    2[COMRAM] PTR const unsigned char 
  1110 ;;		 -> STR_3(17), STR_2(17), STR_1(17), 
  1111 ;; Return value:  Size  Location     Type
  1112 ;;                  2    0[COMRAM] unsigned int 
  1113 ;; Registers used:
  1114 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  1115 ;; Tracked objects:
  1116 ;;		On entry : 0/0
  1117 ;;		On exit  : 0/0
  1118 ;;		Unchanged: 0/0
  1119 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1120 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1121 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1122 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1123 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1124 ;;Total ram usage:        3 bytes
  1125 ;; Hardware stack levels used: 1
  1126 ;; This function calls:
  1127 ;;		Nothing
  1128 ;; This function is called by:
  1129 ;;		_ESCRIBE_MENSAJE2
  1130 ;; This function uses a non-reentrant model
  1131 ;;
  1132                           
  1133                           	psect	text10
  1134   0027A6                     __ptext10:
  1135                           	callstack 0
  1136   0027A6                     _strlen:
  1137                           	callstack 125
  1138   0027A6  C501  F503         	movff	strlen@s,strlen@a
  1139   0027AA  EFD8  F013         	goto	l1190
  1140   0027AE                     l1188:
  1141   0027AE  2A01               	incf	strlen@s^(0+1280),f,c
  1142   0027B0                     l1190:
  1143   0027B0  C501  F4F6         	movff	strlen@s,tblptrl
  1144   0027B4                     	if	1	;There is more than 1 active tblptr byte
  1145   0027B4  0E25               	movlw	high __smallconst
  1146   0027B6  6EF7               	movwf	tblptrh,c
  1147   0027B8                     	endif
  1148   0027B8                     	if	0	;tblptru may be non-zero
  1149   0027B8                     	endif
  1150   0027B8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  1151   0027B8  0E00               	movlw	low (__smallconst shr (0+16))
  1152   0027BA  6EF8               	movwf	tblptru,c
  1153   0027BC                     	endif
  1154   0027BC  0008               	tblrd		*
  1155   0027BE  50F5               	movf	tablat,w,c
  1156   0027C0  0900               	iorlw	0
  1157   0027C2  A4D8               	btfss	status,2,c
  1158   0027C4  EFE6  F013         	goto	u241
  1159   0027C8  EFE8  F013         	goto	u240
  1160   0027CC                     u241:
  1161   0027CC  EFD7  F013         	goto	l1188
  1162   0027D0                     u240:
  1163   0027D0  5003               	movf	strlen@a^(0+1280),w,c
  1164   0027D2  5C01               	subwf	strlen@s^(0+1280),w,c
  1165   0027D4  6E01               	movwf	?_strlen^(0+1280),c
  1166   0027D6  6A02               	clrf	(?_strlen+1)^(0+1280),c
  1167   0027D8  BE01               	btfsc	?_strlen^(0+1280),7,c
  1168   0027DA  0602               	decf	(?_strlen+1)^(0+1280),f,c
  1169   0027DC  0012               	return		;funcret
  1170   0027DE                     __end_of_strlen:
  1171                           	callstack 0
  1172                           
  1173 ;; *************** function _ENVIA_CHAR *****************
  1174 ;; Defined at:
  1175 ;;		line 92 in file "LCD.c"
  1176 ;; Parameters:    Size  Location     Type
  1177 ;;  dato            1    wreg     unsigned char 
  1178 ;; Auto vars:     Size  Location     Type
  1179 ;;  dato            1    1[COMRAM] unsigned char 
  1180 ;;  aux             1    2[COMRAM] unsigned char 
  1181 ;; Return value:  Size  Location     Type
  1182 ;;                  1    wreg      void 
  1183 ;; Registers used:
  1184 ;;		wreg, status,2, status,0, cstack
  1185 ;; Tracked objects:
  1186 ;;		On entry : 0/0
  1187 ;;		On exit  : 0/0
  1188 ;;		Unchanged: 0/0
  1189 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1190 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1191 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1192 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1193 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1194 ;;Total ram usage:        2 bytes
  1195 ;; Hardware stack levels used: 1
  1196 ;; Hardware stack levels required when called: 1
  1197 ;; This function calls:
  1198 ;;		_ENVIA_NIBBLE
  1199 ;;		_LEER_LCD
  1200 ;; This function is called by:
  1201 ;;		_ESCRIBE_MENSAJE2
  1202 ;;		_ESCRIBE_MENSAJE
  1203 ;;		_GENERACARACTER
  1204 ;;		_LCD_ESCRIBE_VAR_CHAR
  1205 ;;		_LCD_ESCRIBE_VAR_INT
  1206 ;;		_LCD_CHAR_GRADO
  1207 ;;		_LCD_VARCHAR_BITS
  1208 ;; This function uses a non-reentrant model
  1209 ;;
  1210                           
  1211                           	psect	text11
  1212   002812                     __ptext11:
  1213                           	callstack 0
  1214   002812                     _ENVIA_CHAR:
  1215                           	callstack 124
  1216                           
  1217                           ;incstack = 0
  1218                           ;ENVIA_CHAR@dato stored from wreg
  1219   002812  6E02               	movwf	ENVIA_CHAR@dato^(0+1280),c
  1220   002814                     
  1221                           ;LCD.c: 92: void ENVIA_CHAR(unsigned char dato);LCD.c: 93: {;LCD.c: 94:  unsigned char a
      +                          ux;;LCD.c: 95:  LATDbits.LATD0 = 1;
  1222   002814  80C1               	bsf	193,0,c	;volatile
  1223   002816                     
  1224                           ;LCD.c: 96:  LEER_LCD();
  1225   002816  EC32  F013         	call	_LEER_LCD	;wreg free
  1226   00281A                     
  1227                           ;LCD.c: 97:  TRISD = 0x00;
  1228   00281A  0E00               	movlw	0
  1229   00281C  6EC9               	movwf	201,c	;volatile
  1230   00281E                     
  1231                           ;LCD.c: 98:     _delay((unsigned long)((100)*(4000000UL/4000000.0)));
  1232   00281E  0E21               	movlw	33
  1233   002820                     u407:
  1234   002820  2EE8               	decfsz	wreg,f,c
  1235   002822  D7FE               	bra	u407
  1236   002824  0000               	nop	
  1237   002826                     
  1238                           ;LCD.c: 99:  LATDbits.LATD1 = 0;
  1239   002826  92C1               	bcf	193,1,c	;volatile
  1240   002828                     
  1241                           ;LCD.c: 100:  LATDbits.LATD2 = 0;
  1242   002828  94C1               	bcf	193,2,c	;volatile
  1243   00282A                     
  1244                           ;LCD.c: 101:  LATDbits.LATD0 = 1;
  1245   00282A  80C1               	bsf	193,0,c	;volatile
  1246   00282C                     
  1247                           ;LCD.c: 102:  aux = dato & 0xF0;
  1248   00282C  5002               	movf	ENVIA_CHAR@dato^(0+1280),w,c
  1249   00282E  0BF0               	andlw	240
  1250   002830  6E03               	movwf	ENVIA_CHAR@aux^(0+1280),c
  1251   002832                     
  1252                           ;LCD.c: 103:  ENVIA_NIBBLE(aux);
  1253   002832  5003               	movf	ENVIA_CHAR@aux^(0+1280),w,c
  1254   002834  EC52  F014         	call	_ENVIA_NIBBLE
  1255   002838                     
  1256                           ;LCD.c: 104:  aux = dato << 4;
  1257   002838  3802               	swapf	ENVIA_CHAR@dato^(0+1280),w,c
  1258   00283A  0BF0               	andlw	240
  1259   00283C  6E03               	movwf	ENVIA_CHAR@aux^(0+1280),c
  1260   00283E                     
  1261                           ;LCD.c: 105:  ENVIA_NIBBLE(aux);
  1262   00283E  5003               	movf	ENVIA_CHAR@aux^(0+1280),w,c
  1263   002840  EC52  F014         	call	_ENVIA_NIBBLE
  1264   002844  0012               	return		;funcret
  1265   002846                     __end_of_ENVIA_CHAR:
  1266                           	callstack 0
  1267                           
  1268 ;; *************** function _LEER_LCD *****************
  1269 ;; Defined at:
  1270 ;;		line 156 in file "LCD.c"
  1271 ;; Parameters:    Size  Location     Type
  1272 ;;		None
  1273 ;; Auto vars:     Size  Location     Type
  1274 ;;  aux             1    0[COMRAM] unsigned char 
  1275 ;; Return value:  Size  Location     Type
  1276 ;;                  1    wreg      void 
  1277 ;; Registers used:
  1278 ;;		wreg, status,2, status,0
  1279 ;; Tracked objects:
  1280 ;;		On entry : 0/0
  1281 ;;		On exit  : 0/0
  1282 ;;		Unchanged: 0/0
  1283 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1284 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1285 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1286 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1287 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1288 ;;Total ram usage:        1 bytes
  1289 ;; Hardware stack levels used: 1
  1290 ;; This function calls:
  1291 ;;		Nothing
  1292 ;; This function is called by:
  1293 ;;		_ENVIA_CHAR
  1294 ;;		_ENVIA_LCD_CMD
  1295 ;; This function uses a non-reentrant model
  1296 ;;
  1297                           
  1298                           	psect	text12
  1299   002664                     __ptext12:
  1300                           	callstack 0
  1301   002664                     _LEER_LCD:
  1302                           	callstack 122
  1303   002664                     
  1304                           ;LCD.c: 158:  unsigned char aux;;LCD.c: 159:  TRISD = 0xF8;
  1305   002664  0EF8               	movlw	248
  1306   002666  6EC9               	movwf	201,c	;volatile
  1307   002668                     
  1308                           ;LCD.c: 160:  LATDbits.LATD0 = 0;
  1309   002668  90C1               	bcf	193,0,c	;volatile
  1310   00266A                     
  1311                           ;LCD.c: 161:  LATDbits.LATD1 = 1;
  1312   00266A  82C1               	bsf	193,1,c	;volatile
  1313   00266C                     
  1314                           ;LCD.c: 162:  LATDbits.LATD2 = 1;
  1315   00266C  84C1               	bsf	193,2,c	;volatile
  1316   00266E                     
  1317                           ;LCD.c: 163:     _delay((unsigned long)((100)*(4000000UL/4000000.0)));
  1318   00266E  0E21               	movlw	33
  1319   002670                     u417:
  1320   002670  2EE8               	decfsz	wreg,f,c
  1321   002672  D7FE               	bra	u417
  1322   002674  0000               	nop	
  1323   002676                     
  1324                           ;LCD.c: 164:  aux = PORTD;
  1325   002676  C4D1 F501          	movff	1233,LEER_LCD@aux	;volatile
  1326   00267A                     
  1327                           ;LCD.c: 165:  LATDbits.LATD2 = 0;
  1328   00267A  94C1               	bcf	193,2,c	;volatile
  1329   00267C                     
  1330                           ;LCD.c: 166:     _delay((unsigned long)((100)*(4000000UL/4000000.0)));
  1331   00267C  0E21               	movlw	33
  1332   00267E                     u427:
  1333   00267E  2EE8               	decfsz	wreg,f,c
  1334   002680  D7FE               	bra	u427
  1335   002682  0000               	nop	
  1336   002684                     
  1337                           ;LCD.c: 167:  LATDbits.LATD2 = 1;
  1338   002684  84C1               	bsf	193,2,c	;volatile
  1339   002686                     
  1340                           ;LCD.c: 168:     _delay((unsigned long)((100)*(4000000UL/4000000.0)));
  1341   002686  0E21               	movlw	33
  1342   002688                     u437:
  1343   002688  2EE8               	decfsz	wreg,f,c
  1344   00268A  D7FE               	bra	u437
  1345   00268C  0000               	nop	
  1346   00268E                     
  1347                           ;LCD.c: 169:  LATDbits.LATD2 = 0;
  1348   00268E  94C1               	bcf	193,2,c	;volatile
  1349   002690                     l890:
  1350                           
  1351                           ;LCD.c: 170:  aux = aux & 0x80;
  1352   002690  5001               	movf	LEER_LCD@aux^(0+1280),w,c
  1353   002692  0B80               	andlw	128
  1354   002694  6E01               	movwf	LEER_LCD@aux^(0+1280),c
  1355                           
  1356                           ;LCD.c: 171:  while(aux == 0x80)
  1357   002696  EF61  F013         	goto	l904
  1358   00269A                     l148:
  1359                           
  1360                           ;LCD.c: 172:         {;LCD.c: 173:             LATDbits.LATD2 = 1;
  1361   00269A  84C1               	bsf	193,2,c	;volatile
  1362   00269C                     
  1363                           ;LCD.c: 174:             _delay((unsigned long)((100)*(4000000UL/4000000.0)));
  1364   00269C  0E21               	movlw	33
  1365   00269E                     u447:
  1366   00269E  2EE8               	decfsz	wreg,f,c
  1367   0026A0  D7FE               	bra	u447
  1368   0026A2  0000               	nop	
  1369   0026A4                     
  1370                           ;LCD.c: 175:             aux = PORTD;
  1371   0026A4  C4D1 F501          	movff	1233,LEER_LCD@aux	;volatile
  1372   0026A8                     
  1373                           ;LCD.c: 176:             LATDbits.LATD2 = 0;
  1374   0026A8  94C1               	bcf	193,2,c	;volatile
  1375                           
  1376                           ;LCD.c: 177:             _delay((unsigned long)((100)*(4000000UL/4000000.0)));
  1377   0026AA  0E21               	movlw	33
  1378   0026AC                     u457:
  1379   0026AC  2EE8               	decfsz	wreg,f,c
  1380   0026AE  D7FE               	bra	u457
  1381   0026B0  0000               	nop	
  1382   0026B2                     
  1383                           ;LCD.c: 178:             LATDbits.LATD2 = 1;
  1384   0026B2  84C1               	bsf	193,2,c	;volatile
  1385                           
  1386                           ;LCD.c: 179:             _delay((unsigned long)((100)*(4000000UL/4000000.0)));
  1387   0026B4  0E21               	movlw	33
  1388   0026B6                     u467:
  1389   0026B6  2EE8               	decfsz	wreg,f,c
  1390   0026B8  D7FE               	bra	u467
  1391   0026BA  0000               	nop	
  1392   0026BC                     
  1393                           ;LCD.c: 180:             LATDbits.LATD2 = 0;
  1394   0026BC  94C1               	bcf	193,2,c	;volatile
  1395   0026BE  EF48  F013         	goto	l890
  1396   0026C2                     l904:
  1397                           
  1398                           ;LCD.c: 171:  while(aux == 0x80)
  1399   0026C2  0E80               	movlw	128
  1400   0026C4  1801               	xorwf	LEER_LCD@aux^(0+1280),w,c
  1401   0026C6  B4D8               	btfsc	status,2,c
  1402   0026C8  EF68  F013         	goto	u11
  1403   0026CC  EF6A  F013         	goto	u10
  1404   0026D0                     u11:
  1405   0026D0  EF4D  F013         	goto	l148
  1406   0026D4                     u10:
  1407   0026D4  0012               	return		;funcret
  1408   0026D6                     __end_of_LEER_LCD:
  1409                           	callstack 0
  1410                           
  1411 ;; *************** function _ENVIA_NIBBLE *****************
  1412 ;; Defined at:
  1413 ;;		line 130 in file "LCD.c"
  1414 ;; Parameters:    Size  Location     Type
  1415 ;;  dato            1    wreg     unsigned char 
  1416 ;; Auto vars:     Size  Location     Type
  1417 ;;  dato            1    0[COMRAM] unsigned char 
  1418 ;; Return value:  Size  Location     Type
  1419 ;;                  1    wreg      void 
  1420 ;; Registers used:
  1421 ;;		wreg, status,2, status,0
  1422 ;; Tracked objects:
  1423 ;;		On entry : 0/0
  1424 ;;		On exit  : 0/0
  1425 ;;		Unchanged: 0/0
  1426 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1427 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1428 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1429 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1430 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1431 ;;Total ram usage:        1 bytes
  1432 ;; Hardware stack levels used: 1
  1433 ;; This function calls:
  1434 ;;		Nothing
  1435 ;; This function is called by:
  1436 ;;		_ENVIA_CHAR
  1437 ;;		_LCD_CONFIG
  1438 ;;		_ENVIA_LCD_CMD
  1439 ;; This function uses a non-reentrant model
  1440 ;;
  1441                           
  1442                           	psect	text13
  1443   0028A4                     __ptext13:
  1444                           	callstack 0
  1445   0028A4                     _ENVIA_NIBBLE:
  1446                           	callstack 123
  1447                           
  1448                           ;incstack = 0
  1449                           ;ENVIA_NIBBLE@dato stored from wreg
  1450   0028A4  6E01               	movwf	ENVIA_NIBBLE@dato^(0+1280),c
  1451   0028A6                     
  1452                           ;LCD.c: 130: void ENVIA_NIBBLE(unsigned char dato);LCD.c: 131: {;LCD.c: 132:  LATD &= 0x
      +                          0F;
  1453   0028A6  0E0F               	movlw	15
  1454   0028A8  16C1               	andwf	193,f,c	;volatile
  1455                           
  1456                           ;LCD.c: 133:  dato &= 0xF0;
  1457   0028AA  0EF0               	movlw	240
  1458   0028AC  1601               	andwf	ENVIA_NIBBLE@dato^(0+1280),f,c
  1459                           
  1460                           ;LCD.c: 134:  LATD|= dato;
  1461   0028AE  5001               	movf	ENVIA_NIBBLE@dato^(0+1280),w,c	;volatile
  1462   0028B0  12C1               	iorwf	193,f,c	;volatile
  1463   0028B2                     
  1464                           ;LCD.c: 135:  LATDbits.LATD2 = 1;
  1465   0028B2  84C1               	bsf	193,2,c	;volatile
  1466   0028B4                     
  1467                           ;LCD.c: 136:     _delay((unsigned long)((100)*(4000000UL/4000000.0)));
  1468   0028B4  0E21               	movlw	33
  1469   0028B6                     u477:
  1470   0028B6  2EE8               	decfsz	wreg,f,c
  1471   0028B8  D7FE               	bra	u477
  1472   0028BA  0000               	nop	
  1473   0028BC                     
  1474                           ;LCD.c: 137:  LATDbits.LATD2 = 0;
  1475   0028BC  94C1               	bcf	193,2,c	;volatile
  1476   0028BE  0012               	return		;funcret
  1477   0028C0                     __end_of_ENVIA_NIBBLE:
  1478                           	callstack 0
  1479                           
  1480                           	psect	rparam
  1481   000000                     
  1482                           	psect	config
  1483                           
  1484                           ;Config register CONFIG1 @ 0x300000
  1485                           ;	External Oscillator Selection
  1486                           ;	FEXTOSC = OFF, Oscillator not enabled
  1487                           ;	Reset Oscillator Selection
  1488                           ;	RSTOSC = EXTOSC, EXTOSC operating per FEXTOSC bits (device manufacturing default)
  1489   300000                     	org	3145728
  1490   300000  FC                 	db	252
  1491                           
  1492                           ;Config register CONFIG2 @ 0x300001
  1493                           ;	Clock out Enable bit
  1494                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
  1495                           ;	PRLOCKED One-Way Set Enable bit
  1496                           ;	PR1WAY = ON, PRLOCKED bit can be cleared and set only once
  1497                           ;	Clock Switch Enable bit
  1498                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
  1499                           ;	Fail-Safe Clock Monitor Enable bit
  1500                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
  1501   300001                     	org	3145729
  1502   300001  FF                 	db	255
  1503                           
  1504                           ;Config register CONFIG3 @ 0x300002
  1505                           ;	MCLR Enable bit
  1506                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
  1507                           ;	Power-up timer selection bits
  1508                           ;	PWRTS = PWRT_64, PWRT set at 64ms
  1509                           ;	Multi-vector enable bit
  1510                           ;	MVECEN = ON, Multi-vector enabled, Vector table used for interrupts
  1511                           ;	IVTLOCK bit One-way set enable bit
  1512                           ;	IVT1WAY = ON, IVTLOCKED bit can be cleared and set only once
  1513                           ;	Low Power BOR Enable bit
  1514                           ;	LPBOREN = OFF, Low-Power BOR disabled
  1515                           ;	Brown-out Reset Enable bits
  1516                           ;	BOREN = OFF, Brown-out Reset disabled
  1517   300002                     	org	3145730
  1518   300002  3D                 	db	61
  1519                           
  1520                           ;Config register CONFIG4 @ 0x300003
  1521                           ;	Brown-out Reset Voltage Selection bits
  1522                           ;	BORV = VBOR_1P9, Brown-out Reset Voltage (VBOR) set to 1.9V
  1523                           ;	ZCD Disable bit
  1524                           ;	ZCD = OFF, ZCD module is disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCD
      +                          CON
  1525                           ;	PPSLOCK bit One-Way Set Enable bit
  1526                           ;	PPS1WAY = ON, PPSLOCKED bit can be cleared and set only once; PPS registers remain loc
      +                          ked after one clear/set cycle
  1527                           ;	Stack Full/Underflow Reset Enable bit
  1528                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1529                           ;	Low Voltage Programming Enable bit
  1530                           ;	LVP = OFF, HV on MCLR/VPP must be used for programming
  1531                           ;	Extended Instruction Set Enable bit
  1532                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
  1533   300003                     	org	3145731
  1534   300003  DF                 	db	223
  1535                           
  1536                           ;Config register CONFIG5 @ 0x300004
  1537                           ;	WDT Period selection bits
  1538                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  1539                           ;	WDT operating mode
  1540                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
  1541   300004                     	org	3145732
  1542   300004  9F                 	db	159
  1543                           
  1544                           ;Config register CONFIG6 @ 0x300005
  1545                           ;	WDT Window Select bits
  1546                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
  1547                           ;	WDT input clock selector
  1548                           ;	WDTCCS = SC, Software Control
  1549   300005                     	org	3145733
  1550   300005  FF                 	db	255
  1551                           
  1552                           ;Config register CONFIG7 @ 0x300006
  1553                           ;	Boot Block Size selection bits
  1554                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
  1555                           ;	Boot Block enable bit
  1556                           ;	BBEN = OFF, Boot block disabled
  1557                           ;	Storage Area Flash enable bit
  1558                           ;	SAFEN = OFF, SAF disabled
  1559                           ;	Background Debugger
  1560                           ;	DEBUG = OFF, Background Debugger disabled
  1561   300006                     	org	3145734
  1562   300006  FF                 	db	255
  1563                           
  1564                           ;Config register CONFIG8 @ 0x300007
  1565                           ;	Boot Block Write Protection bit
  1566                           ;	WRTB = OFF, Boot Block not Write protected
  1567                           ;	Configuration Register Write Protection bit
  1568                           ;	WRTC = OFF, Configuration registers not Write protected
  1569                           ;	Data EEPROM Write Protection bit
  1570                           ;	WRTD = OFF, Data EEPROM not Write protected
  1571                           ;	SAF Write protection bit
  1572                           ;	WRTSAF = OFF, SAF not Write Protected
  1573                           ;	Application Block write protection bit
  1574                           ;	WRTAPP = OFF, Application Block not write protected
  1575   300007                     	org	3145735
  1576   300007  FF                 	db	255
  1577                           
  1578                           ;Config register CONFIG10 @ 0x300009
  1579                           ;	PFM and Data EEPROM Code Protection bit
  1580                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
  1581   300009                     	org	3145737
  1582   300009  FF                 	db	255
  1583                           tosu	equ	0x4FF
  1584                           tosh	equ	0x4FE
  1585                           tosl	equ	0x4FD
  1586                           stkptr	equ	0x4FC
  1587                           pclatu	equ	0x4FB
  1588                           pclath	equ	0x4FA
  1589                           pcl	equ	0x4F9
  1590                           tblptru	equ	0x4F8
  1591                           tblptrh	equ	0x4F7
  1592                           tblptrl	equ	0x4F6
  1593                           tablat	equ	0x4F5
  1594                           prodh	equ	0x4F4
  1595                           prodl	equ	0x4F3
  1596                           indf0	equ	0x4EF
  1597                           postinc0	equ	0x4EE
  1598                           postdec0	equ	0x4ED
  1599                           preinc0	equ	0x4EC
  1600                           plusw0	equ	0x4EB
  1601                           fsr0h	equ	0x4EA
  1602                           fsr0l	equ	0x4E9
  1603                           wreg	equ	0x4E8
  1604                           indf1	equ	0x4E7
  1605                           postinc1	equ	0x4E6
  1606                           postdec1	equ	0x4E5
  1607                           preinc1	equ	0x4E4
  1608                           plusw1	equ	0x4E3
  1609                           fsr1h	equ	0x4E2
  1610                           fsr1l	equ	0x4E1
  1611                           bsr	equ	0x4E0
  1612                           indf2	equ	0x4DF
  1613                           postinc2	equ	0x4DE
  1614                           postdec2	equ	0x4DD
  1615                           preinc2	equ	0x4DC
  1616                           plusw2	equ	0x4DB
  1617                           fsr2h	equ	0x4DA
  1618                           fsr2l	equ	0x4D9
  1619                           status	equ	0x4D8

Data Sizes:
    Strings     51
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      7       7
    BANK5           160      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0
    BANK32          256      0       0
    BANK33          256      0       0
    BANK34          256      0       0
    BANK35          256      0       0
    BANK36          256      0       0

Pointer List with Targets:

    ESCRIBE_MENSAJE2@cadena	PTR const unsigned char  size(1) Largest target is 17
		 -> STR_1(CODE[17]), STR_2(CODE[17]), STR_3(CODE[17]), 

    strlen@a	PTR const unsigned char  size(1) Largest target is 17
		 -> STR_1(CODE[17]), STR_2(CODE[17]), STR_3(CODE[17]), 

    strlen@s	PTR const unsigned char  size(1) Largest target is 17
		 -> STR_1(CODE[17]), STR_2(CODE[17]), STR_3(CODE[17]), 


Critical Paths under _main in COMRAM

    _main->_ESCRIBE_MENSAJE2
    _configuro->_LCD_INIT
    _LCD_INIT->_CURSOR_ONOFF
    _LCD_INIT->_LCD_CONFIG
    _LCD_CONFIG->_ENVIA_LCD_CMD
    _CURSOR_ONOFF->_ENVIA_LCD_CMD
    _CURSOR_HOME->_ENVIA_LCD_CMD
    _BORRAR_LCD->_ENVIA_LCD_CMD
    _POS_CURSOR->_ENVIA_LCD_CMD
    _ENVIA_LCD_CMD->_ENVIA_NIBBLE
    _ENVIA_LCD_CMD->_LEER_LCD
    _ESCRIBE_MENSAJE2->_ENVIA_CHAR
    _ESCRIBE_MENSAJE2->_strlen
    _ENVIA_CHAR->_ENVIA_NIBBLE
    _ENVIA_CHAR->_LEER_LCD

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _main in BANK32

    None.

Critical Paths under _main in BANK33

    None.

Critical Paths under _main in BANK34

    None.

Critical Paths under _main in BANK35

    None.

Critical Paths under _main in BANK36

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1677
                   _ESCRIBE_MENSAJE2
                         _POS_CURSOR
                          _configuro
 ---------------------------------------------------------------------------------
 (1) _configuro                                            0     0      0     525
                           _LCD_INIT
 ---------------------------------------------------------------------------------
 (2) _LCD_INIT                                             1     1      0     525
                                              4 COMRAM     1     1      0
                         _BORRAR_LCD
                        _CURSOR_HOME
                       _CURSOR_ONOFF
                         _LCD_CONFIG
 ---------------------------------------------------------------------------------
 (3) _LCD_CONFIG                                           1     1      0     135
                                              3 COMRAM     1     1      0
                      _ENVIA_LCD_CMD
                       _ENVIA_NIBBLE
 ---------------------------------------------------------------------------------
 (3) _CURSOR_ONOFF                                         1     1      0     150
                                              3 COMRAM     1     1      0
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (3) _CURSOR_HOME                                          0     0      0     120
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (3) _BORRAR_LCD                                           0     0      0     120
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (1) _POS_CURSOR                                           2     1      1     524
                                              3 COMRAM     2     1      1
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (4) _ENVIA_LCD_CMD                                        2     2      0     120
                                              1 COMRAM     2     2      0
                       _ENVIA_NIBBLE
                           _LEER_LCD
 ---------------------------------------------------------------------------------
 (1) _ESCRIBE_MENSAJE2                                     4     3      1     628
                                              3 COMRAM     4     3      1
                         _ENVIA_CHAR
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strlen                                               3     1      2     166
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _ENVIA_CHAR                                           2     2      0     120
                                              1 COMRAM     2     2      0
                       _ENVIA_NIBBLE
                           _LEER_LCD
 ---------------------------------------------------------------------------------
 (5) _LEER_LCD                                             1     1      0      45
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _ENVIA_NIBBLE                                         1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ESCRIBE_MENSAJE2
     _ENVIA_CHAR
       _ENVIA_NIBBLE
       _LEER_LCD
     _strlen
   _POS_CURSOR
     _ENVIA_LCD_CMD
       _ENVIA_NIBBLE
       _LEER_LCD
   _configuro
     _LCD_INIT
       _BORRAR_LCD
         _ENVIA_LCD_CMD
       _CURSOR_HOME
         _ENVIA_LCD_CMD
       _CURSOR_ONOFF
         _ENVIA_LCD_CMD
       _LCD_CONFIG
         _ENVIA_LCD_CMD
         _ENVIA_NIBBLE

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             400      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F      7       7       1        7.4%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK5            A0      0       0       4        0.0%
BANK5               A0      0       0       5        0.0%
BITBANK6           100      0       0       6        0.0%
BANK6              100      0       0       7        0.0%
BITBANK7           100      0       0       8        0.0%
BANK7              100      0       0       9        0.0%
BITBANK8           100      0       0      10        0.0%
BANK8              100      0       0      11        0.0%
BITBANK9           100      0       0      12        0.0%
BANK9              100      0       0      13        0.0%
BITBANK10          100      0       0      14        0.0%
BANK10             100      0       0      15        0.0%
BITBANK11          100      0       0      16        0.0%
BANK11             100      0       0      17        0.0%
BITBANK12          100      0       0      18        0.0%
BANK12             100      0       0      19        0.0%
BITBANK13          100      0       0      20        0.0%
BANK13             100      0       0      21        0.0%
BITBANK14          100      0       0      22        0.0%
BANK14             100      0       0      23        0.0%
BITBANK15          100      0       0      24        0.0%
BANK15             100      0       0      25        0.0%
BITBANK16          100      0       0      26        0.0%
BANK16             100      0       0      27        0.0%
BITBANK17          100      0       0      28        0.0%
BANK17             100      0       0      29        0.0%
BITBANK18          100      0       0      30        0.0%
BANK18             100      0       0      31        0.0%
BITBANK19          100      0       0      32        0.0%
BANK19             100      0       0      33        0.0%
BITBANK20          100      0       0      34        0.0%
BANK20             100      0       0      35        0.0%
BITBANK21          100      0       0      36        0.0%
BANK21             100      0       0      37        0.0%
BITBANK22          100      0       0      38        0.0%
BANK22             100      0       0      39        0.0%
BITBANK23          100      0       0      40        0.0%
BANK23             100      0       0      41        0.0%
BITBANK24          100      0       0      42        0.0%
BANK24             100      0       0      43        0.0%
BITBANK25          100      0       0      44        0.0%
BANK25             100      0       0      45        0.0%
BITBANK26          100      0       0      46        0.0%
BANK26             100      0       0      47        0.0%
BITBANK27          100      0       0      48        0.0%
BANK27             100      0       0      49        0.0%
ABS                  0      0       0      50        0.0%
BITBANK28          100      0       0      51        0.0%
BANK28             100      0       0      52        0.0%
BITBANK29          100      0       0      53        0.0%
BANK29             100      0       0      54        0.0%
BITBANK30          100      0       0      55        0.0%
BANK30             100      0       0      56        0.0%
BITBANK31          100      0       0      57        0.0%
BANK31             100      0       0      58        0.0%
BITBANK32          100      0       0      59        0.0%
BANK32             100      0       0      60        0.0%
BITBANK33          100      0       0      61        0.0%
BANK33             100      0       0      62        0.0%
BITBANK34          100      0       0      63        0.0%
BANK34             100      0       0      64        0.0%
BITBANK35          100      0       0      65        0.0%
BANK35             100      0       0      66        0.0%
BITBANK36          100      0       0      67        0.0%
BANK36             100      0       0      68        0.0%
BITBIGSFR_1        100      0       0      69        0.0%
BIGRAM            1FFF      0       0      70        0.0%
BITBIGSFRhhhhhh     2E      0       0      71        0.0%
BITBIGSFRhhhhhl      1      0       0      72        0.0%
BITBIGSFRhhhhlh      5      0       0      73        0.0%
BITBIGSFRhhhhll      1      0       0      74        0.0%
BITBIGSFRhhhlhh      5      0       0      75        0.0%
BITBIGSFRhhhlhh      1      0       0      76        0.0%
BITBIGSFRhhhlhl      D      0       0      77        0.0%
BITBIGSFRhhhlhl     98      0       0      78        0.0%
BITBIGSFRhhhlhl      E      0       0      79        0.0%
BITBIGSFRhhhllh     EC      0       0      80        0.0%
BITBIGSFRhhhlll    265      0       0      81        0.0%
BITBIGSFRhhl         1      0       0      82        0.0%
BITBIGSFRhl          3      0       0      83        0.0%
BITBIGSFRl          AD      0       0      84        0.0%
BIGSFR_1             0      0       0     200        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Tue Sep 26 12:31:56 2023

                      l40 2574                        l33 28A2                        l50 25D2  
                      l42 2582                        l43 258C                        l52 25E0  
                      l45 259A                        l47 25BA                        l49 25C8  
                      l83 2662                        l87 2662                        u10 26D4  
                      u11 26D0                        u20 2858                        u21 2854  
                      u30 286E                        u31 286A             ENVIA_CHAR@aux 0503  
                     l100 28C6                       l132 2844                       l141 28BE  
                     l117 2874                       l150 26D4                       l135 28CE  
                     l144 2810                       l129 276A                       l138 2726  
                     l148 269A                       l158 27A4                       l900 26BC  
                     l910 28B4                       l912 28BC                       l904 26C2  
                     l920 27EA                       l906 28A6                       l930 27FE  
                     l922 27F2                       l914 27E0                       l908 28B2  
                     l932 2804                       l924 27F4                       l916 27E2  
                     l940 2858                       l870 2668                       l934 280A  
                     l926 27F6                       l918 27E6                       l942 285E  
                     l950 26DA                       l880 267A                       l872 266A  
                     l928 27F8                       l936 28C0                       l944 286E  
                     l960 2708                       l952 26E0                       l890 2690  
                     l882 267C                       l874 266C                       l866 27DC  
                     l946 28C8                       l938 2848                       l962 270E  
                     l954 26EE                       l970 276C                       l892 269C  
                     l884 2684                       l876 266E                       l868 2664  
                     l964 2714                       l956 26FC                       l948 26D6  
                     l980 279A                       l972 2776                       l894 26A4  
                     l886 2686                       l878 2676                       l990 281E  
                     l966 271A                       l958 2702                       l982 279E  
                     l974 2784                       l896 26A8                       l888 268E  
                     l992 2826                       l984 2814                       l968 2720  
                     l976 2788                       l898 26B2                       l994 2828  
                     l986 2816                       l978 2796                       l996 282A  
                     l988 281A                       l998 282C                       u300 255A  
                     u301 2556                       u310 2582                       u311 257E  
                     u240 27D0                       u320 259A                       u241 27CC  
                     u321 2596                       u250 25FC                       u330 25C8  
                     u251 25F8                       u331 25C4                       u260 261A  
                     u340 25E0                       u261 2616                       u341 25DC  
                     u270 2638                       u407 2820                       u271 2634  
                     u280 2656                       u417 2670                       u281 2652  
                     u290 276A                       u427 267E                       u291 2766  
                     u437 2688                       u357 277C                       u447 269E  
                     u367 278E                       u457 26AC                       u377 26E6  
                     u467 26B6                       u387 26F6                       u477 28B6  
                     u397 27EC               LEER_LCD@aux 0501                       wreg 04E8  
            ?_CURSOR_HOME 0501            ??_ENVIA_NIBBLE 0501            ENVIA_CHAR@dato 0502  
                    l1000 2832                      l1002 2838                      l1004 283E  
                    l1020 2886                      l1022 288A                      l1200 2608  
                    l1024 288C                      l1016 2876                      l1210 2656  
                    l1202 261A                      l1026 288E                      l1018 2884  
                    l1220 2756                      l1212 2728                      l1204 2626  
                    l1028 289E                      l1222 2758                      l1214 2734  
                    l1206 2638                      l1230 255A                      l1216 2734  
                    l1208 2644                      l1232 2564                      l1240 25A0  
                    l1224 2536                      l1218 273C                      l1242 25AA  
                    l1234 256C                      l1226 2544                      l1244 25B2  
                    l1236 256E                      l1228 254C                      l1190 27B0  
                    l1246 25B4                      l1238 2586                      l1192 27D0  
                    l1248 25CC                      l1186 27A6                      l1188 27AE  
                    l1196 25EC                      l1198 25FC                      STR_1 2523  
                    STR_2 2501                      STR_3 2512                      _LATD 04C1  
                    _main 2536                      start FFFC             ?_CURSOR_ONOFF 0501  
            ___param_bank 0000           ??_ENVIA_LCD_CMD 0502          __end_of_LCD_INIT 27A6  
        __end_of_LEER_LCD 26D6                     ?_main 0501                     _OSCEN 00B3  
                   _TMR0H 0319                     _PORTD 04D1                     _TRISD 04C9  
             ?_POS_CURSOR 0504                     tablat 04F5                     status 04D8  
          ??_CURSOR_ONOFF 0504           __initialization 28D0              __end_of_main 25EA  
                  ??_main 0508             __activetblptr 0003                    _ANSELD 0418  
                  _T0CON0 031A                    _T0CON1 031B                    _OSCFRQ 00B1  
    __end_of_ENVIA_NIBBLE 28C0                    isa$std 0001                    _strlen 27A6  
            __mediumconst 0000                    tblptrh 04F7                    tblptrl 04F6  
                  tblptru 04F8              ??_BORRAR_LCD 0504                 ?_LCD_INIT 0501  
               ?_LEER_LCD 0501                __accesstop 0560   __end_of__initialization 28D0  
            ??_LCD_CONFIG 0504             ___rparam_used 0001              ??_ENVIA_CHAR 0502  
          __pcstackCOMRAM 0501        __end_of_BORRAR_LCD 28D0          _ESCRIBE_MENSAJE2 2728  
        ENVIA_LCD_CMD@aux 0503      __end_of_CURSOR_ONOFF 2876        __end_of_LCD_CONFIG 2728  
      __end_of_ENVIA_CHAR 2846                ??_LCD_INIT 0505                ??_LEER_LCD 0501  
        ENVIA_NIBBLE@dato 0501                   ?_strlen 0501                   _OSCCON1 00AD  
            ??_POS_CURSOR 0505                   __Hparam 0000                   __Lparam 0000  
       __end_of_configuro 28A4              __psmallconst 2500     __end_of_ENVIA_LCD_CMD 2812  
                 __pcinit 28D0        __end_of_POS_CURSOR 2664                   __ramtop 2500  
                 __ptext0 2536                   __ptext1 2876                   __ptext2 276C  
                 __ptext3 26D6                   __ptext4 2846                   __ptext5 28C0  
                 __ptext6 28C8                   __ptext7 25EA                   __ptext8 27DE  
                 __ptext9 2728              _ENVIA_NIBBLE 28A4      end_of_initialization 28D0  
                 strlen@a 0503                   strlen@s 0501                 _PORTBbits 04CF  
       ESCRIBE_MENSAJE2@i 0507                 _TRISBbits 04C7  __end_of_ESCRIBE_MENSAJE2 276C  
            _CURSOR_ONOFF 2846        CURSOR_ONOFF@estado 0504            __end_of_strlen 27DE  
           ??_CURSOR_HOME 0504       start_initialization 28D0         ENVIA_LCD_CMD@dato 0502  
                ??_strlen 0503       __end_of_CURSOR_HOME 28C8                 _configuro 2876  
             __smallconst 2500                  _LCD_INIT 276C                  _LEER_LCD 2664  
                _LATBbits 04BF                  _LATDbits 04C1                  _PIR3bits 04B1  
          POS_CURSOR@fila 0505                ?_configuro 0501    ESCRIBE_MENSAJE2@cadena 0504  
                _WPUBbits 0409               _CURSOR_HOME 28C0                  __Hrparam 0000  
       ?_ESCRIBE_MENSAJE2 0504                  __Lrparam 0000        ??_ESCRIBE_MENSAJE2 0505  
              _ANSELBbits 0408                  __ptext10 27A6                  __ptext11 2812  
                __ptext12 2664                  __ptext13 28A4                _BORRAR_LCD 28C8  
              _LCD_CONFIG 26D6                _ENVIA_CHAR 2812                  isa$xinst 0000  
           _ENVIA_LCD_CMD 27DE               ??_configuro 0506            ?_ENVIA_LCD_CMD 0501  
     ESCRIBE_MENSAJE2@tam 0506               ?_BORRAR_LCD 0501             ?_ENVIA_NIBBLE 0501  
              _POS_CURSOR 25EA               ?_LCD_CONFIG 0501               ?_ENVIA_CHAR 0501  
       POS_CURSOR@columna 0504  
