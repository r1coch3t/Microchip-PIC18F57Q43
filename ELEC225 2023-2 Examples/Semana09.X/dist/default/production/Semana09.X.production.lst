

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Mon Oct 23 11:04:07 2023

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F57Q43
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1
    22                           	psect	text13,global,reloc=2,class=CODE,delta=1
    23                           	psect	text14,global,reloc=2,class=CODE,delta=1
    24                           	psect	text15,global,reloc=2,class=CODE,delta=1
    25                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text17,global,reloc=2,class=CODE,delta=1
    27                           	psect	text18,global,reloc=2,class=CODE,delta=1
    28                           	psect	text19,global,reloc=2,class=CODE,delta=1
    29                           	psect	text20,global,reloc=4,class=CODE,delta=1
    30                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
    31                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    32                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    33                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    34   000000                     
    35                           ; Generated 18/07/2023 GMT
    36                           ; 
    37                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    38                           ; All rights reserved.
    39                           ; 
    40                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    41                           ; 
    42                           ; Redistribution and use in source and binary forms, with or without modification, are
    43                           ; permitted provided that the following conditions are met:
    44                           ; 
    45                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    46                           ;        conditions and the following disclaimer.
    47                           ; 
    48                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    49                           ;        of conditions and the following disclaimer in the documentation and/or other
    50                           ;        materials provided with the distribution. Publication is not required when
    51                           ;        this file is used in an embedded application.
    52                           ; 
    53                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    54                           ;        software without specific prior written permission.
    55                           ; 
    56                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    57                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    58                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    59                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    60                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    61                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    62                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    63                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    64                           ; 
    65                           ; 
    66                           ; Code-generator required, PIC18F57Q43 Definitions
    67                           ; 
    68                           ; SFR Addresses
    69   000000                     _LATD	set	1217
    70   000000                     _OSCCON1	set	173
    71   000000                     _OSCFRQ	set	177
    72   000000                     _OSCEN	set	179
    73   000000                     _RF1PPS	set	554
    74   000000                     _INT0PPS	set	574
    75   000000                     _T2PR	set	803
    76   000000                     _ANSELFbits	set	1064
    77   000000                     _TRISFbits	set	1227
    78   000000                     _PORTD	set	1233
    79   000000                     _INTCON0bits	set	1238
    80   000000                     _PIE1bits	set	1183
    81   000000                     _TRISBbits	set	1223
    82   000000                     _T2CLKCON	set	806
    83   000000                     _T2CON	set	804
    84   000000                     _CCPR1L	set	832
    85   000000                     _CCPR1H	set	833
    86   000000                     _CCP1CON	set	834
    87   000000                     _ANSELBbits	set	1032
    88   000000                     _TRISD	set	1225
    89   000000                     _ANSELD	set	1048
    90   000000                     _WPUBbits	set	1033
    91   000000                     _PIR1bits	set	1199
    92   000000                     _LATDbits	set	1217
    93                           
    94                           	psect	smallconst
    95   002500                     __psmallconst:
    96                           	callstack 0
    97   002500  00                 	db	0
    98   002501                     STR_1:
    99   002501  50                 	db	80	;'P'
   100   002502  57                 	db	87	;'W'
   101   002503  4D                 	db	77	;'M'
   102   002504  20                 	db	32
   103   002505  47                 	db	71	;'G'
   104   002506  65                 	db	101	;'e'
   105   002507  6E                 	db	110	;'n'
   106   002508  65                 	db	101	;'e'
   107   002509  72                 	db	114	;'r'
   108   00250A  61                 	db	97	;'a'
   109   00250B  74                 	db	116	;'t'
   110   00250C  6F                 	db	111	;'o'
   111   00250D  72                 	db	114	;'r'
   112   00250E  00                 	db	0
   113   00250F                     STR_2:
   114   00250F  66                 	db	102	;'f'
   115   002510  3D                 	db	61	;'='
   116   002511  34                 	db	52	;'4'
   117   002512  4B                 	db	75	;'K'
   118   002513  48                 	db	72	;'H'
   119   002514  7A                 	db	122	;'z'
   120   002515  20                 	db	32
   121   002516  44                 	db	68	;'D'
   122   002517  43                 	db	67	;'C'
   123   002518  3D                 	db	61	;'='
   124   002519  00                 	db	0
   125   00251A  00                 	db	0	; dummy byte at the end
   126   000000                     
   127                           ; #config settings
   128                           
   129                           	psect	cinit
   130   003188                     __pcinit:
   131                           	callstack 0
   132   003188                     start_initialization:
   133                           	callstack 0
   134   003188                     __initialization:
   135                           	callstack 0
   136                           
   137                           ; Clear objects allocated to COMRAM (8 bytes)
   138   003188  EE01  F128         	lfsr	0,__pbssCOMRAM
   139   00318C  0E08               	movlw	8
   140   00318E                     clear_0:
   141   00318E  6AEE               	clrf	postinc0,c
   142   003190  06E8               	decf	wreg,f,c
   143   003192  E1FD               	bnz	clear_0
   144                           
   145                           ;
   146                           ; Setup IVTBASE
   147                           ;
   148   003194  0104               	movlb	4
   149   003196  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
   150   003198  6F5D               	movwf	93,b
   151   00319A  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
   152   00319C  6F5E               	movwf	94,b
   153   00319E  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
   154   0031A0  6F5F               	movwf	95,b
   155   0031A2                     end_of_initialization:
   156                           	callstack 0
   157   0031A2                     __end_of__initialization:
   158                           	callstack 0
   159   0031A2  0100               	movlb	0
   160   0031A4  EF62  F016         	goto	_main	;jump to C main() function
   161                           
   162                           	psect	bssCOMRAM
   163   000528                     __pbssCOMRAM:
   164                           	callstack 0
   165   000528                     _temporal:
   166                           	callstack 0
   167   000528                     	ds	4
   168   00052C                     _unidad:
   169                           	callstack 0
   170   00052C                     	ds	1
   171   00052D                     _decena:
   172                           	callstack 0
   173   00052D                     	ds	1
   174   00052E                     _centena:
   175                           	callstack 0
   176   00052E                     	ds	1
   177   00052F                     _duty_cycle:
   178                           	callstack 0
   179   00052F                     	ds	1
   180                           
   181                           	psect	cstackCOMRAM
   182   000501                     __pcstackCOMRAM:
   183                           	callstack 0
   184   000501                     ?_strlen:
   185                           	callstack 0
   186   000501                     ?___awmod:
   187                           	callstack 0
   188   000501                     ?___fltol:
   189                           	callstack 0
   190   000501                     ?___xxtofl:
   191                           	callstack 0
   192   000501                     ENVIA_NIBBLE@dato:
   193                           	callstack 0
   194   000501                     LEER_LCD@aux:
   195                           	callstack 0
   196   000501                     strlen@s:
   197                           	callstack 0
   198   000501                     ___awmod@dividend:
   199                           	callstack 0
   200   000501                     ___fltol@f1:
   201                           	callstack 0
   202   000501                     ___xxtofl@val:
   203                           	callstack 0
   204                           
   205                           ; 4 bytes @ 0x0
   206   000501                     	ds	1
   207   000502                     ENVIA_CHAR@dato:
   208                           	callstack 0
   209   000502                     ENVIA_LCD_CMD@dato:
   210                           	callstack 0
   211                           
   212                           ; 1 bytes @ 0x1
   213   000502                     	ds	1
   214   000503                     ENVIA_CHAR@aux:
   215                           	callstack 0
   216   000503                     ENVIA_LCD_CMD@aux:
   217                           	callstack 0
   218   000503                     strlen@a:
   219                           	callstack 0
   220   000503                     ___awmod@divisor:
   221                           	callstack 0
   222                           
   223                           ; 2 bytes @ 0x2
   224   000503                     	ds	1
   225   000504                     ??_LCD_CONFIG:
   226   000504                     POS_CURSOR@columna:
   227                           	callstack 0
   228   000504                     CURSOR_ONOFF@estado:
   229                           	callstack 0
   230   000504                     ESCRIBE_MENSAJE2@cadena:
   231                           	callstack 0
   232                           
   233                           ; 1 bytes @ 0x3
   234   000504                     	ds	1
   235   000505                     ??_LCD_INIT:
   236   000505                     ??_ESCRIBE_MENSAJE2:
   237   000505                     ??___fltol:
   238   000505                     ??___xxtofl:
   239   000505                     POS_CURSOR@fila:
   240                           	callstack 0
   241   000505                     ___awmod@counter:
   242                           	callstack 0
   243                           
   244                           ; 1 bytes @ 0x4
   245   000505                     	ds	1
   246   000506                     ESCRIBE_MENSAJE2@tam:
   247                           	callstack 0
   248   000506                     ___awmod@sign:
   249                           	callstack 0
   250                           
   251                           ; 1 bytes @ 0x5
   252   000506                     	ds	1
   253   000507                     ?___awdiv:
   254                           	callstack 0
   255   000507                     ESCRIBE_MENSAJE2@i:
   256                           	callstack 0
   257   000507                     ___awdiv@dividend:
   258                           	callstack 0
   259                           
   260                           ; 2 bytes @ 0x6
   261   000507                     	ds	2
   262   000509                     ___fltol@sign1:
   263                           	callstack 0
   264   000509                     ___xxtofl@sign:
   265                           	callstack 0
   266   000509                     ___awdiv@divisor:
   267                           	callstack 0
   268                           
   269                           ; 2 bytes @ 0x8
   270   000509                     	ds	1
   271   00050A                     ___fltol@exp1:
   272                           	callstack 0
   273   00050A                     ___xxtofl@exp:
   274                           	callstack 0
   275                           
   276                           ; 1 bytes @ 0x9
   277   00050A                     	ds	1
   278   00050B                     ___awdiv@counter:
   279                           	callstack 0
   280   00050B                     ___xxtofl@arg:
   281                           	callstack 0
   282                           
   283                           ; 4 bytes @ 0xA
   284   00050B                     	ds	1
   285   00050C                     ___awdiv@sign:
   286                           	callstack 0
   287                           
   288                           ; 1 bytes @ 0xB
   289   00050C                     	ds	1
   290   00050D                     ___awdiv@quotient:
   291                           	callstack 0
   292                           
   293                           ; 2 bytes @ 0xC
   294   00050D                     	ds	2
   295   00050F                     ?___flmul:
   296                           	callstack 0
   297   00050F                     convierte@numero:
   298                           	callstack 0
   299   00050F                     ___flmul@b:
   300                           	callstack 0
   301                           
   302                           ; 4 bytes @ 0xE
   303   00050F                     	ds	4
   304   000513                     ___flmul@a:
   305                           	callstack 0
   306                           
   307                           ; 4 bytes @ 0x12
   308   000513                     	ds	4
   309   000517                     ??___flmul:
   310                           
   311                           ; 1 bytes @ 0x16
   312   000517                     	ds	4
   313   00051B                     ___flmul@sign:
   314                           	callstack 0
   315                           
   316                           ; 1 bytes @ 0x1A
   317   00051B                     	ds	1
   318   00051C                     ___flmul@grs:
   319                           	callstack 0
   320                           
   321                           ; 4 bytes @ 0x1B
   322   00051C                     	ds	4
   323   000520                     ___flmul@aexp:
   324                           	callstack 0
   325                           
   326                           ; 1 bytes @ 0x1F
   327   000520                     	ds	1
   328   000521                     ___flmul@bexp:
   329                           	callstack 0
   330                           
   331                           ; 1 bytes @ 0x20
   332   000521                     	ds	1
   333   000522                     ___flmul@prod:
   334                           	callstack 0
   335                           
   336                           ; 4 bytes @ 0x21
   337   000522                     	ds	4
   338   000526                     ___flmul@temp:
   339                           	callstack 0
   340                           
   341                           ; 2 bytes @ 0x25
   342   000526                     	ds	2
   343   000528                     
   344                           ; 1 bytes @ 0x27
   345 ;;
   346 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   347 ;;
   348 ;; *************** function _main *****************
   349 ;; Defined at:
   350 ;;		line 41 in file "maincode01.c"
   351 ;; Parameters:    Size  Location     Type
   352 ;;		None
   353 ;; Auto vars:     Size  Location     Type
   354 ;;		None
   355 ;; Return value:  Size  Location     Type
   356 ;;                  1    wreg      void 
   357 ;; Registers used:
   358 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   359 ;; Tracked objects:
   360 ;;		On entry : 0/0
   361 ;;		On exit  : 0/0
   362 ;;		Unchanged: 0/0
   363 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   364 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   365 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   366 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   367 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   368 ;;Total ram usage:        0 bytes
   369 ;; Hardware stack levels required when called: 5
   370 ;; This function calls:
   371 ;;		_ENVIA_CHAR
   372 ;;		_ESCRIBE_MENSAJE2
   373 ;;		_LCD_INIT
   374 ;;		_POS_CURSOR
   375 ;;		___flmul
   376 ;;		___fltol
   377 ;;		___xxtofl
   378 ;;		_configuro
   379 ;;		_convierte
   380 ;; This function is called by:
   381 ;;		Startup code after reset
   382 ;; This function uses a non-reentrant model
   383 ;;
   384                           
   385                           	psect	text0
   386   002CC4                     __ptext0:
   387                           	callstack 0
   388   002CC4                     _main:
   389                           	callstack 122
   390   002CC4                     
   391                           ;maincode01.c: 42:     configuro();
   392   002CC4  ECE2  F017         	call	_configuro	;wreg free
   393   002CC8                     
   394                           ;maincode01.c: 43:     LCD_INIT();
   395   002CC8  EC2A  F018         	call	_LCD_INIT	;wreg free
   396   002CCC                     
   397                           ;maincode01.c: 44:     POS_CURSOR(1,0);
   398   002CCC  0E00               	movlw	0
   399   002CCE  6E04               	movwf	POS_CURSOR@columna^(0+1280),c
   400   002CD0  0E01               	movlw	1
   401   002CD2  EC15  F017         	call	_POS_CURSOR
   402   002CD6                     
   403                           ;maincode01.c: 45:     ESCRIBE_MENSAJE2("PWM Generator");
   404   002CD6  0E01               	movlw	low STR_1
   405   002CD8  6E04               	movwf	ESCRIBE_MENSAJE2@cadena^(0+1280),c
   406   002CDA  EC08  F018         	call	_ESCRIBE_MENSAJE2	;wreg free
   407   002CDE                     l1872:
   408                           
   409                           ;maincode01.c: 47:         POS_CURSOR(2,0);
   410   002CDE  0E00               	movlw	0
   411   002CE0  6E04               	movwf	POS_CURSOR@columna^(0+1280),c
   412   002CE2  0E02               	movlw	2
   413   002CE4  EC15  F017         	call	_POS_CURSOR
   414   002CE8                     
   415                           ;maincode01.c: 48:         ESCRIBE_MENSAJE2("f=4KHz DC=");
   416   002CE8  0E0F               	movlw	low STR_2
   417   002CEA  6E04               	movwf	ESCRIBE_MENSAJE2@cadena^(0+1280),c
   418   002CEC  EC08  F018         	call	_ESCRIBE_MENSAJE2	;wreg free
   419   002CF0                     
   420                           ;maincode01.c: 49:         convierte(duty_cycle);
   421   002CF0  502F               	movf	_duty_cycle^(0+1280),w,c
   422   002CF2  EC8B  F017         	call	_convierte
   423   002CF6                     
   424                           ;maincode01.c: 50:         ENVIA_CHAR(centena+0x30);
   425   002CF6  502E               	movf	_centena^(0+1280),w,c
   426   002CF8  0F30               	addlw	48
   427   002CFA  EC7F  F018         	call	_ENVIA_CHAR
   428   002CFE                     
   429                           ;maincode01.c: 51:         ENVIA_CHAR(decena+0x30);
   430   002CFE  502D               	movf	_decena^(0+1280),w,c
   431   002D00  0F30               	addlw	48
   432   002D02  EC7F  F018         	call	_ENVIA_CHAR
   433   002D06                     
   434                           ;maincode01.c: 52:         ENVIA_CHAR(unidad+0x30);
   435   002D06  502C               	movf	_unidad^(0+1280),w,c
   436   002D08  0F30               	addlw	48
   437   002D0A  EC7F  F018         	call	_ENVIA_CHAR
   438   002D0E                     
   439                           ;maincode01.c: 53:         ENVIA_CHAR('%');
   440   002D0E  0E25               	movlw	37
   441   002D10  EC7F  F018         	call	_ENVIA_CHAR
   442   002D14                     
   443                           ;maincode01.c: 54:         temporal = duty_cycle * 2.5;
   444   002D14  502F               	movf	_duty_cycle^(0+1280),w,c
   445   002D16  6E01               	movwf	___xxtofl@val^(0+1280),c
   446   002D18  6A02               	clrf	(___xxtofl@val+1)^(0+1280),c
   447   002D1A  6A03               	clrf	(___xxtofl@val+2)^(0+1280),c
   448   002D1C  6A04               	clrf	(___xxtofl@val+3)^(0+1280),c
   449   002D1E  0E01               	movlw	1
   450   002D20  ECA3  F014         	call	___xxtofl
   451   002D24  C501  F50F         	movff	?___xxtofl,___flmul@b
   452   002D28  C502  F510         	movff	?___xxtofl+1,___flmul@b+1
   453   002D2C  C503  F511         	movff	?___xxtofl+2,___flmul@b+2
   454   002D30  C504  F512         	movff	?___xxtofl+3,___flmul@b+3
   455   002D34  0E00               	movlw	0
   456   002D36  6E13               	movwf	___flmul@a^(0+1280),c
   457   002D38  0E00               	movlw	0
   458   002D3A  6E14               	movwf	(___flmul@a+1)^(0+1280),c
   459   002D3C  0E20               	movlw	32
   460   002D3E  6E15               	movwf	(___flmul@a+2)^(0+1280),c
   461   002D40  0E40               	movlw	64
   462   002D42  6E16               	movwf	(___flmul@a+3)^(0+1280),c
   463   002D44  EC8E  F012         	call	___flmul	;wreg free
   464   002D48  C50F  F528         	movff	?___flmul,_temporal
   465   002D4C  C510  F529         	movff	?___flmul+1,_temporal+1
   466   002D50  C511  F52A         	movff	?___flmul+2,_temporal+2
   467   002D54  C512  F52B         	movff	?___flmul+3,_temporal+3
   468   002D58                     
   469                           ;maincode01.c: 55:         CCPR1H = temporal;
   470   002D58  C528  F501         	movff	_temporal,___fltol@f1
   471   002D5C  C529  F502         	movff	_temporal+1,___fltol@f1+1
   472   002D60  C52A  F503         	movff	_temporal+2,___fltol@f1+2
   473   002D64  C52B  F504         	movff	_temporal+3,___fltol@f1+3
   474   002D68  EC7D  F015         	call	___fltol	;wreg free
   475   002D6C  5001               	movf	?___fltol^(0+1280),w,c
   476   002D6E  0103               	movlb	3	; () banked
   477   002D70  6F41               	movwf	65,b	;volatile
   478   002D72  EF6F  F016         	goto	l1872
   479   002D76  EF81  F000         	goto	start
   480   002D7A                     __end_of_main:
   481                           	callstack 0
   482                           
   483 ;; *************** function _convierte *****************
   484 ;; Defined at:
   485 ;;		line 36 in file "maincode01.c"
   486 ;; Parameters:    Size  Location     Type
   487 ;;  numero          1    wreg     unsigned char 
   488 ;; Auto vars:     Size  Location     Type
   489 ;;  numero          1   14[COMRAM] unsigned char 
   490 ;; Return value:  Size  Location     Type
   491 ;;                  1    wreg      void 
   492 ;; Registers used:
   493 ;;		wreg, status,2, status,0, cstack
   494 ;; Tracked objects:
   495 ;;		On entry : 0/0
   496 ;;		On exit  : 0/0
   497 ;;		Unchanged: 0/0
   498 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   499 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   500 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   501 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   502 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   503 ;;Total ram usage:        1 bytes
   504 ;; Hardware stack levels used: 1
   505 ;; Hardware stack levels required when called: 2
   506 ;; This function calls:
   507 ;;		___awdiv
   508 ;;		___awmod
   509 ;; This function is called by:
   510 ;;		_main
   511 ;; This function uses a non-reentrant model
   512 ;;
   513                           
   514                           	psect	text1
   515   002F16                     __ptext1:
   516                           	callstack 0
   517   002F16                     _convierte:
   518                           	callstack 124
   519                           
   520                           ; BSR set to: 3
   521                           ;incstack = 0
   522                           ;convierte@numero stored from wreg
   523   002F16  6E0F               	movwf	convierte@numero^(0+1280),c
   524   002F18                     
   525                           ;maincode01.c: 37:     centena = numero / 100;
   526   002F18  C50F  F507         	movff	convierte@numero,___awdiv@dividend
   527   002F1C  6A08               	clrf	(___awdiv@dividend+1)^(0+1280),c
   528   002F1E  0E00               	movlw	0
   529   002F20  6E0A               	movwf	(___awdiv@divisor+1)^(0+1280),c
   530   002F22  0E64               	movlw	100
   531   002F24  6E09               	movwf	___awdiv@divisor^(0+1280),c
   532   002F26  EC00  F016         	call	___awdiv	;wreg free
   533   002F2A  5007               	movf	?___awdiv^(0+1280),w,c
   534   002F2C  6E2E               	movwf	_centena^(0+1280),c
   535                           
   536                           ;maincode01.c: 38:     decena = (numero % 100) / 10;
   537   002F2E  0E00               	movlw	0
   538   002F30  6E04               	movwf	(___awmod@divisor+1)^(0+1280),c
   539   002F32  0E64               	movlw	100
   540   002F34  6E03               	movwf	___awmod@divisor^(0+1280),c
   541   002F36  C50F  F501         	movff	convierte@numero,___awmod@dividend
   542   002F3A  6A02               	clrf	(___awmod@dividend+1)^(0+1280),c
   543   002F3C  ECBD  F016         	call	___awmod	;wreg free
   544   002F40  C501  F507         	movff	?___awmod,___awdiv@dividend
   545   002F44  C502  F508         	movff	?___awmod+1,___awdiv@dividend+1
   546   002F48  0E00               	movlw	0
   547   002F4A  6E0A               	movwf	(___awdiv@divisor+1)^(0+1280),c
   548   002F4C  0E0A               	movlw	10
   549   002F4E  6E09               	movwf	___awdiv@divisor^(0+1280),c
   550   002F50  EC00  F016         	call	___awdiv	;wreg free
   551   002F54  5007               	movf	?___awdiv^(0+1280),w,c
   552   002F56  6E2D               	movwf	_decena^(0+1280),c
   553                           
   554                           ;maincode01.c: 39:     unidad = numero % 10;
   555   002F58  C50F  F501         	movff	convierte@numero,___awmod@dividend
   556   002F5C  6A02               	clrf	(___awmod@dividend+1)^(0+1280),c
   557   002F5E  0E00               	movlw	0
   558   002F60  6E04               	movwf	(___awmod@divisor+1)^(0+1280),c
   559   002F62  0E0A               	movlw	10
   560   002F64  6E03               	movwf	___awmod@divisor^(0+1280),c
   561   002F66  ECBD  F016         	call	___awmod	;wreg free
   562   002F6A  5001               	movf	?___awmod^(0+1280),w,c
   563   002F6C  6E2C               	movwf	_unidad^(0+1280),c
   564   002F6E  0012               	return		;funcret
   565   002F70                     __end_of_convierte:
   566                           	callstack 0
   567                           
   568 ;; *************** function ___awmod *****************
   569 ;; Defined at:
   570 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awmod.c"
   571 ;; Parameters:    Size  Location     Type
   572 ;;  dividend        2    0[COMRAM] int 
   573 ;;  divisor         2    2[COMRAM] int 
   574 ;; Auto vars:     Size  Location     Type
   575 ;;  sign            1    5[COMRAM] unsigned char 
   576 ;;  counter         1    4[COMRAM] unsigned char 
   577 ;; Return value:  Size  Location     Type
   578 ;;                  2    0[COMRAM] int 
   579 ;; Registers used:
   580 ;;		wreg, status,2, status,0
   581 ;; Tracked objects:
   582 ;;		On entry : 0/0
   583 ;;		On exit  : 0/0
   584 ;;		Unchanged: 0/0
   585 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   586 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   587 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   588 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   589 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   590 ;;Total ram usage:        6 bytes
   591 ;; Hardware stack levels used: 1
   592 ;; Hardware stack levels required when called: 1
   593 ;; This function calls:
   594 ;;		Nothing
   595 ;; This function is called by:
   596 ;;		_convierte
   597 ;;		_LCD_ESCRIBE_VAR_CHAR
   598 ;; This function uses a non-reentrant model
   599 ;;
   600                           
   601                           	psect	text2
   602   002D7A                     __ptext2:
   603                           	callstack 0
   604   002D7A                     ___awmod:
   605                           	callstack 124
   606   002D7A  0E00               	movlw	0
   607   002D7C  6E06               	movwf	___awmod@sign^(0+1280),c
   608   002D7E  BE02               	btfsc	(___awmod@dividend+1)^(0+1280),7,c
   609   002D80  EFC6  F016         	goto	u750
   610   002D84  EFC4  F016         	goto	u751
   611   002D88                     u751:
   612   002D88  EFCC  F016         	goto	l1586
   613   002D8C                     u750:
   614   002D8C  6C01               	negf	___awmod@dividend^(0+1280),c
   615   002D8E  1E02               	comf	(___awmod@dividend+1)^(0+1280),f,c
   616   002D90  B0D8               	btfsc	status,0,c
   617   002D92  2A02               	incf	(___awmod@dividend+1)^(0+1280),f,c
   618   002D94  0E01               	movlw	1
   619   002D96  6E06               	movwf	___awmod@sign^(0+1280),c
   620   002D98                     l1586:
   621   002D98  BE04               	btfsc	(___awmod@divisor+1)^(0+1280),7,c
   622   002D9A  EFD3  F016         	goto	u760
   623   002D9E  EFD1  F016         	goto	u761
   624   002DA2                     u761:
   625   002DA2  EFD7  F016         	goto	l1590
   626   002DA6                     u760:
   627   002DA6  6C03               	negf	___awmod@divisor^(0+1280),c
   628   002DA8  1E04               	comf	(___awmod@divisor+1)^(0+1280),f,c
   629   002DAA  B0D8               	btfsc	status,0,c
   630   002DAC  2A04               	incf	(___awmod@divisor+1)^(0+1280),f,c
   631   002DAE                     l1590:
   632   002DAE  5003               	movf	___awmod@divisor^(0+1280),w,c
   633   002DB0  1004               	iorwf	(___awmod@divisor+1)^(0+1280),w,c
   634   002DB2  B4D8               	btfsc	status,2,c
   635   002DB4  EFDE  F016         	goto	u771
   636   002DB8  EFE0  F016         	goto	u770
   637   002DBC                     u771:
   638   002DBC  EF04  F017         	goto	l1606
   639   002DC0                     u770:
   640   002DC0  0E01               	movlw	1
   641   002DC2  6E05               	movwf	___awmod@counter^(0+1280),c
   642   002DC4  EFE8  F016         	goto	l1596
   643   002DC8                     l1594:
   644   002DC8  90D8               	bcf	status,0,c
   645   002DCA  3603               	rlcf	___awmod@divisor^(0+1280),f,c
   646   002DCC  3604               	rlcf	(___awmod@divisor+1)^(0+1280),f,c
   647   002DCE  2A05               	incf	___awmod@counter^(0+1280),f,c
   648   002DD0                     l1596:
   649   002DD0  AE04               	btfss	(___awmod@divisor+1)^(0+1280),7,c
   650   002DD2  EFED  F016         	goto	u781
   651   002DD6  EFEF  F016         	goto	u780
   652   002DDA                     u781:
   653   002DDA  EFE4  F016         	goto	l1594
   654   002DDE                     u780:
   655   002DDE                     l1598:
   656   002DDE  5003               	movf	___awmod@divisor^(0+1280),w,c
   657   002DE0  5C01               	subwf	___awmod@dividend^(0+1280),w,c
   658   002DE2  5004               	movf	(___awmod@divisor+1)^(0+1280),w,c
   659   002DE4  5802               	subwfb	(___awmod@dividend+1)^(0+1280),w,c
   660   002DE6  A0D8               	btfss	status,0,c
   661   002DE8  EFF8  F016         	goto	u791
   662   002DEC  EFFA  F016         	goto	u790
   663   002DF0                     u791:
   664   002DF0  EFFE  F016         	goto	l1602
   665   002DF4                     u790:
   666   002DF4  5003               	movf	___awmod@divisor^(0+1280),w,c
   667   002DF6  5E01               	subwf	___awmod@dividend^(0+1280),f,c
   668   002DF8  5004               	movf	(___awmod@divisor+1)^(0+1280),w,c
   669   002DFA  5A02               	subwfb	(___awmod@dividend+1)^(0+1280),f,c
   670   002DFC                     l1602:
   671   002DFC  90D8               	bcf	status,0,c
   672   002DFE  3204               	rrcf	(___awmod@divisor+1)^(0+1280),f,c
   673   002E00  3203               	rrcf	___awmod@divisor^(0+1280),f,c
   674   002E02  2E05               	decfsz	___awmod@counter^(0+1280),f,c
   675   002E04  EFEF  F016         	goto	l1598
   676   002E08                     l1606:
   677   002E08  5006               	movf	___awmod@sign^(0+1280),w,c
   678   002E0A  B4D8               	btfsc	status,2,c
   679   002E0C  EF0A  F017         	goto	u801
   680   002E10  EF0C  F017         	goto	u800
   681   002E14                     u801:
   682   002E14  EF10  F017         	goto	l1610
   683   002E18                     u800:
   684   002E18  6C01               	negf	___awmod@dividend^(0+1280),c
   685   002E1A  1E02               	comf	(___awmod@dividend+1)^(0+1280),f,c
   686   002E1C  B0D8               	btfsc	status,0,c
   687   002E1E  2A02               	incf	(___awmod@dividend+1)^(0+1280),f,c
   688   002E20                     l1610:
   689   002E20  C501  F501         	movff	___awmod@dividend,?___awmod
   690   002E24  C502  F502         	movff	___awmod@dividend+1,?___awmod+1
   691   002E28  0012               	return		;funcret
   692   002E2A                     __end_of___awmod:
   693                           	callstack 0
   694                           
   695 ;; *************** function ___awdiv *****************
   696 ;; Defined at:
   697 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awdiv.c"
   698 ;; Parameters:    Size  Location     Type
   699 ;;  dividend        2    6[COMRAM] int 
   700 ;;  divisor         2    8[COMRAM] int 
   701 ;; Auto vars:     Size  Location     Type
   702 ;;  quotient        2   12[COMRAM] int 
   703 ;;  sign            1   11[COMRAM] unsigned char 
   704 ;;  counter         1   10[COMRAM] unsigned char 
   705 ;; Return value:  Size  Location     Type
   706 ;;                  2    6[COMRAM] int 
   707 ;; Registers used:
   708 ;;		wreg, status,2, status,0
   709 ;; Tracked objects:
   710 ;;		On entry : 0/0
   711 ;;		On exit  : 0/0
   712 ;;		Unchanged: 0/0
   713 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   714 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   715 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   716 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   717 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   718 ;;Total ram usage:        8 bytes
   719 ;; Hardware stack levels used: 1
   720 ;; Hardware stack levels required when called: 1
   721 ;; This function calls:
   722 ;;		Nothing
   723 ;; This function is called by:
   724 ;;		_convierte
   725 ;;		_LCD_ESCRIBE_VAR_CHAR
   726 ;; This function uses a non-reentrant model
   727 ;;
   728                           
   729                           	psect	text3
   730   002C00                     __ptext3:
   731                           	callstack 0
   732   002C00                     ___awdiv:
   733                           	callstack 124
   734   002C00  0E00               	movlw	0
   735   002C02  6E0C               	movwf	___awdiv@sign^(0+1280),c
   736   002C04  BE0A               	btfsc	(___awdiv@divisor+1)^(0+1280),7,c
   737   002C06  EF09  F016         	goto	u690
   738   002C0A  EF07  F016         	goto	u691
   739   002C0E                     u691:
   740   002C0E  EF0F  F016         	goto	l1542
   741   002C12                     u690:
   742   002C12  6C09               	negf	___awdiv@divisor^(0+1280),c
   743   002C14  1E0A               	comf	(___awdiv@divisor+1)^(0+1280),f,c
   744   002C16  B0D8               	btfsc	status,0,c
   745   002C18  2A0A               	incf	(___awdiv@divisor+1)^(0+1280),f,c
   746   002C1A  0E01               	movlw	1
   747   002C1C  6E0C               	movwf	___awdiv@sign^(0+1280),c
   748   002C1E                     l1542:
   749   002C1E  BE08               	btfsc	(___awdiv@dividend+1)^(0+1280),7,c
   750   002C20  EF16  F016         	goto	u700
   751   002C24  EF14  F016         	goto	u701
   752   002C28                     u701:
   753   002C28  EF1C  F016         	goto	l1548
   754   002C2C                     u700:
   755   002C2C  6C07               	negf	___awdiv@dividend^(0+1280),c
   756   002C2E  1E08               	comf	(___awdiv@dividend+1)^(0+1280),f,c
   757   002C30  B0D8               	btfsc	status,0,c
   758   002C32  2A08               	incf	(___awdiv@dividend+1)^(0+1280),f,c
   759   002C34  0E01               	movlw	1
   760   002C36  1A0C               	xorwf	___awdiv@sign^(0+1280),f,c
   761   002C38                     l1548:
   762   002C38  0E00               	movlw	0
   763   002C3A  6E0E               	movwf	(___awdiv@quotient+1)^(0+1280),c
   764   002C3C  0E00               	movlw	0
   765   002C3E  6E0D               	movwf	___awdiv@quotient^(0+1280),c
   766   002C40  5009               	movf	___awdiv@divisor^(0+1280),w,c
   767   002C42  100A               	iorwf	(___awdiv@divisor+1)^(0+1280),w,c
   768   002C44  B4D8               	btfsc	status,2,c
   769   002C46  EF27  F016         	goto	u711
   770   002C4A  EF29  F016         	goto	u710
   771   002C4E                     u711:
   772   002C4E  EF51  F016         	goto	l1570
   773   002C52                     u710:
   774   002C52  0E01               	movlw	1
   775   002C54  6E0B               	movwf	___awdiv@counter^(0+1280),c
   776   002C56  EF31  F016         	goto	l1556
   777   002C5A                     l1554:
   778   002C5A  90D8               	bcf	status,0,c
   779   002C5C  3609               	rlcf	___awdiv@divisor^(0+1280),f,c
   780   002C5E  360A               	rlcf	(___awdiv@divisor+1)^(0+1280),f,c
   781   002C60  2A0B               	incf	___awdiv@counter^(0+1280),f,c
   782   002C62                     l1556:
   783   002C62  AE0A               	btfss	(___awdiv@divisor+1)^(0+1280),7,c
   784   002C64  EF36  F016         	goto	u721
   785   002C68  EF38  F016         	goto	u720
   786   002C6C                     u721:
   787   002C6C  EF2D  F016         	goto	l1554
   788   002C70                     u720:
   789   002C70                     l1558:
   790   002C70  90D8               	bcf	status,0,c
   791   002C72  360D               	rlcf	___awdiv@quotient^(0+1280),f,c
   792   002C74  360E               	rlcf	(___awdiv@quotient+1)^(0+1280),f,c
   793   002C76  5009               	movf	___awdiv@divisor^(0+1280),w,c
   794   002C78  5C07               	subwf	___awdiv@dividend^(0+1280),w,c
   795   002C7A  500A               	movf	(___awdiv@divisor+1)^(0+1280),w,c
   796   002C7C  5808               	subwfb	(___awdiv@dividend+1)^(0+1280),w,c
   797   002C7E  A0D8               	btfss	status,0,c
   798   002C80  EF44  F016         	goto	u731
   799   002C84  EF46  F016         	goto	u730
   800   002C88                     u731:
   801   002C88  EF4B  F016         	goto	l1566
   802   002C8C                     u730:
   803   002C8C  5009               	movf	___awdiv@divisor^(0+1280),w,c
   804   002C8E  5E07               	subwf	___awdiv@dividend^(0+1280),f,c
   805   002C90  500A               	movf	(___awdiv@divisor+1)^(0+1280),w,c
   806   002C92  5A08               	subwfb	(___awdiv@dividend+1)^(0+1280),f,c
   807   002C94  800D               	bsf	___awdiv@quotient^(0+1280),0,c
   808   002C96                     l1566:
   809   002C96  90D8               	bcf	status,0,c
   810   002C98  320A               	rrcf	(___awdiv@divisor+1)^(0+1280),f,c
   811   002C9A  3209               	rrcf	___awdiv@divisor^(0+1280),f,c
   812   002C9C  2E0B               	decfsz	___awdiv@counter^(0+1280),f,c
   813   002C9E  EF38  F016         	goto	l1558
   814   002CA2                     l1570:
   815   002CA2  500C               	movf	___awdiv@sign^(0+1280),w,c
   816   002CA4  B4D8               	btfsc	status,2,c
   817   002CA6  EF57  F016         	goto	u741
   818   002CAA  EF59  F016         	goto	u740
   819   002CAE                     u741:
   820   002CAE  EF5D  F016         	goto	l1574
   821   002CB2                     u740:
   822   002CB2  6C0D               	negf	___awdiv@quotient^(0+1280),c
   823   002CB4  1E0E               	comf	(___awdiv@quotient+1)^(0+1280),f,c
   824   002CB6  B0D8               	btfsc	status,0,c
   825   002CB8  2A0E               	incf	(___awdiv@quotient+1)^(0+1280),f,c
   826   002CBA                     l1574:
   827   002CBA  C50D  F507         	movff	___awdiv@quotient,?___awdiv
   828   002CBE  C50E  F508         	movff	___awdiv@quotient+1,?___awdiv+1
   829   002CC2  0012               	return		;funcret
   830   002CC4                     __end_of___awdiv:
   831                           	callstack 0
   832                           
   833 ;; *************** function _configuro *****************
   834 ;; Defined at:
   835 ;;		line 10 in file "maincode01.c"
   836 ;; Parameters:    Size  Location     Type
   837 ;;		None
   838 ;; Auto vars:     Size  Location     Type
   839 ;;		None
   840 ;; Return value:  Size  Location     Type
   841 ;;                  1    wreg      void 
   842 ;; Registers used:
   843 ;;		wreg, status,2
   844 ;; Tracked objects:
   845 ;;		On entry : 0/0
   846 ;;		On exit  : 0/0
   847 ;;		Unchanged: 0/0
   848 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   849 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   850 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   851 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   852 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   853 ;;Total ram usage:        0 bytes
   854 ;; Hardware stack levels used: 1
   855 ;; Hardware stack levels required when called: 1
   856 ;; This function calls:
   857 ;;		Nothing
   858 ;; This function is called by:
   859 ;;		_main
   860 ;; This function uses a non-reentrant model
   861 ;;
   862                           
   863                           	psect	text4
   864   002FC4                     __ptext4:
   865                           	callstack 0
   866   002FC4                     _configuro:
   867                           	callstack 125
   868   002FC4                     
   869                           ;maincode01.c: 12:     OSCCON1 = 0x60;
   870   002FC4  0E60               	movlw	96
   871   002FC6  0100               	movlb	0	; () banked
   872   002FC8  6FAD               	movwf	173,b	;volatile
   873                           
   874                           ;maincode01.c: 13:     OSCFRQ = 0x05;
   875   002FCA  0E05               	movlw	5
   876   002FCC  6FB1               	movwf	177,b	;volatile
   877                           
   878                           ;maincode01.c: 14:     OSCEN = 0x40;
   879   002FCE  0E40               	movlw	64
   880   002FD0  6FB3               	movwf	179,b	;volatile
   881                           
   882                           ;maincode01.c: 15:     RF1PPS = 0x15;
   883   002FD2  0E15               	movlw	21
   884   002FD4  0102               	movlb	2	; () banked
   885   002FD6  6F2A               	movwf	42,b	;volatile
   886   002FD8                     
   887                           ; BSR set to: 2
   888                           ;maincode01.c: 17:     TRISFbits.TRISF1 = 0;
   889   002FD8  92CB               	bcf	203,1,c	;volatile
   890   002FDA                     
   891                           ; BSR set to: 2
   892                           ;maincode01.c: 18:     ANSELFbits.ANSELF1 = 0;
   893   002FDA  0104               	movlb	4	; () banked
   894   002FDC  9328               	bcf	40,1,b	;volatile
   895                           
   896                           ;maincode01.c: 19:     T2PR = 250;
   897   002FDE  0EFA               	movlw	250
   898   002FE0  0103               	movlb	3	; () banked
   899   002FE2  6F23               	movwf	35,b	;volatile
   900                           
   901                           ;maincode01.c: 20:     CCP1CON = 0x9C;
   902   002FE4  0E9C               	movlw	156
   903   002FE6  6F42               	movwf	66,b	;volatile
   904                           
   905                           ;maincode01.c: 21:     CCPR1H = 125;
   906   002FE8  0E7D               	movlw	125
   907   002FEA  6F41               	movwf	65,b	;volatile
   908                           
   909                           ;maincode01.c: 22:     CCPR1L = 0;
   910   002FEC  0E00               	movlw	0
   911   002FEE  6F40               	movwf	64,b	;volatile
   912                           
   913                           ;maincode01.c: 23:     T2CON = 0xA0;
   914   002FF0  0EA0               	movlw	160
   915   002FF2  6F24               	movwf	36,b	;volatile
   916                           
   917                           ;maincode01.c: 24:     T2CLKCON = 0x01;
   918   002FF4  0E01               	movlw	1
   919   002FF6  6F26               	movwf	38,b	;volatile
   920   002FF8                     
   921                           ; BSR set to: 3
   922                           ;maincode01.c: 26:     TRISBbits.TRISB4 = 1;
   923   002FF8  88C7               	bsf	199,4,c	;volatile
   924   002FFA                     
   925                           ; BSR set to: 3
   926                           ;maincode01.c: 27:     ANSELBbits.ANSELB4 = 0;
   927   002FFA  0104               	movlb	4	; () banked
   928   002FFC  9908               	bcf	8,4,b	;volatile
   929   002FFE                     
   930                           ; BSR set to: 4
   931                           ;maincode01.c: 28:     WPUBbits.WPUB4 = 1;
   932   002FFE  8909               	bsf	9,4,b	;volatile
   933                           
   934                           ;maincode01.c: 29:     INT0PPS = 0x0C;
   935   003000  0E0C               	movlw	12
   936   003002  0102               	movlb	2	; () banked
   937   003004  6F3E               	movwf	62,b	;volatile
   938   003006                     
   939                           ; BSR set to: 2
   940                           ;maincode01.c: 30:     INTCON0bits.INT0EDG = 0;
   941   003006  90D6               	bcf	214,0,c	;volatile
   942   003008                     
   943                           ; BSR set to: 2
   944                           ;maincode01.c: 31:     PIE1bits.INT0IE = 1;
   945   003008  809F               	bsf	159,0,c	;volatile
   946   00300A                     
   947                           ; BSR set to: 2
   948                           ;maincode01.c: 32:     PIR1bits.INT0IF = 0;
   949   00300A  90AF               	bcf	175,0,c	;volatile
   950   00300C                     
   951                           ; BSR set to: 2
   952                           ;maincode01.c: 33:     INTCON0bits.GIE = 1;
   953   00300C  8ED6               	bsf	214,7,c	;volatile
   954   00300E                     
   955                           ; BSR set to: 2
   956   00300E  0012               	return		;funcret
   957   003010                     __end_of_configuro:
   958                           	callstack 0
   959                           
   960 ;; *************** function ___xxtofl *****************
   961 ;; Defined at:
   962 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\xxtofl.c"
   963 ;; Parameters:    Size  Location     Type
   964 ;;  sign            1    wreg     unsigned char 
   965 ;;  val             4    0[COMRAM] long 
   966 ;; Auto vars:     Size  Location     Type
   967 ;;  sign            1    8[COMRAM] unsigned char 
   968 ;;  arg             4   10[COMRAM] unsigned long 
   969 ;;  exp             1    9[COMRAM] unsigned char 
   970 ;; Return value:  Size  Location     Type
   971 ;;                  4    0[COMRAM] unsigned char 
   972 ;; Registers used:
   973 ;;		wreg, status,2, status,0
   974 ;; Tracked objects:
   975 ;;		On entry : 0/0
   976 ;;		On exit  : 0/0
   977 ;;		Unchanged: 0/0
   978 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   979 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   980 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   981 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   982 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   983 ;;Total ram usage:       14 bytes
   984 ;; Hardware stack levels used: 1
   985 ;; Hardware stack levels required when called: 1
   986 ;; This function calls:
   987 ;;		Nothing
   988 ;; This function is called by:
   989 ;;		_main
   990 ;; This function uses a non-reentrant model
   991 ;;
   992                           
   993                           	psect	text5
   994   002946                     __ptext5:
   995                           	callstack 0
   996   002946                     ___xxtofl:
   997                           	callstack 125
   998                           
   999                           ; BSR set to: 2
  1000                           ;incstack = 0
  1001                           ;___xxtofl@sign stored from wreg
  1002   002946  6E09               	movwf	___xxtofl@sign^(0+1280),c
  1003   002948  5009               	movf	___xxtofl@sign^(0+1280),w,c
  1004   00294A  B4D8               	btfsc	status,2,c
  1005   00294C  EFAA  F014         	goto	u1121
  1006   002950  EFAC  F014         	goto	u1120
  1007   002954                     u1121:
  1008   002954  EFCE  F014         	goto	l866
  1009   002958                     u1120:
  1010   002958  BE04               	btfsc	(___xxtofl@val+3)^(0+1280),7,c
  1011   00295A  EFB3  F014         	goto	u1130
  1012   00295E  EFB1  F014         	goto	u1131
  1013   002962                     u1131:
  1014   002962  EFCE  F014         	goto	l866
  1015   002966                     u1130:
  1016   002966  C501  F505         	movff	___xxtofl@val,??___xxtofl
  1017   00296A  C502  F506         	movff	___xxtofl@val+1,??___xxtofl+1
  1018   00296E  C503  F507         	movff	___xxtofl@val+2,??___xxtofl+2
  1019   002972  C504  F508         	movff	___xxtofl@val+3,??___xxtofl+3
  1020   002976  1E05               	comf	??___xxtofl^(0+1280),f,c
  1021   002978  1E06               	comf	(??___xxtofl+1)^(0+1280),f,c
  1022   00297A  1E07               	comf	(??___xxtofl+2)^(0+1280),f,c
  1023   00297C  1E08               	comf	(??___xxtofl+3)^(0+1280),f,c
  1024   00297E  2A05               	incf	??___xxtofl^(0+1280),f,c
  1025   002980  0E00               	movlw	0
  1026   002982  2206               	addwfc	(??___xxtofl+1)^(0+1280),f,c
  1027   002984  2207               	addwfc	(??___xxtofl+2)^(0+1280),f,c
  1028   002986  2208               	addwfc	(??___xxtofl+3)^(0+1280),f,c
  1029   002988  C505  F50B         	movff	??___xxtofl,___xxtofl@arg
  1030   00298C  C506  F50C         	movff	??___xxtofl+1,___xxtofl@arg+1
  1031   002990  C507  F50D         	movff	??___xxtofl+2,___xxtofl@arg+2
  1032   002994  C508  F50E         	movff	??___xxtofl+3,___xxtofl@arg+3
  1033   002998  EFD6  F014         	goto	l1824
  1034   00299C                     l866:
  1035   00299C  C501  F50B         	movff	___xxtofl@val,___xxtofl@arg
  1036   0029A0  C502  F50C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  1037   0029A4  C503  F50D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  1038   0029A8  C504  F50E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  1039   0029AC                     l1824:
  1040   0029AC  5001               	movf	___xxtofl@val^(0+1280),w,c
  1041   0029AE  1002               	iorwf	(___xxtofl@val+1)^(0+1280),w,c
  1042   0029B0  1003               	iorwf	(___xxtofl@val+2)^(0+1280),w,c
  1043   0029B2  1004               	iorwf	(___xxtofl@val+3)^(0+1280),w,c
  1044   0029B4  A4D8               	btfss	status,2,c
  1045   0029B6  EFDF  F014         	goto	u1141
  1046   0029BA  EFE1  F014         	goto	u1140
  1047   0029BE                     u1141:
  1048   0029BE  EFEB  F014         	goto	l1830
  1049   0029C2                     u1140:
  1050   0029C2  0E00               	movlw	0
  1051   0029C4  6E01               	movwf	?___xxtofl^(0+1280),c
  1052   0029C6  0E00               	movlw	0
  1053   0029C8  6E02               	movwf	(?___xxtofl+1)^(0+1280),c
  1054   0029CA  0E00               	movlw	0
  1055   0029CC  6E03               	movwf	(?___xxtofl+2)^(0+1280),c
  1056   0029CE  0E00               	movlw	0
  1057   0029D0  6E04               	movwf	(?___xxtofl+3)^(0+1280),c
  1058   0029D2  EF7C  F015         	goto	l869
  1059   0029D6                     l1830:
  1060   0029D6  0E96               	movlw	150
  1061   0029D8  6E0A               	movwf	___xxtofl@exp^(0+1280),c
  1062   0029DA  EFF5  F014         	goto	l1834
  1063   0029DE                     l1832:
  1064   0029DE  2A0A               	incf	___xxtofl@exp^(0+1280),f,c
  1065   0029E0  90D8               	bcf	status,0,c
  1066   0029E2  320E               	rrcf	(___xxtofl@arg+3)^(0+1280),f,c
  1067   0029E4  320D               	rrcf	(___xxtofl@arg+2)^(0+1280),f,c
  1068   0029E6  320C               	rrcf	(___xxtofl@arg+1)^(0+1280),f,c
  1069   0029E8  320B               	rrcf	___xxtofl@arg^(0+1280),f,c
  1070   0029EA                     l1834:
  1071   0029EA  0E00               	movlw	0
  1072   0029EC  140B               	andwf	___xxtofl@arg^(0+1280),w,c
  1073   0029EE  6E05               	movwf	??___xxtofl^(0+1280),c
  1074   0029F0  0E00               	movlw	0
  1075   0029F2  140C               	andwf	(___xxtofl@arg+1)^(0+1280),w,c
  1076   0029F4  6E06               	movwf	(??___xxtofl+1)^(0+1280),c
  1077   0029F6  0E00               	movlw	0
  1078   0029F8  140D               	andwf	(___xxtofl@arg+2)^(0+1280),w,c
  1079   0029FA  6E07               	movwf	(??___xxtofl+2)^(0+1280),c
  1080   0029FC  0EFE               	movlw	254
  1081   0029FE  140E               	andwf	(___xxtofl@arg+3)^(0+1280),w,c
  1082   002A00  6E08               	movwf	(??___xxtofl+3)^(0+1280),c
  1083   002A02  5005               	movf	??___xxtofl^(0+1280),w,c
  1084   002A04  1006               	iorwf	(??___xxtofl+1)^(0+1280),w,c
  1085   002A06  1007               	iorwf	(??___xxtofl+2)^(0+1280),w,c
  1086   002A08  1008               	iorwf	(??___xxtofl+3)^(0+1280),w,c
  1087   002A0A  A4D8               	btfss	status,2,c
  1088   002A0C  EF0A  F015         	goto	u1151
  1089   002A10  EF0C  F015         	goto	u1150
  1090   002A14                     u1151:
  1091   002A14  EFEF  F014         	goto	l1832
  1092   002A18                     u1150:
  1093   002A18  EF1A  F015         	goto	l873
  1094   002A1C                     l1836:
  1095   002A1C  2A0A               	incf	___xxtofl@exp^(0+1280),f,c
  1096   002A1E  0E01               	movlw	1
  1097   002A20  260B               	addwf	___xxtofl@arg^(0+1280),f,c
  1098   002A22  0E00               	movlw	0
  1099   002A24  220C               	addwfc	(___xxtofl@arg+1)^(0+1280),f,c
  1100   002A26  220D               	addwfc	(___xxtofl@arg+2)^(0+1280),f,c
  1101   002A28  220E               	addwfc	(___xxtofl@arg+3)^(0+1280),f,c
  1102   002A2A  90D8               	bcf	status,0,c
  1103   002A2C  320E               	rrcf	(___xxtofl@arg+3)^(0+1280),f,c
  1104   002A2E  320D               	rrcf	(___xxtofl@arg+2)^(0+1280),f,c
  1105   002A30  320C               	rrcf	(___xxtofl@arg+1)^(0+1280),f,c
  1106   002A32  320B               	rrcf	___xxtofl@arg^(0+1280),f,c
  1107   002A34                     l873:
  1108   002A34  0E00               	movlw	0
  1109   002A36  140B               	andwf	___xxtofl@arg^(0+1280),w,c
  1110   002A38  6E05               	movwf	??___xxtofl^(0+1280),c
  1111   002A3A  0E00               	movlw	0
  1112   002A3C  140C               	andwf	(___xxtofl@arg+1)^(0+1280),w,c
  1113   002A3E  6E06               	movwf	(??___xxtofl+1)^(0+1280),c
  1114   002A40  0E00               	movlw	0
  1115   002A42  140D               	andwf	(___xxtofl@arg+2)^(0+1280),w,c
  1116   002A44  6E07               	movwf	(??___xxtofl+2)^(0+1280),c
  1117   002A46  0EFF               	movlw	255
  1118   002A48  140E               	andwf	(___xxtofl@arg+3)^(0+1280),w,c
  1119   002A4A  6E08               	movwf	(??___xxtofl+3)^(0+1280),c
  1120   002A4C  5005               	movf	??___xxtofl^(0+1280),w,c
  1121   002A4E  1006               	iorwf	(??___xxtofl+1)^(0+1280),w,c
  1122   002A50  1007               	iorwf	(??___xxtofl+2)^(0+1280),w,c
  1123   002A52  1008               	iorwf	(??___xxtofl+3)^(0+1280),w,c
  1124   002A54  A4D8               	btfss	status,2,c
  1125   002A56  EF2F  F015         	goto	u1161
  1126   002A5A  EF31  F015         	goto	u1160
  1127   002A5E                     u1161:
  1128   002A5E  EF0E  F015         	goto	l1836
  1129   002A62                     u1160:
  1130   002A62  EF39  F015         	goto	l1844
  1131   002A66                     l1842:
  1132   002A66  060A               	decf	___xxtofl@exp^(0+1280),f,c
  1133   002A68  90D8               	bcf	status,0,c
  1134   002A6A  360B               	rlcf	___xxtofl@arg^(0+1280),f,c
  1135   002A6C  360C               	rlcf	(___xxtofl@arg+1)^(0+1280),f,c
  1136   002A6E  360D               	rlcf	(___xxtofl@arg+2)^(0+1280),f,c
  1137   002A70  360E               	rlcf	(___xxtofl@arg+3)^(0+1280),f,c
  1138   002A72                     l1844:
  1139   002A72  BE0D               	btfsc	(___xxtofl@arg+2)^(0+1280),7,c
  1140   002A74  EF3E  F015         	goto	u1171
  1141   002A78  EF40  F015         	goto	u1170
  1142   002A7C                     u1171:
  1143   002A7C  EF48  F015         	goto	l880
  1144   002A80                     u1170:
  1145   002A80  0E02               	movlw	2
  1146   002A82  600A               	cpfslt	___xxtofl@exp^(0+1280),c
  1147   002A84  EF46  F015         	goto	u1181
  1148   002A88  EF48  F015         	goto	u1180
  1149   002A8C                     u1181:
  1150   002A8C  EF33  F015         	goto	l1842
  1151   002A90                     u1180:
  1152   002A90                     l880:
  1153   002A90  B00A               	btfsc	___xxtofl@exp^(0+1280),0,c
  1154   002A92  EF4D  F015         	goto	u1191
  1155   002A96  EF4F  F015         	goto	u1190
  1156   002A9A                     u1191:
  1157   002A9A  EF50  F015         	goto	l1850
  1158   002A9E                     u1190:
  1159   002A9E  9E0D               	bcf	(___xxtofl@arg+2)^(0+1280),7,c
  1160   002AA0                     l1850:
  1161   002AA0  90D8               	bcf	status,0,c
  1162   002AA2  320A               	rrcf	___xxtofl@exp^(0+1280),f,c
  1163   002AA4  C50A  F505         	movff	___xxtofl@exp,??___xxtofl
  1164   002AA8  6A06               	clrf	(??___xxtofl+1)^(0+1280),c
  1165   002AAA  6A07               	clrf	(??___xxtofl+2)^(0+1280),c
  1166   002AAC  6A08               	clrf	(??___xxtofl+3)^(0+1280),c
  1167   002AAE  C505  F508         	movff	??___xxtofl,??___xxtofl+3
  1168   002AB2  6A07               	clrf	(??___xxtofl+2)^(0+1280),c
  1169   002AB4  6A06               	clrf	(??___xxtofl+1)^(0+1280),c
  1170   002AB6  6A05               	clrf	??___xxtofl^(0+1280),c
  1171   002AB8  5005               	movf	??___xxtofl^(0+1280),w,c
  1172   002ABA  120B               	iorwf	___xxtofl@arg^(0+1280),f,c
  1173   002ABC  5006               	movf	(??___xxtofl+1)^(0+1280),w,c
  1174   002ABE  120C               	iorwf	(___xxtofl@arg+1)^(0+1280),f,c
  1175   002AC0  5007               	movf	(??___xxtofl+2)^(0+1280),w,c
  1176   002AC2  120D               	iorwf	(___xxtofl@arg+2)^(0+1280),f,c
  1177   002AC4  5008               	movf	(??___xxtofl+3)^(0+1280),w,c
  1178   002AC6  120E               	iorwf	(___xxtofl@arg+3)^(0+1280),f,c
  1179   002AC8  5009               	movf	___xxtofl@sign^(0+1280),w,c
  1180   002ACA  B4D8               	btfsc	status,2,c
  1181   002ACC  EF6A  F015         	goto	u1201
  1182   002AD0  EF6C  F015         	goto	u1200
  1183   002AD4                     u1201:
  1184   002AD4  EF74  F015         	goto	l1860
  1185   002AD8                     u1200:
  1186   002AD8  BE04               	btfsc	(___xxtofl@val+3)^(0+1280),7,c
  1187   002ADA  EF73  F015         	goto	u1210
  1188   002ADE  EF71  F015         	goto	u1211
  1189   002AE2                     u1211:
  1190   002AE2  EF74  F015         	goto	l1860
  1191   002AE6                     u1210:
  1192   002AE6  8E0E               	bsf	(___xxtofl@arg+3)^(0+1280),7,c
  1193   002AE8                     l1860:
  1194   002AE8  C50B  F501         	movff	___xxtofl@arg,?___xxtofl
  1195   002AEC  C50C  F502         	movff	___xxtofl@arg+1,?___xxtofl+1
  1196   002AF0  C50D  F503         	movff	___xxtofl@arg+2,?___xxtofl+2
  1197   002AF4  C50E  F504         	movff	___xxtofl@arg+3,?___xxtofl+3
  1198   002AF8                     l869:
  1199   002AF8  0012               	return		;funcret
  1200   002AFA                     __end_of___xxtofl:
  1201                           	callstack 0
  1202                           
  1203 ;; *************** function ___fltol *****************
  1204 ;; Defined at:
  1205 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\fltol.c"
  1206 ;; Parameters:    Size  Location     Type
  1207 ;;  f1              4    0[COMRAM] unsigned char 
  1208 ;; Auto vars:     Size  Location     Type
  1209 ;;  exp1            1    9[COMRAM] unsigned char 
  1210 ;;  sign1           1    8[COMRAM] unsigned char 
  1211 ;; Return value:  Size  Location     Type
  1212 ;;                  4    0[COMRAM] long 
  1213 ;; Registers used:
  1214 ;;		wreg, status,2, status,0
  1215 ;; Tracked objects:
  1216 ;;		On entry : 0/0
  1217 ;;		On exit  : 0/0
  1218 ;;		Unchanged: 0/0
  1219 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1220 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1221 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1222 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1223 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1224 ;;Total ram usage:       10 bytes
  1225 ;; Hardware stack levels used: 1
  1226 ;; Hardware stack levels required when called: 1
  1227 ;; This function calls:
  1228 ;;		Nothing
  1229 ;; This function is called by:
  1230 ;;		_main
  1231 ;; This function uses a non-reentrant model
  1232 ;;
  1233                           
  1234                           	psect	text6
  1235   002AFA                     __ptext6:
  1236                           	callstack 0
  1237   002AFA                     ___fltol:
  1238                           	callstack 125
  1239   002AFA  3403               	rlcf	(___fltol@f1+2)^(0+1280),w,c
  1240   002AFC  3404               	rlcf	(___fltol@f1+3)^(0+1280),w,c
  1241   002AFE  6E0A               	movwf	___fltol@exp1^(0+1280),c
  1242   002B00  500A               	movf	___fltol@exp1^(0+1280),w,c
  1243   002B02  A4D8               	btfss	status,2,c
  1244   002B04  EF86  F015         	goto	u1051
  1245   002B08  EF88  F015         	goto	u1050
  1246   002B0C                     u1051:
  1247   002B0C  EF92  F015         	goto	l1780
  1248   002B10                     u1050:
  1249   002B10                     l1776:
  1250   002B10  0E00               	movlw	0
  1251   002B12  6E01               	movwf	?___fltol^(0+1280),c
  1252   002B14  0E00               	movlw	0
  1253   002B16  6E02               	movwf	(?___fltol+1)^(0+1280),c
  1254   002B18  0E00               	movlw	0
  1255   002B1A  6E03               	movwf	(?___fltol+2)^(0+1280),c
  1256   002B1C  0E00               	movlw	0
  1257   002B1E  6E04               	movwf	(?___fltol+3)^(0+1280),c
  1258   002B20  EFFF  F015         	goto	l508
  1259   002B24                     l1780:
  1260   002B24  C501  F505         	movff	___fltol@f1,??___fltol
  1261   002B28  C502  F506         	movff	___fltol@f1+1,??___fltol+1
  1262   002B2C  C503  F507         	movff	___fltol@f1+2,??___fltol+2
  1263   002B30  C504  F508         	movff	___fltol@f1+3,??___fltol+3
  1264   002B34  0E20               	movlw	32
  1265   002B36  EFA2  F015         	goto	u1060
  1266   002B3A                     u1065:
  1267   002B3A  90D8               	bcf	status,0,c
  1268   002B3C  3208               	rrcf	(??___fltol+3)^(0+1280),f,c
  1269   002B3E  3207               	rrcf	(??___fltol+2)^(0+1280),f,c
  1270   002B40  3206               	rrcf	(??___fltol+1)^(0+1280),f,c
  1271   002B42  3205               	rrcf	??___fltol^(0+1280),f,c
  1272   002B44                     u1060:
  1273   002B44  2EE8               	decfsz	wreg,f,c
  1274   002B46  EF9D  F015         	goto	u1065
  1275   002B4A  5005               	movf	??___fltol^(0+1280),w,c
  1276   002B4C  6E09               	movwf	___fltol@sign1^(0+1280),c
  1277   002B4E  8E03               	bsf	(___fltol@f1+2)^(0+1280),7,c
  1278   002B50  0EFF               	movlw	255
  1279   002B52  1601               	andwf	___fltol@f1^(0+1280),f,c
  1280   002B54  0EFF               	movlw	255
  1281   002B56  1602               	andwf	(___fltol@f1+1)^(0+1280),f,c
  1282   002B58  0EFF               	movlw	255
  1283   002B5A  1603               	andwf	(___fltol@f1+2)^(0+1280),f,c
  1284   002B5C  0E00               	movlw	0
  1285   002B5E  1604               	andwf	(___fltol@f1+3)^(0+1280),f,c
  1286   002B60  0E96               	movlw	150
  1287   002B62  5E0A               	subwf	___fltol@exp1^(0+1280),f,c
  1288   002B64  BE0A               	btfsc	___fltol@exp1^(0+1280),7,c
  1289   002B66  EFB9  F015         	goto	u1070
  1290   002B6A  EFB7  F015         	goto	u1071
  1291   002B6E                     u1071:
  1292   002B6E  EFCF  F015         	goto	l1800
  1293   002B72                     u1070:
  1294   002B72  500A               	movf	___fltol@exp1^(0+1280),w,c
  1295   002B74  0A80               	xorlw	128
  1296   002B76  0F97               	addlw	151
  1297   002B78  B0D8               	btfsc	status,0,c
  1298   002B7A  EFC1  F015         	goto	u1081
  1299   002B7E  EFC3  F015         	goto	u1080
  1300   002B82                     u1081:
  1301   002B82  EFC5  F015         	goto	l1796
  1302   002B86                     u1080:
  1303   002B86  EF88  F015         	goto	l1776
  1304   002B8A                     l1796:
  1305   002B8A  90D8               	bcf	status,0,c
  1306   002B8C  3204               	rrcf	(___fltol@f1+3)^(0+1280),f,c
  1307   002B8E  3203               	rrcf	(___fltol@f1+2)^(0+1280),f,c
  1308   002B90  3202               	rrcf	(___fltol@f1+1)^(0+1280),f,c
  1309   002B92  3201               	rrcf	___fltol@f1^(0+1280),f,c
  1310   002B94  3E0A               	incfsz	___fltol@exp1^(0+1280),f,c
  1311   002B96  EFC5  F015         	goto	l1796
  1312   002B9A  EFE7  F015         	goto	l1810
  1313   002B9E                     l1800:
  1314   002B9E  0E1F               	movlw	31
  1315   002BA0  640A               	cpfsgt	___fltol@exp1^(0+1280),c
  1316   002BA2  EFD5  F015         	goto	u1091
  1317   002BA6  EFD7  F015         	goto	u1090
  1318   002BAA                     u1091:
  1319   002BAA  EFDF  F015         	goto	l1808
  1320   002BAE                     u1090:
  1321   002BAE  EF88  F015         	goto	l1776
  1322   002BB2                     l1806:
  1323   002BB2  90D8               	bcf	status,0,c
  1324   002BB4  3601               	rlcf	___fltol@f1^(0+1280),f,c
  1325   002BB6  3602               	rlcf	(___fltol@f1+1)^(0+1280),f,c
  1326   002BB8  3603               	rlcf	(___fltol@f1+2)^(0+1280),f,c
  1327   002BBA  3604               	rlcf	(___fltol@f1+3)^(0+1280),f,c
  1328   002BBC  060A               	decf	___fltol@exp1^(0+1280),f,c
  1329   002BBE                     l1808:
  1330   002BBE  500A               	movf	___fltol@exp1^(0+1280),w,c
  1331   002BC0  A4D8               	btfss	status,2,c
  1332   002BC2  EFE5  F015         	goto	u1101
  1333   002BC6  EFE7  F015         	goto	u1100
  1334   002BCA                     u1101:
  1335   002BCA  EFD9  F015         	goto	l1806
  1336   002BCE                     u1100:
  1337   002BCE                     l1810:
  1338   002BCE  5009               	movf	___fltol@sign1^(0+1280),w,c
  1339   002BD0  B4D8               	btfsc	status,2,c
  1340   002BD2  EFED  F015         	goto	u1111
  1341   002BD6  EFEF  F015         	goto	u1110
  1342   002BDA                     u1111:
  1343   002BDA  EFF7  F015         	goto	l1814
  1344   002BDE                     u1110:
  1345   002BDE  1E04               	comf	(___fltol@f1+3)^(0+1280),f,c
  1346   002BE0  1E03               	comf	(___fltol@f1+2)^(0+1280),f,c
  1347   002BE2  1E02               	comf	(___fltol@f1+1)^(0+1280),f,c
  1348   002BE4  6C01               	negf	___fltol@f1^(0+1280),c
  1349   002BE6  0E00               	movlw	0
  1350   002BE8  2202               	addwfc	(___fltol@f1+1)^(0+1280),f,c
  1351   002BEA  2203               	addwfc	(___fltol@f1+2)^(0+1280),f,c
  1352   002BEC  2204               	addwfc	(___fltol@f1+3)^(0+1280),f,c
  1353   002BEE                     l1814:
  1354   002BEE  C501  F501         	movff	___fltol@f1,?___fltol
  1355   002BF2  C502  F502         	movff	___fltol@f1+1,?___fltol+1
  1356   002BF6  C503  F503         	movff	___fltol@f1+2,?___fltol+2
  1357   002BFA  C504  F504         	movff	___fltol@f1+3,?___fltol+3
  1358   002BFE                     l508:
  1359   002BFE  0012               	return		;funcret
  1360   002C00                     __end_of___fltol:
  1361                           	callstack 0
  1362                           
  1363 ;; *************** function ___flmul *****************
  1364 ;; Defined at:
  1365 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcmul.c"
  1366 ;; Parameters:    Size  Location     Type
  1367 ;;  b               4   14[COMRAM] long 
  1368 ;;  a               4   18[COMRAM] long 
  1369 ;; Auto vars:     Size  Location     Type
  1370 ;;  prod            4   33[COMRAM] struct .
  1371 ;;  grs             4   27[COMRAM] unsigned long 
  1372 ;;  temp            2   37[COMRAM] struct .
  1373 ;;  bexp            1   32[COMRAM] unsigned char 
  1374 ;;  aexp            1   31[COMRAM] unsigned char 
  1375 ;;  sign            1   26[COMRAM] unsigned char 
  1376 ;; Return value:  Size  Location     Type
  1377 ;;                  4   14[COMRAM] unsigned char 
  1378 ;; Registers used:
  1379 ;;		wreg, status,2, status,0, prodl, prodh
  1380 ;; Tracked objects:
  1381 ;;		On entry : 0/0
  1382 ;;		On exit  : 0/0
  1383 ;;		Unchanged: 0/0
  1384 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1385 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1386 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1387 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1388 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1389 ;;Total ram usage:       25 bytes
  1390 ;; Hardware stack levels used: 1
  1391 ;; Hardware stack levels required when called: 1
  1392 ;; This function calls:
  1393 ;;		Nothing
  1394 ;; This function is called by:
  1395 ;;		_main
  1396 ;; This function uses a non-reentrant model
  1397 ;;
  1398                           
  1399                           	psect	text7
  1400   00251C                     __ptext7:
  1401                           	callstack 0
  1402   00251C                     ___flmul:
  1403                           	callstack 125
  1404   00251C  5012               	movf	(___flmul@b+3)^(0+1280),w,c
  1405   00251E  0B80               	andlw	128
  1406   002520  6E1B               	movwf	___flmul@sign^(0+1280),c
  1407   002522  5012               	movf	(___flmul@b+3)^(0+1280),w,c
  1408   002524  2412               	addwf	(___flmul@b+3)^(0+1280),w,c
  1409   002526  6E21               	movwf	___flmul@bexp^(0+1280),c
  1410   002528  AE11               	btfss	(___flmul@b+2)^(0+1280),7,c
  1411   00252A  EF99  F012         	goto	u861
  1412   00252E  EF9B  F012         	goto	u860
  1413   002532                     u861:
  1414   002532  EF9C  F012         	goto	l1650
  1415   002536                     u860:
  1416   002536  8021               	bsf	___flmul@bexp^(0+1280),0,c
  1417   002538                     l1650:
  1418   002538  5021               	movf	___flmul@bexp^(0+1280),w,c
  1419   00253A  B4D8               	btfsc	status,2,c
  1420   00253C  EFA2  F012         	goto	u871
  1421   002540  EFA4  F012         	goto	u870
  1422   002544                     u871:
  1423   002544  EFB7  F012         	goto	l1658
  1424   002548                     u870:
  1425   002548  2821               	incf	___flmul@bexp^(0+1280),w,c
  1426   00254A  A4D8               	btfss	status,2,c
  1427   00254C  EFAA  F012         	goto	u881
  1428   002550  EFAC  F012         	goto	u880
  1429   002554                     u881:
  1430   002554  EFB4  F012         	goto	l1656
  1431   002558                     u880:
  1432   002558  0E00               	movlw	0
  1433   00255A  6E0F               	movwf	___flmul@b^(0+1280),c
  1434   00255C  0E00               	movlw	0
  1435   00255E  6E10               	movwf	(___flmul@b+1)^(0+1280),c
  1436   002560  0E00               	movlw	0
  1437   002562  6E11               	movwf	(___flmul@b+2)^(0+1280),c
  1438   002564  0E00               	movlw	0
  1439   002566  6E12               	movwf	(___flmul@b+3)^(0+1280),c
  1440   002568                     l1656:
  1441   002568  8E11               	bsf	(___flmul@b+2)^(0+1280),7,c
  1442   00256A  EFBF  F012         	goto	l1660
  1443   00256E                     l1658:
  1444   00256E  0E00               	movlw	0
  1445   002570  6E0F               	movwf	___flmul@b^(0+1280),c
  1446   002572  0E00               	movlw	0
  1447   002574  6E10               	movwf	(___flmul@b+1)^(0+1280),c
  1448   002576  0E00               	movlw	0
  1449   002578  6E11               	movwf	(___flmul@b+2)^(0+1280),c
  1450   00257A  0E00               	movlw	0
  1451   00257C  6E12               	movwf	(___flmul@b+3)^(0+1280),c
  1452   00257E                     l1660:
  1453   00257E  5016               	movf	(___flmul@a+3)^(0+1280),w,c
  1454   002580  0B80               	andlw	128
  1455   002582  1A1B               	xorwf	___flmul@sign^(0+1280),f,c
  1456   002584  5016               	movf	(___flmul@a+3)^(0+1280),w,c
  1457   002586  2416               	addwf	(___flmul@a+3)^(0+1280),w,c
  1458   002588  6E20               	movwf	___flmul@aexp^(0+1280),c
  1459   00258A  AE15               	btfss	(___flmul@a+2)^(0+1280),7,c
  1460   00258C  EFCA  F012         	goto	u891
  1461   002590  EFCC  F012         	goto	u890
  1462   002594                     u891:
  1463   002594  EFCD  F012         	goto	l1668
  1464   002598                     u890:
  1465   002598  8020               	bsf	___flmul@aexp^(0+1280),0,c
  1466   00259A                     l1668:
  1467   00259A  5020               	movf	___flmul@aexp^(0+1280),w,c
  1468   00259C  B4D8               	btfsc	status,2,c
  1469   00259E  EFD3  F012         	goto	u901
  1470   0025A2  EFD5  F012         	goto	u900
  1471   0025A6                     u901:
  1472   0025A6  EFE8  F012         	goto	l1676
  1473   0025AA                     u900:
  1474   0025AA  2820               	incf	___flmul@aexp^(0+1280),w,c
  1475   0025AC  A4D8               	btfss	status,2,c
  1476   0025AE  EFDB  F012         	goto	u911
  1477   0025B2  EFDD  F012         	goto	u910
  1478   0025B6                     u911:
  1479   0025B6  EFE5  F012         	goto	l1674
  1480   0025BA                     u910:
  1481   0025BA  0E00               	movlw	0
  1482   0025BC  6E13               	movwf	___flmul@a^(0+1280),c
  1483   0025BE  0E00               	movlw	0
  1484   0025C0  6E14               	movwf	(___flmul@a+1)^(0+1280),c
  1485   0025C2  0E00               	movlw	0
  1486   0025C4  6E15               	movwf	(___flmul@a+2)^(0+1280),c
  1487   0025C6  0E00               	movlw	0
  1488   0025C8  6E16               	movwf	(___flmul@a+3)^(0+1280),c
  1489   0025CA                     l1674:
  1490   0025CA  8E15               	bsf	(___flmul@a+2)^(0+1280),7,c
  1491   0025CC  EFF0  F012         	goto	l825
  1492   0025D0                     l1676:
  1493   0025D0  0E00               	movlw	0
  1494   0025D2  6E13               	movwf	___flmul@a^(0+1280),c
  1495   0025D4  0E00               	movlw	0
  1496   0025D6  6E14               	movwf	(___flmul@a+1)^(0+1280),c
  1497   0025D8  0E00               	movlw	0
  1498   0025DA  6E15               	movwf	(___flmul@a+2)^(0+1280),c
  1499   0025DC  0E00               	movlw	0
  1500   0025DE  6E16               	movwf	(___flmul@a+3)^(0+1280),c
  1501   0025E0                     l825:
  1502   0025E0  5020               	movf	___flmul@aexp^(0+1280),w,c
  1503   0025E2  B4D8               	btfsc	status,2,c
  1504   0025E4  EFF6  F012         	goto	u921
  1505   0025E8  EFF8  F012         	goto	u920
  1506   0025EC                     u921:
  1507   0025EC  EF00  F013         	goto	l1680
  1508   0025F0                     u920:
  1509   0025F0  5021               	movf	___flmul@bexp^(0+1280),w,c
  1510   0025F2  A4D8               	btfss	status,2,c
  1511   0025F4  EFFE  F012         	goto	u931
  1512   0025F8  EF00  F013         	goto	u930
  1513   0025FC                     u931:
  1514   0025FC  EF0A  F013         	goto	l1684
  1515   002600                     u930:
  1516   002600                     l1680:
  1517   002600  0E00               	movlw	0
  1518   002602  6E0F               	movwf	?___flmul^(0+1280),c
  1519   002604  0E00               	movlw	0
  1520   002606  6E10               	movwf	(?___flmul+1)^(0+1280),c
  1521   002608  0E00               	movlw	0
  1522   00260A  6E11               	movwf	(?___flmul+2)^(0+1280),c
  1523   00260C  0E00               	movlw	0
  1524   00260E  6E12               	movwf	(?___flmul+3)^(0+1280),c
  1525   002610  EFA2  F014         	goto	l829
  1526   002614                     l1684:
  1527   002614  5015               	movf	(___flmul@a+2)^(0+1280),w,c
  1528   002616  020F               	mulwf	___flmul@b^(0+1280),c
  1529   002618  C4F3 F526          	movff	prodl,___flmul@temp
  1530   00261C  C4F4 F527          	movff	prodh,___flmul@temp+1
  1531   002620  5026               	movf	___flmul@temp^(0+1280),w,c
  1532   002622  6E1C               	movwf	___flmul@grs^(0+1280),c
  1533   002624  6A1D               	clrf	(___flmul@grs+1)^(0+1280),c
  1534   002626  6A1E               	clrf	(___flmul@grs+2)^(0+1280),c
  1535   002628  6A1F               	clrf	(___flmul@grs+3)^(0+1280),c
  1536   00262A  5027               	movf	(___flmul@temp+1)^(0+1280),w,c
  1537   00262C  6E22               	movwf	___flmul@prod^(0+1280),c
  1538   00262E  6A23               	clrf	(___flmul@prod+1)^(0+1280),c
  1539   002630  6A24               	clrf	(___flmul@prod+2)^(0+1280),c
  1540   002632  6A25               	clrf	(___flmul@prod+3)^(0+1280),c
  1541   002634  5014               	movf	(___flmul@a+1)^(0+1280),w,c
  1542   002636  0210               	mulwf	(___flmul@b+1)^(0+1280),c
  1543   002638  C4F3 F526          	movff	prodl,___flmul@temp
  1544   00263C  C4F4 F527          	movff	prodh,___flmul@temp+1
  1545   002640  5026               	movf	___flmul@temp^(0+1280),w,c
  1546   002642  261C               	addwf	___flmul@grs^(0+1280),f,c
  1547   002644  0E00               	movlw	0
  1548   002646  221D               	addwfc	(___flmul@grs+1)^(0+1280),f,c
  1549   002648  221E               	addwfc	(___flmul@grs+2)^(0+1280),f,c
  1550   00264A  221F               	addwfc	(___flmul@grs+3)^(0+1280),f,c
  1551   00264C  5027               	movf	(___flmul@temp+1)^(0+1280),w,c
  1552   00264E  2622               	addwf	___flmul@prod^(0+1280),f,c
  1553   002650  0E00               	movlw	0
  1554   002652  2223               	addwfc	(___flmul@prod+1)^(0+1280),f,c
  1555   002654  2224               	addwfc	(___flmul@prod+2)^(0+1280),f,c
  1556   002656  2225               	addwfc	(___flmul@prod+3)^(0+1280),f,c
  1557   002658  5013               	movf	___flmul@a^(0+1280),w,c
  1558   00265A  0211               	mulwf	(___flmul@b+2)^(0+1280),c
  1559   00265C  C4F3 F526          	movff	prodl,___flmul@temp
  1560   002660  C4F4 F527          	movff	prodh,___flmul@temp+1
  1561   002664  5026               	movf	___flmul@temp^(0+1280),w,c
  1562   002666  261C               	addwf	___flmul@grs^(0+1280),f,c
  1563   002668  0E00               	movlw	0
  1564   00266A  221D               	addwfc	(___flmul@grs+1)^(0+1280),f,c
  1565   00266C  221E               	addwfc	(___flmul@grs+2)^(0+1280),f,c
  1566   00266E  221F               	addwfc	(___flmul@grs+3)^(0+1280),f,c
  1567   002670  5027               	movf	(___flmul@temp+1)^(0+1280),w,c
  1568   002672  2622               	addwf	___flmul@prod^(0+1280),f,c
  1569   002674  0E00               	movlw	0
  1570   002676  2223               	addwfc	(___flmul@prod+1)^(0+1280),f,c
  1571   002678  2224               	addwfc	(___flmul@prod+2)^(0+1280),f,c
  1572   00267A  2225               	addwfc	(___flmul@prod+3)^(0+1280),f,c
  1573   00267C  C51E  F51F         	movff	___flmul@grs+2,___flmul@grs+3
  1574   002680  C51D  F51E         	movff	___flmul@grs+1,___flmul@grs+2
  1575   002684  C51C  F51D         	movff	___flmul@grs,___flmul@grs+1
  1576   002688  6A1C               	clrf	___flmul@grs^(0+1280),c
  1577   00268A  5013               	movf	___flmul@a^(0+1280),w,c
  1578   00268C  0210               	mulwf	(___flmul@b+1)^(0+1280),c
  1579   00268E  C4F3 F526          	movff	prodl,___flmul@temp
  1580   002692  C4F4 F527          	movff	prodh,___flmul@temp+1
  1581   002696  5026               	movf	___flmul@temp^(0+1280),w,c
  1582   002698  261C               	addwf	___flmul@grs^(0+1280),f,c
  1583   00269A  5027               	movf	(___flmul@temp+1)^(0+1280),w,c
  1584   00269C  221D               	addwfc	(___flmul@grs+1)^(0+1280),f,c
  1585   00269E  0E00               	movlw	0
  1586   0026A0  221E               	addwfc	(___flmul@grs+2)^(0+1280),f,c
  1587   0026A2  0E00               	movlw	0
  1588   0026A4  221F               	addwfc	(___flmul@grs+3)^(0+1280),f,c
  1589   0026A6  5014               	movf	(___flmul@a+1)^(0+1280),w,c
  1590   0026A8  020F               	mulwf	___flmul@b^(0+1280),c
  1591   0026AA  C4F3 F526          	movff	prodl,___flmul@temp
  1592   0026AE  C4F4 F527          	movff	prodh,___flmul@temp+1
  1593   0026B2  5026               	movf	___flmul@temp^(0+1280),w,c
  1594   0026B4  261C               	addwf	___flmul@grs^(0+1280),f,c
  1595   0026B6  5027               	movf	(___flmul@temp+1)^(0+1280),w,c
  1596   0026B8  221D               	addwfc	(___flmul@grs+1)^(0+1280),f,c
  1597   0026BA  0E00               	movlw	0
  1598   0026BC  221E               	addwfc	(___flmul@grs+2)^(0+1280),f,c
  1599   0026BE  0E00               	movlw	0
  1600   0026C0  221F               	addwfc	(___flmul@grs+3)^(0+1280),f,c
  1601   0026C2  C51E  F51F         	movff	___flmul@grs+2,___flmul@grs+3
  1602   0026C6  C51D  F51E         	movff	___flmul@grs+1,___flmul@grs+2
  1603   0026CA  C51C  F51D         	movff	___flmul@grs,___flmul@grs+1
  1604   0026CE  6A1C               	clrf	___flmul@grs^(0+1280),c
  1605   0026D0  5013               	movf	___flmul@a^(0+1280),w,c
  1606   0026D2  020F               	mulwf	___flmul@b^(0+1280),c
  1607   0026D4  C4F3 F526          	movff	prodl,___flmul@temp
  1608   0026D8  C4F4 F527          	movff	prodh,___flmul@temp+1
  1609   0026DC  5026               	movf	___flmul@temp^(0+1280),w,c
  1610   0026DE  261C               	addwf	___flmul@grs^(0+1280),f,c
  1611   0026E0  5027               	movf	(___flmul@temp+1)^(0+1280),w,c
  1612   0026E2  221D               	addwfc	(___flmul@grs+1)^(0+1280),f,c
  1613   0026E4  0E00               	movlw	0
  1614   0026E6  221E               	addwfc	(___flmul@grs+2)^(0+1280),f,c
  1615   0026E8  0E00               	movlw	0
  1616   0026EA  221F               	addwfc	(___flmul@grs+3)^(0+1280),f,c
  1617   0026EC  5015               	movf	(___flmul@a+2)^(0+1280),w,c
  1618   0026EE  0210               	mulwf	(___flmul@b+1)^(0+1280),c
  1619   0026F0  C4F3 F526          	movff	prodl,___flmul@temp
  1620   0026F4  C4F4 F527          	movff	prodh,___flmul@temp+1
  1621   0026F8  5026               	movf	___flmul@temp^(0+1280),w,c
  1622   0026FA  2622               	addwf	___flmul@prod^(0+1280),f,c
  1623   0026FC  5027               	movf	(___flmul@temp+1)^(0+1280),w,c
  1624   0026FE  2223               	addwfc	(___flmul@prod+1)^(0+1280),f,c
  1625   002700  0E00               	movlw	0
  1626   002702  2224               	addwfc	(___flmul@prod+2)^(0+1280),f,c
  1627   002704  0E00               	movlw	0
  1628   002706  2225               	addwfc	(___flmul@prod+3)^(0+1280),f,c
  1629   002708  5014               	movf	(___flmul@a+1)^(0+1280),w,c
  1630   00270A  0211               	mulwf	(___flmul@b+2)^(0+1280),c
  1631   00270C  C4F3 F526          	movff	prodl,___flmul@temp
  1632   002710  C4F4 F527          	movff	prodh,___flmul@temp+1
  1633   002714  5026               	movf	___flmul@temp^(0+1280),w,c
  1634   002716  2622               	addwf	___flmul@prod^(0+1280),f,c
  1635   002718  5027               	movf	(___flmul@temp+1)^(0+1280),w,c
  1636   00271A  2223               	addwfc	(___flmul@prod+1)^(0+1280),f,c
  1637   00271C  0E00               	movlw	0
  1638   00271E  2224               	addwfc	(___flmul@prod+2)^(0+1280),f,c
  1639   002720  0E00               	movlw	0
  1640   002722  2225               	addwfc	(___flmul@prod+3)^(0+1280),f,c
  1641   002724  5015               	movf	(___flmul@a+2)^(0+1280),w,c
  1642   002726  0211               	mulwf	(___flmul@b+2)^(0+1280),c
  1643   002728  C4F3 F526          	movff	prodl,___flmul@temp
  1644   00272C  C4F4 F527          	movff	prodh,___flmul@temp+1
  1645   002730  5026               	movf	___flmul@temp^(0+1280),w,c
  1646   002732  6E17               	movwf	??___flmul^(0+1280),c
  1647   002734  5027               	movf	(___flmul@temp+1)^(0+1280),w,c
  1648   002736  6E18               	movwf	(??___flmul+1)^(0+1280),c
  1649   002738  6A19               	clrf	(??___flmul+2)^(0+1280),c
  1650   00273A  6A1A               	clrf	(??___flmul+3)^(0+1280),c
  1651   00273C  C519  F51A         	movff	??___flmul+2,??___flmul+3
  1652   002740  C518  F519         	movff	??___flmul+1,??___flmul+2
  1653   002744  C517  F518         	movff	??___flmul,??___flmul+1
  1654   002748  6A17               	clrf	??___flmul^(0+1280),c
  1655   00274A  5017               	movf	??___flmul^(0+1280),w,c
  1656   00274C  2622               	addwf	___flmul@prod^(0+1280),f,c
  1657   00274E  5018               	movf	(??___flmul+1)^(0+1280),w,c
  1658   002750  2223               	addwfc	(___flmul@prod+1)^(0+1280),f,c
  1659   002752  5019               	movf	(??___flmul+2)^(0+1280),w,c
  1660   002754  2224               	addwfc	(___flmul@prod+2)^(0+1280),f,c
  1661   002756  501A               	movf	(??___flmul+3)^(0+1280),w,c
  1662   002758  2225               	addwfc	(___flmul@prod+3)^(0+1280),f,c
  1663   00275A  C51C  F517         	movff	___flmul@grs,??___flmul
  1664   00275E  C51D  F518         	movff	___flmul@grs+1,??___flmul+1
  1665   002762  C51E  F519         	movff	___flmul@grs+2,??___flmul+2
  1666   002766  C51F  F51A         	movff	___flmul@grs+3,??___flmul+3
  1667   00276A  0E19               	movlw	25
  1668   00276C  EFBD  F013         	goto	u940
  1669   002770                     u945:
  1670   002770  90D8               	bcf	status,0,c
  1671   002772  321A               	rrcf	(??___flmul+3)^(0+1280),f,c
  1672   002774  3219               	rrcf	(??___flmul+2)^(0+1280),f,c
  1673   002776  3218               	rrcf	(??___flmul+1)^(0+1280),f,c
  1674   002778  3217               	rrcf	??___flmul^(0+1280),f,c
  1675   00277A                     u940:
  1676   00277A  2EE8               	decfsz	wreg,f,c
  1677   00277C  EFB8  F013         	goto	u945
  1678   002780  5017               	movf	??___flmul^(0+1280),w,c
  1679   002782  2622               	addwf	___flmul@prod^(0+1280),f,c
  1680   002784  5018               	movf	(??___flmul+1)^(0+1280),w,c
  1681   002786  2223               	addwfc	(___flmul@prod+1)^(0+1280),f,c
  1682   002788  5019               	movf	(??___flmul+2)^(0+1280),w,c
  1683   00278A  2224               	addwfc	(___flmul@prod+2)^(0+1280),f,c
  1684   00278C  501A               	movf	(??___flmul+3)^(0+1280),w,c
  1685   00278E  2225               	addwfc	(___flmul@prod+3)^(0+1280),f,c
  1686   002790  C51E  F51F         	movff	___flmul@grs+2,___flmul@grs+3
  1687   002794  C51D  F51E         	movff	___flmul@grs+1,___flmul@grs+2
  1688   002798  C51C  F51D         	movff	___flmul@grs,___flmul@grs+1
  1689   00279C  6A1C               	clrf	___flmul@grs^(0+1280),c
  1690   00279E  5020               	movf	___flmul@aexp^(0+1280),w,c
  1691   0027A0  C521  F517         	movff	___flmul@bexp,??___flmul
  1692   0027A4  6A18               	clrf	(??___flmul+1)^(0+1280),c
  1693   0027A6  2617               	addwf	??___flmul^(0+1280),f,c
  1694   0027A8  0E00               	movlw	0
  1695   0027AA  2218               	addwfc	(??___flmul+1)^(0+1280),f,c
  1696   0027AC  0E82               	movlw	130
  1697   0027AE  2417               	addwf	??___flmul^(0+1280),w,c
  1698   0027B0  6E26               	movwf	___flmul@temp^(0+1280),c
  1699   0027B2  0EFF               	movlw	255
  1700   0027B4  2018               	addwfc	(??___flmul+1)^(0+1280),w,c
  1701   0027B6  6E27               	movwf	(___flmul@temp+1)^(0+1280),c
  1702   0027B8  EFF3  F013         	goto	l1732
  1703   0027BC                     l1726:
  1704   0027BC  90D8               	bcf	status,0,c
  1705   0027BE  3622               	rlcf	___flmul@prod^(0+1280),f,c
  1706   0027C0  3623               	rlcf	(___flmul@prod+1)^(0+1280),f,c
  1707   0027C2  3624               	rlcf	(___flmul@prod+2)^(0+1280),f,c
  1708   0027C4  3625               	rlcf	(___flmul@prod+3)^(0+1280),f,c
  1709   0027C6  AE1F               	btfss	(___flmul@grs+3)^(0+1280),7,c
  1710   0027C8  EFE8  F013         	goto	u951
  1711   0027CC  EFEA  F013         	goto	u950
  1712   0027D0                     u951:
  1713   0027D0  EFEB  F013         	goto	l832
  1714   0027D4                     u950:
  1715   0027D4  8022               	bsf	___flmul@prod^(0+1280),0,c
  1716   0027D6                     l832:
  1717   0027D6  90D8               	bcf	status,0,c
  1718   0027D8  361C               	rlcf	___flmul@grs^(0+1280),f,c
  1719   0027DA  361D               	rlcf	(___flmul@grs+1)^(0+1280),f,c
  1720   0027DC  361E               	rlcf	(___flmul@grs+2)^(0+1280),f,c
  1721   0027DE  361F               	rlcf	(___flmul@grs+3)^(0+1280),f,c
  1722   0027E0  0626               	decf	___flmul@temp^(0+1280),f,c
  1723   0027E2  A0D8               	btfss	status,0,c
  1724   0027E4  0627               	decf	(___flmul@temp+1)^(0+1280),f,c
  1725   0027E6                     l1732:
  1726   0027E6  AE24               	btfss	(___flmul@prod+2)^(0+1280),7,c
  1727   0027E8  EFF8  F013         	goto	u961
  1728   0027EC  EFFA  F013         	goto	u960
  1729   0027F0                     u961:
  1730   0027F0  EFDE  F013         	goto	l1726
  1731   0027F4                     u960:
  1732   0027F4  0E00               	movlw	0
  1733   0027F6  6E20               	movwf	___flmul@aexp^(0+1280),c
  1734   0027F8  AE1F               	btfss	(___flmul@grs+3)^(0+1280),7,c
  1735   0027FA  EF01  F014         	goto	u971
  1736   0027FE  EF03  F014         	goto	u970
  1737   002802                     u971:
  1738   002802  EF27  F014         	goto	l834
  1739   002806                     u970:
  1740   002806  0EFF               	movlw	255
  1741   002808  141C               	andwf	___flmul@grs^(0+1280),w,c
  1742   00280A  6E17               	movwf	??___flmul^(0+1280),c
  1743   00280C  0EFF               	movlw	255
  1744   00280E  141D               	andwf	(___flmul@grs+1)^(0+1280),w,c
  1745   002810  6E18               	movwf	(??___flmul+1)^(0+1280),c
  1746   002812  0EFF               	movlw	255
  1747   002814  141E               	andwf	(___flmul@grs+2)^(0+1280),w,c
  1748   002816  6E19               	movwf	(??___flmul+2)^(0+1280),c
  1749   002818  0E7F               	movlw	127
  1750   00281A  141F               	andwf	(___flmul@grs+3)^(0+1280),w,c
  1751   00281C  6E1A               	movwf	(??___flmul+3)^(0+1280),c
  1752   00281E  5017               	movf	??___flmul^(0+1280),w,c
  1753   002820  1018               	iorwf	(??___flmul+1)^(0+1280),w,c
  1754   002822  1019               	iorwf	(??___flmul+2)^(0+1280),w,c
  1755   002824  101A               	iorwf	(??___flmul+3)^(0+1280),w,c
  1756   002826  B4D8               	btfsc	status,2,c
  1757   002828  EF18  F014         	goto	u981
  1758   00282C  EF1A  F014         	goto	u980
  1759   002830                     u981:
  1760   002830  EF1E  F014         	goto	l835
  1761   002834                     u980:
  1762   002834                     l1740:
  1763   002834  0E01               	movlw	1
  1764   002836  6E20               	movwf	___flmul@aexp^(0+1280),c
  1765   002838  EF27  F014         	goto	l834
  1766   00283C                     l835:
  1767   00283C  A022               	btfss	___flmul@prod^(0+1280),0,c
  1768   00283E  EF23  F014         	goto	u991
  1769   002842  EF25  F014         	goto	u990
  1770   002846                     u991:
  1771   002846  EF27  F014         	goto	l834
  1772   00284A                     u990:
  1773   00284A  EF1A  F014         	goto	l1740
  1774   00284E                     l834:
  1775   00284E  5020               	movf	___flmul@aexp^(0+1280),w,c
  1776   002850  B4D8               	btfsc	status,2,c
  1777   002852  EF2D  F014         	goto	u1001
  1778   002856  EF2F  F014         	goto	u1000
  1779   00285A                     u1001:
  1780   00285A  EF53  F014         	goto	l1752
  1781   00285E                     u1000:
  1782   00285E  0E01               	movlw	1
  1783   002860  2622               	addwf	___flmul@prod^(0+1280),f,c
  1784   002862  0E00               	movlw	0
  1785   002864  2223               	addwfc	(___flmul@prod+1)^(0+1280),f,c
  1786   002866  2224               	addwfc	(___flmul@prod+2)^(0+1280),f,c
  1787   002868  2225               	addwfc	(___flmul@prod+3)^(0+1280),f,c
  1788   00286A  A025               	btfss	(___flmul@prod+3)^(0+1280),0,c
  1789   00286C  EF3A  F014         	goto	u1011
  1790   002870  EF3C  F014         	goto	u1010
  1791   002874                     u1011:
  1792   002874  EF53  F014         	goto	l1752
  1793   002878                     u1010:
  1794   002878  C522  F517         	movff	___flmul@prod,??___flmul
  1795   00287C  C523  F518         	movff	___flmul@prod+1,??___flmul+1
  1796   002880  C524  F519         	movff	___flmul@prod+2,??___flmul+2
  1797   002884  C525  F51A         	movff	___flmul@prod+3,??___flmul+3
  1798   002888  341A               	rlcf	(??___flmul+3)^(0+1280),w,c
  1799   00288A  321A               	rrcf	(??___flmul+3)^(0+1280),f,c
  1800   00288C  3219               	rrcf	(??___flmul+2)^(0+1280),f,c
  1801   00288E  3218               	rrcf	(??___flmul+1)^(0+1280),f,c
  1802   002890  3217               	rrcf	??___flmul^(0+1280),f,c
  1803   002892  C517  F522         	movff	??___flmul,___flmul@prod
  1804   002896  C518  F523         	movff	??___flmul+1,___flmul@prod+1
  1805   00289A  C519  F524         	movff	??___flmul+2,___flmul@prod+2
  1806   00289E  C51A  F525         	movff	??___flmul+3,___flmul@prod+3
  1807   0028A2  4A26               	infsnz	___flmul@temp^(0+1280),f,c
  1808   0028A4  2A27               	incf	(___flmul@temp+1)^(0+1280),f,c
  1809   0028A6                     l1752:
  1810   0028A6  BE27               	btfsc	(___flmul@temp+1)^(0+1280),7,c
  1811   0028A8  EF5E  F014         	goto	u1021
  1812   0028AC  5027               	movf	(___flmul@temp+1)^(0+1280),w,c
  1813   0028AE  E108               	bnz	u1020
  1814   0028B0  2826               	incf	___flmul@temp^(0+1280),w,c
  1815   0028B2  A0D8               	btfss	status,0,c
  1816   0028B4  EF5E  F014         	goto	u1021
  1817   0028B8  EF60  F014         	goto	u1020
  1818   0028BC                     u1021:
  1819   0028BC  EF6A  F014         	goto	l1756
  1820   0028C0                     u1020:
  1821   0028C0  0E00               	movlw	0
  1822   0028C2  6E22               	movwf	___flmul@prod^(0+1280),c
  1823   0028C4  0E00               	movlw	0
  1824   0028C6  6E23               	movwf	(___flmul@prod+1)^(0+1280),c
  1825   0028C8  0E80               	movlw	128
  1826   0028CA  6E24               	movwf	(___flmul@prod+2)^(0+1280),c
  1827   0028CC  0E7F               	movlw	127
  1828   0028CE  6E25               	movwf	(___flmul@prod+3)^(0+1280),c
  1829   0028D0  EF98  F014         	goto	l1768
  1830   0028D4                     l1756:
  1831   0028D4  BE27               	btfsc	(___flmul@temp+1)^(0+1280),7,c
  1832   0028D6  EF77  F014         	goto	u1030
  1833   0028DA  5027               	movf	(___flmul@temp+1)^(0+1280),w,c
  1834   0028DC  E106               	bnz	u1031
  1835   0028DE  0426               	decf	___flmul@temp^(0+1280),w,c
  1836   0028E0  B0D8               	btfsc	status,0,c
  1837   0028E2  EF75  F014         	goto	u1031
  1838   0028E6  EF77  F014         	goto	u1030
  1839   0028EA                     u1031:
  1840   0028EA  EF83  F014         	goto	l842
  1841   0028EE                     u1030:
  1842   0028EE  0E00               	movlw	0
  1843   0028F0  6E22               	movwf	___flmul@prod^(0+1280),c
  1844   0028F2  0E00               	movlw	0
  1845   0028F4  6E23               	movwf	(___flmul@prod+1)^(0+1280),c
  1846   0028F6  0E00               	movlw	0
  1847   0028F8  6E24               	movwf	(___flmul@prod+2)^(0+1280),c
  1848   0028FA  0E00               	movlw	0
  1849   0028FC  6E25               	movwf	(___flmul@prod+3)^(0+1280),c
  1850   0028FE  0E00               	movlw	0
  1851   002900  6E1B               	movwf	___flmul@sign^(0+1280),c
  1852   002902  EF98  F014         	goto	l1768
  1853   002906                     l842:
  1854   002906  C526  F521         	movff	___flmul@temp,___flmul@bexp
  1855   00290A  0EFF               	movlw	255
  1856   00290C  1622               	andwf	___flmul@prod^(0+1280),f,c
  1857   00290E  0EFF               	movlw	255
  1858   002910  1623               	andwf	(___flmul@prod+1)^(0+1280),f,c
  1859   002912  0E7F               	movlw	127
  1860   002914  1624               	andwf	(___flmul@prod+2)^(0+1280),f,c
  1861   002916  0E00               	movlw	0
  1862   002918  1625               	andwf	(___flmul@prod+3)^(0+1280),f,c
  1863   00291A  A021               	btfss	___flmul@bexp^(0+1280),0,c
  1864   00291C  EF92  F014         	goto	u1041
  1865   002920  EF94  F014         	goto	u1040
  1866   002924                     u1041:
  1867   002924  EF95  F014         	goto	l1766
  1868   002928                     u1040:
  1869   002928  8E24               	bsf	(___flmul@prod+2)^(0+1280),7,c
  1870   00292A                     l1766:
  1871   00292A  90D8               	bcf	status,0,c
  1872   00292C  3021               	rrcf	___flmul@bexp^(0+1280),w,c
  1873   00292E  6E25               	movwf	(___flmul@prod+3)^(0+1280),c
  1874   002930                     l1768:
  1875   002930  501B               	movf	___flmul@sign^(0+1280),w,c
  1876   002932  1225               	iorwf	(___flmul@prod+3)^(0+1280),f,c
  1877   002934  C522  F50F         	movff	___flmul@prod,?___flmul
  1878   002938  C523  F510         	movff	___flmul@prod+1,?___flmul+1
  1879   00293C  C524  F511         	movff	___flmul@prod+2,?___flmul+2
  1880   002940  C525  F512         	movff	___flmul@prod+3,?___flmul+3
  1881   002944                     l829:
  1882   002944  0012               	return		;funcret
  1883   002946                     __end_of___flmul:
  1884                           	callstack 0
  1885                           
  1886 ;; *************** function _POS_CURSOR *****************
  1887 ;; Defined at:
  1888 ;;		line 9 in file "LCD.c"
  1889 ;; Parameters:    Size  Location     Type
  1890 ;;  fila            1    wreg     unsigned char 
  1891 ;;  columna         1    3[COMRAM] unsigned char 
  1892 ;; Auto vars:     Size  Location     Type
  1893 ;;  fila            1    4[COMRAM] unsigned char 
  1894 ;; Return value:  Size  Location     Type
  1895 ;;                  1    wreg      void 
  1896 ;; Registers used:
  1897 ;;		wreg, status,2, status,0, cstack
  1898 ;; Tracked objects:
  1899 ;;		On entry : 0/0
  1900 ;;		On exit  : 0/0
  1901 ;;		Unchanged: 0/0
  1902 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1903 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1904 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1905 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1906 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1907 ;;Total ram usage:        2 bytes
  1908 ;; Hardware stack levels used: 1
  1909 ;; Hardware stack levels required when called: 3
  1910 ;; This function calls:
  1911 ;;		_ENVIA_LCD_CMD
  1912 ;; This function is called by:
  1913 ;;		_main
  1914 ;; This function uses a non-reentrant model
  1915 ;;
  1916                           
  1917                           	psect	text8
  1918   002E2A                     __ptext8:
  1919                           	callstack 0
  1920   002E2A                     _POS_CURSOR:
  1921                           	callstack 123
  1922                           
  1923                           ;incstack = 0
  1924                           ;POS_CURSOR@fila stored from wreg
  1925   002E2A  6E05               	movwf	POS_CURSOR@fila^(0+1280),c
  1926   002E2C                     
  1927                           ;LCD.c: 9: void POS_CURSOR(unsigned char fila,unsigned char columna);LCD.c: 10: {;LCD.c:
      +                           11:  if(fila == 1)
  1928   002E2C  0405               	decf	POS_CURSOR@fila^(0+1280),w,c
  1929   002E2E  A4D8               	btfss	status,2,c
  1930   002E30  EF1C  F017         	goto	u811
  1931   002E34  EF1E  F017         	goto	u810
  1932   002E38                     u811:
  1933   002E38  EF24  F017         	goto	l1620
  1934   002E3C                     u810:
  1935   002E3C                     
  1936                           ;LCD.c: 12:  {;LCD.c: 13:   ENVIA_LCD_CMD(0x80+columna);
  1937   002E3C  5004               	movf	POS_CURSOR@columna^(0+1280),w,c
  1938   002E3E  0F80               	addlw	128
  1939   002E40  EC65  F018         	call	_ENVIA_LCD_CMD
  1940                           
  1941                           ;LCD.c: 14:  }
  1942   002E44  EF51  F017         	goto	l109
  1943   002E48                     l1620:
  1944   002E48  0E02               	movlw	2
  1945   002E4A  1805               	xorwf	POS_CURSOR@fila^(0+1280),w,c
  1946   002E4C  A4D8               	btfss	status,2,c
  1947   002E4E  EF2B  F017         	goto	u821
  1948   002E52  EF2D  F017         	goto	u820
  1949   002E56                     u821:
  1950   002E56  EF33  F017         	goto	l1624
  1951   002E5A                     u820:
  1952   002E5A                     
  1953                           ;LCD.c: 16:  {;LCD.c: 17:   ENVIA_LCD_CMD(0xC0+columna);
  1954   002E5A  5004               	movf	POS_CURSOR@columna^(0+1280),w,c
  1955   002E5C  0FC0               	addlw	192
  1956   002E5E  EC65  F018         	call	_ENVIA_LCD_CMD
  1957                           
  1958                           ;LCD.c: 18:  }
  1959   002E62  EF51  F017         	goto	l109
  1960   002E66                     l1624:
  1961   002E66  0E03               	movlw	3
  1962   002E68  1805               	xorwf	POS_CURSOR@fila^(0+1280),w,c
  1963   002E6A  A4D8               	btfss	status,2,c
  1964   002E6C  EF3A  F017         	goto	u831
  1965   002E70  EF3C  F017         	goto	u830
  1966   002E74                     u831:
  1967   002E74  EF42  F017         	goto	l1628
  1968   002E78                     u830:
  1969   002E78                     
  1970                           ;LCD.c: 20:  {;LCD.c: 21:   ENVIA_LCD_CMD(0x94+columna);
  1971   002E78  5004               	movf	POS_CURSOR@columna^(0+1280),w,c
  1972   002E7A  0F94               	addlw	148
  1973   002E7C  EC65  F018         	call	_ENVIA_LCD_CMD
  1974                           
  1975                           ;LCD.c: 22:  }
  1976   002E80  EF51  F017         	goto	l109
  1977   002E84                     l1628:
  1978   002E84  0E04               	movlw	4
  1979   002E86  1805               	xorwf	POS_CURSOR@fila^(0+1280),w,c
  1980   002E88  A4D8               	btfss	status,2,c
  1981   002E8A  EF49  F017         	goto	u841
  1982   002E8E  EF4B  F017         	goto	u840
  1983   002E92                     u841:
  1984   002E92  EF51  F017         	goto	l105
  1985   002E96                     u840:
  1986   002E96                     
  1987                           ;LCD.c: 24:  {;LCD.c: 25:   ENVIA_LCD_CMD(0xD4+columna);
  1988   002E96  5004               	movf	POS_CURSOR@columna^(0+1280),w,c
  1989   002E98  0FD4               	addlw	212
  1990   002E9A  EC65  F018         	call	_ENVIA_LCD_CMD
  1991   002E9E  EF51  F017         	goto	l109
  1992   002EA2                     l105:
  1993   002EA2                     l109:
  1994   002EA2  0012               	return		;funcret
  1995   002EA4                     __end_of_POS_CURSOR:
  1996                           	callstack 0
  1997                           
  1998 ;; *************** function _LCD_INIT *****************
  1999 ;; Defined at:
  2000 ;;		line 196 in file "LCD.c"
  2001 ;; Parameters:    Size  Location     Type
  2002 ;;		None
  2003 ;; Auto vars:     Size  Location     Type
  2004 ;;		None
  2005 ;; Return value:  Size  Location     Type
  2006 ;;                  1    wreg      void 
  2007 ;; Registers used:
  2008 ;;		wreg, status,2, status,0, cstack
  2009 ;; Tracked objects:
  2010 ;;		On entry : 0/0
  2011 ;;		On exit  : 0/0
  2012 ;;		Unchanged: 0/0
  2013 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2014 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2015 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2016 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2017 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2018 ;;Total ram usage:        1 bytes
  2019 ;; Hardware stack levels used: 1
  2020 ;; Hardware stack levels required when called: 4
  2021 ;; This function calls:
  2022 ;;		_BORRAR_LCD
  2023 ;;		_CURSOR_HOME
  2024 ;;		_CURSOR_ONOFF
  2025 ;;		_LCD_CONFIG
  2026 ;; This function is called by:
  2027 ;;		_main
  2028 ;; This function uses a non-reentrant model
  2029 ;;
  2030                           
  2031                           	psect	text9
  2032   003054                     __ptext9:
  2033                           	callstack 0
  2034   003054                     _LCD_INIT:
  2035                           	callstack 122
  2036   003054                     
  2037                           ;LCD.c: 197:     TRISD = 0x00;
  2038   003054  0E00               	movlw	0
  2039   003056  6EC9               	movwf	201,c	;volatile
  2040                           
  2041                           ;LCD.c: 198:     ANSELD = 0x00;
  2042   003058  0E00               	movlw	0
  2043   00305A  0104               	movlb	4	; () banked
  2044   00305C  6F18               	movwf	24,b	;volatile
  2045   00305E                     
  2046                           ; BSR set to: 4
  2047                           ;LCD.c: 199:     _delay((unsigned long)((15)*(16000000UL/4000.0)));
  2048   00305E  0E4E               	movlw	78
  2049   003060  6E05               	movwf	??_LCD_INIT^(0+1280),c
  2050   003062  0EEB               	movlw	235
  2051   003064                     u1227:
  2052   003064  2EE8               	decfsz	wreg,f,c
  2053   003066  D7FE               	bra	u1227
  2054   003068  2E05               	decfsz	??_LCD_INIT^(0+1280),f,c
  2055   00306A  D7FC               	bra	u1227
  2056   00306C  0000               	nop	
  2057   00306E                     
  2058                           ;LCD.c: 200:     LCD_CONFIG();
  2059   00306E  ECB8  F017         	call	_LCD_CONFIG	;wreg free
  2060   003072                     
  2061                           ;LCD.c: 201:     _delay((unsigned long)((15)*(16000000UL/4000.0)));
  2062   003072  0E4E               	movlw	78
  2063   003074  6E05               	movwf	??_LCD_INIT^(0+1280),c
  2064   003076  0EEB               	movlw	235
  2065   003078                     u1237:
  2066   003078  2EE8               	decfsz	wreg,f,c
  2067   00307A  D7FE               	bra	u1237
  2068   00307C  2E05               	decfsz	??_LCD_INIT^(0+1280),f,c
  2069   00307E  D7FC               	bra	u1237
  2070   003080  0000               	nop	
  2071   003082                     
  2072                           ;LCD.c: 202:     BORRAR_LCD();
  2073   003082  ECE6  F018         	call	_BORRAR_LCD	;wreg free
  2074   003086                     
  2075                           ;LCD.c: 203:     CURSOR_HOME();
  2076   003086  ECE2  F018         	call	_CURSOR_HOME	;wreg free
  2077   00308A                     
  2078                           ;LCD.c: 204:     CURSOR_ONOFF(1);
  2079   00308A  0E01               	movlw	1
  2080   00308C  EC99  F018         	call	_CURSOR_ONOFF
  2081   003090  0012               	return		;funcret
  2082   003092                     __end_of_LCD_INIT:
  2083                           	callstack 0
  2084                           
  2085 ;; *************** function _LCD_CONFIG *****************
  2086 ;; Defined at:
  2087 ;;		line 113 in file "LCD.c"
  2088 ;; Parameters:    Size  Location     Type
  2089 ;;		None
  2090 ;; Auto vars:     Size  Location     Type
  2091 ;;		None
  2092 ;; Return value:  Size  Location     Type
  2093 ;;                  1    wreg      void 
  2094 ;; Registers used:
  2095 ;;		wreg, status,2, status,0, cstack
  2096 ;; Tracked objects:
  2097 ;;		On entry : 0/0
  2098 ;;		On exit  : 0/0
  2099 ;;		Unchanged: 0/0
  2100 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2101 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2102 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2103 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2104 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2105 ;;Total ram usage:        1 bytes
  2106 ;; Hardware stack levels used: 1
  2107 ;; Hardware stack levels required when called: 3
  2108 ;; This function calls:
  2109 ;;		_ENVIA_LCD_CMD
  2110 ;;		_ENVIA_NIBBLE
  2111 ;; This function is called by:
  2112 ;;		_LCD_INIT
  2113 ;; This function uses a non-reentrant model
  2114 ;;
  2115                           
  2116                           	psect	text10
  2117   002F70                     __ptext10:
  2118                           	callstack 0
  2119   002F70                     _LCD_CONFIG:
  2120                           	callstack 122
  2121   002F70                     
  2122                           ;LCD.c: 115:  LATDbits.LATD0 = 0;
  2123   002F70  90C1               	bcf	193,0,c	;volatile
  2124                           
  2125                           ;LCD.c: 116:  LATDbits.LATD1 = 0;
  2126   002F72  92C1               	bcf	193,1,c	;volatile
  2127   002F74                     
  2128                           ;LCD.c: 117:  ENVIA_NIBBLE(0x30);
  2129   002F74  0E30               	movlw	48
  2130   002F76  ECD4  F018         	call	_ENVIA_NIBBLE
  2131   002F7A                     
  2132                           ;LCD.c: 118:     _delay((unsigned long)((2)*(16000000UL/4000.0)));
  2133   002F7A  0E0B               	movlw	11
  2134   002F7C  6E04               	movwf	??_LCD_CONFIG^(0+1280),c
  2135   002F7E  0E62               	movlw	98
  2136   002F80                     u1247:
  2137   002F80  2EE8               	decfsz	wreg,f,c
  2138   002F82  D7FE               	bra	u1247
  2139   002F84  2E04               	decfsz	??_LCD_CONFIG^(0+1280),f,c
  2140   002F86  D7FC               	bra	u1247
  2141   002F88  D000               	nop2	
  2142   002F8A                     
  2143                           ;LCD.c: 119:  ENVIA_NIBBLE(0x30);
  2144   002F8A  0E30               	movlw	48
  2145   002F8C  ECD4  F018         	call	_ENVIA_NIBBLE
  2146                           
  2147                           ;LCD.c: 120:     _delay((unsigned long)((100)*(16000000UL/4000000.0)));
  2148   002F90  0E85               	movlw	133
  2149   002F92                     u1257:
  2150   002F92  2EE8               	decfsz	wreg,f,c
  2151   002F94  D7FE               	bra	u1257
  2152   002F96  0000               	nop	
  2153   002F98                     
  2154                           ;LCD.c: 121:     ENVIA_NIBBLE(0x30);
  2155   002F98  0E30               	movlw	48
  2156   002F9A  ECD4  F018         	call	_ENVIA_NIBBLE
  2157   002F9E                     
  2158                           ;LCD.c: 122:  ENVIA_NIBBLE(0x20);
  2159   002F9E  0E20               	movlw	32
  2160   002FA0  ECD4  F018         	call	_ENVIA_NIBBLE
  2161   002FA4                     
  2162                           ;LCD.c: 123:  ENVIA_LCD_CMD(0x01);
  2163   002FA4  0E01               	movlw	1
  2164   002FA6  EC65  F018         	call	_ENVIA_LCD_CMD
  2165   002FAA                     
  2166                           ;LCD.c: 124:  ENVIA_LCD_CMD(0x28);
  2167   002FAA  0E28               	movlw	40
  2168   002FAC  EC65  F018         	call	_ENVIA_LCD_CMD
  2169   002FB0                     
  2170                           ;LCD.c: 125:  ENVIA_LCD_CMD(0x0F);
  2171   002FB0  0E0F               	movlw	15
  2172   002FB2  EC65  F018         	call	_ENVIA_LCD_CMD
  2173   002FB6                     
  2174                           ;LCD.c: 126:  ENVIA_LCD_CMD(0x06);
  2175   002FB6  0E06               	movlw	6
  2176   002FB8  EC65  F018         	call	_ENVIA_LCD_CMD
  2177   002FBC                     
  2178                           ;LCD.c: 127:  ENVIA_LCD_CMD(0x01);
  2179   002FBC  0E01               	movlw	1
  2180   002FBE  EC65  F018         	call	_ENVIA_LCD_CMD
  2181   002FC2  0012               	return		;funcret
  2182   002FC4                     __end_of_LCD_CONFIG:
  2183                           	callstack 0
  2184                           
  2185 ;; *************** function _CURSOR_ONOFF *****************
  2186 ;; Defined at:
  2187 ;;		line 66 in file "LCD.c"
  2188 ;; Parameters:    Size  Location     Type
  2189 ;;  estado          1    wreg     unsigned char 
  2190 ;; Auto vars:     Size  Location     Type
  2191 ;;  estado          1    3[COMRAM] unsigned char 
  2192 ;; Return value:  Size  Location     Type
  2193 ;;                  1    wreg      void 
  2194 ;; Registers used:
  2195 ;;		wreg, status,2, status,0, cstack
  2196 ;; Tracked objects:
  2197 ;;		On entry : 0/0
  2198 ;;		On exit  : 0/0
  2199 ;;		Unchanged: 0/0
  2200 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2201 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2202 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2203 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2204 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2205 ;;Total ram usage:        1 bytes
  2206 ;; Hardware stack levels used: 1
  2207 ;; Hardware stack levels required when called: 3
  2208 ;; This function calls:
  2209 ;;		_ENVIA_LCD_CMD
  2210 ;; This function is called by:
  2211 ;;		_LCD_INIT
  2212 ;; This function uses a non-reentrant model
  2213 ;;
  2214                           
  2215                           	psect	text11
  2216   003132                     __ptext11:
  2217                           	callstack 0
  2218   003132                     _CURSOR_ONOFF:
  2219                           	callstack 122
  2220                           
  2221                           ;incstack = 0
  2222                           ;CURSOR_ONOFF@estado stored from wreg
  2223   003132  6E04               	movwf	CURSOR_ONOFF@estado^(0+1280),c
  2224   003134                     
  2225                           ;LCD.c: 66: void CURSOR_ONOFF(unsigned char estado);LCD.c: 67: {;LCD.c: 68:  if(estado =
      +                          = 0) ENVIA_LCD_CMD(0x0E);
  2226   003134  5004               	movf	CURSOR_ONOFF@estado^(0+1280),w,c
  2227   003136  A4D8               	btfss	status,2,c
  2228   003138  EFA0  F018         	goto	u21
  2229   00313C  EFA2  F018         	goto	u20
  2230   003140                     u21:
  2231   003140  EFA5  F018         	goto	l986
  2232   003144                     u20:
  2233   003144  0E0E               	movlw	14
  2234   003146  EC65  F018         	call	_ENVIA_LCD_CMD
  2235   00314A                     l986:
  2236                           
  2237                           ;LCD.c: 69:  if(estado == 1) ENVIA_LCD_CMD(0x0C);
  2238   00314A  0404               	decf	CURSOR_ONOFF@estado^(0+1280),w,c
  2239   00314C  A4D8               	btfss	status,2,c
  2240   00314E  EFAB  F018         	goto	u31
  2241   003152  EFAD  F018         	goto	u30
  2242   003156                     u31:
  2243   003156  EFB0  F018         	goto	l139
  2244   00315A                     u30:
  2245   00315A  0E0C               	movlw	12
  2246   00315C  EC65  F018         	call	_ENVIA_LCD_CMD
  2247   003160                     l139:
  2248   003160  0012               	return		;funcret
  2249   003162                     __end_of_CURSOR_ONOFF:
  2250                           	callstack 0
  2251                           
  2252 ;; *************** function _CURSOR_HOME *****************
  2253 ;; Defined at:
  2254 ;;		line 41 in file "LCD.c"
  2255 ;; Parameters:    Size  Location     Type
  2256 ;;		None
  2257 ;; Auto vars:     Size  Location     Type
  2258 ;;		None
  2259 ;; Return value:  Size  Location     Type
  2260 ;;                  1    wreg      void 
  2261 ;; Registers used:
  2262 ;;		wreg, status,2, status,0, cstack
  2263 ;; Tracked objects:
  2264 ;;		On entry : 0/0
  2265 ;;		On exit  : 0/0
  2266 ;;		Unchanged: 0/0
  2267 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2268 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2269 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2270 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2271 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2272 ;;Total ram usage:        0 bytes
  2273 ;; Hardware stack levels used: 1
  2274 ;; Hardware stack levels required when called: 3
  2275 ;; This function calls:
  2276 ;;		_ENVIA_LCD_CMD
  2277 ;; This function is called by:
  2278 ;;		_LCD_INIT
  2279 ;; This function uses a non-reentrant model
  2280 ;;
  2281                           
  2282                           	psect	text12
  2283   0031C4                     __ptext12:
  2284                           	callstack 0
  2285   0031C4                     _CURSOR_HOME:
  2286                           	callstack 122
  2287   0031C4                     
  2288                           ;LCD.c: 43:  ENVIA_LCD_CMD(0x02);
  2289   0031C4  0E02               	movlw	2
  2290   0031C6  EC65  F018         	call	_ENVIA_LCD_CMD
  2291   0031CA  0012               	return		;funcret
  2292   0031CC                     __end_of_CURSOR_HOME:
  2293                           	callstack 0
  2294                           
  2295 ;; *************** function _BORRAR_LCD *****************
  2296 ;; Defined at:
  2297 ;;		line 108 in file "LCD.c"
  2298 ;; Parameters:    Size  Location     Type
  2299 ;;		None
  2300 ;; Auto vars:     Size  Location     Type
  2301 ;;		None
  2302 ;; Return value:  Size  Location     Type
  2303 ;;                  1    wreg      void 
  2304 ;; Registers used:
  2305 ;;		wreg, status,2, status,0, cstack
  2306 ;; Tracked objects:
  2307 ;;		On entry : 0/0
  2308 ;;		On exit  : 0/0
  2309 ;;		Unchanged: 0/0
  2310 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2311 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2312 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2313 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2314 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2315 ;;Total ram usage:        0 bytes
  2316 ;; Hardware stack levels used: 1
  2317 ;; Hardware stack levels required when called: 3
  2318 ;; This function calls:
  2319 ;;		_ENVIA_LCD_CMD
  2320 ;; This function is called by:
  2321 ;;		_LCD_INIT
  2322 ;; This function uses a non-reentrant model
  2323 ;;
  2324                           
  2325                           	psect	text13
  2326   0031CC                     __ptext13:
  2327                           	callstack 0
  2328   0031CC                     _BORRAR_LCD:
  2329                           	callstack 122
  2330   0031CC                     
  2331                           ;LCD.c: 110:  ENVIA_LCD_CMD(0x01);
  2332   0031CC  0E01               	movlw	1
  2333   0031CE  EC65  F018         	call	_ENVIA_LCD_CMD
  2334   0031D2  0012               	return		;funcret
  2335   0031D4                     __end_of_BORRAR_LCD:
  2336                           	callstack 0
  2337                           
  2338 ;; *************** function _ENVIA_LCD_CMD *****************
  2339 ;; Defined at:
  2340 ;;		line 140 in file "LCD.c"
  2341 ;; Parameters:    Size  Location     Type
  2342 ;;  dato            1    wreg     unsigned char 
  2343 ;; Auto vars:     Size  Location     Type
  2344 ;;  dato            1    1[COMRAM] unsigned char 
  2345 ;;  aux             1    2[COMRAM] unsigned char 
  2346 ;; Return value:  Size  Location     Type
  2347 ;;                  1    wreg      void 
  2348 ;; Registers used:
  2349 ;;		wreg, status,2, status,0, cstack
  2350 ;; Tracked objects:
  2351 ;;		On entry : 0/0
  2352 ;;		On exit  : 0/0
  2353 ;;		Unchanged: 0/0
  2354 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2355 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2356 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2357 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2358 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2359 ;;Total ram usage:        2 bytes
  2360 ;; Hardware stack levels used: 1
  2361 ;; Hardware stack levels required when called: 2
  2362 ;; This function calls:
  2363 ;;		_ENVIA_NIBBLE
  2364 ;;		_LEER_LCD
  2365 ;; This function is called by:
  2366 ;;		_POS_CURSOR
  2367 ;;		_CURSOR_HOME
  2368 ;;		_CURSOR_ONOFF
  2369 ;;		_BORRAR_LCD
  2370 ;;		_LCD_CONFIG
  2371 ;;		_BLINK_CURSOR
  2372 ;;		_DISPLAY_ONOFF
  2373 ;;		_CURSOR_SHIFTLEFT
  2374 ;;		_CURSOR_SHIFTRIGHT
  2375 ;;		_DISPLAY_SHIFTLEFT
  2376 ;;		_DISPLAY_SHIFTRIGHT
  2377 ;;		_GENERACARACTER
  2378 ;; This function uses a non-reentrant model
  2379 ;;
  2380                           
  2381                           	psect	text14
  2382   0030CA                     __ptext14:
  2383                           	callstack 0
  2384   0030CA                     _ENVIA_LCD_CMD:
  2385                           	callstack 123
  2386                           
  2387                           ;incstack = 0
  2388                           ;ENVIA_LCD_CMD@dato stored from wreg
  2389   0030CA  6E02               	movwf	ENVIA_LCD_CMD@dato^(0+1280),c
  2390   0030CC                     
  2391                           ;LCD.c: 140: void ENVIA_LCD_CMD(unsigned char dato);LCD.c: 141: {;LCD.c: 142:  unsigned 
      +                          char aux;;LCD.c: 143:  LATDbits.LATD0 = 0;
  2392   0030CC  90C1               	bcf	193,0,c	;volatile
  2393   0030CE                     
  2394                           ;LCD.c: 144:  LEER_LCD();
  2395   0030CE  EC52  F017         	call	_LEER_LCD	;wreg free
  2396   0030D2                     
  2397                           ;LCD.c: 145:  TRISD = 0b00000000;
  2398   0030D2  0E00               	movlw	0
  2399   0030D4  6EC9               	movwf	201,c	;volatile
  2400   0030D6                     
  2401                           ;LCD.c: 146:     _delay((unsigned long)((100)*(16000000UL/4000000.0)));
  2402   0030D6  0E85               	movlw	133
  2403   0030D8                     u1267:
  2404   0030D8  2EE8               	decfsz	wreg,f,c
  2405   0030DA  D7FE               	bra	u1267
  2406   0030DC  0000               	nop	
  2407   0030DE                     
  2408                           ;LCD.c: 147:     LATDbits.LATD1 = 0;
  2409   0030DE  92C1               	bcf	193,1,c	;volatile
  2410   0030E0                     
  2411                           ;LCD.c: 148:  LATDbits.LATD2 = 0;
  2412   0030E0  94C1               	bcf	193,2,c	;volatile
  2413   0030E2                     
  2414                           ;LCD.c: 149:  LATDbits.LATD0 = 0;
  2415   0030E2  90C1               	bcf	193,0,c	;volatile
  2416   0030E4                     
  2417                           ;LCD.c: 150:  aux = dato & 0xF0;
  2418   0030E4  5002               	movf	ENVIA_LCD_CMD@dato^(0+1280),w,c
  2419   0030E6  0BF0               	andlw	240
  2420   0030E8  6E03               	movwf	ENVIA_LCD_CMD@aux^(0+1280),c
  2421   0030EA                     
  2422                           ;LCD.c: 151:  ENVIA_NIBBLE(aux);
  2423   0030EA  5003               	movf	ENVIA_LCD_CMD@aux^(0+1280),w,c
  2424   0030EC  ECD4  F018         	call	_ENVIA_NIBBLE
  2425   0030F0                     
  2426                           ;LCD.c: 152:  aux = dato<<4;
  2427   0030F0  3802               	swapf	ENVIA_LCD_CMD@dato^(0+1280),w,c
  2428   0030F2  0BF0               	andlw	240
  2429   0030F4  6E03               	movwf	ENVIA_LCD_CMD@aux^(0+1280),c
  2430   0030F6                     
  2431                           ;LCD.c: 153:  ENVIA_NIBBLE(aux);
  2432   0030F6  5003               	movf	ENVIA_LCD_CMD@aux^(0+1280),w,c
  2433   0030F8  ECD4  F018         	call	_ENVIA_NIBBLE
  2434   0030FC  0012               	return		;funcret
  2435   0030FE                     __end_of_ENVIA_LCD_CMD:
  2436                           	callstack 0
  2437                           
  2438 ;; *************** function _ESCRIBE_MENSAJE2 *****************
  2439 ;; Defined at:
  2440 ;;		line 81 in file "LCD.c"
  2441 ;; Parameters:    Size  Location     Type
  2442 ;;  cadena          1    3[COMRAM] PTR const unsigned char 
  2443 ;;		 -> STR_2(11), STR_1(14), 
  2444 ;; Auto vars:     Size  Location     Type
  2445 ;;  i               1    6[COMRAM] unsigned char 
  2446 ;;  tam             1    5[COMRAM] unsigned char 
  2447 ;; Return value:  Size  Location     Type
  2448 ;;                  1    wreg      void 
  2449 ;; Registers used:
  2450 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2451 ;; Tracked objects:
  2452 ;;		On entry : 0/0
  2453 ;;		On exit  : 0/0
  2454 ;;		Unchanged: 0/0
  2455 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2456 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2457 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2458 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2459 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2460 ;;Total ram usage:        4 bytes
  2461 ;; Hardware stack levels used: 1
  2462 ;; Hardware stack levels required when called: 3
  2463 ;; This function calls:
  2464 ;;		_ENVIA_CHAR
  2465 ;;		_strlen
  2466 ;; This function is called by:
  2467 ;;		_main
  2468 ;; This function uses a non-reentrant model
  2469 ;;
  2470                           
  2471                           	psect	text15
  2472   003010                     __ptext15:
  2473                           	callstack 0
  2474   003010                     _ESCRIBE_MENSAJE2:
  2475                           	callstack 123
  2476   003010                     
  2477                           ;LCD.c: 81: void ESCRIBE_MENSAJE2(const char *cadena);LCD.c: 82: {;LCD.c: 83:     unsign
      +                          ed char tam;;LCD.c: 84:     tam = strlen(cadena);
  2478   003010  C504  F501         	movff	ESCRIBE_MENSAJE2@cadena,strlen@s
  2479   003014  EC49  F018         	call	_strlen	;wreg free
  2480   003018  5001               	movf	?_strlen^(0+1280),w,c
  2481   00301A  6E06               	movwf	ESCRIBE_MENSAJE2@tam^(0+1280),c
  2482   00301C                     
  2483                           ;LCD.c: 86:  for(i = 0; i<tam; i++)
  2484   00301C  0E00               	movlw	0
  2485   00301E  6E07               	movwf	ESCRIBE_MENSAJE2@i^(0+1280),c
  2486   003020  EF20  F018         	goto	l1642
  2487   003024                     l1638:
  2488                           
  2489                           ;LCD.c: 87:  {;LCD.c: 88:   ENVIA_CHAR(cadena[i]);
  2490   003024  5004               	movf	ESCRIBE_MENSAJE2@cadena^(0+1280),w,c
  2491   003026  2407               	addwf	ESCRIBE_MENSAJE2@i^(0+1280),w,c
  2492   003028  6E05               	movwf	??_ESCRIBE_MENSAJE2^(0+1280),c
  2493   00302A  C505  F4F6         	movff	??_ESCRIBE_MENSAJE2,tblptrl
  2494   00302E                     	if	1	;There is more than 1 active tblptr byte
  2495   00302E  0E25               	movlw	high __smallconst
  2496   003030  6EF7               	movwf	tblptrh,c
  2497   003032                     	endif
  2498   003032                     	if	0	;tblptru may be non-zero
  2499   003032                     	endif
  2500   003032                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2501   003032  0E00               	movlw	low (__smallconst shr (0+16))
  2502   003034  6EF8               	movwf	tblptru,c
  2503   003036                     	endif
  2504   003036  0008               	tblrd		*
  2505   003038  50F5               	movf	tablat,w,c
  2506   00303A  EC7F  F018         	call	_ENVIA_CHAR
  2507   00303E                     
  2508                           ;LCD.c: 89:  }
  2509   00303E  2A07               	incf	ESCRIBE_MENSAJE2@i^(0+1280),f,c
  2510   003040                     l1642:
  2511   003040  5006               	movf	ESCRIBE_MENSAJE2@tam^(0+1280),w,c
  2512   003042  5C07               	subwf	ESCRIBE_MENSAJE2@i^(0+1280),w,c
  2513   003044  A0D8               	btfss	status,0,c
  2514   003046  EF27  F018         	goto	u851
  2515   00304A  EF29  F018         	goto	u850
  2516   00304E                     u851:
  2517   00304E  EF12  F018         	goto	l1638
  2518   003052                     u850:
  2519   003052  0012               	return		;funcret
  2520   003054                     __end_of_ESCRIBE_MENSAJE2:
  2521                           	callstack 0
  2522                           
  2523 ;; *************** function _strlen *****************
  2524 ;; Defined at:
  2525 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\strlen.c"
  2526 ;; Parameters:    Size  Location     Type
  2527 ;;  s               1    0[COMRAM] PTR const unsigned char 
  2528 ;;		 -> STR_2(11), STR_1(14), 
  2529 ;; Auto vars:     Size  Location     Type
  2530 ;;  a               1    2[COMRAM] PTR const unsigned char 
  2531 ;;		 -> STR_2(11), STR_1(14), 
  2532 ;; Return value:  Size  Location     Type
  2533 ;;                  2    0[COMRAM] unsigned int 
  2534 ;; Registers used:
  2535 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  2536 ;; Tracked objects:
  2537 ;;		On entry : 0/0
  2538 ;;		On exit  : 0/0
  2539 ;;		Unchanged: 0/0
  2540 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2541 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2542 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2543 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2544 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2545 ;;Total ram usage:        3 bytes
  2546 ;; Hardware stack levels used: 1
  2547 ;; Hardware stack levels required when called: 1
  2548 ;; This function calls:
  2549 ;;		Nothing
  2550 ;; This function is called by:
  2551 ;;		_ESCRIBE_MENSAJE2
  2552 ;; This function uses a non-reentrant model
  2553 ;;
  2554                           
  2555                           	psect	text16
  2556   003092                     __ptext16:
  2557                           	callstack 0
  2558   003092                     _strlen:
  2559                           	callstack 124
  2560   003092  C501  F503         	movff	strlen@s,strlen@a
  2561   003096  EF4E  F018         	goto	l1528
  2562   00309A                     l1526:
  2563   00309A  2A01               	incf	strlen@s^(0+1280),f,c
  2564   00309C                     l1528:
  2565   00309C  C501  F4F6         	movff	strlen@s,tblptrl
  2566   0030A0                     	if	1	;There is more than 1 active tblptr byte
  2567   0030A0  0E25               	movlw	high __smallconst
  2568   0030A2  6EF7               	movwf	tblptrh,c
  2569   0030A4                     	endif
  2570   0030A4                     	if	0	;tblptru may be non-zero
  2571   0030A4                     	endif
  2572   0030A4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2573   0030A4  0E00               	movlw	low (__smallconst shr (0+16))
  2574   0030A6  6EF8               	movwf	tblptru,c
  2575   0030A8                     	endif
  2576   0030A8  0008               	tblrd		*
  2577   0030AA  50F5               	movf	tablat,w,c
  2578   0030AC  0900               	iorlw	0
  2579   0030AE  A4D8               	btfss	status,2,c
  2580   0030B0  EF5C  F018         	goto	u681
  2581   0030B4  EF5E  F018         	goto	u680
  2582   0030B8                     u681:
  2583   0030B8  EF4D  F018         	goto	l1526
  2584   0030BC                     u680:
  2585   0030BC  5003               	movf	strlen@a^(0+1280),w,c
  2586   0030BE  5C01               	subwf	strlen@s^(0+1280),w,c
  2587   0030C0  6E01               	movwf	?_strlen^(0+1280),c
  2588   0030C2  6A02               	clrf	(?_strlen+1)^(0+1280),c
  2589   0030C4  BE01               	btfsc	?_strlen^(0+1280),7,c
  2590   0030C6  0602               	decf	(?_strlen+1)^(0+1280),f,c
  2591   0030C8  0012               	return		;funcret
  2592   0030CA                     __end_of_strlen:
  2593                           	callstack 0
  2594                           
  2595 ;; *************** function _ENVIA_CHAR *****************
  2596 ;; Defined at:
  2597 ;;		line 92 in file "LCD.c"
  2598 ;; Parameters:    Size  Location     Type
  2599 ;;  dato            1    wreg     unsigned char 
  2600 ;; Auto vars:     Size  Location     Type
  2601 ;;  dato            1    1[COMRAM] unsigned char 
  2602 ;;  aux             1    2[COMRAM] unsigned char 
  2603 ;; Return value:  Size  Location     Type
  2604 ;;                  1    wreg      void 
  2605 ;; Registers used:
  2606 ;;		wreg, status,2, status,0, cstack
  2607 ;; Tracked objects:
  2608 ;;		On entry : 0/0
  2609 ;;		On exit  : 0/0
  2610 ;;		Unchanged: 0/0
  2611 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2612 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2613 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2614 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2615 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2616 ;;Total ram usage:        2 bytes
  2617 ;; Hardware stack levels used: 1
  2618 ;; Hardware stack levels required when called: 2
  2619 ;; This function calls:
  2620 ;;		_ENVIA_NIBBLE
  2621 ;;		_LEER_LCD
  2622 ;; This function is called by:
  2623 ;;		_main
  2624 ;;		_ESCRIBE_MENSAJE2
  2625 ;;		_ESCRIBE_MENSAJE
  2626 ;;		_GENERACARACTER
  2627 ;;		_LCD_ESCRIBE_VAR_CHAR
  2628 ;;		_LCD_ESCRIBE_VAR_INT
  2629 ;;		_LCD_CHAR_GRADO
  2630 ;;		_LCD_VARCHAR_BITS
  2631 ;; This function uses a non-reentrant model
  2632 ;;
  2633                           
  2634                           	psect	text17
  2635   0030FE                     __ptext17:
  2636                           	callstack 0
  2637   0030FE                     _ENVIA_CHAR:
  2638                           	callstack 123
  2639                           
  2640                           ;incstack = 0
  2641                           ;ENVIA_CHAR@dato stored from wreg
  2642   0030FE  6E02               	movwf	ENVIA_CHAR@dato^(0+1280),c
  2643   003100                     
  2644                           ;LCD.c: 92: void ENVIA_CHAR(unsigned char dato);LCD.c: 93: {;LCD.c: 94:  unsigned char a
      +                          ux;;LCD.c: 95:  LATDbits.LATD0 = 1;
  2645   003100  80C1               	bsf	193,0,c	;volatile
  2646   003102                     
  2647                           ;LCD.c: 96:  LEER_LCD();
  2648   003102  EC52  F017         	call	_LEER_LCD	;wreg free
  2649   003106                     
  2650                           ;LCD.c: 97:  TRISD = 0x00;
  2651   003106  0E00               	movlw	0
  2652   003108  6EC9               	movwf	201,c	;volatile
  2653   00310A                     
  2654                           ;LCD.c: 98:     _delay((unsigned long)((100)*(16000000UL/4000000.0)));
  2655   00310A  0E85               	movlw	133
  2656   00310C                     u1277:
  2657   00310C  2EE8               	decfsz	wreg,f,c
  2658   00310E  D7FE               	bra	u1277
  2659   003110  0000               	nop	
  2660   003112                     
  2661                           ;LCD.c: 99:  LATDbits.LATD1 = 0;
  2662   003112  92C1               	bcf	193,1,c	;volatile
  2663   003114                     
  2664                           ;LCD.c: 100:  LATDbits.LATD2 = 0;
  2665   003114  94C1               	bcf	193,2,c	;volatile
  2666   003116                     
  2667                           ;LCD.c: 101:  LATDbits.LATD0 = 1;
  2668   003116  80C1               	bsf	193,0,c	;volatile
  2669   003118                     
  2670                           ;LCD.c: 102:  aux = dato & 0xF0;
  2671   003118  5002               	movf	ENVIA_CHAR@dato^(0+1280),w,c
  2672   00311A  0BF0               	andlw	240
  2673   00311C  6E03               	movwf	ENVIA_CHAR@aux^(0+1280),c
  2674   00311E                     
  2675                           ;LCD.c: 103:  ENVIA_NIBBLE(aux);
  2676   00311E  5003               	movf	ENVIA_CHAR@aux^(0+1280),w,c
  2677   003120  ECD4  F018         	call	_ENVIA_NIBBLE
  2678   003124                     
  2679                           ;LCD.c: 104:  aux = dato << 4;
  2680   003124  3802               	swapf	ENVIA_CHAR@dato^(0+1280),w,c
  2681   003126  0BF0               	andlw	240
  2682   003128  6E03               	movwf	ENVIA_CHAR@aux^(0+1280),c
  2683   00312A                     
  2684                           ;LCD.c: 105:  ENVIA_NIBBLE(aux);
  2685   00312A  5003               	movf	ENVIA_CHAR@aux^(0+1280),w,c
  2686   00312C  ECD4  F018         	call	_ENVIA_NIBBLE
  2687   003130  0012               	return		;funcret
  2688   003132                     __end_of_ENVIA_CHAR:
  2689                           	callstack 0
  2690                           
  2691 ;; *************** function _LEER_LCD *****************
  2692 ;; Defined at:
  2693 ;;		line 156 in file "LCD.c"
  2694 ;; Parameters:    Size  Location     Type
  2695 ;;		None
  2696 ;; Auto vars:     Size  Location     Type
  2697 ;;  aux             1    0[COMRAM] unsigned char 
  2698 ;; Return value:  Size  Location     Type
  2699 ;;                  1    wreg      void 
  2700 ;; Registers used:
  2701 ;;		wreg, status,2, status,0
  2702 ;; Tracked objects:
  2703 ;;		On entry : 0/0
  2704 ;;		On exit  : 0/0
  2705 ;;		Unchanged: 0/0
  2706 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2707 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2708 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2709 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2710 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2711 ;;Total ram usage:        1 bytes
  2712 ;; Hardware stack levels used: 1
  2713 ;; Hardware stack levels required when called: 1
  2714 ;; This function calls:
  2715 ;;		Nothing
  2716 ;; This function is called by:
  2717 ;;		_ENVIA_CHAR
  2718 ;;		_ENVIA_LCD_CMD
  2719 ;; This function uses a non-reentrant model
  2720 ;;
  2721                           
  2722                           	psect	text18
  2723   002EA4                     __ptext18:
  2724                           	callstack 0
  2725   002EA4                     _LEER_LCD:
  2726                           	callstack 123
  2727   002EA4                     
  2728                           ;LCD.c: 158:  unsigned char aux;;LCD.c: 159:  TRISD = 0xF8;
  2729   002EA4  0EF8               	movlw	248
  2730   002EA6  6EC9               	movwf	201,c	;volatile
  2731   002EA8                     
  2732                           ;LCD.c: 160:  LATDbits.LATD0 = 0;
  2733   002EA8  90C1               	bcf	193,0,c	;volatile
  2734   002EAA                     
  2735                           ;LCD.c: 161:  LATDbits.LATD1 = 1;
  2736   002EAA  82C1               	bsf	193,1,c	;volatile
  2737   002EAC                     
  2738                           ;LCD.c: 162:  LATDbits.LATD2 = 1;
  2739   002EAC  84C1               	bsf	193,2,c	;volatile
  2740   002EAE                     
  2741                           ;LCD.c: 163:     _delay((unsigned long)((100)*(16000000UL/4000000.0)));
  2742   002EAE  0E85               	movlw	133
  2743   002EB0                     u1287:
  2744   002EB0  2EE8               	decfsz	wreg,f,c
  2745   002EB2  D7FE               	bra	u1287
  2746   002EB4  0000               	nop	
  2747   002EB6                     
  2748                           ;LCD.c: 164:  aux = PORTD;
  2749   002EB6  C4D1 F501          	movff	1233,LEER_LCD@aux	;volatile
  2750   002EBA                     
  2751                           ;LCD.c: 165:  LATDbits.LATD2 = 0;
  2752   002EBA  94C1               	bcf	193,2,c	;volatile
  2753   002EBC                     
  2754                           ;LCD.c: 166:     _delay((unsigned long)((100)*(16000000UL/4000000.0)));
  2755   002EBC  0E85               	movlw	133
  2756   002EBE                     u1297:
  2757   002EBE  2EE8               	decfsz	wreg,f,c
  2758   002EC0  D7FE               	bra	u1297
  2759   002EC2  0000               	nop	
  2760   002EC4                     
  2761                           ;LCD.c: 167:  LATDbits.LATD2 = 1;
  2762   002EC4  84C1               	bsf	193,2,c	;volatile
  2763   002EC6                     
  2764                           ;LCD.c: 168:     _delay((unsigned long)((100)*(16000000UL/4000000.0)));
  2765   002EC6  0E85               	movlw	133
  2766   002EC8                     u1307:
  2767   002EC8  2EE8               	decfsz	wreg,f,c
  2768   002ECA  D7FE               	bra	u1307
  2769   002ECC  0000               	nop	
  2770   002ECE                     
  2771                           ;LCD.c: 169:  LATDbits.LATD2 = 0;
  2772   002ECE  94C1               	bcf	193,2,c	;volatile
  2773   002ED0                     l912:
  2774                           
  2775                           ;LCD.c: 170:  aux = aux & 0x80;
  2776   002ED0  5001               	movf	LEER_LCD@aux^(0+1280),w,c
  2777   002ED2  0B80               	andlw	128
  2778   002ED4  6E01               	movwf	LEER_LCD@aux^(0+1280),c
  2779                           
  2780                           ;LCD.c: 171:  while(aux == 0x80)
  2781   002ED6  EF81  F017         	goto	l926
  2782   002EDA                     l170:
  2783                           
  2784                           ;LCD.c: 172:         {;LCD.c: 173:             LATDbits.LATD2 = 1;
  2785   002EDA  84C1               	bsf	193,2,c	;volatile
  2786   002EDC                     
  2787                           ;LCD.c: 174:             _delay((unsigned long)((100)*(16000000UL/4000000.0)));
  2788   002EDC  0E85               	movlw	133
  2789   002EDE                     u1317:
  2790   002EDE  2EE8               	decfsz	wreg,f,c
  2791   002EE0  D7FE               	bra	u1317
  2792   002EE2  0000               	nop	
  2793   002EE4                     
  2794                           ;LCD.c: 175:             aux = PORTD;
  2795   002EE4  C4D1 F501          	movff	1233,LEER_LCD@aux	;volatile
  2796   002EE8                     
  2797                           ;LCD.c: 176:             LATDbits.LATD2 = 0;
  2798   002EE8  94C1               	bcf	193,2,c	;volatile
  2799                           
  2800                           ;LCD.c: 177:             _delay((unsigned long)((100)*(16000000UL/4000000.0)));
  2801   002EEA  0E85               	movlw	133
  2802   002EEC                     u1327:
  2803   002EEC  2EE8               	decfsz	wreg,f,c
  2804   002EEE  D7FE               	bra	u1327
  2805   002EF0  0000               	nop	
  2806   002EF2                     
  2807                           ;LCD.c: 178:             LATDbits.LATD2 = 1;
  2808   002EF2  84C1               	bsf	193,2,c	;volatile
  2809                           
  2810                           ;LCD.c: 179:             _delay((unsigned long)((100)*(16000000UL/4000000.0)));
  2811   002EF4  0E85               	movlw	133
  2812   002EF6                     u1337:
  2813   002EF6  2EE8               	decfsz	wreg,f,c
  2814   002EF8  D7FE               	bra	u1337
  2815   002EFA  0000               	nop	
  2816   002EFC                     
  2817                           ;LCD.c: 180:             LATDbits.LATD2 = 0;
  2818   002EFC  94C1               	bcf	193,2,c	;volatile
  2819   002EFE  EF68  F017         	goto	l912
  2820   002F02                     l926:
  2821                           
  2822                           ;LCD.c: 171:  while(aux == 0x80)
  2823   002F02  0E80               	movlw	128
  2824   002F04  1801               	xorwf	LEER_LCD@aux^(0+1280),w,c
  2825   002F06  B4D8               	btfsc	status,2,c
  2826   002F08  EF88  F017         	goto	u11
  2827   002F0C  EF8A  F017         	goto	u10
  2828   002F10                     u11:
  2829   002F10  EF6D  F017         	goto	l170
  2830   002F14                     u10:
  2831   002F14  0012               	return		;funcret
  2832   002F16                     __end_of_LEER_LCD:
  2833                           	callstack 0
  2834                           
  2835 ;; *************** function _ENVIA_NIBBLE *****************
  2836 ;; Defined at:
  2837 ;;		line 130 in file "LCD.c"
  2838 ;; Parameters:    Size  Location     Type
  2839 ;;  dato            1    wreg     unsigned char 
  2840 ;; Auto vars:     Size  Location     Type
  2841 ;;  dato            1    0[COMRAM] unsigned char 
  2842 ;; Return value:  Size  Location     Type
  2843 ;;                  1    wreg      void 
  2844 ;; Registers used:
  2845 ;;		wreg, status,2, status,0
  2846 ;; Tracked objects:
  2847 ;;		On entry : 0/0
  2848 ;;		On exit  : 0/0
  2849 ;;		Unchanged: 0/0
  2850 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2851 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2852 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2853 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2854 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2855 ;;Total ram usage:        1 bytes
  2856 ;; Hardware stack levels used: 1
  2857 ;; Hardware stack levels required when called: 1
  2858 ;; This function calls:
  2859 ;;		Nothing
  2860 ;; This function is called by:
  2861 ;;		_ENVIA_CHAR
  2862 ;;		_LCD_CONFIG
  2863 ;;		_ENVIA_LCD_CMD
  2864 ;; This function uses a non-reentrant model
  2865 ;;
  2866                           
  2867                           	psect	text19
  2868   0031A8                     __ptext19:
  2869                           	callstack 0
  2870   0031A8                     _ENVIA_NIBBLE:
  2871                           	callstack 123
  2872                           
  2873                           ;incstack = 0
  2874                           ;ENVIA_NIBBLE@dato stored from wreg
  2875   0031A8  6E01               	movwf	ENVIA_NIBBLE@dato^(0+1280),c
  2876   0031AA                     
  2877                           ;LCD.c: 130: void ENVIA_NIBBLE(unsigned char dato);LCD.c: 131: {;LCD.c: 132:  LATD &= 0x
      +                          0F;
  2878   0031AA  0E0F               	movlw	15
  2879   0031AC  16C1               	andwf	193,f,c	;volatile
  2880                           
  2881                           ;LCD.c: 133:  dato &= 0xF0;
  2882   0031AE  0EF0               	movlw	240
  2883   0031B0  1601               	andwf	ENVIA_NIBBLE@dato^(0+1280),f,c
  2884                           
  2885                           ;LCD.c: 134:  LATD|= dato;
  2886   0031B2  5001               	movf	ENVIA_NIBBLE@dato^(0+1280),w,c	;volatile
  2887   0031B4  12C1               	iorwf	193,f,c	;volatile
  2888   0031B6                     
  2889                           ;LCD.c: 135:  LATDbits.LATD2 = 1;
  2890   0031B6  84C1               	bsf	193,2,c	;volatile
  2891   0031B8                     
  2892                           ;LCD.c: 136:     _delay((unsigned long)((100)*(16000000UL/4000000.0)));
  2893   0031B8  0E85               	movlw	133
  2894   0031BA                     u1347:
  2895   0031BA  2EE8               	decfsz	wreg,f,c
  2896   0031BC  D7FE               	bra	u1347
  2897   0031BE  0000               	nop	
  2898   0031C0                     
  2899                           ;LCD.c: 137:  LATDbits.LATD2 = 0;
  2900   0031C0  94C1               	bcf	193,2,c	;volatile
  2901   0031C2  0012               	return		;funcret
  2902   0031C4                     __end_of_ENVIA_NIBBLE:
  2903                           	callstack 0
  2904                           
  2905 ;; *************** function _INT0_ISR *****************
  2906 ;; Defined at:
  2907 ;;		line 59 in file "maincode01.c"
  2908 ;; Parameters:    Size  Location     Type
  2909 ;;		None
  2910 ;; Auto vars:     Size  Location     Type
  2911 ;;		None
  2912 ;; Return value:  Size  Location     Type
  2913 ;;                  1    wreg      void 
  2914 ;; Registers used:
  2915 ;;		wreg, status,2, status,0
  2916 ;; Tracked objects:
  2917 ;;		On entry : 0/0
  2918 ;;		On exit  : 0/0
  2919 ;;		Unchanged: 0/0
  2920 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2921 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2922 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2923 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2924 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2925 ;;Total ram usage:        0 bytes
  2926 ;; Hardware stack levels used: 1
  2927 ;; This function calls:
  2928 ;;		Nothing
  2929 ;; This function is called by:
  2930 ;;		Interrupt level 2
  2931 ;; This function uses a non-reentrant model
  2932 ;;
  2933                           
  2934                           	psect	text20
  2935   003164                     __ptext20:
  2936                           	callstack 0
  2937   003164                     _INT0_ISR:
  2938                           	callstack 122
  2939   003164                     
  2940                           ;maincode01.c: 60:     PIR1bits.INT0IF = 0;
  2941   003164  90AF               	bcf	175,0,c	;volatile
  2942   003166                     
  2943                           ;maincode01.c: 61:     if(duty_cycle == 100){
  2944   003166  0E64               	movlw	100
  2945   003168  182F               	xorwf	_duty_cycle^(0+1280),w,c
  2946   00316A  A4D8               	btfss	status,2,c
  2947   00316C  EFBA  F018         	goto	i2u58_41
  2948   003170  EFBC  F018         	goto	i2u58_40
  2949   003174                     i2u58_41:
  2950   003174  EFC0  F018         	goto	i2l1420
  2951   003178                     i2u58_40:
  2952   003178                     
  2953                           ;maincode01.c: 62:         duty_cycle = 0;
  2954   003178  0E00               	movlw	0
  2955   00317A  6E2F               	movwf	_duty_cycle^(0+1280),c
  2956                           
  2957                           ;maincode01.c: 63:     }
  2958   00317C  EFC3  F018         	goto	i2l77
  2959   003180                     i2l1420:
  2960                           
  2961                           ;maincode01.c: 65:         duty_cycle = duty_cycle + 5;
  2962   003180  502F               	movf	_duty_cycle^(0+1280),w,c
  2963   003182  0F05               	addlw	5
  2964   003184  6E2F               	movwf	_duty_cycle^(0+1280),c
  2965   003186                     i2l77:
  2966   003186  0011               	retfie		f
  2967   003188                     __end_of_INT0_ISR:
  2968                           	callstack 0
  2969                           
  2970                           ;
  2971                           ; Interrupt Vector Table @ 0x8
  2972                           ;
  2973                           
  2974                           	psect	ivt0x8
  2975   000008                     __pivt0x8:
  2976                           	callstack 0
  2977   000008                     ivt0x8_base:
  2978                           	callstack 0
  2979                           
  2980                           ; Vector 0 : SWINT
  2981   000008  0040               	dw	ivt0x8_undefint shr (0+2)
  2982                           
  2983                           ; Vector 1 : HLVD
  2984   00000A  0040               	dw	ivt0x8_undefint shr (0+2)
  2985                           
  2986                           ; Vector 2 : OSF
  2987   00000C  0040               	dw	ivt0x8_undefint shr (0+2)
  2988                           
  2989                           ; Vector 3 : CSW
  2990   00000E  0040               	dw	ivt0x8_undefint shr (0+2)
  2991                           
  2992                           ; Vector 4 : Undefined
  2993   000010  0040               	dw	ivt0x8_undefint shr (0+2)
  2994                           
  2995                           ; Vector 5 : CLC1
  2996   000012  0040               	dw	ivt0x8_undefint shr (0+2)
  2997                           
  2998                           ; Vector 6 : Undefined
  2999   000014  0040               	dw	ivt0x8_undefint shr (0+2)
  3000                           
  3001                           ; Vector 7 : IOC
  3002   000016  0040               	dw	ivt0x8_undefint shr (0+2)
  3003                           
  3004                           ; Vector 8 : INT0
  3005   000018  0C59               	dw	_INT0_ISR shr (0+2)
  3006                           
  3007                           ; Vector 9 : ZCD
  3008   00001A  0040               	dw	ivt0x8_undefint shr (0+2)
  3009                           
  3010                           ; Vector 10 : AD
  3011   00001C  0040               	dw	ivt0x8_undefint shr (0+2)
  3012                           
  3013                           ; Vector 11 : ACT
  3014   00001E  0040               	dw	ivt0x8_undefint shr (0+2)
  3015                           
  3016                           ; Vector 12 : CMP1
  3017   000020  0040               	dw	ivt0x8_undefint shr (0+2)
  3018                           
  3019                           ; Vector 13 : SMT1
  3020   000022  0040               	dw	ivt0x8_undefint shr (0+2)
  3021                           
  3022                           ; Vector 14 : SMT1PRA
  3023   000024  0040               	dw	ivt0x8_undefint shr (0+2)
  3024                           
  3025                           ; Vector 15 : SMT1PRW
  3026   000026  0040               	dw	ivt0x8_undefint shr (0+2)
  3027                           
  3028                           ; Vector 16 : ADT
  3029   000028  0040               	dw	ivt0x8_undefint shr (0+2)
  3030                           
  3031                           ; Vector 17 : Undefined
  3032   00002A  0040               	dw	ivt0x8_undefint shr (0+2)
  3033                           
  3034                           ; Vector 18 : Undefined
  3035   00002C  0040               	dw	ivt0x8_undefint shr (0+2)
  3036                           
  3037                           ; Vector 19 : Undefined
  3038   00002E  0040               	dw	ivt0x8_undefint shr (0+2)
  3039                           
  3040                           ; Vector 20 : DMA1SCNT
  3041   000030  0040               	dw	ivt0x8_undefint shr (0+2)
  3042                           
  3043                           ; Vector 21 : DMA1DCNT
  3044   000032  0040               	dw	ivt0x8_undefint shr (0+2)
  3045                           
  3046                           ; Vector 22 : DMA1OR
  3047   000034  0040               	dw	ivt0x8_undefint shr (0+2)
  3048                           
  3049                           ; Vector 23 : DMA1A
  3050   000036  0040               	dw	ivt0x8_undefint shr (0+2)
  3051                           
  3052                           ; Vector 24 : SPI1RX
  3053   000038  0040               	dw	ivt0x8_undefint shr (0+2)
  3054                           
  3055                           ; Vector 25 : SPI1TX
  3056   00003A  0040               	dw	ivt0x8_undefint shr (0+2)
  3057                           
  3058                           ; Vector 26 : SPI1
  3059   00003C  0040               	dw	ivt0x8_undefint shr (0+2)
  3060                           
  3061                           ; Vector 27 : TMR2
  3062   00003E  0040               	dw	ivt0x8_undefint shr (0+2)
  3063                           
  3064                           ; Vector 28 : TMR1
  3065   000040  0040               	dw	ivt0x8_undefint shr (0+2)
  3066                           
  3067                           ; Vector 29 : TMR1G
  3068   000042  0040               	dw	ivt0x8_undefint shr (0+2)
  3069                           
  3070                           ; Vector 30 : CCP1
  3071   000044  0040               	dw	ivt0x8_undefint shr (0+2)
  3072                           
  3073                           ; Vector 31 : TMR0
  3074   000046  0040               	dw	ivt0x8_undefint shr (0+2)
  3075                           
  3076                           ; Vector 32 : U1RX
  3077   000048  0040               	dw	ivt0x8_undefint shr (0+2)
  3078                           
  3079                           ; Vector 33 : U1TX
  3080   00004A  0040               	dw	ivt0x8_undefint shr (0+2)
  3081                           
  3082                           ; Vector 34 : U1E
  3083   00004C  0040               	dw	ivt0x8_undefint shr (0+2)
  3084                           
  3085                           ; Vector 35 : U1
  3086   00004E  0040               	dw	ivt0x8_undefint shr (0+2)
  3087                           
  3088                           ; Vector 36 : Undefined
  3089   000050  0040               	dw	ivt0x8_undefint shr (0+2)
  3090                           
  3091                           ; Vector 37 : Undefined
  3092   000052  0040               	dw	ivt0x8_undefint shr (0+2)
  3093                           
  3094                           ; Vector 38 : PWM1PR
  3095   000054  0040               	dw	ivt0x8_undefint shr (0+2)
  3096                           
  3097                           ; Vector 39 : PWM1
  3098   000056  0040               	dw	ivt0x8_undefint shr (0+2)
  3099                           
  3100                           ; Vector 40 : SPI2RX
  3101   000058  0040               	dw	ivt0x8_undefint shr (0+2)
  3102                           
  3103                           ; Vector 41 : SPI2TX
  3104   00005A  0040               	dw	ivt0x8_undefint shr (0+2)
  3105                           
  3106                           ; Vector 42 : SPI2
  3107   00005C  0040               	dw	ivt0x8_undefint shr (0+2)
  3108                           
  3109                           ; Vector 43 : Undefined
  3110   00005E  0040               	dw	ivt0x8_undefint shr (0+2)
  3111                           
  3112                           ; Vector 44 : TMR3
  3113   000060  0040               	dw	ivt0x8_undefint shr (0+2)
  3114                           
  3115                           ; Vector 45 : TMR3G
  3116   000062  0040               	dw	ivt0x8_undefint shr (0+2)
  3117                           
  3118                           ; Vector 46 : PWM2PR
  3119   000064  0040               	dw	ivt0x8_undefint shr (0+2)
  3120                           
  3121                           ; Vector 47 : PWM2
  3122   000066  0040               	dw	ivt0x8_undefint shr (0+2)
  3123                           
  3124                           ; Vector 48 : INT1
  3125   000068  0040               	dw	ivt0x8_undefint shr (0+2)
  3126                           
  3127                           ; Vector 49 : CLC2
  3128   00006A  0040               	dw	ivt0x8_undefint shr (0+2)
  3129                           
  3130                           ; Vector 50 : CWG1
  3131   00006C  0040               	dw	ivt0x8_undefint shr (0+2)
  3132                           
  3133                           ; Vector 51 : NCO1
  3134   00006E  0040               	dw	ivt0x8_undefint shr (0+2)
  3135                           
  3136                           ; Vector 52 : DMA2SCNT
  3137   000070  0040               	dw	ivt0x8_undefint shr (0+2)
  3138                           
  3139                           ; Vector 53 : DMA2DCNT
  3140   000072  0040               	dw	ivt0x8_undefint shr (0+2)
  3141                           
  3142                           ; Vector 54 : DMA2OR
  3143   000074  0040               	dw	ivt0x8_undefint shr (0+2)
  3144                           
  3145                           ; Vector 55 : DMA2A
  3146   000076  0040               	dw	ivt0x8_undefint shr (0+2)
  3147                           
  3148                           ; Vector 56 : I2C1RX
  3149   000078  0040               	dw	ivt0x8_undefint shr (0+2)
  3150                           
  3151                           ; Vector 57 : I2C1TX
  3152   00007A  0040               	dw	ivt0x8_undefint shr (0+2)
  3153                           
  3154                           ; Vector 58 : I2C1
  3155   00007C  0040               	dw	ivt0x8_undefint shr (0+2)
  3156                           
  3157                           ; Vector 59 : I2C1E
  3158   00007E  0040               	dw	ivt0x8_undefint shr (0+2)
  3159                           
  3160                           ; Vector 60 : Undefined
  3161   000080  0040               	dw	ivt0x8_undefint shr (0+2)
  3162                           
  3163                           ; Vector 61 : CLC3
  3164   000082  0040               	dw	ivt0x8_undefint shr (0+2)
  3165                           
  3166                           ; Vector 62 : PWM3PR
  3167   000084  0040               	dw	ivt0x8_undefint shr (0+2)
  3168                           
  3169                           ; Vector 63 : PWM3
  3170   000086  0040               	dw	ivt0x8_undefint shr (0+2)
  3171                           
  3172                           ; Vector 64 : U2RX
  3173   000088  0040               	dw	ivt0x8_undefint shr (0+2)
  3174                           
  3175                           ; Vector 65 : U2TX
  3176   00008A  0040               	dw	ivt0x8_undefint shr (0+2)
  3177                           
  3178                           ; Vector 66 : U2E
  3179   00008C  0040               	dw	ivt0x8_undefint shr (0+2)
  3180                           
  3181                           ; Vector 67 : U2
  3182   00008E  0040               	dw	ivt0x8_undefint shr (0+2)
  3183                           
  3184                           ; Vector 68 : TMR5
  3185   000090  0040               	dw	ivt0x8_undefint shr (0+2)
  3186                           
  3187                           ; Vector 69 : TMR5G
  3188   000092  0040               	dw	ivt0x8_undefint shr (0+2)
  3189                           
  3190                           ; Vector 70 : CCP2
  3191   000094  0040               	dw	ivt0x8_undefint shr (0+2)
  3192                           
  3193                           ; Vector 71 : SCAN
  3194   000096  0040               	dw	ivt0x8_undefint shr (0+2)
  3195                           
  3196                           ; Vector 72 : U3RX
  3197   000098  0040               	dw	ivt0x8_undefint shr (0+2)
  3198                           
  3199                           ; Vector 73 : U3TX
  3200   00009A  0040               	dw	ivt0x8_undefint shr (0+2)
  3201                           
  3202                           ; Vector 74 : U3E
  3203   00009C  0040               	dw	ivt0x8_undefint shr (0+2)
  3204                           
  3205                           ; Vector 75 : U3
  3206   00009E  0040               	dw	ivt0x8_undefint shr (0+2)
  3207                           
  3208                           ; Vector 76 : Undefined
  3209   0000A0  0040               	dw	ivt0x8_undefint shr (0+2)
  3210                           
  3211                           ; Vector 77 : CLC4
  3212   0000A2  0040               	dw	ivt0x8_undefint shr (0+2)
  3213                           
  3214                           ; Vector 78 : Undefined
  3215   0000A4  0040               	dw	ivt0x8_undefint shr (0+2)
  3216                           
  3217                           ; Vector 79 : Undefined
  3218   0000A6  0040               	dw	ivt0x8_undefint shr (0+2)
  3219                           
  3220                           ; Vector 80 : INT2
  3221   0000A8  0040               	dw	ivt0x8_undefint shr (0+2)
  3222                           
  3223                           ; Vector 81 : CLC5
  3224   0000AA  0040               	dw	ivt0x8_undefint shr (0+2)
  3225                           
  3226                           ; Vector 82 : CWG2
  3227   0000AC  0040               	dw	ivt0x8_undefint shr (0+2)
  3228                           
  3229                           ; Vector 83 : NCO2
  3230   0000AE  0040               	dw	ivt0x8_undefint shr (0+2)
  3231                           
  3232                           ; Vector 84 : DMA3SCNT
  3233   0000B0  0040               	dw	ivt0x8_undefint shr (0+2)
  3234                           
  3235                           ; Vector 85 : DMA3DCNT
  3236   0000B2  0040               	dw	ivt0x8_undefint shr (0+2)
  3237                           
  3238                           ; Vector 86 : DMA3OR
  3239   0000B4  0040               	dw	ivt0x8_undefint shr (0+2)
  3240                           
  3241                           ; Vector 87 : DMA3A
  3242   0000B6  0040               	dw	ivt0x8_undefint shr (0+2)
  3243                           
  3244                           ; Vector 88 : CCP3
  3245   0000B8  0040               	dw	ivt0x8_undefint shr (0+2)
  3246                           
  3247                           ; Vector 89 : CLC6
  3248   0000BA  0040               	dw	ivt0x8_undefint shr (0+2)
  3249                           
  3250                           ; Vector 90 : CWG3
  3251   0000BC  0040               	dw	ivt0x8_undefint shr (0+2)
  3252                           
  3253                           ; Vector 91 : TMR4
  3254   0000BE  0040               	dw	ivt0x8_undefint shr (0+2)
  3255                           
  3256                           ; Vector 92 : DMA4SCNT
  3257   0000C0  0040               	dw	ivt0x8_undefint shr (0+2)
  3258                           
  3259                           ; Vector 93 : DMA4DCNT
  3260   0000C2  0040               	dw	ivt0x8_undefint shr (0+2)
  3261                           
  3262                           ; Vector 94 : DMA4OR
  3263   0000C4  0040               	dw	ivt0x8_undefint shr (0+2)
  3264                           
  3265                           ; Vector 95 : DMA4A
  3266   0000C6  0040               	dw	ivt0x8_undefint shr (0+2)
  3267                           
  3268                           ; Vector 96 : U4RX
  3269   0000C8  0040               	dw	ivt0x8_undefint shr (0+2)
  3270                           
  3271                           ; Vector 97 : U4TX
  3272   0000CA  0040               	dw	ivt0x8_undefint shr (0+2)
  3273                           
  3274                           ; Vector 98 : U4E
  3275   0000CC  0040               	dw	ivt0x8_undefint shr (0+2)
  3276                           
  3277                           ; Vector 99 : U4
  3278   0000CE  0040               	dw	ivt0x8_undefint shr (0+2)
  3279                           
  3280                           ; Vector 100 : DMA5SCNT
  3281   0000D0  0040               	dw	ivt0x8_undefint shr (0+2)
  3282                           
  3283                           ; Vector 101 : DMA5DCNT
  3284   0000D2  0040               	dw	ivt0x8_undefint shr (0+2)
  3285                           
  3286                           ; Vector 102 : DMA5OR
  3287   0000D4  0040               	dw	ivt0x8_undefint shr (0+2)
  3288                           
  3289                           ; Vector 103 : DMA5A
  3290   0000D6  0040               	dw	ivt0x8_undefint shr (0+2)
  3291                           
  3292                           ; Vector 104 : U5RX
  3293   0000D8  0040               	dw	ivt0x8_undefint shr (0+2)
  3294                           
  3295                           ; Vector 105 : U5TX
  3296   0000DA  0040               	dw	ivt0x8_undefint shr (0+2)
  3297                           
  3298                           ; Vector 106 : U5E
  3299   0000DC  0040               	dw	ivt0x8_undefint shr (0+2)
  3300                           
  3301                           ; Vector 107 : U5
  3302   0000DE  0040               	dw	ivt0x8_undefint shr (0+2)
  3303                           
  3304                           ; Vector 108 : DMA6SCNT
  3305   0000E0  0040               	dw	ivt0x8_undefint shr (0+2)
  3306                           
  3307                           ; Vector 109 : DMA6DCNT
  3308   0000E2  0040               	dw	ivt0x8_undefint shr (0+2)
  3309                           
  3310                           ; Vector 110 : DMA6OR
  3311   0000E4  0040               	dw	ivt0x8_undefint shr (0+2)
  3312                           
  3313                           ; Vector 111 : DMA6A
  3314   0000E6  0040               	dw	ivt0x8_undefint shr (0+2)
  3315                           
  3316                           ; Vector 112 : Undefined
  3317   0000E8  0040               	dw	ivt0x8_undefint shr (0+2)
  3318                           
  3319                           ; Vector 113 : CLC7
  3320   0000EA  0040               	dw	ivt0x8_undefint shr (0+2)
  3321                           
  3322                           ; Vector 114 : CMP2
  3323   0000EC  0040               	dw	ivt0x8_undefint shr (0+2)
  3324                           
  3325                           ; Vector 115 : NCO3
  3326   0000EE  0040               	dw	ivt0x8_undefint shr (0+2)
  3327                           
  3328                           ; Vector 116 : Undefined
  3329   0000F0  0040               	dw	ivt0x8_undefint shr (0+2)
  3330                           
  3331                           ; Vector 117 : Undefined
  3332   0000F2  0040               	dw	ivt0x8_undefint shr (0+2)
  3333                           
  3334                           ; Vector 118 : Undefined
  3335   0000F4  0040               	dw	ivt0x8_undefint shr (0+2)
  3336                           
  3337                           ; Vector 119 : Undefined
  3338   0000F6  0040               	dw	ivt0x8_undefint shr (0+2)
  3339                           
  3340                           ; Vector 120 : NVM
  3341   0000F8  0040               	dw	ivt0x8_undefint shr (0+2)
  3342                           
  3343                           ; Vector 121 : CLC8
  3344   0000FA  0040               	dw	ivt0x8_undefint shr (0+2)
  3345                           
  3346                           ; Vector 122 : CRC
  3347   0000FC  0040               	dw	ivt0x8_undefint shr (0+2)
  3348                           
  3349                           ; Vector 123 : TMR6
  3350   0000FE  0040               	dw	ivt0x8_undefint shr (0+2)
  3351   000100                     ivt0x8_undefint:
  3352                           	callstack 0
  3353   000100  00FF               	reset	
  3354                           
  3355                           	psect	rparam
  3356   000000                     
  3357                           	psect	config
  3358                           
  3359                           ;Config register CONFIG1 @ 0x300000
  3360                           ;	External Oscillator Selection
  3361                           ;	FEXTOSC = OFF, Oscillator not enabled
  3362                           ;	Reset Oscillator Selection
  3363                           ;	RSTOSC = EXTOSC, EXTOSC operating per FEXTOSC bits (device manufacturing default)
  3364   300000                     	org	3145728
  3365   300000  FC                 	db	252
  3366                           
  3367                           ;Config register CONFIG2 @ 0x300001
  3368                           ;	Clock out Enable bit
  3369                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
  3370                           ;	PRLOCKED One-Way Set Enable bit
  3371                           ;	PR1WAY = ON, PRLOCKED bit can be cleared and set only once
  3372                           ;	Clock Switch Enable bit
  3373                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
  3374                           ;	Fail-Safe Clock Monitor Enable bit
  3375                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
  3376   300001                     	org	3145729
  3377   300001  FF                 	db	255
  3378                           
  3379                           ;Config register CONFIG3 @ 0x300002
  3380                           ;	MCLR Enable bit
  3381                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
  3382                           ;	Power-up timer selection bits
  3383                           ;	PWRTS = PWRT_64, PWRT set at 64ms
  3384                           ;	Multi-vector enable bit
  3385                           ;	MVECEN = ON, Multi-vector enabled, Vector table used for interrupts
  3386                           ;	IVTLOCK bit One-way set enable bit
  3387                           ;	IVT1WAY = ON, IVTLOCKED bit can be cleared and set only once
  3388                           ;	Low Power BOR Enable bit
  3389                           ;	LPBOREN = OFF, Low-Power BOR disabled
  3390                           ;	Brown-out Reset Enable bits
  3391                           ;	BOREN = OFF, Brown-out Reset disabled
  3392   300002                     	org	3145730
  3393   300002  3D                 	db	61
  3394                           
  3395                           ;Config register CONFIG4 @ 0x300003
  3396                           ;	Brown-out Reset Voltage Selection bits
  3397                           ;	BORV = VBOR_1P9, Brown-out Reset Voltage (VBOR) set to 1.9V
  3398                           ;	ZCD Disable bit
  3399                           ;	ZCD = OFF, ZCD module is disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCD
      +                          CON
  3400                           ;	PPSLOCK bit One-Way Set Enable bit
  3401                           ;	PPS1WAY = ON, PPSLOCKED bit can be cleared and set only once; PPS registers remain loc
      +                          ked after one clear/set cycle
  3402                           ;	Stack Full/Underflow Reset Enable bit
  3403                           ;	STVREN = ON, Stack full/underflow will cause Reset
  3404                           ;	Low Voltage Programming Enable bit
  3405                           ;	LVP = OFF, HV on MCLR/VPP must be used for programming
  3406                           ;	Extended Instruction Set Enable bit
  3407                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
  3408   300003                     	org	3145731
  3409   300003  DF                 	db	223
  3410                           
  3411                           ;Config register CONFIG5 @ 0x300004
  3412                           ;	WDT Period selection bits
  3413                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  3414                           ;	WDT operating mode
  3415                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
  3416   300004                     	org	3145732
  3417   300004  9F                 	db	159
  3418                           
  3419                           ;Config register CONFIG6 @ 0x300005
  3420                           ;	WDT Window Select bits
  3421                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
  3422                           ;	WDT input clock selector
  3423                           ;	WDTCCS = SC, Software Control
  3424   300005                     	org	3145733
  3425   300005  FF                 	db	255
  3426                           
  3427                           ;Config register CONFIG7 @ 0x300006
  3428                           ;	Boot Block Size selection bits
  3429                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
  3430                           ;	Boot Block enable bit
  3431                           ;	BBEN = OFF, Boot block disabled
  3432                           ;	Storage Area Flash enable bit
  3433                           ;	SAFEN = OFF, SAF disabled
  3434                           ;	Background Debugger
  3435                           ;	DEBUG = OFF, Background Debugger disabled
  3436   300006                     	org	3145734
  3437   300006  FF                 	db	255
  3438                           
  3439                           ;Config register CONFIG8 @ 0x300007
  3440                           ;	Boot Block Write Protection bit
  3441                           ;	WRTB = OFF, Boot Block not Write protected
  3442                           ;	Configuration Register Write Protection bit
  3443                           ;	WRTC = OFF, Configuration registers not Write protected
  3444                           ;	Data EEPROM Write Protection bit
  3445                           ;	WRTD = OFF, Data EEPROM not Write protected
  3446                           ;	SAF Write protection bit
  3447                           ;	WRTSAF = OFF, SAF not Write Protected
  3448                           ;	Application Block write protection bit
  3449                           ;	WRTAPP = OFF, Application Block not write protected
  3450   300007                     	org	3145735
  3451   300007  FF                 	db	255
  3452                           
  3453                           ;Config register CONFIG10 @ 0x300009
  3454                           ;	PFM and Data EEPROM Code Protection bit
  3455                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
  3456   300009                     	org	3145737
  3457   300009  FF                 	db	255
  3458                           tosu	equ	0x4FF
  3459                           tosh	equ	0x4FE
  3460                           tosl	equ	0x4FD
  3461                           stkptr	equ	0x4FC
  3462                           pclatu	equ	0x4FB
  3463                           pclath	equ	0x4FA
  3464                           pcl	equ	0x4F9
  3465                           tblptru	equ	0x4F8
  3466                           tblptrh	equ	0x4F7
  3467                           tblptrl	equ	0x4F6
  3468                           tablat	equ	0x4F5
  3469                           prodh	equ	0x4F4
  3470                           prodl	equ	0x4F3
  3471                           indf0	equ	0x4EF
  3472                           postinc0	equ	0x4EE
  3473                           postdec0	equ	0x4ED
  3474                           preinc0	equ	0x4EC
  3475                           plusw0	equ	0x4EB
  3476                           fsr0h	equ	0x4EA
  3477                           fsr0l	equ	0x4E9
  3478                           wreg	equ	0x4E8
  3479                           indf1	equ	0x4E7
  3480                           postinc1	equ	0x4E6
  3481                           postdec1	equ	0x4E5
  3482                           preinc1	equ	0x4E4
  3483                           plusw1	equ	0x4E3
  3484                           fsr1h	equ	0x4E2
  3485                           fsr1l	equ	0x4E1
  3486                           bsr	equ	0x4E0
  3487                           indf2	equ	0x4DF
  3488                           postinc2	equ	0x4DE
  3489                           postdec2	equ	0x4DD
  3490                           preinc2	equ	0x4DC
  3491                           plusw2	equ	0x4DB
  3492                           fsr2h	equ	0x4DA
  3493                           fsr2l	equ	0x4D9
  3494                           status	equ	0x4D8

Data Sizes:
    Strings     25
    Constant    0
    Data        0
    BSS         8
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     39      47
    BANK5           160      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0
    BANK32          256      0       0
    BANK33          256      0       0
    BANK34          256      0       0
    BANK35          256      0       0
    BANK36          256      0       0

Pointer List with Targets:

    ESCRIBE_MENSAJE2@cadena	PTR const unsigned char  size(1) Largest target is 14
		 -> STR_1(CODE[14]), STR_2(CODE[11]), 

    strlen@a	PTR const unsigned char  size(1) Largest target is 14
		 -> STR_1(CODE[14]), STR_2(CODE[11]), 

    strlen@s	PTR const unsigned char  size(1) Largest target is 14
		 -> STR_1(CODE[14]), STR_2(CODE[11]), 


Critical Paths under _main in COMRAM

    _main->___flmul
    _convierte->___awdiv
    ___awdiv->___awmod
    ___flmul->___xxtofl
    _POS_CURSOR->_ENVIA_LCD_CMD
    _LCD_INIT->_CURSOR_ONOFF
    _LCD_INIT->_LCD_CONFIG
    _LCD_CONFIG->_ENVIA_LCD_CMD
    _CURSOR_ONOFF->_ENVIA_LCD_CMD
    _CURSOR_HOME->_ENVIA_LCD_CMD
    _BORRAR_LCD->_ENVIA_LCD_CMD
    _ENVIA_LCD_CMD->_ENVIA_NIBBLE
    _ENVIA_LCD_CMD->_LEER_LCD
    _ESCRIBE_MENSAJE2->_ENVIA_CHAR
    _ESCRIBE_MENSAJE2->_strlen
    _ENVIA_CHAR->_ENVIA_NIBBLE
    _ENVIA_CHAR->_LEER_LCD

Critical Paths under _INT0_ISR in COMRAM

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT0_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT0_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT0_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INT0_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INT0_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INT0_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INT0_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INT0_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INT0_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INT0_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INT0_ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INT0_ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INT0_ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INT0_ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INT0_ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INT0_ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INT0_ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INT0_ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INT0_ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INT0_ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INT0_ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _INT0_ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _INT0_ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _INT0_ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _INT0_ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _INT0_ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _INT0_ISR in BANK31

    None.

Critical Paths under _main in BANK32

    None.

Critical Paths under _INT0_ISR in BANK32

    None.

Critical Paths under _main in BANK33

    None.

Critical Paths under _INT0_ISR in BANK33

    None.

Critical Paths under _main in BANK34

    None.

Critical Paths under _INT0_ISR in BANK34

    None.

Critical Paths under _main in BANK35

    None.

Critical Paths under _INT0_ISR in BANK35

    None.

Critical Paths under _main in BANK36

    None.

Critical Paths under _INT0_ISR in BANK36

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    6122
                         _ENVIA_CHAR
                   _ESCRIBE_MENSAJE2
                           _LCD_INIT
                         _POS_CURSOR
                            ___flmul
                            ___fltol
                           ___xxtofl
                          _configuro
                          _convierte
 ---------------------------------------------------------------------------------
 (1) _convierte                                            1     1      0    2030
                                             14 COMRAM     1     1      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4    1056
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     908
                                              6 COMRAM     8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (1) _configuro                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     398
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (1) ___fltol                                             10     6      4     305
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (1) ___flmul                                             25    17      8    1744
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _POS_CURSOR                                           2     1      1     448
                                              3 COMRAM     2     1      1
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (1) _LCD_INIT                                             1     1      0     525
                                              4 COMRAM     1     1      0
                         _BORRAR_LCD
                        _CURSOR_HOME
                       _CURSOR_ONOFF
                         _LCD_CONFIG
 ---------------------------------------------------------------------------------
 (2) _LCD_CONFIG                                           1     1      0     135
                                              3 COMRAM     1     1      0
                      _ENVIA_LCD_CMD
                       _ENVIA_NIBBLE
 ---------------------------------------------------------------------------------
 (2) _CURSOR_ONOFF                                         1     1      0     150
                                              3 COMRAM     1     1      0
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _CURSOR_HOME                                          0     0      0     120
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _BORRAR_LCD                                           0     0      0     120
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _ENVIA_LCD_CMD                                        2     2      0     120
                                              1 COMRAM     2     2      0
                       _ENVIA_NIBBLE
                           _LEER_LCD
 ---------------------------------------------------------------------------------
 (1) _ESCRIBE_MENSAJE2                                     4     3      1     552
                                              3 COMRAM     4     3      1
                         _ENVIA_CHAR
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strlen                                               3     1      2     166
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _ENVIA_CHAR                                           2     2      0     120
                                              1 COMRAM     2     2      0
                       _ENVIA_NIBBLE
                           _LEER_LCD
 ---------------------------------------------------------------------------------
 (3) _LEER_LCD                                             1     1      0      45
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _ENVIA_NIBBLE                                         1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _INT0_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ENVIA_CHAR
     _ENVIA_NIBBLE
     _LEER_LCD
   _ESCRIBE_MENSAJE2
     _ENVIA_CHAR
     _strlen
   _LCD_INIT
     _BORRAR_LCD
       _ENVIA_LCD_CMD
         _ENVIA_NIBBLE
         _LEER_LCD
     _CURSOR_HOME
       _ENVIA_LCD_CMD
     _CURSOR_ONOFF
       _ENVIA_LCD_CMD
     _LCD_CONFIG
       _ENVIA_LCD_CMD
       _ENVIA_NIBBLE
   _POS_CURSOR
     _ENVIA_LCD_CMD
   ___flmul
     ___xxtofl (ARG)
   ___fltol
   ___xxtofl
   _configuro
   _convierte
     ___awdiv
       ___awmod (ARG)
     ___awmod

 _INT0_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0       0      70        0.0%
EEDATA             400      0       0       0        0.0%
BITBIGSFRhhhl      176      0       0      87        0.0%
BITBIGSFR_1        100      0       0      69        0.0%
BITBANK36          100      0       0      67        0.0%
BANK36             100      0       0      68        0.0%
BITBANK35          100      0       0      65        0.0%
BANK35             100      0       0      66        0.0%
BITBANK34          100      0       0      63        0.0%
BANK34             100      0       0      64        0.0%
BITBANK33          100      0       0      61        0.0%
BANK33             100      0       0      62        0.0%
BITBANK32          100      0       0      59        0.0%
BANK32             100      0       0      60        0.0%
BITBANK31          100      0       0      57        0.0%
BANK31             100      0       0      58        0.0%
BITBANK30          100      0       0      55        0.0%
BANK30             100      0       0      56        0.0%
BITBANK29          100      0       0      53        0.0%
BANK29             100      0       0      54        0.0%
BITBANK28          100      0       0      51        0.0%
BANK28             100      0       0      52        0.0%
BITBANK27          100      0       0      49        0.0%
BANK27             100      0       0      50        0.0%
BITBANK26          100      0       0      46        0.0%
BANK26             100      0       0      47        0.0%
BITBANK25          100      0       0      44        0.0%
BANK25             100      0       0      45        0.0%
BITBANK24          100      0       0      42        0.0%
BANK24             100      0       0      43        0.0%
BITBANK23          100      0       0      40        0.0%
BANK23             100      0       0      41        0.0%
BITBANK22          100      0       0      38        0.0%
BANK22             100      0       0      39        0.0%
BITBANK21          100      0       0      36        0.0%
BANK21             100      0       0      37        0.0%
BITBANK20          100      0       0      34        0.0%
BANK20             100      0       0      35        0.0%
BITBANK19          100      0       0      32        0.0%
BANK19             100      0       0      33        0.0%
BITBANK18          100      0       0      30        0.0%
BANK18             100      0       0      31        0.0%
BITBANK17          100      0       0      28        0.0%
BANK17             100      0       0      29        0.0%
BITBANK16          100      0       0      26        0.0%
BANK16             100      0       0      27        0.0%
BITBANK15          100      0       0      24        0.0%
BANK15             100      0       0      25        0.0%
BITBANK14          100      0       0      22        0.0%
BANK14             100      0       0      23        0.0%
BITBANK13          100      0       0      20        0.0%
BANK13             100      0       0      21        0.0%
BITBANK12          100      0       0      18        0.0%
BANK12             100      0       0      19        0.0%
BITBANK11          100      0       0      16        0.0%
BANK11             100      0       0      17        0.0%
BITBANK10          100      0       0      14        0.0%
BANK10             100      0       0      15        0.0%
BITBANK9           100      0       0      12        0.0%
BANK9              100      0       0      13        0.0%
BITBANK8           100      0       0      10        0.0%
BANK8              100      0       0      11        0.0%
BITBANK7           100      0       0       8        0.0%
BANK7              100      0       0       9        0.0%
BITBANK6           100      0       0       6        0.0%
BANK6              100      0       0       7        0.0%
BITBIGSFRhhhhll     E4      0       0      85        0.0%
BITBIGSFRhhhhll     C5      0       0      82        0.0%
BITBIGSFRl          AD      0       0      90        0.0%
BITBANK5            A0      0       0       4        0.0%
BANK5               A0      0       0       5        0.0%
BITBIGSFRhhhhlh     76      0       0      79        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     27      2F       1       49.5%
BITBIGSFRhhhhhh     29      0       0      71        0.0%
BITBIGSFRhhhhll     19      0       0      83        0.0%
BITBIGSFRhhhhll     13      0       0      86        0.0%
BITBIGSFRhhhhlh     11      0       0      77        0.0%
BITBIGSFRhhhhll      F      0       0      80        0.0%
BITBIGSFRhhhhlh      F      0       0      78        0.0%
BITBIGSFRhhhhll      E      0       0      81        0.0%
BITBIGSFRhhhhlh      5      0       0      76        0.0%
BITBIGSFRhhhhhl      5      0       0      73        0.0%
BITBIGSFRhhhhhl      4      0       0      72        0.0%
BITBIGSFRhl          3      0       0      89        0.0%
BITBIGSFRhhhhlh      1      0       0      74        0.0%
BITBIGSFRhhhhlh      1      0       0      75        0.0%
BITBIGSFRhhhhll      1      0       0      84        0.0%
BITBIGSFRhhl         1      0       0      88        0.0%
BIGSFR_1             0      0       0     200        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      2F      48        0.0%
DATA                 0      0      2F       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Mon Oct 23 11:04:07 2023

                      l62 2F6E                        l59 300E                        u10 2F14  
                      u11 2F10                        u20 3144                        u21 3140  
                      u30 315A                        u31 3156              ___awdiv@sign 050C  
           ENVIA_CHAR@aux 0503                       l105 2EA2                       l122 31CA  
                     l109 2EA2                       l151 3052                       l160 2FC2  
                     l170 2EDA                       l154 3130                       l163 31C2  
                     l139 3160                       l172 2F14                       l180 3090  
                     l157 31D2                       l166 30FC                       l442 2CC2  
                     l508 2BFE                       l455 2E28                       l900 2EB6  
                     l910 2ECE                       l902 2EBA                       l920 2EF2  
                     l912 2ED0                       l904 2EBC                       l832 27D6  
                     l825 25E0                       l930 31B6                       l922 2EFC  
                     l914 2EDC                       l906 2EC4                       l842 2906  
                     l834 284E                       l835 283C                       l932 31B8  
                     l916 2EE4                       l908 2EC6                       l940 30D2  
                     l829 2944                       l934 31C0                       l918 2EE8  
                     l926 2F02                       l950 30E4                       l942 30D6  
                     l928 31AA                       l960 3102                       l952 30EA  
                     l944 30DE                       l936 30CC                       l880 2A90  
                     l873 2A34                       l890 2EA4                       l970 3116  
                     l962 3106                       l954 30F0                       l946 30E0  
                     l938 30CE                       l866 299C                       l892 2EA8  
                     l972 3118                       l964 310A                       l956 30F6  
                     l948 30E2                       l980 31C4                       l869 2AF8  
                     l894 2EAA                       l974 311E                       l966 3112  
                     l958 3100                       l982 3134                       l896 2EAC  
                     l976 3124                       l968 3114                       l888 30C8  
                     l984 3144                       l898 2EAE                       l978 312A  
                     l986 314A                       l988 315A                       u700 2C2C  
                     u701 2C28                       u710 2C52                       u711 2C4E  
                     u720 2C70                       u800 2E18                       u721 2C6C  
                     u801 2E14                       u810 2E3C                       u730 2C8C  
                     u811 2E38                       u731 2C88                       u820 2E5A  
                     u900 25AA                       u740 2CB2                       u821 2E56  
                     u901 25A6                       u741 2CAE                       u830 2E78  
                     u910 25BA                       u750 2D8C                       u831 2E74  
                     u911 25B6                       u751 2D88                       u680 30BC  
                     u840 2E96                       u920 25F0                       u760 2DA6  
                     u681 30B8                       u841 2E92                       u921 25EC  
                     u761 2DA2                       u850 3052                       u930 2600  
                     u690 2C12                       u770 2DC0                       u851 304E  
                     u931 25FC                       u691 2C0E                       u771 2DBC  
                     u940 277A                       u860 2536                       u780 2DDE  
                     u861 2532                       u781 2DDA                       u950 27D4  
                     u870 2548                       u790 2DF4                       u951 27D0  
                     u871 2544                       u791 2DF0                       u960 27F4  
                     u880 2558                       u961 27F0                       u945 2770  
                     u881 2554                       u970 2806                       u890 2598  
                     u971 2802                       u891 2594                       u980 2834  
                     u981 2830                       u990 284A                       u991 2846  
            ___awmod@sign 0506               LEER_LCD@aux 0501                       wreg 04E8  
            ?_CURSOR_HOME 0501              ___flmul@aexp 0520              ___flmul@bexp 0521  
            ___flmul@sign 051B              ___flmul@temp 0526              ___flmul@prod 0522  
          ??_ENVIA_NIBBLE 0501              ___fltol@exp1 050A            ENVIA_CHAR@dato 0502  
                    l1000 31CC                      l1010 2F98                      l1002 2F70  
                    l1020 2FB6                      l1012 2F9E                      l1004 2F74  
                    l1022 2FBC                      l1014 2FA4                      l1006 2F7A  
                    l1110 2FF8                      l1016 2FAA                      l1008 2F8A  
                    l1120 300A                      l1112 2FFA                      l1104 2FC4  
                    l1018 2FB0                      l1130 306E                      l1122 300C  
                    l1114 2FFE                      l1106 2FD8                      l1132 3072  
                    l1116 3006                      l1108 2FDA                      l1134 3082  
                    l1126 3054                      l1118 3008                      l1136 3086  
                    l1128 305E                      l1138 308A                      l1600 2DF4  
                    l1530 30BC                      l1610 2E20                      l1602 2DFC  
                    l1524 3092                      l1620 2E48                      l1700 268A  
                    l1540 2C1A                      l1604 2E02                      l1526 309A  
                    l1630 2E96                      l1622 2E5A                      l1710 26DC  
                    l1702 2696                      l1550 2C40                      l1542 2C1E  
                    l1534 2C00                      l1606 2E08                      l1614 2F18  
                    l1528 309C                      l1640 303E                      l1632 3010  
                    l1624 2E66                      l1616 2E2C                      l1720 275A  
                    l1712 26EC                      l1704 26A6                      l1800 2B9E  
                    l1560 2C76                      l1552 2C52                      l1544 2C2C  
                    l1536 2C04                      l1608 2E18                      l1642 3040  
                    l1634 301C                      l1626 2E78                      l1618 2E3C  
                    l1730 27D4                      l1722 2790                      l1714 2708  
                    l1706 26B2                      l1650 2538                      l1810 2BCE  
                    l1562 2C8C                      l1554 2C5A                      l1570 2CA2  
                    l1546 2C34                      l1538 2C12                      l1636 301C  
                    l1628 2E84                      l1740 2834                      l1732 27E6  
                    l1724 279E                      l1716 2714                      l1708 26C2  
                    l1660 257E                      l1652 2548                      l1644 251C  
                    l1812 2BDE                      l1820 2958                      l1572 2CB2  
                    l1564 2C94                      l1556 2C62                      l1548 2C38  
                    l1580 2D7E                      l1638 3024                      l1750 28A2  
                    l1734 27F4                      l1726 27BC                      l1718 2730  
                    l1670 25AA                      l1662 2584                      l1654 2558  
                    l1646 2528                      l1814 2BEE                      l1806 2BB2  
                    l1830 29D6                      l1822 2966                      l1574 2CBA  
                    l1566 2C96                      l1558 2C70                      l1590 2DAE  
                    l1582 2D8C                      l1760 290A                      l1744 285E  
                    l1752 28A6                      l1736 27F8                      l1728 27C6  
                    l1680 2600                      l1672 25BA                      l1664 258A  
                    l1656 2568                      l1648 2536                      l1808 2BBE  
                    l1840 2A2A                      l1832 29DE                      l1824 29AC  
                    l1568 2C9C                      l1592 2DC0                      l1584 2D94  
                    l1770 2934                      l1762 291A                      l1754 28C0  
                    l1746 286A                      l1738 2806                      l1690 2640  
                    l1674 25CA                      l1666 2598                      l1658 256E  
                    l1850 2AA0                      l1842 2A66                      l1834 29EA  
                    l1826 29C2                      l1818 2948                      l1594 2DC8  
                    l1586 2D98                      l1578 2D7A                      l1764 2928  
                    l1756 28D4                      l1748 2878                      l1692 264C  
                    l1684 2614                      l1676 25D0                      l1668 259A  
                    l1780 2B24                      l1860 2AE8                      l1852 2AA4  
                    l1844 2A72                      l1836 2A1C                      l1596 2DD0  
                    l1588 2DA6                      l1766 292A                      l1758 28EE  
                    l1694 2664                      l1686 2620                      l1678 25F0  
                    l1790 2B72                      l1782 2B4E                      l1774 2AFA  
                    l1854 2AC8                      l1846 2A80                      l1838 2A1E  
                    l1598 2DDE                      l1870 2CD6                      l1768 2930  
                    l1696 2670                      l1688 262A                      l1784 2B50  
                    l1776 2B10                      l1856 2AD8                      l1848 2A9E  
                    l1880 2CFE                      l1872 2CDE                      l1864 2CC4  
                    l1698 267C                      l1786 2B60                      l1858 2AE6  
                    l1882 2D06                      l1874 2CE8                      l1866 2CC8  
                    l1796 2B8A                      l1788 2B64                      l1884 2D0E  
                    l1876 2CF0                      l1868 2CCC                      l1798 2B94  
                    l1886 2D14                      l1878 2CF6                      l1888 2D58  
                    STR_1 2501                      STR_2 250F                      u1000 285E  
                    u1001 285A                      u1010 2878                      u1011 2874  
                    u1020 28C0                      u1100 2BCE                      u1021 28BC  
                    u1101 2BCA                      u1030 28EE                      u1110 2BDE  
                    u1031 28EA                      u1111 2BDA                      u1040 2928  
                    u1200 2AD8                      u1120 2958                      u1041 2924  
                    u1201 2AD4                      u1121 2954                      u1050 2B10  
                    u1210 2AE6                      u1130 2966                      u1051 2B0C  
                    u1211 2AE2                      u1131 2962                      u1060 2B44  
                    u1140 29C2                      u1141 29BE                      u1070 2B72  
                    u1150 2A18                      u1071 2B6E                      u1151 2A14  
                    u1080 2B86                      u1160 2A62                      u1081 2B82  
                    u1065 2B3A                      u1161 2A5E                      u1090 2BAE  
                    u1170 2A80                      u1307 2EC8                      u1227 3064  
                    u1091 2BAA                      u1171 2A7C                      u1180 2A90  
                    u1317 2EDE                      u1237 3078                      u1181 2A8C  
                    u1190 2A9E                      u1327 2EEC                      u1247 2F80  
                    u1191 2A9A                      _LATD 04C1                      u1337 2EF6  
                    u1257 2F92                      u1347 31BA                      u1267 30D8  
                    u1277 310C                      u1287 2EB0                      u1297 2EBE  
                    _T2PR 0323                      i2l77 3186                      _main 2CC4  
                    prodh 04F4                      prodl 04F3                      start 0102  
           ?_CURSOR_ONOFF 0501              ___param_bank 0000           ??_ENVIA_LCD_CMD 0502  
        __end_of_LCD_INIT 3092          __end_of_LEER_LCD 2F16          __end_of_INT0_ISR 3188  
           ___fltol@sign1 0509                     ?_main 0501           __end_of___awdiv 2CC4  
         __end_of___awmod 2E2A           __end_of___flmul 2946           __end_of___fltol 2C00  
         ___awdiv@divisor 0509                     _T2CON 0324           ___awdiv@counter 050B  
                   _OSCEN 00B3                     _PORTD 04D1                     _TRISD 04C9  
             ?_POS_CURSOR 0504                     tablat 04F5                     status 04D8  
          ??_CURSOR_ONOFF 0504           __initialization 3188              __end_of_main 2D7A  
                  ??_main 0528             __activetblptr 0003                    _CCPR1H 0341  
                  _CCPR1L 0340          ___awdiv@dividend 0507                    _ANSELD 0418  
                  _RF1PPS 022A                    i2l1420 3180                    i2l1414 3164  
                  i2l1416 3166                    i2l1418 3178                    _OSCFRQ 00B1  
        __end_of___xxtofl 2AFA                 ??___awdiv 050B                    _decena 052D  
               ??___awmod 0505      __end_of_ENVIA_NIBBLE 31C4                 ??___flmul 0517  
               ??___fltol 0505                    clear_0 318E          ___awdiv@quotient 050D  
         ___awmod@divisor 0503                    isa$std 0001           ___awmod@counter 0505  
                  _unidad 052C                    _strlen 3092              __mediumconst 0000  
                  tblptrh 04F7                    tblptrl 04F6                    tblptru 04F8  
            ??_BORRAR_LCD 0504              ___xxtofl@arg 050B                 ?_LCD_INIT 0501  
            ___xxtofl@exp 050A              ___xxtofl@val 0501                 ?_LEER_LCD 0501  
              __accesstop 0560   __end_of__initialization 31A2                 ?_INT0_ISR 0501  
            ??_LCD_CONFIG 0504             ___rparam_used 0001              ??_ENVIA_CHAR 0502  
              ___fltol@f1 0501            __pcstackCOMRAM 0501            ivt0x8_undefint 0100  
      __end_of_BORRAR_LCD 31D4          _ESCRIBE_MENSAJE2 3010          ENVIA_LCD_CMD@aux 0503  
    __end_of_CURSOR_ONOFF 3162        __end_of_LCD_CONFIG 2FC4        __end_of_ENVIA_CHAR 3132  
              ??_LCD_INIT 0505                ??_LEER_LCD 0501          ENVIA_NIBBLE@dato 0501  
              ??_INT0_ISR 0501                   IVTBASEH 045E                   IVTBASEL 045D  
                 IVTBASEU 045F                   _CCP1CON 0342                   ?_strlen 0501  
                 _INT0PPS 023E                 ?___xxtofl 0501                   _OSCCON1 00AD  
                 i2u58_40 3178                   i2u58_41 3174              ??_POS_CURSOR 0505  
                 __Hparam 0000                   __Lparam 0000         __end_of_configuro 3010  
                 ___awdiv 2C00                   ___awmod 2D7A                   ___flmul 251C  
                 ___fltol 2AFA              __psmallconst 2500     __end_of_ENVIA_LCD_CMD 30FE  
       __end_of_convierte 2F70                   __pcinit 3188        __end_of_POS_CURSOR 2EA4  
                 __ramtop 2500                   _centena 052E                   __ptext0 2CC4  
                 __ptext1 2F16                   __ptext2 2D7A                   __ptext3 2C00  
                 __ptext4 2FC4                   __ptext5 2946                   __ptext6 2AFA  
                 __ptext7 251C                   __ptext8 2E2A                   __ptext9 3054  
              ??___xxtofl 0505          ___awmod@dividend 0501                _duty_cycle 052F  
            _ENVIA_NIBBLE 31A8      end_of_initialization 31A2                   postinc0 04EE  
                 strlen@a 0503                   strlen@s 0501         ESCRIBE_MENSAJE2@i 0507  
           ___xxtofl@sign 0509                 _TRISBbits 04C7                 _TRISFbits 04CB  
             ___flmul@grs 051C  __end_of_ESCRIBE_MENSAJE2 3054              _CURSOR_ONOFF 3132  
      CURSOR_ONOFF@estado 0504            __end_of_strlen 30CA             ??_CURSOR_HOME 0504  
     start_initialization 3188                ivt0x8_base 0008         ENVIA_LCD_CMD@dato 0502  
                ??_strlen 0503                 ___flmul@a 0513                 ___flmul@b 050F  
             __pbssCOMRAM 0528       __end_of_CURSOR_HOME 31CC                  ?___awdiv 0507  
                ?___awmod 0501                  ?___flmul 050F                  ?___fltol 0501  
               _configuro 2FC4               __smallconst 2500                 _convierte 2F16  
         convierte@numero 050F                  _T2CLKCON 0326                  _LCD_INIT 3054  
                _LEER_LCD 2EA4                  _INT0_ISR 3164                  _LATDbits 04C1  
                _PIE1bits 049F                  _PIR1bits 04AF            POS_CURSOR@fila 0505  
              ?_configuro 0501    ESCRIBE_MENSAJE2@cadena 0504                ?_convierte 0501  
                _WPUBbits 0409               _CURSOR_HOME 31C4               _INTCON0bits 04D6  
                __Hrparam 0000         ?_ESCRIBE_MENSAJE2 0504                  __Lrparam 0000  
      ??_ESCRIBE_MENSAJE2 0505                _ANSELBbits 0408                _ANSELFbits 0428  
                ___xxtofl 2946                  __pivt0x8 0008                  __ptext10 2F70  
                __ptext11 3132                  __ptext20 3164                  __ptext12 31C4  
                __ptext13 31CC                  __ptext14 30CA                  __ptext15 3010  
                __ptext16 3092                  __ptext17 30FE                  __ptext18 2EA4  
                __ptext19 31A8                _BORRAR_LCD 31CC                _LCD_CONFIG 2F70  
              _ENVIA_CHAR 30FE                  isa$xinst 0000                  _temporal 0528  
           _ENVIA_LCD_CMD 30CA               ??_configuro 0501               ??_convierte 050F  
                intlevel2 0000            ?_ENVIA_LCD_CMD 0501       ESCRIBE_MENSAJE2@tam 0506  
             ?_BORRAR_LCD 0501             ?_ENVIA_NIBBLE 0501                _POS_CURSOR 2E2A  
             ?_LCD_CONFIG 0501               ?_ENVIA_CHAR 0501         POS_CURSOR@columna 0504  
