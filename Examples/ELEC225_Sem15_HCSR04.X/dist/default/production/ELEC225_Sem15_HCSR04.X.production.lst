

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Mon Jul 10 10:06:47 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	18F57Q43
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1
    14                           	psect	text6,global,reloc=2,class=CODE,delta=1
    15                           	psect	text7,global,reloc=2,class=CODE,delta=1
    16                           	psect	text8,global,reloc=2,class=CODE,delta=1
    17                           	psect	text9,global,reloc=2,class=CODE,delta=1
    18                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    19                           	psect	text11,global,reloc=2,class=CODE,delta=1
    20                           	psect	text12,global,reloc=2,class=CODE,delta=1
    21                           	psect	text13,global,reloc=2,class=CODE,delta=1
    22                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    23                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    24                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    25                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    26   000000                     
    27                           ; Generated 17/06/2022 GMT
    28                           ; 
    29                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    30                           ; All rights reserved.
    31                           ; 
    32                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    33                           ; 
    34                           ; Redistribution and use in source and binary forms, with or without modification, are
    35                           ; permitted provided that the following conditions are met:
    36                           ; 
    37                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    38                           ;        conditions and the following disclaimer.
    39                           ; 
    40                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    41                           ;        of conditions and the following disclaimer in the documentation and/or other
    42                           ;        materials provided with the distribution. Publication is not required when
    43                           ;        this file is used in an embedded application.
    44                           ; 
    45                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    46                           ;        software without specific prior written permission.
    47                           ; 
    48                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    49                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    50                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    51                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    52                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    53                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    54                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    55                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    56                           ; 
    57                           ; 
    58                           ; Code-generator required, PIC18F57Q43 Definitions
    59                           ; 
    60                           ; SFR Addresses
    61   000000                     _LATD	set	1217
    62   000000                     _ANSELD	set	1048
    63   000000                     _LATDbits	set	1217
    64   000000                     _TRISD	set	1225
    65   000000                     _PORTD	set	1233
    66                           
    67                           	psect	smallconst
    68   002600                     __psmallconst:
    69                           	callstack 0
    70   002600  00                 	db	0
    71   002601                     STR_1:
    72   002601  48                 	db	72	;'H'
    73   002602  6F                 	db	111	;'o'
    74   002603  6C                 	db	108	;'l'
    75   002604  61                 	db	97	;'a'
    76   002605  20                 	db	32
    77   002606  6D                 	db	109	;'m'
    78   002607  75                 	db	117	;'u'
    79   002608  6E                 	db	110	;'n'
    80   002609  64                 	db	100	;'d'
    81   00260A  6F                 	db	111	;'o'
    82   00260B  00                 	db	0
    83   00260C                     STR_2:
    84   00260C  53                 	db	83	;'S'
    85   00260D  65                 	db	101	;'e'
    86   00260E  6D                 	db	109	;'m'
    87   00260F  61                 	db	97	;'a'
    88   002610  6E                 	db	110	;'n'
    89   002611  61                 	db	97	;'a'
    90   002612  20                 	db	32
    91   002613  31                 	db	49	;'1'
    92   002614  35                 	db	53	;'5'
    93   002615  00                 	db	0
    94   002616  00                 	db	0	; dummy byte at the end
    95   000000                     
    96                           ; #config settings
    97                           
    98                           	psect	cinit
    99   002918                     __pcinit:
   100                           	callstack 0
   101   002918                     start_initialization:
   102                           	callstack 0
   103   002918                     __initialization:
   104                           	callstack 0
   105   002918                     end_of_initialization:
   106                           	callstack 0
   107   002918                     __end_of__initialization:
   108                           	callstack 0
   109   002918  0100               	movlb	0
   110   00291A  EF0E  F014         	goto	_main	;jump to C main() function
   111                           
   112                           	psect	cstackCOMRAM
   113   000501                     __pcstackCOMRAM:
   114                           	callstack 0
   115   000501                     ?_strlen:
   116                           	callstack 0
   117   000501                     ENVIA_NIBBLE@dato:
   118                           	callstack 0
   119   000501                     LEER_LCD@aux:
   120                           	callstack 0
   121   000501                     strlen@s:
   122                           	callstack 0
   123                           
   124                           ; 2 bytes @ 0x0
   125   000501                     	ds	1
   126   000502                     ENVIA_CHAR@dato:
   127                           	callstack 0
   128   000502                     ENVIA_LCD_CMD@dato:
   129                           	callstack 0
   130                           
   131                           ; 1 bytes @ 0x1
   132   000502                     	ds	1
   133   000503                     ENVIA_CHAR@aux:
   134                           	callstack 0
   135   000503                     ENVIA_LCD_CMD@aux:
   136                           	callstack 0
   137   000503                     strlen@a:
   138                           	callstack 0
   139                           
   140                           ; 2 bytes @ 0x2
   141   000503                     	ds	1
   142   000504                     ??_LCD_CONFIG:
   143   000504                     POS_CURSOR@columna:
   144                           	callstack 0
   145   000504                     CURSOR_ONOFF@estado:
   146                           	callstack 0
   147                           
   148                           ; 1 bytes @ 0x3
   149   000504                     	ds	1
   150   000505                     ??_LCD_INIT:
   151   000505                     POS_CURSOR@fila:
   152                           	callstack 0
   153   000505                     ESCRIBE_MENSAJE2@cadena:
   154                           	callstack 0
   155                           
   156                           ; 2 bytes @ 0x4
   157   000505                     	ds	1
   158   000506                     
   159                           ; 1 bytes @ 0x5
   160   000506                     	ds	1
   161   000507                     ??_ESCRIBE_MENSAJE2:
   162                           
   163                           ; 1 bytes @ 0x6
   164   000507                     	ds	2
   165   000509                     ESCRIBE_MENSAJE2@tam:
   166                           	callstack 0
   167                           
   168                           ; 1 bytes @ 0x8
   169   000509                     	ds	1
   170   00050A                     ESCRIBE_MENSAJE2@i:
   171                           	callstack 0
   172                           
   173                           ; 1 bytes @ 0x9
   174   00050A                     	ds	1
   175   00050B                     
   176                           ; 1 bytes @ 0xA
   177 ;;
   178 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   179 ;;
   180 ;; *************** function _main *****************
   181 ;; Defined at:
   182 ;;		line 10 in file "maincode.c"
   183 ;; Parameters:    Size  Location     Type
   184 ;;		None
   185 ;; Auto vars:     Size  Location     Type
   186 ;;		None
   187 ;; Return value:  Size  Location     Type
   188 ;;                  1    wreg      void 
   189 ;; Registers used:
   190 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   191 ;; Tracked objects:
   192 ;;		On entry : 0/0
   193 ;;		On exit  : 0/0
   194 ;;		Unchanged: 0/0
   195 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   196 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   197 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   198 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   199 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   200 ;;Total ram usage:        0 bytes
   201 ;; Hardware stack levels required when called: 5
   202 ;; This function calls:
   203 ;;		_ESCRIBE_MENSAJE2
   204 ;;		_POS_CURSOR
   205 ;;		_configuro
   206 ;; This function is called by:
   207 ;;		Startup code after reset
   208 ;; This function uses a non-reentrant model
   209 ;;
   210                           
   211                           	psect	text0
   212   00281C                     __ptext0:
   213                           	callstack 0
   214   00281C                     _main:
   215                           	callstack 122
   216   00281C                     
   217                           ;maincode.c: 11:     configuro();
   218   00281C  EC8F  F014         	call	_configuro	;wreg free
   219   002820                     l14:
   220                           
   221                           ;maincode.c: 13:         POS_CURSOR(1,0);
   222   002820  0E00               	movlw	0
   223   002822  6E04               	movwf	POS_CURSOR@columna^(0+1280),c
   224   002824  0E01               	movlw	1
   225   002826  EC0C  F013         	call	_POS_CURSOR
   226   00282A                     
   227                           ;maincode.c: 14:         ESCRIBE_MENSAJE2("Hola mundo");
   228   00282A  0E01               	movlw	low STR_1
   229   00282C  6E05               	movwf	ESCRIBE_MENSAJE2@cadena^(0+1280),c
   230   00282E  0E26               	movlw	high STR_1
   231   002830  6E06               	movwf	(ESCRIBE_MENSAJE2@cadena+1)^(0+1280),c
   232   002832  ECAB  F013         	call	_ESCRIBE_MENSAJE2	;wreg free
   233   002836                     
   234                           ;maincode.c: 15:         POS_CURSOR(2,0);
   235   002836  0E00               	movlw	0
   236   002838  6E04               	movwf	POS_CURSOR@columna^(0+1280),c
   237   00283A  0E02               	movlw	2
   238   00283C  EC0C  F013         	call	_POS_CURSOR
   239                           
   240                           ;maincode.c: 16:         ESCRIBE_MENSAJE2("Semana 15");
   241   002840  0E0C               	movlw	low STR_2
   242   002842  6E05               	movwf	ESCRIBE_MENSAJE2@cadena^(0+1280),c
   243   002844  0E26               	movlw	high STR_2
   244   002846  6E06               	movwf	(ESCRIBE_MENSAJE2@cadena+1)^(0+1280),c
   245   002848  ECAB  F013         	call	_ESCRIBE_MENSAJE2	;wreg free
   246   00284C  EF10  F014         	goto	l14
   247   002850  EFFE  F0FF         	goto	start
   248   002854                     __end_of_main:
   249                           	callstack 0
   250                           
   251 ;; *************** function _configuro *****************
   252 ;; Defined at:
   253 ;;		line 6 in file "maincode.c"
   254 ;; Parameters:    Size  Location     Type
   255 ;;		None
   256 ;; Auto vars:     Size  Location     Type
   257 ;;		None
   258 ;; Return value:  Size  Location     Type
   259 ;;                  1    wreg      void 
   260 ;; Registers used:
   261 ;;		wreg, status,2, status,0, cstack
   262 ;; Tracked objects:
   263 ;;		On entry : 0/0
   264 ;;		On exit  : 0/0
   265 ;;		Unchanged: 0/0
   266 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   267 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   268 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   269 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   270 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   271 ;;Total ram usage:        0 bytes
   272 ;; Hardware stack levels used: 1
   273 ;; Hardware stack levels required when called: 4
   274 ;; This function calls:
   275 ;;		_LCD_INIT
   276 ;; This function is called by:
   277 ;;		_main
   278 ;; This function uses a non-reentrant model
   279 ;;
   280                           
   281                           	psect	text1
   282   00291E                     __ptext1:
   283                           	callstack 0
   284   00291E                     _configuro:
   285                           	callstack 122
   286   00291E                     
   287                           ;maincode.c: 7:     LCD_INIT();
   288   00291E  ECF1  F013         	call	_LCD_INIT	;wreg free
   289   002922  0012               	return		;funcret
   290   002924                     __end_of_configuro:
   291                           	callstack 0
   292                           
   293 ;; *************** function _LCD_INIT *****************
   294 ;; Defined at:
   295 ;;		line 192 in file "LCD.c"
   296 ;; Parameters:    Size  Location     Type
   297 ;;		None
   298 ;; Auto vars:     Size  Location     Type
   299 ;;		None
   300 ;; Return value:  Size  Location     Type
   301 ;;                  1    wreg      void 
   302 ;; Registers used:
   303 ;;		wreg, status,2, status,0, cstack
   304 ;; Tracked objects:
   305 ;;		On entry : 0/0
   306 ;;		On exit  : 0/0
   307 ;;		Unchanged: 0/0
   308 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   309 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   310 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   311 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   312 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   313 ;;Total ram usage:        1 bytes
   314 ;; Hardware stack levels used: 1
   315 ;; Hardware stack levels required when called: 3
   316 ;; This function calls:
   317 ;;		_BORRAR_LCD
   318 ;;		_CURSOR_HOME
   319 ;;		_CURSOR_ONOFF
   320 ;;		_LCD_CONFIG
   321 ;; This function is called by:
   322 ;;		_configuro
   323 ;; This function uses a non-reentrant model
   324 ;;
   325                           
   326                           	psect	text2
   327   0027E2                     __ptext2:
   328                           	callstack 0
   329   0027E2                     _LCD_INIT:
   330                           	callstack 122
   331   0027E2                     
   332                           ;LCD.c: 193:     TRISD = 0x00;
   333   0027E2  0E00               	movlw	0
   334   0027E4  6EC9               	movwf	201,c	;volatile
   335                           
   336                           ;LCD.c: 194:     ANSELD = 0x00;
   337   0027E6  0E00               	movlw	0
   338   0027E8  0104               	movlb	4	; () banked
   339   0027EA  6F18               	movwf	24,b	;volatile
   340   0027EC                     
   341                           ; BSR set to: 4
   342                           ;LCD.c: 195:     _delay((unsigned long)((15)*(4000000UL/4000.0)));
   343   0027EC  0E14               	movlw	20
   344   0027EE  6E05               	movwf	??_LCD_INIT^(0+1280),c
   345   0027F0  0E7A               	movlw	122
   346   0027F2                     u257:
   347   0027F2  2EE8               	decfsz	wreg,f,c
   348   0027F4  D7FE               	bra	u257
   349   0027F6  2E05               	decfsz	??_LCD_INIT^(0+1280),f,c
   350   0027F8  D7FC               	bra	u257
   351   0027FA                     
   352                           ;LCD.c: 196:     LCD_CONFIG();
   353   0027FA  EC82  F013         	call	_LCD_CONFIG	;wreg free
   354   0027FE                     
   355                           ;LCD.c: 197:     _delay((unsigned long)((15)*(4000000UL/4000.0)));
   356   0027FE  0E14               	movlw	20
   357   002800  6E05               	movwf	??_LCD_INIT^(0+1280),c
   358   002802  0E7A               	movlw	122
   359   002804                     u267:
   360   002804  2EE8               	decfsz	wreg,f,c
   361   002806  D7FE               	bra	u267
   362   002808  2E05               	decfsz	??_LCD_INIT^(0+1280),f,c
   363   00280A  D7FC               	bra	u267
   364   00280C                     
   365                           ;LCD.c: 198:     BORRAR_LCD();
   366   00280C  EC88  F014         	call	_BORRAR_LCD	;wreg free
   367   002810                     
   368                           ;LCD.c: 199:     CURSOR_HOME();
   369   002810  EC84  F014         	call	_CURSOR_HOME	;wreg free
   370   002814                     
   371                           ;LCD.c: 200:     CURSOR_ONOFF(1);
   372   002814  0E01               	movlw	1
   373   002816  EC5E  F014         	call	_CURSOR_ONOFF
   374   00281A  0012               	return		;funcret
   375   00281C                     __end_of_LCD_INIT:
   376                           	callstack 0
   377                           
   378 ;; *************** function _LCD_CONFIG *****************
   379 ;; Defined at:
   380 ;;		line 109 in file "LCD.c"
   381 ;; Parameters:    Size  Location     Type
   382 ;;		None
   383 ;; Auto vars:     Size  Location     Type
   384 ;;		None
   385 ;; Return value:  Size  Location     Type
   386 ;;                  1    wreg      void 
   387 ;; Registers used:
   388 ;;		wreg, status,2, status,0, cstack
   389 ;; Tracked objects:
   390 ;;		On entry : 0/0
   391 ;;		On exit  : 0/0
   392 ;;		Unchanged: 0/0
   393 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   394 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   395 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   396 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   397 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   398 ;;Total ram usage:        1 bytes
   399 ;; Hardware stack levels used: 1
   400 ;; Hardware stack levels required when called: 2
   401 ;; This function calls:
   402 ;;		_ENVIA_LCD_CMD
   403 ;;		_ENVIA_NIBBLE
   404 ;; This function is called by:
   405 ;;		_LCD_INIT
   406 ;; This function uses a non-reentrant model
   407 ;;
   408                           
   409                           	psect	text3
   410   002704                     __ptext3:
   411                           	callstack 0
   412   002704                     _LCD_CONFIG:
   413                           	callstack 122
   414   002704                     
   415                           ;LCD.c: 111:  LATDbits.LATD0 = 0;
   416   002704  90C1               	bcf	193,0,c	;volatile
   417                           
   418                           ;LCD.c: 112:  LATDbits.LATD1 = 0;
   419   002706  92C1               	bcf	193,1,c	;volatile
   420   002708                     
   421                           ;LCD.c: 113:  ENVIA_NIBBLE(0x30);
   422   002708  0E30               	movlw	48
   423   00270A  EC76  F014         	call	_ENVIA_NIBBLE
   424   00270E                     
   425                           ;LCD.c: 114:     _delay((unsigned long)((2)*(4000000UL/4000.0)));
   426   00270E  0E03               	movlw	3
   427   002710  6E04               	movwf	??_LCD_CONFIG^(0+1280),c
   428   002712  0E98               	movlw	152
   429   002714                     u277:
   430   002714  2EE8               	decfsz	wreg,f,c
   431   002716  D7FE               	bra	u277
   432   002718  2E04               	decfsz	??_LCD_CONFIG^(0+1280),f,c
   433   00271A  D7FC               	bra	u277
   434   00271C                     
   435                           ;LCD.c: 115:  ENVIA_NIBBLE(0x30);
   436   00271C  0E30               	movlw	48
   437   00271E  EC76  F014         	call	_ENVIA_NIBBLE
   438                           
   439                           ;LCD.c: 116:     _delay((unsigned long)((100)*(4000000UL/4000000.0)));
   440   002722  0E21               	movlw	33
   441   002724                     u287:
   442   002724  2EE8               	decfsz	wreg,f,c
   443   002726  D7FE               	bra	u287
   444   002728  F000               	nop	
   445   00272A                     
   446                           ;LCD.c: 117:     ENVIA_NIBBLE(0x30);
   447   00272A  0E30               	movlw	48
   448   00272C  EC76  F014         	call	_ENVIA_NIBBLE
   449   002730                     
   450                           ;LCD.c: 118:  ENVIA_NIBBLE(0x20);
   451   002730  0E20               	movlw	32
   452   002732  EC76  F014         	call	_ENVIA_NIBBLE
   453   002736                     
   454                           ;LCD.c: 119:  ENVIA_LCD_CMD(0x01);
   455   002736  0E01               	movlw	1
   456   002738  EC2A  F014         	call	_ENVIA_LCD_CMD
   457   00273C                     
   458                           ;LCD.c: 120:  ENVIA_LCD_CMD(0x28);
   459   00273C  0E28               	movlw	40
   460   00273E  EC2A  F014         	call	_ENVIA_LCD_CMD
   461   002742                     
   462                           ;LCD.c: 121:  ENVIA_LCD_CMD(0x0F);
   463   002742  0E0F               	movlw	15
   464   002744  EC2A  F014         	call	_ENVIA_LCD_CMD
   465   002748                     
   466                           ;LCD.c: 122:  ENVIA_LCD_CMD(0x06);
   467   002748  0E06               	movlw	6
   468   00274A  EC2A  F014         	call	_ENVIA_LCD_CMD
   469   00274E                     
   470                           ;LCD.c: 123:  ENVIA_LCD_CMD(0x01);
   471   00274E  0E01               	movlw	1
   472   002750  EC2A  F014         	call	_ENVIA_LCD_CMD
   473   002754  0012               	return		;funcret
   474   002756                     __end_of_LCD_CONFIG:
   475                           	callstack 0
   476                           
   477 ;; *************** function _CURSOR_ONOFF *****************
   478 ;; Defined at:
   479 ;;		line 62 in file "LCD.c"
   480 ;; Parameters:    Size  Location     Type
   481 ;;  estado          1    wreg     unsigned char 
   482 ;; Auto vars:     Size  Location     Type
   483 ;;  estado          1    3[COMRAM] unsigned char 
   484 ;; Return value:  Size  Location     Type
   485 ;;                  1    wreg      void 
   486 ;; Registers used:
   487 ;;		wreg, status,2, status,0, cstack
   488 ;; Tracked objects:
   489 ;;		On entry : 0/0
   490 ;;		On exit  : 0/0
   491 ;;		Unchanged: 0/0
   492 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   493 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   494 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   495 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   496 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   497 ;;Total ram usage:        1 bytes
   498 ;; Hardware stack levels used: 1
   499 ;; Hardware stack levels required when called: 2
   500 ;; This function calls:
   501 ;;		_ENVIA_LCD_CMD
   502 ;; This function is called by:
   503 ;;		_LCD_INIT
   504 ;; This function uses a non-reentrant model
   505 ;;
   506                           
   507                           	psect	text4
   508   0028BC                     __ptext4:
   509                           	callstack 0
   510   0028BC                     _CURSOR_ONOFF:
   511                           	callstack 122
   512                           
   513                           ;incstack = 0
   514                           ;CURSOR_ONOFF@estado stored from wreg
   515   0028BC  6E04               	movwf	CURSOR_ONOFF@estado^(0+1280),c
   516   0028BE                     
   517                           ;LCD.c: 62: void CURSOR_ONOFF(unsigned char estado);LCD.c: 63: {;LCD.c: 64:  if(estado =
      +                          = 0) ENVIA_LCD_CMD(0x0E);
   518   0028BE  5004               	movf	CURSOR_ONOFF@estado^(0+1280),w,c
   519   0028C0  A4D8               	btfss	status,2,c
   520   0028C2  EF65  F014         	goto	u21
   521   0028C6  EF67  F014         	goto	u20
   522   0028CA                     u21:
   523   0028CA  EF6A  F014         	goto	l904
   524   0028CE                     u20:
   525   0028CE  0E0E               	movlw	14
   526   0028D0  EC2A  F014         	call	_ENVIA_LCD_CMD
   527   0028D4                     l904:
   528                           
   529                           ;LCD.c: 65:  if(estado == 1) ENVIA_LCD_CMD(0x0C);
   530   0028D4  0404               	decf	CURSOR_ONOFF@estado^(0+1280),w,c
   531   0028D6  A4D8               	btfss	status,2,c
   532   0028D8  EF70  F014         	goto	u31
   533   0028DC  EF72  F014         	goto	u30
   534   0028E0                     u31:
   535   0028E0  EF75  F014         	goto	l79
   536   0028E4                     u30:
   537   0028E4  0E0C               	movlw	12
   538   0028E6  EC2A  F014         	call	_ENVIA_LCD_CMD
   539   0028EA                     l79:
   540   0028EA  0012               	return		;funcret
   541   0028EC                     __end_of_CURSOR_ONOFF:
   542                           	callstack 0
   543                           
   544 ;; *************** function _CURSOR_HOME *****************
   545 ;; Defined at:
   546 ;;		line 37 in file "LCD.c"
   547 ;; Parameters:    Size  Location     Type
   548 ;;		None
   549 ;; Auto vars:     Size  Location     Type
   550 ;;		None
   551 ;; Return value:  Size  Location     Type
   552 ;;                  1    wreg      void 
   553 ;; Registers used:
   554 ;;		wreg, status,2, status,0, cstack
   555 ;; Tracked objects:
   556 ;;		On entry : 0/0
   557 ;;		On exit  : 0/0
   558 ;;		Unchanged: 0/0
   559 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   560 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   561 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   562 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   563 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   564 ;;Total ram usage:        0 bytes
   565 ;; Hardware stack levels used: 1
   566 ;; Hardware stack levels required when called: 2
   567 ;; This function calls:
   568 ;;		_ENVIA_LCD_CMD
   569 ;; This function is called by:
   570 ;;		_LCD_INIT
   571 ;; This function uses a non-reentrant model
   572 ;;
   573                           
   574                           	psect	text5
   575   002908                     __ptext5:
   576                           	callstack 0
   577   002908                     _CURSOR_HOME:
   578                           	callstack 122
   579   002908                     
   580                           ;LCD.c: 39:  ENVIA_LCD_CMD(0x02);
   581   002908  0E02               	movlw	2
   582   00290A  EC2A  F014         	call	_ENVIA_LCD_CMD
   583   00290E  0012               	return		;funcret
   584   002910                     __end_of_CURSOR_HOME:
   585                           	callstack 0
   586                           
   587 ;; *************** function _BORRAR_LCD *****************
   588 ;; Defined at:
   589 ;;		line 104 in file "LCD.c"
   590 ;; Parameters:    Size  Location     Type
   591 ;;		None
   592 ;; Auto vars:     Size  Location     Type
   593 ;;		None
   594 ;; Return value:  Size  Location     Type
   595 ;;                  1    wreg      void 
   596 ;; Registers used:
   597 ;;		wreg, status,2, status,0, cstack
   598 ;; Tracked objects:
   599 ;;		On entry : 0/0
   600 ;;		On exit  : 0/0
   601 ;;		Unchanged: 0/0
   602 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   603 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   604 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   605 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   606 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   607 ;;Total ram usage:        0 bytes
   608 ;; Hardware stack levels used: 1
   609 ;; Hardware stack levels required when called: 2
   610 ;; This function calls:
   611 ;;		_ENVIA_LCD_CMD
   612 ;; This function is called by:
   613 ;;		_LCD_INIT
   614 ;; This function uses a non-reentrant model
   615 ;;
   616                           
   617                           	psect	text6
   618   002910                     __ptext6:
   619                           	callstack 0
   620   002910                     _BORRAR_LCD:
   621                           	callstack 122
   622   002910                     
   623                           ;LCD.c: 106:  ENVIA_LCD_CMD(0x01);
   624   002910  0E01               	movlw	1
   625   002912  EC2A  F014         	call	_ENVIA_LCD_CMD
   626   002916  0012               	return		;funcret
   627   002918                     __end_of_BORRAR_LCD:
   628                           	callstack 0
   629                           
   630 ;; *************** function _POS_CURSOR *****************
   631 ;; Defined at:
   632 ;;		line 5 in file "LCD.c"
   633 ;; Parameters:    Size  Location     Type
   634 ;;  fila            1    wreg     unsigned char 
   635 ;;  columna         1    3[COMRAM] unsigned char 
   636 ;; Auto vars:     Size  Location     Type
   637 ;;  fila            1    4[COMRAM] unsigned char 
   638 ;; Return value:  Size  Location     Type
   639 ;;                  1    wreg      void 
   640 ;; Registers used:
   641 ;;		wreg, status,2, status,0, cstack
   642 ;; Tracked objects:
   643 ;;		On entry : 0/0
   644 ;;		On exit  : 0/0
   645 ;;		Unchanged: 0/0
   646 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   647 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   648 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   649 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   650 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   651 ;;Total ram usage:        2 bytes
   652 ;; Hardware stack levels used: 1
   653 ;; Hardware stack levels required when called: 2
   654 ;; This function calls:
   655 ;;		_ENVIA_LCD_CMD
   656 ;; This function is called by:
   657 ;;		_main
   658 ;; This function uses a non-reentrant model
   659 ;;
   660                           
   661                           	psect	text7
   662   002618                     __ptext7:
   663                           	callstack 0
   664   002618                     _POS_CURSOR:
   665                           	callstack 124
   666                           
   667                           ;incstack = 0
   668                           ;POS_CURSOR@fila stored from wreg
   669   002618  6E05               	movwf	POS_CURSOR@fila^(0+1280),c
   670   00261A                     
   671                           ;LCD.c: 5: void POS_CURSOR(unsigned char fila,unsigned char columna);LCD.c: 6: {;LCD.c: 
      +                          7:  if(fila == 1)
   672   00261A  0405               	decf	POS_CURSOR@fila^(0+1280),w,c
   673   00261C  A4D8               	btfss	status,2,c
   674   00261E  EF13  F013         	goto	u201
   675   002622  EF15  F013         	goto	u200
   676   002626                     u201:
   677   002626  EF1B  F013         	goto	l1130
   678   00262A                     u200:
   679   00262A                     
   680                           ;LCD.c: 8:  {;LCD.c: 9:   ENVIA_LCD_CMD(0x80+columna);
   681   00262A  5004               	movf	POS_CURSOR@columna^(0+1280),w,c
   682   00262C  0F80               	addlw	128
   683   00262E  EC2A  F014         	call	_ENVIA_LCD_CMD
   684                           
   685                           ;LCD.c: 10:  }
   686   002632  EF48  F013         	goto	l49
   687   002636                     l1130:
   688   002636  0E02               	movlw	2
   689   002638  1805               	xorwf	POS_CURSOR@fila^(0+1280),w,c
   690   00263A  A4D8               	btfss	status,2,c
   691   00263C  EF22  F013         	goto	u211
   692   002640  EF24  F013         	goto	u210
   693   002644                     u211:
   694   002644  EF2A  F013         	goto	l1134
   695   002648                     u210:
   696   002648                     
   697                           ;LCD.c: 12:  {;LCD.c: 13:   ENVIA_LCD_CMD(0xC0+columna);
   698   002648  5004               	movf	POS_CURSOR@columna^(0+1280),w,c
   699   00264A  0FC0               	addlw	192
   700   00264C  EC2A  F014         	call	_ENVIA_LCD_CMD
   701                           
   702                           ;LCD.c: 14:  }
   703   002650  EF48  F013         	goto	l49
   704   002654                     l1134:
   705   002654  0E03               	movlw	3
   706   002656  1805               	xorwf	POS_CURSOR@fila^(0+1280),w,c
   707   002658  A4D8               	btfss	status,2,c
   708   00265A  EF31  F013         	goto	u221
   709   00265E  EF33  F013         	goto	u220
   710   002662                     u221:
   711   002662  EF39  F013         	goto	l1138
   712   002666                     u220:
   713   002666                     
   714                           ;LCD.c: 16:  {;LCD.c: 17:   ENVIA_LCD_CMD(0x94+columna);
   715   002666  5004               	movf	POS_CURSOR@columna^(0+1280),w,c
   716   002668  0F94               	addlw	148
   717   00266A  EC2A  F014         	call	_ENVIA_LCD_CMD
   718                           
   719                           ;LCD.c: 18:  }
   720   00266E  EF48  F013         	goto	l49
   721   002672                     l1138:
   722   002672  0E04               	movlw	4
   723   002674  1805               	xorwf	POS_CURSOR@fila^(0+1280),w,c
   724   002676  A4D8               	btfss	status,2,c
   725   002678  EF40  F013         	goto	u231
   726   00267C  EF42  F013         	goto	u230
   727   002680                     u231:
   728   002680  EF48  F013         	goto	l45
   729   002684                     u230:
   730   002684                     
   731                           ;LCD.c: 20:  {;LCD.c: 21:   ENVIA_LCD_CMD(0xD4+columna);
   732   002684  5004               	movf	POS_CURSOR@columna^(0+1280),w,c
   733   002686  0FD4               	addlw	212
   734   002688  EC2A  F014         	call	_ENVIA_LCD_CMD
   735   00268C  EF48  F013         	goto	l49
   736   002690                     l45:
   737   002690                     l49:
   738   002690  0012               	return		;funcret
   739   002692                     __end_of_POS_CURSOR:
   740                           	callstack 0
   741                           
   742 ;; *************** function _ENVIA_LCD_CMD *****************
   743 ;; Defined at:
   744 ;;		line 136 in file "LCD.c"
   745 ;; Parameters:    Size  Location     Type
   746 ;;  dato            1    wreg     unsigned char 
   747 ;; Auto vars:     Size  Location     Type
   748 ;;  dato            1    1[COMRAM] unsigned char 
   749 ;;  aux             1    2[COMRAM] unsigned char 
   750 ;; Return value:  Size  Location     Type
   751 ;;                  1    wreg      void 
   752 ;; Registers used:
   753 ;;		wreg, status,2, status,0, cstack
   754 ;; Tracked objects:
   755 ;;		On entry : 0/0
   756 ;;		On exit  : 0/0
   757 ;;		Unchanged: 0/0
   758 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   759 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   760 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   761 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   762 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   763 ;;Total ram usage:        2 bytes
   764 ;; Hardware stack levels used: 1
   765 ;; Hardware stack levels required when called: 1
   766 ;; This function calls:
   767 ;;		_ENVIA_NIBBLE
   768 ;;		_LEER_LCD
   769 ;; This function is called by:
   770 ;;		_POS_CURSOR
   771 ;;		_CURSOR_HOME
   772 ;;		_CURSOR_ONOFF
   773 ;;		_BORRAR_LCD
   774 ;;		_LCD_CONFIG
   775 ;;		_BLINK_CURSOR
   776 ;;		_DISPLAY_ONOFF
   777 ;;		_CURSOR_SHIFTLEFT
   778 ;;		_CURSOR_SHIFTRIGHT
   779 ;;		_DISPLAY_SHIFTLEFT
   780 ;;		_DISPLAY_SHIFTRIGHT
   781 ;;		_GENERACARACTER
   782 ;; This function uses a non-reentrant model
   783 ;;
   784                           
   785                           	psect	text8
   786   002854                     __ptext8:
   787                           	callstack 0
   788   002854                     _ENVIA_LCD_CMD:
   789                           	callstack 122
   790                           
   791                           ;incstack = 0
   792                           ;ENVIA_LCD_CMD@dato stored from wreg
   793   002854  6E02               	movwf	ENVIA_LCD_CMD@dato^(0+1280),c
   794   002856                     
   795                           ;LCD.c: 136: void ENVIA_LCD_CMD(unsigned char dato);LCD.c: 137: {;LCD.c: 138:  unsigned 
      +                          char aux;;LCD.c: 139:  LATDbits.LATD0 = 0;
   796   002856  90C1               	bcf	193,0,c	;volatile
   797   002858                     
   798                           ;LCD.c: 140:  LEER_LCD();
   799   002858  EC49  F013         	call	_LEER_LCD	;wreg free
   800   00285C                     
   801                           ;LCD.c: 141:  TRISD = 0b00000000;
   802   00285C  0E00               	movlw	0
   803   00285E  6EC9               	movwf	201,c	;volatile
   804   002860                     
   805                           ;LCD.c: 142:     _delay((unsigned long)((100)*(4000000UL/4000000.0)));
   806   002860  0E21               	movlw	33
   807   002862                     u297:
   808   002862  2EE8               	decfsz	wreg,f,c
   809   002864  D7FE               	bra	u297
   810   002866  F000               	nop	
   811   002868                     
   812                           ;LCD.c: 143:     LATDbits.LATD1 = 0;
   813   002868  92C1               	bcf	193,1,c	;volatile
   814   00286A                     
   815                           ;LCD.c: 144:  LATDbits.LATD2 = 0;
   816   00286A  94C1               	bcf	193,2,c	;volatile
   817   00286C                     
   818                           ;LCD.c: 145:  LATDbits.LATD0 = 0;
   819   00286C  90C1               	bcf	193,0,c	;volatile
   820   00286E                     
   821                           ;LCD.c: 146:  aux = dato & 0xF0;
   822   00286E  5002               	movf	ENVIA_LCD_CMD@dato^(0+1280),w,c
   823   002870  0BF0               	andlw	240
   824   002872  6E03               	movwf	ENVIA_LCD_CMD@aux^(0+1280),c
   825   002874                     
   826                           ;LCD.c: 147:  ENVIA_NIBBLE(aux);
   827   002874  5003               	movf	ENVIA_LCD_CMD@aux^(0+1280),w,c
   828   002876  EC76  F014         	call	_ENVIA_NIBBLE
   829   00287A                     
   830                           ;LCD.c: 148:  aux = dato<<4;
   831   00287A  3802               	swapf	ENVIA_LCD_CMD@dato^(0+1280),w,c
   832   00287C  0BF0               	andlw	240
   833   00287E  6E03               	movwf	ENVIA_LCD_CMD@aux^(0+1280),c
   834   002880                     
   835                           ;LCD.c: 149:  ENVIA_NIBBLE(aux);
   836   002880  5003               	movf	ENVIA_LCD_CMD@aux^(0+1280),w,c
   837   002882  EC76  F014         	call	_ENVIA_NIBBLE
   838   002886  0012               	return		;funcret
   839   002888                     __end_of_ENVIA_LCD_CMD:
   840                           	callstack 0
   841                           
   842 ;; *************** function _ESCRIBE_MENSAJE2 *****************
   843 ;; Defined at:
   844 ;;		line 77 in file "LCD.c"
   845 ;; Parameters:    Size  Location     Type
   846 ;;  cadena          2    4[COMRAM] PTR const unsigned char 
   847 ;;		 -> STR_2(10), STR_1(11), 
   848 ;; Auto vars:     Size  Location     Type
   849 ;;  i               1    9[COMRAM] unsigned char 
   850 ;;  tam             1    8[COMRAM] unsigned char 
   851 ;; Return value:  Size  Location     Type
   852 ;;                  1    wreg      void 
   853 ;; Registers used:
   854 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   855 ;; Tracked objects:
   856 ;;		On entry : 0/0
   857 ;;		On exit  : 0/0
   858 ;;		Unchanged: 0/0
   859 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   860 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   861 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   862 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   863 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   864 ;;Total ram usage:        6 bytes
   865 ;; Hardware stack levels used: 1
   866 ;; Hardware stack levels required when called: 2
   867 ;; This function calls:
   868 ;;		_ENVIA_CHAR
   869 ;;		_strlen
   870 ;; This function is called by:
   871 ;;		_main
   872 ;; This function uses a non-reentrant model
   873 ;;
   874                           
   875                           	psect	text9
   876   002756                     __ptext9:
   877                           	callstack 0
   878   002756                     _ESCRIBE_MENSAJE2:
   879                           	callstack 124
   880   002756                     
   881                           ;LCD.c: 77: void ESCRIBE_MENSAJE2(const char *cadena);LCD.c: 78: {;LCD.c: 79:     unsign
      +                          ed char tam;;LCD.c: 80:     tam = strlen(cadena);
   882   002756  C505  F501         	movff	ESCRIBE_MENSAJE2@cadena,strlen@s
   883   00275A  C506  F502         	movff	ESCRIBE_MENSAJE2@cadena+1,strlen@s+1
   884   00275E  ECD2  F013         	call	_strlen	;wreg free
   885   002762  5001               	movf	?_strlen^(0+1280),w,c
   886   002764  6E09               	movwf	ESCRIBE_MENSAJE2@tam^(0+1280),c
   887   002766                     
   888                           ;LCD.c: 82:  for(i = 0; i<tam; i++)
   889   002766  0E00               	movlw	0
   890   002768  6E0A               	movwf	ESCRIBE_MENSAJE2@i^(0+1280),c
   891   00276A  EFC8  F013         	goto	l1152
   892   00276E                     l1148:
   893                           
   894                           ;LCD.c: 83:  {;LCD.c: 84:   ENVIA_CHAR(cadena[i]);
   895   00276E  500A               	movf	ESCRIBE_MENSAJE2@i^(0+1280),w,c
   896   002770  2405               	addwf	ESCRIBE_MENSAJE2@cadena^(0+1280),w,c
   897   002772  6E07               	movwf	??_ESCRIBE_MENSAJE2^(0+1280),c
   898   002774  0E00               	movlw	0
   899   002776  2006               	addwfc	(ESCRIBE_MENSAJE2@cadena+1)^(0+1280),w,c
   900   002778  6E08               	movwf	(??_ESCRIBE_MENSAJE2+1)^(0+1280),c
   901   00277A  C507  F4F6         	movff	??_ESCRIBE_MENSAJE2,tblptrl
   902   00277E  C508  F4F7         	movff	??_ESCRIBE_MENSAJE2+1,tblptrh
   903   002782                     	if	0	;tblptru may be non-zero
   904   002782                     	endif
   905   002782                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
   906   002782  0E00               	movlw	low (__mediumconst shr (0+16))
   907   002784  6EF8               	movwf	tblptru,c
   908   002786                     	endif
   909   002786  0008               	tblrd		*
   910   002788  50F5               	movf	tablat,w,c
   911   00278A  EC44  F014         	call	_ENVIA_CHAR
   912   00278E                     
   913                           ;LCD.c: 85:  }
   914   00278E  2A0A               	incf	ESCRIBE_MENSAJE2@i^(0+1280),f,c
   915   002790                     l1152:
   916   002790  5009               	movf	ESCRIBE_MENSAJE2@tam^(0+1280),w,c
   917   002792  5C0A               	subwf	ESCRIBE_MENSAJE2@i^(0+1280),w,c
   918   002794  A0D8               	btfss	status,0,c
   919   002796  EFCF  F013         	goto	u241
   920   00279A  EFD1  F013         	goto	u240
   921   00279E                     u241:
   922   00279E  EFB7  F013         	goto	l1148
   923   0027A2                     u240:
   924   0027A2  0012               	return		;funcret
   925   0027A4                     __end_of_ESCRIBE_MENSAJE2:
   926                           	callstack 0
   927                           
   928 ;; *************** function _strlen *****************
   929 ;; Defined at:
   930 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\strlen.c"
   931 ;; Parameters:    Size  Location     Type
   932 ;;  s               2    0[COMRAM] PTR const unsigned char 
   933 ;;		 -> STR_2(10), STR_1(11), 
   934 ;; Auto vars:     Size  Location     Type
   935 ;;  a               2    2[COMRAM] PTR const unsigned char 
   936 ;;		 -> STR_2(10), STR_1(11), 
   937 ;; Return value:  Size  Location     Type
   938 ;;                  2    0[COMRAM] unsigned int 
   939 ;; Registers used:
   940 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
   941 ;; Tracked objects:
   942 ;;		On entry : 0/0
   943 ;;		On exit  : 0/0
   944 ;;		Unchanged: 0/0
   945 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   946 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   947 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   948 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   949 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   950 ;;Total ram usage:        4 bytes
   951 ;; Hardware stack levels used: 1
   952 ;; This function calls:
   953 ;;		Nothing
   954 ;; This function is called by:
   955 ;;		_ESCRIBE_MENSAJE2
   956 ;; This function uses a non-reentrant model
   957 ;;
   958                           
   959                           	psect	text10
   960   0027A4                     __ptext10:
   961                           	callstack 0
   962   0027A4                     _strlen:
   963                           	callstack 125
   964   0027A4  C501  F503         	movff	strlen@s,strlen@a
   965   0027A8  C502  F504         	movff	strlen@s+1,strlen@a+1
   966   0027AC  EFDA  F013         	goto	l1120
   967   0027B0                     l1118:
   968   0027B0  4A01               	infsnz	strlen@s^(0+1280),f,c
   969   0027B2  2A02               	incf	(strlen@s+1)^(0+1280),f,c
   970   0027B4                     l1120:
   971   0027B4  C501  F4F6         	movff	strlen@s,tblptrl
   972   0027B8  C502  F4F7         	movff	strlen@s+1,tblptrh
   973   0027BC                     	if	0	;tblptru may be non-zero
   974   0027BC                     	endif
   975   0027BC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
   976   0027BC  0E00               	movlw	low (__mediumconst shr (0+16))
   977   0027BE  6EF8               	movwf	tblptru,c
   978   0027C0                     	endif
   979   0027C0  0008               	tblrd		*
   980   0027C2  50F5               	movf	tablat,w,c
   981   0027C4  0900               	iorlw	0
   982   0027C6  A4D8               	btfss	status,2,c
   983   0027C8  EFE8  F013         	goto	u191
   984   0027CC  EFEA  F013         	goto	u190
   985   0027D0                     u191:
   986   0027D0  EFD8  F013         	goto	l1118
   987   0027D4                     u190:
   988   0027D4  5003               	movf	strlen@a^(0+1280),w,c
   989   0027D6  5C01               	subwf	strlen@s^(0+1280),w,c
   990   0027D8  6E01               	movwf	?_strlen^(0+1280),c
   991   0027DA  5004               	movf	(strlen@a+1)^(0+1280),w,c
   992   0027DC  5802               	subwfb	(strlen@s+1)^(0+1280),w,c
   993   0027DE  6E02               	movwf	(?_strlen+1)^(0+1280),c
   994   0027E0  0012               	return		;funcret
   995   0027E2                     __end_of_strlen:
   996                           	callstack 0
   997                           
   998 ;; *************** function _ENVIA_CHAR *****************
   999 ;; Defined at:
  1000 ;;		line 88 in file "LCD.c"
  1001 ;; Parameters:    Size  Location     Type
  1002 ;;  dato            1    wreg     unsigned char 
  1003 ;; Auto vars:     Size  Location     Type
  1004 ;;  dato            1    1[COMRAM] unsigned char 
  1005 ;;  aux             1    2[COMRAM] unsigned char 
  1006 ;; Return value:  Size  Location     Type
  1007 ;;                  1    wreg      void 
  1008 ;; Registers used:
  1009 ;;		wreg, status,2, status,0, cstack
  1010 ;; Tracked objects:
  1011 ;;		On entry : 0/0
  1012 ;;		On exit  : 0/0
  1013 ;;		Unchanged: 0/0
  1014 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1015 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1016 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1017 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1018 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1019 ;;Total ram usage:        2 bytes
  1020 ;; Hardware stack levels used: 1
  1021 ;; Hardware stack levels required when called: 1
  1022 ;; This function calls:
  1023 ;;		_ENVIA_NIBBLE
  1024 ;;		_LEER_LCD
  1025 ;; This function is called by:
  1026 ;;		_ESCRIBE_MENSAJE2
  1027 ;;		_ESCRIBE_MENSAJE
  1028 ;;		_GENERACARACTER
  1029 ;;		_LCD_ESCRIBE_VAR_CHAR
  1030 ;;		_LCD_ESCRIBE_VAR_INT
  1031 ;;		_LCD_CHAR_GRADO
  1032 ;;		_LCD_VARCHAR_BITS
  1033 ;; This function uses a non-reentrant model
  1034 ;;
  1035                           
  1036                           	psect	text11
  1037   002888                     __ptext11:
  1038                           	callstack 0
  1039   002888                     _ENVIA_CHAR:
  1040                           	callstack 124
  1041                           
  1042                           ;incstack = 0
  1043                           ;ENVIA_CHAR@dato stored from wreg
  1044   002888  6E02               	movwf	ENVIA_CHAR@dato^(0+1280),c
  1045   00288A                     
  1046                           ;LCD.c: 88: void ENVIA_CHAR(unsigned char dato);LCD.c: 89: {;LCD.c: 90:  unsigned char a
      +                          ux;;LCD.c: 91:  LATDbits.LATD0 = 1;
  1047   00288A  80C1               	bsf	193,0,c	;volatile
  1048   00288C                     
  1049                           ;LCD.c: 92:  LEER_LCD();
  1050   00288C  EC49  F013         	call	_LEER_LCD	;wreg free
  1051   002890                     
  1052                           ;LCD.c: 93:  TRISD = 0x00;
  1053   002890  0E00               	movlw	0
  1054   002892  6EC9               	movwf	201,c	;volatile
  1055   002894                     
  1056                           ;LCD.c: 94:     _delay((unsigned long)((100)*(4000000UL/4000000.0)));
  1057   002894  0E21               	movlw	33
  1058   002896                     u307:
  1059   002896  2EE8               	decfsz	wreg,f,c
  1060   002898  D7FE               	bra	u307
  1061   00289A  F000               	nop	
  1062   00289C                     
  1063                           ;LCD.c: 95:  LATDbits.LATD1 = 0;
  1064   00289C  92C1               	bcf	193,1,c	;volatile
  1065   00289E                     
  1066                           ;LCD.c: 96:  LATDbits.LATD2 = 0;
  1067   00289E  94C1               	bcf	193,2,c	;volatile
  1068   0028A0                     
  1069                           ;LCD.c: 97:  LATDbits.LATD0 = 1;
  1070   0028A0  80C1               	bsf	193,0,c	;volatile
  1071   0028A2                     
  1072                           ;LCD.c: 98:  aux = dato & 0xF0;
  1073   0028A2  5002               	movf	ENVIA_CHAR@dato^(0+1280),w,c
  1074   0028A4  0BF0               	andlw	240
  1075   0028A6  6E03               	movwf	ENVIA_CHAR@aux^(0+1280),c
  1076   0028A8                     
  1077                           ;LCD.c: 99:  ENVIA_NIBBLE(aux);
  1078   0028A8  5003               	movf	ENVIA_CHAR@aux^(0+1280),w,c
  1079   0028AA  EC76  F014         	call	_ENVIA_NIBBLE
  1080   0028AE                     
  1081                           ;LCD.c: 100:  aux = dato << 4;
  1082   0028AE  3802               	swapf	ENVIA_CHAR@dato^(0+1280),w,c
  1083   0028B0  0BF0               	andlw	240
  1084   0028B2  6E03               	movwf	ENVIA_CHAR@aux^(0+1280),c
  1085   0028B4                     
  1086                           ;LCD.c: 101:  ENVIA_NIBBLE(aux);
  1087   0028B4  5003               	movf	ENVIA_CHAR@aux^(0+1280),w,c
  1088   0028B6  EC76  F014         	call	_ENVIA_NIBBLE
  1089   0028BA  0012               	return		;funcret
  1090   0028BC                     __end_of_ENVIA_CHAR:
  1091                           	callstack 0
  1092                           
  1093 ;; *************** function _LEER_LCD *****************
  1094 ;; Defined at:
  1095 ;;		line 152 in file "LCD.c"
  1096 ;; Parameters:    Size  Location     Type
  1097 ;;		None
  1098 ;; Auto vars:     Size  Location     Type
  1099 ;;  aux             1    0[COMRAM] unsigned char 
  1100 ;; Return value:  Size  Location     Type
  1101 ;;                  1    wreg      void 
  1102 ;; Registers used:
  1103 ;;		wreg, status,2, status,0
  1104 ;; Tracked objects:
  1105 ;;		On entry : 0/0
  1106 ;;		On exit  : 0/0
  1107 ;;		Unchanged: 0/0
  1108 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1109 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1110 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1111 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1112 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1113 ;;Total ram usage:        1 bytes
  1114 ;; Hardware stack levels used: 1
  1115 ;; This function calls:
  1116 ;;		Nothing
  1117 ;; This function is called by:
  1118 ;;		_ENVIA_CHAR
  1119 ;;		_ENVIA_LCD_CMD
  1120 ;; This function uses a non-reentrant model
  1121 ;;
  1122                           
  1123                           	psect	text12
  1124   002692                     __ptext12:
  1125                           	callstack 0
  1126   002692                     _LEER_LCD:
  1127                           	callstack 122
  1128   002692                     
  1129                           ;LCD.c: 154:  unsigned char aux;;LCD.c: 155:  TRISD = 0xF8;
  1130   002692  0EF8               	movlw	248
  1131   002694  6EC9               	movwf	201,c	;volatile
  1132   002696                     
  1133                           ;LCD.c: 156:  LATDbits.LATD0 = 0;
  1134   002696  90C1               	bcf	193,0,c	;volatile
  1135   002698                     
  1136                           ;LCD.c: 157:  LATDbits.LATD1 = 1;
  1137   002698  82C1               	bsf	193,1,c	;volatile
  1138   00269A                     
  1139                           ;LCD.c: 158:  LATDbits.LATD2 = 1;
  1140   00269A  84C1               	bsf	193,2,c	;volatile
  1141   00269C                     
  1142                           ;LCD.c: 159:     _delay((unsigned long)((100)*(4000000UL/4000000.0)));
  1143   00269C  0E21               	movlw	33
  1144   00269E                     u317:
  1145   00269E  2EE8               	decfsz	wreg,f,c
  1146   0026A0  D7FE               	bra	u317
  1147   0026A2  F000               	nop	
  1148   0026A4                     
  1149                           ;LCD.c: 160:  aux = PORTD;
  1150   0026A4  C4D1 F501          	movff	1233,LEER_LCD@aux	;volatile
  1151   0026A8                     
  1152                           ;LCD.c: 161:  LATDbits.LATD2 = 0;
  1153   0026A8  94C1               	bcf	193,2,c	;volatile
  1154   0026AA                     
  1155                           ;LCD.c: 162:     _delay((unsigned long)((100)*(4000000UL/4000000.0)));
  1156   0026AA  0E21               	movlw	33
  1157   0026AC                     u327:
  1158   0026AC  2EE8               	decfsz	wreg,f,c
  1159   0026AE  D7FE               	bra	u327
  1160   0026B0  F000               	nop	
  1161   0026B2                     
  1162                           ;LCD.c: 163:  LATDbits.LATD2 = 1;
  1163   0026B2  84C1               	bsf	193,2,c	;volatile
  1164   0026B4                     
  1165                           ;LCD.c: 164:     _delay((unsigned long)((100)*(4000000UL/4000000.0)));
  1166   0026B4  0E21               	movlw	33
  1167   0026B6                     u337:
  1168   0026B6  2EE8               	decfsz	wreg,f,c
  1169   0026B8  D7FE               	bra	u337
  1170   0026BA  F000               	nop	
  1171   0026BC                     
  1172                           ;LCD.c: 165:  LATDbits.LATD2 = 0;
  1173   0026BC  94C1               	bcf	193,2,c	;volatile
  1174   0026BE                     l852:
  1175                           
  1176                           ;LCD.c: 166:  aux = aux & 0x80;
  1177   0026BE  5001               	movf	LEER_LCD@aux^(0+1280),w,c
  1178   0026C0  0B80               	andlw	128
  1179   0026C2  6E01               	movwf	LEER_LCD@aux^(0+1280),c
  1180                           
  1181                           ;LCD.c: 167:  while(aux == 0x80)
  1182   0026C4  EF78  F013         	goto	l866
  1183   0026C8                     l110:
  1184                           
  1185                           ;LCD.c: 168:         {;LCD.c: 169:             LATDbits.LATD2 = 1;
  1186   0026C8  84C1               	bsf	193,2,c	;volatile
  1187   0026CA                     
  1188                           ;LCD.c: 170:             _delay((unsigned long)((100)*(4000000UL/4000000.0)));
  1189   0026CA  0E21               	movlw	33
  1190   0026CC                     u347:
  1191   0026CC  2EE8               	decfsz	wreg,f,c
  1192   0026CE  D7FE               	bra	u347
  1193   0026D0  F000               	nop	
  1194   0026D2                     
  1195                           ;LCD.c: 171:             aux = PORTD;
  1196   0026D2  C4D1 F501          	movff	1233,LEER_LCD@aux	;volatile
  1197   0026D6                     
  1198                           ;LCD.c: 172:             LATDbits.LATD2 = 0;
  1199   0026D6  94C1               	bcf	193,2,c	;volatile
  1200                           
  1201                           ;LCD.c: 173:             _delay((unsigned long)((100)*(4000000UL/4000000.0)));
  1202   0026D8  0E21               	movlw	33
  1203   0026DA                     u357:
  1204   0026DA  2EE8               	decfsz	wreg,f,c
  1205   0026DC  D7FE               	bra	u357
  1206   0026DE  F000               	nop	
  1207   0026E0                     
  1208                           ;LCD.c: 174:             LATDbits.LATD2 = 1;
  1209   0026E0  84C1               	bsf	193,2,c	;volatile
  1210                           
  1211                           ;LCD.c: 175:             _delay((unsigned long)((100)*(4000000UL/4000000.0)));
  1212   0026E2  0E21               	movlw	33
  1213   0026E4                     u367:
  1214   0026E4  2EE8               	decfsz	wreg,f,c
  1215   0026E6  D7FE               	bra	u367
  1216   0026E8  F000               	nop	
  1217   0026EA                     
  1218                           ;LCD.c: 176:             LATDbits.LATD2 = 0;
  1219   0026EA  94C1               	bcf	193,2,c	;volatile
  1220   0026EC  EF5F  F013         	goto	l852
  1221   0026F0                     l866:
  1222                           
  1223                           ;LCD.c: 167:  while(aux == 0x80)
  1224   0026F0  0E80               	movlw	128
  1225   0026F2  1801               	xorwf	LEER_LCD@aux^(0+1280),w,c
  1226   0026F4  B4D8               	btfsc	status,2,c
  1227   0026F6  EF7F  F013         	goto	u11
  1228   0026FA  EF81  F013         	goto	u10
  1229   0026FE                     u11:
  1230   0026FE  EF64  F013         	goto	l110
  1231   002702                     u10:
  1232   002702  0012               	return		;funcret
  1233   002704                     __end_of_LEER_LCD:
  1234                           	callstack 0
  1235                           
  1236 ;; *************** function _ENVIA_NIBBLE *****************
  1237 ;; Defined at:
  1238 ;;		line 126 in file "LCD.c"
  1239 ;; Parameters:    Size  Location     Type
  1240 ;;  dato            1    wreg     unsigned char 
  1241 ;; Auto vars:     Size  Location     Type
  1242 ;;  dato            1    0[COMRAM] unsigned char 
  1243 ;; Return value:  Size  Location     Type
  1244 ;;                  1    wreg      void 
  1245 ;; Registers used:
  1246 ;;		wreg, status,2, status,0
  1247 ;; Tracked objects:
  1248 ;;		On entry : 0/0
  1249 ;;		On exit  : 0/0
  1250 ;;		Unchanged: 0/0
  1251 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1252 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1253 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1254 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1255 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1256 ;;Total ram usage:        1 bytes
  1257 ;; Hardware stack levels used: 1
  1258 ;; This function calls:
  1259 ;;		Nothing
  1260 ;; This function is called by:
  1261 ;;		_ENVIA_CHAR
  1262 ;;		_LCD_CONFIG
  1263 ;;		_ENVIA_LCD_CMD
  1264 ;; This function uses a non-reentrant model
  1265 ;;
  1266                           
  1267                           	psect	text13
  1268   0028EC                     __ptext13:
  1269                           	callstack 0
  1270   0028EC                     _ENVIA_NIBBLE:
  1271                           	callstack 123
  1272                           
  1273                           ;incstack = 0
  1274                           ;ENVIA_NIBBLE@dato stored from wreg
  1275   0028EC  6E01               	movwf	ENVIA_NIBBLE@dato^(0+1280),c
  1276   0028EE                     
  1277                           ;LCD.c: 126: void ENVIA_NIBBLE(unsigned char dato);LCD.c: 127: {;LCD.c: 128:  LATD &= 0x
      +                          0F;
  1278   0028EE  0E0F               	movlw	15
  1279   0028F0  16C1               	andwf	193,f,c	;volatile
  1280                           
  1281                           ;LCD.c: 129:  dato &= 0xF0;
  1282   0028F2  0EF0               	movlw	240
  1283   0028F4  1601               	andwf	ENVIA_NIBBLE@dato^(0+1280),f,c
  1284                           
  1285                           ;LCD.c: 130:  LATD|= dato;
  1286   0028F6  5001               	movf	ENVIA_NIBBLE@dato^(0+1280),w,c	;volatile
  1287   0028F8  12C1               	iorwf	193,f,c	;volatile
  1288   0028FA                     
  1289                           ;LCD.c: 131:  LATDbits.LATD2 = 1;
  1290   0028FA  84C1               	bsf	193,2,c	;volatile
  1291   0028FC                     
  1292                           ;LCD.c: 132:     _delay((unsigned long)((100)*(4000000UL/4000000.0)));
  1293   0028FC  0E21               	movlw	33
  1294   0028FE                     u377:
  1295   0028FE  2EE8               	decfsz	wreg,f,c
  1296   002900  D7FE               	bra	u377
  1297   002902  F000               	nop	
  1298   002904                     
  1299                           ;LCD.c: 133:  LATDbits.LATD2 = 0;
  1300   002904  94C1               	bcf	193,2,c	;volatile
  1301   002906  0012               	return		;funcret
  1302   002908                     __end_of_ENVIA_NIBBLE:
  1303                           	callstack 0
  1304                           
  1305                           	psect	rparam
  1306   000000                     
  1307                           	psect	idloc
  1308                           
  1309                           ;Config register IDLOC0 @ 0x200000
  1310                           ;	unspecified, using default values
  1311   200000                     	org	2097152
  1312   200000  0FFF               	dw	4095
  1313                           
  1314                           ;Config register IDLOC1 @ 0x200002
  1315                           ;	unspecified, using default values
  1316   200002                     	org	2097154
  1317   200002  0FFF               	dw	4095
  1318                           
  1319                           ;Config register IDLOC2 @ 0x200004
  1320                           ;	unspecified, using default values
  1321   200004                     	org	2097156
  1322   200004  0FFF               	dw	4095
  1323                           
  1324                           ;Config register IDLOC3 @ 0x200006
  1325                           ;	unspecified, using default values
  1326   200006                     	org	2097158
  1327   200006  0FFF               	dw	4095
  1328                           
  1329                           ;Config register IDLOC4 @ 0x200008
  1330                           ;	unspecified, using default values
  1331   200008                     	org	2097160
  1332   200008  0FFF               	dw	4095
  1333                           
  1334                           ;Config register IDLOC5 @ 0x20000A
  1335                           ;	unspecified, using default values
  1336   20000A                     	org	2097162
  1337   20000A  0FFF               	dw	4095
  1338                           
  1339                           ;Config register IDLOC6 @ 0x20000C
  1340                           ;	unspecified, using default values
  1341   20000C                     	org	2097164
  1342   20000C  0FFF               	dw	4095
  1343                           
  1344                           ;Config register IDLOC7 @ 0x20000E
  1345                           ;	unspecified, using default values
  1346   20000E                     	org	2097166
  1347   20000E  0FFF               	dw	4095
  1348                           
  1349                           ;Config register IDLOC8 @ 0x200010
  1350                           ;	unspecified, using default values
  1351   200010                     	org	2097168
  1352   200010  0FFF               	dw	4095
  1353                           
  1354                           ;Config register IDLOC9 @ 0x200012
  1355                           ;	unspecified, using default values
  1356   200012                     	org	2097170
  1357   200012  0FFF               	dw	4095
  1358                           
  1359                           ;Config register IDLOC10 @ 0x200014
  1360                           ;	unspecified, using default values
  1361   200014                     	org	2097172
  1362   200014  0FFF               	dw	4095
  1363                           
  1364                           ;Config register IDLOC11 @ 0x200016
  1365                           ;	unspecified, using default values
  1366   200016                     	org	2097174
  1367   200016  0FFF               	dw	4095
  1368                           
  1369                           ;Config register IDLOC12 @ 0x200018
  1370                           ;	unspecified, using default values
  1371   200018                     	org	2097176
  1372   200018  0FFF               	dw	4095
  1373                           
  1374                           ;Config register IDLOC13 @ 0x20001A
  1375                           ;	unspecified, using default values
  1376   20001A                     	org	2097178
  1377   20001A  0FFF               	dw	4095
  1378                           
  1379                           ;Config register IDLOC14 @ 0x20001C
  1380                           ;	unspecified, using default values
  1381   20001C                     	org	2097180
  1382   20001C  0FFF               	dw	4095
  1383                           
  1384                           ;Config register IDLOC15 @ 0x20001E
  1385                           ;	unspecified, using default values
  1386   20001E                     	org	2097182
  1387   20001E  0FFF               	dw	4095
  1388                           
  1389                           ;Config register IDLOC16 @ 0x200020
  1390                           ;	unspecified, using default values
  1391   200020                     	org	2097184
  1392   200020  0FFF               	dw	4095
  1393                           
  1394                           ;Config register IDLOC17 @ 0x200022
  1395                           ;	unspecified, using default values
  1396   200022                     	org	2097186
  1397   200022  0FFF               	dw	4095
  1398                           
  1399                           ;Config register IDLOC18 @ 0x200024
  1400                           ;	unspecified, using default values
  1401   200024                     	org	2097188
  1402   200024  0FFF               	dw	4095
  1403                           
  1404                           ;Config register IDLOC19 @ 0x200026
  1405                           ;	unspecified, using default values
  1406   200026                     	org	2097190
  1407   200026  0FFF               	dw	4095
  1408                           
  1409                           ;Config register IDLOC20 @ 0x200028
  1410                           ;	unspecified, using default values
  1411   200028                     	org	2097192
  1412   200028  0FFF               	dw	4095
  1413                           
  1414                           ;Config register IDLOC21 @ 0x20002A
  1415                           ;	unspecified, using default values
  1416   20002A                     	org	2097194
  1417   20002A  0FFF               	dw	4095
  1418                           
  1419                           ;Config register IDLOC22 @ 0x20002C
  1420                           ;	unspecified, using default values
  1421   20002C                     	org	2097196
  1422   20002C  0FFF               	dw	4095
  1423                           
  1424                           ;Config register IDLOC23 @ 0x20002E
  1425                           ;	unspecified, using default values
  1426   20002E                     	org	2097198
  1427   20002E  0FFF               	dw	4095
  1428                           
  1429                           ;Config register IDLOC24 @ 0x200030
  1430                           ;	unspecified, using default values
  1431   200030                     	org	2097200
  1432   200030  0FFF               	dw	4095
  1433                           
  1434                           ;Config register IDLOC25 @ 0x200032
  1435                           ;	unspecified, using default values
  1436   200032                     	org	2097202
  1437   200032  0FFF               	dw	4095
  1438                           
  1439                           ;Config register IDLOC26 @ 0x200034
  1440                           ;	unspecified, using default values
  1441   200034                     	org	2097204
  1442   200034  0FFF               	dw	4095
  1443                           
  1444                           ;Config register IDLOC27 @ 0x200036
  1445                           ;	unspecified, using default values
  1446   200036                     	org	2097206
  1447   200036  0FFF               	dw	4095
  1448                           
  1449                           ;Config register IDLOC28 @ 0x200038
  1450                           ;	unspecified, using default values
  1451   200038                     	org	2097208
  1452   200038  0FFF               	dw	4095
  1453                           
  1454                           ;Config register IDLOC29 @ 0x20003A
  1455                           ;	unspecified, using default values
  1456   20003A                     	org	2097210
  1457   20003A  0FFF               	dw	4095
  1458                           
  1459                           ;Config register IDLOC30 @ 0x20003C
  1460                           ;	unspecified, using default values
  1461   20003C                     	org	2097212
  1462   20003C  0FFF               	dw	4095
  1463                           
  1464                           ;Config register IDLOC31 @ 0x20003E
  1465                           ;	unspecified, using default values
  1466   20003E                     	org	2097214
  1467   20003E  0FFF               	dw	4095
  1468                           
  1469                           	psect	config
  1470                           
  1471                           ;Config register CONFIG1 @ 0x300000
  1472                           ;	External Oscillator Selection
  1473                           ;	FEXTOSC = ECH, EC (external clock) above 8 MHz
  1474                           ;	Reset Oscillator Selection
  1475                           ;	RSTOSC = EXTOSC, EXTOSC operating per FEXTOSC bits (device manufacturing default)
  1476   300000                     	org	3145728
  1477   300000  FF                 	db	255
  1478                           
  1479                           ;Config register CONFIG2 @ 0x300001
  1480                           ;	Clock out Enable bit
  1481                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
  1482                           ;	PRLOCKED One-Way Set Enable bit
  1483                           ;	PR1WAY = ON, PRLOCKED bit can be cleared and set only once
  1484                           ;	Clock Switch Enable bit
  1485                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
  1486                           ;	Fail-Safe Clock Monitor Enable bit
  1487                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
  1488   300001                     	org	3145729
  1489   300001  FF                 	db	255
  1490                           
  1491                           ;Config register CONFIG3 @ 0x300002
  1492                           ;	MCLR Enable bit
  1493                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
  1494                           ;	Power-up timer selection bits
  1495                           ;	PWRTS = PWRT_16, PWRT set at 16ms
  1496                           ;	Multi-vector enable bit
  1497                           ;	MVECEN = ON, Multi-vector enabled, Vector table used for interrupts
  1498                           ;	IVTLOCK bit One-way set enable bit
  1499                           ;	IVT1WAY = ON, IVTLOCKED bit can be cleared and set only once
  1500                           ;	Low Power BOR Enable bit
  1501                           ;	LPBOREN = OFF, Low-Power BOR disabled
  1502                           ;	Brown-out Reset Enable bits
  1503                           ;	BOREN = OFF, Brown-out Reset disabled
  1504   300002                     	org	3145730
  1505   300002  3B                 	db	59
  1506                           
  1507                           ;Config register CONFIG4 @ 0x300003
  1508                           ;	Brown-out Reset Voltage Selection bits
  1509                           ;	BORV = VBOR_1P9, Brown-out Reset Voltage (VBOR) set to 1.9V
  1510                           ;	ZCD Disable bit
  1511                           ;	ZCD = OFF, ZCD module is disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCD
      +                          CON
  1512                           ;	PPSLOCK bit One-Way Set Enable bit
  1513                           ;	PPS1WAY = ON, PPSLOCKED bit can be cleared and set only once; PPS registers remain loc
      +                          ked after one clear/set cycle
  1514                           ;	Stack Full/Underflow Reset Enable bit
  1515                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1516                           ;	Low Voltage Programming Enable bit
  1517                           ;	LVP = OFF, HV on MCLR/VPP must be used for programming
  1518                           ;	Extended Instruction Set Enable bit
  1519                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
  1520   300003                     	org	3145731
  1521   300003  DF                 	db	223
  1522                           
  1523                           ;Config register CONFIG5 @ 0x300004
  1524                           ;	WDT Period selection bits
  1525                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  1526                           ;	WDT operating mode
  1527                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
  1528   300004                     	org	3145732
  1529   300004  9F                 	db	159
  1530                           
  1531                           ;Config register CONFIG6 @ 0x300005
  1532                           ;	WDT Window Select bits
  1533                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
  1534                           ;	WDT input clock selector
  1535                           ;	WDTCCS = SC, Software Control
  1536   300005                     	org	3145733
  1537   300005  FF                 	db	255
  1538                           
  1539                           ;Config register CONFIG7 @ 0x300006
  1540                           ;	Boot Block Size selection bits
  1541                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
  1542                           ;	Boot Block enable bit
  1543                           ;	BBEN = OFF, Boot block disabled
  1544                           ;	Storage Area Flash enable bit
  1545                           ;	SAFEN = OFF, SAF disabled
  1546                           ;	Background Debugger
  1547                           ;	DEBUG = OFF, Background Debugger disabled
  1548   300006                     	org	3145734
  1549   300006  FF                 	db	255
  1550                           
  1551                           ;Config register CONFIG8 @ 0x300007
  1552                           ;	Boot Block Write Protection bit
  1553                           ;	WRTB = OFF, Boot Block not Write protected
  1554                           ;	Configuration Register Write Protection bit
  1555                           ;	WRTC = OFF, Configuration registers not Write protected
  1556                           ;	Data EEPROM Write Protection bit
  1557                           ;	WRTD = OFF, Data EEPROM not Write protected
  1558                           ;	SAF Write protection bit
  1559                           ;	WRTSAF = OFF, SAF not Write Protected
  1560                           ;	Application Block write protection bit
  1561                           ;	WRTAPP = OFF, Application Block not write protected
  1562   300007                     	org	3145735
  1563   300007  FF                 	db	255
  1564                           
  1565                           ; Padding undefined space
  1566   300008                     	org	3145736
  1567   300008  FF                 	db	255
  1568                           
  1569                           ;Config register CONFIG10 @ 0x300009
  1570                           ;	PFM and Data EEPROM Code Protection bit
  1571                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
  1572   300009                     	org	3145737
  1573   300009  FF                 	db	255
  1574                           tosu	equ	0x4FF
  1575                           tosh	equ	0x4FE
  1576                           tosl	equ	0x4FD
  1577                           stkptr	equ	0x4FC
  1578                           pclatu	equ	0x4FB
  1579                           pclath	equ	0x4FA
  1580                           pcl	equ	0x4F9
  1581                           tblptru	equ	0x4F8
  1582                           tblptrh	equ	0x4F7
  1583                           tblptrl	equ	0x4F6
  1584                           tablat	equ	0x4F5
  1585                           prodh	equ	0x4F4
  1586                           prodl	equ	0x4F3
  1587                           indf0	equ	0x4EF
  1588                           postinc0	equ	0x4EE
  1589                           postdec0	equ	0x4ED
  1590                           preinc0	equ	0x4EC
  1591                           plusw0	equ	0x4EB
  1592                           fsr0h	equ	0x4EA
  1593                           fsr0l	equ	0x4E9
  1594                           wreg	equ	0x4E8
  1595                           indf1	equ	0x4E7
  1596                           postinc1	equ	0x4E6
  1597                           postdec1	equ	0x4E5
  1598                           preinc1	equ	0x4E4
  1599                           plusw1	equ	0x4E3
  1600                           fsr1h	equ	0x4E2
  1601                           fsr1l	equ	0x4E1
  1602                           bsr	equ	0x4E0
  1603                           indf2	equ	0x4DF
  1604                           postinc2	equ	0x4DE
  1605                           postdec2	equ	0x4DD
  1606                           preinc2	equ	0x4DC
  1607                           plusw2	equ	0x4DB
  1608                           fsr2h	equ	0x4DA
  1609                           fsr2l	equ	0x4D9
  1610                           status	equ	0x4D8

Data Sizes:
    Strings     21
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     10      10
    BANK5           160      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0
    BANK32          256      0       0
    BANK33          256      0       0
    BANK34          256      0       0
    BANK35          256      0       0
    BANK36          256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_2(CODE[10]), STR_1(CODE[11]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_2(CODE[10]), STR_1(CODE[11]), 

    ESCRIBE_MENSAJE2@cadena	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_2(CODE[10]), STR_1(CODE[11]), 


Critical Paths under _main in COMRAM

    _main->_ESCRIBE_MENSAJE2
    _configuro->_LCD_INIT
    _LCD_INIT->_CURSOR_ONOFF
    _LCD_INIT->_LCD_CONFIG
    _LCD_CONFIG->_ENVIA_LCD_CMD
    _CURSOR_ONOFF->_ENVIA_LCD_CMD
    _CURSOR_HOME->_ENVIA_LCD_CMD
    _BORRAR_LCD->_ENVIA_LCD_CMD
    _POS_CURSOR->_ENVIA_LCD_CMD
    _ENVIA_LCD_CMD->_ENVIA_NIBBLE
    _ENVIA_LCD_CMD->_LEER_LCD
    _ESCRIBE_MENSAJE2->_strlen
    _ENVIA_CHAR->_ENVIA_NIBBLE
    _ENVIA_CHAR->_LEER_LCD

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _main in BANK32

    None.

Critical Paths under _main in BANK33

    None.

Critical Paths under _main in BANK34

    None.

Critical Paths under _main in BANK35

    None.

Critical Paths under _main in BANK36

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1525
                   _ESCRIBE_MENSAJE2
                         _POS_CURSOR
                          _configuro
 ---------------------------------------------------------------------------------
 (1) _configuro                                            0     0      0     525
                           _LCD_INIT
 ---------------------------------------------------------------------------------
 (2) _LCD_INIT                                             1     1      0     525
                                              4 COMRAM     1     1      0
                         _BORRAR_LCD
                        _CURSOR_HOME
                       _CURSOR_ONOFF
                         _LCD_CONFIG
 ---------------------------------------------------------------------------------
 (3) _LCD_CONFIG                                           1     1      0     135
                                              3 COMRAM     1     1      0
                      _ENVIA_LCD_CMD
                       _ENVIA_NIBBLE
 ---------------------------------------------------------------------------------
 (3) _CURSOR_ONOFF                                         1     1      0     150
                                              3 COMRAM     1     1      0
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (3) _CURSOR_HOME                                          0     0      0     120
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (3) _BORRAR_LCD                                           0     0      0     120
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (1) _POS_CURSOR                                           2     1      1     448
                                              3 COMRAM     2     1      1
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (4) _ENVIA_LCD_CMD                                        2     2      0     120
                                              1 COMRAM     2     2      0
                       _ENVIA_NIBBLE
                           _LEER_LCD
 ---------------------------------------------------------------------------------
 (1) _ESCRIBE_MENSAJE2                                     6     4      2     552
                                              4 COMRAM     6     4      2
                         _ENVIA_CHAR
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _ENVIA_CHAR                                           2     2      0     120
                                              1 COMRAM     2     2      0
                       _ENVIA_NIBBLE
                           _LEER_LCD
 ---------------------------------------------------------------------------------
 (5) _LEER_LCD                                             1     1      0      45
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _ENVIA_NIBBLE                                         1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ESCRIBE_MENSAJE2
     _ENVIA_CHAR
       _ENVIA_NIBBLE
       _LEER_LCD
     _strlen
   _POS_CURSOR
     _ENVIA_LCD_CMD
       _ENVIA_NIBBLE
       _LEER_LCD
   _configuro
     _LCD_INIT
       _BORRAR_LCD
         _ENVIA_LCD_CMD
       _CURSOR_HOME
         _ENVIA_LCD_CMD
       _CURSOR_ONOFF
         _ENVIA_LCD_CMD
       _LCD_CONFIG
         _ENVIA_LCD_CMD
         _ENVIA_NIBBLE

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             400      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F      A       A       1       10.5%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK5            A0      0       0       4        0.0%
BANK5               A0      0       0       5        0.0%
BITBANK6           100      0       0       6        0.0%
BANK6              100      0       0       7        0.0%
BITBANK7           100      0       0       8        0.0%
BANK7              100      0       0       9        0.0%
BITBANK8           100      0       0      10        0.0%
BANK8              100      0       0      11        0.0%
BITBANK9           100      0       0      12        0.0%
BANK9              100      0       0      13        0.0%
BITBANK10          100      0       0      14        0.0%
BANK10             100      0       0      15        0.0%
BITBANK11          100      0       0      16        0.0%
BANK11             100      0       0      17        0.0%
BITBANK12          100      0       0      18        0.0%
BANK12             100      0       0      19        0.0%
BITBANK13          100      0       0      20        0.0%
BANK13             100      0       0      21        0.0%
BITBANK14          100      0       0      22        0.0%
BANK14             100      0       0      23        0.0%
BITBANK15          100      0       0      24        0.0%
BANK15             100      0       0      25        0.0%
BITBANK16          100      0       0      26        0.0%
BANK16             100      0       0      27        0.0%
BITBANK17          100      0       0      28        0.0%
BANK17             100      0       0      29        0.0%
BITBANK18          100      0       0      30        0.0%
BANK18             100      0       0      31        0.0%
BITBANK19          100      0       0      32        0.0%
BANK19             100      0       0      33        0.0%
BITBANK20          100      0       0      34        0.0%
BANK20             100      0       0      35        0.0%
BITBANK21          100      0       0      36        0.0%
BANK21             100      0       0      37        0.0%
BITBANK22          100      0       0      38        0.0%
BANK22             100      0       0      39        0.0%
BITBANK23          100      0       0      40        0.0%
BANK23             100      0       0      41        0.0%
BITBANK24          100      0       0      42        0.0%
BANK24             100      0       0      43        0.0%
BITBANK25          100      0       0      44        0.0%
BANK25             100      0       0      45        0.0%
BITBANK26          100      0       0      46        0.0%
BANK26             100      0       0      47        0.0%
BITBANK27          100      0       0      48        0.0%
BANK27             100      0       0      49        0.0%
BITBANK28          100      0       0      50        0.0%
BANK28             100      0       0      51        0.0%
BITBANK29          100      0       0      52        0.0%
BANK29             100      0       0      53        0.0%
BITBANK30          100      0       0      54        0.0%
BANK30             100      0       0      55        0.0%
BITBANK31          100      0       0      56        0.0%
BANK31             100      0       0      57        0.0%
BITBANK32          100      0       0      58        0.0%
BANK32             100      0       0      59        0.0%
BITBANK33          100      0       0      60        0.0%
BANK33             100      0       0      61        0.0%
BITBANK34          100      0       0      62        0.0%
BANK34             100      0       0      63        0.0%
BITBANK35          100      0       0      64        0.0%
BANK35             100      0       0      65        0.0%
BITBANK36          100      0       0      66        0.0%
BANK36             100      0       0      67        0.0%
BITBIGSFR_1        100      0       0      68        0.0%
BIGRAM            1FFF      0       0      69        0.0%
BITBIGSFRhhh        2E      0       0      70        0.0%
BITBIGSFRhhl         7      0       0      71        0.0%
BITBIGSFRhl          7      0       0      72        0.0%
BITBIGSFRlh         A8      0       0      73        0.0%
BITBIGSFRll        418      0       0      74        0.0%
ABS                  0      0       0      75        0.0%
BIGSFR_1             0      0       0     200        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Mon Jul 10 10:06:47 2023

                       l9 2922                        l14 2820                        l45 2690  
                      l62 290E                        l49 2690                        l91 27A2  
                      l94 28BA                        l79 28EA                        l97 2916  
                      u10 2702                        u11 26FE                        u20 28CE  
                      u21 28CA                        u30 28E4                        u31 28E0  
           ENVIA_CHAR@aux 0503                       l100 2754                       l110 26C8  
                     l103 2906                       l112 2702                       l120 281A  
                     l106 2886                       l900 28BE                       l830 2692  
                     l902 28CE                       l910 2704                       l840 26A4  
                     l832 2696                       l904 28D4                       l920 2730  
                     l912 2708                       l850 26BC                       l842 26A8  
                     l834 2698                       l906 28E4                       l930 274E  
                     l922 2736                       l914 270E                       l860 26E0  
                     l852 26BE                       l844 26AA                       l836 269A  
                     l828 27E0                       l908 2910                       l924 273C  
                     l916 271C                       l940 280C                       l932 27E2  
                     l870 28FA                       l862 26EA                       l854 26CA  
                     l846 26B2                       l838 269C                       l950 2890  
                     l926 2742                       l918 272A                       l942 2810  
                     l934 27EC                       l872 28FC                       l856 26D2  
                     l848 26B4                       l960 28A2                       l952 2894  
                     l880 285C                       l928 2748                       l944 2814  
                     l936 27FA                       l874 2904                       l858 26D6  
                     l866 26F0                       l962 28A8                       l954 289C  
                     l946 288A                       l890 286E                       l882 2860  
                     l938 27FE                       l868 28EE                       l964 28AE  
                     l956 289E                       l948 288C                       l892 2874  
                     l884 2868                       l876 2856                       l966 28B4  
                     l958 28A0                       l894 287A                       l886 286A  
                     l878 2858                       l896 2880                       l888 286C  
                     l898 2908                       l978 291E                       u200 262A  
                     u201 2626                       u210 2648                       u211 2644  
                     u220 2666                       u221 2662                       u230 2684  
                     u231 2680                       u240 27A2                       u241 279E  
                     u307 2896                       u317 269E                       u190 27D4  
                     u327 26AC                       u191 27D0                       u337 26B6  
                     u257 27F2                       u347 26CC                       u267 2804  
                     u357 26DA                       u277 2714                       u367 26E4  
                     u287 2724                       u377 28FE                       u297 2862  
             LEER_LCD@aux 0501                       wreg 04E8              ?_CURSOR_HOME 0501  
          ??_ENVIA_NIBBLE 0501            ENVIA_CHAR@dato 0502                      l1120 27B4  
                    l1122 27D4                      l1130 2636                      l1116 27A4  
                    l1140 2684                      l1132 2648                      l1118 27B0  
                    l1150 278E                      l1142 2756                      l1134 2654  
                    l1126 261A                      l1152 2790                      l1144 2766  
                    l1136 2666                      l1128 262A                      l1146 2766  
                    l1138 2672                      l1154 281C                      l1148 276E  
                    l1156 282A                      l1158 2836                      STR_1 2601  
                    STR_2 260C                      _LATD 04C1                      _main 281C  
                    start FFFC             ?_CURSOR_ONOFF 0501              ___param_bank 0000  
         ??_ENVIA_LCD_CMD 0502          __end_of_LCD_INIT 281C          __end_of_LEER_LCD 2704  
                   ?_main 0501                     _PORTD 04D1                     _TRISD 04C9  
             ?_POS_CURSOR 0504                     tablat 04F5                     status 04D8  
          ??_CURSOR_ONOFF 0504           __initialization 2918              __end_of_main 2854  
                  ??_main 050B             __activetblptr 0003                    _ANSELD 0418  
    __end_of_ENVIA_NIBBLE 2908                    isa$std 0001                    _strlen 27A4  
            __mediumconst 0000                    tblptrh 04F7                    tblptrl 04F6  
                  tblptru 04F8              ??_BORRAR_LCD 0504                 ?_LCD_INIT 0501  
               ?_LEER_LCD 0501                __accesstop 0560   __end_of__initialization 2918  
            ??_LCD_CONFIG 0504             ___rparam_used 0001              ??_ENVIA_CHAR 0502  
          __pcstackCOMRAM 0501        __end_of_BORRAR_LCD 2918          _ESCRIBE_MENSAJE2 2756  
        ENVIA_LCD_CMD@aux 0503      __end_of_CURSOR_ONOFF 28EC        __end_of_LCD_CONFIG 2756  
      __end_of_ENVIA_CHAR 28BC                ??_LCD_INIT 0505                ??_LEER_LCD 0501  
        ENVIA_NIBBLE@dato 0501                   ?_strlen 0501              ??_POS_CURSOR 0505  
                 __Hparam 0000                   __Lparam 0000         __end_of_configuro 2924  
            __psmallconst 2600     __end_of_ENVIA_LCD_CMD 2888                   __pcinit 2918  
      __end_of_POS_CURSOR 2692                   __ramtop 2600                   __ptext0 281C  
                 __ptext1 291E                   __ptext2 27E2                   __ptext3 2704  
                 __ptext4 28BC                   __ptext5 2908                   __ptext6 2910  
                 __ptext7 2618                   __ptext8 2854                   __ptext9 2756  
            _ENVIA_NIBBLE 28EC      end_of_initialization 2918                   strlen@a 0503  
                 strlen@s 0501         ESCRIBE_MENSAJE2@i 050A  __end_of_ESCRIBE_MENSAJE2 27A4  
            _CURSOR_ONOFF 28BC        CURSOR_ONOFF@estado 0504            __end_of_strlen 27E2  
           ??_CURSOR_HOME 0504       start_initialization 2918         ENVIA_LCD_CMD@dato 0502  
                ??_strlen 0503       __end_of_CURSOR_HOME 2910                 _configuro 291E  
             __smallconst 2600                  _LCD_INIT 27E2                  _LEER_LCD 2692  
                _LATDbits 04C1            POS_CURSOR@fila 0505                ?_configuro 0501  
  ESCRIBE_MENSAJE2@cadena 0505               _CURSOR_HOME 2908                  __Hrparam 0000  
       ?_ESCRIBE_MENSAJE2 0505                  __Lrparam 0000        ??_ESCRIBE_MENSAJE2 0507  
                __ptext10 27A4                  __ptext11 2888                  __ptext12 2692  
                __ptext13 28EC                _BORRAR_LCD 2910                _LCD_CONFIG 2704  
              _ENVIA_CHAR 2888                  isa$xinst 0000             _ENVIA_LCD_CMD 2854  
             ??_configuro 0506            ?_ENVIA_LCD_CMD 0501       ESCRIBE_MENSAJE2@tam 0509  
             ?_BORRAR_LCD 0501             ?_ENVIA_NIBBLE 0501                _POS_CURSOR 2618  
             ?_LCD_CONFIG 0501               ?_ENVIA_CHAR 0501         POS_CURSOR@columna 0504  
