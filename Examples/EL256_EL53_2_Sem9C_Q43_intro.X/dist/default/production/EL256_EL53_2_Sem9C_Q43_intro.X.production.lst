

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Fri May 19 18:40:09 2023

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	18F57Q43
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    31                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    32                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    33                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    34  0000                     
    35                           ; Version 2.40
    36                           ; Generated 08/12/2021 GMT
    37                           ; 
    38                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    39                           ; All rights reserved.
    40                           ; 
    41                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    42                           ; 
    43                           ; Redistribution and use in source and binary forms, with or without modification, are
    44                           ; permitted provided that the following conditions are met:
    45                           ; 
    46                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    47                           ;        conditions and the following disclaimer.
    48                           ; 
    49                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    50                           ;        of conditions and the following disclaimer in the documentation and/or other
    51                           ;        materials provided with the distribution. Publication is not required when
    52                           ;        this file is used in an embedded application.
    53                           ; 
    54                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    55                           ;        software without specific prior written permission.
    56                           ; 
    57                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    58                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    59                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    60                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    61                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    62                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    63                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    64                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    65                           ; 
    66                           ; 
    67                           ; Code-generator required, PIC18F57Q43 Definitions
    68                           ; 
    69                           ; SFR Addresses
    70  0000                     
    71                           	psect	idataCOMRAM
    72  002A82                     __pidataCOMRAM:
    73                           	callstack 0
    74                           
    75                           ;initializer for _e_acentuado
    76  002A82  02                 	db	2
    77  002A83  04                 	db	4
    78  002A84  0E                 	db	14
    79  002A85  11                 	db	17
    80  002A86  1F                 	db	31
    81  002A87  10                 	db	16
    82  002A88  0E                 	db	14
    83  002A89  00                 	db	0
    84  0000                     _LATD	set	1217
    85  0000                     _OSCCON1	set	173
    86  0000                     _LATDbits	set	1217
    87  0000                     _LATEbits	set	1218
    88  0000                     _TRISAbits	set	1222
    89  0000                     _TRISD	set	1225
    90  0000                     _TRISEbits	set	1226
    91  0000                     _PORTD	set	1233
    92  0000                     _OSCFRQ	set	177
    93  0000                     _OSCEN	set	179
    94  0000                     _ANSELAbits	set	1024
    95  0000                     _ANSELD	set	1048
    96  0000                     _ANSELEbits	set	1056
    97  0000                     _TRISBbits	set	1223
    98  0000                     _ANSELBbits	set	1032
    99  0000                     _WPUBbits	set	1033
   100  0000                     _LATCbits	set	1216
   101                           
   102                           	psect	smallconst
   103  002500                     __psmallconst:
   104                           	callstack 0
   105  002500  00                 	db	0
   106  002501                     STR_2:
   107  002501  20                 	db	32
   108  002502  4D                 	db	77	;'M'
   109  002503  69                 	db	105	;'i'
   110  002504  63                 	db	99	;'c'
   111  002505  72                 	db	114	;'r'
   112  002506  6F                 	db	111	;'o'
   113  002507  21                 	db	33
   114  002508  00                 	db	0
   115  002509                     STR_3:
   116  002509  43                 	db	67	;'C'
   117  00250A  75                 	db	117	;'u'
   118  00250B  65                 	db	101	;'e'
   119  00250C  6E                 	db	110	;'n'
   120  00250D  74                 	db	116	;'t'
   121  00250E  61                 	db	97	;'a'
   122  00250F  3A                 	db	58	;':'
   123  002510  00                 	db	0
   124  002511                     STR_1:
   125  002511  41                 	db	65	;'A'
   126  002512  70                 	db	112	;'p'
   127  002513  72                 	db	114	;'r'
   128  002514  6F                 	db	111	;'o'
   129  002515  62                 	db	98	;'b'
   130  002516  61                 	db	97	;'a'
   131  002517  72                 	db	114	;'r'
   132  002518  00                 	db	0
   133  002519  00                 	db	0	; dummy byte at the end
   134  0000                     
   135                           ; #config settings
   136                           
   137                           	psect	cinit
   138  00289A                     __pcinit:
   139                           	callstack 0
   140  00289A                     start_initialization:
   141                           	callstack 0
   142  00289A                     __initialization:
   143                           	callstack 0
   144                           
   145                           ; Initialize objects allocated to COMRAM (8 bytes)
   146                           ; load TBLPTR registers with __pidataCOMRAM
   147  00289A  0E82               	movlw	low __pidataCOMRAM
   148  00289C  6EF6               	movwf	tblptrl,c
   149  00289E  0E2A               	movlw	high __pidataCOMRAM
   150  0028A0  6EF7               	movwf	tblptrh,c
   151  0028A2  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   152  0028A4  6EF8               	movwf	tblptru,c
   153  0028A6  EE01  F110         	lfsr	0,__pdataCOMRAM
   154  0028AA  EE10 F008          	lfsr	1,8
   155  0028AE                     copy_data0:
   156  0028AE  0009               	tblrd		*+
   157  0028B0  C4F5 F4EE          	movff	tablat,postinc0
   158  0028B4  50E5               	movf	postdec1,w,c
   159  0028B6  50E1               	movf	fsr1l,w,c
   160  0028B8  E1FA               	bnz	copy_data0
   161                           
   162                           ; Clear objects allocated to COMRAM (7 bytes)
   163  0028BA  EE01  F118         	lfsr	0,__pbssCOMRAM
   164  0028BE  0E07               	movlw	7
   165  0028C0                     clear_0:
   166  0028C0  6AEE               	clrf	postinc0,c
   167  0028C2  06E8               	decf	wreg,f,c
   168  0028C4  E1FD               	bnz	clear_0
   169  0028C6                     end_of_initialization:
   170                           	callstack 0
   171  0028C6                     __end_of__initialization:
   172                           	callstack 0
   173  0028C6  0E00               	movlw	low (__Lsmallconst shr (0+16))
   174  0028C8  6EF8               	movwf	tblptru,c
   175  0028CA  0E25               	movlw	high __Lsmallconst
   176  0028CC  6EF7               	movwf	tblptrh,c
   177  0028CE  0100               	movlb	0
   178  0028D0  EFE5  F013         	goto	_main	;jump to C main() function
   179                           
   180                           	psect	bssCOMRAM
   181  000518                     __pbssCOMRAM:
   182                           	callstack 0
   183  000518                     _unidad:
   184                           	callstack 0
   185  000518                     	ds	2
   186  00051A                     _decena:
   187                           	callstack 0
   188  00051A                     	ds	2
   189  00051C                     _centena:
   190                           	callstack 0
   191  00051C                     	ds	2
   192  00051E                     _cuenta:
   193                           	callstack 0
   194  00051E                     	ds	1
   195                           
   196                           	psect	dataCOMRAM
   197  000510                     __pdataCOMRAM:
   198                           	callstack 0
   199  000510                     _e_acentuado:
   200                           	callstack 0
   201  000510                     	ds	8
   202                           
   203                           	psect	cstackCOMRAM
   204  000501                     __pcstackCOMRAM:
   205                           	callstack 0
   206  000501                     ??_parpadeo:
   207  000501                     ?___awmod:
   208                           	callstack 0
   209  000501                     ENVIA_NIBBLE@dato:
   210                           	callstack 0
   211  000501                     LEER_LCD@aux:
   212                           	callstack 0
   213  000501                     ___awmod@dividend:
   214                           	callstack 0
   215                           
   216                           ; 2 bytes @ 0x0
   217  000501                     	ds	1
   218  000502                     ENVIA_CHAR@dato:
   219                           	callstack 0
   220  000502                     ENVIA_LCD_CMD@dato:
   221                           	callstack 0
   222                           
   223                           ; 1 bytes @ 0x1
   224  000502                     	ds	1
   225  000503                     ENVIA_CHAR@aux:
   226                           	callstack 0
   227  000503                     ENVIA_LCD_CMD@aux:
   228                           	callstack 0
   229  000503                     ___awmod@divisor:
   230                           	callstack 0
   231                           
   232                           ; 2 bytes @ 0x2
   233  000503                     	ds	1
   234  000504                     ??_LCD_CONFIG:
   235  000504                     POS_CURSOR@columna:
   236                           	callstack 0
   237  000504                     CURSOR_ONOFF@estado:
   238                           	callstack 0
   239  000504                     ESCRIBE_MENSAJE@cadena:
   240                           	callstack 0
   241  000504                     GENERACARACTER@vector:
   242                           	callstack 0
   243                           
   244                           ; 2 bytes @ 0x3
   245  000504                     	ds	1
   246  000505                     POS_CURSOR@fila:
   247                           	callstack 0
   248  000505                     ___awmod@counter:
   249                           	callstack 0
   250                           
   251                           ; 1 bytes @ 0x4
   252  000505                     	ds	1
   253  000506                     ESCRIBE_MENSAJE@tam:
   254                           	callstack 0
   255  000506                     GENERACARACTER@pos:
   256                           	callstack 0
   257  000506                     ___awmod@sign:
   258                           	callstack 0
   259                           
   260                           ; 1 bytes @ 0x5
   261  000506                     	ds	1
   262  000507                     ??_ESCRIBE_MENSAJE:
   263  000507                     ?___awdiv:
   264                           	callstack 0
   265  000507                     GENERACARACTER@i:
   266                           	callstack 0
   267  000507                     ___awdiv@dividend:
   268                           	callstack 0
   269                           
   270                           ; 2 bytes @ 0x6
   271  000507                     	ds	1
   272  000508                     ??_LCD_Init:
   273                           
   274                           ; 1 bytes @ 0x7
   275  000508                     	ds	1
   276  000509                     ESCRIBE_MENSAJE@i:
   277                           	callstack 0
   278  000509                     ___awdiv@divisor:
   279                           	callstack 0
   280                           
   281                           ; 2 bytes @ 0x8
   282  000509                     	ds	1
   283  00050A                     
   284                           ; 1 bytes @ 0x9
   285  00050A                     	ds	1
   286  00050B                     ___awdiv@counter:
   287                           	callstack 0
   288                           
   289                           ; 1 bytes @ 0xA
   290  00050B                     	ds	1
   291  00050C                     ___awdiv@sign:
   292                           	callstack 0
   293                           
   294                           ; 1 bytes @ 0xB
   295  00050C                     	ds	1
   296  00050D                     ___awdiv@quotient:
   297                           	callstack 0
   298                           
   299                           ; 2 bytes @ 0xC
   300  00050D                     	ds	2
   301  00050F                     convierte@numero:
   302                           	callstack 0
   303                           
   304                           ; 1 bytes @ 0xE
   305  00050F                     	ds	1
   306  000510                     
   307                           ; 1 bytes @ 0xF
   308 ;;
   309 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   310 ;;
   311 ;; *************** function _main *****************
   312 ;; Defined at:
   313 ;;		line 55 in file "maincode3.c"
   314 ;; Parameters:    Size  Location     Type
   315 ;;		None
   316 ;; Auto vars:     Size  Location     Type
   317 ;;		None
   318 ;; Return value:  Size  Location     Type
   319 ;;                  1    wreg      void 
   320 ;; Registers used:
   321 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   322 ;; Tracked objects:
   323 ;;		On entry : 0/0
   324 ;;		On exit  : 0/0
   325 ;;		Unchanged: 0/0
   326 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   327 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   328 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   329 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   330 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   331 ;;Total ram usage:        0 bytes
   332 ;; Hardware stack levels required when called: 4
   333 ;; This function calls:
   334 ;;		_ENVIA_CHAR
   335 ;;		_ESCRIBE_MENSAJE
   336 ;;		_LCD_Init
   337 ;;		_POS_CURSOR
   338 ;;		_configuro
   339 ;;		_convierte
   340 ;;		_parpadeo
   341 ;;		_splash_screen
   342 ;; This function is called by:
   343 ;;		Startup code after reset
   344 ;; This function uses a non-reentrant model
   345 ;;
   346                           
   347                           	psect	text0
   348  0027CA                     __ptext0:
   349                           	callstack 0
   350  0027CA                     _main:
   351                           	callstack 123
   352  0027CA                     
   353                           ;maincode3.c: 56:     configuro();
   354  0027CA  EC1F  F015         	call	_configuro	;wreg free
   355  0027CE                     
   356                           ;maincode3.c: 57:     LCD_Init();
   357  0027CE  EC87  F014         	call	_LCD_Init	;wreg free
   358  0027D2                     
   359                           ;maincode3.c: 58:     splash_screen();
   360  0027D2  ECD6  F014         	call	_splash_screen	;wreg free
   361  0027D6                     l1287:
   362                           
   363                           ;maincode3.c: 60:         parpadeo();
   364  0027D6  ECEF  F014         	call	_parpadeo	;wreg free
   365  0027DA                     
   366                           ;maincode3.c: 61:         cuenta++;
   367  0027DA  2A1E               	incf	_cuenta^(0+1280),f,c
   368  0027DC                     
   369                           ;maincode3.c: 62:         POS_CURSOR(2,0);
   370  0027DC  0E00               	movlw	0
   371  0027DE  6E04               	movwf	POS_CURSOR@columna^(0+1280),c
   372  0027E0  0E02               	movlw	2
   373  0027E2  EC6A  F014         	call	_POS_CURSOR
   374  0027E6                     
   375                           ;maincode3.c: 63:         ESCRIBE_MENSAJE("Cuenta:",7);
   376  0027E6  0E09               	movlw	low STR_3
   377  0027E8  6E04               	movwf	ESCRIBE_MENSAJE@cadena^(0+1280),c
   378  0027EA  0E25               	movlw	high STR_3
   379  0027EC  6E05               	movwf	(ESCRIBE_MENSAJE@cadena+1)^(0+1280),c
   380  0027EE  0E07               	movlw	7
   381  0027F0  6E06               	movwf	ESCRIBE_MENSAJE@tam^(0+1280),c
   382  0027F2  EC0E  F014         	call	_ESCRIBE_MENSAJE	;wreg free
   383  0027F6                     
   384                           ;maincode3.c: 64:         convierte(cuenta);
   385  0027F6  501E               	movf	_cuenta^(0+1280),w,c
   386  0027F8  EC82  F013         	call	_convierte
   387  0027FC                     
   388                           ;maincode3.c: 65:         ENVIA_CHAR(centena+0x30);
   389  0027FC  501C               	movf	_centena^(0+1280),w,c
   390  0027FE  0F30               	addlw	48
   391  002800  ECA2  F014         	call	_ENVIA_CHAR
   392  002804                     
   393                           ;maincode3.c: 66:         ENVIA_CHAR(decena+0x30);
   394  002804  501A               	movf	_decena^(0+1280),w,c
   395  002806  0F30               	addlw	48
   396  002808  ECA2  F014         	call	_ENVIA_CHAR
   397  00280C                     
   398                           ;maincode3.c: 67:         ENVIA_CHAR(unidad+0x30);
   399  00280C  5018               	movf	_unidad^(0+1280),w,c
   400  00280E  0F30               	addlw	48
   401  002810  ECA2  F014         	call	_ENVIA_CHAR
   402  002814  EFEB  F013         	goto	l1287
   403  002818  EFFE  F0FF         	goto	start
   404  00281C                     __end_of_main:
   405                           	callstack 0
   406                           
   407 ;; *************** function _splash_screen *****************
   408 ;; Defined at:
   409 ;;		line 37 in file "maincode3.c"
   410 ;; Parameters:    Size  Location     Type
   411 ;;		None
   412 ;; Auto vars:     Size  Location     Type
   413 ;;		None
   414 ;; Return value:  Size  Location     Type
   415 ;;                  1    wreg      void 
   416 ;; Registers used:
   417 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   418 ;; Tracked objects:
   419 ;;		On entry : 0/0
   420 ;;		On exit  : 0/0
   421 ;;		Unchanged: 0/0
   422 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   423 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   424 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   425 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   426 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   427 ;;Total ram usage:        0 bytes
   428 ;; Hardware stack levels used: 1
   429 ;; Hardware stack levels required when called: 3
   430 ;; This function calls:
   431 ;;		_ENVIA_CHAR
   432 ;;		_ESCRIBE_MENSAJE
   433 ;;		_POS_CURSOR
   434 ;; This function is called by:
   435 ;;		_main
   436 ;; This function uses a non-reentrant model
   437 ;;
   438                           
   439                           	psect	text1
   440  0029AC                     __ptext1:
   441                           	callstack 0
   442  0029AC                     _splash_screen:
   443                           	callstack 123
   444  0029AC                     
   445                           ;maincode3.c: 38:     POS_CURSOR(1,0);
   446  0029AC  0E00               	movlw	0
   447  0029AE  6E04               	movwf	POS_CURSOR@columna^(0+1280),c
   448  0029B0  0E01               	movlw	1
   449  0029B2  EC6A  F014         	call	_POS_CURSOR
   450  0029B6                     
   451                           ;maincode3.c: 39:     ESCRIBE_MENSAJE("Aprobar",7);
   452  0029B6  0E11               	movlw	low STR_1
   453  0029B8  6E04               	movwf	ESCRIBE_MENSAJE@cadena^(0+1280),c
   454  0029BA  0E25               	movlw	high STR_1
   455  0029BC  6E05               	movwf	(ESCRIBE_MENSAJE@cadena+1)^(0+1280),c
   456  0029BE  0E07               	movlw	7
   457  0029C0  6E06               	movwf	ESCRIBE_MENSAJE@tam^(0+1280),c
   458  0029C2  EC0E  F014         	call	_ESCRIBE_MENSAJE	;wreg free
   459  0029C6                     
   460                           ;maincode3.c: 40:     ENVIA_CHAR(0);
   461  0029C6  0E00               	movlw	0
   462  0029C8  ECA2  F014         	call	_ENVIA_CHAR
   463                           
   464                           ;maincode3.c: 41:     ESCRIBE_MENSAJE(" Micro!",7);
   465  0029CC  0E01               	movlw	low STR_2
   466  0029CE  6E04               	movwf	ESCRIBE_MENSAJE@cadena^(0+1280),c
   467  0029D0  0E25               	movlw	high STR_2
   468  0029D2  6E05               	movwf	(ESCRIBE_MENSAJE@cadena+1)^(0+1280),c
   469  0029D4  0E07               	movlw	7
   470  0029D6  6E06               	movwf	ESCRIBE_MENSAJE@tam^(0+1280),c
   471  0029D8  EC0E  F014         	call	_ESCRIBE_MENSAJE	;wreg free
   472  0029DC  0012               	return		;funcret
   473  0029DE                     __end_of_splash_screen:
   474                           	callstack 0
   475                           
   476 ;; *************** function _POS_CURSOR *****************
   477 ;; Defined at:
   478 ;;		line 6 in file "LCD.c"
   479 ;; Parameters:    Size  Location     Type
   480 ;;  fila            1    wreg     unsigned char 
   481 ;;  columna         1    3[COMRAM] unsigned char 
   482 ;; Auto vars:     Size  Location     Type
   483 ;;  fila            1    4[COMRAM] unsigned char 
   484 ;; Return value:  Size  Location     Type
   485 ;;                  1    wreg      void 
   486 ;; Registers used:
   487 ;;		wreg, status,2, status,0, cstack
   488 ;; Tracked objects:
   489 ;;		On entry : 0/0
   490 ;;		On exit  : 0/0
   491 ;;		Unchanged: 0/0
   492 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   493 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   494 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   495 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   496 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   497 ;;Total ram usage:        2 bytes
   498 ;; Hardware stack levels used: 1
   499 ;; Hardware stack levels required when called: 2
   500 ;; This function calls:
   501 ;;		_ENVIA_LCD_CMD
   502 ;; This function is called by:
   503 ;;		_splash_screen
   504 ;;		_main
   505 ;; This function uses a non-reentrant model
   506 ;;
   507                           
   508                           	psect	text2
   509  0028D4                     __ptext2:
   510                           	callstack 0
   511  0028D4                     _POS_CURSOR:
   512                           	callstack 123
   513                           
   514                           ;incstack = 0
   515                           ;POS_CURSOR@fila stored from wreg
   516  0028D4  6E05               	movwf	POS_CURSOR@fila^(0+1280),c
   517  0028D6                     
   518                           ;LCD.c: 6: void POS_CURSOR(unsigned char fila,unsigned char columna);LCD.c: 7: {;LCD.c: 
      +                          8:  if(fila == 1)
   519  0028D6  0405               	decf	POS_CURSOR@fila^(0+1280),w,c
   520  0028D8  A4D8               	btfss	status,2,c
   521  0028DA  EF71  F014         	goto	u251
   522  0028DE  EF73  F014         	goto	u250
   523  0028E2                     u251:
   524  0028E2  EF79  F014         	goto	l1151
   525  0028E6                     u250:
   526  0028E6                     
   527                           ;LCD.c: 9:  {;LCD.c: 10:   ENVIA_LCD_CMD(0x80+columna);
   528  0028E6  5004               	movf	POS_CURSOR@columna^(0+1280),w,c
   529  0028E8  0F80               	addlw	128
   530  0028EA  ECBC  F014         	call	_ENVIA_LCD_CMD
   531                           
   532                           ;LCD.c: 11:  }
   533  0028EE  EF86  F014         	goto	l24
   534  0028F2                     l1151:
   535  0028F2  0E02               	movlw	2
   536  0028F4  1805               	xorwf	POS_CURSOR@fila^(0+1280),w,c
   537  0028F6  A4D8               	btfss	status,2,c
   538  0028F8  EF80  F014         	goto	u261
   539  0028FC  EF82  F014         	goto	u260
   540  002900                     u261:
   541  002900  EF86  F014         	goto	l24
   542  002904                     u260:
   543  002904                     
   544                           ;LCD.c: 13:  {;LCD.c: 14:   ENVIA_LCD_CMD(0xC0+columna);
   545  002904  5004               	movf	POS_CURSOR@columna^(0+1280),w,c
   546  002906  0FC0               	addlw	192
   547  002908  ECBC  F014         	call	_ENVIA_LCD_CMD
   548  00290C                     l24:
   549  00290C  0012               	return		;funcret
   550  00290E                     __end_of_POS_CURSOR:
   551                           	callstack 0
   552                           
   553 ;; *************** function _ESCRIBE_MENSAJE *****************
   554 ;; Defined at:
   555 ;;		line 41 in file "LCD.c"
   556 ;; Parameters:    Size  Location     Type
   557 ;;  cadena          2    3[COMRAM] PTR const unsigned char 
   558 ;;		 -> STR_3(8), STR_2(8), STR_1(8), 
   559 ;;  tam             1    5[COMRAM] unsigned char 
   560 ;; Auto vars:     Size  Location     Type
   561 ;;  i               1    8[COMRAM] unsigned char 
   562 ;; Return value:  Size  Location     Type
   563 ;;                  1    wreg      void 
   564 ;; Registers used:
   565 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   566 ;; Tracked objects:
   567 ;;		On entry : 0/0
   568 ;;		On exit  : 0/0
   569 ;;		Unchanged: 0/0
   570 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   571 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   572 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   573 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   574 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   575 ;;Total ram usage:        6 bytes
   576 ;; Hardware stack levels used: 1
   577 ;; Hardware stack levels required when called: 2
   578 ;; This function calls:
   579 ;;		_ENVIA_CHAR
   580 ;; This function is called by:
   581 ;;		_splash_screen
   582 ;;		_main
   583 ;; This function uses a non-reentrant model
   584 ;;
   585                           
   586                           	psect	text3
   587  00281C                     __ptext3:
   588                           	callstack 0
   589  00281C                     _ESCRIBE_MENSAJE:
   590                           	callstack 123
   591  00281C                     
   592                           ;LCD.c: 41: void ESCRIBE_MENSAJE(const char *cadena,unsigned char tam);LCD.c: 42: {;LCD.
      +                          c: 43:  unsigned char i = 0;
   593  00281C  0E00               	movlw	0
   594  00281E  6E09               	movwf	ESCRIBE_MENSAJE@i^(0+1280),c
   595                           
   596                           ;LCD.c: 44:  for(i = 0; i<tam; i++)
   597  002820  0E00               	movlw	0
   598  002822  6E09               	movwf	ESCRIBE_MENSAJE@i^(0+1280),c
   599  002824  EF25  F014         	goto	l1161
   600  002828                     l1157:
   601                           
   602                           ;LCD.c: 45:  {;LCD.c: 46:   ENVIA_CHAR(cadena[i]);
   603  002828  5009               	movf	ESCRIBE_MENSAJE@i^(0+1280),w,c
   604  00282A  2404               	addwf	ESCRIBE_MENSAJE@cadena^(0+1280),w,c
   605  00282C  6E07               	movwf	??_ESCRIBE_MENSAJE^(0+1280),c
   606  00282E  0E00               	movlw	0
   607  002830  2005               	addwfc	(ESCRIBE_MENSAJE@cadena+1)^(0+1280),w,c
   608  002832  6E08               	movwf	(??_ESCRIBE_MENSAJE+1)^(0+1280),c
   609  002834  0061  F41C  F4F6   	movff	??_ESCRIBE_MENSAJE,tblptrl
   610  00283A  0061  F420  F4F7   	movff	??_ESCRIBE_MENSAJE+1,tblptrh
   611  002840                     	if	0	;tblptru may be non-zero
   612  002840                     	endif
   613  002840                     	if	0	;tblptru may be non-zero
   614  002840                     	endif
   615  002840  0008               	tblrd		*
   616  002842  50F5               	movf	tablat,w,c
   617  002844  ECA2  F014         	call	_ENVIA_CHAR
   618  002848                     
   619                           ;LCD.c: 47:  }
   620  002848  2A09               	incf	ESCRIBE_MENSAJE@i^(0+1280),f,c
   621  00284A                     l1161:
   622  00284A  5006               	movf	ESCRIBE_MENSAJE@tam^(0+1280),w,c
   623  00284C  5C09               	subwf	ESCRIBE_MENSAJE@i^(0+1280),w,c
   624  00284E  A0D8               	btfss	status,0,c
   625  002850  EF2C  F014         	goto	u271
   626  002854  EF2E  F014         	goto	u270
   627  002858                     u271:
   628  002858  EF14  F014         	goto	l1157
   629  00285C                     u270:
   630  00285C  0012               	return		;funcret
   631  00285E                     __end_of_ESCRIBE_MENSAJE:
   632                           	callstack 0
   633                           
   634 ;; *************** function _parpadeo *****************
   635 ;; Defined at:
   636 ;;		line 44 in file "maincode3.c"
   637 ;; Parameters:    Size  Location     Type
   638 ;;		None
   639 ;; Auto vars:     Size  Location     Type
   640 ;;		None
   641 ;; Return value:  Size  Location     Type
   642 ;;                  1    wreg      void 
   643 ;; Registers used:
   644 ;;		wreg, status,2, status,0
   645 ;; Tracked objects:
   646 ;;		On entry : 0/0
   647 ;;		On exit  : 0/0
   648 ;;		Unchanged: 0/0
   649 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   650 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   651 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   652 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   653 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   654 ;;Total ram usage:        1 bytes
   655 ;; Hardware stack levels used: 1
   656 ;; This function calls:
   657 ;;		Nothing
   658 ;; This function is called by:
   659 ;;		_main
   660 ;; This function uses a non-reentrant model
   661 ;;
   662                           
   663                           	psect	text4
   664  0029DE                     __ptext4:
   665                           	callstack 0
   666  0029DE                     _parpadeo:
   667                           	callstack 126
   668  0029DE                     
   669                           ;maincode3.c: 45:     _delay((unsigned long)((100)*(4000000UL/4000.0)));
   670  0029DE  0E82               	movlw	130
   671  0029E0  6E01               	movwf	??_parpadeo^(0+1280),c
   672  0029E2  0EDE               	movlw	222
   673  0029E4                     u417:
   674  0029E4  2EE8               	decfsz	wreg,f,c
   675  0029E6  D7FE               	bra	u417
   676  0029E8  2E01               	decfsz	??_parpadeo^(0+1280),f,c
   677  0029EA  D7FC               	bra	u417
   678  0029EC                     
   679                           ;maincode3.c: 46:     LATEbits.LATE0 = ~LATEbits.LATE0;
   680  0029EC  B0C2               	btfsc	194,0,c	;volatile
   681  0029EE  EFFB  F014         	goto	u201
   682  0029F2  EFFE  F014         	goto	u200
   683  0029F6                     u201:
   684  0029F6  0E01               	movlw	1
   685  0029F8  EFFF  F014         	goto	u206
   686  0029FC                     u200:
   687  0029FC  0E00               	movlw	0
   688  0029FE                     u206:
   689  0029FE  0AFF               	xorlw	255
   690  002A00  6E01               	movwf	??_parpadeo^(0+1280),c
   691  002A02  50C2               	movf	194,w,c	;volatile
   692  002A04  1801               	xorwf	??_parpadeo^(0+1280),w,c
   693  002A06  0BFE               	andlw	-2
   694  002A08  1801               	xorwf	??_parpadeo^(0+1280),w,c
   695  002A0A  6EC2               	movwf	194,c	;volatile
   696  002A0C  0012               	return		;funcret
   697  002A0E                     __end_of_parpadeo:
   698                           	callstack 0
   699                           
   700 ;; *************** function _convierte *****************
   701 ;; Defined at:
   702 ;;		line 49 in file "maincode3.c"
   703 ;; Parameters:    Size  Location     Type
   704 ;;  numero          1    wreg     unsigned char 
   705 ;; Auto vars:     Size  Location     Type
   706 ;;  numero          1   14[COMRAM] unsigned char 
   707 ;; Return value:  Size  Location     Type
   708 ;;                  1    wreg      void 
   709 ;; Registers used:
   710 ;;		wreg, status,2, status,0, cstack
   711 ;; Tracked objects:
   712 ;;		On entry : 0/0
   713 ;;		On exit  : 0/0
   714 ;;		Unchanged: 0/0
   715 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   716 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   717 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   718 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   719 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   720 ;;Total ram usage:        1 bytes
   721 ;; Hardware stack levels used: 1
   722 ;; Hardware stack levels required when called: 1
   723 ;; This function calls:
   724 ;;		___awdiv
   725 ;;		___awmod
   726 ;; This function is called by:
   727 ;;		_main
   728 ;; This function uses a non-reentrant model
   729 ;;
   730                           
   731                           	psect	text5
   732  002704                     __ptext5:
   733                           	callstack 0
   734  002704                     _convierte:
   735                           	callstack 125
   736                           
   737                           ;incstack = 0
   738                           ;convierte@numero stored from wreg
   739  002704  6E0F               	movwf	convierte@numero^(0+1280),c
   740  002706                     
   741                           ;maincode3.c: 50:     centena = numero / 100;
   742  002706  C50F  F507         	movff	convierte@numero,___awdiv@dividend
   743  00270A  6A08               	clrf	(___awdiv@dividend+1)^(0+1280),c
   744  00270C  0E00               	movlw	0
   745  00270E  6E0A               	movwf	(___awdiv@divisor+1)^(0+1280),c
   746  002710  0E64               	movlw	100
   747  002712  6E09               	movwf	___awdiv@divisor^(0+1280),c
   748  002714  EC8D  F012         	call	___awdiv	;wreg free
   749  002718  C507  F51C         	movff	?___awdiv,_centena
   750  00271C  C508  F51D         	movff	?___awdiv+1,_centena+1
   751                           
   752                           ;maincode3.c: 51:     decena = (numero % 100) / 10;
   753  002720  0E00               	movlw	0
   754  002722  6E04               	movwf	(___awmod@divisor+1)^(0+1280),c
   755  002724  0E64               	movlw	100
   756  002726  6E03               	movwf	___awmod@divisor^(0+1280),c
   757  002728  C50F  F501         	movff	convierte@numero,___awmod@dividend
   758  00272C  6A02               	clrf	(___awmod@dividend+1)^(0+1280),c
   759  00272E  ECEF  F012         	call	___awmod	;wreg free
   760  002732  C501  F507         	movff	?___awmod,___awdiv@dividend
   761  002736  C502  F508         	movff	?___awmod+1,___awdiv@dividend+1
   762  00273A  0E00               	movlw	0
   763  00273C  6E0A               	movwf	(___awdiv@divisor+1)^(0+1280),c
   764  00273E  0E0A               	movlw	10
   765  002740  6E09               	movwf	___awdiv@divisor^(0+1280),c
   766  002742  EC8D  F012         	call	___awdiv	;wreg free
   767  002746  C507  F51A         	movff	?___awdiv,_decena
   768  00274A  C508  F51B         	movff	?___awdiv+1,_decena+1
   769                           
   770                           ;maincode3.c: 52:     unidad = numero % 10;
   771  00274E  C50F  F501         	movff	convierte@numero,___awmod@dividend
   772  002752  6A02               	clrf	(___awmod@dividend+1)^(0+1280),c
   773  002754  0E00               	movlw	0
   774  002756  6E04               	movwf	(___awmod@divisor+1)^(0+1280),c
   775  002758  0E0A               	movlw	10
   776  00275A  6E03               	movwf	___awmod@divisor^(0+1280),c
   777  00275C  ECEF  F012         	call	___awmod	;wreg free
   778  002760  C501  F518         	movff	?___awmod,_unidad
   779  002764  C502  F519         	movff	?___awmod+1,_unidad+1
   780  002768  0012               	return		;funcret
   781  00276A                     __end_of_convierte:
   782                           	callstack 0
   783                           
   784 ;; *************** function ___awmod *****************
   785 ;; Defined at:
   786 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\awmod.c"
   787 ;; Parameters:    Size  Location     Type
   788 ;;  dividend        2    0[COMRAM] int 
   789 ;;  divisor         2    2[COMRAM] int 
   790 ;; Auto vars:     Size  Location     Type
   791 ;;  sign            1    5[COMRAM] unsigned char 
   792 ;;  counter         1    4[COMRAM] unsigned char 
   793 ;; Return value:  Size  Location     Type
   794 ;;                  2    0[COMRAM] int 
   795 ;; Registers used:
   796 ;;		wreg, status,2, status,0
   797 ;; Tracked objects:
   798 ;;		On entry : 0/0
   799 ;;		On exit  : 0/0
   800 ;;		Unchanged: 0/0
   801 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   802 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   803 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   804 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   805 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   806 ;;Total ram usage:        6 bytes
   807 ;; Hardware stack levels used: 1
   808 ;; This function calls:
   809 ;;		Nothing
   810 ;; This function is called by:
   811 ;;		_convierte
   812 ;; This function uses a non-reentrant model
   813 ;;
   814                           
   815                           	psect	text6
   816  0025DE                     __ptext6:
   817                           	callstack 0
   818  0025DE                     ___awmod:
   819                           	callstack 125
   820  0025DE  0E00               	movlw	0
   821  0025E0  6E06               	movwf	___awmod@sign^(0+1280),c
   822  0025E2  BE02               	btfsc	(___awmod@dividend+1)^(0+1280),7,c
   823  0025E4  EFF8  F012         	goto	u350
   824  0025E8  EFF6  F012         	goto	u351
   825  0025EC                     u351:
   826  0025EC  EFFE  F012         	goto	l1231
   827  0025F0                     u350:
   828  0025F0  6C01               	negf	___awmod@dividend^(0+1280),c
   829  0025F2  1E02               	comf	(___awmod@dividend+1)^(0+1280),f,c
   830  0025F4  B0D8               	btfsc	status,0,c
   831  0025F6  2A02               	incf	(___awmod@dividend+1)^(0+1280),f,c
   832  0025F8  0E01               	movlw	1
   833  0025FA  6E06               	movwf	___awmod@sign^(0+1280),c
   834  0025FC                     l1231:
   835  0025FC  BE04               	btfsc	(___awmod@divisor+1)^(0+1280),7,c
   836  0025FE  EF05  F013         	goto	u360
   837  002602  EF03  F013         	goto	u361
   838  002606                     u361:
   839  002606  EF09  F013         	goto	l1235
   840  00260A                     u360:
   841  00260A  6C03               	negf	___awmod@divisor^(0+1280),c
   842  00260C  1E04               	comf	(___awmod@divisor+1)^(0+1280),f,c
   843  00260E  B0D8               	btfsc	status,0,c
   844  002610  2A04               	incf	(___awmod@divisor+1)^(0+1280),f,c
   845  002612                     l1235:
   846  002612  5003               	movf	___awmod@divisor^(0+1280),w,c
   847  002614  1004               	iorwf	(___awmod@divisor+1)^(0+1280),w,c
   848  002616  B4D8               	btfsc	status,2,c
   849  002618  EF10  F013         	goto	u371
   850  00261C  EF12  F013         	goto	u370
   851  002620                     u371:
   852  002620  EF36  F013         	goto	l1251
   853  002624                     u370:
   854  002624  0E01               	movlw	1
   855  002626  6E05               	movwf	___awmod@counter^(0+1280),c
   856  002628  EF1A  F013         	goto	l1241
   857  00262C                     l1239:
   858  00262C  90D8               	bcf	status,0,c
   859  00262E  3603               	rlcf	___awmod@divisor^(0+1280),f,c
   860  002630  3604               	rlcf	(___awmod@divisor+1)^(0+1280),f,c
   861  002632  2A05               	incf	___awmod@counter^(0+1280),f,c
   862  002634                     l1241:
   863  002634  AE04               	btfss	(___awmod@divisor+1)^(0+1280),7,c
   864  002636  EF1F  F013         	goto	u381
   865  00263A  EF21  F013         	goto	u380
   866  00263E                     u381:
   867  00263E  EF16  F013         	goto	l1239
   868  002642                     u380:
   869  002642                     l1243:
   870  002642  5003               	movf	___awmod@divisor^(0+1280),w,c
   871  002644  5C01               	subwf	___awmod@dividend^(0+1280),w,c
   872  002646  5004               	movf	(___awmod@divisor+1)^(0+1280),w,c
   873  002648  5802               	subwfb	(___awmod@dividend+1)^(0+1280),w,c
   874  00264A  A0D8               	btfss	status,0,c
   875  00264C  EF2A  F013         	goto	u391
   876  002650  EF2C  F013         	goto	u390
   877  002654                     u391:
   878  002654  EF30  F013         	goto	l1247
   879  002658                     u390:
   880  002658  5003               	movf	___awmod@divisor^(0+1280),w,c
   881  00265A  5E01               	subwf	___awmod@dividend^(0+1280),f,c
   882  00265C  5004               	movf	(___awmod@divisor+1)^(0+1280),w,c
   883  00265E  5A02               	subwfb	(___awmod@dividend+1)^(0+1280),f,c
   884  002660                     l1247:
   885  002660  90D8               	bcf	status,0,c
   886  002662  3204               	rrcf	(___awmod@divisor+1)^(0+1280),f,c
   887  002664  3203               	rrcf	___awmod@divisor^(0+1280),f,c
   888  002666  2E05               	decfsz	___awmod@counter^(0+1280),f,c
   889  002668  EF21  F013         	goto	l1243
   890  00266C                     l1251:
   891  00266C  5006               	movf	___awmod@sign^(0+1280),w,c
   892  00266E  B4D8               	btfsc	status,2,c
   893  002670  EF3C  F013         	goto	u401
   894  002674  EF3E  F013         	goto	u400
   895  002678                     u401:
   896  002678  EF42  F013         	goto	l1255
   897  00267C                     u400:
   898  00267C  6C01               	negf	___awmod@dividend^(0+1280),c
   899  00267E  1E02               	comf	(___awmod@dividend+1)^(0+1280),f,c
   900  002680  B0D8               	btfsc	status,0,c
   901  002682  2A02               	incf	(___awmod@dividend+1)^(0+1280),f,c
   902  002684                     l1255:
   903  002684  C501  F501         	movff	___awmod@dividend,?___awmod
   904  002688  C502  F502         	movff	___awmod@dividend+1,?___awmod+1
   905  00268C  0012               	return		;funcret
   906  00268E                     __end_of___awmod:
   907                           	callstack 0
   908                           
   909 ;; *************** function ___awdiv *****************
   910 ;; Defined at:
   911 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\awdiv.c"
   912 ;; Parameters:    Size  Location     Type
   913 ;;  dividend        2    6[COMRAM] int 
   914 ;;  divisor         2    8[COMRAM] int 
   915 ;; Auto vars:     Size  Location     Type
   916 ;;  quotient        2   12[COMRAM] int 
   917 ;;  sign            1   11[COMRAM] unsigned char 
   918 ;;  counter         1   10[COMRAM] unsigned char 
   919 ;; Return value:  Size  Location     Type
   920 ;;                  2    6[COMRAM] int 
   921 ;; Registers used:
   922 ;;		wreg, status,2, status,0
   923 ;; Tracked objects:
   924 ;;		On entry : 0/0
   925 ;;		On exit  : 0/0
   926 ;;		Unchanged: 0/0
   927 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   928 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   929 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   930 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   931 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   932 ;;Total ram usage:        8 bytes
   933 ;; Hardware stack levels used: 1
   934 ;; This function calls:
   935 ;;		Nothing
   936 ;; This function is called by:
   937 ;;		_convierte
   938 ;; This function uses a non-reentrant model
   939 ;;
   940                           
   941                           	psect	text7
   942  00251A                     __ptext7:
   943                           	callstack 0
   944  00251A                     ___awdiv:
   945                           	callstack 125
   946  00251A  0E00               	movlw	0
   947  00251C  6E0C               	movwf	___awdiv@sign^(0+1280),c
   948  00251E  BE0A               	btfsc	(___awdiv@divisor+1)^(0+1280),7,c
   949  002520  EF96  F012         	goto	u290
   950  002524  EF94  F012         	goto	u291
   951  002528                     u291:
   952  002528  EF9C  F012         	goto	l1187
   953  00252C                     u290:
   954  00252C  6C09               	negf	___awdiv@divisor^(0+1280),c
   955  00252E  1E0A               	comf	(___awdiv@divisor+1)^(0+1280),f,c
   956  002530  B0D8               	btfsc	status,0,c
   957  002532  2A0A               	incf	(___awdiv@divisor+1)^(0+1280),f,c
   958  002534  0E01               	movlw	1
   959  002536  6E0C               	movwf	___awdiv@sign^(0+1280),c
   960  002538                     l1187:
   961  002538  BE08               	btfsc	(___awdiv@dividend+1)^(0+1280),7,c
   962  00253A  EFA3  F012         	goto	u300
   963  00253E  EFA1  F012         	goto	u301
   964  002542                     u301:
   965  002542  EFA9  F012         	goto	l1193
   966  002546                     u300:
   967  002546  6C07               	negf	___awdiv@dividend^(0+1280),c
   968  002548  1E08               	comf	(___awdiv@dividend+1)^(0+1280),f,c
   969  00254A  B0D8               	btfsc	status,0,c
   970  00254C  2A08               	incf	(___awdiv@dividend+1)^(0+1280),f,c
   971  00254E  0E01               	movlw	1
   972  002550  1A0C               	xorwf	___awdiv@sign^(0+1280),f,c
   973  002552                     l1193:
   974  002552  0E00               	movlw	0
   975  002554  6E0E               	movwf	(___awdiv@quotient+1)^(0+1280),c
   976  002556  0E00               	movlw	0
   977  002558  6E0D               	movwf	___awdiv@quotient^(0+1280),c
   978  00255A  5009               	movf	___awdiv@divisor^(0+1280),w,c
   979  00255C  100A               	iorwf	(___awdiv@divisor+1)^(0+1280),w,c
   980  00255E  B4D8               	btfsc	status,2,c
   981  002560  EFB4  F012         	goto	u311
   982  002564  EFB6  F012         	goto	u310
   983  002568                     u311:
   984  002568  EFDE  F012         	goto	l1215
   985  00256C                     u310:
   986  00256C  0E01               	movlw	1
   987  00256E  6E0B               	movwf	___awdiv@counter^(0+1280),c
   988  002570  EFBE  F012         	goto	l1201
   989  002574                     l1199:
   990  002574  90D8               	bcf	status,0,c
   991  002576  3609               	rlcf	___awdiv@divisor^(0+1280),f,c
   992  002578  360A               	rlcf	(___awdiv@divisor+1)^(0+1280),f,c
   993  00257A  2A0B               	incf	___awdiv@counter^(0+1280),f,c
   994  00257C                     l1201:
   995  00257C  AE0A               	btfss	(___awdiv@divisor+1)^(0+1280),7,c
   996  00257E  EFC3  F012         	goto	u321
   997  002582  EFC5  F012         	goto	u320
   998  002586                     u321:
   999  002586  EFBA  F012         	goto	l1199
  1000  00258A                     u320:
  1001  00258A                     l1203:
  1002  00258A  90D8               	bcf	status,0,c
  1003  00258C  360D               	rlcf	___awdiv@quotient^(0+1280),f,c
  1004  00258E  360E               	rlcf	(___awdiv@quotient+1)^(0+1280),f,c
  1005  002590  5009               	movf	___awdiv@divisor^(0+1280),w,c
  1006  002592  5C07               	subwf	___awdiv@dividend^(0+1280),w,c
  1007  002594  500A               	movf	(___awdiv@divisor+1)^(0+1280),w,c
  1008  002596  5808               	subwfb	(___awdiv@dividend+1)^(0+1280),w,c
  1009  002598  A0D8               	btfss	status,0,c
  1010  00259A  EFD1  F012         	goto	u331
  1011  00259E  EFD3  F012         	goto	u330
  1012  0025A2                     u331:
  1013  0025A2  EFD8  F012         	goto	l1211
  1014  0025A6                     u330:
  1015  0025A6  5009               	movf	___awdiv@divisor^(0+1280),w,c
  1016  0025A8  5E07               	subwf	___awdiv@dividend^(0+1280),f,c
  1017  0025AA  500A               	movf	(___awdiv@divisor+1)^(0+1280),w,c
  1018  0025AC  5A08               	subwfb	(___awdiv@dividend+1)^(0+1280),f,c
  1019  0025AE  800D               	bsf	___awdiv@quotient^(0+1280),0,c
  1020  0025B0                     l1211:
  1021  0025B0  90D8               	bcf	status,0,c
  1022  0025B2  320A               	rrcf	(___awdiv@divisor+1)^(0+1280),f,c
  1023  0025B4  3209               	rrcf	___awdiv@divisor^(0+1280),f,c
  1024  0025B6  2E0B               	decfsz	___awdiv@counter^(0+1280),f,c
  1025  0025B8  EFC5  F012         	goto	l1203
  1026  0025BC                     l1215:
  1027  0025BC  500C               	movf	___awdiv@sign^(0+1280),w,c
  1028  0025BE  B4D8               	btfsc	status,2,c
  1029  0025C0  EFE4  F012         	goto	u341
  1030  0025C4  EFE6  F012         	goto	u340
  1031  0025C8                     u341:
  1032  0025C8  EFEA  F012         	goto	l1219
  1033  0025CC                     u340:
  1034  0025CC  6C0D               	negf	___awdiv@quotient^(0+1280),c
  1035  0025CE  1E0E               	comf	(___awdiv@quotient+1)^(0+1280),f,c
  1036  0025D0  B0D8               	btfsc	status,0,c
  1037  0025D2  2A0E               	incf	(___awdiv@quotient+1)^(0+1280),f,c
  1038  0025D4                     l1219:
  1039  0025D4  C50D  F507         	movff	___awdiv@quotient,?___awdiv
  1040  0025D8  C50E  F508         	movff	___awdiv@quotient+1,?___awdiv+1
  1041  0025DC  0012               	return		;funcret
  1042  0025DE                     __end_of___awdiv:
  1043                           	callstack 0
  1044                           
  1045 ;; *************** function _configuro *****************
  1046 ;; Defined at:
  1047 ;;		line 10 in file "maincode3.c"
  1048 ;; Parameters:    Size  Location     Type
  1049 ;;		None
  1050 ;; Auto vars:     Size  Location     Type
  1051 ;;		None
  1052 ;; Return value:  Size  Location     Type
  1053 ;;                  1    wreg      void 
  1054 ;; Registers used:
  1055 ;;		wreg, status,2
  1056 ;; Tracked objects:
  1057 ;;		On entry : 0/0
  1058 ;;		On exit  : 0/0
  1059 ;;		Unchanged: 0/0
  1060 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1061 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1062 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1063 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1064 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1065 ;;Total ram usage:        0 bytes
  1066 ;; Hardware stack levels used: 1
  1067 ;; This function calls:
  1068 ;;		Nothing
  1069 ;; This function is called by:
  1070 ;;		_main
  1071 ;; This function uses a non-reentrant model
  1072 ;;
  1073                           
  1074                           	psect	text8
  1075  002A3E                     __ptext8:
  1076                           	callstack 0
  1077  002A3E                     _configuro:
  1078                           	callstack 126
  1079  002A3E                     
  1080                           ;maincode3.c: 12:     OSCCON1 = 0x60;
  1081  002A3E  0E60               	movlw	96
  1082  002A40  0100               	movlb	0	; () banked
  1083  002A42  6FAD               	movwf	173,b	;volatile
  1084                           
  1085                           ;maincode3.c: 13:     OSCFRQ = 0x02;
  1086  002A44  0E02               	movlw	2
  1087  002A46  6FB1               	movwf	177,b	;volatile
  1088                           
  1089                           ;maincode3.c: 14:     OSCEN = 0x40;
  1090  002A48  0E40               	movlw	64
  1091  002A4A  6FB3               	movwf	179,b	;volatile
  1092                           
  1093                           ;maincode3.c: 16:     TRISD = 0x00;
  1094  002A4C  0E00               	movlw	0
  1095  002A4E  6EC9               	movwf	201,c	;volatile
  1096                           
  1097                           ;maincode3.c: 17:     ANSELD = 0x00;
  1098  002A50  0E00               	movlw	0
  1099  002A52  0104               	movlb	4	; () banked
  1100  002A54  6F18               	movwf	24,b	;volatile
  1101  002A56                     
  1102                           ; BSR set to: 4
  1103                           ;maincode3.c: 18:     TRISAbits.TRISA0 = 1;
  1104  002A56  80C6               	bsf	198,0,c	;volatile
  1105  002A58                     
  1106                           ; BSR set to: 4
  1107                           ;maincode3.c: 19:     ANSELAbits.ANSELA0 = 1;
  1108  002A58  8100               	bsf	0,0,b	;volatile
  1109  002A5A                     
  1110                           ; BSR set to: 4
  1111                           ;maincode3.c: 20:     TRISBbits.TRISB0 = 1;
  1112  002A5A  80C7               	bsf	199,0,c	;volatile
  1113  002A5C                     
  1114                           ; BSR set to: 4
  1115                           ;maincode3.c: 21:     ANSELBbits.ANSELB0 = 0;
  1116  002A5C  9108               	bcf	8,0,b	;volatile
  1117  002A5E                     
  1118                           ; BSR set to: 4
  1119                           ;maincode3.c: 22:     WPUBbits.WPUB0 = 1;
  1120  002A5E  8109               	bsf	9,0,b	;volatile
  1121  002A60                     
  1122                           ; BSR set to: 4
  1123                           ;maincode3.c: 23:     TRISEbits.TRISE0 = 0;
  1124  002A60  90CA               	bcf	202,0,c	;volatile
  1125  002A62                     
  1126                           ; BSR set to: 4
  1127                           ;maincode3.c: 24:     ANSELEbits.ANSELE0 = 0;
  1128  002A62  9120               	bcf	32,0,b	;volatile
  1129  002A64                     
  1130                           ; BSR set to: 4
  1131  002A64  0012               	return		;funcret
  1132  002A66                     __end_of_configuro:
  1133                           	callstack 0
  1134                           
  1135 ;; *************** function _LCD_Init *****************
  1136 ;; Defined at:
  1137 ;;		line 27 in file "maincode3.c"
  1138 ;; Parameters:    Size  Location     Type
  1139 ;;		None
  1140 ;; Auto vars:     Size  Location     Type
  1141 ;;		None
  1142 ;; Return value:  Size  Location     Type
  1143 ;;                  1    wreg      void 
  1144 ;; Registers used:
  1145 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1146 ;; Tracked objects:
  1147 ;;		On entry : 0/0
  1148 ;;		On exit  : 0/0
  1149 ;;		Unchanged: 0/0
  1150 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1151 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1152 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1153 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1154 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1155 ;;Total ram usage:        1 bytes
  1156 ;; Hardware stack levels used: 1
  1157 ;; Hardware stack levels required when called: 3
  1158 ;; This function calls:
  1159 ;;		_BORRAR_LCD
  1160 ;;		_CURSOR_HOME
  1161 ;;		_CURSOR_ONOFF
  1162 ;;		_GENERACARACTER
  1163 ;;		_LCD_CONFIG
  1164 ;; This function is called by:
  1165 ;;		_main
  1166 ;; This function uses a non-reentrant model
  1167 ;;
  1168                           
  1169                           	psect	text9
  1170  00290E                     __ptext9:
  1171                           	callstack 0
  1172  00290E                     _LCD_Init:
  1173                           	callstack 123
  1174  00290E                     
  1175                           ;maincode3.c: 28:     _delay((unsigned long)((29)*(4000000UL/4000.0)));
  1176  00290E  0E26               	movlw	38
  1177  002910  6E08               	movwf	??_LCD_Init^(0+1280),c
  1178  002912  0EA8               	movlw	168
  1179  002914                     u427:
  1180  002914  2EE8               	decfsz	wreg,f,c
  1181  002916  D7FE               	bra	u427
  1182  002918  2E08               	decfsz	??_LCD_Init^(0+1280),f,c
  1183  00291A  D7FC               	bra	u427
  1184  00291C  D000               	nop2	
  1185  00291E                     
  1186                           ;maincode3.c: 29:     LCD_CONFIG();
  1187  00291E  ECB5  F013         	call	_LCD_CONFIG	;wreg free
  1188  002922                     
  1189                           ;maincode3.c: 30:     BORRAR_LCD();
  1190  002922  EC49  F015         	call	_BORRAR_LCD	;wreg free
  1191  002926                     
  1192                           ;maincode3.c: 31:     CURSOR_HOME();
  1193  002926  EC45  F015         	call	_CURSOR_HOME	;wreg free
  1194  00292A                     
  1195                           ;maincode3.c: 32:     CURSOR_ONOFF(1);
  1196  00292A  0E01               	movlw	1
  1197  00292C  EC07  F015         	call	_CURSOR_ONOFF
  1198  002930                     
  1199                           ;maincode3.c: 33:     LATCbits.LATC2 = 1;
  1200  002930  84C0               	bsf	192,2,c	;volatile
  1201  002932                     
  1202                           ;maincode3.c: 34:     GENERACARACTER(e_acentuado, 0);
  1203  002932  0E10               	movlw	low _e_acentuado
  1204  002934  6E04               	movwf	GENERACARACTER@vector^(0+1280),c
  1205  002936  0E05               	movlw	high _e_acentuado
  1206  002938  6E05               	movwf	(GENERACARACTER@vector+1)^(0+1280),c
  1207  00293A  0E00               	movlw	0
  1208  00293C  6E06               	movwf	GENERACARACTER@pos^(0+1280),c
  1209  00293E  EC2F  F014         	call	_GENERACARACTER	;wreg free
  1210  002942  0012               	return		;funcret
  1211  002944                     __end_of_LCD_Init:
  1212                           	callstack 0
  1213                           
  1214 ;; *************** function _LCD_CONFIG *****************
  1215 ;; Defined at:
  1216 ;;		line 72 in file "LCD.c"
  1217 ;; Parameters:    Size  Location     Type
  1218 ;;		None
  1219 ;; Auto vars:     Size  Location     Type
  1220 ;;		None
  1221 ;; Return value:  Size  Location     Type
  1222 ;;                  1    wreg      void 
  1223 ;; Registers used:
  1224 ;;		wreg, status,2, status,0, cstack
  1225 ;; Tracked objects:
  1226 ;;		On entry : 0/0
  1227 ;;		On exit  : 0/0
  1228 ;;		Unchanged: 0/0
  1229 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1230 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1231 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1232 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1233 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1234 ;;Total ram usage:        1 bytes
  1235 ;; Hardware stack levels used: 1
  1236 ;; Hardware stack levels required when called: 2
  1237 ;; This function calls:
  1238 ;;		_ENVIA_LCD_CMD
  1239 ;;		_ENVIA_NIBBLE
  1240 ;; This function is called by:
  1241 ;;		_LCD_Init
  1242 ;; This function uses a non-reentrant model
  1243 ;;
  1244                           
  1245                           	psect	text10
  1246  00276A                     __ptext10:
  1247                           	callstack 0
  1248  00276A                     _LCD_CONFIG:
  1249                           	callstack 123
  1250  00276A                     
  1251                           ;LCD.c: 74:  LATDbits.LATD0 = 0;
  1252  00276A  90C1               	bcf	193,0,c	;volatile
  1253                           
  1254                           ;LCD.c: 75:  LATDbits.LATD1 = 0;
  1255  00276C  92C1               	bcf	193,1,c	;volatile
  1256  00276E                     
  1257                           ;LCD.c: 76:  ENVIA_NIBBLE(0x30);
  1258  00276E  0E30               	movlw	48
  1259  002770  EC33  F015         	call	_ENVIA_NIBBLE
  1260  002774                     
  1261                           ;LCD.c: 77:         _delay(24000);
  1262  002774  0E20               	movlw	32
  1263  002776  6E04               	movwf	??_LCD_CONFIG^(0+1280),c
  1264  002778  0E2A               	movlw	42
  1265  00277A                     u437:
  1266  00277A  2EE8               	decfsz	wreg,f,c
  1267  00277C  D7FE               	bra	u437
  1268  00277E  2E04               	decfsz	??_LCD_CONFIG^(0+1280),f,c
  1269  002780  D7FC               	bra	u437
  1270  002782                     
  1271                           ;LCD.c: 78:         _delay(24000);
  1272  002782  0E20               	movlw	32
  1273  002784  6E04               	movwf	??_LCD_CONFIG^(0+1280),c
  1274  002786  0E2A               	movlw	42
  1275  002788                     u447:
  1276  002788  2EE8               	decfsz	wreg,f,c
  1277  00278A  D7FE               	bra	u447
  1278  00278C  2E04               	decfsz	??_LCD_CONFIG^(0+1280),f,c
  1279  00278E  D7FC               	bra	u447
  1280                           
  1281                           ;LCD.c: 81:  ENVIA_NIBBLE(0x30);
  1282  002790  0E30               	movlw	48
  1283  002792  EC33  F015         	call	_ENVIA_NIBBLE
  1284  002796                     
  1285                           ;LCD.c: 83:  _delay(1200);
  1286  002796  0EF0               	movlw	240
  1287  002798                     u457:
  1288  002798  D000               	nop2	
  1289  00279A  2EE8               	decfsz	wreg,f,c
  1290  00279C  D7FD               	bra	u457
  1291  00279E                     
  1292                           ;LCD.c: 84:         ENVIA_NIBBLE(0x30);
  1293  00279E  0E30               	movlw	48
  1294  0027A0  EC33  F015         	call	_ENVIA_NIBBLE
  1295  0027A4                     
  1296                           ;LCD.c: 85:  ENVIA_NIBBLE(0x20);
  1297  0027A4  0E20               	movlw	32
  1298  0027A6  EC33  F015         	call	_ENVIA_NIBBLE
  1299  0027AA                     
  1300                           ;LCD.c: 86:  ENVIA_LCD_CMD(0x01);
  1301  0027AA  0E01               	movlw	1
  1302  0027AC  ECBC  F014         	call	_ENVIA_LCD_CMD
  1303  0027B0                     
  1304                           ;LCD.c: 87:  ENVIA_LCD_CMD(0x28);
  1305  0027B0  0E28               	movlw	40
  1306  0027B2  ECBC  F014         	call	_ENVIA_LCD_CMD
  1307  0027B6                     
  1308                           ;LCD.c: 88:  ENVIA_LCD_CMD(0x0F);
  1309  0027B6  0E0F               	movlw	15
  1310  0027B8  ECBC  F014         	call	_ENVIA_LCD_CMD
  1311  0027BC                     
  1312                           ;LCD.c: 89:  ENVIA_LCD_CMD(0x06);
  1313  0027BC  0E06               	movlw	6
  1314  0027BE  ECBC  F014         	call	_ENVIA_LCD_CMD
  1315  0027C2                     
  1316                           ;LCD.c: 90:  ENVIA_LCD_CMD(0x01);
  1317  0027C2  0E01               	movlw	1
  1318  0027C4  ECBC  F014         	call	_ENVIA_LCD_CMD
  1319  0027C8  0012               	return		;funcret
  1320  0027CA                     __end_of_LCD_CONFIG:
  1321                           	callstack 0
  1322                           
  1323 ;; *************** function _GENERACARACTER *****************
  1324 ;; Defined at:
  1325 ;;		line 153 in file "LCD.c"
  1326 ;; Parameters:    Size  Location     Type
  1327 ;;  vector          2    3[COMRAM] PTR const unsigned char 
  1328 ;;		 -> e_acentuado(8), 
  1329 ;;  pos             1    5[COMRAM] unsigned char 
  1330 ;; Auto vars:     Size  Location     Type
  1331 ;;  i               1    6[COMRAM] unsigned char 
  1332 ;; Return value:  Size  Location     Type
  1333 ;;                  1    wreg      void 
  1334 ;; Registers used:
  1335 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1336 ;; Tracked objects:
  1337 ;;		On entry : 0/0
  1338 ;;		On exit  : 0/0
  1339 ;;		Unchanged: 0/0
  1340 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1341 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1342 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1343 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1344 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1345 ;;Total ram usage:        4 bytes
  1346 ;; Hardware stack levels used: 1
  1347 ;; Hardware stack levels required when called: 2
  1348 ;; This function calls:
  1349 ;;		_ENVIA_CHAR
  1350 ;;		_ENVIA_LCD_CMD
  1351 ;; This function is called by:
  1352 ;;		_LCD_Init
  1353 ;; This function uses a non-reentrant model
  1354 ;;
  1355                           
  1356                           	psect	text11
  1357  00285E                     __ptext11:
  1358                           	callstack 0
  1359  00285E                     _GENERACARACTER:
  1360                           	callstack 123
  1361  00285E                     
  1362                           ;LCD.c: 153: void GENERACARACTER(const unsigned char *vector,unsigned char pos);LCD.c: 1
      +                          54: {;LCD.c: 155:  unsigned char i;;LCD.c: 156:  ENVIA_LCD_CMD(0x40+8*pos);
  1363  00285E  5006               	movf	GENERACARACTER@pos^(0+1280),w,c
  1364  002860  0D08               	mullw	8
  1365  002862  50F3               	movf	243,w,c
  1366  002864  0F40               	addlw	64
  1367  002866  ECBC  F014         	call	_ENVIA_LCD_CMD
  1368  00286A                     
  1369                           ;LCD.c: 157:  for(i=0;i<8;i++)
  1370  00286A  0E00               	movlw	0
  1371  00286C  6E07               	movwf	GENERACARACTER@i^(0+1280),c
  1372  00286E                     l1171:
  1373                           
  1374                           ;LCD.c: 158:  {;LCD.c: 159:   ENVIA_CHAR(vector[i]);
  1375  00286E  5007               	movf	GENERACARACTER@i^(0+1280),w,c
  1376  002870  2404               	addwf	GENERACARACTER@vector^(0+1280),w,c
  1377  002872  6ED9               	movwf	fsr2l,c
  1378  002874  0E00               	movlw	0
  1379  002876  2005               	addwfc	(GENERACARACTER@vector+1)^(0+1280),w,c
  1380  002878  6EDA               	movwf	fsr2h,c
  1381  00287A  50DF               	movf	indf2,w,c
  1382  00287C  ECA2  F014         	call	_ENVIA_CHAR
  1383  002880                     
  1384                           ;LCD.c: 160:  }
  1385  002880  2A07               	incf	GENERACARACTER@i^(0+1280),f,c
  1386  002882  0E07               	movlw	7
  1387  002884  6407               	cpfsgt	GENERACARACTER@i^(0+1280),c
  1388  002886  EF47  F014         	goto	u281
  1389  00288A  EF49  F014         	goto	u280
  1390  00288E                     u281:
  1391  00288E  EF37  F014         	goto	l1171
  1392  002892                     u280:
  1393  002892                     
  1394                           ;LCD.c: 161:  ENVIA_LCD_CMD(0x80);
  1395  002892  0E80               	movlw	128
  1396  002894  ECBC  F014         	call	_ENVIA_LCD_CMD
  1397  002898  0012               	return		;funcret
  1398  00289A                     __end_of_GENERACARACTER:
  1399                           	callstack 0
  1400                           
  1401 ;; *************** function _ENVIA_CHAR *****************
  1402 ;; Defined at:
  1403 ;;		line 50 in file "LCD.c"
  1404 ;; Parameters:    Size  Location     Type
  1405 ;;  dato            1    wreg     unsigned char 
  1406 ;; Auto vars:     Size  Location     Type
  1407 ;;  dato            1    1[COMRAM] unsigned char 
  1408 ;;  aux             1    2[COMRAM] unsigned char 
  1409 ;; Return value:  Size  Location     Type
  1410 ;;                  1    wreg      void 
  1411 ;; Registers used:
  1412 ;;		wreg, status,2, status,0, cstack
  1413 ;; Tracked objects:
  1414 ;;		On entry : 0/0
  1415 ;;		On exit  : 0/0
  1416 ;;		Unchanged: 0/0
  1417 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1418 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1419 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1420 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1421 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1422 ;;Total ram usage:        2 bytes
  1423 ;; Hardware stack levels used: 1
  1424 ;; Hardware stack levels required when called: 1
  1425 ;; This function calls:
  1426 ;;		_ENVIA_NIBBLE
  1427 ;;		_LEER_LCD
  1428 ;; This function is called by:
  1429 ;;		_ESCRIBE_MENSAJE
  1430 ;;		_GENERACARACTER
  1431 ;;		_splash_screen
  1432 ;;		_main
  1433 ;; This function uses a non-reentrant model
  1434 ;;
  1435                           
  1436                           	psect	text12
  1437  002944                     __ptext12:
  1438                           	callstack 0
  1439  002944                     _ENVIA_CHAR:
  1440                           	callstack 123
  1441                           
  1442                           ;incstack = 0
  1443                           ;ENVIA_CHAR@dato stored from wreg
  1444  002944  6E02               	movwf	ENVIA_CHAR@dato^(0+1280),c
  1445  002946                     
  1446                           ;LCD.c: 50: void ENVIA_CHAR(unsigned char dato);LCD.c: 51: {;LCD.c: 52:  unsigned char a
      +                          ux;;LCD.c: 53:  LATDbits.LATD0 = 1;
  1447  002946  80C1               	bsf	193,0,c	;volatile
  1448  002948                     
  1449                           ;LCD.c: 54:  LEER_LCD();
  1450  002948  EC47  F013         	call	_LEER_LCD	;wreg free
  1451  00294C                     
  1452                           ;LCD.c: 55:  TRISD = 0x00;
  1453  00294C  0E00               	movlw	0
  1454  00294E  6EC9               	movwf	201,c	;volatile
  1455  002950                     
  1456                           ;LCD.c: 56:         _delay(1200);
  1457  002950  0EF0               	movlw	240
  1458  002952                     u467:
  1459  002952  D000               	nop2	
  1460  002954  2EE8               	decfsz	wreg,f,c
  1461  002956  D7FD               	bra	u467
  1462  002958                     
  1463                           ;LCD.c: 58:  LATDbits.LATD1 = 0;
  1464  002958  92C1               	bcf	193,1,c	;volatile
  1465  00295A                     
  1466                           ;LCD.c: 59:  LATDbits.LATD2 = 0;
  1467  00295A  94C1               	bcf	193,2,c	;volatile
  1468  00295C                     
  1469                           ;LCD.c: 60:  LATDbits.LATD0 = 1;
  1470  00295C  80C1               	bsf	193,0,c	;volatile
  1471  00295E                     
  1472                           ;LCD.c: 61:  aux = dato & 0xF0;
  1473  00295E  5002               	movf	ENVIA_CHAR@dato^(0+1280),w,c
  1474  002960  0BF0               	andlw	240
  1475  002962  6E03               	movwf	ENVIA_CHAR@aux^(0+1280),c
  1476  002964                     
  1477                           ;LCD.c: 62:  ENVIA_NIBBLE(aux);
  1478  002964  5003               	movf	ENVIA_CHAR@aux^(0+1280),w,c
  1479  002966  EC33  F015         	call	_ENVIA_NIBBLE
  1480  00296A                     
  1481                           ;LCD.c: 63:  aux = dato << 4;
  1482  00296A  3802               	swapf	ENVIA_CHAR@dato^(0+1280),w,c
  1483  00296C  0BF0               	andlw	240
  1484  00296E  6E03               	movwf	ENVIA_CHAR@aux^(0+1280),c
  1485  002970                     
  1486                           ;LCD.c: 64:  ENVIA_NIBBLE(aux);
  1487  002970  5003               	movf	ENVIA_CHAR@aux^(0+1280),w,c
  1488  002972  EC33  F015         	call	_ENVIA_NIBBLE
  1489  002976  0012               	return		;funcret
  1490  002978                     __end_of_ENVIA_CHAR:
  1491                           	callstack 0
  1492                           
  1493 ;; *************** function _CURSOR_ONOFF *****************
  1494 ;; Defined at:
  1495 ;;		line 35 in file "LCD.c"
  1496 ;; Parameters:    Size  Location     Type
  1497 ;;  estado          1    wreg     unsigned char 
  1498 ;; Auto vars:     Size  Location     Type
  1499 ;;  estado          1    3[COMRAM] unsigned char 
  1500 ;; Return value:  Size  Location     Type
  1501 ;;                  1    wreg      void 
  1502 ;; Registers used:
  1503 ;;		wreg, status,2, status,0, cstack
  1504 ;; Tracked objects:
  1505 ;;		On entry : 0/0
  1506 ;;		On exit  : 0/0
  1507 ;;		Unchanged: 0/0
  1508 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1509 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1510 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1511 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1512 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1513 ;;Total ram usage:        1 bytes
  1514 ;; Hardware stack levels used: 1
  1515 ;; Hardware stack levels required when called: 2
  1516 ;; This function calls:
  1517 ;;		_ENVIA_LCD_CMD
  1518 ;; This function is called by:
  1519 ;;		_LCD_Init
  1520 ;; This function uses a non-reentrant model
  1521 ;;
  1522                           
  1523                           	psect	text13
  1524  002A0E                     __ptext13:
  1525                           	callstack 0
  1526  002A0E                     _CURSOR_ONOFF:
  1527                           	callstack 123
  1528                           
  1529                           ;incstack = 0
  1530                           ;CURSOR_ONOFF@estado stored from wreg
  1531  002A0E  6E04               	movwf	CURSOR_ONOFF@estado^(0+1280),c
  1532  002A10                     
  1533                           ;LCD.c: 35: void CURSOR_ONOFF(unsigned char estado);LCD.c: 36: {;LCD.c: 37:  if(estado =
      +                          = 0) ENVIA_LCD_CMD(0x0E);
  1534  002A10  5004               	movf	CURSOR_ONOFF@estado^(0+1280),w,c
  1535  002A12  A4D8               	btfss	status,2,c
  1536  002A14  EF0E  F015         	goto	u41
  1537  002A18  EF10  F015         	goto	u40
  1538  002A1C                     u41:
  1539  002A1C  EF13  F015         	goto	l933
  1540  002A20                     u40:
  1541  002A20  0E0E               	movlw	14
  1542  002A22  ECBC  F014         	call	_ENVIA_LCD_CMD
  1543  002A26                     l933:
  1544                           
  1545                           ;LCD.c: 38:  if(estado == 1) ENVIA_LCD_CMD(0x0C);
  1546  002A26  0404               	decf	CURSOR_ONOFF@estado^(0+1280),w,c
  1547  002A28  A4D8               	btfss	status,2,c
  1548  002A2A  EF19  F015         	goto	u51
  1549  002A2E  EF1B  F015         	goto	u50
  1550  002A32                     u51:
  1551  002A32  EF1E  F015         	goto	l42
  1552  002A36                     u50:
  1553  002A36  0E0C               	movlw	12
  1554  002A38  ECBC  F014         	call	_ENVIA_LCD_CMD
  1555  002A3C                     l42:
  1556  002A3C  0012               	return		;funcret
  1557  002A3E                     __end_of_CURSOR_ONOFF:
  1558                           	callstack 0
  1559                           
  1560 ;; *************** function _CURSOR_HOME *****************
  1561 ;; Defined at:
  1562 ;;		line 30 in file "LCD.c"
  1563 ;; Parameters:    Size  Location     Type
  1564 ;;		None
  1565 ;; Auto vars:     Size  Location     Type
  1566 ;;		None
  1567 ;; Return value:  Size  Location     Type
  1568 ;;                  1    wreg      void 
  1569 ;; Registers used:
  1570 ;;		wreg, status,2, status,0, cstack
  1571 ;; Tracked objects:
  1572 ;;		On entry : 0/0
  1573 ;;		On exit  : 0/0
  1574 ;;		Unchanged: 0/0
  1575 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1576 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1577 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1578 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1579 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1580 ;;Total ram usage:        0 bytes
  1581 ;; Hardware stack levels used: 1
  1582 ;; Hardware stack levels required when called: 2
  1583 ;; This function calls:
  1584 ;;		_ENVIA_LCD_CMD
  1585 ;; This function is called by:
  1586 ;;		_LCD_Init
  1587 ;; This function uses a non-reentrant model
  1588 ;;
  1589                           
  1590                           	psect	text14
  1591  002A8A                     __ptext14:
  1592                           	callstack 0
  1593  002A8A                     _CURSOR_HOME:
  1594                           	callstack 123
  1595  002A8A                     
  1596                           ;LCD.c: 32:  ENVIA_LCD_CMD(0x02);
  1597  002A8A  0E02               	movlw	2
  1598  002A8C  ECBC  F014         	call	_ENVIA_LCD_CMD
  1599  002A90  0012               	return		;funcret
  1600  002A92                     __end_of_CURSOR_HOME:
  1601                           	callstack 0
  1602                           
  1603 ;; *************** function _BORRAR_LCD *****************
  1604 ;; Defined at:
  1605 ;;		line 67 in file "LCD.c"
  1606 ;; Parameters:    Size  Location     Type
  1607 ;;		None
  1608 ;; Auto vars:     Size  Location     Type
  1609 ;;		None
  1610 ;; Return value:  Size  Location     Type
  1611 ;;                  1    wreg      void 
  1612 ;; Registers used:
  1613 ;;		wreg, status,2, status,0, cstack
  1614 ;; Tracked objects:
  1615 ;;		On entry : 0/0
  1616 ;;		On exit  : 0/0
  1617 ;;		Unchanged: 0/0
  1618 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1619 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1620 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1621 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1622 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1623 ;;Total ram usage:        0 bytes
  1624 ;; Hardware stack levels used: 1
  1625 ;; Hardware stack levels required when called: 2
  1626 ;; This function calls:
  1627 ;;		_ENVIA_LCD_CMD
  1628 ;; This function is called by:
  1629 ;;		_LCD_Init
  1630 ;; This function uses a non-reentrant model
  1631 ;;
  1632                           
  1633                           	psect	text15
  1634  002A92                     __ptext15:
  1635                           	callstack 0
  1636  002A92                     _BORRAR_LCD:
  1637                           	callstack 123
  1638  002A92                     
  1639                           ;LCD.c: 69:  ENVIA_LCD_CMD(0x01);
  1640  002A92  0E01               	movlw	1
  1641  002A94  ECBC  F014         	call	_ENVIA_LCD_CMD
  1642  002A98  0012               	return		;funcret
  1643  002A9A                     __end_of_BORRAR_LCD:
  1644                           	callstack 0
  1645                           
  1646 ;; *************** function _ENVIA_LCD_CMD *****************
  1647 ;; Defined at:
  1648 ;;		line 104 in file "LCD.c"
  1649 ;; Parameters:    Size  Location     Type
  1650 ;;  dato            1    wreg     unsigned char 
  1651 ;; Auto vars:     Size  Location     Type
  1652 ;;  dato            1    1[COMRAM] unsigned char 
  1653 ;;  aux             1    2[COMRAM] unsigned char 
  1654 ;; Return value:  Size  Location     Type
  1655 ;;                  1    wreg      void 
  1656 ;; Registers used:
  1657 ;;		wreg, status,2, status,0, cstack
  1658 ;; Tracked objects:
  1659 ;;		On entry : 0/0
  1660 ;;		On exit  : 0/0
  1661 ;;		Unchanged: 0/0
  1662 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1663 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1664 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1665 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1666 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1667 ;;Total ram usage:        2 bytes
  1668 ;; Hardware stack levels used: 1
  1669 ;; Hardware stack levels required when called: 1
  1670 ;; This function calls:
  1671 ;;		_ENVIA_NIBBLE
  1672 ;;		_LEER_LCD
  1673 ;; This function is called by:
  1674 ;;		_POS_CURSOR
  1675 ;;		_CURSOR_HOME
  1676 ;;		_CURSOR_ONOFF
  1677 ;;		_BORRAR_LCD
  1678 ;;		_LCD_CONFIG
  1679 ;;		_GENERACARACTER
  1680 ;;		_BLINK_CURSOR
  1681 ;;		_DISPLAY_ONOFF
  1682 ;; This function uses a non-reentrant model
  1683 ;;
  1684                           
  1685                           	psect	text16
  1686  002978                     __ptext16:
  1687                           	callstack 0
  1688  002978                     _ENVIA_LCD_CMD:
  1689                           	callstack 123
  1690                           
  1691                           ;incstack = 0
  1692                           ;ENVIA_LCD_CMD@dato stored from wreg
  1693  002978  6E02               	movwf	ENVIA_LCD_CMD@dato^(0+1280),c
  1694  00297A                     
  1695                           ;LCD.c: 104: void ENVIA_LCD_CMD(unsigned char dato);LCD.c: 105: {;LCD.c: 106:  unsigned 
      +                          char aux;;LCD.c: 107:  LATDbits.LATD0 = 0;
  1696  00297A  90C1               	bcf	193,0,c	;volatile
  1697  00297C                     
  1698                           ;LCD.c: 108:  LEER_LCD();
  1699  00297C  EC47  F013         	call	_LEER_LCD	;wreg free
  1700  002980                     
  1701                           ;LCD.c: 109:  TRISD = 0b00000000;
  1702  002980  0E00               	movlw	0
  1703  002982  6EC9               	movwf	201,c	;volatile
  1704  002984                     
  1705                           ;LCD.c: 111:         _delay(1200);
  1706  002984  0EF0               	movlw	240
  1707  002986                     u477:
  1708  002986  D000               	nop2	
  1709  002988  2EE8               	decfsz	wreg,f,c
  1710  00298A  D7FD               	bra	u477
  1711  00298C                     
  1712                           ;LCD.c: 112:         LATDbits.LATD1 = 0;
  1713  00298C  92C1               	bcf	193,1,c	;volatile
  1714  00298E                     
  1715                           ;LCD.c: 113:  LATDbits.LATD2 = 0;
  1716  00298E  94C1               	bcf	193,2,c	;volatile
  1717  002990                     
  1718                           ;LCD.c: 114:  LATDbits.LATD0 = 0;
  1719  002990  90C1               	bcf	193,0,c	;volatile
  1720  002992                     
  1721                           ;LCD.c: 115:  aux = dato & 0xF0;
  1722  002992  5002               	movf	ENVIA_LCD_CMD@dato^(0+1280),w,c
  1723  002994  0BF0               	andlw	240
  1724  002996  6E03               	movwf	ENVIA_LCD_CMD@aux^(0+1280),c
  1725  002998                     
  1726                           ;LCD.c: 116:  ENVIA_NIBBLE(aux);
  1727  002998  5003               	movf	ENVIA_LCD_CMD@aux^(0+1280),w,c
  1728  00299A  EC33  F015         	call	_ENVIA_NIBBLE
  1729  00299E                     
  1730                           ;LCD.c: 117:  aux = dato<<4;
  1731  00299E  3802               	swapf	ENVIA_LCD_CMD@dato^(0+1280),w,c
  1732  0029A0  0BF0               	andlw	240
  1733  0029A2  6E03               	movwf	ENVIA_LCD_CMD@aux^(0+1280),c
  1734  0029A4                     
  1735                           ;LCD.c: 118:  ENVIA_NIBBLE(aux);
  1736  0029A4  5003               	movf	ENVIA_LCD_CMD@aux^(0+1280),w,c
  1737  0029A6  EC33  F015         	call	_ENVIA_NIBBLE
  1738  0029AA  0012               	return		;funcret
  1739  0029AC                     __end_of_ENVIA_LCD_CMD:
  1740                           	callstack 0
  1741                           
  1742 ;; *************** function _LEER_LCD *****************
  1743 ;; Defined at:
  1744 ;;		line 121 in file "LCD.c"
  1745 ;; Parameters:    Size  Location     Type
  1746 ;;		None
  1747 ;; Auto vars:     Size  Location     Type
  1748 ;;  aux             1    0[COMRAM] unsigned char 
  1749 ;; Return value:  Size  Location     Type
  1750 ;;                  1    wreg      void 
  1751 ;; Registers used:
  1752 ;;		wreg, status,2, status,0
  1753 ;; Tracked objects:
  1754 ;;		On entry : 0/0
  1755 ;;		On exit  : 0/0
  1756 ;;		Unchanged: 0/0
  1757 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1758 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1759 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1760 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1761 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1762 ;;Total ram usage:        1 bytes
  1763 ;; Hardware stack levels used: 1
  1764 ;; This function calls:
  1765 ;;		Nothing
  1766 ;; This function is called by:
  1767 ;;		_ENVIA_CHAR
  1768 ;;		_ENVIA_LCD_CMD
  1769 ;; This function uses a non-reentrant model
  1770 ;;
  1771                           
  1772                           	psect	text17
  1773  00268E                     __ptext17:
  1774                           	callstack 0
  1775  00268E                     _LEER_LCD:
  1776                           	callstack 123
  1777  00268E                     
  1778                           ;LCD.c: 123:  unsigned char aux;;LCD.c: 124:  TRISD = 0xF8;
  1779  00268E  0EF8               	movlw	248
  1780  002690  6EC9               	movwf	201,c	;volatile
  1781  002692                     
  1782                           ;LCD.c: 125:  LATDbits.LATD0 = 0;
  1783  002692  90C1               	bcf	193,0,c	;volatile
  1784  002694                     
  1785                           ;LCD.c: 126:  LATDbits.LATD1 = 1;
  1786  002694  82C1               	bsf	193,1,c	;volatile
  1787  002696                     
  1788                           ;LCD.c: 127:  LATDbits.LATD2 = 1;
  1789  002696  84C1               	bsf	193,2,c	;volatile
  1790  002698                     
  1791                           ;LCD.c: 128:         _delay(1200);
  1792  002698  0EF0               	movlw	240
  1793  00269A                     u487:
  1794  00269A  D000               	nop2	
  1795  00269C  2EE8               	decfsz	wreg,f,c
  1796  00269E  D7FD               	bra	u487
  1797  0026A0                     
  1798                           ;LCD.c: 130:  aux = PORTD;
  1799  0026A0  0061 F344  F501    	movff	1233,LEER_LCD@aux	;volatile
  1800  0026A6                     
  1801                           ;LCD.c: 131:  LATDbits.LATD2 = 0;
  1802  0026A6  94C1               	bcf	193,2,c	;volatile
  1803  0026A8                     
  1804                           ;LCD.c: 132:         _delay(1200);
  1805  0026A8  0EF0               	movlw	240
  1806  0026AA                     u497:
  1807  0026AA  D000               	nop2	
  1808  0026AC  2EE8               	decfsz	wreg,f,c
  1809  0026AE  D7FD               	bra	u497
  1810  0026B0                     
  1811                           ;LCD.c: 134:  LATDbits.LATD2 = 1;
  1812  0026B0  84C1               	bsf	193,2,c	;volatile
  1813  0026B2                     
  1814                           ;LCD.c: 135:         _delay(1200);
  1815  0026B2  0EF0               	movlw	240
  1816  0026B4                     u507:
  1817  0026B4  D000               	nop2	
  1818  0026B6  2EE8               	decfsz	wreg,f,c
  1819  0026B8  D7FD               	bra	u507
  1820  0026BA                     
  1821                           ;LCD.c: 137:  LATDbits.LATD2 = 0;
  1822  0026BA  94C1               	bcf	193,2,c	;volatile
  1823  0026BC                     l851:
  1824                           
  1825                           ;LCD.c: 138:  aux = aux & 0x80;
  1826  0026BC  5001               	movf	LEER_LCD@aux^(0+1280),w,c
  1827  0026BE  0B80               	andlw	128
  1828  0026C0  6E01               	movwf	LEER_LCD@aux^(0+1280),c
  1829                           
  1830                           ;LCD.c: 139:  while(aux == 0x80)
  1831  0026C2  EF78  F013         	goto	l865
  1832  0026C6                     l67:
  1833                           
  1834                           ;LCD.c: 140:         {;LCD.c: 141:             LATDbits.LATD2 = 1;
  1835  0026C6  84C1               	bsf	193,2,c	;volatile
  1836  0026C8                     
  1837                           ;LCD.c: 142:             _delay(1200);
  1838  0026C8  0EF0               	movlw	240
  1839  0026CA                     u517:
  1840  0026CA  D000               	nop2	
  1841  0026CC  2EE8               	decfsz	wreg,f,c
  1842  0026CE  D7FD               	bra	u517
  1843  0026D0                     
  1844                           ;LCD.c: 143:             aux = PORTD;
  1845  0026D0  0061 F344  F501    	movff	1233,LEER_LCD@aux	;volatile
  1846  0026D6                     
  1847                           ;LCD.c: 144:             LATDbits.LATD2 = 0;
  1848  0026D6  94C1               	bcf	193,2,c	;volatile
  1849                           
  1850                           ;LCD.c: 145:             _delay(1200);
  1851  0026D8  0EF0               	movlw	240
  1852  0026DA                     u527:
  1853  0026DA  D000               	nop2	
  1854  0026DC  2EE8               	decfsz	wreg,f,c
  1855  0026DE  D7FD               	bra	u527
  1856  0026E0                     
  1857                           ;LCD.c: 146:             LATDbits.LATD2 = 1;
  1858  0026E0  84C1               	bsf	193,2,c	;volatile
  1859                           
  1860                           ;LCD.c: 147:             _delay(1200);
  1861  0026E2  0EF0               	movlw	240
  1862  0026E4                     u537:
  1863  0026E4  D000               	nop2	
  1864  0026E6  2EE8               	decfsz	wreg,f,c
  1865  0026E8  D7FD               	bra	u537
  1866  0026EA                     
  1867                           ;LCD.c: 148:             LATDbits.LATD2 = 0;
  1868  0026EA  94C1               	bcf	193,2,c	;volatile
  1869  0026EC  EF5E  F013         	goto	l851
  1870  0026F0                     l865:
  1871                           
  1872                           ;LCD.c: 139:  while(aux == 0x80)
  1873  0026F0  0E80               	movlw	128
  1874  0026F2  1801               	xorwf	LEER_LCD@aux^(0+1280),w,c
  1875  0026F4  B4D8               	btfsc	status,2,c
  1876  0026F6  EF7F  F013         	goto	u11
  1877  0026FA  EF81  F013         	goto	u10
  1878  0026FE                     u11:
  1879  0026FE  EF63  F013         	goto	l67
  1880  002702                     u10:
  1881  002702  0012               	return		;funcret
  1882  002704                     __end_of_LEER_LCD:
  1883                           	callstack 0
  1884                           
  1885 ;; *************** function _ENVIA_NIBBLE *****************
  1886 ;; Defined at:
  1887 ;;		line 93 in file "LCD.c"
  1888 ;; Parameters:    Size  Location     Type
  1889 ;;  dato            1    wreg     unsigned char 
  1890 ;; Auto vars:     Size  Location     Type
  1891 ;;  dato            1    0[COMRAM] unsigned char 
  1892 ;; Return value:  Size  Location     Type
  1893 ;;                  1    wreg      void 
  1894 ;; Registers used:
  1895 ;;		wreg, status,2, status,0
  1896 ;; Tracked objects:
  1897 ;;		On entry : 0/0
  1898 ;;		On exit  : 0/0
  1899 ;;		Unchanged: 0/0
  1900 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1901 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1902 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1903 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1904 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1905 ;;Total ram usage:        1 bytes
  1906 ;; Hardware stack levels used: 1
  1907 ;; This function calls:
  1908 ;;		Nothing
  1909 ;; This function is called by:
  1910 ;;		_ENVIA_CHAR
  1911 ;;		_LCD_CONFIG
  1912 ;;		_ENVIA_LCD_CMD
  1913 ;; This function uses a non-reentrant model
  1914 ;;
  1915                           
  1916                           	psect	text18
  1917  002A66                     __ptext18:
  1918                           	callstack 0
  1919  002A66                     _ENVIA_NIBBLE:
  1920                           	callstack 123
  1921                           
  1922                           ;incstack = 0
  1923                           ;ENVIA_NIBBLE@dato stored from wreg
  1924  002A66  6E01               	movwf	ENVIA_NIBBLE@dato^(0+1280),c
  1925  002A68                     
  1926                           ;LCD.c: 93: void ENVIA_NIBBLE(unsigned char dato);LCD.c: 94: {;LCD.c: 95:  LATD &= 0x0F;
  1927  002A68  0E0F               	movlw	15
  1928  002A6A  16C1               	andwf	193,f,c	;volatile
  1929                           
  1930                           ;LCD.c: 96:  dato &= 0xF0;
  1931  002A6C  0EF0               	movlw	240
  1932  002A6E  1601               	andwf	ENVIA_NIBBLE@dato^(0+1280),f,c
  1933                           
  1934                           ;LCD.c: 97:  LATD|= dato;
  1935  002A70  5001               	movf	ENVIA_NIBBLE@dato^(0+1280),w,c	;volatile
  1936  002A72  12C1               	iorwf	193,f,c	;volatile
  1937  002A74                     
  1938                           ;LCD.c: 98:  LATDbits.LATD2 = 1;
  1939  002A74  84C1               	bsf	193,2,c	;volatile
  1940  002A76                     
  1941                           ;LCD.c: 100:         _delay(1200);
  1942  002A76  0EF0               	movlw	240
  1943  002A78                     u547:
  1944  002A78  D000               	nop2	
  1945  002A7A  2EE8               	decfsz	wreg,f,c
  1946  002A7C  D7FD               	bra	u547
  1947  002A7E                     
  1948                           ;LCD.c: 101:  LATDbits.LATD2 = 0;
  1949  002A7E  94C1               	bcf	193,2,c	;volatile
  1950  002A80  0012               	return		;funcret
  1951  002A82                     __end_of_ENVIA_NIBBLE:
  1952                           	callstack 0
  1953                           
  1954                           	psect	rparam
  1955  0000                     
  1956                           	psect	idloc
  1957                           
  1958                           ;Config register IDLOC0 @ 0x200000
  1959                           ;	unspecified, using default values
  1960  200000                     	org	2097152
  1961  200000  0FFF               	dw	4095
  1962                           
  1963                           ;Config register IDLOC1 @ 0x200002
  1964                           ;	unspecified, using default values
  1965  200002                     	org	2097154
  1966  200002  0FFF               	dw	4095
  1967                           
  1968                           ;Config register IDLOC2 @ 0x200004
  1969                           ;	unspecified, using default values
  1970  200004                     	org	2097156
  1971  200004  0FFF               	dw	4095
  1972                           
  1973                           ;Config register IDLOC3 @ 0x200006
  1974                           ;	unspecified, using default values
  1975  200006                     	org	2097158
  1976  200006  0FFF               	dw	4095
  1977                           
  1978                           ;Config register IDLOC4 @ 0x200008
  1979                           ;	unspecified, using default values
  1980  200008                     	org	2097160
  1981  200008  0FFF               	dw	4095
  1982                           
  1983                           ;Config register IDLOC5 @ 0x20000A
  1984                           ;	unspecified, using default values
  1985  20000A                     	org	2097162
  1986  20000A  0FFF               	dw	4095
  1987                           
  1988                           ;Config register IDLOC6 @ 0x20000C
  1989                           ;	unspecified, using default values
  1990  20000C                     	org	2097164
  1991  20000C  0FFF               	dw	4095
  1992                           
  1993                           ;Config register IDLOC7 @ 0x20000E
  1994                           ;	unspecified, using default values
  1995  20000E                     	org	2097166
  1996  20000E  0FFF               	dw	4095
  1997                           
  1998                           ;Config register IDLOC8 @ 0x200010
  1999                           ;	unspecified, using default values
  2000  200010                     	org	2097168
  2001  200010  0FFF               	dw	4095
  2002                           
  2003                           ;Config register IDLOC9 @ 0x200012
  2004                           ;	unspecified, using default values
  2005  200012                     	org	2097170
  2006  200012  0FFF               	dw	4095
  2007                           
  2008                           ;Config register IDLOC10 @ 0x200014
  2009                           ;	unspecified, using default values
  2010  200014                     	org	2097172
  2011  200014  0FFF               	dw	4095
  2012                           
  2013                           ;Config register IDLOC11 @ 0x200016
  2014                           ;	unspecified, using default values
  2015  200016                     	org	2097174
  2016  200016  0FFF               	dw	4095
  2017                           
  2018                           ;Config register IDLOC12 @ 0x200018
  2019                           ;	unspecified, using default values
  2020  200018                     	org	2097176
  2021  200018  0FFF               	dw	4095
  2022                           
  2023                           ;Config register IDLOC13 @ 0x20001A
  2024                           ;	unspecified, using default values
  2025  20001A                     	org	2097178
  2026  20001A  0FFF               	dw	4095
  2027                           
  2028                           ;Config register IDLOC14 @ 0x20001C
  2029                           ;	unspecified, using default values
  2030  20001C                     	org	2097180
  2031  20001C  0FFF               	dw	4095
  2032                           
  2033                           ;Config register IDLOC15 @ 0x20001E
  2034                           ;	unspecified, using default values
  2035  20001E                     	org	2097182
  2036  20001E  0FFF               	dw	4095
  2037                           
  2038                           ;Config register IDLOC16 @ 0x200020
  2039                           ;	unspecified, using default values
  2040  200020                     	org	2097184
  2041  200020  0FFF               	dw	4095
  2042                           
  2043                           ;Config register IDLOC17 @ 0x200022
  2044                           ;	unspecified, using default values
  2045  200022                     	org	2097186
  2046  200022  0FFF               	dw	4095
  2047                           
  2048                           ;Config register IDLOC18 @ 0x200024
  2049                           ;	unspecified, using default values
  2050  200024                     	org	2097188
  2051  200024  0FFF               	dw	4095
  2052                           
  2053                           ;Config register IDLOC19 @ 0x200026
  2054                           ;	unspecified, using default values
  2055  200026                     	org	2097190
  2056  200026  0FFF               	dw	4095
  2057                           
  2058                           ;Config register IDLOC20 @ 0x200028
  2059                           ;	unspecified, using default values
  2060  200028                     	org	2097192
  2061  200028  0FFF               	dw	4095
  2062                           
  2063                           ;Config register IDLOC21 @ 0x20002A
  2064                           ;	unspecified, using default values
  2065  20002A                     	org	2097194
  2066  20002A  0FFF               	dw	4095
  2067                           
  2068                           ;Config register IDLOC22 @ 0x20002C
  2069                           ;	unspecified, using default values
  2070  20002C                     	org	2097196
  2071  20002C  0FFF               	dw	4095
  2072                           
  2073                           ;Config register IDLOC23 @ 0x20002E
  2074                           ;	unspecified, using default values
  2075  20002E                     	org	2097198
  2076  20002E  0FFF               	dw	4095
  2077                           
  2078                           ;Config register IDLOC24 @ 0x200030
  2079                           ;	unspecified, using default values
  2080  200030                     	org	2097200
  2081  200030  0FFF               	dw	4095
  2082                           
  2083                           ;Config register IDLOC25 @ 0x200032
  2084                           ;	unspecified, using default values
  2085  200032                     	org	2097202
  2086  200032  0FFF               	dw	4095
  2087                           
  2088                           ;Config register IDLOC26 @ 0x200034
  2089                           ;	unspecified, using default values
  2090  200034                     	org	2097204
  2091  200034  0FFF               	dw	4095
  2092                           
  2093                           ;Config register IDLOC27 @ 0x200036
  2094                           ;	unspecified, using default values
  2095  200036                     	org	2097206
  2096  200036  0FFF               	dw	4095
  2097                           
  2098                           ;Config register IDLOC28 @ 0x200038
  2099                           ;	unspecified, using default values
  2100  200038                     	org	2097208
  2101  200038  0FFF               	dw	4095
  2102                           
  2103                           ;Config register IDLOC29 @ 0x20003A
  2104                           ;	unspecified, using default values
  2105  20003A                     	org	2097210
  2106  20003A  0FFF               	dw	4095
  2107                           
  2108                           ;Config register IDLOC30 @ 0x20003C
  2109                           ;	unspecified, using default values
  2110  20003C                     	org	2097212
  2111  20003C  0FFF               	dw	4095
  2112                           
  2113                           ;Config register IDLOC31 @ 0x20003E
  2114                           ;	unspecified, using default values
  2115  20003E                     	org	2097214
  2116  20003E  0FFF               	dw	4095
  2117                           
  2118                           	psect	config
  2119                           
  2120                           ;Config register CONFIG1 @ 0x300000
  2121                           ;	External Oscillator Selection
  2122                           ;	FEXTOSC = ECH, EC (external clock) above 8 MHz
  2123                           ;	Reset Oscillator Selection
  2124                           ;	RSTOSC = EXTOSC, EXTOSC operating per FEXTOSC bits (device manufacturing default)
  2125  300000                     	org	3145728
  2126  300000  FF                 	db	255
  2127                           
  2128                           ;Config register CONFIG2 @ 0x300001
  2129                           ;	Clock out Enable bit
  2130                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
  2131                           ;	PRLOCKED One-Way Set Enable bit
  2132                           ;	PR1WAY = ON, PRLOCKED bit can be cleared and set only once
  2133                           ;	Clock Switch Enable bit
  2134                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
  2135                           ;	Fail-Safe Clock Monitor Enable bit
  2136                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
  2137  300001                     	org	3145729
  2138  300001  FF                 	db	255
  2139                           
  2140                           ;Config register CONFIG3 @ 0x300002
  2141                           ;	MCLR Enable bit
  2142                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
  2143                           ;	Power-up timer selection bits
  2144                           ;	PWRTS = PWRT_16, PWRT set at 16ms
  2145                           ;	Multi-vector enable bit
  2146                           ;	MVECEN = OFF, Interrupt contoller does not use vector table to prioritze interrupts
  2147                           ;	IVTLOCK bit One-way set enable bit
  2148                           ;	IVT1WAY = ON, IVTLOCKED bit can be cleared and set only once
  2149                           ;	Low Power BOR Enable bit
  2150                           ;	LPBOREN = OFF, Low-Power BOR disabled
  2151                           ;	Brown-out Reset Enable bits
  2152                           ;	BOREN = OFF, Brown-out Reset disabled
  2153  300002                     	org	3145730
  2154  300002  33                 	db	51
  2155                           
  2156                           ;Config register CONFIG4 @ 0x300003
  2157                           ;	Brown-out Reset Voltage Selection bits
  2158                           ;	BORV = VBOR_1P9, Brown-out Reset Voltage (VBOR) set to 1.9V
  2159                           ;	ZCD Disable bit
  2160                           ;	ZCD = OFF, ZCD module is disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCD
      +                          CON
  2161                           ;	PPSLOCK bit One-Way Set Enable bit
  2162                           ;	PPS1WAY = ON, PPSLOCKED bit can be cleared and set only once; PPS registers remain loc
      +                          ked after one clear/set cycle
  2163                           ;	Stack Full/Underflow Reset Enable bit
  2164                           ;	STVREN = ON, Stack full/underflow will cause Reset
  2165                           ;	Low Voltage Programming Enable bit
  2166                           ;	LVP = OFF, HV on MCLR/VPP must be used for programming
  2167                           ;	Extended Instruction Set Enable bit
  2168                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
  2169  300003                     	org	3145731
  2170  300003  DF                 	db	223
  2171                           
  2172                           ;Config register CONFIG5 @ 0x300004
  2173                           ;	WDT Period selection bits
  2174                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  2175                           ;	WDT operating mode
  2176                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
  2177  300004                     	org	3145732
  2178  300004  9F                 	db	159
  2179                           
  2180                           ;Config register CONFIG6 @ 0x300005
  2181                           ;	WDT Window Select bits
  2182                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
  2183                           ;	WDT input clock selector
  2184                           ;	WDTCCS = SC, Software Control
  2185  300005                     	org	3145733
  2186  300005  FF                 	db	255
  2187                           
  2188                           ;Config register CONFIG7 @ 0x300006
  2189                           ;	Boot Block Size selection bits
  2190                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
  2191                           ;	Boot Block enable bit
  2192                           ;	BBEN = OFF, Boot block disabled
  2193                           ;	Storage Area Flash enable bit
  2194                           ;	SAFEN = OFF, SAF disabled
  2195                           ;	Background Debugger
  2196                           ;	DEBUG = OFF, Background Debugger disabled
  2197  300006                     	org	3145734
  2198  300006  FF                 	db	255
  2199                           
  2200                           ;Config register CONFIG8 @ 0x300007
  2201                           ;	Boot Block Write Protection bit
  2202                           ;	WRTB = OFF, Boot Block not Write protected
  2203                           ;	Configuration Register Write Protection bit
  2204                           ;	WRTC = OFF, Configuration registers not Write protected
  2205                           ;	Data EEPROM Write Protection bit
  2206                           ;	WRTD = OFF, Data EEPROM not Write protected
  2207                           ;	SAF Write protection bit
  2208                           ;	WRTSAF = OFF, SAF not Write Protected
  2209                           ;	Application Block write protection bit
  2210                           ;	WRTAPP = OFF, Application Block not write protected
  2211  300007                     	org	3145735
  2212  300007  FF                 	db	255
  2213                           
  2214                           ; Padding undefined space
  2215  300008                     	org	3145736
  2216  300008  FF                 	db	255
  2217                           
  2218                           ;Config register CONFIG10 @ 0x300009
  2219                           ;	PFM and Data EEPROM Code Protection bit
  2220                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
  2221  300009                     	org	3145737
  2222  300009  FF                 	db	255
  2223                           tosu	equ	0x4FF
  2224                           tosh	equ	0x4FE
  2225                           tosl	equ	0x4FD
  2226                           stkptr	equ	0x4FC
  2227                           pclatu	equ	0x4FB
  2228                           pclath	equ	0x4FA
  2229                           pcl	equ	0x4F9
  2230                           tblptru	equ	0x4F8
  2231                           tblptrh	equ	0x4F7
  2232                           tblptrl	equ	0x4F6
  2233                           tablat	equ	0x4F5
  2234                           prodh	equ	0x4F4
  2235                           prodl	equ	0x4F3
  2236                           indf0	equ	0x4EF
  2237                           postinc0	equ	0x4EE
  2238                           postdec0	equ	0x4ED
  2239                           preinc0	equ	0x4EC
  2240                           plusw0	equ	0x4EB
  2241                           fsr0h	equ	0x4EA
  2242                           fsr0l	equ	0x4E9
  2243                           wreg	equ	0x4E8
  2244                           indf1	equ	0x4E7
  2245                           postinc1	equ	0x4E6
  2246                           postdec1	equ	0x4E5
  2247                           preinc1	equ	0x4E4
  2248                           plusw1	equ	0x4E3
  2249                           fsr1h	equ	0x4E2
  2250                           fsr1l	equ	0x4E1
  2251                           bsr	equ	0x4E0
  2252                           indf2	equ	0x4DF
  2253                           postinc2	equ	0x4DE
  2254                           postdec2	equ	0x4DD
  2255                           preinc2	equ	0x4DC
  2256                           plusw2	equ	0x4DB
  2257                           fsr2h	equ	0x4DA
  2258                           fsr2l	equ	0x4D9
  2259                           status	equ	0x4D8

Data Sizes:
    Strings     24
    Constant    0
    Data        8
    BSS         7
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     15      30
    BANK5           160      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0
    BANK32          256      0       0
    BANK33          256      0       0
    BANK34          256      0       0
    BANK35          256      0       0
    BANK36          256      0       0

Pointer List with Targets:

    GENERACARACTER@vector	PTR const unsigned char  size(2) Largest target is 8
		 -> e_acentuado(COMRAM[8]), 

    ESCRIBE_MENSAJE@cadena	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_3(CODE[8]), STR_2(CODE[8]), STR_1(CODE[8]), 


Critical Paths under _main in COMRAM

    _main->_convierte
    _splash_screen->_ESCRIBE_MENSAJE
    _POS_CURSOR->_ENVIA_LCD_CMD
    _ESCRIBE_MENSAJE->_ENVIA_CHAR
    _convierte->___awdiv
    ___awdiv->___awmod
    _LCD_Init->_GENERACARACTER
    _LCD_CONFIG->_ENVIA_LCD_CMD
    _GENERACARACTER->_ENVIA_CHAR
    _GENERACARACTER->_ENVIA_LCD_CMD
    _ENVIA_CHAR->_ENVIA_NIBBLE
    _ENVIA_CHAR->_LEER_LCD
    _CURSOR_ONOFF->_ENVIA_LCD_CMD
    _CURSOR_HOME->_ENVIA_LCD_CMD
    _BORRAR_LCD->_ENVIA_LCD_CMD
    _ENVIA_LCD_CMD->_ENVIA_NIBBLE
    _ENVIA_LCD_CMD->_LEER_LCD

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _main in BANK32

    None.

Critical Paths under _main in BANK33

    None.

Critical Paths under _main in BANK34

    None.

Critical Paths under _main in BANK35

    None.

Critical Paths under _main in BANK36

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    4593
                         _ENVIA_CHAR
                    _ESCRIBE_MENSAJE
                           _LCD_Init
                         _POS_CURSOR
                          _configuro
                          _convierte
                           _parpadeo
                      _splash_screen
 ---------------------------------------------------------------------------------
 (1) _splash_screen                                        0     0      0    1147
                         _ENVIA_CHAR
                    _ESCRIBE_MENSAJE
                         _POS_CURSOR
 ---------------------------------------------------------------------------------
 (2) _POS_CURSOR                                           2     1      1     360
                                              3 COMRAM     2     1      1
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _ESCRIBE_MENSAJE                                      6     3      3     667
                                              3 COMRAM     6     3      3
                         _ENVIA_CHAR
 ---------------------------------------------------------------------------------
 (1) _parpadeo                                             1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _convierte                                            1     1      0    1270
                                             14 COMRAM     1     1      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     600
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     604
                                              6 COMRAM     8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (1) _configuro                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             1     1      0    1029
                                              7 COMRAM     1     1      0
                         _BORRAR_LCD
                        _CURSOR_HOME
                       _CURSOR_ONOFF
                     _GENERACARACTER
                         _LCD_CONFIG
 ---------------------------------------------------------------------------------
 (2) _LCD_CONFIG                                           1     1      0     135
                                              3 COMRAM     1     1      0
                      _ENVIA_LCD_CMD
                       _ENVIA_NIBBLE
 ---------------------------------------------------------------------------------
 (2) _GENERACARACTER                                       4     1      3     504
                                              3 COMRAM     4     1      3
                         _ENVIA_CHAR
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (3) _ENVIA_CHAR                                           2     2      0     120
                                              1 COMRAM     2     2      0
                       _ENVIA_NIBBLE
                           _LEER_LCD
 ---------------------------------------------------------------------------------
 (2) _CURSOR_ONOFF                                         1     1      0     150
                                              3 COMRAM     1     1      0
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _CURSOR_HOME                                          0     0      0     120
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _BORRAR_LCD                                           0     0      0     120
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (3) _ENVIA_LCD_CMD                                        2     2      0     120
                                              1 COMRAM     2     2      0
                       _ENVIA_NIBBLE
                           _LEER_LCD
 ---------------------------------------------------------------------------------
 (4) _LEER_LCD                                             1     1      0      45
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _ENVIA_NIBBLE                                         1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ENVIA_CHAR
     _ENVIA_NIBBLE
     _LEER_LCD
   _ESCRIBE_MENSAJE
     _ENVIA_CHAR
   _LCD_Init
     _BORRAR_LCD
       _ENVIA_LCD_CMD
         _ENVIA_NIBBLE
         _LEER_LCD
     _CURSOR_HOME
       _ENVIA_LCD_CMD
     _CURSOR_ONOFF
       _ENVIA_LCD_CMD
     _GENERACARACTER
       _ENVIA_CHAR
       _ENVIA_LCD_CMD
     _LCD_CONFIG
       _ENVIA_LCD_CMD
       _ENVIA_NIBBLE
   _POS_CURSOR
     _ENVIA_LCD_CMD
   _configuro
   _convierte
     ___awdiv
       ___awmod (ARG)
     ___awmod
   _parpadeo
   _splash_screen
     _ENVIA_CHAR
     _ESCRIBE_MENSAJE
     _POS_CURSOR

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0       0      70        0.0%
EEDATA             400      0       0       0        0.0%
BITBIGSFRlhhhll    34C      0       0      79        0.0%
BITBIGSFR_1        100      0       0      69        0.0%
BITBANK36          100      0       0      67        0.0%
BANK36             100      0       0      68        0.0%
BITBANK35          100      0       0      65        0.0%
BANK35             100      0       0      66        0.0%
BITBANK34          100      0       0      63        0.0%
BANK34             100      0       0      64        0.0%
BITBANK33          100      0       0      61        0.0%
BANK33             100      0       0      62        0.0%
BITBANK32          100      0       0      59        0.0%
BANK32             100      0       0      60        0.0%
BITBANK31          100      0       0      56        0.0%
BANK31             100      0       0      57        0.0%
BITBANK30          100      0       0      54        0.0%
BANK30             100      0       0      55        0.0%
BITBANK29          100      0       0      52        0.0%
BANK29             100      0       0      53        0.0%
BITBANK28          100      0       0      50        0.0%
BANK28             100      0       0      51        0.0%
BITBANK27          100      0       0      48        0.0%
BANK27             100      0       0      49        0.0%
BITBANK26          100      0       0      46        0.0%
BANK26             100      0       0      47        0.0%
BITBANK25          100      0       0      44        0.0%
BANK25             100      0       0      45        0.0%
BITBANK24          100      0       0      42        0.0%
BANK24             100      0       0      43        0.0%
BITBANK23          100      0       0      40        0.0%
BANK23             100      0       0      41        0.0%
BITBANK22          100      0       0      38        0.0%
BANK22             100      0       0      39        0.0%
BITBANK21          100      0       0      36        0.0%
BANK21             100      0       0      37        0.0%
BITBANK20          100      0       0      34        0.0%
BANK20             100      0       0      35        0.0%
BITBANK19          100      0       0      32        0.0%
BANK19             100      0       0      33        0.0%
BITBANK18          100      0       0      30        0.0%
BANK18             100      0       0      31        0.0%
BITBANK17          100      0       0      28        0.0%
BANK17             100      0       0      29        0.0%
BITBANK16          100      0       0      26        0.0%
BANK16             100      0       0      27        0.0%
BITBANK15          100      0       0      24        0.0%
BANK15             100      0       0      25        0.0%
BITBANK14          100      0       0      22        0.0%
BANK14             100      0       0      23        0.0%
BITBANK13          100      0       0      20        0.0%
BANK13             100      0       0      21        0.0%
BITBANK12          100      0       0      18        0.0%
BANK12             100      0       0      19        0.0%
BITBANK11          100      0       0      16        0.0%
BANK11             100      0       0      17        0.0%
BITBANK10          100      0       0      14        0.0%
BANK10             100      0       0      15        0.0%
BITBANK9           100      0       0      12        0.0%
BANK9              100      0       0      13        0.0%
BITBANK8           100      0       0      10        0.0%
BANK8              100      0       0      11        0.0%
BITBANK7           100      0       0       8        0.0%
BANK7              100      0       0       9        0.0%
BITBANK6           100      0       0       6        0.0%
BANK6              100      0       0       7        0.0%
BITBIGSFRll         AD      0       0      82        0.0%
BITBANK5            A0      0       0       4        0.0%
BANK5               A0      0       0       5        0.0%
BITBIGSFRlhhhhh     9F      0       0      75        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      F      1E       1       31.6%
BITBIGSFRhhh        2E      0       0      71        0.0%
BITBIGSFRlhhhlh      E      0       0      77        0.0%
BITBIGSFRlhhhlh      7      0       0      78        0.0%
BITBIGSFRlhhhhl      7      0       0      76        0.0%
BITBIGSFRhhl         6      0       0      72        0.0%
BITBIGSFRlhl         3      0       0      81        0.0%
BITBIGSFRhll         3      0       0      74        0.0%
BITBIGSFRhlh         1      0       0      73        0.0%
BITBIGSFRlhhl        1      0       0      80        0.0%
BIGSFR_1             0      0       0     200        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      1E      58        0.0%
DATA                 0      0      1E       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Fri May 19 18:40:09 2023

                     l24 290C                       l42 2A3C                       l51 2976  
                     l60 2A80                       l37 2A90                       l54 2A98  
                     l63 29AA                       l48 285C                       l57 27C8  
                     l74 2898                       l67 26C6                       l69 2702  
                     u10 2702                       u11 26FE                       u40 2A20  
                     u41 2A1C                       u50 2A36                       u51 2A32  
           ___awdiv@sign 050C            _splash_screen 29AC            ENVIA_CHAR@aux 0503  
                    l133 2A64                      l142 2A0C                      l136 2942  
                    l400 268C                      l145 2768                      l139 29DC  
                    l387 25DC                      l901 294C                      l831 2692  
                    l911 295E                      l903 2950                      l841 26A6  
                    l833 2694                      l913 2964                      l905 2958  
                    l851 26BC                      l843 26A8                      l835 2696  
                    l931 2A20                      l915 296A                      l907 295A  
                    l861 26EA                      l853 26C8                      l845 26B0  
                    l837 2698                      l829 268E                      l933 2A26  
                    l917 2970                      l909 295C                      l871 2A76  
                    l855 26D0                      l847 26B2                      l839 26A0  
                    l927 2A8A                      l935 2A36                      l951 2774  
                    l873 2A7E                      l857 26D6                      l865 26F0  
                    l849 26BA                      l881 2984                      l945 2A92  
                    l929 2A10                      l961 27AA                      l953 2782  
                    l867 2A68                      l859 26E0                      l891 2998  
                    l883 298C                      l875 297A                      l963 27B0  
                    l955 2796                      l947 276A                      l869 2A74  
                    l893 299E                      l885 298E                      l877 297C  
                    l965 27B6                      l957 279E                      l949 276E  
                    l895 29A4                      l887 2990                      l879 2980  
                    l967 27BC                      l959 27A4                      l889 2992  
                    l897 2946                      l969 27C2                      l899 2948  
                    u200 29FC                      u201 29F6                      u300 2546  
                    u301 2542                      u310 256C                      u206 29FE  
                    u311 2568                      u320 258A                      u400 267C  
                    u321 2586                      u401 2678                      u330 25A6  
                    u250 28E6                      u331 25A2                      u251 28E2  
                    u340 25CC                      u260 2904                      u341 25C8  
                    u261 2900                      u350 25F0                      u270 285C  
                    u351 25EC                      u271 2858                      u280 2892  
                    u360 260A                      u281 288E                      u361 2606  
                    u417 29E4                      u290 252C                      u370 2624  
                    u507 26B4                      u427 2914                      u291 2528  
                    u371 2620                      u380 2642                      u517 26CA  
                    u437 277A                      u381 263E                      u390 2658  
                    u527 26DA                      u447 2788                      u391 2654  
                    u537 26E4                      u457 2798                      u547 2A78  
                    u467 2952                      u477 2986                      u487 269A  
                    u497 26AA             ___awmod@sign 0506              LEER_LCD@aux 0501  
                    wreg 0004E8             ?_CURSOR_HOME 0501           ??_ENVIA_NIBBLE 0501  
         ENVIA_CHAR@dato 0502                     l1103 29DE                     l1201 257C  
                   l1105 29EC                     l1211 25B0                     l1203 258A  
                   l1213 25B6                     l1205 2590                     l1301 280C  
                   l1071 2A58                     l1207 25A6                     l1215 25BC  
                   l1231 25FC                     l1223 25DE                     l1151 28F2  
                   l1081 2A62                     l1073 2A5A                     l1217 25CC  
                   l1209 25AE                     l1241 2634                     l1233 260A  
                   l1225 25E2                     l1161 284A                     l1153 2904  
                   l1171 286E                     l1163 285E                     l1075 2A5C  
                   l1067 2A3E                     l1219 25D4                     l1243 2642  
                   l1251 266C                     l1235 2612                     l1227 25F0  
                   l1155 281C                     l1147 28D6                     l1173 2880  
                   l1165 286A                     l1261 291E                     l1077 2A5E  
                   l1069 2A56                     l1181 251E                     l1253 267C  
                   l1245 2658                     l1237 2624                     l1229 25F8  
                   l1157 2828                     l1149 28E6                     l1175 2882  
                   l1271 2932                     l1263 2922                     l1079 2A60  
                   l1191 254E                     l1183 252C                     l1255 2684  
                   l1247 2660                     l1239 262C                     l1159 2848  
                   l1177 2892                     l1265 2926                     l1193 2552  
                   l1185 2534                     l1249 2666                     l1273 29AC  
                   l1281 27CA                     l1267 292A                     l1259 290E  
                   l1195 255A                     l1187 2538                     l1179 251A  
                   l1275 29B6                     l1291 27DC                     l1283 27CE  
                   l1269 2930                     l1197 256C                     l1189 2546  
                   l1277 29C6                     l1293 27E6                     l1285 27D2  
                   l1199 2574                     l1279 2706                     l1295 27F6  
                   l1287 27D6                     l1297 27FC                     l1289 27DA  
                   l1299 2804                     STR_1 2511                     STR_2 2501  
                   STR_3 2509                     _LATD 0004C1                     _main 27CA  
                   indf2 0004DF                     fsr1l 0004E1                     fsr2l 0004D9  
                   prodl 0004F3                     start FFFC            ?_CURSOR_ONOFF 0501  
           ___param_bank 000000          ??_ENVIA_LCD_CMD 0502         __end_of_LEER_LCD 2704  
         ?_splash_screen 0501         __end_of_LCD_Init 2944           _GENERACARACTER 285E  
                  ?_main 0501          __end_of___awdiv 25DE          __end_of___awmod 268E  
        ___awdiv@divisor 0509          ___awdiv@counter 050B                    _OSCEN 0000B3  
                  _PORTD 0004D1                    _TRISD 0004C9              ?_POS_CURSOR 0504  
                  tablat 0004F5                    status 0004D8           ??_CURSOR_ONOFF 0504  
        __initialization 289A             __end_of_main 281C   __end_of_GENERACARACTER 289A  
        _ESCRIBE_MENSAJE 281C                   ??_main 0510            __activetblptr 000001  
       ___awdiv@dividend 0507                   _ANSELD 000418                   _OSCFRQ 0000B1  
        ??_splash_screen 050A                ??___awdiv 050B                   _decena 051A  
              ??___awmod 0505     __end_of_ENVIA_NIBBLE 2A82          ?_GENERACARACTER 0504  
                 _cuenta 051E                   clear_0 28C0         ___awdiv@quotient 050D  
        ___awmod@divisor 0503                   isa$std 000001          ___awmod@counter 0505  
       __end_of_parpadeo 2A0E                   _unidad 0518             __pdataCOMRAM 0510  
           __mediumconst 0000                   tblptrh 0004F7                   tblptrl 0004F6  
                 tblptru 0004F8             ??_BORRAR_LCD 0504                ?_LEER_LCD 0501  
             __accesstop 0560  __end_of__initialization 28C6                ?_LCD_Init 0501  
           ??_LCD_CONFIG 0504            ___rparam_used 000001             ??_ENVIA_CHAR 0502  
__end_of_ESCRIBE_MENSAJE 285E           __pcstackCOMRAM 0501       __end_of_BORRAR_LCD 2A9A  
       ENVIA_LCD_CMD@aux 0503     __end_of_CURSOR_ONOFF 2A3E       __end_of_LCD_CONFIG 27CA  
     __end_of_ENVIA_CHAR 2978               ??_LEER_LCD 0501         ENVIA_NIBBLE@dato 0501  
             ??_LCD_Init 0508                  _OSCCON1 0000AD             ??_POS_CURSOR 0505  
              ?_parpadeo 0501                  __Hparam 0000                  __Lparam 0000  
       ?_ESCRIBE_MENSAJE 0504        __end_of_configuro 2A66                  ___awdiv 251A  
                ___awmod 25DE             __psmallconst 2500    __end_of_ENVIA_LCD_CMD 29AC  
      __end_of_convierte 276A                  __pcinit 289A       __end_of_POS_CURSOR 290E  
                __ramtop 2500                  _centena 051C                  __ptext0 27CA  
                __ptext1 29AC                  __ptext2 28D4                  __ptext3 281C  
                __ptext4 29DE                  __ptext5 2704                  __ptext6 25DE  
                __ptext7 251A                  __ptext8 2A3E                  __ptext9 290E  
        GENERACARACTER@i 0507         ___awmod@dividend 0501             _ENVIA_NIBBLE 2A66  
   end_of_initialization 28C6               ??_parpadeo 0501         ??_GENERACARACTER 0507  
                postdec1 0004E5                  postinc0 0004EE     GENERACARACTER@vector 0504  
              _TRISAbits 0004C6                _TRISBbits 0004C7                _TRISEbits 0004CA  
           _CURSOR_ONOFF 2A0E       CURSOR_ONOFF@estado 0504    __end_of_splash_screen 29DE  
          __pidataCOMRAM 2A82            ??_CURSOR_HOME 0504      start_initialization 289A  
            _e_acentuado 0510        ENVIA_LCD_CMD@dato 0502              __pbssCOMRAM 0518  
    __end_of_CURSOR_HOME 2A92                 ?___awdiv 0507                 ?___awmod 0501  
      GENERACARACTER@pos 0506                _configuro 2A3E              __smallconst 2500  
              _convierte 2704          convierte@numero 050F                 _LEER_LCD 268E  
               _LCD_Init 290E                 _LATCbits 0004C0                 _LATDbits 0004C1  
               _LATEbits 0004C2         ESCRIBE_MENSAJE@i 0509           POS_CURSOR@fila 0505  
             ?_configuro 0501               ?_convierte 0501                 _WPUBbits 000409  
            _CURSOR_HOME 2A8A                copy_data0 28AE                 __Hrparam 0000  
               __Lrparam 0000             __Lsmallconst 2500               _ANSELAbits 000400  
             _ANSELBbits 000408               _ANSELEbits 000420                 __ptext10 276A  
               __ptext11 285E                 __ptext12 2944                 __ptext13 2A0E  
               __ptext14 2A8A                 __ptext15 2A92                 __ptext16 2978  
               __ptext17 268E                 __ptext18 2A66               _BORRAR_LCD 2A92  
             _LCD_CONFIG 276A                 _parpadeo 29DE               _ENVIA_CHAR 2944  
               isa$xinst 000000            _ENVIA_LCD_CMD 2978              ??_configuro 0501  
            ??_convierte 050F        ??_ESCRIBE_MENSAJE 0507    ESCRIBE_MENSAJE@cadena 0504  
         ?_ENVIA_LCD_CMD 0501              ?_BORRAR_LCD 0501            ?_ENVIA_NIBBLE 0501  
             _POS_CURSOR 28D4              ?_LCD_CONFIG 0501       ESCRIBE_MENSAJE@tam 0506  
            ?_ENVIA_CHAR 0501        POS_CURSOR@columna 0504  
