

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Thu May 18 21:14:39 2023

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	18F57Q43
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    31                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    32                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    33                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    34  0000                     
    35                           ; Version 2.40
    36                           ; Generated 08/12/2021 GMT
    37                           ; 
    38                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    39                           ; All rights reserved.
    40                           ; 
    41                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    42                           ; 
    43                           ; Redistribution and use in source and binary forms, with or without modification, are
    44                           ; permitted provided that the following conditions are met:
    45                           ; 
    46                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    47                           ;        conditions and the following disclaimer.
    48                           ; 
    49                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    50                           ;        of conditions and the following disclaimer in the documentation and/or other
    51                           ;        materials provided with the distribution. Publication is not required when
    52                           ;        this file is used in an embedded application.
    53                           ; 
    54                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    55                           ;        software without specific prior written permission.
    56                           ; 
    57                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    58                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    59                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    60                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    61                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    62                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    63                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    64                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    65                           ; 
    66                           ; 
    67                           ; Code-generator required, PIC18F57Q43 Definitions
    68                           ; 
    69                           ; SFR Addresses
    70  0000                     
    71                           	psect	idataCOMRAM
    72  002AA4                     __pidataCOMRAM:
    73                           	callstack 0
    74                           
    75                           ;initializer for _e_acento
    76  002AA4  02                 	db	2
    77  002AA5  04                 	db	4
    78  002AA6  0E                 	db	14
    79  002AA7  11                 	db	17
    80  002AA8  1F                 	db	31
    81  002AA9  10                 	db	16
    82  002AAA  0E                 	db	14
    83  002AAB  00                 	db	0
    84  0000                     _TRISCbits	set	1224
    85  0000                     _LATD	set	1217
    86  0000                     _OSCCON1	set	173
    87  0000                     _LATDbits	set	1217
    88  0000                     _TRISAbits	set	1222
    89  0000                     _TRISBbits	set	1223
    90  0000                     _TRISD	set	1225
    91  0000                     _TRISEbits	set	1226
    92  0000                     _PORTD	set	1233
    93  0000                     _OSCFRQ	set	177
    94  0000                     _OSCEN	set	179
    95  0000                     _ANSELAbits	set	1024
    96  0000                     _ANSELBbits	set	1032
    97  0000                     _ANSELD	set	1048
    98  0000                     _ANSELEbits	set	1056
    99  0000                     _ANSELCbits	set	1040
   100  0000                     _WPUBbits	set	1033
   101  0000                     _LATCbits	set	1216
   102                           
   103                           	psect	smallconst
   104  002500                     __psmallconst:
   105                           	callstack 0
   106  002500  00                 	db	0
   107  002501                     STR_2:
   108  002501  43                 	db	67	;'C'
   109  002502  6F                 	db	111	;'o'
   110  002503  6E                 	db	110	;'n'
   111  002504  20                 	db	32
   112  002505  66                 	db	102	;'f'
   113  002506  65                 	db	101	;'e'
   114  002507  20                 	db	32
   115  002508  61                 	db	97	;'a'
   116  002509  70                 	db	112	;'p'
   117  00250A  72                 	db	114	;'r'
   118  00250B  6F                 	db	111	;'o'
   119  00250C  62                 	db	98	;'b'
   120  00250D  61                 	db	97	;'a'
   121  00250E  72                 	db	114	;'r'
   122  00250F  00                 	db	0
   123  002510                     STR_1:
   124  002510  43                 	db	67	;'C'
   125  002511  61                 	db	97	;'a'
   126  002512  6D                 	db	109	;'m'
   127  002513  6F                 	db	111	;'o'
   128  002514  74                 	db	116	;'t'
   129  002515  65                 	db	101	;'e'
   130  002516  3A                 	db	58	;':'
   131  002517  00                 	db	0
   132  002518  00                 	db	0	; dummy byte at the end
   133  0000                     
   134                           ; #config settings
   135                           
   136                           	psect	cinit
   137  00292E                     __pcinit:
   138                           	callstack 0
   139  00292E                     start_initialization:
   140                           	callstack 0
   141  00292E                     __initialization:
   142                           	callstack 0
   143                           
   144                           ; Initialize objects allocated to COMRAM (8 bytes)
   145                           ; load TBLPTR registers with __pidataCOMRAM
   146  00292E  0EA4               	movlw	low __pidataCOMRAM
   147  002930  6EF6               	movwf	tblptrl,c
   148  002932  0E2A               	movlw	high __pidataCOMRAM
   149  002934  6EF7               	movwf	tblptrh,c
   150  002936  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   151  002938  6EF8               	movwf	tblptru,c
   152  00293A  EE01  F112         	lfsr	0,__pdataCOMRAM
   153  00293E  EE10 F008          	lfsr	1,8
   154  002942                     copy_data0:
   155  002942  0009               	tblrd		*+
   156  002944  C4F5 F4EE          	movff	tablat,postinc0
   157  002948  50E5               	movf	postdec1,w,c
   158  00294A  50E1               	movf	fsr1l,w,c
   159  00294C  E1FA               	bnz	copy_data0
   160                           
   161                           ; Clear objects allocated to COMRAM (5 bytes)
   162  00294E  6A1E               	clrf	(__pbssCOMRAM+4)& (0+255),c
   163  002950  6A1D               	clrf	(__pbssCOMRAM+3)& (0+255),c
   164  002952  6A1C               	clrf	(__pbssCOMRAM+2)& (0+255),c
   165  002954  6A1B               	clrf	(__pbssCOMRAM+1)& (0+255),c
   166  002956  6A1A               	clrf	__pbssCOMRAM& (0+255),c
   167  002958                     end_of_initialization:
   168                           	callstack 0
   169  002958                     __end_of__initialization:
   170                           	callstack 0
   171  002958  0E00               	movlw	low (__Lsmallconst shr (0+16))
   172  00295A  6EF8               	movwf	tblptru,c
   173  00295C  0E25               	movlw	high __Lsmallconst
   174  00295E  6EF7               	movwf	tblptrh,c
   175  002960  0100               	movlb	0
   176  002962  EF47  F013         	goto	_main	;jump to C main() function
   177                           
   178                           	psect	bssCOMRAM
   179  00051A                     __pbssCOMRAM:
   180                           	callstack 0
   181  00051A                     _ind:
   182                           	callstack 0
   183  00051A                     	ds	1
   184  00051B                     _unidad:
   185                           	callstack 0
   186  00051B                     	ds	1
   187  00051C                     _decena:
   188                           	callstack 0
   189  00051C                     	ds	1
   190  00051D                     _centena:
   191                           	callstack 0
   192  00051D                     	ds	1
   193  00051E                     _camote:
   194                           	callstack 0
   195  00051E                     	ds	1
   196                           
   197                           	psect	dataCOMRAM
   198  000512                     __pdataCOMRAM:
   199                           	callstack 0
   200  000512                     _e_acento:
   201                           	callstack 0
   202  000512                     	ds	8
   203                           
   204                           	psect	cstackCOMRAM
   205  000501                     __pcstackCOMRAM:
   206                           	callstack 0
   207  000501                     ?___awmod:
   208                           	callstack 0
   209  000501                     ENVIA_NIBBLE@dato:
   210                           	callstack 0
   211  000501                     LEER_LCD@aux:
   212                           	callstack 0
   213  000501                     ___awmod@dividend:
   214                           	callstack 0
   215                           
   216                           ; 2 bytes @ 0x0
   217  000501                     	ds	1
   218  000502                     ENVIA_CHAR@dato:
   219                           	callstack 0
   220  000502                     ENVIA_LCD_CMD@dato:
   221                           	callstack 0
   222                           
   223                           ; 1 bytes @ 0x1
   224  000502                     	ds	1
   225  000503                     ENVIA_CHAR@aux:
   226                           	callstack 0
   227  000503                     ENVIA_LCD_CMD@aux:
   228                           	callstack 0
   229  000503                     ___awmod@divisor:
   230                           	callstack 0
   231                           
   232                           ; 2 bytes @ 0x2
   233  000503                     	ds	1
   234  000504                     ??_LCD_CONFIG:
   235  000504                     POS_CURSOR@columna:
   236                           	callstack 0
   237  000504                     CURSOR_ONOFF@estado:
   238                           	callstack 0
   239  000504                     ESCRIBE_MENSAJE@cadena:
   240                           	callstack 0
   241  000504                     GENERACARACTER@vector:
   242                           	callstack 0
   243                           
   244                           ; 2 bytes @ 0x3
   245  000504                     	ds	1
   246  000505                     POS_CURSOR@fila:
   247                           	callstack 0
   248  000505                     ___awmod@counter:
   249                           	callstack 0
   250                           
   251                           ; 1 bytes @ 0x4
   252  000505                     	ds	1
   253  000506                     ESCRIBE_MENSAJE@tam:
   254                           	callstack 0
   255  000506                     GENERACARACTER@pos:
   256                           	callstack 0
   257  000506                     ___awmod@sign:
   258                           	callstack 0
   259                           
   260                           ; 1 bytes @ 0x5
   261  000506                     	ds	1
   262  000507                     ??_ESCRIBE_MENSAJE:
   263  000507                     ?___awdiv:
   264                           	callstack 0
   265  000507                     GENERACARACTER@i:
   266                           	callstack 0
   267  000507                     ___awdiv@dividend:
   268                           	callstack 0
   269                           
   270                           ; 2 bytes @ 0x6
   271  000507                     	ds	1
   272  000508                     ??_LCD_Init:
   273                           
   274                           ; 1 bytes @ 0x7
   275  000508                     	ds	1
   276  000509                     ESCRIBE_MENSAJE@i:
   277                           	callstack 0
   278  000509                     ___awdiv@divisor:
   279                           	callstack 0
   280                           
   281                           ; 2 bytes @ 0x8
   282  000509                     	ds	1
   283  00050A                     
   284                           ; 1 bytes @ 0x9
   285  00050A                     	ds	1
   286  00050B                     ___awdiv@counter:
   287                           	callstack 0
   288                           
   289                           ; 1 bytes @ 0xA
   290  00050B                     	ds	1
   291  00050C                     ___awdiv@sign:
   292                           	callstack 0
   293                           
   294                           ; 1 bytes @ 0xB
   295  00050C                     	ds	1
   296  00050D                     ___awdiv@quotient:
   297                           	callstack 0
   298                           
   299                           ; 2 bytes @ 0xC
   300  00050D                     	ds	2
   301  00050F                     convierte@numero:
   302                           	callstack 0
   303                           
   304                           ; 1 bytes @ 0xE
   305  00050F                     	ds	1
   306  000510                     ??_main:
   307                           
   308                           ; 1 bytes @ 0xF
   309  000510                     	ds	2
   310                           
   311 ;;
   312 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   313 ;;
   314 ;; *************** function _main *****************
   315 ;; Defined at:
   316 ;;		line 64 in file "maincode3.c"
   317 ;; Parameters:    Size  Location     Type
   318 ;;		None
   319 ;; Auto vars:     Size  Location     Type
   320 ;;		None
   321 ;; Return value:  Size  Location     Type
   322 ;;                  1    wreg      void 
   323 ;; Registers used:
   324 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   325 ;; Tracked objects:
   326 ;;		On entry : 0/0
   327 ;;		On exit  : 0/0
   328 ;;		Unchanged: 0/0
   329 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   330 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   331 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   332 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   333 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   334 ;;Total ram usage:        2 bytes
   335 ;; Hardware stack levels required when called: 4
   336 ;; This function calls:
   337 ;;		_LCD_Init
   338 ;;		_configuro
   339 ;;		_vis_camote
   340 ;;		_vis_primeralinea
   341 ;; This function is called by:
   342 ;;		Startup code after reset
   343 ;; This function uses a non-reentrant model
   344 ;;
   345                           
   346                           	psect	text0
   347  00268E                     __ptext0:
   348                           	callstack 0
   349  00268E                     _main:
   350                           	callstack 123
   351  00268E                     
   352                           ;maincode3.c: 65:     configuro();
   353  00268E  EC1A  F015         	call	_configuro	;wreg free
   354  002692                     
   355                           ;maincode3.c: 66:     LCD_Init();
   356  002692  ECB3  F014         	call	_LCD_Init	;wreg free
   357  002696                     
   358                           ;maincode3.c: 67:     vis_primeralinea();
   359  002696  EC30  F015         	call	_vis_primeralinea	;wreg free
   360  00269A                     l1329:
   361                           
   362                           ;maincode3.c: 69:         if(ind == 0){
   363  00269A  501A               	movf	_ind^(0+1280),w,c
   364  00269C  A4D8               	btfss	status,2,c
   365  00269E  EF53  F013         	goto	u431
   366  0026A2  EF55  F013         	goto	u430
   367  0026A6                     u431:
   368  0026A6  EF71  F013         	goto	l1339
   369  0026AA                     u430:
   370  0026AA                     
   371                           ;maincode3.c: 70:             if(camote == 60){
   372  0026AA  0E3C               	movlw	60
   373  0026AC  181E               	xorwf	_camote^(0+1280),w,c
   374  0026AE  A4D8               	btfss	status,2,c
   375  0026B0  EF5C  F013         	goto	u441
   376  0026B4  EF5E  F013         	goto	u440
   377  0026B8                     u441:
   378  0026B8  EF62  F013         	goto	l1335
   379  0026BC                     u440:
   380  0026BC                     
   381                           ;maincode3.c: 71:                 ind = 1;
   382  0026BC  0E01               	movlw	1
   383  0026BE  6E1A               	movwf	_ind^(0+1280),c
   384                           
   385                           ;maincode3.c: 72:             }
   386  0026C0  EF80  F013         	goto	l1347
   387  0026C4                     l1335:
   388                           
   389                           ;maincode3.c: 74:                 camote++;
   390  0026C4  2A1E               	incf	_camote^(0+1280),f,c
   391  0026C6                     l1337:
   392                           
   393                           ;maincode3.c: 75:                 _delay((unsigned long)((200)*(4000000UL/4000.0)));
   394  0026C6  0E02               	movlw	2
   395  0026C8  6E11               	movwf	(??_main+1)^(0+1280),c
   396  0026CA  0E04               	movlw	4
   397  0026CC  6E10               	movwf	??_main^(0+1280),c
   398  0026CE  0EBA               	movlw	186
   399  0026D0                     u467:
   400  0026D0  2EE8               	decfsz	wreg,f,c
   401  0026D2  D7FE               	bra	u467
   402  0026D4  2E10               	decfsz	??_main^(0+1280),f,c
   403  0026D6  D7FC               	bra	u467
   404  0026D8  2E11               	decfsz	(??_main+1)^(0+1280),f,c
   405  0026DA  D7FA               	bra	u467
   406  0026DC  D000               	nop2	
   407  0026DE  EF80  F013         	goto	l1347
   408  0026E2                     l1339:
   409                           
   410                           ;maincode3.c: 79:             if(camote == 0){
   411  0026E2  501E               	movf	_camote^(0+1280),w,c
   412  0026E4  A4D8               	btfss	status,2,c
   413  0026E6  EF77  F013         	goto	u451
   414  0026EA  EF79  F013         	goto	u450
   415  0026EE                     u451:
   416  0026EE  EF7D  F013         	goto	l1343
   417  0026F2                     u450:
   418  0026F2                     
   419                           ;maincode3.c: 80:                 ind = 0;
   420  0026F2  0E00               	movlw	0
   421  0026F4  6E1A               	movwf	_ind^(0+1280),c
   422                           
   423                           ;maincode3.c: 81:             }
   424  0026F6  EF80  F013         	goto	l1347
   425  0026FA                     l1343:
   426                           
   427                           ;maincode3.c: 83:                 camote--;
   428  0026FA  061E               	decf	_camote^(0+1280),f,c
   429  0026FC  EF63  F013         	goto	l1337
   430  002700                     l1347:
   431                           
   432                           ;maincode3.c: 87:         vis_camote();
   433  002700  EC5D  F014         	call	_vis_camote	;wreg free
   434  002704  EF4D  F013         	goto	l1329
   435  002708  EFFE  F0FF         	goto	start
   436  00270C                     __end_of_main:
   437                           	callstack 0
   438                           
   439 ;; *************** function _vis_primeralinea *****************
   440 ;; Defined at:
   441 ;;		line 57 in file "maincode3.c"
   442 ;; Parameters:    Size  Location     Type
   443 ;;		None
   444 ;; Auto vars:     Size  Location     Type
   445 ;;		None
   446 ;; Return value:  Size  Location     Type
   447 ;;                  1    wreg      void 
   448 ;; Registers used:
   449 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   450 ;; Tracked objects:
   451 ;;		On entry : 0/0
   452 ;;		On exit  : 0/0
   453 ;;		Unchanged: 0/0
   454 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   455 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   456 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   457 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   458 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   459 ;;Total ram usage:        0 bytes
   460 ;; Hardware stack levels used: 1
   461 ;; Hardware stack levels required when called: 3
   462 ;; This function calls:
   463 ;;		_ENVIA_CHAR
   464 ;;		_ESCRIBE_MENSAJE
   465 ;;		_POS_CURSOR
   466 ;; This function is called by:
   467 ;;		_main
   468 ;; This function uses a non-reentrant model
   469 ;;
   470                           
   471                           	psect	text1
   472  002A60                     __ptext1:
   473                           	callstack 0
   474  002A60                     _vis_primeralinea:
   475                           	callstack 123
   476  002A60                     
   477                           ;maincode3.c: 58:     POS_CURSOR(1,0);
   478  002A60  0E00               	movlw	0
   479  002A62  6E04               	movwf	POS_CURSOR@columna^(0+1280),c
   480  002A64  0E01               	movlw	1
   481  002A66  EC7A  F014         	call	_POS_CURSOR
   482  002A6A                     
   483                           ;maincode3.c: 59:     ESCRIBE_MENSAJE("Con fe aprobar",14);
   484  002A6A  0E01               	movlw	low STR_2
   485  002A6C  6E04               	movwf	ESCRIBE_MENSAJE@cadena^(0+1280),c
   486  002A6E  0E25               	movlw	high STR_2
   487  002A70  6E05               	movwf	(ESCRIBE_MENSAJE@cadena+1)^(0+1280),c
   488  002A72  0E0E               	movlw	14
   489  002A74  6E06               	movwf	ESCRIBE_MENSAJE@tam^(0+1280),c
   490  002A76  EC1E  F014         	call	_ESCRIBE_MENSAJE	;wreg free
   491  002A7A                     
   492                           ;maincode3.c: 60:     ENVIA_CHAR(0);
   493  002A7A  0E00               	movlw	0
   494  002A7C  ECCE  F014         	call	_ENVIA_CHAR
   495  002A80                     
   496                           ;maincode3.c: 61:     ENVIA_CHAR('!');
   497  002A80  0E21               	movlw	33
   498  002A82  ECCE  F014         	call	_ENVIA_CHAR
   499  002A86  0012               	return		;funcret
   500  002A88                     __end_of_vis_primeralinea:
   501                           	callstack 0
   502                           
   503 ;; *************** function _vis_camote *****************
   504 ;; Defined at:
   505 ;;		line 48 in file "maincode3.c"
   506 ;; Parameters:    Size  Location     Type
   507 ;;		None
   508 ;; Auto vars:     Size  Location     Type
   509 ;;		None
   510 ;; Return value:  Size  Location     Type
   511 ;;                  1    wreg      void 
   512 ;; Registers used:
   513 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   514 ;; Tracked objects:
   515 ;;		On entry : 0/0
   516 ;;		On exit  : 0/0
   517 ;;		Unchanged: 0/0
   518 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   519 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   520 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   521 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   522 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   523 ;;Total ram usage:        0 bytes
   524 ;; Hardware stack levels used: 1
   525 ;; Hardware stack levels required when called: 3
   526 ;; This function calls:
   527 ;;		_ENVIA_CHAR
   528 ;;		_ESCRIBE_MENSAJE
   529 ;;		_POS_CURSOR
   530 ;;		_convierte
   531 ;; This function is called by:
   532 ;;		_main
   533 ;; This function uses a non-reentrant model
   534 ;;
   535                           
   536                           	psect	text2
   537  0028BA                     __ptext2:
   538                           	callstack 0
   539  0028BA                     _vis_camote:
   540                           	callstack 123
   541  0028BA                     
   542                           ;maincode3.c: 49:     POS_CURSOR(2,0);
   543  0028BA  0E00               	movlw	0
   544  0028BC  6E04               	movwf	POS_CURSOR@columna^(0+1280),c
   545  0028BE  0E02               	movlw	2
   546  0028C0  EC7A  F014         	call	_POS_CURSOR
   547  0028C4                     
   548                           ;maincode3.c: 50:     ESCRIBE_MENSAJE("Camote:",7);
   549  0028C4  0E10               	movlw	low STR_1
   550  0028C6  6E04               	movwf	ESCRIBE_MENSAJE@cadena^(0+1280),c
   551  0028C8  0E25               	movlw	high STR_1
   552  0028CA  6E05               	movwf	(ESCRIBE_MENSAJE@cadena+1)^(0+1280),c
   553  0028CC  0E07               	movlw	7
   554  0028CE  6E06               	movwf	ESCRIBE_MENSAJE@tam^(0+1280),c
   555  0028D0  EC1E  F014         	call	_ESCRIBE_MENSAJE	;wreg free
   556  0028D4                     
   557                           ;maincode3.c: 51:     convierte(camote);
   558  0028D4  501E               	movf	_camote^(0+1280),w,c
   559  0028D6  ECF1  F013         	call	_convierte
   560  0028DA                     
   561                           ;maincode3.c: 52:     ENVIA_CHAR(centena+0x30);
   562  0028DA  501D               	movf	_centena^(0+1280),w,c
   563  0028DC  0F30               	addlw	48
   564  0028DE  ECCE  F014         	call	_ENVIA_CHAR
   565  0028E2                     
   566                           ;maincode3.c: 53:     ENVIA_CHAR(decena+0x30);
   567  0028E2  501C               	movf	_decena^(0+1280),w,c
   568  0028E4  0F30               	addlw	48
   569  0028E6  ECCE  F014         	call	_ENVIA_CHAR
   570  0028EA                     
   571                           ;maincode3.c: 54:     ENVIA_CHAR(unidad+0x30);
   572  0028EA  501B               	movf	_unidad^(0+1280),w,c
   573  0028EC  0F30               	addlw	48
   574  0028EE  ECCE  F014         	call	_ENVIA_CHAR
   575  0028F2  0012               	return		;funcret
   576  0028F4                     __end_of_vis_camote:
   577                           	callstack 0
   578                           
   579 ;; *************** function _convierte *****************
   580 ;; Defined at:
   581 ;;		line 42 in file "maincode3.c"
   582 ;; Parameters:    Size  Location     Type
   583 ;;  numero          1    wreg     unsigned char 
   584 ;; Auto vars:     Size  Location     Type
   585 ;;  numero          1   14[COMRAM] unsigned char 
   586 ;; Return value:  Size  Location     Type
   587 ;;                  1    wreg      void 
   588 ;; Registers used:
   589 ;;		wreg, status,2, status,0, cstack
   590 ;; Tracked objects:
   591 ;;		On entry : 0/0
   592 ;;		On exit  : 0/0
   593 ;;		Unchanged: 0/0
   594 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   595 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   596 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   597 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   598 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   599 ;;Total ram usage:        1 bytes
   600 ;; Hardware stack levels used: 1
   601 ;; Hardware stack levels required when called: 1
   602 ;; This function calls:
   603 ;;		___awdiv
   604 ;;		___awmod
   605 ;; This function is called by:
   606 ;;		_vis_camote
   607 ;; This function uses a non-reentrant model
   608 ;;
   609                           
   610                           	psect	text3
   611  0027E2                     __ptext3:
   612                           	callstack 0
   613  0027E2                     _convierte:
   614                           	callstack 124
   615                           
   616                           ;incstack = 0
   617                           ;convierte@numero stored from wreg
   618  0027E2  6E0F               	movwf	convierte@numero^(0+1280),c
   619  0027E4                     
   620                           ;maincode3.c: 43:     centena = numero / 100;
   621  0027E4  C50F  F507         	movff	convierte@numero,___awdiv@dividend
   622  0027E8  6A08               	clrf	(___awdiv@dividend+1)^(0+1280),c
   623  0027EA  0E00               	movlw	0
   624  0027EC  6E0A               	movwf	(___awdiv@divisor+1)^(0+1280),c
   625  0027EE  0E64               	movlw	100
   626  0027F0  6E09               	movwf	___awdiv@divisor^(0+1280),c
   627  0027F2  EC8D  F012         	call	___awdiv	;wreg free
   628  0027F6  5007               	movf	?___awdiv^(0+1280),w,c
   629  0027F8  6E1D               	movwf	_centena^(0+1280),c
   630                           
   631                           ;maincode3.c: 44:     decena = (numero % 100) / 10;
   632  0027FA  0E00               	movlw	0
   633  0027FC  6E04               	movwf	(___awmod@divisor+1)^(0+1280),c
   634  0027FE  0E64               	movlw	100
   635  002800  6E03               	movwf	___awmod@divisor^(0+1280),c
   636  002802  C50F  F501         	movff	convierte@numero,___awmod@dividend
   637  002806  6A02               	clrf	(___awmod@dividend+1)^(0+1280),c
   638  002808  ECEF  F012         	call	___awmod	;wreg free
   639  00280C  C501  F507         	movff	?___awmod,___awdiv@dividend
   640  002810  C502  F508         	movff	?___awmod+1,___awdiv@dividend+1
   641  002814  0E00               	movlw	0
   642  002816  6E0A               	movwf	(___awdiv@divisor+1)^(0+1280),c
   643  002818  0E0A               	movlw	10
   644  00281A  6E09               	movwf	___awdiv@divisor^(0+1280),c
   645  00281C  EC8D  F012         	call	___awdiv	;wreg free
   646  002820  5007               	movf	?___awdiv^(0+1280),w,c
   647  002822  6E1C               	movwf	_decena^(0+1280),c
   648                           
   649                           ;maincode3.c: 45:     unidad = numero % 10;
   650  002824  C50F  F501         	movff	convierte@numero,___awmod@dividend
   651  002828  6A02               	clrf	(___awmod@dividend+1)^(0+1280),c
   652  00282A  0E00               	movlw	0
   653  00282C  6E04               	movwf	(___awmod@divisor+1)^(0+1280),c
   654  00282E  0E0A               	movlw	10
   655  002830  6E03               	movwf	___awmod@divisor^(0+1280),c
   656  002832  ECEF  F012         	call	___awmod	;wreg free
   657  002836  5001               	movf	?___awmod^(0+1280),w,c
   658  002838  6E1B               	movwf	_unidad^(0+1280),c
   659  00283A  0012               	return		;funcret
   660  00283C                     __end_of_convierte:
   661                           	callstack 0
   662                           
   663 ;; *************** function ___awmod *****************
   664 ;; Defined at:
   665 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\awmod.c"
   666 ;; Parameters:    Size  Location     Type
   667 ;;  dividend        2    0[COMRAM] int 
   668 ;;  divisor         2    2[COMRAM] int 
   669 ;; Auto vars:     Size  Location     Type
   670 ;;  sign            1    5[COMRAM] unsigned char 
   671 ;;  counter         1    4[COMRAM] unsigned char 
   672 ;; Return value:  Size  Location     Type
   673 ;;                  2    0[COMRAM] int 
   674 ;; Registers used:
   675 ;;		wreg, status,2, status,0
   676 ;; Tracked objects:
   677 ;;		On entry : 0/0
   678 ;;		On exit  : 0/0
   679 ;;		Unchanged: 0/0
   680 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   681 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   682 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   683 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   684 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   685 ;;Total ram usage:        6 bytes
   686 ;; Hardware stack levels used: 1
   687 ;; This function calls:
   688 ;;		Nothing
   689 ;; This function is called by:
   690 ;;		_convierte
   691 ;; This function uses a non-reentrant model
   692 ;;
   693                           
   694                           	psect	text4
   695  0025DE                     __ptext4:
   696                           	callstack 0
   697  0025DE                     ___awmod:
   698                           	callstack 124
   699  0025DE  0E00               	movlw	0
   700  0025E0  6E06               	movwf	___awmod@sign^(0+1280),c
   701  0025E2  BE02               	btfsc	(___awmod@dividend+1)^(0+1280),7,c
   702  0025E4  EFF8  F012         	goto	u330
   703  0025E8  EFF6  F012         	goto	u331
   704  0025EC                     u331:
   705  0025EC  EFFE  F012         	goto	l1227
   706  0025F0                     u330:
   707  0025F0  6C01               	negf	___awmod@dividend^(0+1280),c
   708  0025F2  1E02               	comf	(___awmod@dividend+1)^(0+1280),f,c
   709  0025F4  B0D8               	btfsc	status,0,c
   710  0025F6  2A02               	incf	(___awmod@dividend+1)^(0+1280),f,c
   711  0025F8  0E01               	movlw	1
   712  0025FA  6E06               	movwf	___awmod@sign^(0+1280),c
   713  0025FC                     l1227:
   714  0025FC  BE04               	btfsc	(___awmod@divisor+1)^(0+1280),7,c
   715  0025FE  EF05  F013         	goto	u340
   716  002602  EF03  F013         	goto	u341
   717  002606                     u341:
   718  002606  EF09  F013         	goto	l1231
   719  00260A                     u340:
   720  00260A  6C03               	negf	___awmod@divisor^(0+1280),c
   721  00260C  1E04               	comf	(___awmod@divisor+1)^(0+1280),f,c
   722  00260E  B0D8               	btfsc	status,0,c
   723  002610  2A04               	incf	(___awmod@divisor+1)^(0+1280),f,c
   724  002612                     l1231:
   725  002612  5003               	movf	___awmod@divisor^(0+1280),w,c
   726  002614  1004               	iorwf	(___awmod@divisor+1)^(0+1280),w,c
   727  002616  B4D8               	btfsc	status,2,c
   728  002618  EF10  F013         	goto	u351
   729  00261C  EF12  F013         	goto	u350
   730  002620                     u351:
   731  002620  EF36  F013         	goto	l1247
   732  002624                     u350:
   733  002624  0E01               	movlw	1
   734  002626  6E05               	movwf	___awmod@counter^(0+1280),c
   735  002628  EF1A  F013         	goto	l1237
   736  00262C                     l1235:
   737  00262C  90D8               	bcf	status,0,c
   738  00262E  3603               	rlcf	___awmod@divisor^(0+1280),f,c
   739  002630  3604               	rlcf	(___awmod@divisor+1)^(0+1280),f,c
   740  002632  2A05               	incf	___awmod@counter^(0+1280),f,c
   741  002634                     l1237:
   742  002634  AE04               	btfss	(___awmod@divisor+1)^(0+1280),7,c
   743  002636  EF1F  F013         	goto	u361
   744  00263A  EF21  F013         	goto	u360
   745  00263E                     u361:
   746  00263E  EF16  F013         	goto	l1235
   747  002642                     u360:
   748  002642                     l1239:
   749  002642  5003               	movf	___awmod@divisor^(0+1280),w,c
   750  002644  5C01               	subwf	___awmod@dividend^(0+1280),w,c
   751  002646  5004               	movf	(___awmod@divisor+1)^(0+1280),w,c
   752  002648  5802               	subwfb	(___awmod@dividend+1)^(0+1280),w,c
   753  00264A  A0D8               	btfss	status,0,c
   754  00264C  EF2A  F013         	goto	u371
   755  002650  EF2C  F013         	goto	u370
   756  002654                     u371:
   757  002654  EF30  F013         	goto	l1243
   758  002658                     u370:
   759  002658  5003               	movf	___awmod@divisor^(0+1280),w,c
   760  00265A  5E01               	subwf	___awmod@dividend^(0+1280),f,c
   761  00265C  5004               	movf	(___awmod@divisor+1)^(0+1280),w,c
   762  00265E  5A02               	subwfb	(___awmod@dividend+1)^(0+1280),f,c
   763  002660                     l1243:
   764  002660  90D8               	bcf	status,0,c
   765  002662  3204               	rrcf	(___awmod@divisor+1)^(0+1280),f,c
   766  002664  3203               	rrcf	___awmod@divisor^(0+1280),f,c
   767  002666  2E05               	decfsz	___awmod@counter^(0+1280),f,c
   768  002668  EF21  F013         	goto	l1239
   769  00266C                     l1247:
   770  00266C  5006               	movf	___awmod@sign^(0+1280),w,c
   771  00266E  B4D8               	btfsc	status,2,c
   772  002670  EF3C  F013         	goto	u381
   773  002674  EF3E  F013         	goto	u380
   774  002678                     u381:
   775  002678  EF42  F013         	goto	l1251
   776  00267C                     u380:
   777  00267C  6C01               	negf	___awmod@dividend^(0+1280),c
   778  00267E  1E02               	comf	(___awmod@dividend+1)^(0+1280),f,c
   779  002680  B0D8               	btfsc	status,0,c
   780  002682  2A02               	incf	(___awmod@dividend+1)^(0+1280),f,c
   781  002684                     l1251:
   782  002684  C501  F501         	movff	___awmod@dividend,?___awmod
   783  002688  C502  F502         	movff	___awmod@dividend+1,?___awmod+1
   784  00268C  0012               	return		;funcret
   785  00268E                     __end_of___awmod:
   786                           	callstack 0
   787                           
   788 ;; *************** function ___awdiv *****************
   789 ;; Defined at:
   790 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\awdiv.c"
   791 ;; Parameters:    Size  Location     Type
   792 ;;  dividend        2    6[COMRAM] int 
   793 ;;  divisor         2    8[COMRAM] int 
   794 ;; Auto vars:     Size  Location     Type
   795 ;;  quotient        2   12[COMRAM] int 
   796 ;;  sign            1   11[COMRAM] unsigned char 
   797 ;;  counter         1   10[COMRAM] unsigned char 
   798 ;; Return value:  Size  Location     Type
   799 ;;                  2    6[COMRAM] int 
   800 ;; Registers used:
   801 ;;		wreg, status,2, status,0
   802 ;; Tracked objects:
   803 ;;		On entry : 0/0
   804 ;;		On exit  : 0/0
   805 ;;		Unchanged: 0/0
   806 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   807 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   808 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   809 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   810 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   811 ;;Total ram usage:        8 bytes
   812 ;; Hardware stack levels used: 1
   813 ;; This function calls:
   814 ;;		Nothing
   815 ;; This function is called by:
   816 ;;		_convierte
   817 ;; This function uses a non-reentrant model
   818 ;;
   819                           
   820                           	psect	text5
   821  00251A                     __ptext5:
   822                           	callstack 0
   823  00251A                     ___awdiv:
   824                           	callstack 124
   825  00251A  0E00               	movlw	0
   826  00251C  6E0C               	movwf	___awdiv@sign^(0+1280),c
   827  00251E  BE0A               	btfsc	(___awdiv@divisor+1)^(0+1280),7,c
   828  002520  EF96  F012         	goto	u270
   829  002524  EF94  F012         	goto	u271
   830  002528                     u271:
   831  002528  EF9C  F012         	goto	l1183
   832  00252C                     u270:
   833  00252C  6C09               	negf	___awdiv@divisor^(0+1280),c
   834  00252E  1E0A               	comf	(___awdiv@divisor+1)^(0+1280),f,c
   835  002530  B0D8               	btfsc	status,0,c
   836  002532  2A0A               	incf	(___awdiv@divisor+1)^(0+1280),f,c
   837  002534  0E01               	movlw	1
   838  002536  6E0C               	movwf	___awdiv@sign^(0+1280),c
   839  002538                     l1183:
   840  002538  BE08               	btfsc	(___awdiv@dividend+1)^(0+1280),7,c
   841  00253A  EFA3  F012         	goto	u280
   842  00253E  EFA1  F012         	goto	u281
   843  002542                     u281:
   844  002542  EFA9  F012         	goto	l1189
   845  002546                     u280:
   846  002546  6C07               	negf	___awdiv@dividend^(0+1280),c
   847  002548  1E08               	comf	(___awdiv@dividend+1)^(0+1280),f,c
   848  00254A  B0D8               	btfsc	status,0,c
   849  00254C  2A08               	incf	(___awdiv@dividend+1)^(0+1280),f,c
   850  00254E  0E01               	movlw	1
   851  002550  1A0C               	xorwf	___awdiv@sign^(0+1280),f,c
   852  002552                     l1189:
   853  002552  0E00               	movlw	0
   854  002554  6E0E               	movwf	(___awdiv@quotient+1)^(0+1280),c
   855  002556  0E00               	movlw	0
   856  002558  6E0D               	movwf	___awdiv@quotient^(0+1280),c
   857  00255A  5009               	movf	___awdiv@divisor^(0+1280),w,c
   858  00255C  100A               	iorwf	(___awdiv@divisor+1)^(0+1280),w,c
   859  00255E  B4D8               	btfsc	status,2,c
   860  002560  EFB4  F012         	goto	u291
   861  002564  EFB6  F012         	goto	u290
   862  002568                     u291:
   863  002568  EFDE  F012         	goto	l1211
   864  00256C                     u290:
   865  00256C  0E01               	movlw	1
   866  00256E  6E0B               	movwf	___awdiv@counter^(0+1280),c
   867  002570  EFBE  F012         	goto	l1197
   868  002574                     l1195:
   869  002574  90D8               	bcf	status,0,c
   870  002576  3609               	rlcf	___awdiv@divisor^(0+1280),f,c
   871  002578  360A               	rlcf	(___awdiv@divisor+1)^(0+1280),f,c
   872  00257A  2A0B               	incf	___awdiv@counter^(0+1280),f,c
   873  00257C                     l1197:
   874  00257C  AE0A               	btfss	(___awdiv@divisor+1)^(0+1280),7,c
   875  00257E  EFC3  F012         	goto	u301
   876  002582  EFC5  F012         	goto	u300
   877  002586                     u301:
   878  002586  EFBA  F012         	goto	l1195
   879  00258A                     u300:
   880  00258A                     l1199:
   881  00258A  90D8               	bcf	status,0,c
   882  00258C  360D               	rlcf	___awdiv@quotient^(0+1280),f,c
   883  00258E  360E               	rlcf	(___awdiv@quotient+1)^(0+1280),f,c
   884  002590  5009               	movf	___awdiv@divisor^(0+1280),w,c
   885  002592  5C07               	subwf	___awdiv@dividend^(0+1280),w,c
   886  002594  500A               	movf	(___awdiv@divisor+1)^(0+1280),w,c
   887  002596  5808               	subwfb	(___awdiv@dividend+1)^(0+1280),w,c
   888  002598  A0D8               	btfss	status,0,c
   889  00259A  EFD1  F012         	goto	u311
   890  00259E  EFD3  F012         	goto	u310
   891  0025A2                     u311:
   892  0025A2  EFD8  F012         	goto	l1207
   893  0025A6                     u310:
   894  0025A6  5009               	movf	___awdiv@divisor^(0+1280),w,c
   895  0025A8  5E07               	subwf	___awdiv@dividend^(0+1280),f,c
   896  0025AA  500A               	movf	(___awdiv@divisor+1)^(0+1280),w,c
   897  0025AC  5A08               	subwfb	(___awdiv@dividend+1)^(0+1280),f,c
   898  0025AE  800D               	bsf	___awdiv@quotient^(0+1280),0,c
   899  0025B0                     l1207:
   900  0025B0  90D8               	bcf	status,0,c
   901  0025B2  320A               	rrcf	(___awdiv@divisor+1)^(0+1280),f,c
   902  0025B4  3209               	rrcf	___awdiv@divisor^(0+1280),f,c
   903  0025B6  2E0B               	decfsz	___awdiv@counter^(0+1280),f,c
   904  0025B8  EFC5  F012         	goto	l1199
   905  0025BC                     l1211:
   906  0025BC  500C               	movf	___awdiv@sign^(0+1280),w,c
   907  0025BE  B4D8               	btfsc	status,2,c
   908  0025C0  EFE4  F012         	goto	u321
   909  0025C4  EFE6  F012         	goto	u320
   910  0025C8                     u321:
   911  0025C8  EFEA  F012         	goto	l1215
   912  0025CC                     u320:
   913  0025CC  6C0D               	negf	___awdiv@quotient^(0+1280),c
   914  0025CE  1E0E               	comf	(___awdiv@quotient+1)^(0+1280),f,c
   915  0025D0  B0D8               	btfsc	status,0,c
   916  0025D2  2A0E               	incf	(___awdiv@quotient+1)^(0+1280),f,c
   917  0025D4                     l1215:
   918  0025D4  C50D  F507         	movff	___awdiv@quotient,?___awdiv
   919  0025D8  C50E  F508         	movff	___awdiv@quotient+1,?___awdiv+1
   920  0025DC  0012               	return		;funcret
   921  0025DE                     __end_of___awdiv:
   922                           	callstack 0
   923                           
   924 ;; *************** function _POS_CURSOR *****************
   925 ;; Defined at:
   926 ;;		line 6 in file "LCD.c"
   927 ;; Parameters:    Size  Location     Type
   928 ;;  fila            1    wreg     unsigned char 
   929 ;;  columna         1    3[COMRAM] unsigned char 
   930 ;; Auto vars:     Size  Location     Type
   931 ;;  fila            1    4[COMRAM] unsigned char 
   932 ;; Return value:  Size  Location     Type
   933 ;;                  1    wreg      void 
   934 ;; Registers used:
   935 ;;		wreg, status,2, status,0, cstack
   936 ;; Tracked objects:
   937 ;;		On entry : 0/0
   938 ;;		On exit  : 0/0
   939 ;;		Unchanged: 0/0
   940 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   941 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   942 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   943 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   944 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   945 ;;Total ram usage:        2 bytes
   946 ;; Hardware stack levels used: 1
   947 ;; Hardware stack levels required when called: 2
   948 ;; This function calls:
   949 ;;		_ENVIA_LCD_CMD
   950 ;; This function is called by:
   951 ;;		_vis_camote
   952 ;;		_vis_primeralinea
   953 ;; This function uses a non-reentrant model
   954 ;;
   955                           
   956                           	psect	text6
   957  0028F4                     __ptext6:
   958                           	callstack 0
   959  0028F4                     _POS_CURSOR:
   960                           	callstack 123
   961                           
   962                           ;incstack = 0
   963                           ;POS_CURSOR@fila stored from wreg
   964  0028F4  6E05               	movwf	POS_CURSOR@fila^(0+1280),c
   965  0028F6                     
   966                           ;LCD.c: 6: void POS_CURSOR(unsigned char fila,unsigned char columna);LCD.c: 7: {;LCD.c: 
      +                          8:  if(fila == 1)
   967  0028F6  0405               	decf	POS_CURSOR@fila^(0+1280),w,c
   968  0028F8  A4D8               	btfss	status,2,c
   969  0028FA  EF81  F014         	goto	u391
   970  0028FE  EF83  F014         	goto	u390
   971  002902                     u391:
   972  002902  EF89  F014         	goto	l1259
   973  002906                     u390:
   974  002906                     
   975                           ;LCD.c: 9:  {;LCD.c: 10:   ENVIA_LCD_CMD(0x80+columna);
   976  002906  5004               	movf	POS_CURSOR@columna^(0+1280),w,c
   977  002908  0F80               	addlw	128
   978  00290A  ECE8  F014         	call	_ENVIA_LCD_CMD
   979                           
   980                           ;LCD.c: 11:  }
   981  00290E  EF96  F014         	goto	l24
   982  002912                     l1259:
   983  002912  0E02               	movlw	2
   984  002914  1805               	xorwf	POS_CURSOR@fila^(0+1280),w,c
   985  002916  A4D8               	btfss	status,2,c
   986  002918  EF90  F014         	goto	u401
   987  00291C  EF92  F014         	goto	u400
   988  002920                     u401:
   989  002920  EF96  F014         	goto	l24
   990  002924                     u400:
   991  002924                     
   992                           ;LCD.c: 13:  {;LCD.c: 14:   ENVIA_LCD_CMD(0xC0+columna);
   993  002924  5004               	movf	POS_CURSOR@columna^(0+1280),w,c
   994  002926  0FC0               	addlw	192
   995  002928  ECE8  F014         	call	_ENVIA_LCD_CMD
   996  00292C                     l24:
   997  00292C  0012               	return		;funcret
   998  00292E                     __end_of_POS_CURSOR:
   999                           	callstack 0
  1000                           
  1001 ;; *************** function _ESCRIBE_MENSAJE *****************
  1002 ;; Defined at:
  1003 ;;		line 41 in file "LCD.c"
  1004 ;; Parameters:    Size  Location     Type
  1005 ;;  cadena          2    3[COMRAM] PTR const unsigned char 
  1006 ;;		 -> STR_2(15), STR_1(8), 
  1007 ;;  tam             1    5[COMRAM] unsigned char 
  1008 ;; Auto vars:     Size  Location     Type
  1009 ;;  i               1    8[COMRAM] unsigned char 
  1010 ;; Return value:  Size  Location     Type
  1011 ;;                  1    wreg      void 
  1012 ;; Registers used:
  1013 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1014 ;; Tracked objects:
  1015 ;;		On entry : 0/0
  1016 ;;		On exit  : 0/0
  1017 ;;		Unchanged: 0/0
  1018 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1019 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1020 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1021 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1022 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1023 ;;Total ram usage:        6 bytes
  1024 ;; Hardware stack levels used: 1
  1025 ;; Hardware stack levels required when called: 2
  1026 ;; This function calls:
  1027 ;;		_ENVIA_CHAR
  1028 ;; This function is called by:
  1029 ;;		_vis_camote
  1030 ;;		_vis_primeralinea
  1031 ;; This function uses a non-reentrant model
  1032 ;;
  1033                           
  1034                           	psect	text7
  1035  00283C                     __ptext7:
  1036                           	callstack 0
  1037  00283C                     _ESCRIBE_MENSAJE:
  1038                           	callstack 123
  1039  00283C                     
  1040                           ;LCD.c: 41: void ESCRIBE_MENSAJE(const char *cadena,unsigned char tam);LCD.c: 42: {;LCD.
      +                          c: 43:  unsigned char i = 0;
  1041  00283C  0E00               	movlw	0
  1042  00283E  6E09               	movwf	ESCRIBE_MENSAJE@i^(0+1280),c
  1043                           
  1044                           ;LCD.c: 44:  for(i = 0; i<tam; i++)
  1045  002840  0E00               	movlw	0
  1046  002842  6E09               	movwf	ESCRIBE_MENSAJE@i^(0+1280),c
  1047  002844  EF35  F014         	goto	l1269
  1048  002848                     l1265:
  1049                           
  1050                           ;LCD.c: 45:  {;LCD.c: 46:   ENVIA_CHAR(cadena[i]);
  1051  002848  5009               	movf	ESCRIBE_MENSAJE@i^(0+1280),w,c
  1052  00284A  2404               	addwf	ESCRIBE_MENSAJE@cadena^(0+1280),w,c
  1053  00284C  6E07               	movwf	??_ESCRIBE_MENSAJE^(0+1280),c
  1054  00284E  0E00               	movlw	0
  1055  002850  2005               	addwfc	(ESCRIBE_MENSAJE@cadena+1)^(0+1280),w,c
  1056  002852  6E08               	movwf	(??_ESCRIBE_MENSAJE+1)^(0+1280),c
  1057  002854  0061  F41C  F4F6   	movff	??_ESCRIBE_MENSAJE,tblptrl
  1058  00285A  0061  F420  F4F7   	movff	??_ESCRIBE_MENSAJE+1,tblptrh
  1059  002860                     	if	0	;tblptru may be non-zero
  1060  002860                     	endif
  1061  002860                     	if	0	;tblptru may be non-zero
  1062  002860                     	endif
  1063  002860  0008               	tblrd		*
  1064  002862  50F5               	movf	tablat,w,c
  1065  002864  ECCE  F014         	call	_ENVIA_CHAR
  1066  002868                     
  1067                           ;LCD.c: 47:  }
  1068  002868  2A09               	incf	ESCRIBE_MENSAJE@i^(0+1280),f,c
  1069  00286A                     l1269:
  1070  00286A  5006               	movf	ESCRIBE_MENSAJE@tam^(0+1280),w,c
  1071  00286C  5C09               	subwf	ESCRIBE_MENSAJE@i^(0+1280),w,c
  1072  00286E  A0D8               	btfss	status,0,c
  1073  002870  EF3C  F014         	goto	u411
  1074  002874  EF3E  F014         	goto	u410
  1075  002878                     u411:
  1076  002878  EF24  F014         	goto	l1265
  1077  00287C                     u410:
  1078  00287C  0012               	return		;funcret
  1079  00287E                     __end_of_ESCRIBE_MENSAJE:
  1080                           	callstack 0
  1081                           
  1082 ;; *************** function _configuro *****************
  1083 ;; Defined at:
  1084 ;;		line 11 in file "maincode3.c"
  1085 ;; Parameters:    Size  Location     Type
  1086 ;;		None
  1087 ;; Auto vars:     Size  Location     Type
  1088 ;;		None
  1089 ;; Return value:  Size  Location     Type
  1090 ;;                  1    wreg      void 
  1091 ;; Registers used:
  1092 ;;		wreg, status,2
  1093 ;; Tracked objects:
  1094 ;;		On entry : 0/0
  1095 ;;		On exit  : 0/0
  1096 ;;		Unchanged: 0/0
  1097 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1098 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1099 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1100 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1101 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1102 ;;Total ram usage:        0 bytes
  1103 ;; Hardware stack levels used: 1
  1104 ;; This function calls:
  1105 ;;		Nothing
  1106 ;; This function is called by:
  1107 ;;		_main
  1108 ;; This function uses a non-reentrant model
  1109 ;;
  1110                           
  1111                           	psect	text8
  1112  002A34                     __ptext8:
  1113                           	callstack 0
  1114  002A34                     _configuro:
  1115                           	callstack 126
  1116  002A34                     
  1117                           ;maincode3.c: 13:     OSCCON1 = 0x60;
  1118  002A34  0E60               	movlw	96
  1119  002A36  0100               	movlb	0	; () banked
  1120  002A38  6FAD               	movwf	173,b	;volatile
  1121                           
  1122                           ;maincode3.c: 14:     OSCFRQ = 0x02;
  1123  002A3A  0E02               	movlw	2
  1124  002A3C  6FB1               	movwf	177,b	;volatile
  1125                           
  1126                           ;maincode3.c: 15:     OSCEN = 0x40;
  1127  002A3E  0E40               	movlw	64
  1128  002A40  6FB3               	movwf	179,b	;volatile
  1129                           
  1130                           ;maincode3.c: 18:     TRISD = 0x00;
  1131  002A42  0E00               	movlw	0
  1132  002A44  6EC9               	movwf	201,c	;volatile
  1133                           
  1134                           ;maincode3.c: 19:     ANSELD = 0x0;
  1135  002A46  0E00               	movlw	0
  1136  002A48  0104               	movlb	4	; () banked
  1137  002A4A  6F18               	movwf	24,b	;volatile
  1138  002A4C                     
  1139                           ; BSR set to: 4
  1140                           ;maincode3.c: 20:     TRISBbits.TRISB0 = 1;
  1141  002A4C  80C7               	bsf	199,0,c	;volatile
  1142  002A4E                     
  1143                           ; BSR set to: 4
  1144                           ;maincode3.c: 21:     ANSELBbits.ANSELB0 = 0;
  1145  002A4E  9108               	bcf	8,0,b	;volatile
  1146  002A50                     
  1147                           ; BSR set to: 4
  1148                           ;maincode3.c: 22:     WPUBbits.WPUB0 = 1;
  1149  002A50  8109               	bsf	9,0,b	;volatile
  1150  002A52                     
  1151                           ; BSR set to: 4
  1152                           ;maincode3.c: 24:     TRISEbits.TRISE0 = 0;
  1153  002A52  90CA               	bcf	202,0,c	;volatile
  1154  002A54                     
  1155                           ; BSR set to: 4
  1156                           ;maincode3.c: 25:     ANSELEbits.ANSELE0 = 0;
  1157  002A54  9120               	bcf	32,0,b	;volatile
  1158  002A56                     
  1159                           ; BSR set to: 4
  1160                           ;maincode3.c: 26:     TRISAbits.TRISA0 = 1;
  1161  002A56  80C6               	bsf	198,0,c	;volatile
  1162  002A58                     
  1163                           ; BSR set to: 4
  1164                           ;maincode3.c: 27:     ANSELAbits.ANSELA0 = 1;
  1165  002A58  8100               	bsf	0,0,b	;volatile
  1166  002A5A                     
  1167                           ; BSR set to: 4
  1168                           ;maincode3.c: 28:     TRISCbits.TRISC2 = 0;
  1169  002A5A  94C8               	bcf	200,2,c	;volatile
  1170  002A5C                     
  1171                           ; BSR set to: 4
  1172                           ;maincode3.c: 29:     ANSELCbits.ANSELC2 = 0;
  1173  002A5C  9510               	bcf	16,2,b	;volatile
  1174  002A5E                     
  1175                           ; BSR set to: 4
  1176  002A5E  0012               	return		;funcret
  1177  002A60                     __end_of_configuro:
  1178                           	callstack 0
  1179                           
  1180 ;; *************** function _LCD_Init *****************
  1181 ;; Defined at:
  1182 ;;		line 32 in file "maincode3.c"
  1183 ;; Parameters:    Size  Location     Type
  1184 ;;		None
  1185 ;; Auto vars:     Size  Location     Type
  1186 ;;		None
  1187 ;; Return value:  Size  Location     Type
  1188 ;;                  1    wreg      void 
  1189 ;; Registers used:
  1190 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1191 ;; Tracked objects:
  1192 ;;		On entry : 0/0
  1193 ;;		On exit  : 0/0
  1194 ;;		Unchanged: 0/0
  1195 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1196 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1197 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1198 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1199 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1200 ;;Total ram usage:        1 bytes
  1201 ;; Hardware stack levels used: 1
  1202 ;; Hardware stack levels required when called: 3
  1203 ;; This function calls:
  1204 ;;		_BORRAR_LCD
  1205 ;;		_CURSOR_HOME
  1206 ;;		_CURSOR_ONOFF
  1207 ;;		_GENERACARACTER
  1208 ;;		_LCD_CONFIG
  1209 ;; This function is called by:
  1210 ;;		_main
  1211 ;; This function uses a non-reentrant model
  1212 ;;
  1213                           
  1214                           	psect	text9
  1215  002966                     __ptext9:
  1216                           	callstack 0
  1217  002966                     _LCD_Init:
  1218                           	callstack 123
  1219  002966                     
  1220                           ;maincode3.c: 33:     _delay((unsigned long)((29)*(4000000UL/4000.0)));
  1221  002966  0E26               	movlw	38
  1222  002968  6E08               	movwf	??_LCD_Init^(0+1280),c
  1223  00296A  0EA8               	movlw	168
  1224  00296C                     u477:
  1225  00296C  2EE8               	decfsz	wreg,f,c
  1226  00296E  D7FE               	bra	u477
  1227  002970  2E08               	decfsz	??_LCD_Init^(0+1280),f,c
  1228  002972  D7FC               	bra	u477
  1229  002974  D000               	nop2	
  1230  002976                     
  1231                           ;maincode3.c: 34:     LCD_CONFIG();
  1232  002976  ECC1  F013         	call	_LCD_CONFIG	;wreg free
  1233  00297A                     
  1234                           ;maincode3.c: 35:     BORRAR_LCD();
  1235  00297A  EC5A  F015         	call	_BORRAR_LCD	;wreg free
  1236  00297E                     
  1237                           ;maincode3.c: 36:     CURSOR_HOME();
  1238  00297E  EC56  F015         	call	_CURSOR_HOME	;wreg free
  1239  002982                     
  1240                           ;maincode3.c: 37:     CURSOR_ONOFF(1);
  1241  002982  0E01               	movlw	1
  1242  002984  EC02  F015         	call	_CURSOR_ONOFF
  1243  002988                     
  1244                           ;maincode3.c: 38:     LATCbits.LATC2 = 1;
  1245  002988  84C0               	bsf	192,2,c	;volatile
  1246  00298A                     
  1247                           ;maincode3.c: 39:     GENERACARACTER(e_acento,0);
  1248  00298A  0E12               	movlw	low _e_acento
  1249  00298C  6E04               	movwf	GENERACARACTER@vector^(0+1280),c
  1250  00298E  0E05               	movlw	high _e_acento
  1251  002990  6E05               	movwf	(GENERACARACTER@vector+1)^(0+1280),c
  1252  002992  0E00               	movlw	0
  1253  002994  6E06               	movwf	GENERACARACTER@pos^(0+1280),c
  1254  002996  EC3F  F014         	call	_GENERACARACTER	;wreg free
  1255  00299A  0012               	return		;funcret
  1256  00299C                     __end_of_LCD_Init:
  1257                           	callstack 0
  1258                           
  1259 ;; *************** function _LCD_CONFIG *****************
  1260 ;; Defined at:
  1261 ;;		line 72 in file "LCD.c"
  1262 ;; Parameters:    Size  Location     Type
  1263 ;;		None
  1264 ;; Auto vars:     Size  Location     Type
  1265 ;;		None
  1266 ;; Return value:  Size  Location     Type
  1267 ;;                  1    wreg      void 
  1268 ;; Registers used:
  1269 ;;		wreg, status,2, status,0, cstack
  1270 ;; Tracked objects:
  1271 ;;		On entry : 0/0
  1272 ;;		On exit  : 0/0
  1273 ;;		Unchanged: 0/0
  1274 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1275 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1276 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1277 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1278 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1279 ;;Total ram usage:        1 bytes
  1280 ;; Hardware stack levels used: 1
  1281 ;; Hardware stack levels required when called: 2
  1282 ;; This function calls:
  1283 ;;		_ENVIA_LCD_CMD
  1284 ;;		_ENVIA_NIBBLE
  1285 ;; This function is called by:
  1286 ;;		_LCD_Init
  1287 ;; This function uses a non-reentrant model
  1288 ;;
  1289                           
  1290                           	psect	text10
  1291  002782                     __ptext10:
  1292                           	callstack 0
  1293  002782                     _LCD_CONFIG:
  1294                           	callstack 123
  1295  002782                     
  1296                           ;LCD.c: 74:  LATDbits.LATD0 = 0;
  1297  002782  90C1               	bcf	193,0,c	;volatile
  1298                           
  1299                           ;LCD.c: 75:  LATDbits.LATD1 = 0;
  1300  002784  92C1               	bcf	193,1,c	;volatile
  1301  002786                     
  1302                           ;LCD.c: 76:  ENVIA_NIBBLE(0x30);
  1303  002786  0E30               	movlw	48
  1304  002788  EC44  F015         	call	_ENVIA_NIBBLE
  1305  00278C                     
  1306                           ;LCD.c: 77:         _delay(24000);
  1307  00278C  0E20               	movlw	32
  1308  00278E  6E04               	movwf	??_LCD_CONFIG^(0+1280),c
  1309  002790  0E2A               	movlw	42
  1310  002792                     u487:
  1311  002792  2EE8               	decfsz	wreg,f,c
  1312  002794  D7FE               	bra	u487
  1313  002796  2E04               	decfsz	??_LCD_CONFIG^(0+1280),f,c
  1314  002798  D7FC               	bra	u487
  1315  00279A                     
  1316                           ;LCD.c: 78:         _delay(24000);
  1317  00279A  0E20               	movlw	32
  1318  00279C  6E04               	movwf	??_LCD_CONFIG^(0+1280),c
  1319  00279E  0E2A               	movlw	42
  1320  0027A0                     u497:
  1321  0027A0  2EE8               	decfsz	wreg,f,c
  1322  0027A2  D7FE               	bra	u497
  1323  0027A4  2E04               	decfsz	??_LCD_CONFIG^(0+1280),f,c
  1324  0027A6  D7FC               	bra	u497
  1325                           
  1326                           ;LCD.c: 81:  ENVIA_NIBBLE(0x30);
  1327  0027A8  0E30               	movlw	48
  1328  0027AA  EC44  F015         	call	_ENVIA_NIBBLE
  1329  0027AE                     
  1330                           ;LCD.c: 83:  _delay(1200);
  1331  0027AE  0EF0               	movlw	240
  1332  0027B0                     u507:
  1333  0027B0  D000               	nop2	
  1334  0027B2  2EE8               	decfsz	wreg,f,c
  1335  0027B4  D7FD               	bra	u507
  1336  0027B6                     
  1337                           ;LCD.c: 84:         ENVIA_NIBBLE(0x30);
  1338  0027B6  0E30               	movlw	48
  1339  0027B8  EC44  F015         	call	_ENVIA_NIBBLE
  1340  0027BC                     
  1341                           ;LCD.c: 85:  ENVIA_NIBBLE(0x20);
  1342  0027BC  0E20               	movlw	32
  1343  0027BE  EC44  F015         	call	_ENVIA_NIBBLE
  1344  0027C2                     
  1345                           ;LCD.c: 86:  ENVIA_LCD_CMD(0x01);
  1346  0027C2  0E01               	movlw	1
  1347  0027C4  ECE8  F014         	call	_ENVIA_LCD_CMD
  1348  0027C8                     
  1349                           ;LCD.c: 87:  ENVIA_LCD_CMD(0x28);
  1350  0027C8  0E28               	movlw	40
  1351  0027CA  ECE8  F014         	call	_ENVIA_LCD_CMD
  1352  0027CE                     
  1353                           ;LCD.c: 88:  ENVIA_LCD_CMD(0x0F);
  1354  0027CE  0E0F               	movlw	15
  1355  0027D0  ECE8  F014         	call	_ENVIA_LCD_CMD
  1356  0027D4                     
  1357                           ;LCD.c: 89:  ENVIA_LCD_CMD(0x06);
  1358  0027D4  0E06               	movlw	6
  1359  0027D6  ECE8  F014         	call	_ENVIA_LCD_CMD
  1360  0027DA                     
  1361                           ;LCD.c: 90:  ENVIA_LCD_CMD(0x01);
  1362  0027DA  0E01               	movlw	1
  1363  0027DC  ECE8  F014         	call	_ENVIA_LCD_CMD
  1364  0027E0  0012               	return		;funcret
  1365  0027E2                     __end_of_LCD_CONFIG:
  1366                           	callstack 0
  1367                           
  1368 ;; *************** function _GENERACARACTER *****************
  1369 ;; Defined at:
  1370 ;;		line 153 in file "LCD.c"
  1371 ;; Parameters:    Size  Location     Type
  1372 ;;  vector          2    3[COMRAM] PTR const unsigned char 
  1373 ;;		 -> e_acento(8), 
  1374 ;;  pos             1    5[COMRAM] unsigned char 
  1375 ;; Auto vars:     Size  Location     Type
  1376 ;;  i               1    6[COMRAM] unsigned char 
  1377 ;; Return value:  Size  Location     Type
  1378 ;;                  1    wreg      void 
  1379 ;; Registers used:
  1380 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1381 ;; Tracked objects:
  1382 ;;		On entry : 0/0
  1383 ;;		On exit  : 0/0
  1384 ;;		Unchanged: 0/0
  1385 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1386 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1387 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1388 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1389 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1390 ;;Total ram usage:        4 bytes
  1391 ;; Hardware stack levels used: 1
  1392 ;; Hardware stack levels required when called: 2
  1393 ;; This function calls:
  1394 ;;		_ENVIA_CHAR
  1395 ;;		_ENVIA_LCD_CMD
  1396 ;; This function is called by:
  1397 ;;		_LCD_Init
  1398 ;; This function uses a non-reentrant model
  1399 ;;
  1400                           
  1401                           	psect	text11
  1402  00287E                     __ptext11:
  1403                           	callstack 0
  1404  00287E                     _GENERACARACTER:
  1405                           	callstack 123
  1406  00287E                     
  1407                           ;LCD.c: 153: void GENERACARACTER(const unsigned char *vector,unsigned char pos);LCD.c: 1
      +                          54: {;LCD.c: 155:  unsigned char i;;LCD.c: 156:  ENVIA_LCD_CMD(0x40+8*pos);
  1408  00287E  5006               	movf	GENERACARACTER@pos^(0+1280),w,c
  1409  002880  0D08               	mullw	8
  1410  002882  50F3               	movf	243,w,c
  1411  002884  0F40               	addlw	64
  1412  002886  ECE8  F014         	call	_ENVIA_LCD_CMD
  1413  00288A                     
  1414                           ;LCD.c: 157:  for(i=0;i<8;i++)
  1415  00288A  0E00               	movlw	0
  1416  00288C  6E07               	movwf	GENERACARACTER@i^(0+1280),c
  1417  00288E                     l1279:
  1418                           
  1419                           ;LCD.c: 158:  {;LCD.c: 159:   ENVIA_CHAR(vector[i]);
  1420  00288E  5007               	movf	GENERACARACTER@i^(0+1280),w,c
  1421  002890  2404               	addwf	GENERACARACTER@vector^(0+1280),w,c
  1422  002892  6ED9               	movwf	fsr2l,c
  1423  002894  0E00               	movlw	0
  1424  002896  2005               	addwfc	(GENERACARACTER@vector+1)^(0+1280),w,c
  1425  002898  6EDA               	movwf	fsr2h,c
  1426  00289A  50DF               	movf	indf2,w,c
  1427  00289C  ECCE  F014         	call	_ENVIA_CHAR
  1428  0028A0                     
  1429                           ;LCD.c: 160:  }
  1430  0028A0  2A07               	incf	GENERACARACTER@i^(0+1280),f,c
  1431  0028A2  0E07               	movlw	7
  1432  0028A4  6407               	cpfsgt	GENERACARACTER@i^(0+1280),c
  1433  0028A6  EF57  F014         	goto	u421
  1434  0028AA  EF59  F014         	goto	u420
  1435  0028AE                     u421:
  1436  0028AE  EF47  F014         	goto	l1279
  1437  0028B2                     u420:
  1438  0028B2                     
  1439                           ;LCD.c: 161:  ENVIA_LCD_CMD(0x80);
  1440  0028B2  0E80               	movlw	128
  1441  0028B4  ECE8  F014         	call	_ENVIA_LCD_CMD
  1442  0028B8  0012               	return		;funcret
  1443  0028BA                     __end_of_GENERACARACTER:
  1444                           	callstack 0
  1445                           
  1446 ;; *************** function _ENVIA_CHAR *****************
  1447 ;; Defined at:
  1448 ;;		line 50 in file "LCD.c"
  1449 ;; Parameters:    Size  Location     Type
  1450 ;;  dato            1    wreg     unsigned char 
  1451 ;; Auto vars:     Size  Location     Type
  1452 ;;  dato            1    1[COMRAM] unsigned char 
  1453 ;;  aux             1    2[COMRAM] unsigned char 
  1454 ;; Return value:  Size  Location     Type
  1455 ;;                  1    wreg      void 
  1456 ;; Registers used:
  1457 ;;		wreg, status,2, status,0, cstack
  1458 ;; Tracked objects:
  1459 ;;		On entry : 0/0
  1460 ;;		On exit  : 0/0
  1461 ;;		Unchanged: 0/0
  1462 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1463 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1464 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1465 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1466 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1467 ;;Total ram usage:        2 bytes
  1468 ;; Hardware stack levels used: 1
  1469 ;; Hardware stack levels required when called: 1
  1470 ;; This function calls:
  1471 ;;		_ENVIA_NIBBLE
  1472 ;;		_LEER_LCD
  1473 ;; This function is called by:
  1474 ;;		_ESCRIBE_MENSAJE
  1475 ;;		_GENERACARACTER
  1476 ;;		_vis_camote
  1477 ;;		_vis_primeralinea
  1478 ;; This function uses a non-reentrant model
  1479 ;;
  1480                           
  1481                           	psect	text12
  1482  00299C                     __ptext12:
  1483                           	callstack 0
  1484  00299C                     _ENVIA_CHAR:
  1485                           	callstack 123
  1486                           
  1487                           ;incstack = 0
  1488                           ;ENVIA_CHAR@dato stored from wreg
  1489  00299C  6E02               	movwf	ENVIA_CHAR@dato^(0+1280),c
  1490  00299E                     
  1491                           ;LCD.c: 50: void ENVIA_CHAR(unsigned char dato);LCD.c: 51: {;LCD.c: 52:  unsigned char a
      +                          ux;;LCD.c: 53:  LATDbits.LATD0 = 1;
  1492  00299E  80C1               	bsf	193,0,c	;volatile
  1493  0029A0                     
  1494                           ;LCD.c: 54:  LEER_LCD();
  1495  0029A0  EC86  F013         	call	_LEER_LCD	;wreg free
  1496  0029A4                     
  1497                           ;LCD.c: 55:  TRISD = 0x00;
  1498  0029A4  0E00               	movlw	0
  1499  0029A6  6EC9               	movwf	201,c	;volatile
  1500  0029A8                     
  1501                           ;LCD.c: 56:         _delay(1200);
  1502  0029A8  0EF0               	movlw	240
  1503  0029AA                     u517:
  1504  0029AA  D000               	nop2	
  1505  0029AC  2EE8               	decfsz	wreg,f,c
  1506  0029AE  D7FD               	bra	u517
  1507  0029B0                     
  1508                           ;LCD.c: 58:  LATDbits.LATD1 = 0;
  1509  0029B0  92C1               	bcf	193,1,c	;volatile
  1510  0029B2                     
  1511                           ;LCD.c: 59:  LATDbits.LATD2 = 0;
  1512  0029B2  94C1               	bcf	193,2,c	;volatile
  1513  0029B4                     
  1514                           ;LCD.c: 60:  LATDbits.LATD0 = 1;
  1515  0029B4  80C1               	bsf	193,0,c	;volatile
  1516  0029B6                     
  1517                           ;LCD.c: 61:  aux = dato & 0xF0;
  1518  0029B6  5002               	movf	ENVIA_CHAR@dato^(0+1280),w,c
  1519  0029B8  0BF0               	andlw	240
  1520  0029BA  6E03               	movwf	ENVIA_CHAR@aux^(0+1280),c
  1521  0029BC                     
  1522                           ;LCD.c: 62:  ENVIA_NIBBLE(aux);
  1523  0029BC  5003               	movf	ENVIA_CHAR@aux^(0+1280),w,c
  1524  0029BE  EC44  F015         	call	_ENVIA_NIBBLE
  1525  0029C2                     
  1526                           ;LCD.c: 63:  aux = dato << 4;
  1527  0029C2  3802               	swapf	ENVIA_CHAR@dato^(0+1280),w,c
  1528  0029C4  0BF0               	andlw	240
  1529  0029C6  6E03               	movwf	ENVIA_CHAR@aux^(0+1280),c
  1530  0029C8                     
  1531                           ;LCD.c: 64:  ENVIA_NIBBLE(aux);
  1532  0029C8  5003               	movf	ENVIA_CHAR@aux^(0+1280),w,c
  1533  0029CA  EC44  F015         	call	_ENVIA_NIBBLE
  1534  0029CE  0012               	return		;funcret
  1535  0029D0                     __end_of_ENVIA_CHAR:
  1536                           	callstack 0
  1537                           
  1538 ;; *************** function _CURSOR_ONOFF *****************
  1539 ;; Defined at:
  1540 ;;		line 35 in file "LCD.c"
  1541 ;; Parameters:    Size  Location     Type
  1542 ;;  estado          1    wreg     unsigned char 
  1543 ;; Auto vars:     Size  Location     Type
  1544 ;;  estado          1    3[COMRAM] unsigned char 
  1545 ;; Return value:  Size  Location     Type
  1546 ;;                  1    wreg      void 
  1547 ;; Registers used:
  1548 ;;		wreg, status,2, status,0, cstack
  1549 ;; Tracked objects:
  1550 ;;		On entry : 0/0
  1551 ;;		On exit  : 0/0
  1552 ;;		Unchanged: 0/0
  1553 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1554 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1555 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1556 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1557 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1558 ;;Total ram usage:        1 bytes
  1559 ;; Hardware stack levels used: 1
  1560 ;; Hardware stack levels required when called: 2
  1561 ;; This function calls:
  1562 ;;		_ENVIA_LCD_CMD
  1563 ;; This function is called by:
  1564 ;;		_LCD_Init
  1565 ;; This function uses a non-reentrant model
  1566 ;;
  1567                           
  1568                           	psect	text13
  1569  002A04                     __ptext13:
  1570                           	callstack 0
  1571  002A04                     _CURSOR_ONOFF:
  1572                           	callstack 123
  1573                           
  1574                           ;incstack = 0
  1575                           ;CURSOR_ONOFF@estado stored from wreg
  1576  002A04  6E04               	movwf	CURSOR_ONOFF@estado^(0+1280),c
  1577  002A06                     
  1578                           ;LCD.c: 35: void CURSOR_ONOFF(unsigned char estado);LCD.c: 36: {;LCD.c: 37:  if(estado =
      +                          = 0) ENVIA_LCD_CMD(0x0E);
  1579  002A06  5004               	movf	CURSOR_ONOFF@estado^(0+1280),w,c
  1580  002A08  A4D8               	btfss	status,2,c
  1581  002A0A  EF09  F015         	goto	u161
  1582  002A0E  EF0B  F015         	goto	u160
  1583  002A12                     u161:
  1584  002A12  EF0E  F015         	goto	l1023
  1585  002A16                     u160:
  1586  002A16  0E0E               	movlw	14
  1587  002A18  ECE8  F014         	call	_ENVIA_LCD_CMD
  1588  002A1C                     l1023:
  1589                           
  1590                           ;LCD.c: 38:  if(estado == 1) ENVIA_LCD_CMD(0x0C);
  1591  002A1C  0404               	decf	CURSOR_ONOFF@estado^(0+1280),w,c
  1592  002A1E  A4D8               	btfss	status,2,c
  1593  002A20  EF14  F015         	goto	u171
  1594  002A24  EF16  F015         	goto	u170
  1595  002A28                     u171:
  1596  002A28  EF19  F015         	goto	l42
  1597  002A2C                     u170:
  1598  002A2C  0E0C               	movlw	12
  1599  002A2E  ECE8  F014         	call	_ENVIA_LCD_CMD
  1600  002A32                     l42:
  1601  002A32  0012               	return		;funcret
  1602  002A34                     __end_of_CURSOR_ONOFF:
  1603                           	callstack 0
  1604                           
  1605 ;; *************** function _CURSOR_HOME *****************
  1606 ;; Defined at:
  1607 ;;		line 30 in file "LCD.c"
  1608 ;; Parameters:    Size  Location     Type
  1609 ;;		None
  1610 ;; Auto vars:     Size  Location     Type
  1611 ;;		None
  1612 ;; Return value:  Size  Location     Type
  1613 ;;                  1    wreg      void 
  1614 ;; Registers used:
  1615 ;;		wreg, status,2, status,0, cstack
  1616 ;; Tracked objects:
  1617 ;;		On entry : 0/0
  1618 ;;		On exit  : 0/0
  1619 ;;		Unchanged: 0/0
  1620 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1621 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1622 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1623 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1624 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1625 ;;Total ram usage:        0 bytes
  1626 ;; Hardware stack levels used: 1
  1627 ;; Hardware stack levels required when called: 2
  1628 ;; This function calls:
  1629 ;;		_ENVIA_LCD_CMD
  1630 ;; This function is called by:
  1631 ;;		_LCD_Init
  1632 ;; This function uses a non-reentrant model
  1633 ;;
  1634                           
  1635                           	psect	text14
  1636  002AAC                     __ptext14:
  1637                           	callstack 0
  1638  002AAC                     _CURSOR_HOME:
  1639                           	callstack 123
  1640  002AAC                     
  1641                           ;LCD.c: 32:  ENVIA_LCD_CMD(0x02);
  1642  002AAC  0E02               	movlw	2
  1643  002AAE  ECE8  F014         	call	_ENVIA_LCD_CMD
  1644  002AB2  0012               	return		;funcret
  1645  002AB4                     __end_of_CURSOR_HOME:
  1646                           	callstack 0
  1647                           
  1648 ;; *************** function _BORRAR_LCD *****************
  1649 ;; Defined at:
  1650 ;;		line 67 in file "LCD.c"
  1651 ;; Parameters:    Size  Location     Type
  1652 ;;		None
  1653 ;; Auto vars:     Size  Location     Type
  1654 ;;		None
  1655 ;; Return value:  Size  Location     Type
  1656 ;;                  1    wreg      void 
  1657 ;; Registers used:
  1658 ;;		wreg, status,2, status,0, cstack
  1659 ;; Tracked objects:
  1660 ;;		On entry : 0/0
  1661 ;;		On exit  : 0/0
  1662 ;;		Unchanged: 0/0
  1663 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1664 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1665 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1666 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1667 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1668 ;;Total ram usage:        0 bytes
  1669 ;; Hardware stack levels used: 1
  1670 ;; Hardware stack levels required when called: 2
  1671 ;; This function calls:
  1672 ;;		_ENVIA_LCD_CMD
  1673 ;; This function is called by:
  1674 ;;		_LCD_Init
  1675 ;; This function uses a non-reentrant model
  1676 ;;
  1677                           
  1678                           	psect	text15
  1679  002AB4                     __ptext15:
  1680                           	callstack 0
  1681  002AB4                     _BORRAR_LCD:
  1682                           	callstack 123
  1683  002AB4                     
  1684                           ;LCD.c: 69:  ENVIA_LCD_CMD(0x01);
  1685  002AB4  0E01               	movlw	1
  1686  002AB6  ECE8  F014         	call	_ENVIA_LCD_CMD
  1687  002ABA  0012               	return		;funcret
  1688  002ABC                     __end_of_BORRAR_LCD:
  1689                           	callstack 0
  1690                           
  1691 ;; *************** function _ENVIA_LCD_CMD *****************
  1692 ;; Defined at:
  1693 ;;		line 104 in file "LCD.c"
  1694 ;; Parameters:    Size  Location     Type
  1695 ;;  dato            1    wreg     unsigned char 
  1696 ;; Auto vars:     Size  Location     Type
  1697 ;;  dato            1    1[COMRAM] unsigned char 
  1698 ;;  aux             1    2[COMRAM] unsigned char 
  1699 ;; Return value:  Size  Location     Type
  1700 ;;                  1    wreg      void 
  1701 ;; Registers used:
  1702 ;;		wreg, status,2, status,0, cstack
  1703 ;; Tracked objects:
  1704 ;;		On entry : 0/0
  1705 ;;		On exit  : 0/0
  1706 ;;		Unchanged: 0/0
  1707 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1708 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1709 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1710 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1711 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1712 ;;Total ram usage:        2 bytes
  1713 ;; Hardware stack levels used: 1
  1714 ;; Hardware stack levels required when called: 1
  1715 ;; This function calls:
  1716 ;;		_ENVIA_NIBBLE
  1717 ;;		_LEER_LCD
  1718 ;; This function is called by:
  1719 ;;		_POS_CURSOR
  1720 ;;		_CURSOR_HOME
  1721 ;;		_CURSOR_ONOFF
  1722 ;;		_BORRAR_LCD
  1723 ;;		_LCD_CONFIG
  1724 ;;		_GENERACARACTER
  1725 ;;		_BLINK_CURSOR
  1726 ;;		_DISPLAY_ONOFF
  1727 ;; This function uses a non-reentrant model
  1728 ;;
  1729                           
  1730                           	psect	text16
  1731  0029D0                     __ptext16:
  1732                           	callstack 0
  1733  0029D0                     _ENVIA_LCD_CMD:
  1734                           	callstack 123
  1735                           
  1736                           ;incstack = 0
  1737                           ;ENVIA_LCD_CMD@dato stored from wreg
  1738  0029D0  6E02               	movwf	ENVIA_LCD_CMD@dato^(0+1280),c
  1739  0029D2                     
  1740                           ;LCD.c: 104: void ENVIA_LCD_CMD(unsigned char dato);LCD.c: 105: {;LCD.c: 106:  unsigned 
      +                          char aux;;LCD.c: 107:  LATDbits.LATD0 = 0;
  1741  0029D2  90C1               	bcf	193,0,c	;volatile
  1742  0029D4                     
  1743                           ;LCD.c: 108:  LEER_LCD();
  1744  0029D4  EC86  F013         	call	_LEER_LCD	;wreg free
  1745  0029D8                     
  1746                           ;LCD.c: 109:  TRISD = 0b00000000;
  1747  0029D8  0E00               	movlw	0
  1748  0029DA  6EC9               	movwf	201,c	;volatile
  1749  0029DC                     
  1750                           ;LCD.c: 111:         _delay(1200);
  1751  0029DC  0EF0               	movlw	240
  1752  0029DE                     u527:
  1753  0029DE  D000               	nop2	
  1754  0029E0  2EE8               	decfsz	wreg,f,c
  1755  0029E2  D7FD               	bra	u527
  1756  0029E4                     
  1757                           ;LCD.c: 112:         LATDbits.LATD1 = 0;
  1758  0029E4  92C1               	bcf	193,1,c	;volatile
  1759  0029E6                     
  1760                           ;LCD.c: 113:  LATDbits.LATD2 = 0;
  1761  0029E6  94C1               	bcf	193,2,c	;volatile
  1762  0029E8                     
  1763                           ;LCD.c: 114:  LATDbits.LATD0 = 0;
  1764  0029E8  90C1               	bcf	193,0,c	;volatile
  1765  0029EA                     
  1766                           ;LCD.c: 115:  aux = dato & 0xF0;
  1767  0029EA  5002               	movf	ENVIA_LCD_CMD@dato^(0+1280),w,c
  1768  0029EC  0BF0               	andlw	240
  1769  0029EE  6E03               	movwf	ENVIA_LCD_CMD@aux^(0+1280),c
  1770  0029F0                     
  1771                           ;LCD.c: 116:  ENVIA_NIBBLE(aux);
  1772  0029F0  5003               	movf	ENVIA_LCD_CMD@aux^(0+1280),w,c
  1773  0029F2  EC44  F015         	call	_ENVIA_NIBBLE
  1774  0029F6                     
  1775                           ;LCD.c: 117:  aux = dato<<4;
  1776  0029F6  3802               	swapf	ENVIA_LCD_CMD@dato^(0+1280),w,c
  1777  0029F8  0BF0               	andlw	240
  1778  0029FA  6E03               	movwf	ENVIA_LCD_CMD@aux^(0+1280),c
  1779  0029FC                     
  1780                           ;LCD.c: 118:  ENVIA_NIBBLE(aux);
  1781  0029FC  5003               	movf	ENVIA_LCD_CMD@aux^(0+1280),w,c
  1782  0029FE  EC44  F015         	call	_ENVIA_NIBBLE
  1783  002A02  0012               	return		;funcret
  1784  002A04                     __end_of_ENVIA_LCD_CMD:
  1785                           	callstack 0
  1786                           
  1787 ;; *************** function _LEER_LCD *****************
  1788 ;; Defined at:
  1789 ;;		line 121 in file "LCD.c"
  1790 ;; Parameters:    Size  Location     Type
  1791 ;;		None
  1792 ;; Auto vars:     Size  Location     Type
  1793 ;;  aux             1    0[COMRAM] unsigned char 
  1794 ;; Return value:  Size  Location     Type
  1795 ;;                  1    wreg      void 
  1796 ;; Registers used:
  1797 ;;		wreg, status,2, status,0
  1798 ;; Tracked objects:
  1799 ;;		On entry : 0/0
  1800 ;;		On exit  : 0/0
  1801 ;;		Unchanged: 0/0
  1802 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1803 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1804 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1805 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1806 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1807 ;;Total ram usage:        1 bytes
  1808 ;; Hardware stack levels used: 1
  1809 ;; This function calls:
  1810 ;;		Nothing
  1811 ;; This function is called by:
  1812 ;;		_ENVIA_CHAR
  1813 ;;		_ENVIA_LCD_CMD
  1814 ;; This function uses a non-reentrant model
  1815 ;;
  1816                           
  1817                           	psect	text17
  1818  00270C                     __ptext17:
  1819                           	callstack 0
  1820  00270C                     _LEER_LCD:
  1821                           	callstack 123
  1822  00270C                     
  1823                           ;LCD.c: 123:  unsigned char aux;;LCD.c: 124:  TRISD = 0xF8;
  1824  00270C  0EF8               	movlw	248
  1825  00270E  6EC9               	movwf	201,c	;volatile
  1826  002710                     
  1827                           ;LCD.c: 125:  LATDbits.LATD0 = 0;
  1828  002710  90C1               	bcf	193,0,c	;volatile
  1829  002712                     
  1830                           ;LCD.c: 126:  LATDbits.LATD1 = 1;
  1831  002712  82C1               	bsf	193,1,c	;volatile
  1832  002714                     
  1833                           ;LCD.c: 127:  LATDbits.LATD2 = 1;
  1834  002714  84C1               	bsf	193,2,c	;volatile
  1835  002716                     
  1836                           ;LCD.c: 128:         _delay(1200);
  1837  002716  0EF0               	movlw	240
  1838  002718                     u537:
  1839  002718  D000               	nop2	
  1840  00271A  2EE8               	decfsz	wreg,f,c
  1841  00271C  D7FD               	bra	u537
  1842  00271E                     
  1843                           ;LCD.c: 130:  aux = PORTD;
  1844  00271E  0061 F344  F501    	movff	1233,LEER_LCD@aux	;volatile
  1845  002724                     
  1846                           ;LCD.c: 131:  LATDbits.LATD2 = 0;
  1847  002724  94C1               	bcf	193,2,c	;volatile
  1848  002726                     
  1849                           ;LCD.c: 132:         _delay(1200);
  1850  002726  0EF0               	movlw	240
  1851  002728                     u547:
  1852  002728  D000               	nop2	
  1853  00272A  2EE8               	decfsz	wreg,f,c
  1854  00272C  D7FD               	bra	u547
  1855  00272E                     
  1856                           ;LCD.c: 134:  LATDbits.LATD2 = 1;
  1857  00272E  84C1               	bsf	193,2,c	;volatile
  1858  002730                     
  1859                           ;LCD.c: 135:         _delay(1200);
  1860  002730  0EF0               	movlw	240
  1861  002732                     u557:
  1862  002732  D000               	nop2	
  1863  002734  2EE8               	decfsz	wreg,f,c
  1864  002736  D7FD               	bra	u557
  1865  002738                     
  1866                           ;LCD.c: 137:  LATDbits.LATD2 = 0;
  1867  002738  94C1               	bcf	193,2,c	;volatile
  1868  00273A                     l861:
  1869                           
  1870                           ;LCD.c: 138:  aux = aux & 0x80;
  1871  00273A  5001               	movf	LEER_LCD@aux^(0+1280),w,c
  1872  00273C  0B80               	andlw	128
  1873  00273E  6E01               	movwf	LEER_LCD@aux^(0+1280),c
  1874                           
  1875                           ;LCD.c: 139:  while(aux == 0x80)
  1876  002740  EFB7  F013         	goto	l875
  1877  002744                     l67:
  1878                           
  1879                           ;LCD.c: 140:         {;LCD.c: 141:             LATDbits.LATD2 = 1;
  1880  002744  84C1               	bsf	193,2,c	;volatile
  1881  002746                     
  1882                           ;LCD.c: 142:             _delay(1200);
  1883  002746  0EF0               	movlw	240
  1884  002748                     u567:
  1885  002748  D000               	nop2	
  1886  00274A  2EE8               	decfsz	wreg,f,c
  1887  00274C  D7FD               	bra	u567
  1888  00274E                     
  1889                           ;LCD.c: 143:             aux = PORTD;
  1890  00274E  0061 F344  F501    	movff	1233,LEER_LCD@aux	;volatile
  1891  002754                     
  1892                           ;LCD.c: 144:             LATDbits.LATD2 = 0;
  1893  002754  94C1               	bcf	193,2,c	;volatile
  1894                           
  1895                           ;LCD.c: 145:             _delay(1200);
  1896  002756  0EF0               	movlw	240
  1897  002758                     u577:
  1898  002758  D000               	nop2	
  1899  00275A  2EE8               	decfsz	wreg,f,c
  1900  00275C  D7FD               	bra	u577
  1901  00275E                     
  1902                           ;LCD.c: 146:             LATDbits.LATD2 = 1;
  1903  00275E  84C1               	bsf	193,2,c	;volatile
  1904                           
  1905                           ;LCD.c: 147:             _delay(1200);
  1906  002760  0EF0               	movlw	240
  1907  002762                     u587:
  1908  002762  D000               	nop2	
  1909  002764  2EE8               	decfsz	wreg,f,c
  1910  002766  D7FD               	bra	u587
  1911  002768                     
  1912                           ;LCD.c: 148:             LATDbits.LATD2 = 0;
  1913  002768  94C1               	bcf	193,2,c	;volatile
  1914  00276A  EF9D  F013         	goto	l861
  1915  00276E                     l875:
  1916                           
  1917                           ;LCD.c: 139:  while(aux == 0x80)
  1918  00276E  0E80               	movlw	128
  1919  002770  1801               	xorwf	LEER_LCD@aux^(0+1280),w,c
  1920  002772  B4D8               	btfsc	status,2,c
  1921  002774  EFBE  F013         	goto	u11
  1922  002778  EFC0  F013         	goto	u10
  1923  00277C                     u11:
  1924  00277C  EFA2  F013         	goto	l67
  1925  002780                     u10:
  1926  002780  0012               	return		;funcret
  1927  002782                     __end_of_LEER_LCD:
  1928                           	callstack 0
  1929                           
  1930 ;; *************** function _ENVIA_NIBBLE *****************
  1931 ;; Defined at:
  1932 ;;		line 93 in file "LCD.c"
  1933 ;; Parameters:    Size  Location     Type
  1934 ;;  dato            1    wreg     unsigned char 
  1935 ;; Auto vars:     Size  Location     Type
  1936 ;;  dato            1    0[COMRAM] unsigned char 
  1937 ;; Return value:  Size  Location     Type
  1938 ;;                  1    wreg      void 
  1939 ;; Registers used:
  1940 ;;		wreg, status,2, status,0
  1941 ;; Tracked objects:
  1942 ;;		On entry : 0/0
  1943 ;;		On exit  : 0/0
  1944 ;;		Unchanged: 0/0
  1945 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1946 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1947 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1948 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1949 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1950 ;;Total ram usage:        1 bytes
  1951 ;; Hardware stack levels used: 1
  1952 ;; This function calls:
  1953 ;;		Nothing
  1954 ;; This function is called by:
  1955 ;;		_ENVIA_CHAR
  1956 ;;		_LCD_CONFIG
  1957 ;;		_ENVIA_LCD_CMD
  1958 ;; This function uses a non-reentrant model
  1959 ;;
  1960                           
  1961                           	psect	text18
  1962  002A88                     __ptext18:
  1963                           	callstack 0
  1964  002A88                     _ENVIA_NIBBLE:
  1965                           	callstack 123
  1966                           
  1967                           ;incstack = 0
  1968                           ;ENVIA_NIBBLE@dato stored from wreg
  1969  002A88  6E01               	movwf	ENVIA_NIBBLE@dato^(0+1280),c
  1970  002A8A                     
  1971                           ;LCD.c: 93: void ENVIA_NIBBLE(unsigned char dato);LCD.c: 94: {;LCD.c: 95:  LATD &= 0x0F;
  1972  002A8A  0E0F               	movlw	15
  1973  002A8C  16C1               	andwf	193,f,c	;volatile
  1974                           
  1975                           ;LCD.c: 96:  dato &= 0xF0;
  1976  002A8E  0EF0               	movlw	240
  1977  002A90  1601               	andwf	ENVIA_NIBBLE@dato^(0+1280),f,c
  1978                           
  1979                           ;LCD.c: 97:  LATD|= dato;
  1980  002A92  5001               	movf	ENVIA_NIBBLE@dato^(0+1280),w,c	;volatile
  1981  002A94  12C1               	iorwf	193,f,c	;volatile
  1982  002A96                     
  1983                           ;LCD.c: 98:  LATDbits.LATD2 = 1;
  1984  002A96  84C1               	bsf	193,2,c	;volatile
  1985  002A98                     
  1986                           ;LCD.c: 100:         _delay(1200);
  1987  002A98  0EF0               	movlw	240
  1988  002A9A                     u597:
  1989  002A9A  D000               	nop2	
  1990  002A9C  2EE8               	decfsz	wreg,f,c
  1991  002A9E  D7FD               	bra	u597
  1992  002AA0                     
  1993                           ;LCD.c: 101:  LATDbits.LATD2 = 0;
  1994  002AA0  94C1               	bcf	193,2,c	;volatile
  1995  002AA2  0012               	return		;funcret
  1996  002AA4                     __end_of_ENVIA_NIBBLE:
  1997                           	callstack 0
  1998                           
  1999                           	psect	rparam
  2000  0000                     
  2001                           	psect	idloc
  2002                           
  2003                           ;Config register IDLOC0 @ 0x200000
  2004                           ;	unspecified, using default values
  2005  200000                     	org	2097152
  2006  200000  0FFF               	dw	4095
  2007                           
  2008                           ;Config register IDLOC1 @ 0x200002
  2009                           ;	unspecified, using default values
  2010  200002                     	org	2097154
  2011  200002  0FFF               	dw	4095
  2012                           
  2013                           ;Config register IDLOC2 @ 0x200004
  2014                           ;	unspecified, using default values
  2015  200004                     	org	2097156
  2016  200004  0FFF               	dw	4095
  2017                           
  2018                           ;Config register IDLOC3 @ 0x200006
  2019                           ;	unspecified, using default values
  2020  200006                     	org	2097158
  2021  200006  0FFF               	dw	4095
  2022                           
  2023                           ;Config register IDLOC4 @ 0x200008
  2024                           ;	unspecified, using default values
  2025  200008                     	org	2097160
  2026  200008  0FFF               	dw	4095
  2027                           
  2028                           ;Config register IDLOC5 @ 0x20000A
  2029                           ;	unspecified, using default values
  2030  20000A                     	org	2097162
  2031  20000A  0FFF               	dw	4095
  2032                           
  2033                           ;Config register IDLOC6 @ 0x20000C
  2034                           ;	unspecified, using default values
  2035  20000C                     	org	2097164
  2036  20000C  0FFF               	dw	4095
  2037                           
  2038                           ;Config register IDLOC7 @ 0x20000E
  2039                           ;	unspecified, using default values
  2040  20000E                     	org	2097166
  2041  20000E  0FFF               	dw	4095
  2042                           
  2043                           ;Config register IDLOC8 @ 0x200010
  2044                           ;	unspecified, using default values
  2045  200010                     	org	2097168
  2046  200010  0FFF               	dw	4095
  2047                           
  2048                           ;Config register IDLOC9 @ 0x200012
  2049                           ;	unspecified, using default values
  2050  200012                     	org	2097170
  2051  200012  0FFF               	dw	4095
  2052                           
  2053                           ;Config register IDLOC10 @ 0x200014
  2054                           ;	unspecified, using default values
  2055  200014                     	org	2097172
  2056  200014  0FFF               	dw	4095
  2057                           
  2058                           ;Config register IDLOC11 @ 0x200016
  2059                           ;	unspecified, using default values
  2060  200016                     	org	2097174
  2061  200016  0FFF               	dw	4095
  2062                           
  2063                           ;Config register IDLOC12 @ 0x200018
  2064                           ;	unspecified, using default values
  2065  200018                     	org	2097176
  2066  200018  0FFF               	dw	4095
  2067                           
  2068                           ;Config register IDLOC13 @ 0x20001A
  2069                           ;	unspecified, using default values
  2070  20001A                     	org	2097178
  2071  20001A  0FFF               	dw	4095
  2072                           
  2073                           ;Config register IDLOC14 @ 0x20001C
  2074                           ;	unspecified, using default values
  2075  20001C                     	org	2097180
  2076  20001C  0FFF               	dw	4095
  2077                           
  2078                           ;Config register IDLOC15 @ 0x20001E
  2079                           ;	unspecified, using default values
  2080  20001E                     	org	2097182
  2081  20001E  0FFF               	dw	4095
  2082                           
  2083                           ;Config register IDLOC16 @ 0x200020
  2084                           ;	unspecified, using default values
  2085  200020                     	org	2097184
  2086  200020  0FFF               	dw	4095
  2087                           
  2088                           ;Config register IDLOC17 @ 0x200022
  2089                           ;	unspecified, using default values
  2090  200022                     	org	2097186
  2091  200022  0FFF               	dw	4095
  2092                           
  2093                           ;Config register IDLOC18 @ 0x200024
  2094                           ;	unspecified, using default values
  2095  200024                     	org	2097188
  2096  200024  0FFF               	dw	4095
  2097                           
  2098                           ;Config register IDLOC19 @ 0x200026
  2099                           ;	unspecified, using default values
  2100  200026                     	org	2097190
  2101  200026  0FFF               	dw	4095
  2102                           
  2103                           ;Config register IDLOC20 @ 0x200028
  2104                           ;	unspecified, using default values
  2105  200028                     	org	2097192
  2106  200028  0FFF               	dw	4095
  2107                           
  2108                           ;Config register IDLOC21 @ 0x20002A
  2109                           ;	unspecified, using default values
  2110  20002A                     	org	2097194
  2111  20002A  0FFF               	dw	4095
  2112                           
  2113                           ;Config register IDLOC22 @ 0x20002C
  2114                           ;	unspecified, using default values
  2115  20002C                     	org	2097196
  2116  20002C  0FFF               	dw	4095
  2117                           
  2118                           ;Config register IDLOC23 @ 0x20002E
  2119                           ;	unspecified, using default values
  2120  20002E                     	org	2097198
  2121  20002E  0FFF               	dw	4095
  2122                           
  2123                           ;Config register IDLOC24 @ 0x200030
  2124                           ;	unspecified, using default values
  2125  200030                     	org	2097200
  2126  200030  0FFF               	dw	4095
  2127                           
  2128                           ;Config register IDLOC25 @ 0x200032
  2129                           ;	unspecified, using default values
  2130  200032                     	org	2097202
  2131  200032  0FFF               	dw	4095
  2132                           
  2133                           ;Config register IDLOC26 @ 0x200034
  2134                           ;	unspecified, using default values
  2135  200034                     	org	2097204
  2136  200034  0FFF               	dw	4095
  2137                           
  2138                           ;Config register IDLOC27 @ 0x200036
  2139                           ;	unspecified, using default values
  2140  200036                     	org	2097206
  2141  200036  0FFF               	dw	4095
  2142                           
  2143                           ;Config register IDLOC28 @ 0x200038
  2144                           ;	unspecified, using default values
  2145  200038                     	org	2097208
  2146  200038  0FFF               	dw	4095
  2147                           
  2148                           ;Config register IDLOC29 @ 0x20003A
  2149                           ;	unspecified, using default values
  2150  20003A                     	org	2097210
  2151  20003A  0FFF               	dw	4095
  2152                           
  2153                           ;Config register IDLOC30 @ 0x20003C
  2154                           ;	unspecified, using default values
  2155  20003C                     	org	2097212
  2156  20003C  0FFF               	dw	4095
  2157                           
  2158                           ;Config register IDLOC31 @ 0x20003E
  2159                           ;	unspecified, using default values
  2160  20003E                     	org	2097214
  2161  20003E  0FFF               	dw	4095
  2162                           
  2163                           	psect	config
  2164                           
  2165                           ;Config register CONFIG1 @ 0x300000
  2166                           ;	External Oscillator Selection
  2167                           ;	FEXTOSC = ECH, EC (external clock) above 8 MHz
  2168                           ;	Reset Oscillator Selection
  2169                           ;	RSTOSC = EXTOSC, EXTOSC operating per FEXTOSC bits (device manufacturing default)
  2170  300000                     	org	3145728
  2171  300000  FF                 	db	255
  2172                           
  2173                           ;Config register CONFIG2 @ 0x300001
  2174                           ;	Clock out Enable bit
  2175                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
  2176                           ;	PRLOCKED One-Way Set Enable bit
  2177                           ;	PR1WAY = ON, PRLOCKED bit can be cleared and set only once
  2178                           ;	Clock Switch Enable bit
  2179                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
  2180                           ;	Fail-Safe Clock Monitor Enable bit
  2181                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
  2182  300001                     	org	3145729
  2183  300001  FF                 	db	255
  2184                           
  2185                           ;Config register CONFIG3 @ 0x300002
  2186                           ;	MCLR Enable bit
  2187                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
  2188                           ;	Power-up timer selection bits
  2189                           ;	PWRTS = PWRT_16, PWRT set at 16ms
  2190                           ;	Multi-vector enable bit
  2191                           ;	MVECEN = OFF, Interrupt contoller does not use vector table to prioritze interrupts
  2192                           ;	IVTLOCK bit One-way set enable bit
  2193                           ;	IVT1WAY = ON, IVTLOCKED bit can be cleared and set only once
  2194                           ;	Low Power BOR Enable bit
  2195                           ;	LPBOREN = OFF, Low-Power BOR disabled
  2196                           ;	Brown-out Reset Enable bits
  2197                           ;	BOREN = OFF, Brown-out Reset disabled
  2198  300002                     	org	3145730
  2199  300002  33                 	db	51
  2200                           
  2201                           ;Config register CONFIG4 @ 0x300003
  2202                           ;	Brown-out Reset Voltage Selection bits
  2203                           ;	BORV = VBOR_1P9, Brown-out Reset Voltage (VBOR) set to 1.9V
  2204                           ;	ZCD Disable bit
  2205                           ;	ZCD = OFF, ZCD module is disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCD
      +                          CON
  2206                           ;	PPSLOCK bit One-Way Set Enable bit
  2207                           ;	PPS1WAY = ON, PPSLOCKED bit can be cleared and set only once; PPS registers remain loc
      +                          ked after one clear/set cycle
  2208                           ;	Stack Full/Underflow Reset Enable bit
  2209                           ;	STVREN = ON, Stack full/underflow will cause Reset
  2210                           ;	Low Voltage Programming Enable bit
  2211                           ;	LVP = OFF, HV on MCLR/VPP must be used for programming
  2212                           ;	Extended Instruction Set Enable bit
  2213                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
  2214  300003                     	org	3145731
  2215  300003  DF                 	db	223
  2216                           
  2217                           ;Config register CONFIG5 @ 0x300004
  2218                           ;	WDT Period selection bits
  2219                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  2220                           ;	WDT operating mode
  2221                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
  2222  300004                     	org	3145732
  2223  300004  9F                 	db	159
  2224                           
  2225                           ;Config register CONFIG6 @ 0x300005
  2226                           ;	WDT Window Select bits
  2227                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
  2228                           ;	WDT input clock selector
  2229                           ;	WDTCCS = SC, Software Control
  2230  300005                     	org	3145733
  2231  300005  FF                 	db	255
  2232                           
  2233                           ;Config register CONFIG7 @ 0x300006
  2234                           ;	Boot Block Size selection bits
  2235                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
  2236                           ;	Boot Block enable bit
  2237                           ;	BBEN = OFF, Boot block disabled
  2238                           ;	Storage Area Flash enable bit
  2239                           ;	SAFEN = OFF, SAF disabled
  2240                           ;	Background Debugger
  2241                           ;	DEBUG = OFF, Background Debugger disabled
  2242  300006                     	org	3145734
  2243  300006  FF                 	db	255
  2244                           
  2245                           ;Config register CONFIG8 @ 0x300007
  2246                           ;	Boot Block Write Protection bit
  2247                           ;	WRTB = OFF, Boot Block not Write protected
  2248                           ;	Configuration Register Write Protection bit
  2249                           ;	WRTC = OFF, Configuration registers not Write protected
  2250                           ;	Data EEPROM Write Protection bit
  2251                           ;	WRTD = OFF, Data EEPROM not Write protected
  2252                           ;	SAF Write protection bit
  2253                           ;	WRTSAF = OFF, SAF not Write Protected
  2254                           ;	Application Block write protection bit
  2255                           ;	WRTAPP = OFF, Application Block not write protected
  2256  300007                     	org	3145735
  2257  300007  FF                 	db	255
  2258                           
  2259                           ; Padding undefined space
  2260  300008                     	org	3145736
  2261  300008  FF                 	db	255
  2262                           
  2263                           ;Config register CONFIG10 @ 0x300009
  2264                           ;	PFM and Data EEPROM Code Protection bit
  2265                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
  2266  300009                     	org	3145737
  2267  300009  FF                 	db	255
  2268                           tosu	equ	0x4FF
  2269                           tosh	equ	0x4FE
  2270                           tosl	equ	0x4FD
  2271                           stkptr	equ	0x4FC
  2272                           pclatu	equ	0x4FB
  2273                           pclath	equ	0x4FA
  2274                           pcl	equ	0x4F9
  2275                           tblptru	equ	0x4F8
  2276                           tblptrh	equ	0x4F7
  2277                           tblptrl	equ	0x4F6
  2278                           tablat	equ	0x4F5
  2279                           prodh	equ	0x4F4
  2280                           prodl	equ	0x4F3
  2281                           indf0	equ	0x4EF
  2282                           postinc0	equ	0x4EE
  2283                           postdec0	equ	0x4ED
  2284                           preinc0	equ	0x4EC
  2285                           plusw0	equ	0x4EB
  2286                           fsr0h	equ	0x4EA
  2287                           fsr0l	equ	0x4E9
  2288                           wreg	equ	0x4E8
  2289                           indf1	equ	0x4E7
  2290                           postinc1	equ	0x4E6
  2291                           postdec1	equ	0x4E5
  2292                           preinc1	equ	0x4E4
  2293                           plusw1	equ	0x4E3
  2294                           fsr1h	equ	0x4E2
  2295                           fsr1l	equ	0x4E1
  2296                           bsr	equ	0x4E0
  2297                           indf2	equ	0x4DF
  2298                           postinc2	equ	0x4DE
  2299                           postdec2	equ	0x4DD
  2300                           preinc2	equ	0x4DC
  2301                           plusw2	equ	0x4DB
  2302                           fsr2h	equ	0x4DA
  2303                           fsr2l	equ	0x4D9
  2304                           status	equ	0x4D8

Data Sizes:
    Strings     23
    Constant    0
    Data        8
    BSS         5
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     17      30
    BANK5           160      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0
    BANK32          256      0       0
    BANK33          256      0       0
    BANK34          256      0       0
    BANK35          256      0       0
    BANK36          256      0       0

Pointer List with Targets:

    GENERACARACTER@vector	PTR const unsigned char  size(2) Largest target is 8
		 -> e_acento(COMRAM[8]), 

    ESCRIBE_MENSAJE@cadena	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_2(CODE[15]), STR_1(CODE[8]), 


Critical Paths under _main in COMRAM

    _vis_primeralinea->_ESCRIBE_MENSAJE
    _vis_camote->_convierte
    _convierte->___awdiv
    ___awdiv->___awmod
    _POS_CURSOR->_ENVIA_LCD_CMD
    _ESCRIBE_MENSAJE->_ENVIA_CHAR
    _LCD_Init->_GENERACARACTER
    _LCD_CONFIG->_ENVIA_LCD_CMD
    _GENERACARACTER->_ENVIA_CHAR
    _GENERACARACTER->_ENVIA_LCD_CMD
    _ENVIA_CHAR->_ENVIA_NIBBLE
    _ENVIA_CHAR->_LEER_LCD
    _CURSOR_ONOFF->_ENVIA_LCD_CMD
    _CURSOR_HOME->_ENVIA_LCD_CMD
    _BORRAR_LCD->_ENVIA_LCD_CMD
    _ENVIA_LCD_CMD->_ENVIA_NIBBLE
    _ENVIA_LCD_CMD->_LEER_LCD

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _main in BANK32

    None.

Critical Paths under _main in BANK33

    None.

Critical Paths under _main in BANK34

    None.

Critical Paths under _main in BANK35

    None.

Critical Paths under _main in BANK36

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    4289
                                             15 COMRAM     2     2      0
                           _LCD_Init
                          _configuro
                         _vis_camote
                   _vis_primeralinea
 ---------------------------------------------------------------------------------
 (1) _vis_primeralinea                                     0     0      0     995
                         _ENVIA_CHAR
                    _ESCRIBE_MENSAJE
                         _POS_CURSOR
 ---------------------------------------------------------------------------------
 (1) _vis_camote                                           0     0      0    2265
                         _ENVIA_CHAR
                    _ESCRIBE_MENSAJE
                         _POS_CURSOR
                          _convierte
 ---------------------------------------------------------------------------------
 (2) _convierte                                            1     1      0    1270
                                             14 COMRAM     1     1      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4     600
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     604
                                              6 COMRAM     8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _POS_CURSOR                                           2     1      1     360
                                              3 COMRAM     2     1      1
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _ESCRIBE_MENSAJE                                      6     3      3     515
                                              3 COMRAM     6     3      3
                         _ENVIA_CHAR
 ---------------------------------------------------------------------------------
 (1) _configuro                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             1     1      0    1029
                                              7 COMRAM     1     1      0
                         _BORRAR_LCD
                        _CURSOR_HOME
                       _CURSOR_ONOFF
                     _GENERACARACTER
                         _LCD_CONFIG
 ---------------------------------------------------------------------------------
 (2) _LCD_CONFIG                                           1     1      0     135
                                              3 COMRAM     1     1      0
                      _ENVIA_LCD_CMD
                       _ENVIA_NIBBLE
 ---------------------------------------------------------------------------------
 (2) _GENERACARACTER                                       4     1      3     504
                                              3 COMRAM     4     1      3
                         _ENVIA_CHAR
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (3) _ENVIA_CHAR                                           2     2      0     120
                                              1 COMRAM     2     2      0
                       _ENVIA_NIBBLE
                           _LEER_LCD
 ---------------------------------------------------------------------------------
 (2) _CURSOR_ONOFF                                         1     1      0     150
                                              3 COMRAM     1     1      0
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _CURSOR_HOME                                          0     0      0     120
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _BORRAR_LCD                                           0     0      0     120
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (3) _ENVIA_LCD_CMD                                        2     2      0     120
                                              1 COMRAM     2     2      0
                       _ENVIA_NIBBLE
                           _LEER_LCD
 ---------------------------------------------------------------------------------
 (4) _LEER_LCD                                             1     1      0      45
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _ENVIA_NIBBLE                                         1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_Init
     _BORRAR_LCD
       _ENVIA_LCD_CMD
         _ENVIA_NIBBLE
         _LEER_LCD
     _CURSOR_HOME
       _ENVIA_LCD_CMD
     _CURSOR_ONOFF
       _ENVIA_LCD_CMD
     _GENERACARACTER
       _ENVIA_CHAR
         _ENVIA_NIBBLE
         _LEER_LCD
       _ENVIA_LCD_CMD
     _LCD_CONFIG
       _ENVIA_LCD_CMD
       _ENVIA_NIBBLE
   _configuro
   _vis_camote
     _ENVIA_CHAR
     _ESCRIBE_MENSAJE
       _ENVIA_CHAR
     _POS_CURSOR
       _ENVIA_LCD_CMD
     _convierte
       ___awdiv
         ___awmod (ARG)
       ___awmod
   _vis_primeralinea
     _ENVIA_CHAR
     _ESCRIBE_MENSAJE
     _POS_CURSOR

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0       0      70        0.0%
EEDATA             400      0       0       0        0.0%
BITBIGSFRlhhhll    34C      0       0      79        0.0%
BITBIGSFR_1        100      0       0      69        0.0%
BITBANK36          100      0       0      67        0.0%
BANK36             100      0       0      68        0.0%
BITBANK35          100      0       0      65        0.0%
BANK35             100      0       0      66        0.0%
BITBANK34          100      0       0      63        0.0%
BANK34             100      0       0      64        0.0%
BITBANK33          100      0       0      61        0.0%
BANK33             100      0       0      62        0.0%
BITBANK32          100      0       0      59        0.0%
BANK32             100      0       0      60        0.0%
BITBANK31          100      0       0      56        0.0%
BANK31             100      0       0      57        0.0%
BITBANK30          100      0       0      54        0.0%
BANK30             100      0       0      55        0.0%
BITBANK29          100      0       0      52        0.0%
BANK29             100      0       0      53        0.0%
BITBANK28          100      0       0      50        0.0%
BANK28             100      0       0      51        0.0%
BITBANK27          100      0       0      48        0.0%
BANK27             100      0       0      49        0.0%
BITBANK26          100      0       0      46        0.0%
BANK26             100      0       0      47        0.0%
BITBANK25          100      0       0      44        0.0%
BANK25             100      0       0      45        0.0%
BITBANK24          100      0       0      42        0.0%
BANK24             100      0       0      43        0.0%
BITBANK23          100      0       0      40        0.0%
BANK23             100      0       0      41        0.0%
BITBANK22          100      0       0      38        0.0%
BANK22             100      0       0      39        0.0%
BITBANK21          100      0       0      36        0.0%
BANK21             100      0       0      37        0.0%
BITBANK20          100      0       0      34        0.0%
BANK20             100      0       0      35        0.0%
BITBANK19          100      0       0      32        0.0%
BANK19             100      0       0      33        0.0%
BITBANK18          100      0       0      30        0.0%
BANK18             100      0       0      31        0.0%
BITBANK17          100      0       0      28        0.0%
BANK17             100      0       0      29        0.0%
BITBANK16          100      0       0      26        0.0%
BANK16             100      0       0      27        0.0%
BITBANK15          100      0       0      24        0.0%
BANK15             100      0       0      25        0.0%
BITBANK14          100      0       0      22        0.0%
BANK14             100      0       0      23        0.0%
BITBANK13          100      0       0      20        0.0%
BANK13             100      0       0      21        0.0%
BITBANK12          100      0       0      18        0.0%
BANK12             100      0       0      19        0.0%
BITBANK11          100      0       0      16        0.0%
BANK11             100      0       0      17        0.0%
BITBANK10          100      0       0      14        0.0%
BANK10             100      0       0      15        0.0%
BITBANK9           100      0       0      12        0.0%
BANK9              100      0       0      13        0.0%
BITBANK8           100      0       0      10        0.0%
BANK8              100      0       0      11        0.0%
BITBANK7           100      0       0       8        0.0%
BANK7              100      0       0       9        0.0%
BITBANK6           100      0       0       6        0.0%
BANK6              100      0       0       7        0.0%
BITBIGSFRll         AD      0       0      82        0.0%
BITBANK5            A0      0       0       4        0.0%
BANK5               A0      0       0       5        0.0%
BITBIGSFRlhhhhh     9F      0       0      74        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     11      1E       1       31.6%
BITBIGSFRhhh        2E      0       0      71        0.0%
BITBIGSFRlhhhlh      7      0       0      76        0.0%
BITBIGSFRlhhhll      7      0       0      78        0.0%
BITBIGSFRlhhhhl      7      0       0      75        0.0%
BITBIGSFRlhhhlh      6      0       0      77        0.0%
BITBIGSFRhhl         6      0       0      72        0.0%
BITBIGSFRhll         4      0       0      73        0.0%
BITBIGSFRlhl         3      0       0      81        0.0%
BITBIGSFRlhhl        1      0       0      80        0.0%
BIGSFR_1             0      0       0     200        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      1E      58        0.0%
DATA                 0      0      1E       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Thu May 18 21:14:39 2023

                      l24 292C                        l42 2A32                        l51 29CE  
                      l60 2AA2                        l37 2AB2                        l54 2ABA  
                      l63 2A02                        l48 287C                        l57 27E0  
                      l74 28B8                        l67 2744                        l69 2780  
                      u10 2780                        u11 277C              ___awdiv@sign 050C  
           ENVIA_CHAR@aux 0503                       l140 299A                       l143 283A  
                     l137 2A5E                       l410 268C                       l146 28F2  
                     l149 2A86                       l901 29F0                       l397 25DC  
                     l903 29F6                       l911 29A4                       l841 2710  
                     l905 29FC                       l921 29B6                       l913 29A8  
                     l851 2724                       l843 2712                       l923 29BC  
                     l915 29B0                       l907 299E                       l861 273A  
                     l853 2726                       l845 2714                       l925 29C2  
                     l917 29B2                       l909 29A0                       l871 2768  
                     l863 2746                       l855 272E                       l847 2716  
                     l839 270C                       l927 29C8                       l919 29B4  
                     l881 2A98                       l865 274E                       l857 2730  
                     l849 271E                       l883 2AA0                       l867 2754  
                     l875 276E                       l859 2738                       l891 29DC  
                     l877 2A8A                       l869 275E                       l893 29E4  
                     l885 29D2                       l879 2A96                       l895 29E6  
                     l887 29D4                       l897 29E8                       l889 29D8  
                     l899 29EA                       u300 258A                       u301 2586  
                     u310 25A6                       u311 25A2                       u160 2A16  
                     u400 2924                       u320 25CC                       u161 2A12  
                     u401 2920                       u321 25C8                       u170 2A2C  
                     u410 287C                       u330 25F0                       u171 2A28  
                     u411 2878                       u331 25EC                       u420 28B2  
                     u340 260A                       u421 28AE                       u341 2606  
                     u270 252C                       u350 2624                       u430 26AA  
                     u271 2528                       u351 2620                       u431 26A6  
                     u280 2546                       u360 2642                       u440 26BC  
                     u281 2542                       u361 263E                       u441 26B8  
                     u290 256C                       u370 2658                       u450 26F2  
                     u507 27B0                       u291 2568                       u371 2654  
                     u451 26EE                       u380 267C                       u517 29AA  
                     u381 2678                       u390 2906                       u527 29DE  
                     u391 2902                       u537 2718                       u547 2728  
                     u467 26D0                       u557 2732                       u477 296C  
                     u567 2748                       u487 2792                       u577 2758  
                     u497 27A0                       u587 2762                       u597 2A9A  
                     _ind 051A              ___awmod@sign 0506               LEER_LCD@aux 0501  
                     wreg 0004E8  __end_of_vis_primeralinea 2A88              ?_CURSOR_HOME 0501  
          ??_ENVIA_NIBBLE 0501            ENVIA_CHAR@dato 0502                      l1021 2A16  
                    l1023 2A1C                      l1017 2AAC                      l1025 2A2C  
                    l1041 278C                      l1201 2590                      l1035 2AB4  
                    l1019 2A06                      l1051 27C2                      l1043 279A  
                    l1203 25A6                      l1211 25BC                      l1053 27C8  
                    l1045 27AE                      l1037 2782                      l1301 298A  
                    l1213 25CC                      l1205 25AE                      l1221 25E2  
                    l1055 27CE                      l1047 27B6                      l1039 2786  
                    l1215 25D4                      l1207 25B0                      l1231 2612  
                    l1223 25F0                      l1311 28E2                      l1303 28BA  
                    l1057 27D4                      l1049 27BC                      l1081 2A4C  
                    l1209 25B6                      l1241 2658                      l1233 2624  
                    l1225 25F8                      l1313 28EA                      l1305 28C4  
                    l1321 2A80                      l1059 27DA                      l1091 2A56  
                    l1083 2A4E                      l1251 2684                      l1243 2660  
                    l1235 262C                      l1227 25FC                      l1219 25DE  
                    l1307 28D4                      l1315 2A60                      l1331 26AA  
                    l1323 268E                      l1093 2A58                      l1085 2A50  
                    l1261 2924                      l1181 2534                      l1245 2666  
                    l1237 2634                      l1229 260A                      l1309 28DA  
                    l1317 2A6A                      l1341 26F2                      l1333 26BC  
                    l1325 2692                      l1271 287E                      l1095 2A5A  
                    l1087 2A52                      l1079 2A34                      l1263 283C  
                    l1255 28F6                      l1191 255A                      l1183 2538  
                    l1175 251A                      l1239 2642                      l1247 266C  
                    l1319 2A7A                      l1343 26FA                      l1335 26C4  
                    l1327 2696                      l1281 28A0                      l1273 288A  
                    l1097 2A5C                      l1089 2A54                      l1265 2848  
                    l1257 2906                      l1193 256C                      l1185 2546  
                    l1177 251E                      l1249 267C                      l1337 26C6  
                    l1329 269A                      l1283 28A2                      l1291 2976  
                    l1267 2868                      l1259 2912                      l1195 2574  
                    l1187 254E                      l1179 252C                      l1347 2700  
                    l1339 26E2                      l1285 28B2                      l1293 297A  
                    l1269 286A                      l1197 257C                      l1189 2552  
                    l1279 288E                      l1295 297E                      l1199 258A  
                    l1287 27E4                      l1297 2982                      l1289 2966  
                    l1299 2988                      STR_1 2510                      STR_2 2501  
                    _LATD 0004C1                      _main 268E                      indf2 0004DF  
                    fsr1l 0004E1                      fsr2l 0004D9                      prodl 0004F3  
                    start FFFC             ?_CURSOR_ONOFF 0501              ___param_bank 000000  
         ??_ENVIA_LCD_CMD 0502          __end_of_LEER_LCD 2782          __end_of_LCD_Init 299C  
          _GENERACARACTER 287E                     ?_main 0501           __end_of___awdiv 25DE  
         __end_of___awmod 268E           ___awdiv@divisor 0509           ___awdiv@counter 050B  
                   _OSCEN 0000B3                     _PORTD 0004D1                     _TRISD 0004C9  
             ?_POS_CURSOR 0504                     tablat 0004F5                     status 0004D8  
          ??_CURSOR_ONOFF 0504           __initialization 292E              __end_of_main 270C  
  __end_of_GENERACARACTER 28BA           _ESCRIBE_MENSAJE 283C                    ??_main 0510  
           __activetblptr 000001          ___awdiv@dividend 0507                    _ANSELD 000418  
                  _OSCFRQ 0000B1                 ??___awdiv 050B                    _decena 051C  
               ??___awmod 0505      __end_of_ENVIA_NIBBLE 2AA4                    _camote 051E  
         ?_GENERACARACTER 0504          ___awdiv@quotient 050D           ___awmod@divisor 0503  
                  isa$std 000001           ___awmod@counter 0505                    _unidad 051B  
            __pdataCOMRAM 0512              __mediumconst 0000                    tblptrh 0004F7  
                  tblptrl 0004F6                    tblptru 0004F8              ??_BORRAR_LCD 0504  
               ?_LEER_LCD 0501                __accesstop 0560   __end_of__initialization 2958  
               ?_LCD_Init 0501              ??_LCD_CONFIG 0504             ___rparam_used 000001  
            ??_ENVIA_CHAR 0502   __end_of_ESCRIBE_MENSAJE 287E            __pcstackCOMRAM 0501  
      __end_of_BORRAR_LCD 2ABC          ENVIA_LCD_CMD@aux 0503      __end_of_CURSOR_ONOFF 2A34  
      __end_of_LCD_CONFIG 27E2         ?_vis_primeralinea 0501        __end_of_ENVIA_CHAR 29D0  
      ??_vis_primeralinea 050A                ??_LEER_LCD 0501          ENVIA_NIBBLE@dato 0501  
              ??_LCD_Init 0508                   _OSCCON1 0000AD              ??_POS_CURSOR 0505  
                 __Hparam 0000                   __Lparam 0000          ?_ESCRIBE_MENSAJE 0504  
       __end_of_configuro 2A60                   ___awdiv 251A                   ___awmod 25DE  
            __psmallconst 2500     __end_of_ENVIA_LCD_CMD 2A04         __end_of_convierte 283C  
                 __pcinit 292E        __end_of_POS_CURSOR 292E                   __ramtop 2500  
                 _centena 051D                   __ptext0 268E                   __ptext1 2A60  
                 __ptext2 28BA                   __ptext3 27E2                   __ptext4 25DE  
                 __ptext5 251A                   __ptext6 28F4                   __ptext7 283C  
                 __ptext8 2A34                   __ptext9 2966           GENERACARACTER@i 0507  
        ___awmod@dividend 0501              _ENVIA_NIBBLE 2A88      end_of_initialization 2958  
        ??_GENERACARACTER 0507                   postdec1 0004E5                   postinc0 0004EE  
    GENERACARACTER@vector 0504                 _TRISAbits 0004C6                 _TRISBbits 0004C7  
               _TRISCbits 0004C8                 _TRISEbits 0004CA                _vis_camote 28BA  
            _CURSOR_ONOFF 2A04        CURSOR_ONOFF@estado 0504             __pidataCOMRAM 2AA4  
           ??_CURSOR_HOME 0504       start_initialization 292E         ENVIA_LCD_CMD@dato 0502  
             __pbssCOMRAM 051A               ?_vis_camote 0501       __end_of_CURSOR_HOME 2AB4  
                ?___awdiv 0507                  ?___awmod 0501         GENERACARACTER@pos 0506  
               _configuro 2A34               __smallconst 2500                 _convierte 27E2  
         convierte@numero 050F                  _LEER_LCD 270C                  _LCD_Init 2966  
                _LATCbits 0004C0                  _LATDbits 0004C1          ESCRIBE_MENSAJE@i 0509  
          POS_CURSOR@fila 0505                ?_configuro 0501                ?_convierte 0501  
                _WPUBbits 000409               _CURSOR_HOME 2AAC                 copy_data0 2942  
        _vis_primeralinea 2A60                  __Hrparam 0000                  __Lrparam 0000  
            __Lsmallconst 2500                _ANSELAbits 000400                  _e_acento 0512  
              _ANSELBbits 000408                _ANSELCbits 000410                _ANSELEbits 000420  
                __ptext10 2782                  __ptext11 287E                  __ptext12 299C  
                __ptext13 2A04                  __ptext14 2AAC                  __ptext15 2AB4  
                __ptext16 29D0                  __ptext17 270C                  __ptext18 2A88  
              _BORRAR_LCD 2AB4                _LCD_CONFIG 2782                _ENVIA_CHAR 299C  
                isa$xinst 000000             _ENVIA_LCD_CMD 29D0               ??_configuro 0501  
             ??_convierte 050F              ??_vis_camote 0510         ??_ESCRIBE_MENSAJE 0507  
   ESCRIBE_MENSAJE@cadena 0504        __end_of_vis_camote 28F4            ?_ENVIA_LCD_CMD 0501  
             ?_BORRAR_LCD 0501             ?_ENVIA_NIBBLE 0501                _POS_CURSOR 28F4  
             ?_LCD_CONFIG 0501        ESCRIBE_MENSAJE@tam 0506               ?_ENVIA_CHAR 0501  
       POS_CURSOR@columna 0504  
