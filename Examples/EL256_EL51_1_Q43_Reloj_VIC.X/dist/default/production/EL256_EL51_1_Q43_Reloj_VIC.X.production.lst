

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Wed May 24 16:56:42 2023

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	18F57Q43
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=4,class=CODE,delta=1
    29                           	psect	text18,global,reloc=4,class=CODE,delta=1
    30                           	psect	text19,global,reloc=4,class=CODE,delta=1
    31                           	psect	text20,global,reloc=4,class=CODE,delta=1
    32                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
    33                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    34                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    35                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    36                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    37  0000                     
    38                           ; Version 2.40
    39                           ; Generated 08/12/2021 GMT
    40                           ; 
    41                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    42                           ; All rights reserved.
    43                           ; 
    44                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    45                           ; 
    46                           ; Redistribution and use in source and binary forms, with or without modification, are
    47                           ; permitted provided that the following conditions are met:
    48                           ; 
    49                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    50                           ;        conditions and the following disclaimer.
    51                           ; 
    52                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    53                           ;        of conditions and the following disclaimer in the documentation and/or other
    54                           ;        materials provided with the distribution. Publication is not required when
    55                           ;        this file is used in an embedded application.
    56                           ; 
    57                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    58                           ;        software without specific prior written permission.
    59                           ; 
    60                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    61                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    62                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    63                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    64                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    65                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    66                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    67                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    68                           ; 
    69                           ; 
    70                           ; Code-generator required, PIC18F57Q43 Definitions
    71                           ; 
    72                           ; SFR Addresses
    73  0000                     
    74                           	psect	idataCOMRAM
    75  002B7A                     __pidataCOMRAM:
    76                           	callstack 0
    77                           
    78                           ;initializer for _segundos
    79  002B7A  14                 	db	20
    80                           
    81                           ;initializer for _minutos
    82  002B7B  0A                 	db	10
    83                           
    84                           ;initializer for _horas
    85  002B7C  0A                 	db	10
    86  0000                     _LATD	set	1217
    87  0000                     _OSCCON1	set	173
    88  0000                     _OSCFRQ	set	177
    89  0000                     _OSCEN	set	179
    90  0000                     _T1CON	set	798
    91  0000                     _ANSELAbits	set	1024
    92  0000                     _ANSELD	set	1048
    93  0000                     _TRISD	set	1225
    94  0000                     _PORTD	set	1233
    95  0000                     _INTCON0bits	set	1238
    96  0000                     _PIE1bits	set	1183
    97  0000                     _PIE3bits	set	1185
    98  0000                     _TRISAbits	set	1222
    99  0000                     _TRISBbits	set	1223
   100  0000                     _ANSELBbits	set	1032
   101  0000                     _T1CLK	set	801
   102  0000                     _CCPR1L	set	832
   103  0000                     _CCPR1H	set	833
   104  0000                     _CCP1CON	set	834
   105  0000                     _PIE6bits	set	1188
   106  0000                     _PIE10bits	set	1192
   107  0000                     _PIR1bits	set	1199
   108  0000                     _LATBbits	set	1215
   109  0000                     _LATDbits	set	1217
   110  0000                     _PIR3bits	set	1201
   111  0000                     _PIR6bits	set	1204
   112  0000                     _PIR10bits	set	1208
   113                           
   114                           	psect	smallconst
   115  002500                     __psmallconst:
   116                           	callstack 0
   117  002500  00                 	db	0
   118  002501                     STR_3:
   119  002501  52                 	db	82	;'R'
   120  002502  65                 	db	101	;'e'
   121  002503  6C                 	db	108	;'l'
   122  002504  6F                 	db	111	;'o'
   123  002505  6A                 	db	106	;'j'
   124  002506  69                 	db	105	;'i'
   125  002507  74                 	db	116	;'t'
   126  002508  6F                 	db	111	;'o'
   127  002509  20                 	db	32
   128  00250A  55                 	db	85	;'U'
   129  00250B  50                 	db	80	;'P'
   130  00250C  43                 	db	67	;'C'
   131  00250D  00                 	db	0
   132  00250E                     STR_2:
   133  00250E  55                 	db	85	;'U'
   134  00250F  50                 	db	80	;'P'
   135  002510  43                 	db	67	;'C'
   136  002511  20                 	db	32
   137  002512  32                 	db	50	;'2'
   138  002513  30                 	db	48	;'0'
   139  002514  32                 	db	50	;'2'
   140  002515  33                 	db	51	;'3'
   141  002516  2D                 	db	45
   142  002517  31                 	db	49	;'1'
   143  002518  00                 	db	0
   144  002519                     STR_1:
   145  002519  48                 	db	72	;'H'
   146  00251A  6F                 	db	111	;'o'
   147  00251B  6C                 	db	108	;'l'
   148  00251C  61                 	db	97	;'a'
   149  00251D  20                 	db	32
   150  00251E  6D                 	db	109	;'m'
   151  00251F  75                 	db	117	;'u'
   152  002520  6E                 	db	110	;'n'
   153  002521  64                 	db	100	;'d'
   154  002522  6F                 	db	111	;'o'
   155  002523  00                 	db	0
   156  002524  00                 	db	0	; dummy byte at the end
   157  0000                     
   158                           ; #config settings
   159                           
   160                           	psect	cinit
   161  00296C                     __pcinit:
   162                           	callstack 0
   163  00296C                     start_initialization:
   164                           	callstack 0
   165  00296C                     __initialization:
   166                           	callstack 0
   167                           
   168                           ; Initialize objects allocated to COMRAM (3 bytes)
   169                           ; load TBLPTR registers with __pidataCOMRAM
   170  00296C  0E7A               	movlw	low __pidataCOMRAM
   171  00296E  6EF6               	movwf	tblptrl,c
   172  002970  0E2B               	movlw	high __pidataCOMRAM
   173  002972  6EF7               	movwf	tblptrh,c
   174  002974  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   175  002976  6EF8               	movwf	tblptru,c
   176  002978  0009               	tblrd		*+	;fetch initializer
   177  00297A  0061 F3D4  F516    	movff	tablat,__pdataCOMRAM
   178  002980  0009               	tblrd		*+	;fetch initializer
   179  002982  0061 F3D4  F517    	movff	tablat,__pdataCOMRAM+1
   180  002988  0009               	tblrd		*+	;fetch initializer
   181  00298A  0061 F3D4  F518    	movff	tablat,__pdataCOMRAM+2
   182                           
   183                           ; Clear objects allocated to COMRAM (4 bytes)
   184  002990  6A15               	clrf	(__pbssCOMRAM+3)& (0+255),c
   185  002992  6A14               	clrf	(__pbssCOMRAM+2)& (0+255),c
   186  002994  6A13               	clrf	(__pbssCOMRAM+1)& (0+255),c
   187  002996  6A12               	clrf	__pbssCOMRAM& (0+255),c
   188                           
   189                           ;
   190                           ; Setup IVTBASE
   191                           ;
   192  002998  0104               	movlb	4
   193  00299A  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
   194  00299C  6F5D               	movwf	93,b
   195  00299E  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
   196  0029A0  6F5E               	movwf	94,b
   197  0029A2  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
   198  0029A4  6F5F               	movwf	95,b
   199  0029A6                     end_of_initialization:
   200                           	callstack 0
   201  0029A6                     __end_of__initialization:
   202                           	callstack 0
   203  0029A6  0E00               	movlw	low (__Lsmallconst shr (0+16))
   204  0029A8  6EF8               	movwf	tblptru,c
   205  0029AA  0E25               	movlw	high __Lsmallconst
   206  0029AC  6EF7               	movwf	tblptrh,c
   207  0029AE  0100               	movlb	0
   208  0029B0  EF93  F012         	goto	_main	;jump to C main() function
   209                           
   210                           	psect	bssCOMRAM
   211  000512                     __pbssCOMRAM:
   212                           	callstack 0
   213  000512                     _ticks:
   214                           	callstack 0
   215  000512                     	ds	1
   216  000513                     _unidad:
   217                           	callstack 0
   218  000513                     	ds	1
   219  000514                     _decena:
   220                           	callstack 0
   221  000514                     	ds	1
   222  000515                     _centena:
   223                           	callstack 0
   224  000515                     	ds	1
   225                           
   226                           	psect	dataCOMRAM
   227  000516                     __pdataCOMRAM:
   228                           	callstack 0
   229  000516                     _segundos:
   230                           	callstack 0
   231  000516                     	ds	1
   232  000517                     _minutos:
   233                           	callstack 0
   234  000517                     	ds	1
   235  000518                     _horas:
   236                           	callstack 0
   237  000518                     	ds	1
   238                           
   239                           	psect	cstackCOMRAM
   240  000501                     __pcstackCOMRAM:
   241                           	callstack 0
   242  000501                     ?_strlen:
   243                           	callstack 0
   244  000501                     ?___awmod:
   245                           	callstack 0
   246  000501                     ENVIA_NIBBLE@dato:
   247                           	callstack 0
   248  000501                     LEER_LCD@aux:
   249                           	callstack 0
   250  000501                     ___awmod@dividend:
   251                           	callstack 0
   252  000501                     strlen@s:
   253                           	callstack 0
   254                           
   255                           ; 2 bytes @ 0x0
   256  000501                     	ds	1
   257  000502                     ENVIA_CHAR@dato:
   258                           	callstack 0
   259  000502                     ENVIA_LCD_CMD@dato:
   260                           	callstack 0
   261                           
   262                           ; 1 bytes @ 0x1
   263  000502                     	ds	1
   264  000503                     ENVIA_CHAR@aux:
   265                           	callstack 0
   266  000503                     ENVIA_LCD_CMD@aux:
   267                           	callstack 0
   268  000503                     ___awmod@divisor:
   269                           	callstack 0
   270  000503                     strlen@a:
   271                           	callstack 0
   272                           
   273                           ; 2 bytes @ 0x2
   274  000503                     	ds	1
   275  000504                     ??_LCD_CONFIG:
   276  000504                     POS_CURSOR@columna:
   277                           	callstack 0
   278  000504                     CURSOR_ONOFF@estado:
   279                           	callstack 0
   280                           
   281                           ; 1 bytes @ 0x3
   282  000504                     	ds	1
   283  000505                     ??_lcd_config:
   284  000505                     POS_CURSOR@fila:
   285                           	callstack 0
   286  000505                     ___awmod@counter:
   287                           	callstack 0
   288  000505                     ESCRIBE_MENSAJE2@cadena:
   289                           	callstack 0
   290                           
   291                           ; 2 bytes @ 0x4
   292  000505                     	ds	1
   293  000506                     ___awmod@sign:
   294                           	callstack 0
   295                           
   296                           ; 1 bytes @ 0x5
   297  000506                     	ds	1
   298  000507                     ??_ESCRIBE_MENSAJE2:
   299  000507                     ?___awdiv:
   300                           	callstack 0
   301  000507                     ___awdiv@dividend:
   302                           	callstack 0
   303                           
   304                           ; 2 bytes @ 0x6
   305  000507                     	ds	2
   306  000509                     ESCRIBE_MENSAJE2@tam:
   307                           	callstack 0
   308  000509                     ___awdiv@divisor:
   309                           	callstack 0
   310                           
   311                           ; 2 bytes @ 0x8
   312  000509                     	ds	1
   313  00050A                     ESCRIBE_MENSAJE2@i:
   314                           	callstack 0
   315                           
   316                           ; 1 bytes @ 0x9
   317  00050A                     	ds	1
   318  00050B                     ___awdiv@counter:
   319                           	callstack 0
   320                           
   321                           ; 1 bytes @ 0xA
   322  00050B                     	ds	1
   323  00050C                     ___awdiv@sign:
   324                           	callstack 0
   325                           
   326                           ; 1 bytes @ 0xB
   327  00050C                     	ds	1
   328  00050D                     ___awdiv@quotient:
   329                           	callstack 0
   330                           
   331                           ; 2 bytes @ 0xC
   332  00050D                     	ds	2
   333  00050F                     convierte@numero:
   334                           	callstack 0
   335                           
   336                           ; 1 bytes @ 0xE
   337  00050F                     	ds	1
   338  000510                     ??_main:
   339                           
   340                           ; 1 bytes @ 0xF
   341  000510                     	ds	2
   342                           
   343 ;;
   344 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   345 ;;
   346 ;; *************** function _main *****************
   347 ;; Defined at:
   348 ;;		line 54 in file "maincode.c"
   349 ;; Parameters:    Size  Location     Type
   350 ;;		None
   351 ;; Auto vars:     Size  Location     Type
   352 ;;		None
   353 ;; Return value:  Size  Location     Type
   354 ;;                  1    wreg      void 
   355 ;; Registers used:
   356 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   357 ;; Tracked objects:
   358 ;;		On entry : 0/0
   359 ;;		On exit  : 0/0
   360 ;;		Unchanged: 0/0
   361 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   362 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   363 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   364 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   365 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   366 ;;Total ram usage:        2 bytes
   367 ;; Hardware stack levels required when called: 5
   368 ;; This function calls:
   369 ;;		_BORRAR_LCD
   370 ;;		_ENVIA_CHAR
   371 ;;		_ESCRIBE_MENSAJE2
   372 ;;		_POS_CURSOR
   373 ;;		_configuro
   374 ;;		_convierte
   375 ;;		_lcd_config
   376 ;; This function is called by:
   377 ;;		Startup code after reset
   378 ;; This function uses a non-reentrant model
   379 ;;
   380                           
   381                           	psect	text0
   382  002526                     __ptext0:
   383                           	callstack 0
   384  002526                     _main:
   385                           	callstack 122
   386  002526                     
   387                           ;maincode.c: 55:     configuro();
   388  002526  ECDA  F014         	call	_configuro	;wreg free
   389  00252A                     
   390                           ;maincode.c: 56:     lcd_config();
   391  00252A  EC6B  F015         	call	_lcd_config	;wreg free
   392  00252E                     
   393                           ;maincode.c: 57:     POS_CURSOR(1,0);
   394  00252E  0E00               	movlw	0
   395  002530  6E04               	movwf	POS_CURSOR@columna^(0+1280),c
   396  002532  0E01               	movlw	1
   397  002534  EC1A  F015         	call	_POS_CURSOR
   398  002538                     
   399                           ;maincode.c: 58:     ESCRIBE_MENSAJE2("Hola mundo");
   400  002538  0E19               	movlw	low STR_1
   401  00253A  6E05               	movwf	ESCRIBE_MENSAJE2@cadena^(0+1280),c
   402  00253C  0E25               	movlw	high STR_1
   403  00253E  6E06               	movwf	(ESCRIBE_MENSAJE2@cadena+1)^(0+1280),c
   404  002540  EC8F  F014         	call	_ESCRIBE_MENSAJE2	;wreg free
   405  002544                     
   406                           ;maincode.c: 59:     POS_CURSOR(2,0);
   407  002544  0E00               	movlw	0
   408  002546  6E04               	movwf	POS_CURSOR@columna^(0+1280),c
   409  002548  0E02               	movlw	2
   410  00254A  EC1A  F015         	call	_POS_CURSOR
   411  00254E                     
   412                           ;maincode.c: 60:     ESCRIBE_MENSAJE2("UPC 2023-1");
   413  00254E  0E0E               	movlw	low STR_2
   414  002550  6E05               	movwf	ESCRIBE_MENSAJE2@cadena^(0+1280),c
   415  002552  0E25               	movlw	high STR_2
   416  002554  6E06               	movwf	(ESCRIBE_MENSAJE2@cadena+1)^(0+1280),c
   417  002556  EC8F  F014         	call	_ESCRIBE_MENSAJE2	;wreg free
   418  00255A                     
   419                           ;maincode.c: 61:     _delay((unsigned long)((2000)*(4000000UL/4000.0)));
   420  00255A  0E0B               	movlw	11
   421  00255C  6E11               	movwf	(??_main+1)^(0+1280),c
   422  00255E  0E26               	movlw	38
   423  002560  6E10               	movwf	??_main^(0+1280),c
   424  002562  0E5E               	movlw	94
   425  002564                     u467:
   426  002564  2EE8               	decfsz	wreg,f,c
   427  002566  D7FE               	bra	u467
   428  002568  2E10               	decfsz	??_main^(0+1280),f,c
   429  00256A  D7FC               	bra	u467
   430  00256C  2E11               	decfsz	(??_main+1)^(0+1280),f,c
   431  00256E  D7FA               	bra	u467
   432  002570                     
   433                           ;maincode.c: 62:     BORRAR_LCD();
   434  002570  ECAE  F015         	call	_BORRAR_LCD	;wreg free
   435  002574                     
   436                           ;maincode.c: 63:     POS_CURSOR(1,2);
   437  002574  0E02               	movlw	2
   438  002576  6E04               	movwf	POS_CURSOR@columna^(0+1280),c
   439  002578  0E01               	movlw	1
   440  00257A  EC1A  F015         	call	_POS_CURSOR
   441  00257E                     
   442                           ;maincode.c: 64:     ESCRIBE_MENSAJE2("Relojito UPC");
   443  00257E  0E01               	movlw	low STR_3
   444  002580  6E05               	movwf	ESCRIBE_MENSAJE2@cadena^(0+1280),c
   445  002582  0E25               	movlw	high STR_3
   446  002584  6E06               	movwf	(ESCRIBE_MENSAJE2@cadena+1)^(0+1280),c
   447  002586  EC8F  F014         	call	_ESCRIBE_MENSAJE2	;wreg free
   448  00258A                     l1415:
   449                           
   450                           ;maincode.c: 66:         POS_CURSOR(2,0);
   451  00258A  0E00               	movlw	0
   452  00258C  6E04               	movwf	POS_CURSOR@columna^(0+1280),c
   453  00258E  0E02               	movlw	2
   454  002590  EC1A  F015         	call	_POS_CURSOR
   455  002594                     
   456                           ;maincode.c: 67:         convierte(horas);
   457  002594  5018               	movf	_horas^(0+1280),w,c
   458  002596  EC62  F014         	call	_convierte
   459  00259A                     
   460                           ;maincode.c: 68:         ENVIA_CHAR(decena+0x30);
   461  00259A  5014               	movf	_decena^(0+1280),w,c
   462  00259C  0F30               	addlw	48
   463  00259E  EC51  F015         	call	_ENVIA_CHAR
   464  0025A2                     
   465                           ;maincode.c: 69:         ENVIA_CHAR(unidad+0x30);
   466  0025A2  5013               	movf	_unidad^(0+1280),w,c
   467  0025A4  0F30               	addlw	48
   468  0025A6  EC51  F015         	call	_ENVIA_CHAR
   469  0025AA                     
   470                           ;maincode.c: 70:         ENVIA_CHAR(':');
   471  0025AA  0E3A               	movlw	58
   472  0025AC  EC51  F015         	call	_ENVIA_CHAR
   473  0025B0                     
   474                           ;maincode.c: 71:         convierte(minutos);
   475  0025B0  5017               	movf	_minutos^(0+1280),w,c
   476  0025B2  EC62  F014         	call	_convierte
   477  0025B6                     
   478                           ;maincode.c: 72:         ENVIA_CHAR(decena+0x30);
   479  0025B6  5014               	movf	_decena^(0+1280),w,c
   480  0025B8  0F30               	addlw	48
   481  0025BA  EC51  F015         	call	_ENVIA_CHAR
   482  0025BE                     
   483                           ;maincode.c: 73:         ENVIA_CHAR(unidad+0x30);
   484  0025BE  5013               	movf	_unidad^(0+1280),w,c
   485  0025C0  0F30               	addlw	48
   486  0025C2  EC51  F015         	call	_ENVIA_CHAR
   487  0025C6                     
   488                           ;maincode.c: 74:         ENVIA_CHAR(':');
   489  0025C6  0E3A               	movlw	58
   490  0025C8  EC51  F015         	call	_ENVIA_CHAR
   491  0025CC                     
   492                           ;maincode.c: 75:         convierte(segundos);
   493  0025CC  5016               	movf	_segundos^(0+1280),w,c
   494  0025CE  EC62  F014         	call	_convierte
   495  0025D2                     
   496                           ;maincode.c: 76:         ENVIA_CHAR(decena+0x30);
   497  0025D2  5014               	movf	_decena^(0+1280),w,c
   498  0025D4  0F30               	addlw	48
   499  0025D6  EC51  F015         	call	_ENVIA_CHAR
   500  0025DA                     
   501                           ;maincode.c: 77:         ENVIA_CHAR(unidad+0x30);
   502  0025DA  5013               	movf	_unidad^(0+1280),w,c
   503  0025DC  0F30               	addlw	48
   504  0025DE  EC51  F015         	call	_ENVIA_CHAR
   505  0025E2                     
   506                           ;maincode.c: 78:         ENVIA_CHAR(':');
   507  0025E2  0E3A               	movlw	58
   508  0025E4  EC51  F015         	call	_ENVIA_CHAR
   509  0025E8                     
   510                           ;maincode.c: 79:         convierte(ticks);
   511  0025E8  5012               	movf	_ticks^(0+1280),w,c
   512  0025EA  EC62  F014         	call	_convierte
   513  0025EE                     
   514                           ;maincode.c: 80:         ENVIA_CHAR(decena+0x30);
   515  0025EE  5014               	movf	_decena^(0+1280),w,c
   516  0025F0  0F30               	addlw	48
   517  0025F2  EC51  F015         	call	_ENVIA_CHAR
   518  0025F6                     
   519                           ;maincode.c: 81:         ENVIA_CHAR(unidad+0x30);
   520  0025F6  5013               	movf	_unidad^(0+1280),w,c
   521  0025F8  0F30               	addlw	48
   522  0025FA  EC51  F015         	call	_ENVIA_CHAR
   523  0025FE  EFC5  F012         	goto	l1415
   524  002602  EF81  F000         	goto	start
   525  002606                     __end_of_main:
   526                           	callstack 0
   527                           
   528 ;; *************** function _lcd_config *****************
   529 ;; Defined at:
   530 ;;		line 38 in file "maincode.c"
   531 ;; Parameters:    Size  Location     Type
   532 ;;		None
   533 ;; Auto vars:     Size  Location     Type
   534 ;;		None
   535 ;; Return value:  Size  Location     Type
   536 ;;                  1    wreg      void 
   537 ;; Registers used:
   538 ;;		wreg, status,2, status,0, cstack
   539 ;; Tracked objects:
   540 ;;		On entry : 0/0
   541 ;;		On exit  : 0/0
   542 ;;		Unchanged: 0/0
   543 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   544 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   545 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   546 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   547 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   548 ;;Total ram usage:        1 bytes
   549 ;; Hardware stack levels used: 1
   550 ;; Hardware stack levels required when called: 4
   551 ;; This function calls:
   552 ;;		_BORRAR_LCD
   553 ;;		_CURSOR_HOME
   554 ;;		_CURSOR_ONOFF
   555 ;;		_LCD_CONFIG
   556 ;; This function is called by:
   557 ;;		_main
   558 ;; This function uses a non-reentrant model
   559 ;;
   560                           
   561                           	psect	text1
   562  002AD6                     __ptext1:
   563                           	callstack 0
   564  002AD6                     _lcd_config:
   565                           	callstack 122
   566  002AD6                     
   567                           ;maincode.c: 39:     _delay((unsigned long)((15)*(4000000UL/4000.0)));
   568  002AD6  0E14               	movlw	20
   569  002AD8  6E05               	movwf	??_lcd_config^(0+1280),c
   570  002ADA  0E7A               	movlw	122
   571  002ADC                     u477:
   572  002ADC  2EE8               	decfsz	wreg,f,c
   573  002ADE  D7FE               	bra	u477
   574  002AE0  2E05               	decfsz	??_lcd_config^(0+1280),f,c
   575  002AE2  D7FC               	bra	u477
   576  002AE4                     
   577                           ;maincode.c: 40:     LCD_CONFIG();
   578  002AE4  EC32  F014         	call	_LCD_CONFIG	;wreg free
   579  002AE8                     
   580                           ;maincode.c: 41:     _delay((unsigned long)((15)*(4000000UL/4000.0)));
   581  002AE8  0E14               	movlw	20
   582  002AEA  6E05               	movwf	??_lcd_config^(0+1280),c
   583  002AEC  0E7A               	movlw	122
   584  002AEE                     u487:
   585  002AEE  2EE8               	decfsz	wreg,f,c
   586  002AF0  D7FE               	bra	u487
   587  002AF2  2E05               	decfsz	??_lcd_config^(0+1280),f,c
   588  002AF4  D7FC               	bra	u487
   589                           
   590                           ;maincode.c: 42:     BORRAR_LCD();
   591  002AF6  ECAE  F015         	call	_BORRAR_LCD	;wreg free
   592                           
   593                           ;maincode.c: 43:     CURSOR_HOME();
   594  002AFA  ECAA  F015         	call	_CURSOR_HOME	;wreg free
   595                           
   596                           ;maincode.c: 44:     CURSOR_ONOFF(1);
   597  002AFE  0E01               	movlw	1
   598  002B00  EC84  F015         	call	_CURSOR_ONOFF
   599  002B04                     
   600                           ;maincode.c: 45:     LATBbits.LATB2 = 1;
   601  002B04  84BF               	bsf	191,2,c	;volatile
   602  002B06  0012               	return		;funcret
   603  002B08                     __end_of_lcd_config:
   604                           	callstack 0
   605                           
   606 ;; *************** function _LCD_CONFIG *****************
   607 ;; Defined at:
   608 ;;		line 84 in file "LCD.c"
   609 ;; Parameters:    Size  Location     Type
   610 ;;		None
   611 ;; Auto vars:     Size  Location     Type
   612 ;;		None
   613 ;; Return value:  Size  Location     Type
   614 ;;                  1    wreg      void 
   615 ;; Registers used:
   616 ;;		wreg, status,2, status,0, cstack
   617 ;; Tracked objects:
   618 ;;		On entry : 0/0
   619 ;;		On exit  : 0/0
   620 ;;		Unchanged: 0/0
   621 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   622 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   623 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   624 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   625 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   626 ;;Total ram usage:        1 bytes
   627 ;; Hardware stack levels used: 1
   628 ;; Hardware stack levels required when called: 3
   629 ;; This function calls:
   630 ;;		_ENVIA_LCD_CMD
   631 ;;		_ENVIA_NIBBLE
   632 ;; This function is called by:
   633 ;;		_lcd_config
   634 ;; This function uses a non-reentrant model
   635 ;;
   636                           
   637                           	psect	text2
   638  002864                     __ptext2:
   639                           	callstack 0
   640  002864                     _LCD_CONFIG:
   641                           	callstack 122
   642  002864                     
   643                           ;LCD.c: 86:  LATDbits.LATD0 = 0;
   644  002864  90C1               	bcf	193,0,c	;volatile
   645                           
   646                           ;LCD.c: 87:  LATDbits.LATD1 = 0;
   647  002866  92C1               	bcf	193,1,c	;volatile
   648  002868                     
   649                           ;LCD.c: 88:  ENVIA_NIBBLE(0x30);
   650  002868  0E30               	movlw	48
   651  00286A  EC9C  F015         	call	_ENVIA_NIBBLE
   652  00286E                     
   653                           ;LCD.c: 89:         _delay(24000);
   654  00286E  0E20               	movlw	32
   655  002870  6E04               	movwf	??_LCD_CONFIG^(0+1280),c
   656  002872  0E2A               	movlw	42
   657  002874                     u497:
   658  002874  2EE8               	decfsz	wreg,f,c
   659  002876  D7FE               	bra	u497
   660  002878  2E04               	decfsz	??_LCD_CONFIG^(0+1280),f,c
   661  00287A  D7FC               	bra	u497
   662  00287C                     
   663                           ;LCD.c: 90:         _delay(24000);
   664  00287C  0E20               	movlw	32
   665  00287E  6E04               	movwf	??_LCD_CONFIG^(0+1280),c
   666  002880  0E2A               	movlw	42
   667  002882                     u507:
   668  002882  2EE8               	decfsz	wreg,f,c
   669  002884  D7FE               	bra	u507
   670  002886  2E04               	decfsz	??_LCD_CONFIG^(0+1280),f,c
   671  002888  D7FC               	bra	u507
   672                           
   673                           ;LCD.c: 93:  ENVIA_NIBBLE(0x30);
   674  00288A  0E30               	movlw	48
   675  00288C  EC9C  F015         	call	_ENVIA_NIBBLE
   676  002890                     
   677                           ;LCD.c: 95:  _delay(1200);
   678  002890  0EF0               	movlw	240
   679  002892                     u517:
   680  002892  D000               	nop2	
   681  002894  2EE8               	decfsz	wreg,f,c
   682  002896  D7FD               	bra	u517
   683  002898                     
   684                           ;LCD.c: 96:         ENVIA_NIBBLE(0x30);
   685  002898  0E30               	movlw	48
   686  00289A  EC9C  F015         	call	_ENVIA_NIBBLE
   687  00289E                     
   688                           ;LCD.c: 97:  ENVIA_NIBBLE(0x20);
   689  00289E  0E20               	movlw	32
   690  0028A0  EC9C  F015         	call	_ENVIA_NIBBLE
   691  0028A4                     
   692                           ;LCD.c: 98:  ENVIA_LCD_CMD(0x01);
   693  0028A4  0E01               	movlw	1
   694  0028A6  EC37  F015         	call	_ENVIA_LCD_CMD
   695  0028AA                     
   696                           ;LCD.c: 99:  ENVIA_LCD_CMD(0x28);
   697  0028AA  0E28               	movlw	40
   698  0028AC  EC37  F015         	call	_ENVIA_LCD_CMD
   699  0028B0                     
   700                           ;LCD.c: 100:  ENVIA_LCD_CMD(0x0F);
   701  0028B0  0E0F               	movlw	15
   702  0028B2  EC37  F015         	call	_ENVIA_LCD_CMD
   703  0028B6                     
   704                           ;LCD.c: 101:  ENVIA_LCD_CMD(0x06);
   705  0028B6  0E06               	movlw	6
   706  0028B8  EC37  F015         	call	_ENVIA_LCD_CMD
   707  0028BC                     
   708                           ;LCD.c: 102:  ENVIA_LCD_CMD(0x01);
   709  0028BC  0E01               	movlw	1
   710  0028BE  EC37  F015         	call	_ENVIA_LCD_CMD
   711  0028C2  0012               	return		;funcret
   712  0028C4                     __end_of_LCD_CONFIG:
   713                           	callstack 0
   714                           
   715 ;; *************** function _CURSOR_ONOFF *****************
   716 ;; Defined at:
   717 ;;		line 36 in file "LCD.c"
   718 ;; Parameters:    Size  Location     Type
   719 ;;  estado          1    wreg     unsigned char 
   720 ;; Auto vars:     Size  Location     Type
   721 ;;  estado          1    3[COMRAM] unsigned char 
   722 ;; Return value:  Size  Location     Type
   723 ;;                  1    wreg      void 
   724 ;; Registers used:
   725 ;;		wreg, status,2, status,0, cstack
   726 ;; Tracked objects:
   727 ;;		On entry : 0/0
   728 ;;		On exit  : 0/0
   729 ;;		Unchanged: 0/0
   730 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   731 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   732 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   733 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   734 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   735 ;;Total ram usage:        1 bytes
   736 ;; Hardware stack levels used: 1
   737 ;; Hardware stack levels required when called: 3
   738 ;; This function calls:
   739 ;;		_ENVIA_LCD_CMD
   740 ;; This function is called by:
   741 ;;		_lcd_config
   742 ;; This function uses a non-reentrant model
   743 ;;
   744                           
   745                           	psect	text3
   746  002B08                     __ptext3:
   747                           	callstack 0
   748  002B08                     _CURSOR_ONOFF:
   749                           	callstack 122
   750                           
   751                           ;incstack = 0
   752                           ;CURSOR_ONOFF@estado stored from wreg
   753  002B08  6E04               	movwf	CURSOR_ONOFF@estado^(0+1280),c
   754  002B0A                     
   755                           ;LCD.c: 36: void CURSOR_ONOFF(unsigned char estado);LCD.c: 37: {;LCD.c: 38:  if(estado =
      +                          = 0) ENVIA_LCD_CMD(0x0E);
   756  002B0A  5004               	movf	CURSOR_ONOFF@estado^(0+1280),w,c
   757  002B0C  A4D8               	btfss	status,2,c
   758  002B0E  EF8B  F015         	goto	u21
   759  002B12  EF8D  F015         	goto	u20
   760  002B16                     u21:
   761  002B16  EF90  F015         	goto	l987
   762  002B1A                     u20:
   763  002B1A  0E0E               	movlw	14
   764  002B1C  EC37  F015         	call	_ENVIA_LCD_CMD
   765  002B20                     l987:
   766                           
   767                           ;LCD.c: 39:  if(estado == 1) ENVIA_LCD_CMD(0x0C);
   768  002B20  0404               	decf	CURSOR_ONOFF@estado^(0+1280),w,c
   769  002B22  A4D8               	btfss	status,2,c
   770  002B24  EF96  F015         	goto	u31
   771  002B28  EF98  F015         	goto	u30
   772  002B2C                     u31:
   773  002B2C  EF9B  F015         	goto	l167
   774  002B30                     u30:
   775  002B30  0E0C               	movlw	12
   776  002B32  EC37  F015         	call	_ENVIA_LCD_CMD
   777  002B36                     l167:
   778  002B36  0012               	return		;funcret
   779  002B38                     __end_of_CURSOR_ONOFF:
   780                           	callstack 0
   781                           
   782 ;; *************** function _CURSOR_HOME *****************
   783 ;; Defined at:
   784 ;;		line 31 in file "LCD.c"
   785 ;; Parameters:    Size  Location     Type
   786 ;;		None
   787 ;; Auto vars:     Size  Location     Type
   788 ;;		None
   789 ;; Return value:  Size  Location     Type
   790 ;;                  1    wreg      void 
   791 ;; Registers used:
   792 ;;		wreg, status,2, status,0, cstack
   793 ;; Tracked objects:
   794 ;;		On entry : 0/0
   795 ;;		On exit  : 0/0
   796 ;;		Unchanged: 0/0
   797 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   798 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   799 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   800 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   801 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   802 ;;Total ram usage:        0 bytes
   803 ;; Hardware stack levels used: 1
   804 ;; Hardware stack levels required when called: 3
   805 ;; This function calls:
   806 ;;		_ENVIA_LCD_CMD
   807 ;; This function is called by:
   808 ;;		_lcd_config
   809 ;; This function uses a non-reentrant model
   810 ;;
   811                           
   812                           	psect	text4
   813  002B54                     __ptext4:
   814                           	callstack 0
   815  002B54                     _CURSOR_HOME:
   816                           	callstack 122
   817  002B54                     
   818                           ;LCD.c: 33:  ENVIA_LCD_CMD(0x02);
   819  002B54  0E02               	movlw	2
   820  002B56  EC37  F015         	call	_ENVIA_LCD_CMD
   821  002B5A  0012               	return		;funcret
   822  002B5C                     __end_of_CURSOR_HOME:
   823                           	callstack 0
   824                           
   825 ;; *************** function _BORRAR_LCD *****************
   826 ;; Defined at:
   827 ;;		line 79 in file "LCD.c"
   828 ;; Parameters:    Size  Location     Type
   829 ;;		None
   830 ;; Auto vars:     Size  Location     Type
   831 ;;		None
   832 ;; Return value:  Size  Location     Type
   833 ;;                  1    wreg      void 
   834 ;; Registers used:
   835 ;;		wreg, status,2, status,0, cstack
   836 ;; Tracked objects:
   837 ;;		On entry : 0/0
   838 ;;		On exit  : 0/0
   839 ;;		Unchanged: 0/0
   840 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   841 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   842 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   843 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   844 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   845 ;;Total ram usage:        0 bytes
   846 ;; Hardware stack levels used: 1
   847 ;; Hardware stack levels required when called: 3
   848 ;; This function calls:
   849 ;;		_ENVIA_LCD_CMD
   850 ;; This function is called by:
   851 ;;		_lcd_config
   852 ;;		_main
   853 ;; This function uses a non-reentrant model
   854 ;;
   855                           
   856                           	psect	text5
   857  002B5C                     __ptext5:
   858                           	callstack 0
   859  002B5C                     _BORRAR_LCD:
   860                           	callstack 122
   861  002B5C                     
   862                           ;LCD.c: 81:  ENVIA_LCD_CMD(0x01);
   863  002B5C  0E01               	movlw	1
   864  002B5E  EC37  F015         	call	_ENVIA_LCD_CMD
   865  002B62  0012               	return		;funcret
   866  002B64                     __end_of_BORRAR_LCD:
   867                           	callstack 0
   868                           
   869 ;; *************** function _convierte *****************
   870 ;; Defined at:
   871 ;;		line 48 in file "maincode.c"
   872 ;; Parameters:    Size  Location     Type
   873 ;;  numero          1    wreg     unsigned char 
   874 ;; Auto vars:     Size  Location     Type
   875 ;;  numero          1   14[COMRAM] unsigned char 
   876 ;; Return value:  Size  Location     Type
   877 ;;                  1    wreg      void 
   878 ;; Registers used:
   879 ;;		wreg, status,2, status,0, cstack
   880 ;; Tracked objects:
   881 ;;		On entry : 0/0
   882 ;;		On exit  : 0/0
   883 ;;		Unchanged: 0/0
   884 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   885 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   886 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   887 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   888 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   889 ;;Total ram usage:        1 bytes
   890 ;; Hardware stack levels used: 1
   891 ;; Hardware stack levels required when called: 2
   892 ;; This function calls:
   893 ;;		___awdiv
   894 ;;		___awmod
   895 ;; This function is called by:
   896 ;;		_main
   897 ;; This function uses a non-reentrant model
   898 ;;
   899                           
   900                           	psect	text6
   901  0028C4                     __ptext6:
   902                           	callstack 0
   903  0028C4                     _convierte:
   904                           	callstack 124
   905                           
   906                           ;incstack = 0
   907                           ;convierte@numero stored from wreg
   908  0028C4  6E0F               	movwf	convierte@numero^(0+1280),c
   909  0028C6                     
   910                           ;maincode.c: 49:     centena = numero / 100;
   911  0028C6  C50F  F507         	movff	convierte@numero,___awdiv@dividend
   912  0028CA  6A08               	clrf	(___awdiv@dividend+1)^(0+1280),c
   913  0028CC  0E00               	movlw	0
   914  0028CE  6E0A               	movwf	(___awdiv@divisor+1)^(0+1280),c
   915  0028D0  0E64               	movlw	100
   916  0028D2  6E09               	movwf	___awdiv@divisor^(0+1280),c
   917  0028D4  EC03  F013         	call	___awdiv	;wreg free
   918  0028D8  5007               	movf	?___awdiv^(0+1280),w,c
   919  0028DA  6E15               	movwf	_centena^(0+1280),c
   920                           
   921                           ;maincode.c: 50:     decena = (numero % 100) / 10;
   922  0028DC  0E00               	movlw	0
   923  0028DE  6E04               	movwf	(___awmod@divisor+1)^(0+1280),c
   924  0028E0  0E64               	movlw	100
   925  0028E2  6E03               	movwf	___awmod@divisor^(0+1280),c
   926  0028E4  C50F  F501         	movff	convierte@numero,___awmod@dividend
   927  0028E8  6A02               	clrf	(___awmod@dividend+1)^(0+1280),c
   928  0028EA  EC65  F013         	call	___awmod	;wreg free
   929  0028EE  C501  F507         	movff	?___awmod,___awdiv@dividend
   930  0028F2  C502  F508         	movff	?___awmod+1,___awdiv@dividend+1
   931  0028F6  0E00               	movlw	0
   932  0028F8  6E0A               	movwf	(___awdiv@divisor+1)^(0+1280),c
   933  0028FA  0E0A               	movlw	10
   934  0028FC  6E09               	movwf	___awdiv@divisor^(0+1280),c
   935  0028FE  EC03  F013         	call	___awdiv	;wreg free
   936  002902  5007               	movf	?___awdiv^(0+1280),w,c
   937  002904  6E14               	movwf	_decena^(0+1280),c
   938                           
   939                           ;maincode.c: 51:     unidad = numero % 10;
   940  002906  C50F  F501         	movff	convierte@numero,___awmod@dividend
   941  00290A  6A02               	clrf	(___awmod@dividend+1)^(0+1280),c
   942  00290C  0E00               	movlw	0
   943  00290E  6E04               	movwf	(___awmod@divisor+1)^(0+1280),c
   944  002910  0E0A               	movlw	10
   945  002912  6E03               	movwf	___awmod@divisor^(0+1280),c
   946  002914  EC65  F013         	call	___awmod	;wreg free
   947  002918  5001               	movf	?___awmod^(0+1280),w,c
   948  00291A  6E13               	movwf	_unidad^(0+1280),c
   949  00291C  0012               	return		;funcret
   950  00291E                     __end_of_convierte:
   951                           	callstack 0
   952                           
   953 ;; *************** function ___awmod *****************
   954 ;; Defined at:
   955 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\awmod.c"
   956 ;; Parameters:    Size  Location     Type
   957 ;;  dividend        2    0[COMRAM] int 
   958 ;;  divisor         2    2[COMRAM] int 
   959 ;; Auto vars:     Size  Location     Type
   960 ;;  sign            1    5[COMRAM] unsigned char 
   961 ;;  counter         1    4[COMRAM] unsigned char 
   962 ;; Return value:  Size  Location     Type
   963 ;;                  2    0[COMRAM] int 
   964 ;; Registers used:
   965 ;;		wreg, status,2, status,0
   966 ;; Tracked objects:
   967 ;;		On entry : 0/0
   968 ;;		On exit  : 0/0
   969 ;;		Unchanged: 0/0
   970 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   971 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   972 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   973 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   974 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   975 ;;Total ram usage:        6 bytes
   976 ;; Hardware stack levels used: 1
   977 ;; Hardware stack levels required when called: 1
   978 ;; This function calls:
   979 ;;		Nothing
   980 ;; This function is called by:
   981 ;;		_convierte
   982 ;; This function uses a non-reentrant model
   983 ;;
   984                           
   985                           	psect	text7
   986  0026CA                     __ptext7:
   987                           	callstack 0
   988  0026CA                     ___awmod:
   989                           	callstack 124
   990  0026CA  0E00               	movlw	0
   991  0026CC  6E06               	movwf	___awmod@sign^(0+1280),c
   992  0026CE  BE02               	btfsc	(___awmod@dividend+1)^(0+1280),7,c
   993  0026D0  EF6E  F013         	goto	u370
   994  0026D4  EF6C  F013         	goto	u371
   995  0026D8                     u371:
   996  0026D8  EF74  F013         	goto	l1345
   997  0026DC                     u370:
   998  0026DC  6C01               	negf	___awmod@dividend^(0+1280),c
   999  0026DE  1E02               	comf	(___awmod@dividend+1)^(0+1280),f,c
  1000  0026E0  B0D8               	btfsc	status,0,c
  1001  0026E2  2A02               	incf	(___awmod@dividend+1)^(0+1280),f,c
  1002  0026E4  0E01               	movlw	1
  1003  0026E6  6E06               	movwf	___awmod@sign^(0+1280),c
  1004  0026E8                     l1345:
  1005  0026E8  BE04               	btfsc	(___awmod@divisor+1)^(0+1280),7,c
  1006  0026EA  EF7B  F013         	goto	u380
  1007  0026EE  EF79  F013         	goto	u381
  1008  0026F2                     u381:
  1009  0026F2  EF7F  F013         	goto	l1349
  1010  0026F6                     u380:
  1011  0026F6  6C03               	negf	___awmod@divisor^(0+1280),c
  1012  0026F8  1E04               	comf	(___awmod@divisor+1)^(0+1280),f,c
  1013  0026FA  B0D8               	btfsc	status,0,c
  1014  0026FC  2A04               	incf	(___awmod@divisor+1)^(0+1280),f,c
  1015  0026FE                     l1349:
  1016  0026FE  5003               	movf	___awmod@divisor^(0+1280),w,c
  1017  002700  1004               	iorwf	(___awmod@divisor+1)^(0+1280),w,c
  1018  002702  B4D8               	btfsc	status,2,c
  1019  002704  EF86  F013         	goto	u391
  1020  002708  EF88  F013         	goto	u390
  1021  00270C                     u391:
  1022  00270C  EFAC  F013         	goto	l1365
  1023  002710                     u390:
  1024  002710  0E01               	movlw	1
  1025  002712  6E05               	movwf	___awmod@counter^(0+1280),c
  1026  002714  EF90  F013         	goto	l1355
  1027  002718                     l1353:
  1028  002718  90D8               	bcf	status,0,c
  1029  00271A  3603               	rlcf	___awmod@divisor^(0+1280),f,c
  1030  00271C  3604               	rlcf	(___awmod@divisor+1)^(0+1280),f,c
  1031  00271E  2A05               	incf	___awmod@counter^(0+1280),f,c
  1032  002720                     l1355:
  1033  002720  AE04               	btfss	(___awmod@divisor+1)^(0+1280),7,c
  1034  002722  EF95  F013         	goto	u401
  1035  002726  EF97  F013         	goto	u400
  1036  00272A                     u401:
  1037  00272A  EF8C  F013         	goto	l1353
  1038  00272E                     u400:
  1039  00272E                     l1357:
  1040  00272E  5003               	movf	___awmod@divisor^(0+1280),w,c
  1041  002730  5C01               	subwf	___awmod@dividend^(0+1280),w,c
  1042  002732  5004               	movf	(___awmod@divisor+1)^(0+1280),w,c
  1043  002734  5802               	subwfb	(___awmod@dividend+1)^(0+1280),w,c
  1044  002736  A0D8               	btfss	status,0,c
  1045  002738  EFA0  F013         	goto	u411
  1046  00273C  EFA2  F013         	goto	u410
  1047  002740                     u411:
  1048  002740  EFA6  F013         	goto	l1361
  1049  002744                     u410:
  1050  002744  5003               	movf	___awmod@divisor^(0+1280),w,c
  1051  002746  5E01               	subwf	___awmod@dividend^(0+1280),f,c
  1052  002748  5004               	movf	(___awmod@divisor+1)^(0+1280),w,c
  1053  00274A  5A02               	subwfb	(___awmod@dividend+1)^(0+1280),f,c
  1054  00274C                     l1361:
  1055  00274C  90D8               	bcf	status,0,c
  1056  00274E  3204               	rrcf	(___awmod@divisor+1)^(0+1280),f,c
  1057  002750  3203               	rrcf	___awmod@divisor^(0+1280),f,c
  1058  002752  2E05               	decfsz	___awmod@counter^(0+1280),f,c
  1059  002754  EF97  F013         	goto	l1357
  1060  002758                     l1365:
  1061  002758  5006               	movf	___awmod@sign^(0+1280),w,c
  1062  00275A  B4D8               	btfsc	status,2,c
  1063  00275C  EFB2  F013         	goto	u421
  1064  002760  EFB4  F013         	goto	u420
  1065  002764                     u421:
  1066  002764  EFB8  F013         	goto	l1369
  1067  002768                     u420:
  1068  002768  6C01               	negf	___awmod@dividend^(0+1280),c
  1069  00276A  1E02               	comf	(___awmod@dividend+1)^(0+1280),f,c
  1070  00276C  B0D8               	btfsc	status,0,c
  1071  00276E  2A02               	incf	(___awmod@dividend+1)^(0+1280),f,c
  1072  002770                     l1369:
  1073  002770  C501  F501         	movff	___awmod@dividend,?___awmod
  1074  002774  C502  F502         	movff	___awmod@dividend+1,?___awmod+1
  1075  002778  0012               	return		;funcret
  1076  00277A                     __end_of___awmod:
  1077                           	callstack 0
  1078                           
  1079 ;; *************** function ___awdiv *****************
  1080 ;; Defined at:
  1081 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\awdiv.c"
  1082 ;; Parameters:    Size  Location     Type
  1083 ;;  dividend        2    6[COMRAM] int 
  1084 ;;  divisor         2    8[COMRAM] int 
  1085 ;; Auto vars:     Size  Location     Type
  1086 ;;  quotient        2   12[COMRAM] int 
  1087 ;;  sign            1   11[COMRAM] unsigned char 
  1088 ;;  counter         1   10[COMRAM] unsigned char 
  1089 ;; Return value:  Size  Location     Type
  1090 ;;                  2    6[COMRAM] int 
  1091 ;; Registers used:
  1092 ;;		wreg, status,2, status,0
  1093 ;; Tracked objects:
  1094 ;;		On entry : 0/0
  1095 ;;		On exit  : 0/0
  1096 ;;		Unchanged: 0/0
  1097 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1098 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1099 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1100 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1101 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1102 ;;Total ram usage:        8 bytes
  1103 ;; Hardware stack levels used: 1
  1104 ;; Hardware stack levels required when called: 1
  1105 ;; This function calls:
  1106 ;;		Nothing
  1107 ;; This function is called by:
  1108 ;;		_convierte
  1109 ;; This function uses a non-reentrant model
  1110 ;;
  1111                           
  1112                           	psect	text8
  1113  002606                     __ptext8:
  1114                           	callstack 0
  1115  002606                     ___awdiv:
  1116                           	callstack 124
  1117  002606  0E00               	movlw	0
  1118  002608  6E0C               	movwf	___awdiv@sign^(0+1280),c
  1119  00260A  BE0A               	btfsc	(___awdiv@divisor+1)^(0+1280),7,c
  1120  00260C  EF0C  F013         	goto	u310
  1121  002610  EF0A  F013         	goto	u311
  1122  002614                     u311:
  1123  002614  EF12  F013         	goto	l1301
  1124  002618                     u310:
  1125  002618  6C09               	negf	___awdiv@divisor^(0+1280),c
  1126  00261A  1E0A               	comf	(___awdiv@divisor+1)^(0+1280),f,c
  1127  00261C  B0D8               	btfsc	status,0,c
  1128  00261E  2A0A               	incf	(___awdiv@divisor+1)^(0+1280),f,c
  1129  002620  0E01               	movlw	1
  1130  002622  6E0C               	movwf	___awdiv@sign^(0+1280),c
  1131  002624                     l1301:
  1132  002624  BE08               	btfsc	(___awdiv@dividend+1)^(0+1280),7,c
  1133  002626  EF19  F013         	goto	u320
  1134  00262A  EF17  F013         	goto	u321
  1135  00262E                     u321:
  1136  00262E  EF1F  F013         	goto	l1307
  1137  002632                     u320:
  1138  002632  6C07               	negf	___awdiv@dividend^(0+1280),c
  1139  002634  1E08               	comf	(___awdiv@dividend+1)^(0+1280),f,c
  1140  002636  B0D8               	btfsc	status,0,c
  1141  002638  2A08               	incf	(___awdiv@dividend+1)^(0+1280),f,c
  1142  00263A  0E01               	movlw	1
  1143  00263C  1A0C               	xorwf	___awdiv@sign^(0+1280),f,c
  1144  00263E                     l1307:
  1145  00263E  0E00               	movlw	0
  1146  002640  6E0E               	movwf	(___awdiv@quotient+1)^(0+1280),c
  1147  002642  0E00               	movlw	0
  1148  002644  6E0D               	movwf	___awdiv@quotient^(0+1280),c
  1149  002646  5009               	movf	___awdiv@divisor^(0+1280),w,c
  1150  002648  100A               	iorwf	(___awdiv@divisor+1)^(0+1280),w,c
  1151  00264A  B4D8               	btfsc	status,2,c
  1152  00264C  EF2A  F013         	goto	u331
  1153  002650  EF2C  F013         	goto	u330
  1154  002654                     u331:
  1155  002654  EF54  F013         	goto	l1329
  1156  002658                     u330:
  1157  002658  0E01               	movlw	1
  1158  00265A  6E0B               	movwf	___awdiv@counter^(0+1280),c
  1159  00265C  EF34  F013         	goto	l1315
  1160  002660                     l1313:
  1161  002660  90D8               	bcf	status,0,c
  1162  002662  3609               	rlcf	___awdiv@divisor^(0+1280),f,c
  1163  002664  360A               	rlcf	(___awdiv@divisor+1)^(0+1280),f,c
  1164  002666  2A0B               	incf	___awdiv@counter^(0+1280),f,c
  1165  002668                     l1315:
  1166  002668  AE0A               	btfss	(___awdiv@divisor+1)^(0+1280),7,c
  1167  00266A  EF39  F013         	goto	u341
  1168  00266E  EF3B  F013         	goto	u340
  1169  002672                     u341:
  1170  002672  EF30  F013         	goto	l1313
  1171  002676                     u340:
  1172  002676                     l1317:
  1173  002676  90D8               	bcf	status,0,c
  1174  002678  360D               	rlcf	___awdiv@quotient^(0+1280),f,c
  1175  00267A  360E               	rlcf	(___awdiv@quotient+1)^(0+1280),f,c
  1176  00267C  5009               	movf	___awdiv@divisor^(0+1280),w,c
  1177  00267E  5C07               	subwf	___awdiv@dividend^(0+1280),w,c
  1178  002680  500A               	movf	(___awdiv@divisor+1)^(0+1280),w,c
  1179  002682  5808               	subwfb	(___awdiv@dividend+1)^(0+1280),w,c
  1180  002684  A0D8               	btfss	status,0,c
  1181  002686  EF47  F013         	goto	u351
  1182  00268A  EF49  F013         	goto	u350
  1183  00268E                     u351:
  1184  00268E  EF4E  F013         	goto	l1325
  1185  002692                     u350:
  1186  002692  5009               	movf	___awdiv@divisor^(0+1280),w,c
  1187  002694  5E07               	subwf	___awdiv@dividend^(0+1280),f,c
  1188  002696  500A               	movf	(___awdiv@divisor+1)^(0+1280),w,c
  1189  002698  5A08               	subwfb	(___awdiv@dividend+1)^(0+1280),f,c
  1190  00269A  800D               	bsf	___awdiv@quotient^(0+1280),0,c
  1191  00269C                     l1325:
  1192  00269C  90D8               	bcf	status,0,c
  1193  00269E  320A               	rrcf	(___awdiv@divisor+1)^(0+1280),f,c
  1194  0026A0  3209               	rrcf	___awdiv@divisor^(0+1280),f,c
  1195  0026A2  2E0B               	decfsz	___awdiv@counter^(0+1280),f,c
  1196  0026A4  EF3B  F013         	goto	l1317
  1197  0026A8                     l1329:
  1198  0026A8  500C               	movf	___awdiv@sign^(0+1280),w,c
  1199  0026AA  B4D8               	btfsc	status,2,c
  1200  0026AC  EF5A  F013         	goto	u361
  1201  0026B0  EF5C  F013         	goto	u360
  1202  0026B4                     u361:
  1203  0026B4  EF60  F013         	goto	l1333
  1204  0026B8                     u360:
  1205  0026B8  6C0D               	negf	___awdiv@quotient^(0+1280),c
  1206  0026BA  1E0E               	comf	(___awdiv@quotient+1)^(0+1280),f,c
  1207  0026BC  B0D8               	btfsc	status,0,c
  1208  0026BE  2A0E               	incf	(___awdiv@quotient+1)^(0+1280),f,c
  1209  0026C0                     l1333:
  1210  0026C0  C50D  F507         	movff	___awdiv@quotient,?___awdiv
  1211  0026C4  C50E  F508         	movff	___awdiv@quotient+1,?___awdiv+1
  1212  0026C8  0012               	return		;funcret
  1213  0026CA                     __end_of___awdiv:
  1214                           	callstack 0
  1215                           
  1216 ;; *************** function _configuro *****************
  1217 ;; Defined at:
  1218 ;;		line 10 in file "maincode.c"
  1219 ;; Parameters:    Size  Location     Type
  1220 ;;		None
  1221 ;; Auto vars:     Size  Location     Type
  1222 ;;		None
  1223 ;; Return value:  Size  Location     Type
  1224 ;;                  1    wreg      void 
  1225 ;; Registers used:
  1226 ;;		wreg, status,2
  1227 ;; Tracked objects:
  1228 ;;		On entry : 0/0
  1229 ;;		On exit  : 0/0
  1230 ;;		Unchanged: 0/0
  1231 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1232 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1233 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1234 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1235 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1236 ;;Total ram usage:        0 bytes
  1237 ;; Hardware stack levels used: 1
  1238 ;; Hardware stack levels required when called: 1
  1239 ;; This function calls:
  1240 ;;		Nothing
  1241 ;; This function is called by:
  1242 ;;		_main
  1243 ;; This function uses a non-reentrant model
  1244 ;;
  1245                           
  1246                           	psect	text9
  1247  0029B4                     __ptext9:
  1248                           	callstack 0
  1249  0029B4                     _configuro:
  1250                           	callstack 125
  1251  0029B4                     
  1252                           ;maincode.c: 12:     OSCCON1 = 0x60;
  1253  0029B4  0E60               	movlw	96
  1254  0029B6  0100               	movlb	0	; () banked
  1255  0029B8  6FAD               	movwf	173,b	;volatile
  1256                           
  1257                           ;maincode.c: 13:     OSCFRQ = 0x02;
  1258  0029BA  0E02               	movlw	2
  1259  0029BC  6FB1               	movwf	177,b	;volatile
  1260                           
  1261                           ;maincode.c: 14:     OSCEN = 0x40;
  1262  0029BE  0E40               	movlw	64
  1263  0029C0  6FB3               	movwf	179,b	;volatile
  1264                           
  1265                           ;maincode.c: 16:     TRISD = 0x00;
  1266  0029C2  0E00               	movlw	0
  1267  0029C4  6EC9               	movwf	201,c	;volatile
  1268                           
  1269                           ;maincode.c: 17:     ANSELD = 0x00;
  1270  0029C6  0E00               	movlw	0
  1271  0029C8  0104               	movlb	4	; () banked
  1272  0029CA  6F18               	movwf	24,b	;volatile
  1273  0029CC                     
  1274                           ; BSR set to: 4
  1275                           ;maincode.c: 18:     TRISAbits.TRISA0 = 1;
  1276  0029CC  80C6               	bsf	198,0,c	;volatile
  1277  0029CE                     
  1278                           ; BSR set to: 4
  1279                           ;maincode.c: 19:     ANSELAbits.ANSELA0 = 1;
  1280  0029CE  8100               	bsf	0,0,b	;volatile
  1281  0029D0                     
  1282                           ; BSR set to: 4
  1283                           ;maincode.c: 20:     TRISBbits.TRISB2 = 0;
  1284  0029D0  94C7               	bcf	199,2,c	;volatile
  1285  0029D2                     
  1286                           ; BSR set to: 4
  1287                           ;maincode.c: 21:     ANSELBbits.ANSELB2 = 0;
  1288  0029D2  9508               	bcf	8,2,b	;volatile
  1289                           
  1290                           ;maincode.c: 23:     T1CON = 0x01;
  1291  0029D4  0E01               	movlw	1
  1292  0029D6  0103               	movlb	3	; () banked
  1293  0029D8  6F1E               	movwf	30,b	;volatile
  1294                           
  1295                           ;maincode.c: 24:     T1CLK = 0x01;
  1296  0029DA  0E01               	movlw	1
  1297  0029DC  6F21               	movwf	33,b	;volatile
  1298                           
  1299                           ;maincode.c: 26:     CCP1CON = 0x8B;
  1300  0029DE  0E8B               	movlw	139
  1301  0029E0  6F42               	movwf	66,b	;volatile
  1302                           
  1303                           ;maincode.c: 27:     CCPR1H = 0x27;
  1304  0029E2  0E27               	movlw	39
  1305  0029E4  6F41               	movwf	65,b	;volatile
  1306                           
  1307                           ;maincode.c: 28:     CCPR1L = 0x10;
  1308  0029E6  0E10               	movlw	16
  1309  0029E8  6F40               	movwf	64,b	;volatile
  1310  0029EA                     
  1311                           ; BSR set to: 3
  1312                           ;maincode.c: 30:     INTCON0bits.GIE = 1;
  1313  0029EA  8ED6               	bsf	214,7,c	;volatile
  1314  0029EC                     
  1315                           ; BSR set to: 3
  1316                           ;maincode.c: 31:     PIE3bits.CCP1IE = 1;
  1317  0029EC  8CA1               	bsf	161,6,c	;volatile
  1318  0029EE                     
  1319                           ; BSR set to: 3
  1320                           ;maincode.c: 32:     PIE1bits.INT0IE = 1;
  1321  0029EE  809F               	bsf	159,0,c	;volatile
  1322  0029F0                     
  1323                           ; BSR set to: 3
  1324                           ;maincode.c: 33:     PIE6bits.INT1IE = 1;
  1325  0029F0  80A4               	bsf	164,0,c	;volatile
  1326  0029F2                     
  1327                           ; BSR set to: 3
  1328                           ;maincode.c: 34:     PIE10bits.INT2IE = 1;
  1329  0029F2  80A8               	bsf	168,0,c	;volatile
  1330  0029F4                     
  1331                           ; BSR set to: 3
  1332  0029F4  0012               	return		;funcret
  1333  0029F6                     __end_of_configuro:
  1334                           	callstack 0
  1335                           
  1336 ;; *************** function _POS_CURSOR *****************
  1337 ;; Defined at:
  1338 ;;		line 7 in file "LCD.c"
  1339 ;; Parameters:    Size  Location     Type
  1340 ;;  fila            1    wreg     unsigned char 
  1341 ;;  columna         1    3[COMRAM] unsigned char 
  1342 ;; Auto vars:     Size  Location     Type
  1343 ;;  fila            1    4[COMRAM] unsigned char 
  1344 ;; Return value:  Size  Location     Type
  1345 ;;                  1    wreg      void 
  1346 ;; Registers used:
  1347 ;;		wreg, status,2, status,0, cstack
  1348 ;; Tracked objects:
  1349 ;;		On entry : 0/0
  1350 ;;		On exit  : 0/0
  1351 ;;		Unchanged: 0/0
  1352 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1353 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1354 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1355 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1356 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1357 ;;Total ram usage:        2 bytes
  1358 ;; Hardware stack levels used: 1
  1359 ;; Hardware stack levels required when called: 3
  1360 ;; This function calls:
  1361 ;;		_ENVIA_LCD_CMD
  1362 ;; This function is called by:
  1363 ;;		_main
  1364 ;; This function uses a non-reentrant model
  1365 ;;
  1366                           
  1367                           	psect	text10
  1368  002A34                     __ptext10:
  1369                           	callstack 0
  1370  002A34                     _POS_CURSOR:
  1371                           	callstack 123
  1372                           
  1373                           ; BSR set to: 3
  1374                           ;incstack = 0
  1375                           ;POS_CURSOR@fila stored from wreg
  1376  002A34  6E05               	movwf	POS_CURSOR@fila^(0+1280),c
  1377  002A36                     
  1378                           ;LCD.c: 7: void POS_CURSOR(unsigned char fila,unsigned char columna);LCD.c: 8: {;LCD.c: 
      +                          9:  if(fila == 1)
  1379  002A36  0405               	decf	POS_CURSOR@fila^(0+1280),w,c
  1380  002A38  A4D8               	btfss	status,2,c
  1381  002A3A  EF21  F015         	goto	u431
  1382  002A3E  EF23  F015         	goto	u430
  1383  002A42                     u431:
  1384  002A42  EF29  F015         	goto	l1379
  1385  002A46                     u430:
  1386  002A46                     
  1387                           ;LCD.c: 10:  {;LCD.c: 11:   ENVIA_LCD_CMD(0x80+columna);
  1388  002A46  5004               	movf	POS_CURSOR@columna^(0+1280),w,c
  1389  002A48  0F80               	addlw	128
  1390  002A4A  EC37  F015         	call	_ENVIA_LCD_CMD
  1391                           
  1392                           ;LCD.c: 12:  }
  1393  002A4E  EF36  F015         	goto	l149
  1394  002A52                     l1379:
  1395  002A52  0E02               	movlw	2
  1396  002A54  1805               	xorwf	POS_CURSOR@fila^(0+1280),w,c
  1397  002A56  A4D8               	btfss	status,2,c
  1398  002A58  EF30  F015         	goto	u441
  1399  002A5C  EF32  F015         	goto	u440
  1400  002A60                     u441:
  1401  002A60  EF36  F015         	goto	l149
  1402  002A64                     u440:
  1403  002A64                     
  1404                           ;LCD.c: 14:  {;LCD.c: 15:   ENVIA_LCD_CMD(0xC0+columna);
  1405  002A64  5004               	movf	POS_CURSOR@columna^(0+1280),w,c
  1406  002A66  0FC0               	addlw	192
  1407  002A68  EC37  F015         	call	_ENVIA_LCD_CMD
  1408  002A6C                     l149:
  1409  002A6C  0012               	return		;funcret
  1410  002A6E                     __end_of_POS_CURSOR:
  1411                           	callstack 0
  1412                           
  1413 ;; *************** function _ENVIA_LCD_CMD *****************
  1414 ;; Defined at:
  1415 ;;		line 116 in file "LCD.c"
  1416 ;; Parameters:    Size  Location     Type
  1417 ;;  dato            1    wreg     unsigned char 
  1418 ;; Auto vars:     Size  Location     Type
  1419 ;;  dato            1    1[COMRAM] unsigned char 
  1420 ;;  aux             1    2[COMRAM] unsigned char 
  1421 ;; Return value:  Size  Location     Type
  1422 ;;                  1    wreg      void 
  1423 ;; Registers used:
  1424 ;;		wreg, status,2, status,0, cstack
  1425 ;; Tracked objects:
  1426 ;;		On entry : 0/0
  1427 ;;		On exit  : 0/0
  1428 ;;		Unchanged: 0/0
  1429 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1430 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1431 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1432 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1433 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1434 ;;Total ram usage:        2 bytes
  1435 ;; Hardware stack levels used: 1
  1436 ;; Hardware stack levels required when called: 2
  1437 ;; This function calls:
  1438 ;;		_ENVIA_NIBBLE
  1439 ;;		_LEER_LCD
  1440 ;; This function is called by:
  1441 ;;		_POS_CURSOR
  1442 ;;		_CURSOR_HOME
  1443 ;;		_CURSOR_ONOFF
  1444 ;;		_BORRAR_LCD
  1445 ;;		_LCD_CONFIG
  1446 ;;		_BLINK_CURSOR
  1447 ;;		_DISPLAY_ONOFF
  1448 ;;		_GENERACARACTER
  1449 ;; This function uses a non-reentrant model
  1450 ;;
  1451                           
  1452                           	psect	text11
  1453  002A6E                     __ptext11:
  1454                           	callstack 0
  1455  002A6E                     _ENVIA_LCD_CMD:
  1456                           	callstack 122
  1457                           
  1458                           ;incstack = 0
  1459                           ;ENVIA_LCD_CMD@dato stored from wreg
  1460  002A6E  6E02               	movwf	ENVIA_LCD_CMD@dato^(0+1280),c
  1461  002A70                     
  1462                           ;LCD.c: 116: void ENVIA_LCD_CMD(unsigned char dato);LCD.c: 117: {;LCD.c: 118:  unsigned 
      +                          char aux;;LCD.c: 119:  LATDbits.LATD0 = 0;
  1463  002A70  90C1               	bcf	193,0,c	;volatile
  1464  002A72                     
  1465                           ;LCD.c: 120:  LEER_LCD();
  1466  002A72  ECBD  F013         	call	_LEER_LCD	;wreg free
  1467  002A76                     
  1468                           ;LCD.c: 121:  TRISD = 0b00000000;
  1469  002A76  0E00               	movlw	0
  1470  002A78  6EC9               	movwf	201,c	;volatile
  1471  002A7A                     
  1472                           ;LCD.c: 123:         _delay(1200);
  1473  002A7A  0EF0               	movlw	240
  1474  002A7C                     u527:
  1475  002A7C  D000               	nop2	
  1476  002A7E  2EE8               	decfsz	wreg,f,c
  1477  002A80  D7FD               	bra	u527
  1478  002A82                     
  1479                           ;LCD.c: 124:         LATDbits.LATD1 = 0;
  1480  002A82  92C1               	bcf	193,1,c	;volatile
  1481  002A84                     
  1482                           ;LCD.c: 125:  LATDbits.LATD2 = 0;
  1483  002A84  94C1               	bcf	193,2,c	;volatile
  1484  002A86                     
  1485                           ;LCD.c: 126:  LATDbits.LATD0 = 0;
  1486  002A86  90C1               	bcf	193,0,c	;volatile
  1487  002A88                     
  1488                           ;LCD.c: 127:  aux = dato & 0xF0;
  1489  002A88  5002               	movf	ENVIA_LCD_CMD@dato^(0+1280),w,c
  1490  002A8A  0BF0               	andlw	240
  1491  002A8C  6E03               	movwf	ENVIA_LCD_CMD@aux^(0+1280),c
  1492  002A8E                     
  1493                           ;LCD.c: 128:  ENVIA_NIBBLE(aux);
  1494  002A8E  5003               	movf	ENVIA_LCD_CMD@aux^(0+1280),w,c
  1495  002A90  EC9C  F015         	call	_ENVIA_NIBBLE
  1496  002A94                     
  1497                           ;LCD.c: 129:  aux = dato<<4;
  1498  002A94  3802               	swapf	ENVIA_LCD_CMD@dato^(0+1280),w,c
  1499  002A96  0BF0               	andlw	240
  1500  002A98  6E03               	movwf	ENVIA_LCD_CMD@aux^(0+1280),c
  1501  002A9A                     
  1502                           ;LCD.c: 130:  ENVIA_NIBBLE(aux);
  1503  002A9A  5003               	movf	ENVIA_LCD_CMD@aux^(0+1280),w,c
  1504  002A9C  EC9C  F015         	call	_ENVIA_NIBBLE
  1505  002AA0  0012               	return		;funcret
  1506  002AA2                     __end_of_ENVIA_LCD_CMD:
  1507                           	callstack 0
  1508                           
  1509 ;; *************** function _ESCRIBE_MENSAJE2 *****************
  1510 ;; Defined at:
  1511 ;;		line 51 in file "LCD.c"
  1512 ;; Parameters:    Size  Location     Type
  1513 ;;  cadena          2    4[COMRAM] PTR const unsigned char 
  1514 ;;		 -> STR_3(13), STR_2(11), STR_1(11), 
  1515 ;; Auto vars:     Size  Location     Type
  1516 ;;  i               1    9[COMRAM] unsigned char 
  1517 ;;  tam             1    8[COMRAM] unsigned char 
  1518 ;; Return value:  Size  Location     Type
  1519 ;;                  1    wreg      void 
  1520 ;; Registers used:
  1521 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1522 ;; Tracked objects:
  1523 ;;		On entry : 0/0
  1524 ;;		On exit  : 0/0
  1525 ;;		Unchanged: 0/0
  1526 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1527 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1528 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1529 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1530 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1531 ;;Total ram usage:        6 bytes
  1532 ;; Hardware stack levels used: 1
  1533 ;; Hardware stack levels required when called: 3
  1534 ;; This function calls:
  1535 ;;		_ENVIA_CHAR
  1536 ;;		_strlen
  1537 ;; This function is called by:
  1538 ;;		_main
  1539 ;; This function uses a non-reentrant model
  1540 ;;
  1541                           
  1542                           	psect	text12
  1543  00291E                     __ptext12:
  1544                           	callstack 0
  1545  00291E                     _ESCRIBE_MENSAJE2:
  1546                           	callstack 123
  1547  00291E                     
  1548                           ;LCD.c: 51: void ESCRIBE_MENSAJE2(const char *cadena);LCD.c: 52: {;LCD.c: 53:     unsign
      +                          ed char tam;;LCD.c: 54:     tam = strlen(cadena);
  1549  00291E  C505  F501         	movff	ESCRIBE_MENSAJE2@cadena,strlen@s
  1550  002922  C506  F502         	movff	ESCRIBE_MENSAJE2@cadena+1,strlen@s+1
  1551  002926  ECFB  F014         	call	_strlen	;wreg free
  1552  00292A  5001               	movf	?_strlen^(0+1280),w,c
  1553  00292C  6E09               	movwf	ESCRIBE_MENSAJE2@tam^(0+1280),c
  1554  00292E                     
  1555                           ;LCD.c: 56:  for(i = 0; i<tam; i++)
  1556  00292E  0E00               	movlw	0
  1557  002930  6E0A               	movwf	ESCRIBE_MENSAJE2@i^(0+1280),c
  1558  002932  EFAC  F014         	goto	l1393
  1559  002936                     l1389:
  1560                           
  1561                           ;LCD.c: 57:  {;LCD.c: 58:   ENVIA_CHAR(cadena[i]);
  1562  002936  500A               	movf	ESCRIBE_MENSAJE2@i^(0+1280),w,c
  1563  002938  2405               	addwf	ESCRIBE_MENSAJE2@cadena^(0+1280),w,c
  1564  00293A  6E07               	movwf	??_ESCRIBE_MENSAJE2^(0+1280),c
  1565  00293C  0E00               	movlw	0
  1566  00293E  2006               	addwfc	(ESCRIBE_MENSAJE2@cadena+1)^(0+1280),w,c
  1567  002940  6E08               	movwf	(??_ESCRIBE_MENSAJE2+1)^(0+1280),c
  1568  002942  0061  F41C  F4F6   	movff	??_ESCRIBE_MENSAJE2,tblptrl
  1569  002948  0061  F420  F4F7   	movff	??_ESCRIBE_MENSAJE2+1,tblptrh
  1570  00294E                     	if	0	;tblptru may be non-zero
  1571  00294E                     	endif
  1572  00294E                     	if	0	;tblptru may be non-zero
  1573  00294E                     	endif
  1574  00294E  0008               	tblrd		*
  1575  002950  50F5               	movf	tablat,w,c
  1576  002952  EC51  F015         	call	_ENVIA_CHAR
  1577  002956                     
  1578                           ;LCD.c: 59:  }
  1579  002956  2A0A               	incf	ESCRIBE_MENSAJE2@i^(0+1280),f,c
  1580  002958                     l1393:
  1581  002958  5009               	movf	ESCRIBE_MENSAJE2@tam^(0+1280),w,c
  1582  00295A  5C0A               	subwf	ESCRIBE_MENSAJE2@i^(0+1280),w,c
  1583  00295C  A0D8               	btfss	status,0,c
  1584  00295E  EFB3  F014         	goto	u451
  1585  002962  EFB5  F014         	goto	u450
  1586  002966                     u451:
  1587  002966  EF9B  F014         	goto	l1389
  1588  00296A                     u450:
  1589  00296A  0012               	return		;funcret
  1590  00296C                     __end_of_ESCRIBE_MENSAJE2:
  1591                           	callstack 0
  1592                           
  1593 ;; *************** function _strlen *****************
  1594 ;; Defined at:
  1595 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\strlen.c"
  1596 ;; Parameters:    Size  Location     Type
  1597 ;;  s               2    0[COMRAM] PTR const unsigned char 
  1598 ;;		 -> STR_3(13), STR_2(11), STR_1(11), 
  1599 ;; Auto vars:     Size  Location     Type
  1600 ;;  a               2    2[COMRAM] PTR const unsigned char 
  1601 ;;		 -> STR_3(13), STR_2(11), STR_1(11), 
  1602 ;; Return value:  Size  Location     Type
  1603 ;;                  2    0[COMRAM] unsigned int 
  1604 ;; Registers used:
  1605 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  1606 ;; Tracked objects:
  1607 ;;		On entry : 0/0
  1608 ;;		On exit  : 0/0
  1609 ;;		Unchanged: 0/0
  1610 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1611 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1612 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1613 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1614 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1615 ;;Total ram usage:        4 bytes
  1616 ;; Hardware stack levels used: 1
  1617 ;; Hardware stack levels required when called: 1
  1618 ;; This function calls:
  1619 ;;		Nothing
  1620 ;; This function is called by:
  1621 ;;		_ESCRIBE_MENSAJE2
  1622 ;; This function uses a non-reentrant model
  1623 ;;
  1624                           
  1625                           	psect	text13
  1626  0029F6                     __ptext13:
  1627                           	callstack 0
  1628  0029F6                     _strlen:
  1629                           	callstack 124
  1630  0029F6  C501  F503         	movff	strlen@s,strlen@a
  1631  0029FA  C502  F504         	movff	strlen@s+1,strlen@a+1
  1632  0029FE  EF03  F015         	goto	l1287
  1633  002A02                     l1285:
  1634  002A02  4A01               	infsnz	strlen@s^(0+1280),f,c
  1635  002A04  2A02               	incf	(strlen@s+1)^(0+1280),f,c
  1636  002A06                     l1287:
  1637  002A06  0061  F404  F4F6   	movff	strlen@s,tblptrl
  1638  002A0C  0061  F408  F4F7   	movff	strlen@s+1,tblptrh
  1639  002A12                     	if	0	;tblptru may be non-zero
  1640  002A12                     	endif
  1641  002A12                     	if	0	;tblptru may be non-zero
  1642  002A12                     	endif
  1643  002A12  0008               	tblrd		*
  1644  002A14  50F5               	movf	tablat,w,c
  1645  002A16  0900               	iorlw	0
  1646  002A18  A4D8               	btfss	status,2,c
  1647  002A1A  EF11  F015         	goto	u301
  1648  002A1E  EF13  F015         	goto	u300
  1649  002A22                     u301:
  1650  002A22  EF01  F015         	goto	l1285
  1651  002A26                     u300:
  1652  002A26  5003               	movf	strlen@a^(0+1280),w,c
  1653  002A28  5C01               	subwf	strlen@s^(0+1280),w,c
  1654  002A2A  6E01               	movwf	?_strlen^(0+1280),c
  1655  002A2C  5004               	movf	(strlen@a+1)^(0+1280),w,c
  1656  002A2E  5802               	subwfb	(strlen@s+1)^(0+1280),w,c
  1657  002A30  6E02               	movwf	(?_strlen+1)^(0+1280),c
  1658  002A32  0012               	return		;funcret
  1659  002A34                     __end_of_strlen:
  1660                           	callstack 0
  1661                           
  1662 ;; *************** function _ENVIA_CHAR *****************
  1663 ;; Defined at:
  1664 ;;		line 62 in file "LCD.c"
  1665 ;; Parameters:    Size  Location     Type
  1666 ;;  dato            1    wreg     unsigned char 
  1667 ;; Auto vars:     Size  Location     Type
  1668 ;;  dato            1    1[COMRAM] unsigned char 
  1669 ;;  aux             1    2[COMRAM] unsigned char 
  1670 ;; Return value:  Size  Location     Type
  1671 ;;                  1    wreg      void 
  1672 ;; Registers used:
  1673 ;;		wreg, status,2, status,0, cstack
  1674 ;; Tracked objects:
  1675 ;;		On entry : 0/0
  1676 ;;		On exit  : 0/0
  1677 ;;		Unchanged: 0/0
  1678 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1679 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1680 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1681 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1682 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1683 ;;Total ram usage:        2 bytes
  1684 ;; Hardware stack levels used: 1
  1685 ;; Hardware stack levels required when called: 2
  1686 ;; This function calls:
  1687 ;;		_ENVIA_NIBBLE
  1688 ;;		_LEER_LCD
  1689 ;; This function is called by:
  1690 ;;		_main
  1691 ;;		_ESCRIBE_MENSAJE2
  1692 ;;		_ESCRIBE_MENSAJE
  1693 ;;		_GENERACARACTER
  1694 ;; This function uses a non-reentrant model
  1695 ;;
  1696                           
  1697                           	psect	text14
  1698  002AA2                     __ptext14:
  1699                           	callstack 0
  1700  002AA2                     _ENVIA_CHAR:
  1701                           	callstack 123
  1702                           
  1703                           ;incstack = 0
  1704                           ;ENVIA_CHAR@dato stored from wreg
  1705  002AA2  6E02               	movwf	ENVIA_CHAR@dato^(0+1280),c
  1706  002AA4                     
  1707                           ;LCD.c: 62: void ENVIA_CHAR(unsigned char dato);LCD.c: 63: {;LCD.c: 64:  unsigned char a
      +                          ux;;LCD.c: 65:  LATDbits.LATD0 = 1;
  1708  002AA4  80C1               	bsf	193,0,c	;volatile
  1709  002AA6                     
  1710                           ;LCD.c: 66:  LEER_LCD();
  1711  002AA6  ECBD  F013         	call	_LEER_LCD	;wreg free
  1712  002AAA                     
  1713                           ;LCD.c: 67:  TRISD = 0x00;
  1714  002AAA  0E00               	movlw	0
  1715  002AAC  6EC9               	movwf	201,c	;volatile
  1716  002AAE                     
  1717                           ;LCD.c: 68:         _delay(1200);
  1718  002AAE  0EF0               	movlw	240
  1719  002AB0                     u537:
  1720  002AB0  D000               	nop2	
  1721  002AB2  2EE8               	decfsz	wreg,f,c
  1722  002AB4  D7FD               	bra	u537
  1723  002AB6                     
  1724                           ;LCD.c: 70:  LATDbits.LATD1 = 0;
  1725  002AB6  92C1               	bcf	193,1,c	;volatile
  1726  002AB8                     
  1727                           ;LCD.c: 71:  LATDbits.LATD2 = 0;
  1728  002AB8  94C1               	bcf	193,2,c	;volatile
  1729  002ABA                     
  1730                           ;LCD.c: 72:  LATDbits.LATD0 = 1;
  1731  002ABA  80C1               	bsf	193,0,c	;volatile
  1732  002ABC                     
  1733                           ;LCD.c: 73:  aux = dato & 0xF0;
  1734  002ABC  5002               	movf	ENVIA_CHAR@dato^(0+1280),w,c
  1735  002ABE  0BF0               	andlw	240
  1736  002AC0  6E03               	movwf	ENVIA_CHAR@aux^(0+1280),c
  1737  002AC2                     
  1738                           ;LCD.c: 74:  ENVIA_NIBBLE(aux);
  1739  002AC2  5003               	movf	ENVIA_CHAR@aux^(0+1280),w,c
  1740  002AC4  EC9C  F015         	call	_ENVIA_NIBBLE
  1741  002AC8                     
  1742                           ;LCD.c: 75:  aux = dato << 4;
  1743  002AC8  3802               	swapf	ENVIA_CHAR@dato^(0+1280),w,c
  1744  002ACA  0BF0               	andlw	240
  1745  002ACC  6E03               	movwf	ENVIA_CHAR@aux^(0+1280),c
  1746  002ACE                     
  1747                           ;LCD.c: 76:  ENVIA_NIBBLE(aux);
  1748  002ACE  5003               	movf	ENVIA_CHAR@aux^(0+1280),w,c
  1749  002AD0  EC9C  F015         	call	_ENVIA_NIBBLE
  1750  002AD4  0012               	return		;funcret
  1751  002AD6                     __end_of_ENVIA_CHAR:
  1752                           	callstack 0
  1753                           
  1754 ;; *************** function _LEER_LCD *****************
  1755 ;; Defined at:
  1756 ;;		line 133 in file "LCD.c"
  1757 ;; Parameters:    Size  Location     Type
  1758 ;;		None
  1759 ;; Auto vars:     Size  Location     Type
  1760 ;;  aux             1    0[COMRAM] unsigned char 
  1761 ;; Return value:  Size  Location     Type
  1762 ;;                  1    wreg      void 
  1763 ;; Registers used:
  1764 ;;		wreg, status,2, status,0
  1765 ;; Tracked objects:
  1766 ;;		On entry : 0/0
  1767 ;;		On exit  : 0/0
  1768 ;;		Unchanged: 0/0
  1769 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1770 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1771 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1772 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1773 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1774 ;;Total ram usage:        1 bytes
  1775 ;; Hardware stack levels used: 1
  1776 ;; Hardware stack levels required when called: 1
  1777 ;; This function calls:
  1778 ;;		Nothing
  1779 ;; This function is called by:
  1780 ;;		_ENVIA_CHAR
  1781 ;;		_ENVIA_LCD_CMD
  1782 ;; This function uses a non-reentrant model
  1783 ;;
  1784                           
  1785                           	psect	text15
  1786  00277A                     __ptext15:
  1787                           	callstack 0
  1788  00277A                     _LEER_LCD:
  1789                           	callstack 122
  1790  00277A                     
  1791                           ;LCD.c: 135:  unsigned char aux;;LCD.c: 136:  TRISD = 0xF8;
  1792  00277A  0EF8               	movlw	248
  1793  00277C  6EC9               	movwf	201,c	;volatile
  1794  00277E                     
  1795                           ;LCD.c: 137:  LATDbits.LATD0 = 0;
  1796  00277E  90C1               	bcf	193,0,c	;volatile
  1797  002780                     
  1798                           ;LCD.c: 138:  LATDbits.LATD1 = 1;
  1799  002780  82C1               	bsf	193,1,c	;volatile
  1800  002782                     
  1801                           ;LCD.c: 139:  LATDbits.LATD2 = 1;
  1802  002782  84C1               	bsf	193,2,c	;volatile
  1803  002784                     
  1804                           ;LCD.c: 140:         _delay(1200);
  1805  002784  0EF0               	movlw	240
  1806  002786                     u547:
  1807  002786  D000               	nop2	
  1808  002788  2EE8               	decfsz	wreg,f,c
  1809  00278A  D7FD               	bra	u547
  1810  00278C                     
  1811                           ;LCD.c: 142:  aux = PORTD;
  1812  00278C  0061 F344  F501    	movff	1233,LEER_LCD@aux	;volatile
  1813  002792                     
  1814                           ;LCD.c: 143:  LATDbits.LATD2 = 0;
  1815  002792  94C1               	bcf	193,2,c	;volatile
  1816  002794                     
  1817                           ;LCD.c: 144:         _delay(1200);
  1818  002794  0EF0               	movlw	240
  1819  002796                     u557:
  1820  002796  D000               	nop2	
  1821  002798  2EE8               	decfsz	wreg,f,c
  1822  00279A  D7FD               	bra	u557
  1823  00279C                     
  1824                           ;LCD.c: 146:  LATDbits.LATD2 = 1;
  1825  00279C  84C1               	bsf	193,2,c	;volatile
  1826  00279E                     
  1827                           ;LCD.c: 147:         _delay(1200);
  1828  00279E  0EF0               	movlw	240
  1829  0027A0                     u567:
  1830  0027A0  D000               	nop2	
  1831  0027A2  2EE8               	decfsz	wreg,f,c
  1832  0027A4  D7FD               	bra	u567
  1833  0027A6                     
  1834                           ;LCD.c: 149:  LATDbits.LATD2 = 0;
  1835  0027A6  94C1               	bcf	193,2,c	;volatile
  1836  0027A8                     l909:
  1837                           
  1838                           ;LCD.c: 150:  aux = aux & 0x80;
  1839  0027A8  5001               	movf	LEER_LCD@aux^(0+1280),w,c
  1840  0027AA  0B80               	andlw	128
  1841  0027AC  6E01               	movwf	LEER_LCD@aux^(0+1280),c
  1842                           
  1843                           ;LCD.c: 151:  while(aux == 0x80)
  1844  0027AE  EFEE  F013         	goto	l923
  1845  0027B2                     l198:
  1846                           
  1847                           ;LCD.c: 152:         {;LCD.c: 153:             LATDbits.LATD2 = 1;
  1848  0027B2  84C1               	bsf	193,2,c	;volatile
  1849  0027B4                     
  1850                           ;LCD.c: 154:             _delay(1200);
  1851  0027B4  0EF0               	movlw	240
  1852  0027B6                     u577:
  1853  0027B6  D000               	nop2	
  1854  0027B8  2EE8               	decfsz	wreg,f,c
  1855  0027BA  D7FD               	bra	u577
  1856  0027BC                     
  1857                           ;LCD.c: 155:             aux = PORTD;
  1858  0027BC  0061 F344  F501    	movff	1233,LEER_LCD@aux	;volatile
  1859  0027C2                     
  1860                           ;LCD.c: 156:             LATDbits.LATD2 = 0;
  1861  0027C2  94C1               	bcf	193,2,c	;volatile
  1862                           
  1863                           ;LCD.c: 157:             _delay(1200);
  1864  0027C4  0EF0               	movlw	240
  1865  0027C6                     u587:
  1866  0027C6  D000               	nop2	
  1867  0027C8  2EE8               	decfsz	wreg,f,c
  1868  0027CA  D7FD               	bra	u587
  1869  0027CC                     
  1870                           ;LCD.c: 158:             LATDbits.LATD2 = 1;
  1871  0027CC  84C1               	bsf	193,2,c	;volatile
  1872                           
  1873                           ;LCD.c: 159:             _delay(1200);
  1874  0027CE  0EF0               	movlw	240
  1875  0027D0                     u597:
  1876  0027D0  D000               	nop2	
  1877  0027D2  2EE8               	decfsz	wreg,f,c
  1878  0027D4  D7FD               	bra	u597
  1879  0027D6                     
  1880                           ;LCD.c: 160:             LATDbits.LATD2 = 0;
  1881  0027D6  94C1               	bcf	193,2,c	;volatile
  1882  0027D8  EFD4  F013         	goto	l909
  1883  0027DC                     l923:
  1884                           
  1885                           ;LCD.c: 151:  while(aux == 0x80)
  1886  0027DC  0E80               	movlw	128
  1887  0027DE  1801               	xorwf	LEER_LCD@aux^(0+1280),w,c
  1888  0027E0  B4D8               	btfsc	status,2,c
  1889  0027E2  EFF5  F013         	goto	u11
  1890  0027E6  EFF7  F013         	goto	u10
  1891  0027EA                     u11:
  1892  0027EA  EFD9  F013         	goto	l198
  1893  0027EE                     u10:
  1894  0027EE  0012               	return		;funcret
  1895  0027F0                     __end_of_LEER_LCD:
  1896                           	callstack 0
  1897                           
  1898 ;; *************** function _ENVIA_NIBBLE *****************
  1899 ;; Defined at:
  1900 ;;		line 105 in file "LCD.c"
  1901 ;; Parameters:    Size  Location     Type
  1902 ;;  dato            1    wreg     unsigned char 
  1903 ;; Auto vars:     Size  Location     Type
  1904 ;;  dato            1    0[COMRAM] unsigned char 
  1905 ;; Return value:  Size  Location     Type
  1906 ;;                  1    wreg      void 
  1907 ;; Registers used:
  1908 ;;		wreg, status,2, status,0
  1909 ;; Tracked objects:
  1910 ;;		On entry : 0/0
  1911 ;;		On exit  : 0/0
  1912 ;;		Unchanged: 0/0
  1913 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1914 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1915 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1916 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1917 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1918 ;;Total ram usage:        1 bytes
  1919 ;; Hardware stack levels used: 1
  1920 ;; Hardware stack levels required when called: 1
  1921 ;; This function calls:
  1922 ;;		Nothing
  1923 ;; This function is called by:
  1924 ;;		_ENVIA_CHAR
  1925 ;;		_LCD_CONFIG
  1926 ;;		_ENVIA_LCD_CMD
  1927 ;; This function uses a non-reentrant model
  1928 ;;
  1929                           
  1930                           	psect	text16
  1931  002B38                     __ptext16:
  1932                           	callstack 0
  1933  002B38                     _ENVIA_NIBBLE:
  1934                           	callstack 123
  1935                           
  1936                           ;incstack = 0
  1937                           ;ENVIA_NIBBLE@dato stored from wreg
  1938  002B38  6E01               	movwf	ENVIA_NIBBLE@dato^(0+1280),c
  1939  002B3A                     
  1940                           ;LCD.c: 105: void ENVIA_NIBBLE(unsigned char dato);LCD.c: 106: {;LCD.c: 107:  LATD &= 0x
      +                          0F;
  1941  002B3A  0E0F               	movlw	15
  1942  002B3C  16C1               	andwf	193,f,c	;volatile
  1943                           
  1944                           ;LCD.c: 108:  dato &= 0xF0;
  1945  002B3E  0EF0               	movlw	240
  1946  002B40  1601               	andwf	ENVIA_NIBBLE@dato^(0+1280),f,c
  1947                           
  1948                           ;LCD.c: 109:  LATD|= dato;
  1949  002B42  5001               	movf	ENVIA_NIBBLE@dato^(0+1280),w,c	;volatile
  1950  002B44  12C1               	iorwf	193,f,c	;volatile
  1951  002B46                     
  1952                           ;LCD.c: 110:  LATDbits.LATD2 = 1;
  1953  002B46  84C1               	bsf	193,2,c	;volatile
  1954  002B48                     
  1955                           ;LCD.c: 112:         _delay(1200);
  1956  002B48  0EF0               	movlw	240
  1957  002B4A                     u607:
  1958  002B4A  D000               	nop2	
  1959  002B4C  2EE8               	decfsz	wreg,f,c
  1960  002B4E  D7FD               	bra	u607
  1961  002B50                     
  1962                           ;LCD.c: 113:  LATDbits.LATD2 = 0;
  1963  002B50  94C1               	bcf	193,2,c	;volatile
  1964  002B52  0012               	return		;funcret
  1965  002B54                     __end_of_ENVIA_NIBBLE:
  1966                           	callstack 0
  1967                           
  1968 ;; *************** function _INT0_ISR *****************
  1969 ;; Defined at:
  1970 ;;		line 85 in file "maincode.c"
  1971 ;; Parameters:    Size  Location     Type
  1972 ;;		None
  1973 ;; Auto vars:     Size  Location     Type
  1974 ;;		None
  1975 ;; Return value:  Size  Location     Type
  1976 ;;                  1    wreg      void 
  1977 ;; Registers used:
  1978 ;;		status,2, status,0
  1979 ;; Tracked objects:
  1980 ;;		On entry : 0/0
  1981 ;;		On exit  : 0/0
  1982 ;;		Unchanged: 0/0
  1983 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1984 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1985 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1986 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1987 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1988 ;;Total ram usage:        0 bytes
  1989 ;; Hardware stack levels used: 1
  1990 ;; This function calls:
  1991 ;;		Nothing
  1992 ;; This function is called by:
  1993 ;;		Interrupt level 2
  1994 ;; This function uses a non-reentrant model
  1995 ;;
  1996                           
  1997                           	psect	text17
  1998  002B6C                     __ptext17:
  1999                           	callstack 0
  2000  002B6C                     _INT0_ISR:
  2001                           	callstack 122
  2002  002B6C                     
  2003                           ;maincode.c: 86:     PIR1bits.INT0IF = 0;
  2004  002B6C  90AF               	bcf	175,0,c	;volatile
  2005  002B6E                     
  2006                           ;maincode.c: 87:     horas++;
  2007  002B6E  2A18               	incf	_horas^(0+1280),f,c
  2008  002B70  0011               	retfie		f
  2009  002B72                     __end_of_INT0_ISR:
  2010                           	callstack 0
  2011                           
  2012 ;; *************** function _INT1_ISR *****************
  2013 ;; Defined at:
  2014 ;;		line 90 in file "maincode.c"
  2015 ;; Parameters:    Size  Location     Type
  2016 ;;		None
  2017 ;; Auto vars:     Size  Location     Type
  2018 ;;		None
  2019 ;; Return value:  Size  Location     Type
  2020 ;;                  1    wreg      void 
  2021 ;; Registers used:
  2022 ;;		status,2, status,0
  2023 ;; Tracked objects:
  2024 ;;		On entry : 0/0
  2025 ;;		On exit  : 0/0
  2026 ;;		Unchanged: 0/0
  2027 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2028 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2029 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2030 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2031 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2032 ;;Total ram usage:        0 bytes
  2033 ;; Hardware stack levels used: 1
  2034 ;; This function calls:
  2035 ;;		Nothing
  2036 ;; This function is called by:
  2037 ;;		Interrupt level 2
  2038 ;; This function uses a non-reentrant model
  2039 ;;
  2040                           
  2041                           	psect	text18
  2042  002B74                     __ptext18:
  2043                           	callstack 0
  2044  002B74                     _INT1_ISR:
  2045                           	callstack 122
  2046  002B74                     
  2047                           ;maincode.c: 91:     PIR6bits.INT1IF = 0;
  2048  002B74  90B4               	bcf	180,0,c	;volatile
  2049  002B76                     
  2050                           ;maincode.c: 92:     minutos++;
  2051  002B76  2A17               	incf	_minutos^(0+1280),f,c
  2052  002B78  0011               	retfie		f
  2053  002B7A                     __end_of_INT1_ISR:
  2054                           	callstack 0
  2055                           
  2056 ;; *************** function _INT2_ISR *****************
  2057 ;; Defined at:
  2058 ;;		line 95 in file "maincode.c"
  2059 ;; Parameters:    Size  Location     Type
  2060 ;;		None
  2061 ;; Auto vars:     Size  Location     Type
  2062 ;;		None
  2063 ;; Return value:  Size  Location     Type
  2064 ;;                  1    wreg      void 
  2065 ;; Registers used:
  2066 ;;		wreg, status,2
  2067 ;; Tracked objects:
  2068 ;;		On entry : 0/0
  2069 ;;		On exit  : 0/0
  2070 ;;		Unchanged: 0/0
  2071 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2072 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2073 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2074 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2075 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2076 ;;Total ram usage:        0 bytes
  2077 ;; Hardware stack levels used: 1
  2078 ;; This function calls:
  2079 ;;		Nothing
  2080 ;; This function is called by:
  2081 ;;		Interrupt level 2
  2082 ;; This function uses a non-reentrant model
  2083 ;;
  2084                           
  2085                           	psect	text19
  2086  002B64                     __ptext19:
  2087                           	callstack 0
  2088  002B64                     _INT2_ISR:
  2089                           	callstack 122
  2090  002B64                     
  2091                           ;maincode.c: 96:     PIR10bits.INT2IF = 0;
  2092  002B64  90B8               	bcf	184,0,c	;volatile
  2093  002B66                     
  2094                           ;maincode.c: 97:     segundos = 0;
  2095  002B66  0E00               	movlw	0
  2096  002B68  6E16               	movwf	_segundos^(0+1280),c
  2097  002B6A  0011               	retfie		f
  2098  002B6C                     __end_of_INT2_ISR:
  2099                           	callstack 0
  2100                           
  2101 ;; *************** function _CCP1_ISR *****************
  2102 ;; Defined at:
  2103 ;;		line 100 in file "maincode.c"
  2104 ;; Parameters:    Size  Location     Type
  2105 ;;		None
  2106 ;; Auto vars:     Size  Location     Type
  2107 ;;		None
  2108 ;; Return value:  Size  Location     Type
  2109 ;;                  1    wreg      void 
  2110 ;; Registers used:
  2111 ;;		wreg, status,2, status,0
  2112 ;; Tracked objects:
  2113 ;;		On entry : 0/0
  2114 ;;		On exit  : 0/0
  2115 ;;		Unchanged: 0/0
  2116 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2117 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2118 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2119 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2120 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2121 ;;Total ram usage:        0 bytes
  2122 ;; Hardware stack levels used: 1
  2123 ;; This function calls:
  2124 ;;		Nothing
  2125 ;; This function is called by:
  2126 ;;		Interrupt level 2
  2127 ;; This function uses a non-reentrant model
  2128 ;;
  2129                           
  2130                           	psect	text20
  2131  0027F0                     __ptext20:
  2132                           	callstack 0
  2133  0027F0                     _CCP1_ISR:
  2134                           	callstack 122
  2135  0027F0                     
  2136                           ;maincode.c: 101:     PIR3bits.CCP1IF = 0;
  2137  0027F0  9CB1               	bcf	177,6,c	;volatile
  2138  0027F2                     
  2139                           ;maincode.c: 102:     if(ticks == 99){
  2140  0027F2  0E63               	movlw	99
  2141  0027F4  1812               	xorwf	_ticks^(0+1280),w,c
  2142  0027F6  A4D8               	btfss	status,2,c
  2143  0027F8  EF00  F014         	goto	i2u20_41
  2144  0027FC  EF02  F014         	goto	i2u20_40
  2145  002800                     i2u20_41:
  2146  002800  EF30  F014         	goto	i2l1241
  2147  002804                     i2u20_40:
  2148  002804                     
  2149                           ;maincode.c: 103:         ticks = 0;
  2150  002804  0E00               	movlw	0
  2151  002806  6E12               	movwf	_ticks^(0+1280),c
  2152  002808                     
  2153                           ;maincode.c: 104:         if(segundos == 59){
  2154  002808  0E3B               	movlw	59
  2155  00280A  1816               	xorwf	_segundos^(0+1280),w,c
  2156  00280C  A4D8               	btfss	status,2,c
  2157  00280E  EF0B  F014         	goto	i2u21_41
  2158  002812  EF0D  F014         	goto	i2u21_40
  2159  002816                     i2u21_41:
  2160  002816  EF2D  F014         	goto	i2l1239
  2161  00281A                     i2u21_40:
  2162  00281A                     
  2163                           ;maincode.c: 105:             segundos = 0;
  2164  00281A  0E00               	movlw	0
  2165  00281C  6E16               	movwf	_segundos^(0+1280),c
  2166  00281E                     
  2167                           ;maincode.c: 106:             if(minutos == 59){
  2168  00281E  0E3B               	movlw	59
  2169  002820  1817               	xorwf	_minutos^(0+1280),w,c
  2170  002822  A4D8               	btfss	status,2,c
  2171  002824  EF16  F014         	goto	i2u22_41
  2172  002828  EF18  F014         	goto	i2u22_40
  2173  00282C                     i2u22_41:
  2174  00282C  EF2A  F014         	goto	i2l1237
  2175  002830                     i2u22_40:
  2176  002830                     
  2177                           ;maincode.c: 107:                 minutos = 0;
  2178  002830  0E00               	movlw	0
  2179  002832  6E17               	movwf	_minutos^(0+1280),c
  2180  002834                     
  2181                           ;maincode.c: 108:                 if(horas == 23){
  2182  002834  0E17               	movlw	23
  2183  002836  1818               	xorwf	_horas^(0+1280),w,c
  2184  002838  A4D8               	btfss	status,2,c
  2185  00283A  EF21  F014         	goto	i2u23_41
  2186  00283E  EF23  F014         	goto	i2u23_40
  2187  002842                     i2u23_41:
  2188  002842  EF27  F014         	goto	i2l1235
  2189  002846                     i2u23_40:
  2190  002846                     
  2191                           ;maincode.c: 109:                     horas = 0;
  2192  002846  0E00               	movlw	0
  2193  002848  6E18               	movwf	_horas^(0+1280),c
  2194                           
  2195                           ;maincode.c: 110:                 }
  2196  00284A  EF31  F014         	goto	i2l123
  2197  00284E                     i2l1235:
  2198                           
  2199                           ;maincode.c: 112:                     horas++;
  2200  00284E  2A18               	incf	_horas^(0+1280),f,c
  2201  002850  EF31  F014         	goto	i2l123
  2202  002854                     i2l1237:
  2203                           
  2204                           ;maincode.c: 116:                 minutos++;
  2205  002854  2A17               	incf	_minutos^(0+1280),f,c
  2206  002856  EF31  F014         	goto	i2l123
  2207  00285A                     i2l1239:
  2208                           
  2209                           ;maincode.c: 120:             segundos++;
  2210  00285A  2A16               	incf	_segundos^(0+1280),f,c
  2211  00285C  EF31  F014         	goto	i2l123
  2212  002860                     i2l1241:
  2213                           
  2214                           ;maincode.c: 124:         ticks++;
  2215  002860  2A12               	incf	_ticks^(0+1280),f,c
  2216  002862                     i2l123:
  2217  002862  0011               	retfie		f
  2218  002864                     __end_of_CCP1_ISR:
  2219                           	callstack 0
  2220                           
  2221                           ;
  2222                           ; Interrupt Vector Table @ 0x8
  2223                           ;
  2224                           
  2225                           	psect	ivt0x8
  2226  000008                     __pivt0x8:
  2227                           	callstack 0
  2228  000008                     ivt0x8_base:
  2229                           	callstack 0
  2230                           
  2231                           ; Vector 0 : SWINT
  2232  000008  0040               	dw	ivt0x8_undefint shr (0+2)
  2233                           
  2234                           ; Vector 1 : HLVD
  2235  00000A  0040               	dw	ivt0x8_undefint shr (0+2)
  2236                           
  2237                           ; Vector 2 : OSF
  2238  00000C  0040               	dw	ivt0x8_undefint shr (0+2)
  2239                           
  2240                           ; Vector 3 : CSW
  2241  00000E  0040               	dw	ivt0x8_undefint shr (0+2)
  2242                           
  2243                           ; Vector 4 : Undefined
  2244  000010  0040               	dw	ivt0x8_undefint shr (0+2)
  2245                           
  2246                           ; Vector 5 : CLC1
  2247  000012  0040               	dw	ivt0x8_undefint shr (0+2)
  2248                           
  2249                           ; Vector 6 : Undefined
  2250  000014  0040               	dw	ivt0x8_undefint shr (0+2)
  2251                           
  2252                           ; Vector 7 : IOC
  2253  000016  0040               	dw	ivt0x8_undefint shr (0+2)
  2254                           
  2255                           ; Vector 8 : INT0
  2256  000018  0ADB               	dw	_INT0_ISR shr (0+2)
  2257                           
  2258                           ; Vector 9 : ZCD
  2259  00001A  0040               	dw	ivt0x8_undefint shr (0+2)
  2260                           
  2261                           ; Vector 10 : AD
  2262  00001C  0040               	dw	ivt0x8_undefint shr (0+2)
  2263                           
  2264                           ; Vector 11 : ACT
  2265  00001E  0040               	dw	ivt0x8_undefint shr (0+2)
  2266                           
  2267                           ; Vector 12 : CMP1
  2268  000020  0040               	dw	ivt0x8_undefint shr (0+2)
  2269                           
  2270                           ; Vector 13 : SMT1
  2271  000022  0040               	dw	ivt0x8_undefint shr (0+2)
  2272                           
  2273                           ; Vector 14 : SMT1PRA
  2274  000024  0040               	dw	ivt0x8_undefint shr (0+2)
  2275                           
  2276                           ; Vector 15 : SMT1PRW
  2277  000026  0040               	dw	ivt0x8_undefint shr (0+2)
  2278                           
  2279                           ; Vector 16 : ADT
  2280  000028  0040               	dw	ivt0x8_undefint shr (0+2)
  2281                           
  2282                           ; Vector 17 : Undefined
  2283  00002A  0040               	dw	ivt0x8_undefint shr (0+2)
  2284                           
  2285                           ; Vector 18 : Undefined
  2286  00002C  0040               	dw	ivt0x8_undefint shr (0+2)
  2287                           
  2288                           ; Vector 19 : Undefined
  2289  00002E  0040               	dw	ivt0x8_undefint shr (0+2)
  2290                           
  2291                           ; Vector 20 : DMA1SCNT
  2292  000030  0040               	dw	ivt0x8_undefint shr (0+2)
  2293                           
  2294                           ; Vector 21 : DMA1DCNT
  2295  000032  0040               	dw	ivt0x8_undefint shr (0+2)
  2296                           
  2297                           ; Vector 22 : DMA1OR
  2298  000034  0040               	dw	ivt0x8_undefint shr (0+2)
  2299                           
  2300                           ; Vector 23 : DMA1A
  2301  000036  0040               	dw	ivt0x8_undefint shr (0+2)
  2302                           
  2303                           ; Vector 24 : SPI1RX
  2304  000038  0040               	dw	ivt0x8_undefint shr (0+2)
  2305                           
  2306                           ; Vector 25 : SPI1TX
  2307  00003A  0040               	dw	ivt0x8_undefint shr (0+2)
  2308                           
  2309                           ; Vector 26 : SPI1
  2310  00003C  0040               	dw	ivt0x8_undefint shr (0+2)
  2311                           
  2312                           ; Vector 27 : TMR2
  2313  00003E  0040               	dw	ivt0x8_undefint shr (0+2)
  2314                           
  2315                           ; Vector 28 : TMR1
  2316  000040  0040               	dw	ivt0x8_undefint shr (0+2)
  2317                           
  2318                           ; Vector 29 : TMR1G
  2319  000042  0040               	dw	ivt0x8_undefint shr (0+2)
  2320                           
  2321                           ; Vector 30 : CCP1
  2322  000044  09FC               	dw	_CCP1_ISR shr (0+2)
  2323                           
  2324                           ; Vector 31 : TMR0
  2325  000046  0040               	dw	ivt0x8_undefint shr (0+2)
  2326                           
  2327                           ; Vector 32 : U1RX
  2328  000048  0040               	dw	ivt0x8_undefint shr (0+2)
  2329                           
  2330                           ; Vector 33 : U1TX
  2331  00004A  0040               	dw	ivt0x8_undefint shr (0+2)
  2332                           
  2333                           ; Vector 34 : U1E
  2334  00004C  0040               	dw	ivt0x8_undefint shr (0+2)
  2335                           
  2336                           ; Vector 35 : U1
  2337  00004E  0040               	dw	ivt0x8_undefint shr (0+2)
  2338                           
  2339                           ; Vector 36 : Undefined
  2340  000050  0040               	dw	ivt0x8_undefint shr (0+2)
  2341                           
  2342                           ; Vector 37 : Undefined
  2343  000052  0040               	dw	ivt0x8_undefint shr (0+2)
  2344                           
  2345                           ; Vector 38 : PWM1PR
  2346  000054  0040               	dw	ivt0x8_undefint shr (0+2)
  2347                           
  2348                           ; Vector 39 : PWM1
  2349  000056  0040               	dw	ivt0x8_undefint shr (0+2)
  2350                           
  2351                           ; Vector 40 : SPI2RX
  2352  000058  0040               	dw	ivt0x8_undefint shr (0+2)
  2353                           
  2354                           ; Vector 41 : SPI2TX
  2355  00005A  0040               	dw	ivt0x8_undefint shr (0+2)
  2356                           
  2357                           ; Vector 42 : SPI2
  2358  00005C  0040               	dw	ivt0x8_undefint shr (0+2)
  2359                           
  2360                           ; Vector 43 : Undefined
  2361  00005E  0040               	dw	ivt0x8_undefint shr (0+2)
  2362                           
  2363                           ; Vector 44 : TMR3
  2364  000060  0040               	dw	ivt0x8_undefint shr (0+2)
  2365                           
  2366                           ; Vector 45 : TMR3G
  2367  000062  0040               	dw	ivt0x8_undefint shr (0+2)
  2368                           
  2369                           ; Vector 46 : PWM2PR
  2370  000064  0040               	dw	ivt0x8_undefint shr (0+2)
  2371                           
  2372                           ; Vector 47 : PWM2
  2373  000066  0040               	dw	ivt0x8_undefint shr (0+2)
  2374                           
  2375                           ; Vector 48 : INT1
  2376  000068  0ADD               	dw	_INT1_ISR shr (0+2)
  2377                           
  2378                           ; Vector 49 : CLC2
  2379  00006A  0040               	dw	ivt0x8_undefint shr (0+2)
  2380                           
  2381                           ; Vector 50 : CWG1
  2382  00006C  0040               	dw	ivt0x8_undefint shr (0+2)
  2383                           
  2384                           ; Vector 51 : NCO1
  2385  00006E  0040               	dw	ivt0x8_undefint shr (0+2)
  2386                           
  2387                           ; Vector 52 : DMA2SCNT
  2388  000070  0040               	dw	ivt0x8_undefint shr (0+2)
  2389                           
  2390                           ; Vector 53 : DMA2DCNT
  2391  000072  0040               	dw	ivt0x8_undefint shr (0+2)
  2392                           
  2393                           ; Vector 54 : DMA2OR
  2394  000074  0040               	dw	ivt0x8_undefint shr (0+2)
  2395                           
  2396                           ; Vector 55 : DMA2A
  2397  000076  0040               	dw	ivt0x8_undefint shr (0+2)
  2398                           
  2399                           ; Vector 56 : I2C1RX
  2400  000078  0040               	dw	ivt0x8_undefint shr (0+2)
  2401                           
  2402                           ; Vector 57 : I2C1TX
  2403  00007A  0040               	dw	ivt0x8_undefint shr (0+2)
  2404                           
  2405                           ; Vector 58 : I2C1
  2406  00007C  0040               	dw	ivt0x8_undefint shr (0+2)
  2407                           
  2408                           ; Vector 59 : I2C1E
  2409  00007E  0040               	dw	ivt0x8_undefint shr (0+2)
  2410                           
  2411                           ; Vector 60 : Undefined
  2412  000080  0040               	dw	ivt0x8_undefint shr (0+2)
  2413                           
  2414                           ; Vector 61 : CLC3
  2415  000082  0040               	dw	ivt0x8_undefint shr (0+2)
  2416                           
  2417                           ; Vector 62 : PWM3PR
  2418  000084  0040               	dw	ivt0x8_undefint shr (0+2)
  2419                           
  2420                           ; Vector 63 : PWM3
  2421  000086  0040               	dw	ivt0x8_undefint shr (0+2)
  2422                           
  2423                           ; Vector 64 : U2RX
  2424  000088  0040               	dw	ivt0x8_undefint shr (0+2)
  2425                           
  2426                           ; Vector 65 : U2TX
  2427  00008A  0040               	dw	ivt0x8_undefint shr (0+2)
  2428                           
  2429                           ; Vector 66 : U2E
  2430  00008C  0040               	dw	ivt0x8_undefint shr (0+2)
  2431                           
  2432                           ; Vector 67 : U2
  2433  00008E  0040               	dw	ivt0x8_undefint shr (0+2)
  2434                           
  2435                           ; Vector 68 : TMR5
  2436  000090  0040               	dw	ivt0x8_undefint shr (0+2)
  2437                           
  2438                           ; Vector 69 : TMR5G
  2439  000092  0040               	dw	ivt0x8_undefint shr (0+2)
  2440                           
  2441                           ; Vector 70 : CCP2
  2442  000094  0040               	dw	ivt0x8_undefint shr (0+2)
  2443                           
  2444                           ; Vector 71 : SCAN
  2445  000096  0040               	dw	ivt0x8_undefint shr (0+2)
  2446                           
  2447                           ; Vector 72 : U3RX
  2448  000098  0040               	dw	ivt0x8_undefint shr (0+2)
  2449                           
  2450                           ; Vector 73 : U3TX
  2451  00009A  0040               	dw	ivt0x8_undefint shr (0+2)
  2452                           
  2453                           ; Vector 74 : U3E
  2454  00009C  0040               	dw	ivt0x8_undefint shr (0+2)
  2455                           
  2456                           ; Vector 75 : U3
  2457  00009E  0040               	dw	ivt0x8_undefint shr (0+2)
  2458                           
  2459                           ; Vector 76 : Undefined
  2460  0000A0  0040               	dw	ivt0x8_undefint shr (0+2)
  2461                           
  2462                           ; Vector 77 : CLC4
  2463  0000A2  0040               	dw	ivt0x8_undefint shr (0+2)
  2464                           
  2465                           ; Vector 78 : Undefined
  2466  0000A4  0040               	dw	ivt0x8_undefint shr (0+2)
  2467                           
  2468                           ; Vector 79 : Undefined
  2469  0000A6  0040               	dw	ivt0x8_undefint shr (0+2)
  2470                           
  2471                           ; Vector 80 : INT2
  2472  0000A8  0AD9               	dw	_INT2_ISR shr (0+2)
  2473                           
  2474                           ; Vector 81 : CLC5
  2475  0000AA  0040               	dw	ivt0x8_undefint shr (0+2)
  2476                           
  2477                           ; Vector 82 : CWG2
  2478  0000AC  0040               	dw	ivt0x8_undefint shr (0+2)
  2479                           
  2480                           ; Vector 83 : NCO2
  2481  0000AE  0040               	dw	ivt0x8_undefint shr (0+2)
  2482                           
  2483                           ; Vector 84 : DMA3SCNT
  2484  0000B0  0040               	dw	ivt0x8_undefint shr (0+2)
  2485                           
  2486                           ; Vector 85 : DMA3DCNT
  2487  0000B2  0040               	dw	ivt0x8_undefint shr (0+2)
  2488                           
  2489                           ; Vector 86 : DMA3OR
  2490  0000B4  0040               	dw	ivt0x8_undefint shr (0+2)
  2491                           
  2492                           ; Vector 87 : DMA3A
  2493  0000B6  0040               	dw	ivt0x8_undefint shr (0+2)
  2494                           
  2495                           ; Vector 88 : CCP3
  2496  0000B8  0040               	dw	ivt0x8_undefint shr (0+2)
  2497                           
  2498                           ; Vector 89 : CLC6
  2499  0000BA  0040               	dw	ivt0x8_undefint shr (0+2)
  2500                           
  2501                           ; Vector 90 : CWG3
  2502  0000BC  0040               	dw	ivt0x8_undefint shr (0+2)
  2503                           
  2504                           ; Vector 91 : TMR4
  2505  0000BE  0040               	dw	ivt0x8_undefint shr (0+2)
  2506                           
  2507                           ; Vector 92 : DMA4SCNT
  2508  0000C0  0040               	dw	ivt0x8_undefint shr (0+2)
  2509                           
  2510                           ; Vector 93 : DMA4DCNT
  2511  0000C2  0040               	dw	ivt0x8_undefint shr (0+2)
  2512                           
  2513                           ; Vector 94 : DMA4OR
  2514  0000C4  0040               	dw	ivt0x8_undefint shr (0+2)
  2515                           
  2516                           ; Vector 95 : DMA4A
  2517  0000C6  0040               	dw	ivt0x8_undefint shr (0+2)
  2518                           
  2519                           ; Vector 96 : U4RX
  2520  0000C8  0040               	dw	ivt0x8_undefint shr (0+2)
  2521                           
  2522                           ; Vector 97 : U4TX
  2523  0000CA  0040               	dw	ivt0x8_undefint shr (0+2)
  2524                           
  2525                           ; Vector 98 : U4E
  2526  0000CC  0040               	dw	ivt0x8_undefint shr (0+2)
  2527                           
  2528                           ; Vector 99 : U4
  2529  0000CE  0040               	dw	ivt0x8_undefint shr (0+2)
  2530                           
  2531                           ; Vector 100 : DMA5SCNT
  2532  0000D0  0040               	dw	ivt0x8_undefint shr (0+2)
  2533                           
  2534                           ; Vector 101 : DMA5DCNT
  2535  0000D2  0040               	dw	ivt0x8_undefint shr (0+2)
  2536                           
  2537                           ; Vector 102 : DMA5OR
  2538  0000D4  0040               	dw	ivt0x8_undefint shr (0+2)
  2539                           
  2540                           ; Vector 103 : DMA5A
  2541  0000D6  0040               	dw	ivt0x8_undefint shr (0+2)
  2542                           
  2543                           ; Vector 104 : U5RX
  2544  0000D8  0040               	dw	ivt0x8_undefint shr (0+2)
  2545                           
  2546                           ; Vector 105 : U5TX
  2547  0000DA  0040               	dw	ivt0x8_undefint shr (0+2)
  2548                           
  2549                           ; Vector 106 : U5E
  2550  0000DC  0040               	dw	ivt0x8_undefint shr (0+2)
  2551                           
  2552                           ; Vector 107 : U5
  2553  0000DE  0040               	dw	ivt0x8_undefint shr (0+2)
  2554                           
  2555                           ; Vector 108 : DMA6SCNT
  2556  0000E0  0040               	dw	ivt0x8_undefint shr (0+2)
  2557                           
  2558                           ; Vector 109 : DMA6DCNT
  2559  0000E2  0040               	dw	ivt0x8_undefint shr (0+2)
  2560                           
  2561                           ; Vector 110 : DMA6OR
  2562  0000E4  0040               	dw	ivt0x8_undefint shr (0+2)
  2563                           
  2564                           ; Vector 111 : DMA6A
  2565  0000E6  0040               	dw	ivt0x8_undefint shr (0+2)
  2566                           
  2567                           ; Vector 112 : Undefined
  2568  0000E8  0040               	dw	ivt0x8_undefint shr (0+2)
  2569                           
  2570                           ; Vector 113 : CLC7
  2571  0000EA  0040               	dw	ivt0x8_undefint shr (0+2)
  2572                           
  2573                           ; Vector 114 : CMP2
  2574  0000EC  0040               	dw	ivt0x8_undefint shr (0+2)
  2575                           
  2576                           ; Vector 115 : NCO3
  2577  0000EE  0040               	dw	ivt0x8_undefint shr (0+2)
  2578                           
  2579                           ; Vector 116 : Undefined
  2580  0000F0  0040               	dw	ivt0x8_undefint shr (0+2)
  2581                           
  2582                           ; Vector 117 : Undefined
  2583  0000F2  0040               	dw	ivt0x8_undefint shr (0+2)
  2584                           
  2585                           ; Vector 118 : Undefined
  2586  0000F4  0040               	dw	ivt0x8_undefint shr (0+2)
  2587                           
  2588                           ; Vector 119 : Undefined
  2589  0000F6  0040               	dw	ivt0x8_undefint shr (0+2)
  2590                           
  2591                           ; Vector 120 : NVM
  2592  0000F8  0040               	dw	ivt0x8_undefint shr (0+2)
  2593                           
  2594                           ; Vector 121 : CLC8
  2595  0000FA  0040               	dw	ivt0x8_undefint shr (0+2)
  2596                           
  2597                           ; Vector 122 : CRC
  2598  0000FC  0040               	dw	ivt0x8_undefint shr (0+2)
  2599                           
  2600                           ; Vector 123 : TMR6
  2601  0000FE  0040               	dw	ivt0x8_undefint shr (0+2)
  2602  000100                     ivt0x8_undefint:
  2603                           	callstack 0
  2604  000100  00FF               	reset	
  2605                           
  2606                           	psect	rparam
  2607  0000                     
  2608                           	psect	idloc
  2609                           
  2610                           ;Config register IDLOC0 @ 0x200000
  2611                           ;	unspecified, using default values
  2612  200000                     	org	2097152
  2613  200000  0FFF               	dw	4095
  2614                           
  2615                           ;Config register IDLOC1 @ 0x200002
  2616                           ;	unspecified, using default values
  2617  200002                     	org	2097154
  2618  200002  0FFF               	dw	4095
  2619                           
  2620                           ;Config register IDLOC2 @ 0x200004
  2621                           ;	unspecified, using default values
  2622  200004                     	org	2097156
  2623  200004  0FFF               	dw	4095
  2624                           
  2625                           ;Config register IDLOC3 @ 0x200006
  2626                           ;	unspecified, using default values
  2627  200006                     	org	2097158
  2628  200006  0FFF               	dw	4095
  2629                           
  2630                           ;Config register IDLOC4 @ 0x200008
  2631                           ;	unspecified, using default values
  2632  200008                     	org	2097160
  2633  200008  0FFF               	dw	4095
  2634                           
  2635                           ;Config register IDLOC5 @ 0x20000A
  2636                           ;	unspecified, using default values
  2637  20000A                     	org	2097162
  2638  20000A  0FFF               	dw	4095
  2639                           
  2640                           ;Config register IDLOC6 @ 0x20000C
  2641                           ;	unspecified, using default values
  2642  20000C                     	org	2097164
  2643  20000C  0FFF               	dw	4095
  2644                           
  2645                           ;Config register IDLOC7 @ 0x20000E
  2646                           ;	unspecified, using default values
  2647  20000E                     	org	2097166
  2648  20000E  0FFF               	dw	4095
  2649                           
  2650                           ;Config register IDLOC8 @ 0x200010
  2651                           ;	unspecified, using default values
  2652  200010                     	org	2097168
  2653  200010  0FFF               	dw	4095
  2654                           
  2655                           ;Config register IDLOC9 @ 0x200012
  2656                           ;	unspecified, using default values
  2657  200012                     	org	2097170
  2658  200012  0FFF               	dw	4095
  2659                           
  2660                           ;Config register IDLOC10 @ 0x200014
  2661                           ;	unspecified, using default values
  2662  200014                     	org	2097172
  2663  200014  0FFF               	dw	4095
  2664                           
  2665                           ;Config register IDLOC11 @ 0x200016
  2666                           ;	unspecified, using default values
  2667  200016                     	org	2097174
  2668  200016  0FFF               	dw	4095
  2669                           
  2670                           ;Config register IDLOC12 @ 0x200018
  2671                           ;	unspecified, using default values
  2672  200018                     	org	2097176
  2673  200018  0FFF               	dw	4095
  2674                           
  2675                           ;Config register IDLOC13 @ 0x20001A
  2676                           ;	unspecified, using default values
  2677  20001A                     	org	2097178
  2678  20001A  0FFF               	dw	4095
  2679                           
  2680                           ;Config register IDLOC14 @ 0x20001C
  2681                           ;	unspecified, using default values
  2682  20001C                     	org	2097180
  2683  20001C  0FFF               	dw	4095
  2684                           
  2685                           ;Config register IDLOC15 @ 0x20001E
  2686                           ;	unspecified, using default values
  2687  20001E                     	org	2097182
  2688  20001E  0FFF               	dw	4095
  2689                           
  2690                           ;Config register IDLOC16 @ 0x200020
  2691                           ;	unspecified, using default values
  2692  200020                     	org	2097184
  2693  200020  0FFF               	dw	4095
  2694                           
  2695                           ;Config register IDLOC17 @ 0x200022
  2696                           ;	unspecified, using default values
  2697  200022                     	org	2097186
  2698  200022  0FFF               	dw	4095
  2699                           
  2700                           ;Config register IDLOC18 @ 0x200024
  2701                           ;	unspecified, using default values
  2702  200024                     	org	2097188
  2703  200024  0FFF               	dw	4095
  2704                           
  2705                           ;Config register IDLOC19 @ 0x200026
  2706                           ;	unspecified, using default values
  2707  200026                     	org	2097190
  2708  200026  0FFF               	dw	4095
  2709                           
  2710                           ;Config register IDLOC20 @ 0x200028
  2711                           ;	unspecified, using default values
  2712  200028                     	org	2097192
  2713  200028  0FFF               	dw	4095
  2714                           
  2715                           ;Config register IDLOC21 @ 0x20002A
  2716                           ;	unspecified, using default values
  2717  20002A                     	org	2097194
  2718  20002A  0FFF               	dw	4095
  2719                           
  2720                           ;Config register IDLOC22 @ 0x20002C
  2721                           ;	unspecified, using default values
  2722  20002C                     	org	2097196
  2723  20002C  0FFF               	dw	4095
  2724                           
  2725                           ;Config register IDLOC23 @ 0x20002E
  2726                           ;	unspecified, using default values
  2727  20002E                     	org	2097198
  2728  20002E  0FFF               	dw	4095
  2729                           
  2730                           ;Config register IDLOC24 @ 0x200030
  2731                           ;	unspecified, using default values
  2732  200030                     	org	2097200
  2733  200030  0FFF               	dw	4095
  2734                           
  2735                           ;Config register IDLOC25 @ 0x200032
  2736                           ;	unspecified, using default values
  2737  200032                     	org	2097202
  2738  200032  0FFF               	dw	4095
  2739                           
  2740                           ;Config register IDLOC26 @ 0x200034
  2741                           ;	unspecified, using default values
  2742  200034                     	org	2097204
  2743  200034  0FFF               	dw	4095
  2744                           
  2745                           ;Config register IDLOC27 @ 0x200036
  2746                           ;	unspecified, using default values
  2747  200036                     	org	2097206
  2748  200036  0FFF               	dw	4095
  2749                           
  2750                           ;Config register IDLOC28 @ 0x200038
  2751                           ;	unspecified, using default values
  2752  200038                     	org	2097208
  2753  200038  0FFF               	dw	4095
  2754                           
  2755                           ;Config register IDLOC29 @ 0x20003A
  2756                           ;	unspecified, using default values
  2757  20003A                     	org	2097210
  2758  20003A  0FFF               	dw	4095
  2759                           
  2760                           ;Config register IDLOC30 @ 0x20003C
  2761                           ;	unspecified, using default values
  2762  20003C                     	org	2097212
  2763  20003C  0FFF               	dw	4095
  2764                           
  2765                           ;Config register IDLOC31 @ 0x20003E
  2766                           ;	unspecified, using default values
  2767  20003E                     	org	2097214
  2768  20003E  0FFF               	dw	4095
  2769                           
  2770                           	psect	config
  2771                           
  2772                           ;Config register CONFIG1 @ 0x300000
  2773                           ;	External Oscillator Selection
  2774                           ;	FEXTOSC = ECH, EC (external clock) above 8 MHz
  2775                           ;	Reset Oscillator Selection
  2776                           ;	RSTOSC = EXTOSC, EXTOSC operating per FEXTOSC bits (device manufacturing default)
  2777  300000                     	org	3145728
  2778  300000  FF                 	db	255
  2779                           
  2780                           ;Config register CONFIG2 @ 0x300001
  2781                           ;	Clock out Enable bit
  2782                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
  2783                           ;	PRLOCKED One-Way Set Enable bit
  2784                           ;	PR1WAY = ON, PRLOCKED bit can be cleared and set only once
  2785                           ;	Clock Switch Enable bit
  2786                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
  2787                           ;	Fail-Safe Clock Monitor Enable bit
  2788                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
  2789  300001                     	org	3145729
  2790  300001  FF                 	db	255
  2791                           
  2792                           ;Config register CONFIG3 @ 0x300002
  2793                           ;	MCLR Enable bit
  2794                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
  2795                           ;	Power-up timer selection bits
  2796                           ;	PWRTS = PWRT_16, PWRT set at 16ms
  2797                           ;	Multi-vector enable bit
  2798                           ;	MVECEN = ON, Multi-vector enabled, Vector table used for interrupts
  2799                           ;	IVTLOCK bit One-way set enable bit
  2800                           ;	IVT1WAY = ON, IVTLOCKED bit can be cleared and set only once
  2801                           ;	Low Power BOR Enable bit
  2802                           ;	LPBOREN = OFF, Low-Power BOR disabled
  2803                           ;	Brown-out Reset Enable bits
  2804                           ;	BOREN = OFF, Brown-out Reset disabled
  2805  300002                     	org	3145730
  2806  300002  3B                 	db	59
  2807                           
  2808                           ;Config register CONFIG4 @ 0x300003
  2809                           ;	Brown-out Reset Voltage Selection bits
  2810                           ;	BORV = VBOR_1P9, Brown-out Reset Voltage (VBOR) set to 1.9V
  2811                           ;	ZCD Disable bit
  2812                           ;	ZCD = OFF, ZCD module is disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCD
      +                          CON
  2813                           ;	PPSLOCK bit One-Way Set Enable bit
  2814                           ;	PPS1WAY = ON, PPSLOCKED bit can be cleared and set only once; PPS registers remain loc
      +                          ked after one clear/set cycle
  2815                           ;	Stack Full/Underflow Reset Enable bit
  2816                           ;	STVREN = ON, Stack full/underflow will cause Reset
  2817                           ;	Low Voltage Programming Enable bit
  2818                           ;	LVP = OFF, HV on MCLR/VPP must be used for programming
  2819                           ;	Extended Instruction Set Enable bit
  2820                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
  2821  300003                     	org	3145731
  2822  300003  DF                 	db	223
  2823                           
  2824                           ;Config register CONFIG5 @ 0x300004
  2825                           ;	WDT Period selection bits
  2826                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  2827                           ;	WDT operating mode
  2828                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
  2829  300004                     	org	3145732
  2830  300004  9F                 	db	159
  2831                           
  2832                           ;Config register CONFIG6 @ 0x300005
  2833                           ;	WDT Window Select bits
  2834                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
  2835                           ;	WDT input clock selector
  2836                           ;	WDTCCS = SC, Software Control
  2837  300005                     	org	3145733
  2838  300005  FF                 	db	255
  2839                           
  2840                           ;Config register CONFIG7 @ 0x300006
  2841                           ;	Boot Block Size selection bits
  2842                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
  2843                           ;	Boot Block enable bit
  2844                           ;	BBEN = OFF, Boot block disabled
  2845                           ;	Storage Area Flash enable bit
  2846                           ;	SAFEN = OFF, SAF disabled
  2847                           ;	Background Debugger
  2848                           ;	DEBUG = OFF, Background Debugger disabled
  2849  300006                     	org	3145734
  2850  300006  FF                 	db	255
  2851                           
  2852                           ;Config register CONFIG8 @ 0x300007
  2853                           ;	Boot Block Write Protection bit
  2854                           ;	WRTB = OFF, Boot Block not Write protected
  2855                           ;	Configuration Register Write Protection bit
  2856                           ;	WRTC = OFF, Configuration registers not Write protected
  2857                           ;	Data EEPROM Write Protection bit
  2858                           ;	WRTD = OFF, Data EEPROM not Write protected
  2859                           ;	SAF Write protection bit
  2860                           ;	WRTSAF = OFF, SAF not Write Protected
  2861                           ;	Application Block write protection bit
  2862                           ;	WRTAPP = OFF, Application Block not write protected
  2863  300007                     	org	3145735
  2864  300007  FF                 	db	255
  2865                           
  2866                           ; Padding undefined space
  2867  300008                     	org	3145736
  2868  300008  FF                 	db	255
  2869                           
  2870                           ;Config register CONFIG10 @ 0x300009
  2871                           ;	PFM and Data EEPROM Code Protection bit
  2872                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
  2873  300009                     	org	3145737
  2874  300009  FF                 	db	255
  2875                           tosu	equ	0x4FF
  2876                           tosh	equ	0x4FE
  2877                           tosl	equ	0x4FD
  2878                           stkptr	equ	0x4FC
  2879                           pclatu	equ	0x4FB
  2880                           pclath	equ	0x4FA
  2881                           pcl	equ	0x4F9
  2882                           tblptru	equ	0x4F8
  2883                           tblptrh	equ	0x4F7
  2884                           tblptrl	equ	0x4F6
  2885                           tablat	equ	0x4F5
  2886                           prodh	equ	0x4F4
  2887                           prodl	equ	0x4F3
  2888                           indf0	equ	0x4EF
  2889                           postinc0	equ	0x4EE
  2890                           postdec0	equ	0x4ED
  2891                           preinc0	equ	0x4EC
  2892                           plusw0	equ	0x4EB
  2893                           fsr0h	equ	0x4EA
  2894                           fsr0l	equ	0x4E9
  2895                           wreg	equ	0x4E8
  2896                           indf1	equ	0x4E7
  2897                           postinc1	equ	0x4E6
  2898                           postdec1	equ	0x4E5
  2899                           preinc1	equ	0x4E4
  2900                           plusw1	equ	0x4E3
  2901                           fsr1h	equ	0x4E2
  2902                           fsr1l	equ	0x4E1
  2903                           bsr	equ	0x4E0
  2904                           indf2	equ	0x4DF
  2905                           postinc2	equ	0x4DE
  2906                           postdec2	equ	0x4DD
  2907                           preinc2	equ	0x4DC
  2908                           plusw2	equ	0x4DB
  2909                           fsr2h	equ	0x4DA
  2910                           fsr2l	equ	0x4D9
  2911                           status	equ	0x4D8

Data Sizes:
    Strings     35
    Constant    0
    Data        3
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     17      24
    BANK5           160      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0
    BANK32          256      0       0
    BANK33          256      0       0
    BANK34          256      0       0
    BANK35          256      0       0
    BANK36          256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 13
		 -> STR_3(CODE[13]), STR_2(CODE[11]), STR_1(CODE[11]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 13
		 -> STR_3(CODE[13]), STR_2(CODE[11]), STR_1(CODE[11]), 

    ESCRIBE_MENSAJE2@cadena	PTR const unsigned char  size(2) Largest target is 13
		 -> STR_3(CODE[13]), STR_2(CODE[11]), STR_1(CODE[11]), 


Critical Paths under _main in COMRAM

    _main->_convierte
    _lcd_config->_CURSOR_ONOFF
    _lcd_config->_LCD_CONFIG
    _LCD_CONFIG->_ENVIA_LCD_CMD
    _CURSOR_ONOFF->_ENVIA_LCD_CMD
    _CURSOR_HOME->_ENVIA_LCD_CMD
    _BORRAR_LCD->_ENVIA_LCD_CMD
    _convierte->___awdiv
    ___awdiv->___awmod
    _POS_CURSOR->_ENVIA_LCD_CMD
    _ENVIA_LCD_CMD->_ENVIA_NIBBLE
    _ENVIA_LCD_CMD->_LEER_LCD
    _ESCRIBE_MENSAJE2->_strlen
    _ENVIA_CHAR->_ENVIA_NIBBLE
    _ENVIA_CHAR->_LEER_LCD

Critical Paths under _INT0_ISR in COMRAM

    None.

Critical Paths under _INT1_ISR in COMRAM

    None.

Critical Paths under _INT2_ISR in COMRAM

    None.

Critical Paths under _CCP1_ISR in COMRAM

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT0_ISR in BANK5

    None.

Critical Paths under _INT1_ISR in BANK5

    None.

Critical Paths under _INT2_ISR in BANK5

    None.

Critical Paths under _CCP1_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT0_ISR in BANK6

    None.

Critical Paths under _INT1_ISR in BANK6

    None.

Critical Paths under _INT2_ISR in BANK6

    None.

Critical Paths under _CCP1_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT0_ISR in BANK7

    None.

Critical Paths under _INT1_ISR in BANK7

    None.

Critical Paths under _INT2_ISR in BANK7

    None.

Critical Paths under _CCP1_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INT0_ISR in BANK8

    None.

Critical Paths under _INT1_ISR in BANK8

    None.

Critical Paths under _INT2_ISR in BANK8

    None.

Critical Paths under _CCP1_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INT0_ISR in BANK9

    None.

Critical Paths under _INT1_ISR in BANK9

    None.

Critical Paths under _INT2_ISR in BANK9

    None.

Critical Paths under _CCP1_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INT0_ISR in BANK10

    None.

Critical Paths under _INT1_ISR in BANK10

    None.

Critical Paths under _INT2_ISR in BANK10

    None.

Critical Paths under _CCP1_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INT0_ISR in BANK11

    None.

Critical Paths under _INT1_ISR in BANK11

    None.

Critical Paths under _INT2_ISR in BANK11

    None.

Critical Paths under _CCP1_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INT0_ISR in BANK12

    None.

Critical Paths under _INT1_ISR in BANK12

    None.

Critical Paths under _INT2_ISR in BANK12

    None.

Critical Paths under _CCP1_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INT0_ISR in BANK13

    None.

Critical Paths under _INT1_ISR in BANK13

    None.

Critical Paths under _INT2_ISR in BANK13

    None.

Critical Paths under _CCP1_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INT0_ISR in BANK14

    None.

Critical Paths under _INT1_ISR in BANK14

    None.

Critical Paths under _INT2_ISR in BANK14

    None.

Critical Paths under _CCP1_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INT0_ISR in BANK15

    None.

Critical Paths under _INT1_ISR in BANK15

    None.

Critical Paths under _INT2_ISR in BANK15

    None.

Critical Paths under _CCP1_ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INT0_ISR in BANK16

    None.

Critical Paths under _INT1_ISR in BANK16

    None.

Critical Paths under _INT2_ISR in BANK16

    None.

Critical Paths under _CCP1_ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INT0_ISR in BANK17

    None.

Critical Paths under _INT1_ISR in BANK17

    None.

Critical Paths under _INT2_ISR in BANK17

    None.

Critical Paths under _CCP1_ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INT0_ISR in BANK18

    None.

Critical Paths under _INT1_ISR in BANK18

    None.

Critical Paths under _INT2_ISR in BANK18

    None.

Critical Paths under _CCP1_ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INT0_ISR in BANK19

    None.

Critical Paths under _INT1_ISR in BANK19

    None.

Critical Paths under _INT2_ISR in BANK19

    None.

Critical Paths under _CCP1_ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INT0_ISR in BANK20

    None.

Critical Paths under _INT1_ISR in BANK20

    None.

Critical Paths under _INT2_ISR in BANK20

    None.

Critical Paths under _CCP1_ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INT0_ISR in BANK21

    None.

Critical Paths under _INT1_ISR in BANK21

    None.

Critical Paths under _INT2_ISR in BANK21

    None.

Critical Paths under _CCP1_ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INT0_ISR in BANK22

    None.

Critical Paths under _INT1_ISR in BANK22

    None.

Critical Paths under _INT2_ISR in BANK22

    None.

Critical Paths under _CCP1_ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INT0_ISR in BANK23

    None.

Critical Paths under _INT1_ISR in BANK23

    None.

Critical Paths under _INT2_ISR in BANK23

    None.

Critical Paths under _CCP1_ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INT0_ISR in BANK24

    None.

Critical Paths under _INT1_ISR in BANK24

    None.

Critical Paths under _INT2_ISR in BANK24

    None.

Critical Paths under _CCP1_ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INT0_ISR in BANK25

    None.

Critical Paths under _INT1_ISR in BANK25

    None.

Critical Paths under _INT2_ISR in BANK25

    None.

Critical Paths under _CCP1_ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _INT0_ISR in BANK26

    None.

Critical Paths under _INT1_ISR in BANK26

    None.

Critical Paths under _INT2_ISR in BANK26

    None.

Critical Paths under _CCP1_ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _INT0_ISR in BANK27

    None.

Critical Paths under _INT1_ISR in BANK27

    None.

Critical Paths under _INT2_ISR in BANK27

    None.

Critical Paths under _CCP1_ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _INT0_ISR in BANK28

    None.

Critical Paths under _INT1_ISR in BANK28

    None.

Critical Paths under _INT2_ISR in BANK28

    None.

Critical Paths under _CCP1_ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _INT0_ISR in BANK29

    None.

Critical Paths under _INT1_ISR in BANK29

    None.

Critical Paths under _INT2_ISR in BANK29

    None.

Critical Paths under _CCP1_ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _INT0_ISR in BANK30

    None.

Critical Paths under _INT1_ISR in BANK30

    None.

Critical Paths under _INT2_ISR in BANK30

    None.

Critical Paths under _CCP1_ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _INT0_ISR in BANK31

    None.

Critical Paths under _INT1_ISR in BANK31

    None.

Critical Paths under _INT2_ISR in BANK31

    None.

Critical Paths under _CCP1_ISR in BANK31

    None.

Critical Paths under _main in BANK32

    None.

Critical Paths under _INT0_ISR in BANK32

    None.

Critical Paths under _INT1_ISR in BANK32

    None.

Critical Paths under _INT2_ISR in BANK32

    None.

Critical Paths under _CCP1_ISR in BANK32

    None.

Critical Paths under _main in BANK33

    None.

Critical Paths under _INT0_ISR in BANK33

    None.

Critical Paths under _INT1_ISR in BANK33

    None.

Critical Paths under _INT2_ISR in BANK33

    None.

Critical Paths under _CCP1_ISR in BANK33

    None.

Critical Paths under _main in BANK34

    None.

Critical Paths under _INT0_ISR in BANK34

    None.

Critical Paths under _INT1_ISR in BANK34

    None.

Critical Paths under _INT2_ISR in BANK34

    None.

Critical Paths under _CCP1_ISR in BANK34

    None.

Critical Paths under _main in BANK35

    None.

Critical Paths under _INT0_ISR in BANK35

    None.

Critical Paths under _INT1_ISR in BANK35

    None.

Critical Paths under _INT2_ISR in BANK35

    None.

Critical Paths under _CCP1_ISR in BANK35

    None.

Critical Paths under _main in BANK36

    None.

Critical Paths under _INT0_ISR in BANK36

    None.

Critical Paths under _INT1_ISR in BANK36

    None.

Critical Paths under _INT2_ISR in BANK36

    None.

Critical Paths under _CCP1_ISR in BANK36

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    3175
                                             15 COMRAM     2     2      0
                         _BORRAR_LCD
                         _ENVIA_CHAR
                   _ESCRIBE_MENSAJE2
                         _POS_CURSOR
                          _configuro
                          _convierte
                         _lcd_config
 ---------------------------------------------------------------------------------
 (1) _lcd_config                                           1     1      0     525
                                              4 COMRAM     1     1      0
                         _BORRAR_LCD
                        _CURSOR_HOME
                       _CURSOR_ONOFF
                         _LCD_CONFIG
 ---------------------------------------------------------------------------------
 (2) _LCD_CONFIG                                           1     1      0     135
                                              3 COMRAM     1     1      0
                      _ENVIA_LCD_CMD
                       _ENVIA_NIBBLE
 ---------------------------------------------------------------------------------
 (2) _CURSOR_ONOFF                                         1     1      0     150
                                              3 COMRAM     1     1      0
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _CURSOR_HOME                                          0     0      0     120
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _BORRAR_LCD                                           0     0      0     120
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (1) _convierte                                            1     1      0    1270
                                             14 COMRAM     1     1      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     600
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     604
                                              6 COMRAM     8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (1) _configuro                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _POS_CURSOR                                           2     1      1     512
                                              3 COMRAM     2     1      1
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (3) _ENVIA_LCD_CMD                                        2     2      0     120
                                              1 COMRAM     2     2      0
                       _ENVIA_NIBBLE
                           _LEER_LCD
 ---------------------------------------------------------------------------------
 (1) _ESCRIBE_MENSAJE2                                     6     4      2     628
                                              4 COMRAM     6     4      2
                         _ENVIA_CHAR
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _ENVIA_CHAR                                           2     2      0     120
                                              1 COMRAM     2     2      0
                       _ENVIA_NIBBLE
                           _LEER_LCD
 ---------------------------------------------------------------------------------
 (4) _LEER_LCD                                             1     1      0      45
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _ENVIA_NIBBLE                                         1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _INT0_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _INT1_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _INT2_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _CCP1_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BORRAR_LCD
     _ENVIA_LCD_CMD
       _ENVIA_NIBBLE
       _LEER_LCD
   _ENVIA_CHAR
     _ENVIA_NIBBLE
     _LEER_LCD
   _ESCRIBE_MENSAJE2
     _ENVIA_CHAR
     _strlen
   _POS_CURSOR
     _ENVIA_LCD_CMD
   _configuro
   _convierte
     ___awdiv
       ___awmod (ARG)
     ___awmod
   _lcd_config
     _BORRAR_LCD
     _CURSOR_HOME
       _ENVIA_LCD_CMD
     _CURSOR_ONOFF
       _ENVIA_LCD_CMD
     _LCD_CONFIG
       _ENVIA_LCD_CMD
       _ENVIA_NIBBLE

 _INT0_ISR (ROOT)

 _INT1_ISR (ROOT)

 _INT2_ISR (ROOT)

 _CCP1_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0       0      69        0.0%
EEDATA             400      0       0       0        0.0%
BITBIGSFRhhhlll    26A      0       0      90        0.0%
BITBIGSFR_1        100      0       0      68        0.0%
BITBANK36          100      0       0      66        0.0%
BANK36             100      0       0      67        0.0%
BITBANK35          100      0       0      64        0.0%
BANK35             100      0       0      65        0.0%
BITBANK34          100      0       0      62        0.0%
BANK34             100      0       0      63        0.0%
BITBANK33          100      0       0      60        0.0%
BANK33             100      0       0      61        0.0%
BITBANK32          100      0       0      58        0.0%
BANK32             100      0       0      59        0.0%
BITBANK31          100      0       0      56        0.0%
BANK31             100      0       0      57        0.0%
BITBANK30          100      0       0      54        0.0%
BANK30             100      0       0      55        0.0%
BITBANK29          100      0       0      52        0.0%
BANK29             100      0       0      53        0.0%
BITBANK28          100      0       0      50        0.0%
BANK28             100      0       0      51        0.0%
BITBANK27          100      0       0      48        0.0%
BANK27             100      0       0      49        0.0%
BITBANK26          100      0       0      46        0.0%
BANK26             100      0       0      47        0.0%
BITBANK25          100      0       0      44        0.0%
BANK25             100      0       0      45        0.0%
BITBANK24          100      0       0      42        0.0%
BANK24             100      0       0      43        0.0%
BITBANK23          100      0       0      40        0.0%
BANK23             100      0       0      41        0.0%
BITBANK22          100      0       0      38        0.0%
BANK22             100      0       0      39        0.0%
BITBANK21          100      0       0      36        0.0%
BANK21             100      0       0      37        0.0%
BITBANK20          100      0       0      34        0.0%
BANK20             100      0       0      35        0.0%
BITBANK19          100      0       0      32        0.0%
BANK19             100      0       0      33        0.0%
BITBANK18          100      0       0      30        0.0%
BANK18             100      0       0      31        0.0%
BITBANK17          100      0       0      28        0.0%
BANK17             100      0       0      29        0.0%
BITBANK16          100      0       0      26        0.0%
BANK16             100      0       0      27        0.0%
BITBANK15          100      0       0      24        0.0%
BANK15             100      0       0      25        0.0%
BITBANK14          100      0       0      22        0.0%
BANK14             100      0       0      23        0.0%
BITBANK13          100      0       0      20        0.0%
BANK13             100      0       0      21        0.0%
BITBANK12          100      0       0      18        0.0%
BANK12             100      0       0      19        0.0%
BITBANK11          100      0       0      16        0.0%
BANK11             100      0       0      17        0.0%
BITBANK10          100      0       0      14        0.0%
BANK10             100      0       0      15        0.0%
BITBANK9           100      0       0      12        0.0%
BANK9              100      0       0      13        0.0%
BITBANK8           100      0       0      10        0.0%
BANK8              100      0       0      11        0.0%
BITBANK7           100      0       0       8        0.0%
BANK7              100      0       0       9        0.0%
BITBANK6           100      0       0       6        0.0%
BANK6              100      0       0       7        0.0%
BITBIGSFRhhhlll     BD      0       0      87        0.0%
BITBIGSFRl          AD      0       0      93        0.0%
BITBANK5            A0      0       0       4        0.0%
BANK5               A0      0       0       5        0.0%
BITBIGSFRhhhlhl     86      0       0      84        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     11      18       1       25.3%
BITBIGSFRhhhhh      29      0       0      70        0.0%
BITBIGSFRhhhlll     1E      0       0      88        0.0%
BITBIGSFRhhhllh      F      0       0      85        0.0%
BITBIGSFRhhhllh      7      0       0      86        0.0%
BITBIGSFRhhhhll      7      0       0      72        0.0%
BITBIGSFRhhhlhl      6      0       0      76        0.0%
BITBIGSFRhhhlhl      6      0       0      80        0.0%
BITBIGSFRhhhhlh      4      0       0      71        0.0%
BITBIGSFRhhhlhl      4      0       0      74        0.0%
BITBIGSFRhhhlhl      3      0       0      77        0.0%
BITBIGSFRhhhlhl      3      0       0      81        0.0%
BITBIGSFRhl          3      0       0      92        0.0%
BITBIGSFRhhhlhl      2      0       0      78        0.0%
BITBIGSFRhhhlhl      2      0       0      82        0.0%
BITBIGSFRhhhlll      2      0       0      89        0.0%
BITBIGSFRhhhlhl      1      0       0      79        0.0%
BITBIGSFRhhhlhl      1      0       0      75        0.0%
BITBIGSFRhhhlhl      1      0       0      83        0.0%
BITBIGSFRhhhlhh      1      0       0      73        0.0%
BITBIGSFRhhl         1      0       0      91        0.0%
BIGSFR_1             0      0       0     200        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      18      94        0.0%
DATA                 0      0      18       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Wed May 24 16:56:42 2023

                      l81 29F4                        l84 2B06                        l87 291C  
                      u10 27EE                        u11 27EA                        u20 2B1A  
                      u21 2B16                        u30 2B30                        u31 2B2C  
            ___awdiv@sign 050C             ENVIA_CHAR@aux 0503                       l200 27EE  
                     l162 2B5A                       l149 2A6C                       l182 2AD4  
                     l191 2B52                       l167 2B36                       l185 2B62  
                     l194 2AA0                       l179 296A                       l452 2778  
                     l188 28C2                       l198 27B2                       l439 26C8  
                     l901 2794                       l911 27B4                       l903 279C  
                     l913 27BC                       l905 279E                       l931 2B50  
                     l915 27C2                       l923 27DC                       l907 27A6  
                     l925 2B3A                       l917 27CC                       l909 27A8  
                     l941 2A82                       l933 2A70                       l927 2B46  
                     l919 27D6                       l951 2A94                       l943 2A84  
                     l935 2A72                       l929 2B48                       l953 2A9A  
                     l945 2A86                       l937 2A76                       l961 287C  
                     l891 2780                       l947 2A88                       l939 2A7A  
                     l971 28AA                       l963 2890                       l955 2864  
                     l893 2782                       l885 2A32                       l949 2A8E  
                     l981 2B54                       l973 28B0                       l965 2898  
                     l957 2868                       l895 2784                       l887 277A  
                     l991 2AA4                       l983 2B0A                       l975 28B6  
                     l967 289E                       l959 286E                       l897 278C  
                     l889 277E                       l993 2AA6                       l985 2B1A  
                     l977 28BC                       l969 28A4                       l899 2792  
                     l995 2AAA                       l979 2B5C                       l987 2B20  
                     l997 2AAE                       l989 2B30                       l999 2AB6  
                     u300 2A26                       u301 2A22                       u310 2618  
                     u311 2614                       u320 2632                       u400 272E  
                     u321 262E                       u401 272A                       u330 2658  
                     u410 2744                       u331 2654                       u411 2740  
                     u340 2676                       u420 2768                       u341 2672  
                     u421 2764                       u430 2A46                       u350 2692  
                     u431 2A42                       u351 268E                       u440 2A64  
                     u360 26B8                       u441 2A60                       u361 26B4  
                     u450 296A                       u370 26DC                       u451 2966  
                     u371 26D8                       u507 2882                       u380 26F6  
                     u381 26F2                       u517 2892                       u390 2710  
                     u607 2B4A                       u527 2A7C                       u391 270C  
                     u537 2AB0                       u547 2786                       u467 2564  
                     u557 2796                       u477 2ADC                       u567 27A0  
                     u487 2AEE                       u577 27B6                       u497 2874  
                     u587 27C6                       u597 27D0              ___awmod@sign 0506  
             LEER_LCD@aux 0501                       wreg 0004E8              ?_CURSOR_HOME 0501  
          ??_ENVIA_NIBBLE 0501            ENVIA_CHAR@dato 0502                      l1001 2AB8  
                    l1011 2ACE                      l1003 2ABA                      l1005 2ABC  
                    l1007 2AC2                      l1111 29D2                      l1103 29B4  
                    l1009 2AC8                      l1121 29F2                      l1113 29EA  
                    l1105 29CC                      l1115 29EC                      l1107 29CE  
                    l1123 2AD6                      l1117 29EE                      l1109 29D0  
                    l1301 2624                      l1125 2AE4                      l1119 29F0  
                    l1311 2658                      l1303 2632                      l1127 2AE8  
                    l1321 2692                      l1313 2660                      l1305 263A  
                    l1129 2B04                      l1401 2538                      l1331 26B8  
                    l1323 269A                      l1315 2668                      l1307 263E  
                    l1411 2574                      l1403 2544                      l1333 26C0  
                    l1325 269C                      l1317 2676                      l1309 2646  
                    l1341 26DC                      l1421 25A2                      l1413 257E  
                    l1405 254E                      l1327 26A2                      l1319 267C  
                    l1351 2710                      l1343 26E4                      l1431 25C6  
                    l1423 25AA                      l1415 258A                      l1407 255A  
                    l1329 26A8                      l1361 274C                      l1353 2718  
                    l1345 26E8                      l1337 26CA                      l1441 25E8  
                    l1433 25CC                      l1425 25B0                      l1417 2594  
                    l1409 2570                      l1283 29F6                      l1363 2752  
                    l1355 2720                      l1347 26F6                      l1339 26CE  
                    l1443 25EE                      l1435 25D2                      l1427 25B6  
                    l1419 259A                      l1285 2A02                      l1381 2A64  
                    l1293 2606                      l1357 272E                      l1365 2758  
                    l1349 26FE                      l1373 28C6                      l1445 25F6  
                    l1437 25DA                      l1429 25BE                      l1287 2A06  
                    l1391 2956                      l1383 291E                      l1375 2A36  
                    l1295 260A                      l1367 2768                      l1359 2744  
                    l1439 25E2                      l1289 2A26                      l1393 2958  
                    l1385 292E                      l1377 2A46                      l1297 2618  
                    l1369 2770                      l1387 292E                      l1379 2A52  
                    l1299 2620                      l1395 2526                      l1389 2936  
                    l1397 252A                      l1399 252E                      STR_1 2519  
                    STR_2 250E                      STR_3 2501                      _LATD 0004C1  
                    _main 2526          __end_of_CCP1_ISR 2864                      start 0102  
           ?_CURSOR_ONOFF 0501              ___param_bank 000000           ??_ENVIA_LCD_CMD 0502  
        __end_of_LEER_LCD 27F0          __end_of_INT0_ISR 2B72          __end_of_INT1_ISR 2B7A  
        __end_of_INT2_ISR 2B6C                     ?_main 0501           __end_of___awdiv 26CA  
         __end_of___awmod 277A                     _T1CLK 000321           ___awdiv@divisor 0509  
                   _T1CON 00031E                     i2l100 2B70                     i2l110 2B6A  
                   i2l105 2B78                     i2l123 2862           ___awdiv@counter 050B  
                   _OSCEN 0000B3                     _PORTD 0004D1                     _TRISD 0004C9  
                   _horas 0518               ?_POS_CURSOR 0504                     _ticks 0512  
                   tablat 0004F5                     status 0004D8            ??_CURSOR_ONOFF 0504  
         __initialization 296C              __end_of_main 2606                    ??_main 0510  
           __activetblptr 000001                    _CCPR1H 000341                    _CCPR1L 000340  
        ___awdiv@dividend 0507                    _ANSELD 000418                    i2l1211 2B76  
                  i2l1221 2804                    i2l1213 2B64                    i2l1205 2B6C  
                  i2l1231 2834                    i2l1223 2808                    i2l1215 2B66  
                  i2l1207 2B6E                    i2l1233 2846                    i2l1225 281A  
                  i2l1241 2860                    i2l1217 27F0                    i2l1209 2B74  
                  i2l1235 284E                    i2l1227 281E                    i2l1219 27F2  
                  i2l1229 2830                    i2l1237 2854                    i2l1239 285A  
                  _OSCFRQ 0000B1                 ??___awdiv 050B                    _decena 0514  
               ??___awmod 0505      __end_of_ENVIA_NIBBLE 2B54          ___awdiv@quotient 050D  
         ___awmod@divisor 0503                    isa$std 000001           ___awmod@counter 0505  
                  _unidad 0513                    _strlen 29F6                 ?_CCP1_ISR 0501  
            __pdataCOMRAM 0516              __mediumconst 0000                    tblptrh 0004F7  
                  tblptrl 0004F6                    tblptru 0004F8              ??_BORRAR_LCD 0504  
               ?_LEER_LCD 0501                __accesstop 0560   __end_of__initialization 29A6  
               ?_INT0_ISR 0501                 ?_INT1_ISR 0501                 ?_INT2_ISR 0501  
            ??_LCD_CONFIG 0504             ___rparam_used 000001              ??_ENVIA_CHAR 0502  
          __pcstackCOMRAM 0501            ivt0x8_undefint 0100        __end_of_BORRAR_LCD 2B64  
              ??_CCP1_ISR 0501          _ESCRIBE_MENSAJE2 291E          ENVIA_LCD_CMD@aux 0503  
    __end_of_CURSOR_ONOFF 2B38        __end_of_LCD_CONFIG 28C4        __end_of_ENVIA_CHAR 2AD6  
              ??_LEER_LCD 0501          ENVIA_NIBBLE@dato 0501                ??_INT0_ISR 0501  
              ??_INT1_ISR 0501                ??_INT2_ISR 0501                   IVTBASEH 00045E  
                 IVTBASEL 00045D                   IVTBASEU 00045F                   _CCP1CON 000342  
                 ?_strlen 0501                _lcd_config 2AD6                   _OSCCON1 0000AD  
                 i2u20_40 2804                   i2u20_41 2800                   i2u21_40 281A  
                 i2u21_41 2816                   i2u22_40 2830                   i2u22_41 282C  
                 i2u23_40 2846                   i2u23_41 2842              ??_POS_CURSOR 0505  
                 __Hparam 0000                   __Lparam 0000         __end_of_configuro 29F6  
                 ___awdiv 2606                   ___awmod 26CA              __psmallconst 2500  
   __end_of_ENVIA_LCD_CMD 2AA2         __end_of_convierte 291E                   __pcinit 296C  
      __end_of_POS_CURSOR 2A6E                   __ramtop 2500                   _centena 0515  
                 __ptext0 2526                   __ptext1 2AD6                   __ptext2 2864  
                 __ptext3 2B08                   __ptext4 2B54                   __ptext5 2B5C  
                 __ptext6 28C4                   __ptext7 26CA                   __ptext8 2606  
                 __ptext9 29B4          ___awmod@dividend 0501                   _minutos 0517  
               _PIE10bits 0004A8              _ENVIA_NIBBLE 2B38      end_of_initialization 29A6  
               _PIR10bits 0004B8                   strlen@a 0503                   strlen@s 0501  
       ESCRIBE_MENSAJE2@i 050A               ?_lcd_config 0501                 _TRISAbits 0004C6  
               _TRISBbits 0004C7  __end_of_ESCRIBE_MENSAJE2 296C              _CURSOR_ONOFF 2B08  
      CURSOR_ONOFF@estado 0504             __pidataCOMRAM 2B7A            __end_of_strlen 2A34  
           ??_CURSOR_HOME 0504       start_initialization 296C                ivt0x8_base 0008  
       ENVIA_LCD_CMD@dato 0502                  ??_strlen 0503               __pbssCOMRAM 0512  
     __end_of_CURSOR_HOME 2B5C                  ?___awdiv 0507                  ?___awmod 0501  
               _configuro 29B4               __smallconst 2500                 _convierte 28C4  
                _CCP1_ISR 27F0           convierte@numero 050F                  _LEER_LCD 277A  
                _INT0_ISR 2B6C                  _INT1_ISR 2B74                  _INT2_ISR 2B64  
                _LATBbits 0004BF                  _LATDbits 0004C1                  _PIE1bits 00049F  
                _PIE3bits 0004A1                  _PIE6bits 0004A4                  _PIR1bits 0004AF  
                _PIR3bits 0004B1                  _PIR6bits 0004B4            POS_CURSOR@fila 0505  
              ?_configuro 0501    ESCRIBE_MENSAJE2@cadena 0505                ?_convierte 0501  
            ??_lcd_config 0505               _CURSOR_HOME 2B54               _INTCON0bits 0004D6  
                __Hrparam 0000         ?_ESCRIBE_MENSAJE2 0505                  __Lrparam 0000  
            __Lsmallconst 2500        __end_of_lcd_config 2B08        ??_ESCRIBE_MENSAJE2 0507  
              _ANSELAbits 000400                _ANSELBbits 000408                  __pivt0x8 0008  
                __ptext10 2A34                  __ptext11 2A6E                  __ptext20 27F0  
                __ptext12 291E                  __ptext13 29F6                  __ptext14 2AA2  
                __ptext15 277A                  __ptext16 2B38                  __ptext17 2B6C  
                __ptext18 2B74                  __ptext19 2B64                _BORRAR_LCD 2B5C  
              _LCD_CONFIG 2864                _ENVIA_CHAR 2AA2                  _segundos 0516  
                isa$xinst 000000             _ENVIA_LCD_CMD 2A6E               ??_configuro 0501  
             ??_convierte 050F                  intlevel2 0000            ?_ENVIA_LCD_CMD 0501  
     ESCRIBE_MENSAJE2@tam 0509               ?_BORRAR_LCD 0501             ?_ENVIA_NIBBLE 0501  
              _POS_CURSOR 2A34               ?_LCD_CONFIG 0501               ?_ENVIA_CHAR 0501  
       POS_CURSOR@columna 0504  
