

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Mon Jun 19 12:35:55 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	18F57Q43
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=2
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1
    22                           	psect	text13,global,reloc=2,class=CODE,delta=1
    23                           	psect	text14,global,reloc=2,class=CODE,delta=1
    24                           	psect	text15,global,reloc=2,class=CODE,delta=1
    25                           	psect	text16,global,reloc=2,class=CODE,delta=1
    26                           	psect	text17,global,reloc=2,class=CODE,delta=1
    27                           	psect	text18,global,reloc=2,class=CODE,delta=1
    28                           	psect	text19,global,reloc=2,class=CODE,delta=1
    29                           	psect	text20,global,reloc=2,class=CODE,delta=1
    30                           	psect	text21,global,reloc=2,class=CODE,delta=1
    31                           	psect	text22,global,reloc=4,class=CODE,delta=1
    32                           	psect	text23,global,reloc=2,class=CODE,delta=1
    33                           	psect	text24,global,reloc=2,class=CODE,delta=1
    34                           	psect	text25,global,reloc=2,class=CODE,delta=1
    35                           	psect	text26,global,reloc=2,class=CODE,delta=1
    36                           	psect	text27,global,reloc=2,class=CODE,delta=1
    37                           	psect	text28,global,reloc=2,class=CODE,delta=1
    38                           	psect	text29,global,reloc=2,class=CODE,delta=1
    39                           	psect	text30,global,reloc=2,class=CODE,delta=1
    40                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
    41                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    42                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    43                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    44                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    45   000000                     
    46                           ; Generated 17/06/2022 GMT
    47                           ; 
    48                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    49                           ; All rights reserved.
    50                           ; 
    51                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    52                           ; 
    53                           ; Redistribution and use in source and binary forms, with or without modification, are
    54                           ; permitted provided that the following conditions are met:
    55                           ; 
    56                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    57                           ;        conditions and the following disclaimer.
    58                           ; 
    59                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    60                           ;        of conditions and the following disclaimer in the documentation and/or other
    61                           ;        materials provided with the distribution. Publication is not required when
    62                           ;        this file is used in an embedded application.
    63                           ; 
    64                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    65                           ;        software without specific prior written permission.
    66                           ; 
    67                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    68                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    69                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    70                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    71                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    72                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    73                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    74                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    75                           ; 
    76                           ; 
    77                           ; Code-generator required, PIC18F57Q43 Definitions
    78                           ; 
    79                           ; SFR Addresses
    80   000000                     _U1CON1	set	684
    81   000000                     _U1CON2	set	685
    82   000000                     _LATD	set	1217
    83   000000                     _OSCCON1	set	173
    84   000000                     _OSCFRQ	set	177
    85   000000                     _OSCEN	set	179
    86   000000                     _RF0PPS	set	553
    87   000000                     _INT0PPS	set	574
    88   000000                     _ANSELA	set	1024
    89   000000                     _TRISA	set	1222
    90   000000                     _TRISD	set	1225
    91   000000                     _INTCON0bits	set	1238
    92   000000                     _TRISB	set	1223
    93   000000                     _ANSELB	set	1032
    94   000000                     _ANSELD	set	1048
    95   000000                     _PIE1bits	set	1183
    96   000000                     _WPUBbits	set	1033
    97   000000                     _PIR1bits	set	1199
    98   000000                     _U1TXB	set	675
    99   000000                     _U1CON0	set	683
   100   000000                     _U1BRGL	set	686
   101   000000                     _U1BRGH	set	687
   102   000000                     _ADCON0bits	set	1011
   103   000000                     _PORTD	set	1233
   104   000000                     _TRISFbits	set	1227
   105   000000                     _TRISE	set	1226
   106   000000                     _ANSELE	set	1056
   107   000000                     _ANSELFbits	set	1064
   108   000000                     _U1ERRIRbits	set	690
   109   000000                     _ADRESL	set	1002
   110   000000                     _ADRESH	set	1003
   111   000000                     _ADPCH	set	1004
   112   000000                     _LATDbits	set	1217
   113                           
   114                           	psect	smallconst
   115   002600                     __psmallconst:
   116                           	callstack 0
   117   002600  00                 	db	0
   118   002601                     STR_2:
   119                           
   120                           ; BSR set to: 3
   121   002601  54                 	db	84	;'T'
   122   002602  61                 	db	97	;'a'
   123   002603  6C                 	db	108	;'l'
   124   002604  6C                 	db	108	;'l'
   125   002605  65                 	db	101	;'e'
   126   002606  72                 	db	114	;'r'
   127   002607  20                 	db	32
   128   002608  64                 	db	100	;'d'
   129   002609  65                 	db	101	;'e'
   130   00260A  20                 	db	32
   131   00260B  4D                 	db	77	;'M'
   132   00260C  69                 	db	105	;'i'
   133   00260D  63                 	db	99	;'c'
   134   00260E  72                 	db	114	;'r'
   135   00260F  6F                 	db	111	;'o'
   136   002610  00                 	db	0
   137   002611                     STR_7:
   138                           
   139                           ; BSR set to: 3
   140   002611  43                 	db	67	;'C'
   141   002612  61                 	db	97	;'a'
   142   002613  6E                 	db	110	;'n'
   143   002614  61                 	db	97	;'a'
   144   002615  6C                 	db	108	;'l'
   145   002616  20                 	db	32
   146   002617  41                 	db	65	;'A'
   147   002618  4E                 	db	78	;'N'
   148   002619  2D                 	db	45
   149   00261A  30                 	db	48	;'0'
   150   00261B  3A                 	db	58	;':'
   151   00261C  00                 	db	0
   152   00261D                     STR_8:
   153                           
   154                           ; BSR set to: 3
   155   00261D  43                 	db	67	;'C'
   156   00261E  61                 	db	97	;'a'
   157   00261F  6E                 	db	110	;'n'
   158   002620  61                 	db	97	;'a'
   159   002621  6C                 	db	108	;'l'
   160   002622  20                 	db	32
   161   002623  41                 	db	65	;'A'
   162   002624  4E                 	db	78	;'N'
   163   002625  2D                 	db	45
   164   002626  31                 	db	49	;'1'
   165   002627  3A                 	db	58	;':'
   166   002628  00                 	db	0
   167   002629                     STR_1:
   168                           
   169                           ; BSR set to: 3
   170   002629  53                 	db	83	;'S'
   171   00262A  65                 	db	101	;'e'
   172   00262B  6D                 	db	109	;'m'
   173   00262C  61                 	db	97	;'a'
   174   00262D  6E                 	db	110	;'n'
   175   00262E  61                 	db	97	;'a'
   176   00262F  20                 	db	32
   177   002630  31                 	db	49	;'1'
   178   002631  32                 	db	50	;'2'
   179   002632  00                 	db	0
   180   002633  00                 	db	0	; dummy byte at the end
   181   000000                     
   182                           ; #config settings
   183                           
   184                           	psect	cinit
   185   002F18                     __pcinit:
   186                           	callstack 0
   187   002F18                     start_initialization:
   188                           	callstack 0
   189   002F18                     __initialization:
   190                           	callstack 0
   191                           
   192                           ; Clear objects allocated to COMRAM (5 bytes)
   193   002F18  6A25               	clrf	(__pbssCOMRAM+4)& (0+255),c
   194   002F1A  6A24               	clrf	(__pbssCOMRAM+3)& (0+255),c
   195   002F1C  6A23               	clrf	(__pbssCOMRAM+2)& (0+255),c
   196   002F1E  6A22               	clrf	(__pbssCOMRAM+1)& (0+255),c
   197   002F20  6A21               	clrf	__pbssCOMRAM& (0+255),c
   198                           
   199                           ;
   200                           ; Setup IVTBASE
   201                           ;
   202   002F22  0104               	movlb	4
   203   002F24  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
   204   002F26  6F5D               	movwf	93,b
   205   002F28  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
   206   002F2A  6F5E               	movwf	94,b
   207   002F2C  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
   208   002F2E  6F5F               	movwf	95,b
   209   002F30                     end_of_initialization:
   210                           	callstack 0
   211   002F30                     __end_of__initialization:
   212                           	callstack 0
   213   002F30  0E00               	movlw	low (__Lsmallconst shr (0+16))
   214   002F32  6EF8               	movwf	tblptru,c
   215   002F34  0E26               	movlw	high __Lsmallconst
   216   002F36  6EF7               	movwf	tblptrh,c
   217   002F38  0100               	movlb	0
   218   002F3A  EF24  F014         	goto	_main	;jump to C main() function
   219                           
   220                           	psect	bssCOMRAM
   221   000521                     __pbssCOMRAM:
   222                           	callstack 0
   223   000521                     _unidad:
   224                           	callstack 0
   225   000521                     	ds	1
   226   000522                     _decena:
   227                           	callstack 0
   228   000522                     	ds	1
   229   000523                     _centena:
   230                           	callstack 0
   231   000523                     	ds	1
   232   000524                     _millar:
   233                           	callstack 0
   234   000524                     	ds	1
   235   000525                     _diezmillar:
   236                           	callstack 0
   237   000525                     	ds	1
   238                           
   239                           	psect	cstackCOMRAM
   240   000501                     __pcstackCOMRAM:
   241                           	callstack 0
   242   000501                     ?i2_ADC_GetValue:
   243                           	callstack 0
   244   000501                     ?i2___lwmod:
   245                           	callstack 0
   246   000501                     ?i2_strlen:
   247                           	callstack 0
   248   000501                     i2UART1_Data_Send@dato:
   249                           	callstack 0
   250   000501                     i2___lwmod@dividend:
   251                           	callstack 0
   252   000501                     i2strlen@s:
   253                           	callstack 0
   254                           
   255                           ; 2 bytes @ 0x0
   256   000501                     	ds	2
   257   000503                     ??i2_ADC_GetValue:
   258   000503                     i2___lwmod@divisor:
   259                           	callstack 0
   260   000503                     i2strlen@a:
   261                           	callstack 0
   262                           
   263                           ; 2 bytes @ 0x2
   264   000503                     	ds	2
   265   000505                     i2ADC_GetValue@canal:
   266                           	callstack 0
   267   000505                     i2___lwmod@counter:
   268                           	callstack 0
   269   000505                     i2UART1_String_Send@cadena:
   270                           	callstack 0
   271                           
   272                           ; 2 bytes @ 0x4
   273   000505                     	ds	1
   274   000506                     ?i2___lwdiv:
   275                           	callstack 0
   276   000506                     i2___lwdiv@dividend:
   277                           	callstack 0
   278                           
   279                           ; 2 bytes @ 0x5
   280   000506                     	ds	1
   281   000507                     ??i2_UART1_String_Send:
   282                           
   283                           ; 1 bytes @ 0x6
   284   000507                     	ds	1
   285   000508                     i2___lwdiv@divisor:
   286                           	callstack 0
   287                           
   288                           ; 2 bytes @ 0x7
   289   000508                     	ds	1
   290   000509                     i2UART1_String_Send@tam:
   291                           	callstack 0
   292                           
   293                           ; 1 bytes @ 0x8
   294   000509                     	ds	1
   295   00050A                     i2UART1_String_Send@i:
   296                           	callstack 0
   297   00050A                     i2___lwdiv@quotient:
   298                           	callstack 0
   299                           
   300                           ; 2 bytes @ 0x9
   301   00050A                     	ds	2
   302   00050C                     i2___lwdiv@counter:
   303                           	callstack 0
   304                           
   305                           ; 1 bytes @ 0xB
   306   00050C                     	ds	1
   307   00050D                     i2convierte@numero:
   308                           	callstack 0
   309                           
   310                           ; 2 bytes @ 0xC
   311   00050D                     	ds	2
   312   00050F                     ??_INT0_ISR:
   313   00050F                     
   314                           ; 1 bytes @ 0xE
   315   00050F                     	ds	4
   316   000513                     ?_strlen:
   317                           	callstack 0
   318   000513                     ?_ADC_GetValue:
   319                           	callstack 0
   320   000513                     ?___lwmod:
   321                           	callstack 0
   322   000513                     UART1_Data_Send@dato:
   323                           	callstack 0
   324   000513                     ENVIA_NIBBLE@dato:
   325                           	callstack 0
   326   000513                     LEER_LCD@aux:
   327                           	callstack 0
   328   000513                     ___lwmod@dividend:
   329                           	callstack 0
   330   000513                     strlen@s:
   331                           	callstack 0
   332                           
   333                           ; 2 bytes @ 0x12
   334   000513                     	ds	1
   335   000514                     ENVIA_CHAR@dato:
   336                           	callstack 0
   337   000514                     ENVIA_LCD_CMD@dato:
   338                           	callstack 0
   339                           
   340                           ; 1 bytes @ 0x13
   341   000514                     	ds	1
   342   000515                     ??_ADC_GetValue:
   343   000515                     ENVIA_CHAR@aux:
   344                           	callstack 0
   345   000515                     ENVIA_LCD_CMD@aux:
   346                           	callstack 0
   347   000515                     ___lwmod@divisor:
   348                           	callstack 0
   349   000515                     strlen@a:
   350                           	callstack 0
   351                           
   352                           ; 2 bytes @ 0x14
   353   000515                     	ds	1
   354   000516                     ??_LCD_CONFIG:
   355   000516                     POS_CURSOR@columna:
   356                           	callstack 0
   357   000516                     CURSOR_ONOFF@estado:
   358                           	callstack 0
   359                           
   360                           ; 1 bytes @ 0x15
   361   000516                     	ds	1
   362   000517                     ??_LCD_INIT:
   363   000517                     ADC_GetValue@canal:
   364                           	callstack 0
   365   000517                     POS_CURSOR@fila:
   366                           	callstack 0
   367   000517                     ___lwmod@counter:
   368                           	callstack 0
   369   000517                     UART1_String_Send@cadena:
   370                           	callstack 0
   371   000517                     ESCRIBE_MENSAJE2@cadena:
   372                           	callstack 0
   373                           
   374                           ; 2 bytes @ 0x16
   375   000517                     	ds	1
   376   000518                     ?___lwdiv:
   377                           	callstack 0
   378   000518                     ___lwdiv@dividend:
   379                           	callstack 0
   380                           
   381                           ; 2 bytes @ 0x17
   382   000518                     	ds	1
   383   000519                     ??_ESCRIBE_MENSAJE2:
   384   000519                     ??_UART1_String_Send:
   385                           
   386                           ; 1 bytes @ 0x18
   387   000519                     	ds	1
   388   00051A                     ___lwdiv@divisor:
   389                           	callstack 0
   390                           
   391                           ; 2 bytes @ 0x19
   392   00051A                     	ds	1
   393   00051B                     UART1_String_Send@tam:
   394                           	callstack 0
   395   00051B                     ESCRIBE_MENSAJE2@tam:
   396                           	callstack 0
   397                           
   398                           ; 1 bytes @ 0x1A
   399   00051B                     	ds	1
   400   00051C                     UART1_String_Send@i:
   401                           	callstack 0
   402   00051C                     ESCRIBE_MENSAJE2@i:
   403                           	callstack 0
   404   00051C                     ___lwdiv@quotient:
   405                           	callstack 0
   406                           
   407                           ; 2 bytes @ 0x1B
   408   00051C                     	ds	1
   409   00051D                     
   410                           ; 1 bytes @ 0x1C
   411   00051D                     	ds	1
   412   00051E                     ___lwdiv@counter:
   413                           	callstack 0
   414                           
   415                           ; 1 bytes @ 0x1D
   416   00051E                     	ds	1
   417   00051F                     convierte@numero:
   418                           	callstack 0
   419                           
   420                           ; 2 bytes @ 0x1E
   421   00051F                     	ds	2
   422   000521                     
   423                           ; 1 bytes @ 0x20
   424 ;;
   425 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   426 ;;
   427 ;; *************** function _main *****************
   428 ;; Defined at:
   429 ;;		line 92 in file "maincode1.c"
   430 ;; Parameters:    Size  Location     Type
   431 ;;		None
   432 ;; Auto vars:     Size  Location     Type
   433 ;;		None
   434 ;; Return value:  Size  Location     Type
   435 ;;                  1    wreg      void 
   436 ;; Registers used:
   437 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   438 ;; Tracked objects:
   439 ;;		On entry : 0/0
   440 ;;		On exit  : 0/0
   441 ;;		Unchanged: 0/0
   442 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   443 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   444 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   445 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   446 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   447 ;;Total ram usage:        0 bytes
   448 ;; Hardware stack levels required when called: 8
   449 ;; This function calls:
   450 ;;		_ADC_GetValue
   451 ;;		_ENVIA_CHAR
   452 ;;		_ESCRIBE_MENSAJE2
   453 ;;		_POS_CURSOR
   454 ;;		_configuro
   455 ;;		_convierte
   456 ;;		_pantallazo
   457 ;; This function is called by:
   458 ;;		Startup code after reset
   459 ;; This function uses a non-reentrant model
   460 ;;
   461                           
   462                           	psect	text0
   463   002848                     __ptext0:
   464                           	callstack 0
   465   002848                     _main:
   466                           	callstack 119
   467   002848                     
   468                           ;maincode1.c: 93:     configuro();
   469   002848  EC21  F015         	call	_configuro	;wreg free
   470   00284C                     
   471                           ;maincode1.c: 94:     pantallazo();
   472   00284C  ECBC  F015         	call	_pantallazo	;wreg free
   473   002850                     l1528:
   474                           
   475                           ;maincode1.c: 96:         convierte(ADC_GetValue(0));
   476   002850  0E00               	movlw	0
   477   002852  EC38  F017         	call	_ADC_GetValue
   478   002856  C513  F51F         	movff	?_ADC_GetValue,convierte@numero
   479   00285A  C514  F520         	movff	?_ADC_GetValue+1,convierte@numero+1
   480   00285E  EC1A  F013         	call	_convierte	;wreg free
   481   002862                     
   482                           ;maincode1.c: 97:         POS_CURSOR(1,0);
   483   002862  0E00               	movlw	0
   484   002864  6E16               	movwf	POS_CURSOR@columna^(0+1280),c
   485   002866  0E01               	movlw	1
   486   002868  EC7D  F016         	call	_POS_CURSOR
   487   00286C                     
   488                           ;maincode1.c: 98:         ESCRIBE_MENSAJE2("AN-0:");
   489   00286C  0E17               	movlw	low (STR_7+6)
   490   00286E  6E17               	movwf	ESCRIBE_MENSAJE2@cadena^(0+1280),c
   491   002870  0E26               	movlw	high (STR_7+6)
   492   002872  6E18               	movwf	(ESCRIBE_MENSAJE2@cadena+1)^(0+1280),c
   493   002874  EC33  F016         	call	_ESCRIBE_MENSAJE2	;wreg free
   494                           
   495                           ;maincode1.c: 99:         ENVIA_CHAR(millar+0x30);
   496   002878  5024               	movf	_millar^(0+1280),w,c
   497   00287A  0F30               	addlw	48
   498   00287C  ECD4  F016         	call	_ENVIA_CHAR
   499                           
   500                           ;maincode1.c: 100:         ENVIA_CHAR(centena+0x30);
   501   002880  5023               	movf	_centena^(0+1280),w,c
   502   002882  0F30               	addlw	48
   503   002884  ECD4  F016         	call	_ENVIA_CHAR
   504                           
   505                           ;maincode1.c: 101:         ENVIA_CHAR(decena+0x30);
   506   002888  5022               	movf	_decena^(0+1280),w,c
   507   00288A  0F30               	addlw	48
   508   00288C  ECD4  F016         	call	_ENVIA_CHAR
   509                           
   510                           ;maincode1.c: 102:         ENVIA_CHAR(unidad+0x30);
   511   002890  5021               	movf	_unidad^(0+1280),w,c
   512   002892  0F30               	addlw	48
   513   002894  ECD4  F016         	call	_ENVIA_CHAR
   514                           
   515                           ;maincode1.c: 103:         convierte(ADC_GetValue(1));
   516   002898  0E01               	movlw	1
   517   00289A  EC38  F017         	call	_ADC_GetValue
   518   00289E  C513  F51F         	movff	?_ADC_GetValue,convierte@numero
   519   0028A2  C514  F520         	movff	?_ADC_GetValue+1,convierte@numero+1
   520   0028A6  EC1A  F013         	call	_convierte	;wreg free
   521                           
   522                           ;maincode1.c: 104:         POS_CURSOR(2,0);
   523   0028AA  0E00               	movlw	0
   524   0028AC  6E16               	movwf	POS_CURSOR@columna^(0+1280),c
   525   0028AE  0E02               	movlw	2
   526   0028B0  EC7D  F016         	call	_POS_CURSOR
   527   0028B4                     
   528                           ;maincode1.c: 105:         ESCRIBE_MENSAJE2("AN-1:");
   529   0028B4  0E23               	movlw	low (STR_8+6)
   530   0028B6  6E17               	movwf	ESCRIBE_MENSAJE2@cadena^(0+1280),c
   531   0028B8  0E26               	movlw	high (STR_8+6)
   532   0028BA  6E18               	movwf	(ESCRIBE_MENSAJE2@cadena+1)^(0+1280),c
   533   0028BC  EC33  F016         	call	_ESCRIBE_MENSAJE2	;wreg free
   534   0028C0                     
   535                           ;maincode1.c: 106:         ENVIA_CHAR(millar+0x30);
   536   0028C0  5024               	movf	_millar^(0+1280),w,c
   537   0028C2  0F30               	addlw	48
   538   0028C4  ECD4  F016         	call	_ENVIA_CHAR
   539   0028C8                     
   540                           ;maincode1.c: 107:         ENVIA_CHAR(centena+0x30);
   541   0028C8  5023               	movf	_centena^(0+1280),w,c
   542   0028CA  0F30               	addlw	48
   543   0028CC  ECD4  F016         	call	_ENVIA_CHAR
   544   0028D0                     
   545                           ;maincode1.c: 108:         ENVIA_CHAR(decena+0x30);
   546   0028D0  5022               	movf	_decena^(0+1280),w,c
   547   0028D2  0F30               	addlw	48
   548   0028D4  ECD4  F016         	call	_ENVIA_CHAR
   549   0028D8                     
   550                           ;maincode1.c: 109:         ENVIA_CHAR(unidad+0x30);
   551   0028D8  5021               	movf	_unidad^(0+1280),w,c
   552   0028DA  0F30               	addlw	48
   553   0028DC  ECD4  F016         	call	_ENVIA_CHAR
   554   0028E0  EF28  F014         	goto	l1528
   555   0028E4  EF81  F000         	goto	start
   556   0028E8                     __end_of_main:
   557                           	callstack 0
   558                           
   559 ;; *************** function _pantallazo *****************
   560 ;; Defined at:
   561 ;;		line 78 in file "maincode1.c"
   562 ;; Parameters:    Size  Location     Type
   563 ;;		None
   564 ;; Auto vars:     Size  Location     Type
   565 ;;		None
   566 ;; Return value:  Size  Location     Type
   567 ;;                  1    wreg      void 
   568 ;; Registers used:
   569 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   570 ;; Tracked objects:
   571 ;;		On entry : 0/0
   572 ;;		On exit  : 0/0
   573 ;;		Unchanged: 0/0
   574 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   575 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   576 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   577 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   578 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   579 ;;Total ram usage:        0 bytes
   580 ;; Hardware stack levels used: 1
   581 ;; Hardware stack levels required when called: 6
   582 ;; This function calls:
   583 ;;		_BORRAR_LCD
   584 ;;		_ESCRIBE_MENSAJE2
   585 ;;		_POS_CURSOR
   586 ;;		_UART1_NewLine
   587 ;;		_UART1_String_Send
   588 ;; This function is called by:
   589 ;;		_main
   590 ;; This function uses a non-reentrant model
   591 ;;
   592                           
   593                           	psect	text1
   594   002B78                     __ptext1:
   595                           	callstack 0
   596   002B78                     _pantallazo:
   597                           	callstack 120
   598   002B78                     
   599                           ;maincode1.c: 79:     POS_CURSOR(1,0);
   600   002B78  0E00               	movlw	0
   601   002B7A  6E16               	movwf	POS_CURSOR@columna^(0+1280),c
   602   002B7C  0E01               	movlw	1
   603   002B7E  EC7D  F016         	call	_POS_CURSOR
   604   002B82                     
   605                           ;maincode1.c: 80:     ESCRIBE_MENSAJE2("Semana 12");
   606   002B82  0E29               	movlw	low STR_1
   607   002B84  6E17               	movwf	ESCRIBE_MENSAJE2@cadena^(0+1280),c
   608   002B86  0E26               	movlw	high STR_1
   609   002B88  6E18               	movwf	(ESCRIBE_MENSAJE2@cadena+1)^(0+1280),c
   610   002B8A  EC33  F016         	call	_ESCRIBE_MENSAJE2	;wreg free
   611   002B8E                     
   612                           ;maincode1.c: 81:     POS_CURSOR(2,0);
   613   002B8E  0E00               	movlw	0
   614   002B90  6E16               	movwf	POS_CURSOR@columna^(0+1280),c
   615   002B92  0E02               	movlw	2
   616   002B94  EC7D  F016         	call	_POS_CURSOR
   617                           
   618                           ;maincode1.c: 82:     ESCRIBE_MENSAJE2("Taller de Micro");
   619   002B98  0E01               	movlw	low STR_2
   620   002B9A  6E17               	movwf	ESCRIBE_MENSAJE2@cadena^(0+1280),c
   621   002B9C  0E26               	movlw	high STR_2
   622   002B9E  6E18               	movwf	(ESCRIBE_MENSAJE2@cadena+1)^(0+1280),c
   623   002BA0  EC33  F016         	call	_ESCRIBE_MENSAJE2	;wreg free
   624                           
   625                           ;maincode1.c: 83:     UART1_String_Send("Semana 12");
   626   002BA4  0E29               	movlw	low STR_1
   627   002BA6  6E17               	movwf	UART1_String_Send@cadena^(0+1280),c
   628   002BA8  0E26               	movlw	high STR_1
   629   002BAA  6E18               	movwf	(UART1_String_Send@cadena+1)^(0+1280),c
   630   002BAC  EC0E  F016         	call	_UART1_String_Send	;wreg free
   631   002BB0                     
   632                           ;maincode1.c: 84:     UART1_NewLine();
   633   002BB0  EC64  F017         	call	_UART1_NewLine	;wreg free
   634   002BB4                     
   635                           ;maincode1.c: 85:     UART1_String_Send("Taller de Micro");
   636   002BB4  0E01               	movlw	low STR_2
   637   002BB6  6E17               	movwf	UART1_String_Send@cadena^(0+1280),c
   638   002BB8  0E26               	movlw	high STR_2
   639   002BBA  6E18               	movwf	(UART1_String_Send@cadena+1)^(0+1280),c
   640   002BBC  EC0E  F016         	call	_UART1_String_Send	;wreg free
   641   002BC0                     
   642                           ;maincode1.c: 87:     BORRAR_LCD();
   643   002BC0  ECC9  F017         	call	_BORRAR_LCD	;wreg free
   644   002BC4                     
   645                           ;maincode1.c: 88:     UART1_NewLine();
   646   002BC4  EC64  F017         	call	_UART1_NewLine	;wreg free
   647   002BC8  0012               	return		;funcret
   648   002BCA                     __end_of_pantallazo:
   649                           	callstack 0
   650                           
   651 ;; *************** function _UART1_String_Send *****************
   652 ;; Defined at:
   653 ;;		line 67 in file "maincode1.c"
   654 ;; Parameters:    Size  Location     Type
   655 ;;  cadena          2   22[COMRAM] PTR const unsigned char 
   656 ;;		 -> STR_8(12), STR_7(12), STR_4(16), STR_3(10), 
   657 ;; Auto vars:     Size  Location     Type
   658 ;;  i               1   27[COMRAM] unsigned char 
   659 ;;  tam             1   26[COMRAM] unsigned char 
   660 ;; Return value:  Size  Location     Type
   661 ;;                  1    wreg      void 
   662 ;; Registers used:
   663 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   664 ;; Tracked objects:
   665 ;;		On entry : 0/0
   666 ;;		On exit  : 0/0
   667 ;;		Unchanged: 0/0
   668 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   669 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   670 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   671 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   672 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   673 ;;Total ram usage:        6 bytes
   674 ;; Hardware stack levels used: 1
   675 ;; Hardware stack levels required when called: 4
   676 ;; This function calls:
   677 ;;		_UART1_Data_Send
   678 ;;		_strlen
   679 ;; This function is called by:
   680 ;;		_pantallazo
   681 ;; This function uses a non-reentrant model
   682 ;;
   683                           
   684                           	psect	text2
   685   002C1C                     __ptext2:
   686                           	callstack 0
   687   002C1C                     _UART1_String_Send:
   688                           	callstack 121
   689   002C1C                     
   690                           ;maincode1.c: 71:     tam = strlen(cadena);
   691   002C1C  C517  F513         	movff	UART1_String_Send@cadena,strlen@s
   692   002C20  C518  F514         	movff	UART1_String_Send@cadena+1,strlen@s+1
   693   002C24  EC9A  F016         	call	_strlen	;wreg free
   694   002C28  5013               	movf	?_strlen^(0+1280),w,c
   695   002C2A  6E1B               	movwf	UART1_String_Send@tam^(0+1280),c
   696   002C2C                     
   697                           ;maincode1.c: 72:  for(i = 0; i<tam; i++)
   698   002C2C  0E00               	movlw	0
   699   002C2E  6E1C               	movwf	UART1_String_Send@i^(0+1280),c
   700   002C30  EF29  F016         	goto	l1368
   701   002C34                     l1364:
   702                           
   703                           ;maincode1.c: 73:  {;maincode1.c: 74:         UART1_Data_Send(cadena[i]);
   704   002C34  501C               	movf	UART1_String_Send@i^(0+1280),w,c
   705   002C36  2417               	addwf	UART1_String_Send@cadena^(0+1280),w,c
   706   002C38  6E19               	movwf	??_UART1_String_Send^(0+1280),c
   707   002C3A  0E00               	movlw	0
   708   002C3C  2018               	addwfc	(UART1_String_Send@cadena+1)^(0+1280),w,c
   709   002C3E  6E1A               	movwf	(??_UART1_String_Send+1)^(0+1280),c
   710   002C40  C519  F4F6         	movff	??_UART1_String_Send,tblptrl
   711   002C44  C51A  F4F7         	movff	??_UART1_String_Send+1,tblptrh
   712   002C48                     	if	0	;tblptru may be non-zero
   713   002C48                     	endif
   714   002C48                     	if	0	;tblptru may be non-zero
   715   002C48                     	endif
   716   002C48  0008               	tblrd		*
   717   002C4A  50F5               	movf	tablat,w,c
   718   002C4C  ECAD  F017         	call	_UART1_Data_Send
   719   002C50                     
   720                           ;maincode1.c: 75:  }
   721   002C50  2A1C               	incf	UART1_String_Send@i^(0+1280),f,c
   722   002C52                     l1368:
   723   002C52  501B               	movf	UART1_String_Send@tam^(0+1280),w,c
   724   002C54  5C1C               	subwf	UART1_String_Send@i^(0+1280),w,c
   725   002C56  A0D8               	btfss	status,0,c
   726   002C58  EF30  F016         	goto	u381
   727   002C5C  EF32  F016         	goto	u380
   728   002C60                     u381:
   729   002C60  EF1A  F016         	goto	l1364
   730   002C64                     u380:
   731   002C64  0012               	return		;funcret
   732   002C66                     __end_of_UART1_String_Send:
   733                           	callstack 0
   734                           
   735 ;; *************** function _UART1_Data_Send *****************
   736 ;; Defined at:
   737 ;;		line 55 in file "maincode1.c"
   738 ;; Parameters:    Size  Location     Type
   739 ;;  dato            1    wreg     unsigned char 
   740 ;; Auto vars:     Size  Location     Type
   741 ;;  dato            1   18[COMRAM] unsigned char 
   742 ;; Return value:  Size  Location     Type
   743 ;;                  1    wreg      void 
   744 ;; Registers used:
   745 ;;		wreg
   746 ;; Tracked objects:
   747 ;;		On entry : 0/0
   748 ;;		On exit  : 0/0
   749 ;;		Unchanged: 0/0
   750 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   751 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   752 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   753 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   754 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   755 ;;Total ram usage:        1 bytes
   756 ;; Hardware stack levels used: 1
   757 ;; Hardware stack levels required when called: 3
   758 ;; This function calls:
   759 ;;		Nothing
   760 ;; This function is called by:
   761 ;;		_UART1_String_Send
   762 ;; This function uses a non-reentrant model
   763 ;;
   764                           
   765                           	psect	text3
   766   002F5A                     __ptext3:
   767                           	callstack 0
   768   002F5A                     _UART1_Data_Send:
   769                           	callstack 121
   770                           
   771                           ;incstack = 0
   772                           ;UART1_Data_Send@dato stored from wreg
   773   002F5A  6E13               	movwf	UART1_Data_Send@dato^(0+1280),c
   774   002F5C                     
   775                           ;maincode1.c: 56:     U1TXB = dato;
   776   002F5C  C513  F2A3         	movff	UART1_Data_Send@dato,675	;volatile
   777   002F60                     l97:
   778   002F60  0102               	movlb	2	; () banked
   779   002F62  AFB2               	btfss	178,7,b	;volatile
   780   002F64  EFB6  F017         	goto	u21
   781   002F68  EFB8  F017         	goto	u20
   782   002F6C                     u21:
   783   002F6C  EFB0  F017         	goto	l97
   784   002F70                     u20:
   785   002F70                     
   786                           ; BSR set to: 2
   787   002F70  0012               	return		;funcret
   788   002F72                     __end_of_UART1_Data_Send:
   789                           	callstack 0
   790                           
   791 ;; *************** function _UART1_NewLine *****************
   792 ;; Defined at:
   793 ;;		line 60 in file "maincode1.c"
   794 ;; Parameters:    Size  Location     Type
   795 ;;		None
   796 ;; Auto vars:     Size  Location     Type
   797 ;;		None
   798 ;; Return value:  Size  Location     Type
   799 ;;                  1    wreg      void 
   800 ;; Registers used:
   801 ;;		wreg, status,2
   802 ;; Tracked objects:
   803 ;;		On entry : 0/0
   804 ;;		On exit  : 0/0
   805 ;;		Unchanged: 0/0
   806 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   807 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   808 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   809 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   810 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   811 ;;Total ram usage:        0 bytes
   812 ;; Hardware stack levels used: 1
   813 ;; Hardware stack levels required when called: 3
   814 ;; This function calls:
   815 ;;		Nothing
   816 ;; This function is called by:
   817 ;;		_pantallazo
   818 ;; This function uses a non-reentrant model
   819 ;;
   820                           
   821                           	psect	text4
   822   002EC8                     __ptext4:
   823                           	callstack 0
   824   002EC8                     _UART1_NewLine:
   825                           	callstack 122
   826   002EC8                     
   827                           ;maincode1.c: 61:     U1TXB = 0x0A;
   828   002EC8  0E0A               	movlw	10
   829   002ECA  0102               	movlb	2	; () banked
   830   002ECC  6FA3               	movwf	163,b	;volatile
   831   002ECE                     l103:
   832                           
   833                           ; BSR set to: 2
   834   002ECE  AFB2               	btfss	178,7,b	;volatile
   835   002ED0  EF6C  F017         	goto	u61
   836   002ED4  EF6E  F017         	goto	u60
   837   002ED8                     u61:
   838   002ED8  EF67  F017         	goto	l103
   839   002EDC                     u60:
   840   002EDC                     
   841                           ; BSR set to: 2
   842                           ;maincode1.c: 63:     U1TXB = 0x0D;
   843   002EDC  0E0D               	movlw	13
   844   002EDE  6FA3               	movwf	163,b	;volatile
   845   002EE0                     l106:
   846                           
   847                           ; BSR set to: 2
   848   002EE0  AFB2               	btfss	178,7,b	;volatile
   849   002EE2  EF75  F017         	goto	u71
   850   002EE6  EF77  F017         	goto	u70
   851   002EEA                     u71:
   852   002EEA  EF70  F017         	goto	l106
   853   002EEE                     u70:
   854   002EEE                     
   855                           ; BSR set to: 2
   856   002EEE  0012               	return		;funcret
   857   002EF0                     __end_of_UART1_NewLine:
   858                           	callstack 0
   859                           
   860 ;; *************** function _POS_CURSOR *****************
   861 ;; Defined at:
   862 ;;		line 5 in file "LCD.c"
   863 ;; Parameters:    Size  Location     Type
   864 ;;  fila            1    wreg     unsigned char 
   865 ;;  columna         1   21[COMRAM] unsigned char 
   866 ;; Auto vars:     Size  Location     Type
   867 ;;  fila            1   22[COMRAM] unsigned char 
   868 ;; Return value:  Size  Location     Type
   869 ;;                  1    wreg      void 
   870 ;; Registers used:
   871 ;;		wreg, status,2, status,0, cstack
   872 ;; Tracked objects:
   873 ;;		On entry : 0/0
   874 ;;		On exit  : 0/0
   875 ;;		Unchanged: 0/0
   876 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   877 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   878 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   879 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   880 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   881 ;;Total ram usage:        2 bytes
   882 ;; Hardware stack levels used: 1
   883 ;; Hardware stack levels required when called: 5
   884 ;; This function calls:
   885 ;;		_ENVIA_LCD_CMD
   886 ;; This function is called by:
   887 ;;		_pantallazo
   888 ;;		_main
   889 ;; This function uses a non-reentrant model
   890 ;;
   891                           
   892                           	psect	text5
   893   002CFA                     __ptext5:
   894                           	callstack 0
   895   002CFA                     _POS_CURSOR:
   896                           	callstack 120
   897                           
   898                           ; BSR set to: 2
   899                           ;incstack = 0
   900                           ;POS_CURSOR@fila stored from wreg
   901   002CFA  6E17               	movwf	POS_CURSOR@fila^(0+1280),c
   902   002CFC                     
   903                           ;LCD.c: 5: void POS_CURSOR(unsigned char fila,unsigned char columna);LCD.c: 6: {;LCD.c: 
      +                          7:  if(fila == 1)
   904   002CFC  0417               	decf	POS_CURSOR@fila^(0+1280),w,c
   905   002CFE  A4D8               	btfss	status,2,c
   906   002D00  EF84  F016         	goto	u391
   907   002D04  EF86  F016         	goto	u390
   908   002D08                     u391:
   909   002D08  EF8C  F016         	goto	l1374
   910   002D0C                     u390:
   911   002D0C                     
   912                           ;LCD.c: 8:  {;LCD.c: 9:   ENVIA_LCD_CMD(0x80+columna);
   913   002D0C  5016               	movf	POS_CURSOR@columna^(0+1280),w,c
   914   002D0E  0F80               	addlw	128
   915   002D10  ECEE  F016         	call	_ENVIA_LCD_CMD
   916                           
   917                           ;LCD.c: 10:  }
   918   002D14  EF99  F016         	goto	l157
   919   002D18                     l1374:
   920   002D18  0E02               	movlw	2
   921   002D1A  1817               	xorwf	POS_CURSOR@fila^(0+1280),w,c
   922   002D1C  A4D8               	btfss	status,2,c
   923   002D1E  EF93  F016         	goto	u401
   924   002D22  EF95  F016         	goto	u400
   925   002D26                     u401:
   926   002D26  EF99  F016         	goto	l157
   927   002D2A                     u400:
   928   002D2A                     
   929                           ;LCD.c: 12:  {;LCD.c: 13:   ENVIA_LCD_CMD(0xC0+columna);
   930   002D2A  5016               	movf	POS_CURSOR@columna^(0+1280),w,c
   931   002D2C  0FC0               	addlw	192
   932   002D2E  ECEE  F016         	call	_ENVIA_LCD_CMD
   933   002D32                     l157:
   934   002D32  0012               	return		;funcret
   935   002D34                     __end_of_POS_CURSOR:
   936                           	callstack 0
   937                           
   938 ;; *************** function _ESCRIBE_MENSAJE2 *****************
   939 ;; Defined at:
   940 ;;		line 69 in file "LCD.c"
   941 ;; Parameters:    Size  Location     Type
   942 ;;  cadena          2   22[COMRAM] PTR const unsigned char 
   943 ;;		 -> STR_6(6), STR_5(6), STR_2(16), STR_1(10), 
   944 ;; Auto vars:     Size  Location     Type
   945 ;;  i               1   27[COMRAM] unsigned char 
   946 ;;  tam             1   26[COMRAM] unsigned char 
   947 ;; Return value:  Size  Location     Type
   948 ;;                  1    wreg      void 
   949 ;; Registers used:
   950 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   951 ;; Tracked objects:
   952 ;;		On entry : 0/0
   953 ;;		On exit  : 0/0
   954 ;;		Unchanged: 0/0
   955 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   956 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   957 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   958 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   959 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   960 ;;Total ram usage:        6 bytes
   961 ;; Hardware stack levels used: 1
   962 ;; Hardware stack levels required when called: 5
   963 ;; This function calls:
   964 ;;		_ENVIA_CHAR
   965 ;;		_strlen
   966 ;; This function is called by:
   967 ;;		_pantallazo
   968 ;;		_main
   969 ;; This function uses a non-reentrant model
   970 ;;
   971                           
   972                           	psect	text6
   973   002C66                     __ptext6:
   974                           	callstack 0
   975   002C66                     _ESCRIBE_MENSAJE2:
   976                           	callstack 120
   977   002C66                     
   978                           ;LCD.c: 69: void ESCRIBE_MENSAJE2(const char *cadena);LCD.c: 70: {;LCD.c: 71:     unsign
      +                          ed char tam;;LCD.c: 72:     tam = strlen(cadena);
   979   002C66  C517  F513         	movff	ESCRIBE_MENSAJE2@cadena,strlen@s
   980   002C6A  C518  F514         	movff	ESCRIBE_MENSAJE2@cadena+1,strlen@s+1
   981   002C6E  EC9A  F016         	call	_strlen	;wreg free
   982   002C72  5013               	movf	?_strlen^(0+1280),w,c
   983   002C74  6E1B               	movwf	ESCRIBE_MENSAJE2@tam^(0+1280),c
   984   002C76                     
   985                           ;LCD.c: 74:  for(i = 0; i<tam; i++)
   986   002C76  0E00               	movlw	0
   987   002C78  6E1C               	movwf	ESCRIBE_MENSAJE2@i^(0+1280),c
   988   002C7A  EF4E  F016         	goto	l1388
   989   002C7E                     l1384:
   990                           
   991                           ;LCD.c: 75:  {;LCD.c: 76:   ENVIA_CHAR(cadena[i]);
   992   002C7E  501C               	movf	ESCRIBE_MENSAJE2@i^(0+1280),w,c
   993   002C80  2417               	addwf	ESCRIBE_MENSAJE2@cadena^(0+1280),w,c
   994   002C82  6E19               	movwf	??_ESCRIBE_MENSAJE2^(0+1280),c
   995   002C84  0E00               	movlw	0
   996   002C86  2018               	addwfc	(ESCRIBE_MENSAJE2@cadena+1)^(0+1280),w,c
   997   002C88  6E1A               	movwf	(??_ESCRIBE_MENSAJE2+1)^(0+1280),c
   998   002C8A  C519  F4F6         	movff	??_ESCRIBE_MENSAJE2,tblptrl
   999   002C8E  C51A  F4F7         	movff	??_ESCRIBE_MENSAJE2+1,tblptrh
  1000   002C92                     	if	0	;tblptru may be non-zero
  1001   002C92                     	endif
  1002   002C92                     	if	0	;tblptru may be non-zero
  1003   002C92                     	endif
  1004   002C92  0008               	tblrd		*
  1005   002C94  50F5               	movf	tablat,w,c
  1006   002C96  ECD4  F016         	call	_ENVIA_CHAR
  1007   002C9A                     
  1008                           ;LCD.c: 77:  }
  1009   002C9A  2A1C               	incf	ESCRIBE_MENSAJE2@i^(0+1280),f,c
  1010   002C9C                     l1388:
  1011   002C9C  501B               	movf	ESCRIBE_MENSAJE2@tam^(0+1280),w,c
  1012   002C9E  5C1C               	subwf	ESCRIBE_MENSAJE2@i^(0+1280),w,c
  1013   002CA0  A0D8               	btfss	status,0,c
  1014   002CA2  EF55  F016         	goto	u411
  1015   002CA6  EF57  F016         	goto	u410
  1016   002CAA                     u411:
  1017   002CAA  EF3F  F016         	goto	l1384
  1018   002CAE                     u410:
  1019   002CAE  0012               	return		;funcret
  1020   002CB0                     __end_of_ESCRIBE_MENSAJE2:
  1021                           	callstack 0
  1022                           
  1023 ;; *************** function _strlen *****************
  1024 ;; Defined at:
  1025 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\strlen.c"
  1026 ;; Parameters:    Size  Location     Type
  1027 ;;  s               2   18[COMRAM] PTR const unsigned char 
  1028 ;;		 -> STR_8(12), STR_7(12), STR_6(6), STR_5(6), 
  1029 ;;		 -> STR_4(16), STR_3(10), STR_2(16), STR_1(10), 
  1030 ;; Auto vars:     Size  Location     Type
  1031 ;;  a               2   20[COMRAM] PTR const unsigned char 
  1032 ;;		 -> STR_8(12), STR_7(12), STR_6(6), STR_5(6), 
  1033 ;;		 -> STR_4(16), STR_3(10), STR_2(16), STR_1(10), 
  1034 ;; Return value:  Size  Location     Type
  1035 ;;                  2   18[COMRAM] unsigned int 
  1036 ;; Registers used:
  1037 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  1038 ;; Tracked objects:
  1039 ;;		On entry : 0/0
  1040 ;;		On exit  : 0/0
  1041 ;;		Unchanged: 0/0
  1042 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1043 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1044 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1045 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1046 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1047 ;;Total ram usage:        4 bytes
  1048 ;; Hardware stack levels used: 1
  1049 ;; Hardware stack levels required when called: 3
  1050 ;; This function calls:
  1051 ;;		Nothing
  1052 ;; This function is called by:
  1053 ;;		_UART1_String_Send
  1054 ;;		_ESCRIBE_MENSAJE2
  1055 ;; This function uses a non-reentrant model
  1056 ;;
  1057                           
  1058                           	psect	text7
  1059   002D34                     __ptext7:
  1060                           	callstack 0
  1061   002D34                     _strlen:
  1062                           	callstack 121
  1063   002D34  C513  F515         	movff	strlen@s,strlen@a
  1064   002D38  C514  F516         	movff	strlen@s+1,strlen@a+1
  1065   002D3C  EFA2  F016         	goto	l1352
  1066   002D40                     l1350:
  1067   002D40  4A13               	infsnz	strlen@s^(0+1280),f,c
  1068   002D42  2A14               	incf	(strlen@s+1)^(0+1280),f,c
  1069   002D44                     l1352:
  1070   002D44  C513  F4F6         	movff	strlen@s,tblptrl
  1071   002D48  C514  F4F7         	movff	strlen@s+1,tblptrh
  1072   002D4C                     	if	0	;tblptru may be non-zero
  1073   002D4C                     	endif
  1074   002D4C                     	if	0	;tblptru may be non-zero
  1075   002D4C                     	endif
  1076   002D4C  0008               	tblrd		*
  1077   002D4E  50F5               	movf	tablat,w,c
  1078   002D50  0900               	iorlw	0
  1079   002D52  A4D8               	btfss	status,2,c
  1080   002D54  EFAE  F016         	goto	u371
  1081   002D58  EFB0  F016         	goto	u370
  1082   002D5C                     u371:
  1083   002D5C  EFA0  F016         	goto	l1350
  1084   002D60                     u370:
  1085   002D60  5015               	movf	strlen@a^(0+1280),w,c
  1086   002D62  5C13               	subwf	strlen@s^(0+1280),w,c
  1087   002D64  6E13               	movwf	?_strlen^(0+1280),c
  1088   002D66  5016               	movf	(strlen@a+1)^(0+1280),w,c
  1089   002D68  5814               	subwfb	(strlen@s+1)^(0+1280),w,c
  1090   002D6A  6E14               	movwf	(?_strlen+1)^(0+1280),c
  1091   002D6C  0012               	return		;funcret
  1092   002D6E                     __end_of_strlen:
  1093                           	callstack 0
  1094                           
  1095 ;; *************** function _ENVIA_CHAR *****************
  1096 ;; Defined at:
  1097 ;;		line 80 in file "LCD.c"
  1098 ;; Parameters:    Size  Location     Type
  1099 ;;  dato            1    wreg     unsigned char 
  1100 ;; Auto vars:     Size  Location     Type
  1101 ;;  dato            1   19[COMRAM] unsigned char 
  1102 ;;  aux             1   20[COMRAM] unsigned char 
  1103 ;; Return value:  Size  Location     Type
  1104 ;;                  1    wreg      void 
  1105 ;; Registers used:
  1106 ;;		wreg, status,2, status,0, cstack
  1107 ;; Tracked objects:
  1108 ;;		On entry : 0/0
  1109 ;;		On exit  : 0/0
  1110 ;;		Unchanged: 0/0
  1111 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1112 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1113 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1114 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1115 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1116 ;;Total ram usage:        2 bytes
  1117 ;; Hardware stack levels used: 1
  1118 ;; Hardware stack levels required when called: 4
  1119 ;; This function calls:
  1120 ;;		_ENVIA_NIBBLE
  1121 ;;		_LEER_LCD
  1122 ;; This function is called by:
  1123 ;;		_main
  1124 ;;		_ESCRIBE_MENSAJE2
  1125 ;;		_ESCRIBE_MENSAJE
  1126 ;;		_GENERACARACTER
  1127 ;; This function uses a non-reentrant model
  1128 ;;
  1129                           
  1130                           	psect	text8
  1131   002DA8                     __ptext8:
  1132                           	callstack 0
  1133   002DA8                     _ENVIA_CHAR:
  1134                           	callstack 120
  1135                           
  1136                           ;incstack = 0
  1137                           ;ENVIA_CHAR@dato stored from wreg
  1138   002DA8  6E14               	movwf	ENVIA_CHAR@dato^(0+1280),c
  1139   002DAA                     
  1140                           ;LCD.c: 80: void ENVIA_CHAR(unsigned char dato);LCD.c: 81: {;LCD.c: 82:  unsigned char a
      +                          ux;;LCD.c: 83:  LATDbits.LATD0 = 1;
  1141   002DAA  80C1               	bsf	193,0,c	;volatile
  1142   002DAC                     
  1143                           ;LCD.c: 84:  LEER_LCD();
  1144   002DAC  ECE8  F014         	call	_LEER_LCD	;wreg free
  1145   002DB0                     
  1146                           ;LCD.c: 85:  TRISD = 0x00;
  1147   002DB0  0E00               	movlw	0
  1148   002DB2  6EC9               	movwf	201,c	;volatile
  1149   002DB4                     
  1150                           ;LCD.c: 86:     _delay((unsigned long)((100)*(4000000UL/4000000.0)));
  1151   002DB4  0E21               	movlw	33
  1152   002DB6                     u597:
  1153   002DB6  2EE8               	decfsz	wreg,f,c
  1154   002DB8  D7FE               	bra	u597
  1155   002DBA  F000               	nop	
  1156   002DBC                     
  1157                           ;LCD.c: 87:  LATDbits.LATD1 = 0;
  1158   002DBC  92C1               	bcf	193,1,c	;volatile
  1159   002DBE                     
  1160                           ;LCD.c: 88:  LATDbits.LATD2 = 0;
  1161   002DBE  94C1               	bcf	193,2,c	;volatile
  1162   002DC0                     
  1163                           ;LCD.c: 89:  LATDbits.LATD0 = 1;
  1164   002DC0  80C1               	bsf	193,0,c	;volatile
  1165   002DC2                     
  1166                           ;LCD.c: 90:  aux = dato & 0xF0;
  1167   002DC2  5014               	movf	ENVIA_CHAR@dato^(0+1280),w,c
  1168   002DC4  0BF0               	andlw	240
  1169   002DC6  6E15               	movwf	ENVIA_CHAR@aux^(0+1280),c
  1170   002DC8                     
  1171                           ;LCD.c: 91:  ENVIA_NIBBLE(aux);
  1172   002DC8  5015               	movf	ENVIA_CHAR@aux^(0+1280),w,c
  1173   002DCA  EC9F  F017         	call	_ENVIA_NIBBLE
  1174   002DCE                     
  1175                           ;LCD.c: 92:  aux = dato << 4;
  1176   002DCE  3814               	swapf	ENVIA_CHAR@dato^(0+1280),w,c
  1177   002DD0  0BF0               	andlw	240
  1178   002DD2  6E15               	movwf	ENVIA_CHAR@aux^(0+1280),c
  1179   002DD4                     
  1180                           ;LCD.c: 93:  ENVIA_NIBBLE(aux);
  1181   002DD4  5015               	movf	ENVIA_CHAR@aux^(0+1280),w,c
  1182   002DD6  EC9F  F017         	call	_ENVIA_NIBBLE
  1183   002DDA  0012               	return		;funcret
  1184   002DDC                     __end_of_ENVIA_CHAR:
  1185                           	callstack 0
  1186                           
  1187 ;; *************** function _convierte *****************
  1188 ;; Defined at:
  1189 ;;		line 47 in file "maincode1.c"
  1190 ;; Parameters:    Size  Location     Type
  1191 ;;  numero          2   30[COMRAM] unsigned int 
  1192 ;; Auto vars:     Size  Location     Type
  1193 ;;		None
  1194 ;; Return value:  Size  Location     Type
  1195 ;;                  1    wreg      void 
  1196 ;; Registers used:
  1197 ;;		wreg, status,2, status,0, cstack
  1198 ;; Tracked objects:
  1199 ;;		On entry : 0/0
  1200 ;;		On exit  : 0/0
  1201 ;;		Unchanged: 0/0
  1202 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1203 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1204 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1205 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1206 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1207 ;;Total ram usage:        2 bytes
  1208 ;; Hardware stack levels used: 1
  1209 ;; Hardware stack levels required when called: 4
  1210 ;; This function calls:
  1211 ;;		___lwdiv
  1212 ;;		___lwmod
  1213 ;; This function is called by:
  1214 ;;		_main
  1215 ;; This function uses a non-reentrant model
  1216 ;;
  1217                           
  1218                           	psect	text9
  1219   002634                     __ptext9:
  1220                           	callstack 0
  1221   002634                     _convierte:
  1222                           	callstack 122
  1223   002634                     
  1224                           ;maincode1.c: 48:     diezmillar = numero / 10000;
  1225   002634  C51F  F518         	movff	convierte@numero,___lwdiv@dividend
  1226   002638  C520  F519         	movff	convierte@numero+1,___lwdiv@dividend+1
  1227   00263C  0E27               	movlw	39
  1228   00263E  6E1B               	movwf	(___lwdiv@divisor+1)^(0+1280),c
  1229   002640  0E10               	movlw	16
  1230   002642  6E1A               	movwf	___lwdiv@divisor^(0+1280),c
  1231   002644  EC74  F014         	call	___lwdiv	;wreg free
  1232   002648  5018               	movf	?___lwdiv^(0+1280),w,c
  1233   00264A  6E25               	movwf	_diezmillar^(0+1280),c
  1234                           
  1235                           ;maincode1.c: 49:     millar = (numero % 10000) / 1000;
  1236   00264C  0E27               	movlw	39
  1237   00264E  6E16               	movwf	(___lwmod@divisor+1)^(0+1280),c
  1238   002650  0E10               	movlw	16
  1239   002652  6E15               	movwf	___lwmod@divisor^(0+1280),c
  1240   002654  C51F  F513         	movff	convierte@numero,___lwmod@dividend
  1241   002658  C520  F514         	movff	convierte@numero+1,___lwmod@dividend+1
  1242   00265C  EC58  F015         	call	___lwmod	;wreg free
  1243   002660  C513  F518         	movff	?___lwmod,___lwdiv@dividend
  1244   002664  C514  F519         	movff	?___lwmod+1,___lwdiv@dividend+1
  1245   002668  0E03               	movlw	3
  1246   00266A  6E1B               	movwf	(___lwdiv@divisor+1)^(0+1280),c
  1247   00266C  0EE8               	movlw	232
  1248   00266E  6E1A               	movwf	___lwdiv@divisor^(0+1280),c
  1249   002670  EC74  F014         	call	___lwdiv	;wreg free
  1250   002674  5018               	movf	?___lwdiv^(0+1280),w,c
  1251   002676  6E24               	movwf	_millar^(0+1280),c
  1252                           
  1253                           ;maincode1.c: 50:     centena = (numero % 1000) / 100;
  1254   002678  0E03               	movlw	3
  1255   00267A  6E16               	movwf	(___lwmod@divisor+1)^(0+1280),c
  1256   00267C  0EE8               	movlw	232
  1257   00267E  6E15               	movwf	___lwmod@divisor^(0+1280),c
  1258   002680  C51F  F513         	movff	convierte@numero,___lwmod@dividend
  1259   002684  C520  F514         	movff	convierte@numero+1,___lwmod@dividend+1
  1260   002688  EC58  F015         	call	___lwmod	;wreg free
  1261   00268C  C513  F518         	movff	?___lwmod,___lwdiv@dividend
  1262   002690  C514  F519         	movff	?___lwmod+1,___lwdiv@dividend+1
  1263   002694  0E00               	movlw	0
  1264   002696  6E1B               	movwf	(___lwdiv@divisor+1)^(0+1280),c
  1265   002698  0E64               	movlw	100
  1266   00269A  6E1A               	movwf	___lwdiv@divisor^(0+1280),c
  1267   00269C  EC74  F014         	call	___lwdiv	;wreg free
  1268   0026A0  5018               	movf	?___lwdiv^(0+1280),w,c
  1269   0026A2  6E23               	movwf	_centena^(0+1280),c
  1270                           
  1271                           ;maincode1.c: 51:     decena = (numero % 100) / 10;
  1272   0026A4  0E00               	movlw	0
  1273   0026A6  6E16               	movwf	(___lwmod@divisor+1)^(0+1280),c
  1274   0026A8  0E64               	movlw	100
  1275   0026AA  6E15               	movwf	___lwmod@divisor^(0+1280),c
  1276   0026AC  C51F  F513         	movff	convierte@numero,___lwmod@dividend
  1277   0026B0  C520  F514         	movff	convierte@numero+1,___lwmod@dividend+1
  1278   0026B4  EC58  F015         	call	___lwmod	;wreg free
  1279   0026B8  C513  F518         	movff	?___lwmod,___lwdiv@dividend
  1280   0026BC  C514  F519         	movff	?___lwmod+1,___lwdiv@dividend+1
  1281   0026C0  0E00               	movlw	0
  1282   0026C2  6E1B               	movwf	(___lwdiv@divisor+1)^(0+1280),c
  1283   0026C4  0E0A               	movlw	10
  1284   0026C6  6E1A               	movwf	___lwdiv@divisor^(0+1280),c
  1285   0026C8  EC74  F014         	call	___lwdiv	;wreg free
  1286   0026CC  5018               	movf	?___lwdiv^(0+1280),w,c
  1287   0026CE  6E22               	movwf	_decena^(0+1280),c
  1288                           
  1289                           ;maincode1.c: 52:     unidad = numero % 10;
  1290   0026D0  C51F  F513         	movff	convierte@numero,___lwmod@dividend
  1291   0026D4  C520  F514         	movff	convierte@numero+1,___lwmod@dividend+1
  1292   0026D8  0E00               	movlw	0
  1293   0026DA  6E16               	movwf	(___lwmod@divisor+1)^(0+1280),c
  1294   0026DC  0E0A               	movlw	10
  1295   0026DE  6E15               	movwf	___lwmod@divisor^(0+1280),c
  1296   0026E0  EC58  F015         	call	___lwmod	;wreg free
  1297   0026E4  5013               	movf	?___lwmod^(0+1280),w,c
  1298   0026E6  6E21               	movwf	_unidad^(0+1280),c
  1299   0026E8  0012               	return		;funcret
  1300   0026EA                     __end_of_convierte:
  1301                           	callstack 0
  1302                           
  1303 ;; *************** function ___lwmod *****************
  1304 ;; Defined at:
  1305 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\lwmod.c"
  1306 ;; Parameters:    Size  Location     Type
  1307 ;;  dividend        2   18[COMRAM] unsigned int 
  1308 ;;  divisor         2   20[COMRAM] unsigned int 
  1309 ;; Auto vars:     Size  Location     Type
  1310 ;;  counter         1   22[COMRAM] unsigned char 
  1311 ;; Return value:  Size  Location     Type
  1312 ;;                  2   18[COMRAM] unsigned int 
  1313 ;; Registers used:
  1314 ;;		wreg, status,2, status,0
  1315 ;; Tracked objects:
  1316 ;;		On entry : 0/0
  1317 ;;		On exit  : 0/0
  1318 ;;		Unchanged: 0/0
  1319 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1320 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1321 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1322 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1323 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1324 ;;Total ram usage:        5 bytes
  1325 ;; Hardware stack levels used: 1
  1326 ;; Hardware stack levels required when called: 3
  1327 ;; This function calls:
  1328 ;;		Nothing
  1329 ;; This function is called by:
  1330 ;;		_convierte
  1331 ;; This function uses a non-reentrant model
  1332 ;;
  1333                           
  1334                           	psect	text10
  1335   002AB0                     __ptext10:
  1336                           	callstack 0
  1337   002AB0                     ___lwmod:
  1338                           	callstack 122
  1339   002AB0  5015               	movf	___lwmod@divisor^(0+1280),w,c
  1340   002AB2  1016               	iorwf	(___lwmod@divisor+1)^(0+1280),w,c
  1341   002AB4  B4D8               	btfsc	status,2,c
  1342   002AB6  EF5F  F015         	goto	u451
  1343   002ABA  EF61  F015         	goto	u450
  1344   002ABE                     u451:
  1345   002ABE  EF85  F015         	goto	l732
  1346   002AC2                     u450:
  1347   002AC2  0E01               	movlw	1
  1348   002AC4  6E17               	movwf	___lwmod@counter^(0+1280),c
  1349   002AC6  EF69  F015         	goto	l1418
  1350   002ACA                     l1416:
  1351   002ACA  90D8               	bcf	status,0,c
  1352   002ACC  3615               	rlcf	___lwmod@divisor^(0+1280),f,c
  1353   002ACE  3616               	rlcf	(___lwmod@divisor+1)^(0+1280),f,c
  1354   002AD0  2A17               	incf	___lwmod@counter^(0+1280),f,c
  1355   002AD2                     l1418:
  1356   002AD2  AE16               	btfss	(___lwmod@divisor+1)^(0+1280),7,c
  1357   002AD4  EF6E  F015         	goto	u461
  1358   002AD8  EF70  F015         	goto	u460
  1359   002ADC                     u461:
  1360   002ADC  EF65  F015         	goto	l1416
  1361   002AE0                     u460:
  1362   002AE0                     l1420:
  1363   002AE0  5015               	movf	___lwmod@divisor^(0+1280),w,c
  1364   002AE2  5C13               	subwf	___lwmod@dividend^(0+1280),w,c
  1365   002AE4  5016               	movf	(___lwmod@divisor+1)^(0+1280),w,c
  1366   002AE6  5814               	subwfb	(___lwmod@dividend+1)^(0+1280),w,c
  1367   002AE8  A0D8               	btfss	status,0,c
  1368   002AEA  EF79  F015         	goto	u471
  1369   002AEE  EF7B  F015         	goto	u470
  1370   002AF2                     u471:
  1371   002AF2  EF7F  F015         	goto	l1424
  1372   002AF6                     u470:
  1373   002AF6  5015               	movf	___lwmod@divisor^(0+1280),w,c
  1374   002AF8  5E13               	subwf	___lwmod@dividend^(0+1280),f,c
  1375   002AFA  5016               	movf	(___lwmod@divisor+1)^(0+1280),w,c
  1376   002AFC  5A14               	subwfb	(___lwmod@dividend+1)^(0+1280),f,c
  1377   002AFE                     l1424:
  1378   002AFE  90D8               	bcf	status,0,c
  1379   002B00  3216               	rrcf	(___lwmod@divisor+1)^(0+1280),f,c
  1380   002B02  3215               	rrcf	___lwmod@divisor^(0+1280),f,c
  1381   002B04  2E17               	decfsz	___lwmod@counter^(0+1280),f,c
  1382   002B06  EF70  F015         	goto	l1420
  1383   002B0A                     l732:
  1384   002B0A  C513  F513         	movff	___lwmod@dividend,?___lwmod
  1385   002B0E  C514  F514         	movff	___lwmod@dividend+1,?___lwmod+1
  1386   002B12  0012               	return		;funcret
  1387   002B14                     __end_of___lwmod:
  1388                           	callstack 0
  1389                           
  1390 ;; *************** function ___lwdiv *****************
  1391 ;; Defined at:
  1392 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\lwdiv.c"
  1393 ;; Parameters:    Size  Location     Type
  1394 ;;  dividend        2   23[COMRAM] unsigned int 
  1395 ;;  divisor         2   25[COMRAM] unsigned int 
  1396 ;; Auto vars:     Size  Location     Type
  1397 ;;  quotient        2   27[COMRAM] unsigned int 
  1398 ;;  counter         1   29[COMRAM] unsigned char 
  1399 ;; Return value:  Size  Location     Type
  1400 ;;                  2   23[COMRAM] unsigned int 
  1401 ;; Registers used:
  1402 ;;		wreg, status,2, status,0
  1403 ;; Tracked objects:
  1404 ;;		On entry : 0/0
  1405 ;;		On exit  : 0/0
  1406 ;;		Unchanged: 0/0
  1407 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1408 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1409 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1410 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1411 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1412 ;;Total ram usage:        7 bytes
  1413 ;; Hardware stack levels used: 1
  1414 ;; Hardware stack levels required when called: 3
  1415 ;; This function calls:
  1416 ;;		Nothing
  1417 ;; This function is called by:
  1418 ;;		_convierte
  1419 ;; This function uses a non-reentrant model
  1420 ;;
  1421                           
  1422                           	psect	text11
  1423   0028E8                     __ptext11:
  1424                           	callstack 0
  1425   0028E8                     ___lwdiv:
  1426                           	callstack 122
  1427   0028E8  0E00               	movlw	0
  1428   0028EA  6E1D               	movwf	(___lwdiv@quotient+1)^(0+1280),c
  1429   0028EC  0E00               	movlw	0
  1430   0028EE  6E1C               	movwf	___lwdiv@quotient^(0+1280),c
  1431   0028F0  501A               	movf	___lwdiv@divisor^(0+1280),w,c
  1432   0028F2  101B               	iorwf	(___lwdiv@divisor+1)^(0+1280),w,c
  1433   0028F4  B4D8               	btfsc	status,2,c
  1434   0028F6  EF7F  F014         	goto	u421
  1435   0028FA  EF81  F014         	goto	u420
  1436   0028FE                     u421:
  1437   0028FE  EFA9  F014         	goto	l722
  1438   002902                     u420:
  1439   002902  0E01               	movlw	1
  1440   002904  6E1E               	movwf	___lwdiv@counter^(0+1280),c
  1441   002906  EF89  F014         	goto	l1398
  1442   00290A                     l1396:
  1443   00290A  90D8               	bcf	status,0,c
  1444   00290C  361A               	rlcf	___lwdiv@divisor^(0+1280),f,c
  1445   00290E  361B               	rlcf	(___lwdiv@divisor+1)^(0+1280),f,c
  1446   002910  2A1E               	incf	___lwdiv@counter^(0+1280),f,c
  1447   002912                     l1398:
  1448   002912  AE1B               	btfss	(___lwdiv@divisor+1)^(0+1280),7,c
  1449   002914  EF8E  F014         	goto	u431
  1450   002918  EF90  F014         	goto	u430
  1451   00291C                     u431:
  1452   00291C  EF85  F014         	goto	l1396
  1453   002920                     u430:
  1454   002920                     l1400:
  1455   002920  90D8               	bcf	status,0,c
  1456   002922  361C               	rlcf	___lwdiv@quotient^(0+1280),f,c
  1457   002924  361D               	rlcf	(___lwdiv@quotient+1)^(0+1280),f,c
  1458   002926  501A               	movf	___lwdiv@divisor^(0+1280),w,c
  1459   002928  5C18               	subwf	___lwdiv@dividend^(0+1280),w,c
  1460   00292A  501B               	movf	(___lwdiv@divisor+1)^(0+1280),w,c
  1461   00292C  5819               	subwfb	(___lwdiv@dividend+1)^(0+1280),w,c
  1462   00292E  A0D8               	btfss	status,0,c
  1463   002930  EF9C  F014         	goto	u441
  1464   002934  EF9E  F014         	goto	u440
  1465   002938                     u441:
  1466   002938  EFA3  F014         	goto	l1408
  1467   00293C                     u440:
  1468   00293C  501A               	movf	___lwdiv@divisor^(0+1280),w,c
  1469   00293E  5E18               	subwf	___lwdiv@dividend^(0+1280),f,c
  1470   002940  501B               	movf	(___lwdiv@divisor+1)^(0+1280),w,c
  1471   002942  5A19               	subwfb	(___lwdiv@dividend+1)^(0+1280),f,c
  1472   002944  801C               	bsf	___lwdiv@quotient^(0+1280),0,c
  1473   002946                     l1408:
  1474   002946  90D8               	bcf	status,0,c
  1475   002948  321B               	rrcf	(___lwdiv@divisor+1)^(0+1280),f,c
  1476   00294A  321A               	rrcf	___lwdiv@divisor^(0+1280),f,c
  1477   00294C  2E1E               	decfsz	___lwdiv@counter^(0+1280),f,c
  1478   00294E  EF90  F014         	goto	l1400
  1479   002952                     l722:
  1480   002952  C51C  F518         	movff	___lwdiv@quotient,?___lwdiv
  1481   002956  C51D  F519         	movff	___lwdiv@quotient+1,?___lwdiv+1
  1482   00295A  0012               	return		;funcret
  1483   00295C                     __end_of___lwdiv:
  1484                           	callstack 0
  1485                           
  1486 ;; *************** function _configuro *****************
  1487 ;; Defined at:
  1488 ;;		line 9 in file "maincode1.c"
  1489 ;; Parameters:    Size  Location     Type
  1490 ;;		None
  1491 ;; Auto vars:     Size  Location     Type
  1492 ;;		None
  1493 ;; Return value:  Size  Location     Type
  1494 ;;                  1    wreg      void 
  1495 ;; Registers used:
  1496 ;;		wreg, status,2, status,0, cstack
  1497 ;; Tracked objects:
  1498 ;;		On entry : 0/0
  1499 ;;		On exit  : 0/0
  1500 ;;		Unchanged: 0/0
  1501 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1502 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1503 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1504 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1505 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1506 ;;Total ram usage:        0 bytes
  1507 ;; Hardware stack levels used: 1
  1508 ;; Hardware stack levels required when called: 7
  1509 ;; This function calls:
  1510 ;;		_LCD_INIT
  1511 ;; This function is called by:
  1512 ;;		_main
  1513 ;; This function uses a non-reentrant model
  1514 ;;
  1515                           
  1516                           	psect	text12
  1517   002A42                     __ptext12:
  1518                           	callstack 0
  1519   002A42                     _configuro:
  1520                           	callstack 119
  1521   002A42                     
  1522                           ;maincode1.c: 10:     OSCCON1 = 0x60;
  1523   002A42  0E60               	movlw	96
  1524   002A44  0100               	movlb	0	; () banked
  1525   002A46  6FAD               	movwf	173,b	;volatile
  1526                           
  1527                           ;maincode1.c: 11:     OSCFRQ = 0x02;
  1528   002A48  0E02               	movlw	2
  1529   002A4A  6FB1               	movwf	177,b	;volatile
  1530                           
  1531                           ;maincode1.c: 12:     OSCEN = 0x40;
  1532   002A4C  0E40               	movlw	64
  1533   002A4E  6FB3               	movwf	179,b	;volatile
  1534   002A50                     
  1535                           ; BSR set to: 0
  1536                           ;maincode1.c: 13:     TRISA = 0xFF;
  1537   002A50  68C6               	setf	198,c	;volatile
  1538   002A52                     
  1539                           ; BSR set to: 0
  1540                           ;maincode1.c: 14:     ANSELA = 0xFF;
  1541   002A52  0104               	movlb	4	; () banked
  1542   002A54  6900               	setf	0,b	;volatile
  1543   002A56                     
  1544                           ; BSR set to: 4
  1545                           ;maincode1.c: 15:     TRISB = 0xFF;
  1546   002A56  68C7               	setf	199,c	;volatile
  1547                           
  1548                           ;maincode1.c: 16:     ANSELB = 0xEE;
  1549   002A58  0EEE               	movlw	238
  1550   002A5A  6F08               	movwf	8,b	;volatile
  1551   002A5C                     
  1552                           ; BSR set to: 4
  1553                           ;maincode1.c: 17:     WPUBbits.WPUB4 = 1;
  1554   002A5C  8909               	bsf	9,4,b	;volatile
  1555   002A5E                     
  1556                           ; BSR set to: 4
  1557                           ;maincode1.c: 18:     INTCON0bits.GIE = 1;
  1558   002A5E  8ED6               	bsf	214,7,c	;volatile
  1559   002A60                     
  1560                           ; BSR set to: 4
  1561                           ;maincode1.c: 19:     INTCON0bits.INT0EDG = 0;
  1562   002A60  90D6               	bcf	214,0,c	;volatile
  1563   002A62                     
  1564                           ; BSR set to: 4
  1565                           ;maincode1.c: 20:     PIE1bits.INT0IE = 1;
  1566   002A62  809F               	bsf	159,0,c	;volatile
  1567                           
  1568                           ;maincode1.c: 21:     INT0PPS = 0x0C;
  1569   002A64  0E0C               	movlw	12
  1570   002A66  0102               	movlb	2	; () banked
  1571   002A68  6F3E               	movwf	62,b	;volatile
  1572                           
  1573                           ;maincode1.c: 22:     TRISD = 0x00;
  1574   002A6A  0E00               	movlw	0
  1575   002A6C  6EC9               	movwf	201,c	;volatile
  1576                           
  1577                           ;maincode1.c: 23:     ANSELD = 0x00;
  1578   002A6E  0E00               	movlw	0
  1579   002A70  0104               	movlb	4	; () banked
  1580   002A72  6F18               	movwf	24,b	;volatile
  1581                           
  1582                           ;maincode1.c: 24:     TRISE = 0xFC;
  1583   002A74  0EFC               	movlw	252
  1584   002A76  6ECA               	movwf	202,c	;volatile
  1585                           
  1586                           ;maincode1.c: 25:     ANSELE = 0xFC;
  1587   002A78  0EFC               	movlw	252
  1588   002A7A  6F20               	movwf	32,b	;volatile
  1589                           
  1590                           ;maincode1.c: 26:     ADCON0bits.FM = 1;
  1591   002A7C  0103               	movlb	3	; () banked
  1592   002A7E  51F3               	movf	243,w,b	;volatile
  1593   002A80  0BF3               	andlw	-13
  1594   002A82  0904               	iorlw	4
  1595   002A84  6FF3               	movwf	243,b	;volatile
  1596   002A86                     
  1597                           ; BSR set to: 3
  1598                           ;maincode1.c: 27:     ADCON0bits.CS = 1;
  1599   002A86  89F3               	bsf	243,4,b	;volatile
  1600   002A88                     
  1601                           ; BSR set to: 3
  1602                           ;maincode1.c: 28:     ADCON0bits.ADON = 1;
  1603   002A88  8FF3               	bsf	243,7,b	;volatile
  1604   002A8A                     
  1605                           ; BSR set to: 3
  1606                           ;maincode1.c: 29:     TRISFbits.TRISF0 = 0;
  1607   002A8A  90CB               	bcf	203,0,c	;volatile
  1608   002A8C                     
  1609                           ; BSR set to: 3
  1610                           ;maincode1.c: 30:     ANSELFbits.ANSELF0 = 0;
  1611   002A8C  0104               	movlb	4	; () banked
  1612   002A8E  9128               	bcf	40,0,b	;volatile
  1613                           
  1614                           ;maincode1.c: 31:     U1BRGH = 00;
  1615   002A90  0E00               	movlw	0
  1616   002A92  0102               	movlb	2	; () banked
  1617   002A94  6FAF               	movwf	175,b	;volatile
  1618                           
  1619                           ;maincode1.c: 32:     U1BRGL = 25;
  1620   002A96  0E19               	movlw	25
  1621   002A98  6FAE               	movwf	174,b	;volatile
  1622                           
  1623                           ;maincode1.c: 33:     U1CON0 = 0x30;
  1624   002A9A  0E30               	movlw	48
  1625   002A9C  6FAB               	movwf	171,b	;volatile
  1626                           
  1627                           ;maincode1.c: 34:     RF0PPS = 0x20;
  1628   002A9E  0E20               	movlw	32
  1629   002AA0  6F29               	movwf	41,b	;volatile
  1630                           
  1631                           ;maincode1.c: 35:     U1CON2 = 0x00;
  1632   002AA2  0E00               	movlw	0
  1633   002AA4  6FAD               	movwf	173,b	;volatile
  1634                           
  1635                           ;maincode1.c: 36:     U1CON1 = 0x80;
  1636   002AA6  0E80               	movlw	128
  1637   002AA8  6FAC               	movwf	172,b	;volatile
  1638   002AAA                     
  1639                           ; BSR set to: 2
  1640                           ;maincode1.c: 37:     LCD_INIT();
  1641   002AAA  EC08  F017         	call	_LCD_INIT	;wreg free
  1642   002AAE  0012               	return		;funcret
  1643   002AB0                     __end_of_configuro:
  1644                           	callstack 0
  1645                           
  1646 ;; *************** function _LCD_INIT *****************
  1647 ;; Defined at:
  1648 ;;		line 184 in file "LCD.c"
  1649 ;; Parameters:    Size  Location     Type
  1650 ;;		None
  1651 ;; Auto vars:     Size  Location     Type
  1652 ;;		None
  1653 ;; Return value:  Size  Location     Type
  1654 ;;                  1    wreg      void 
  1655 ;; Registers used:
  1656 ;;		wreg, status,2, status,0, cstack
  1657 ;; Tracked objects:
  1658 ;;		On entry : 0/0
  1659 ;;		On exit  : 0/0
  1660 ;;		Unchanged: 0/0
  1661 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1662 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1663 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1664 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1665 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1666 ;;Total ram usage:        1 bytes
  1667 ;; Hardware stack levels used: 1
  1668 ;; Hardware stack levels required when called: 6
  1669 ;; This function calls:
  1670 ;;		_BORRAR_LCD
  1671 ;;		_CURSOR_HOME
  1672 ;;		_CURSOR_ONOFF
  1673 ;;		_LCD_CONFIG
  1674 ;; This function is called by:
  1675 ;;		_configuro
  1676 ;; This function uses a non-reentrant model
  1677 ;;
  1678                           
  1679                           	psect	text13
  1680   002E10                     __ptext13:
  1681                           	callstack 0
  1682   002E10                     _LCD_INIT:
  1683                           	callstack 119
  1684   002E10                     
  1685                           ;LCD.c: 185:     _delay((unsigned long)((15)*(4000000UL/4000.0)));
  1686   002E10  0E14               	movlw	20
  1687   002E12  6E17               	movwf	??_LCD_INIT^(0+1280),c
  1688   002E14  0E7A               	movlw	122
  1689   002E16                     u607:
  1690   002E16  2EE8               	decfsz	wreg,f,c
  1691   002E18  D7FE               	bra	u607
  1692   002E1A  2E17               	decfsz	??_LCD_INIT^(0+1280),f,c
  1693   002E1C  D7FC               	bra	u607
  1694   002E1E                     
  1695                           ;LCD.c: 186:     LCD_CONFIG();
  1696   002E1E  ECE5  F015         	call	_LCD_CONFIG	;wreg free
  1697   002E22                     
  1698                           ;LCD.c: 187:     _delay((unsigned long)((15)*(4000000UL/4000.0)));
  1699   002E22  0E14               	movlw	20
  1700   002E24  6E17               	movwf	??_LCD_INIT^(0+1280),c
  1701   002E26  0E7A               	movlw	122
  1702   002E28                     u617:
  1703   002E28  2EE8               	decfsz	wreg,f,c
  1704   002E2A  D7FE               	bra	u617
  1705   002E2C  2E17               	decfsz	??_LCD_INIT^(0+1280),f,c
  1706   002E2E  D7FC               	bra	u617
  1707                           
  1708                           ;LCD.c: 188:     BORRAR_LCD();
  1709   002E30  ECC9  F017         	call	_BORRAR_LCD	;wreg free
  1710                           
  1711                           ;LCD.c: 189:     CURSOR_HOME();
  1712   002E34  ECC5  F017         	call	_CURSOR_HOME	;wreg free
  1713                           
  1714                           ;LCD.c: 190:     CURSOR_ONOFF(1);
  1715   002E38  0E01               	movlw	1
  1716   002E3A  EC20  F017         	call	_CURSOR_ONOFF
  1717   002E3E  0012               	return		;funcret
  1718   002E40                     __end_of_LCD_INIT:
  1719                           	callstack 0
  1720                           
  1721 ;; *************** function _LCD_CONFIG *****************
  1722 ;; Defined at:
  1723 ;;		line 101 in file "LCD.c"
  1724 ;; Parameters:    Size  Location     Type
  1725 ;;		None
  1726 ;; Auto vars:     Size  Location     Type
  1727 ;;		None
  1728 ;; Return value:  Size  Location     Type
  1729 ;;                  1    wreg      void 
  1730 ;; Registers used:
  1731 ;;		wreg, status,2, status,0, cstack
  1732 ;; Tracked objects:
  1733 ;;		On entry : 0/0
  1734 ;;		On exit  : 0/0
  1735 ;;		Unchanged: 0/0
  1736 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1737 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1738 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1739 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1740 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1741 ;;Total ram usage:        1 bytes
  1742 ;; Hardware stack levels used: 1
  1743 ;; Hardware stack levels required when called: 5
  1744 ;; This function calls:
  1745 ;;		_ENVIA_LCD_CMD
  1746 ;;		_ENVIA_NIBBLE
  1747 ;; This function is called by:
  1748 ;;		_LCD_INIT
  1749 ;; This function uses a non-reentrant model
  1750 ;;
  1751                           
  1752                           	psect	text14
  1753   002BCA                     __ptext14:
  1754                           	callstack 0
  1755   002BCA                     _LCD_CONFIG:
  1756                           	callstack 119
  1757   002BCA                     
  1758                           ;LCD.c: 103:  LATDbits.LATD0 = 0;
  1759   002BCA  90C1               	bcf	193,0,c	;volatile
  1760                           
  1761                           ;LCD.c: 104:  LATDbits.LATD1 = 0;
  1762   002BCC  92C1               	bcf	193,1,c	;volatile
  1763   002BCE                     
  1764                           ;LCD.c: 105:  ENVIA_NIBBLE(0x30);
  1765   002BCE  0E30               	movlw	48
  1766   002BD0  EC9F  F017         	call	_ENVIA_NIBBLE
  1767   002BD4                     
  1768                           ;LCD.c: 106:     _delay((unsigned long)((2)*(4000000UL/4000.0)));
  1769   002BD4  0E03               	movlw	3
  1770   002BD6  6E16               	movwf	??_LCD_CONFIG^(0+1280),c
  1771   002BD8  0E98               	movlw	152
  1772   002BDA                     u627:
  1773   002BDA  2EE8               	decfsz	wreg,f,c
  1774   002BDC  D7FE               	bra	u627
  1775   002BDE  2E16               	decfsz	??_LCD_CONFIG^(0+1280),f,c
  1776   002BE0  D7FC               	bra	u627
  1777   002BE2                     
  1778                           ;LCD.c: 107:  ENVIA_NIBBLE(0x30);
  1779   002BE2  0E30               	movlw	48
  1780   002BE4  EC9F  F017         	call	_ENVIA_NIBBLE
  1781                           
  1782                           ;LCD.c: 108:     _delay((unsigned long)((100)*(4000000UL/4000000.0)));
  1783   002BE8  0E21               	movlw	33
  1784   002BEA                     u637:
  1785   002BEA  2EE8               	decfsz	wreg,f,c
  1786   002BEC  D7FE               	bra	u637
  1787   002BEE  F000               	nop	
  1788   002BF0                     
  1789                           ;LCD.c: 109:     ENVIA_NIBBLE(0x30);
  1790   002BF0  0E30               	movlw	48
  1791   002BF2  EC9F  F017         	call	_ENVIA_NIBBLE
  1792   002BF6                     
  1793                           ;LCD.c: 110:  ENVIA_NIBBLE(0x20);
  1794   002BF6  0E20               	movlw	32
  1795   002BF8  EC9F  F017         	call	_ENVIA_NIBBLE
  1796   002BFC                     
  1797                           ;LCD.c: 111:  ENVIA_LCD_CMD(0x01);
  1798   002BFC  0E01               	movlw	1
  1799   002BFE  ECEE  F016         	call	_ENVIA_LCD_CMD
  1800   002C02                     
  1801                           ;LCD.c: 112:  ENVIA_LCD_CMD(0x28);
  1802   002C02  0E28               	movlw	40
  1803   002C04  ECEE  F016         	call	_ENVIA_LCD_CMD
  1804   002C08                     
  1805                           ;LCD.c: 113:  ENVIA_LCD_CMD(0x0F);
  1806   002C08  0E0F               	movlw	15
  1807   002C0A  ECEE  F016         	call	_ENVIA_LCD_CMD
  1808   002C0E                     
  1809                           ;LCD.c: 114:  ENVIA_LCD_CMD(0x06);
  1810   002C0E  0E06               	movlw	6
  1811   002C10  ECEE  F016         	call	_ENVIA_LCD_CMD
  1812   002C14                     
  1813                           ;LCD.c: 115:  ENVIA_LCD_CMD(0x01);
  1814   002C14  0E01               	movlw	1
  1815   002C16  ECEE  F016         	call	_ENVIA_LCD_CMD
  1816   002C1A  0012               	return		;funcret
  1817   002C1C                     __end_of_LCD_CONFIG:
  1818                           	callstack 0
  1819                           
  1820 ;; *************** function _CURSOR_ONOFF *****************
  1821 ;; Defined at:
  1822 ;;		line 54 in file "LCD.c"
  1823 ;; Parameters:    Size  Location     Type
  1824 ;;  estado          1    wreg     unsigned char 
  1825 ;; Auto vars:     Size  Location     Type
  1826 ;;  estado          1   21[COMRAM] unsigned char 
  1827 ;; Return value:  Size  Location     Type
  1828 ;;                  1    wreg      void 
  1829 ;; Registers used:
  1830 ;;		wreg, status,2, status,0, cstack
  1831 ;; Tracked objects:
  1832 ;;		On entry : 0/0
  1833 ;;		On exit  : 0/0
  1834 ;;		Unchanged: 0/0
  1835 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1836 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1837 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1838 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1839 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1840 ;;Total ram usage:        1 bytes
  1841 ;; Hardware stack levels used: 1
  1842 ;; Hardware stack levels required when called: 5
  1843 ;; This function calls:
  1844 ;;		_ENVIA_LCD_CMD
  1845 ;; This function is called by:
  1846 ;;		_LCD_INIT
  1847 ;; This function uses a non-reentrant model
  1848 ;;
  1849                           
  1850                           	psect	text15
  1851   002E40                     __ptext15:
  1852                           	callstack 0
  1853   002E40                     _CURSOR_ONOFF:
  1854                           	callstack 119
  1855                           
  1856                           ;incstack = 0
  1857                           ;CURSOR_ONOFF@estado stored from wreg
  1858   002E40  6E16               	movwf	CURSOR_ONOFF@estado^(0+1280),c
  1859   002E42                     
  1860                           ;LCD.c: 54: void CURSOR_ONOFF(unsigned char estado);LCD.c: 55: {;LCD.c: 56:  if(estado =
      +                          = 0) ENVIA_LCD_CMD(0x0E);
  1861   002E42  5016               	movf	CURSOR_ONOFF@estado^(0+1280),w,c
  1862   002E44  A4D8               	btfss	status,2,c
  1863   002E46  EF27  F017         	goto	u41
  1864   002E4A  EF29  F017         	goto	u40
  1865   002E4E                     u41:
  1866   002E4E  EF2C  F017         	goto	l1020
  1867   002E52                     u40:
  1868   002E52  0E0E               	movlw	14
  1869   002E54  ECEE  F016         	call	_ENVIA_LCD_CMD
  1870   002E58                     l1020:
  1871                           
  1872                           ;LCD.c: 57:  if(estado == 1) ENVIA_LCD_CMD(0x0C);
  1873   002E58  0416               	decf	CURSOR_ONOFF@estado^(0+1280),w,c
  1874   002E5A  A4D8               	btfss	status,2,c
  1875   002E5C  EF32  F017         	goto	u51
  1876   002E60  EF34  F017         	goto	u50
  1877   002E64                     u51:
  1878   002E64  EF37  F017         	goto	l187
  1879   002E68                     u50:
  1880   002E68  0E0C               	movlw	12
  1881   002E6A  ECEE  F016         	call	_ENVIA_LCD_CMD
  1882   002E6E                     l187:
  1883   002E6E  0012               	return		;funcret
  1884   002E70                     __end_of_CURSOR_ONOFF:
  1885                           	callstack 0
  1886                           
  1887 ;; *************** function _CURSOR_HOME *****************
  1888 ;; Defined at:
  1889 ;;		line 29 in file "LCD.c"
  1890 ;; Parameters:    Size  Location     Type
  1891 ;;		None
  1892 ;; Auto vars:     Size  Location     Type
  1893 ;;		None
  1894 ;; Return value:  Size  Location     Type
  1895 ;;                  1    wreg      void 
  1896 ;; Registers used:
  1897 ;;		wreg, status,2, status,0, cstack
  1898 ;; Tracked objects:
  1899 ;;		On entry : 0/0
  1900 ;;		On exit  : 0/0
  1901 ;;		Unchanged: 0/0
  1902 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1903 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1904 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1905 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1906 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1907 ;;Total ram usage:        0 bytes
  1908 ;; Hardware stack levels used: 1
  1909 ;; Hardware stack levels required when called: 5
  1910 ;; This function calls:
  1911 ;;		_ENVIA_LCD_CMD
  1912 ;; This function is called by:
  1913 ;;		_LCD_INIT
  1914 ;; This function uses a non-reentrant model
  1915 ;;
  1916                           
  1917                           	psect	text16
  1918   002F8A                     __ptext16:
  1919                           	callstack 0
  1920   002F8A                     _CURSOR_HOME:
  1921                           	callstack 119
  1922   002F8A                     
  1923                           ;LCD.c: 31:  ENVIA_LCD_CMD(0x02);
  1924   002F8A  0E02               	movlw	2
  1925   002F8C  ECEE  F016         	call	_ENVIA_LCD_CMD
  1926   002F90  0012               	return		;funcret
  1927   002F92                     __end_of_CURSOR_HOME:
  1928                           	callstack 0
  1929                           
  1930 ;; *************** function _BORRAR_LCD *****************
  1931 ;; Defined at:
  1932 ;;		line 96 in file "LCD.c"
  1933 ;; Parameters:    Size  Location     Type
  1934 ;;		None
  1935 ;; Auto vars:     Size  Location     Type
  1936 ;;		None
  1937 ;; Return value:  Size  Location     Type
  1938 ;;                  1    wreg      void 
  1939 ;; Registers used:
  1940 ;;		wreg, status,2, status,0, cstack
  1941 ;; Tracked objects:
  1942 ;;		On entry : 0/0
  1943 ;;		On exit  : 0/0
  1944 ;;		Unchanged: 0/0
  1945 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1946 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1947 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1948 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1949 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1950 ;;Total ram usage:        0 bytes
  1951 ;; Hardware stack levels used: 1
  1952 ;; Hardware stack levels required when called: 5
  1953 ;; This function calls:
  1954 ;;		_ENVIA_LCD_CMD
  1955 ;; This function is called by:
  1956 ;;		_pantallazo
  1957 ;;		_LCD_INIT
  1958 ;; This function uses a non-reentrant model
  1959 ;;
  1960                           
  1961                           	psect	text17
  1962   002F92                     __ptext17:
  1963                           	callstack 0
  1964   002F92                     _BORRAR_LCD:
  1965                           	callstack 120
  1966   002F92                     
  1967                           ;LCD.c: 98:  ENVIA_LCD_CMD(0x01);
  1968   002F92  0E01               	movlw	1
  1969   002F94  ECEE  F016         	call	_ENVIA_LCD_CMD
  1970   002F98  0012               	return		;funcret
  1971   002F9A                     __end_of_BORRAR_LCD:
  1972                           	callstack 0
  1973                           
  1974 ;; *************** function _ENVIA_LCD_CMD *****************
  1975 ;; Defined at:
  1976 ;;		line 128 in file "LCD.c"
  1977 ;; Parameters:    Size  Location     Type
  1978 ;;  dato            1    wreg     unsigned char 
  1979 ;; Auto vars:     Size  Location     Type
  1980 ;;  dato            1   19[COMRAM] unsigned char 
  1981 ;;  aux             1   20[COMRAM] unsigned char 
  1982 ;; Return value:  Size  Location     Type
  1983 ;;                  1    wreg      void 
  1984 ;; Registers used:
  1985 ;;		wreg, status,2, status,0, cstack
  1986 ;; Tracked objects:
  1987 ;;		On entry : 0/0
  1988 ;;		On exit  : 0/0
  1989 ;;		Unchanged: 0/0
  1990 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1991 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1992 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1993 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1994 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1995 ;;Total ram usage:        2 bytes
  1996 ;; Hardware stack levels used: 1
  1997 ;; Hardware stack levels required when called: 4
  1998 ;; This function calls:
  1999 ;;		_ENVIA_NIBBLE
  2000 ;;		_LEER_LCD
  2001 ;; This function is called by:
  2002 ;;		_POS_CURSOR
  2003 ;;		_CURSOR_HOME
  2004 ;;		_CURSOR_ONOFF
  2005 ;;		_BORRAR_LCD
  2006 ;;		_LCD_CONFIG
  2007 ;;		_BLINK_CURSOR
  2008 ;;		_DISPLAY_ONOFF
  2009 ;;		_CURSOR_SHIFTLEFT
  2010 ;;		_CURSOR_SHIFTRIGHT
  2011 ;;		_DISPLAY_SHIFTLEFT
  2012 ;;		_DISPLAY_SHIFTRIGHT
  2013 ;;		_GENERACARACTER
  2014 ;; This function uses a non-reentrant model
  2015 ;;
  2016                           
  2017                           	psect	text18
  2018   002DDC                     __ptext18:
  2019                           	callstack 0
  2020   002DDC                     _ENVIA_LCD_CMD:
  2021                           	callstack 120
  2022                           
  2023                           ;incstack = 0
  2024                           ;ENVIA_LCD_CMD@dato stored from wreg
  2025   002DDC  6E14               	movwf	ENVIA_LCD_CMD@dato^(0+1280),c
  2026   002DDE                     
  2027                           ;LCD.c: 128: void ENVIA_LCD_CMD(unsigned char dato);LCD.c: 129: {;LCD.c: 130:  unsigned 
      +                          char aux;;LCD.c: 131:  LATDbits.LATD0 = 0;
  2028   002DDE  90C1               	bcf	193,0,c	;volatile
  2029   002DE0                     
  2030                           ;LCD.c: 132:  LEER_LCD();
  2031   002DE0  ECE8  F014         	call	_LEER_LCD	;wreg free
  2032   002DE4                     
  2033                           ;LCD.c: 133:  TRISD = 0b00000000;
  2034   002DE4  0E00               	movlw	0
  2035   002DE6  6EC9               	movwf	201,c	;volatile
  2036   002DE8                     
  2037                           ;LCD.c: 134:     _delay((unsigned long)((100)*(4000000UL/4000000.0)));
  2038   002DE8  0E21               	movlw	33
  2039   002DEA                     u647:
  2040   002DEA  2EE8               	decfsz	wreg,f,c
  2041   002DEC  D7FE               	bra	u647
  2042   002DEE  F000               	nop	
  2043   002DF0                     
  2044                           ;LCD.c: 135:     LATDbits.LATD1 = 0;
  2045   002DF0  92C1               	bcf	193,1,c	;volatile
  2046   002DF2                     
  2047                           ;LCD.c: 136:  LATDbits.LATD2 = 0;
  2048   002DF2  94C1               	bcf	193,2,c	;volatile
  2049   002DF4                     
  2050                           ;LCD.c: 137:  LATDbits.LATD0 = 0;
  2051   002DF4  90C1               	bcf	193,0,c	;volatile
  2052   002DF6                     
  2053                           ;LCD.c: 138:  aux = dato & 0xF0;
  2054   002DF6  5014               	movf	ENVIA_LCD_CMD@dato^(0+1280),w,c
  2055   002DF8  0BF0               	andlw	240
  2056   002DFA  6E15               	movwf	ENVIA_LCD_CMD@aux^(0+1280),c
  2057   002DFC                     
  2058                           ;LCD.c: 139:  ENVIA_NIBBLE(aux);
  2059   002DFC  5015               	movf	ENVIA_LCD_CMD@aux^(0+1280),w,c
  2060   002DFE  EC9F  F017         	call	_ENVIA_NIBBLE
  2061   002E02                     
  2062                           ;LCD.c: 140:  aux = dato<<4;
  2063   002E02  3814               	swapf	ENVIA_LCD_CMD@dato^(0+1280),w,c
  2064   002E04  0BF0               	andlw	240
  2065   002E06  6E15               	movwf	ENVIA_LCD_CMD@aux^(0+1280),c
  2066   002E08                     
  2067                           ;LCD.c: 141:  ENVIA_NIBBLE(aux);
  2068   002E08  5015               	movf	ENVIA_LCD_CMD@aux^(0+1280),w,c
  2069   002E0A  EC9F  F017         	call	_ENVIA_NIBBLE
  2070   002E0E  0012               	return		;funcret
  2071   002E10                     __end_of_ENVIA_LCD_CMD:
  2072                           	callstack 0
  2073                           
  2074 ;; *************** function _LEER_LCD *****************
  2075 ;; Defined at:
  2076 ;;		line 144 in file "LCD.c"
  2077 ;; Parameters:    Size  Location     Type
  2078 ;;		None
  2079 ;; Auto vars:     Size  Location     Type
  2080 ;;  aux             1   18[COMRAM] unsigned char 
  2081 ;; Return value:  Size  Location     Type
  2082 ;;                  1    wreg      void 
  2083 ;; Registers used:
  2084 ;;		wreg, status,2, status,0
  2085 ;; Tracked objects:
  2086 ;;		On entry : 0/0
  2087 ;;		On exit  : 0/0
  2088 ;;		Unchanged: 0/0
  2089 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2090 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2091 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2092 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2093 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2094 ;;Total ram usage:        1 bytes
  2095 ;; Hardware stack levels used: 1
  2096 ;; Hardware stack levels required when called: 3
  2097 ;; This function calls:
  2098 ;;		Nothing
  2099 ;; This function is called by:
  2100 ;;		_ENVIA_CHAR
  2101 ;;		_ENVIA_LCD_CMD
  2102 ;; This function uses a non-reentrant model
  2103 ;;
  2104                           
  2105                           	psect	text19
  2106   0029D0                     __ptext19:
  2107                           	callstack 0
  2108   0029D0                     _LEER_LCD:
  2109                           	callstack 120
  2110   0029D0                     
  2111                           ;LCD.c: 146:  unsigned char aux;;LCD.c: 147:  TRISD = 0xF8;
  2112   0029D0  0EF8               	movlw	248
  2113   0029D2  6EC9               	movwf	201,c	;volatile
  2114   0029D4                     
  2115                           ;LCD.c: 148:  LATDbits.LATD0 = 0;
  2116   0029D4  90C1               	bcf	193,0,c	;volatile
  2117   0029D6                     
  2118                           ;LCD.c: 149:  LATDbits.LATD1 = 1;
  2119   0029D6  82C1               	bsf	193,1,c	;volatile
  2120   0029D8                     
  2121                           ;LCD.c: 150:  LATDbits.LATD2 = 1;
  2122   0029D8  84C1               	bsf	193,2,c	;volatile
  2123   0029DA                     
  2124                           ;LCD.c: 151:     _delay((unsigned long)((100)*(4000000UL/4000000.0)));
  2125   0029DA  0E21               	movlw	33
  2126   0029DC                     u657:
  2127   0029DC  2EE8               	decfsz	wreg,f,c
  2128   0029DE  D7FE               	bra	u657
  2129   0029E0  F000               	nop	
  2130   0029E2                     
  2131                           ;LCD.c: 152:  aux = PORTD;
  2132   0029E2  C4D1 F513          	movff	1233,LEER_LCD@aux	;volatile
  2133   0029E6                     
  2134                           ;LCD.c: 153:  LATDbits.LATD2 = 0;
  2135   0029E6  94C1               	bcf	193,2,c	;volatile
  2136   0029E8                     
  2137                           ;LCD.c: 154:     _delay((unsigned long)((100)*(4000000UL/4000000.0)));
  2138   0029E8  0E21               	movlw	33
  2139   0029EA                     u667:
  2140   0029EA  2EE8               	decfsz	wreg,f,c
  2141   0029EC  D7FE               	bra	u667
  2142   0029EE  F000               	nop	
  2143   0029F0                     
  2144                           ;LCD.c: 155:  LATDbits.LATD2 = 1;
  2145   0029F0  84C1               	bsf	193,2,c	;volatile
  2146   0029F2                     
  2147                           ;LCD.c: 156:     _delay((unsigned long)((100)*(4000000UL/4000000.0)));
  2148   0029F2  0E21               	movlw	33
  2149   0029F4                     u677:
  2150   0029F4  2EE8               	decfsz	wreg,f,c
  2151   0029F6  D7FE               	bra	u677
  2152   0029F8  F000               	nop	
  2153   0029FA                     
  2154                           ;LCD.c: 157:  LATDbits.LATD2 = 0;
  2155   0029FA  94C1               	bcf	193,2,c	;volatile
  2156   0029FC                     l932:
  2157                           
  2158                           ;LCD.c: 158:  aux = aux & 0x80;
  2159   0029FC  5013               	movf	LEER_LCD@aux^(0+1280),w,c
  2160   0029FE  0B80               	andlw	128
  2161   002A00  6E13               	movwf	LEER_LCD@aux^(0+1280),c
  2162                           
  2163                           ;LCD.c: 159:  while(aux == 0x80)
  2164   002A02  EF17  F015         	goto	l946
  2165   002A06                     l218:
  2166                           
  2167                           ;LCD.c: 160:         {;LCD.c: 161:             LATDbits.LATD2 = 1;
  2168   002A06  84C1               	bsf	193,2,c	;volatile
  2169   002A08                     
  2170                           ;LCD.c: 162:             _delay((unsigned long)((100)*(4000000UL/4000000.0)));
  2171   002A08  0E21               	movlw	33
  2172   002A0A                     u687:
  2173   002A0A  2EE8               	decfsz	wreg,f,c
  2174   002A0C  D7FE               	bra	u687
  2175   002A0E  F000               	nop	
  2176   002A10                     
  2177                           ;LCD.c: 163:             aux = PORTD;
  2178   002A10  C4D1 F513          	movff	1233,LEER_LCD@aux	;volatile
  2179   002A14                     
  2180                           ;LCD.c: 164:             LATDbits.LATD2 = 0;
  2181   002A14  94C1               	bcf	193,2,c	;volatile
  2182                           
  2183                           ;LCD.c: 165:             _delay((unsigned long)((100)*(4000000UL/4000000.0)));
  2184   002A16  0E21               	movlw	33
  2185   002A18                     u697:
  2186   002A18  2EE8               	decfsz	wreg,f,c
  2187   002A1A  D7FE               	bra	u697
  2188   002A1C  F000               	nop	
  2189   002A1E                     
  2190                           ;LCD.c: 166:             LATDbits.LATD2 = 1;
  2191   002A1E  84C1               	bsf	193,2,c	;volatile
  2192                           
  2193                           ;LCD.c: 167:             _delay((unsigned long)((100)*(4000000UL/4000000.0)));
  2194   002A20  0E21               	movlw	33
  2195   002A22                     u707:
  2196   002A22  2EE8               	decfsz	wreg,f,c
  2197   002A24  D7FE               	bra	u707
  2198   002A26  F000               	nop	
  2199   002A28                     
  2200                           ;LCD.c: 168:             LATDbits.LATD2 = 0;
  2201   002A28  94C1               	bcf	193,2,c	;volatile
  2202   002A2A  EFFE  F014         	goto	l932
  2203   002A2E                     l946:
  2204                           
  2205                           ;LCD.c: 159:  while(aux == 0x80)
  2206   002A2E  0E80               	movlw	128
  2207   002A30  1813               	xorwf	LEER_LCD@aux^(0+1280),w,c
  2208   002A32  B4D8               	btfsc	status,2,c
  2209   002A34  EF1E  F015         	goto	u11
  2210   002A38  EF20  F015         	goto	u10
  2211   002A3C                     u11:
  2212   002A3C  EF03  F015         	goto	l218
  2213   002A40                     u10:
  2214   002A40  0012               	return		;funcret
  2215   002A42                     __end_of_LEER_LCD:
  2216                           	callstack 0
  2217                           
  2218 ;; *************** function _ENVIA_NIBBLE *****************
  2219 ;; Defined at:
  2220 ;;		line 118 in file "LCD.c"
  2221 ;; Parameters:    Size  Location     Type
  2222 ;;  dato            1    wreg     unsigned char 
  2223 ;; Auto vars:     Size  Location     Type
  2224 ;;  dato            1   18[COMRAM] unsigned char 
  2225 ;; Return value:  Size  Location     Type
  2226 ;;                  1    wreg      void 
  2227 ;; Registers used:
  2228 ;;		wreg, status,2, status,0
  2229 ;; Tracked objects:
  2230 ;;		On entry : 0/0
  2231 ;;		On exit  : 0/0
  2232 ;;		Unchanged: 0/0
  2233 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2234 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2235 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2236 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2237 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2238 ;;Total ram usage:        1 bytes
  2239 ;; Hardware stack levels used: 1
  2240 ;; Hardware stack levels required when called: 3
  2241 ;; This function calls:
  2242 ;;		Nothing
  2243 ;; This function is called by:
  2244 ;;		_ENVIA_CHAR
  2245 ;;		_LCD_CONFIG
  2246 ;;		_ENVIA_LCD_CMD
  2247 ;; This function uses a non-reentrant model
  2248 ;;
  2249                           
  2250                           	psect	text20
  2251   002F3E                     __ptext20:
  2252                           	callstack 0
  2253   002F3E                     _ENVIA_NIBBLE:
  2254                           	callstack 120
  2255                           
  2256                           ;incstack = 0
  2257                           ;ENVIA_NIBBLE@dato stored from wreg
  2258   002F3E  6E13               	movwf	ENVIA_NIBBLE@dato^(0+1280),c
  2259   002F40                     
  2260                           ;LCD.c: 118: void ENVIA_NIBBLE(unsigned char dato);LCD.c: 119: {;LCD.c: 120:  LATD &= 0x
      +                          0F;
  2261   002F40  0E0F               	movlw	15
  2262   002F42  16C1               	andwf	193,f,c	;volatile
  2263                           
  2264                           ;LCD.c: 121:  dato &= 0xF0;
  2265   002F44  0EF0               	movlw	240
  2266   002F46  1613               	andwf	ENVIA_NIBBLE@dato^(0+1280),f,c
  2267                           
  2268                           ;LCD.c: 122:  LATD|= dato;
  2269   002F48  5013               	movf	ENVIA_NIBBLE@dato^(0+1280),w,c	;volatile
  2270   002F4A  12C1               	iorwf	193,f,c	;volatile
  2271   002F4C                     
  2272                           ;LCD.c: 123:  LATDbits.LATD2 = 1;
  2273   002F4C  84C1               	bsf	193,2,c	;volatile
  2274   002F4E                     
  2275                           ;LCD.c: 124:     _delay((unsigned long)((100)*(4000000UL/4000000.0)));
  2276   002F4E  0E21               	movlw	33
  2277   002F50                     u717:
  2278   002F50  2EE8               	decfsz	wreg,f,c
  2279   002F52  D7FE               	bra	u717
  2280   002F54  F000               	nop	
  2281   002F56                     
  2282                           ;LCD.c: 125:  LATDbits.LATD2 = 0;
  2283   002F56  94C1               	bcf	193,2,c	;volatile
  2284   002F58  0012               	return		;funcret
  2285   002F5A                     __end_of_ENVIA_NIBBLE:
  2286                           	callstack 0
  2287                           
  2288 ;; *************** function _ADC_GetValue *****************
  2289 ;; Defined at:
  2290 ;;		line 40 in file "maincode1.c"
  2291 ;; Parameters:    Size  Location     Type
  2292 ;;  canal           1    wreg     unsigned char 
  2293 ;; Auto vars:     Size  Location     Type
  2294 ;;  canal           1   22[COMRAM] unsigned char 
  2295 ;; Return value:  Size  Location     Type
  2296 ;;                  2   18[COMRAM] unsigned int 
  2297 ;; Registers used:
  2298 ;;		wreg, status,2, status,0
  2299 ;; Tracked objects:
  2300 ;;		On entry : 0/0
  2301 ;;		On exit  : 0/0
  2302 ;;		Unchanged: 0/0
  2303 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2304 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2305 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2306 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2307 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2308 ;;Total ram usage:        5 bytes
  2309 ;; Hardware stack levels used: 1
  2310 ;; Hardware stack levels required when called: 3
  2311 ;; This function calls:
  2312 ;;		Nothing
  2313 ;; This function is called by:
  2314 ;;		_main
  2315 ;; This function uses a non-reentrant model
  2316 ;;
  2317                           
  2318                           	psect	text21
  2319   002E70                     __ptext21:
  2320                           	callstack 0
  2321   002E70                     _ADC_GetValue:
  2322                           	callstack 123
  2323                           
  2324                           ;incstack = 0
  2325                           ;ADC_GetValue@canal stored from wreg
  2326   002E70  6E17               	movwf	ADC_GetValue@canal^(0+1280),c
  2327   002E72                     
  2328                           ;maincode1.c: 41:     ADPCH = canal;
  2329   002E72  C517  F3EC         	movff	ADC_GetValue@canal,1004	;volatile
  2330   002E76                     
  2331                           ;maincode1.c: 42:     ADCON0bits.GO = 1;
  2332   002E76  0103               	movlb	3	; () banked
  2333   002E78  81F3               	bsf	243,0,b	;volatile
  2334   002E7A                     l88:
  2335                           
  2336                           ; BSR set to: 3
  2337   002E7A  B1F3               	btfsc	243,0,b	;volatile
  2338   002E7C  EF42  F017         	goto	u561
  2339   002E80  EF44  F017         	goto	u560
  2340   002E84                     u561:
  2341   002E84  EF3D  F017         	goto	l88
  2342   002E88                     u560:
  2343   002E88                     
  2344                           ; BSR set to: 3
  2345                           ;maincode1.c: 44:     return ((ADRESH << 8) + ADRESL);
  2346   002E88  51EB               	movf	235,w,b	;volatile
  2347   002E8A  6E16               	movwf	(??_ADC_GetValue+1)^(0+1280),c
  2348   002E8C  6A15               	clrf	??_ADC_GetValue^(0+1280),c
  2349   002E8E  51EA               	movf	234,w,b	;volatile
  2350   002E90  2415               	addwf	??_ADC_GetValue^(0+1280),w,c
  2351   002E92  6E13               	movwf	?_ADC_GetValue^(0+1280),c
  2352   002E94  0E00               	movlw	0
  2353   002E96  2016               	addwfc	(??_ADC_GetValue+1)^(0+1280),w,c
  2354   002E98  6E14               	movwf	(?_ADC_GetValue+1)^(0+1280),c
  2355   002E9A                     
  2356                           ; BSR set to: 3
  2357   002E9A  0012               	return		;funcret
  2358   002E9C                     __end_of_ADC_GetValue:
  2359                           	callstack 0
  2360                           
  2361 ;; *************** function _INT0_ISR *****************
  2362 ;; Defined at:
  2363 ;;		line 114 in file "maincode1.c"
  2364 ;; Parameters:    Size  Location     Type
  2365 ;;		None
  2366 ;; Auto vars:     Size  Location     Type
  2367 ;;		None
  2368 ;; Return value:  Size  Location     Type
  2369 ;;                  1    wreg      void 
  2370 ;; Registers used:
  2371 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2372 ;; Tracked objects:
  2373 ;;		On entry : 0/0
  2374 ;;		On exit  : 0/0
  2375 ;;		Unchanged: 0/0
  2376 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2377 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2378 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2379 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2380 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2381 ;;Total ram usage:        4 bytes
  2382 ;; Hardware stack levels used: 1
  2383 ;; Hardware stack levels required when called: 2
  2384 ;; This function calls:
  2385 ;;		i2_ADC_GetValue
  2386 ;;		i2_UART1_Data_Send
  2387 ;;		i2_UART1_NewLine
  2388 ;;		i2_UART1_String_Send
  2389 ;;		i2_convierte
  2390 ;; This function is called by:
  2391 ;;		Interrupt level 2
  2392 ;; This function uses a non-reentrant model
  2393 ;;
  2394                           
  2395                           	psect	text22
  2396   0027A0                     __ptext22:
  2397                           	callstack 0
  2398   0027A0                     _INT0_ISR:
  2399                           	callstack 119
  2400                           
  2401                           ; BSR set to: 3
  2402                           ;incstack = 0
  2403   0027A0  C4F6 F50F          	movff	tblptrl,??_INT0_ISR
  2404   0027A4  C4F7 F510          	movff	tblptrh,??_INT0_ISR+1
  2405   0027A8  C4F8 F511          	movff	tblptru,??_INT0_ISR+2
  2406   0027AC  C4F5 F512          	movff	tablat,??_INT0_ISR+3
  2407   0027B0                     
  2408                           ;maincode1.c: 115:     PIR1bits.INT0IF = 0;
  2409   0027B0  90AF               	bcf	175,0,c	;volatile
  2410   0027B2                     
  2411                           ;maincode1.c: 116:     convierte(ADC_GetValue(0));
  2412   0027B2  0E00               	movlw	0
  2413   0027B4  EC4E  F017         	call	i2_ADC_GetValue
  2414   0027B8  C501  F50D         	movff	?i2_ADC_GetValue,i2convierte@numero
  2415   0027BC  C502  F50E         	movff	?i2_ADC_GetValue+1,i2convierte@numero+1
  2416   0027C0  EC75  F013         	call	i2_convierte	;wreg free
  2417   0027C4                     
  2418                           ;maincode1.c: 117:     UART1_String_Send("Canal AN-0:");
  2419   0027C4  0E11               	movlw	low STR_7
  2420   0027C6  6E05               	movwf	i2UART1_String_Send@cadena^(0+1280),c
  2421   0027C8  0E26               	movlw	high STR_7
  2422   0027CA  6E06               	movwf	(i2UART1_String_Send@cadena+1)^(0+1280),c
  2423   0027CC  EC58  F016         	call	i2_UART1_String_Send	;wreg free
  2424   0027D0                     
  2425                           ;maincode1.c: 118:     UART1_Data_Send(millar+0x30);
  2426   0027D0  5024               	movf	_millar^(0+1280),w,c
  2427   0027D2  0F30               	addlw	48
  2428   0027D4  ECB9  F017         	call	i2_UART1_Data_Send
  2429   0027D8                     
  2430                           ;maincode1.c: 119:     UART1_Data_Send(centena+0x30);
  2431   0027D8  5023               	movf	_centena^(0+1280),w,c
  2432   0027DA  0F30               	addlw	48
  2433   0027DC  ECB9  F017         	call	i2_UART1_Data_Send
  2434   0027E0                     
  2435                           ;maincode1.c: 120:     UART1_Data_Send(decena+0x30);
  2436   0027E0  5022               	movf	_decena^(0+1280),w,c
  2437   0027E2  0F30               	addlw	48
  2438   0027E4  ECB9  F017         	call	i2_UART1_Data_Send
  2439   0027E8                     
  2440                           ;maincode1.c: 121:     UART1_Data_Send(unidad+0x30);
  2441   0027E8  5021               	movf	_unidad^(0+1280),w,c
  2442   0027EA  0F30               	addlw	48
  2443   0027EC  ECB9  F017         	call	i2_UART1_Data_Send
  2444   0027F0                     
  2445                           ;maincode1.c: 122:     UART1_NewLine();
  2446   0027F0  EC78  F017         	call	i2_UART1_NewLine	;wreg free
  2447   0027F4                     
  2448                           ;maincode1.c: 123:     convierte(ADC_GetValue(1));
  2449   0027F4  0E01               	movlw	1
  2450   0027F6  EC4E  F017         	call	i2_ADC_GetValue
  2451   0027FA  C501  F50D         	movff	?i2_ADC_GetValue,i2convierte@numero
  2452   0027FE  C502  F50E         	movff	?i2_ADC_GetValue+1,i2convierte@numero+1
  2453   002802  EC75  F013         	call	i2_convierte	;wreg free
  2454   002806                     
  2455                           ;maincode1.c: 124:     UART1_String_Send("Canal AN-1:");
  2456   002806  0E1D               	movlw	low STR_8
  2457   002808  6E05               	movwf	i2UART1_String_Send@cadena^(0+1280),c
  2458   00280A  0E26               	movlw	high STR_8
  2459   00280C  6E06               	movwf	(i2UART1_String_Send@cadena+1)^(0+1280),c
  2460   00280E  EC58  F016         	call	i2_UART1_String_Send	;wreg free
  2461   002812                     
  2462                           ;maincode1.c: 125:     UART1_Data_Send(millar+0x30);
  2463   002812  5024               	movf	_millar^(0+1280),w,c
  2464   002814  0F30               	addlw	48
  2465   002816  ECB9  F017         	call	i2_UART1_Data_Send
  2466   00281A                     
  2467                           ;maincode1.c: 126:     UART1_Data_Send(centena+0x30);
  2468   00281A  5023               	movf	_centena^(0+1280),w,c
  2469   00281C  0F30               	addlw	48
  2470   00281E  ECB9  F017         	call	i2_UART1_Data_Send
  2471   002822                     
  2472                           ;maincode1.c: 127:     UART1_Data_Send(decena+0x30);
  2473   002822  5022               	movf	_decena^(0+1280),w,c
  2474   002824  0F30               	addlw	48
  2475   002826  ECB9  F017         	call	i2_UART1_Data_Send
  2476   00282A                     
  2477                           ;maincode1.c: 128:     UART1_Data_Send(unidad+0x30);
  2478   00282A  5021               	movf	_unidad^(0+1280),w,c
  2479   00282C  0F30               	addlw	48
  2480   00282E  ECB9  F017         	call	i2_UART1_Data_Send
  2481                           
  2482                           ;maincode1.c: 129:     UART1_NewLine();
  2483   002832  EC78  F017         	call	i2_UART1_NewLine	;wreg free
  2484   002836  C512  F4F5         	movff	??_INT0_ISR+3,tablat
  2485   00283A  C511  F4F8         	movff	??_INT0_ISR+2,tblptru
  2486   00283E  C510  F4F7         	movff	??_INT0_ISR+1,tblptrh
  2487   002842  C50F  F4F6         	movff	??_INT0_ISR,tblptrl
  2488   002846  0011               	retfie		f
  2489   002848                     __end_of_INT0_ISR:
  2490                           	callstack 0
  2491                           
  2492 ;; *************** function i2_convierte *****************
  2493 ;; Defined at:
  2494 ;;		line 47 in file "maincode1.c"
  2495 ;; Parameters:    Size  Location     Type
  2496 ;;  numero          2   12[COMRAM] unsigned int 
  2497 ;; Auto vars:     Size  Location     Type
  2498 ;;		None
  2499 ;; Return value:  Size  Location     Type
  2500 ;;                  1    wreg      void 
  2501 ;; Registers used:
  2502 ;;		wreg, status,2, status,0, cstack
  2503 ;; Tracked objects:
  2504 ;;		On entry : 0/0
  2505 ;;		On exit  : 0/0
  2506 ;;		Unchanged: 0/0
  2507 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2508 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2509 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2510 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2511 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2512 ;;Total ram usage:        2 bytes
  2513 ;; Hardware stack levels used: 1
  2514 ;; Hardware stack levels required when called: 1
  2515 ;; This function calls:
  2516 ;;		i2___lwdiv
  2517 ;;		i2___lwmod
  2518 ;; This function is called by:
  2519 ;;		_INT0_ISR
  2520 ;; This function uses a non-reentrant model
  2521 ;;
  2522                           
  2523                           	psect	text23
  2524   0026EA                     __ptext23:
  2525                           	callstack 0
  2526   0026EA                     i2_convierte:
  2527                           	callstack 119
  2528   0026EA                     
  2529                           ;maincode1.c: 48:     diezmillar = numero / 10000;
  2530   0026EA  C50D  F506         	movff	i2convierte@numero,i2___lwdiv@dividend
  2531   0026EE  C50E  F507         	movff	i2convierte@numero+1,i2___lwdiv@dividend+1
  2532   0026F2  0E27               	movlw	39
  2533   0026F4  6E09               	movwf	(i2___lwdiv@divisor+1)^(0+1280),c
  2534   0026F6  0E10               	movlw	16
  2535   0026F8  6E08               	movwf	i2___lwdiv@divisor^(0+1280),c
  2536   0026FA  ECAE  F014         	call	i2___lwdiv	;wreg free
  2537   0026FE  5006               	movf	?i2___lwdiv^(0+1280),w,c
  2538   002700  6E25               	movwf	_diezmillar^(0+1280),c
  2539                           
  2540                           ;maincode1.c: 49:     millar = (numero % 10000) / 1000;
  2541   002702  0E27               	movlw	39
  2542   002704  6E04               	movwf	(i2___lwmod@divisor+1)^(0+1280),c
  2543   002706  0E10               	movlw	16
  2544   002708  6E03               	movwf	i2___lwmod@divisor^(0+1280),c
  2545   00270A  C50D  F501         	movff	i2convierte@numero,i2___lwmod@dividend
  2546   00270E  C50E  F502         	movff	i2convierte@numero+1,i2___lwmod@dividend+1
  2547   002712  EC8A  F015         	call	i2___lwmod	;wreg free
  2548   002716  C501  F506         	movff	?i2___lwmod,i2___lwdiv@dividend
  2549   00271A  C502  F507         	movff	?i2___lwmod+1,i2___lwdiv@dividend+1
  2550   00271E  0E03               	movlw	3
  2551   002720  6E09               	movwf	(i2___lwdiv@divisor+1)^(0+1280),c
  2552   002722  0EE8               	movlw	232
  2553   002724  6E08               	movwf	i2___lwdiv@divisor^(0+1280),c
  2554   002726  ECAE  F014         	call	i2___lwdiv	;wreg free
  2555   00272A  5006               	movf	?i2___lwdiv^(0+1280),w,c
  2556   00272C  6E24               	movwf	_millar^(0+1280),c
  2557                           
  2558                           ;maincode1.c: 50:     centena = (numero % 1000) / 100;
  2559   00272E  0E03               	movlw	3
  2560   002730  6E04               	movwf	(i2___lwmod@divisor+1)^(0+1280),c
  2561   002732  0EE8               	movlw	232
  2562   002734  6E03               	movwf	i2___lwmod@divisor^(0+1280),c
  2563   002736  C50D  F501         	movff	i2convierte@numero,i2___lwmod@dividend
  2564   00273A  C50E  F502         	movff	i2convierte@numero+1,i2___lwmod@dividend+1
  2565   00273E  EC8A  F015         	call	i2___lwmod	;wreg free
  2566   002742  C501  F506         	movff	?i2___lwmod,i2___lwdiv@dividend
  2567   002746  C502  F507         	movff	?i2___lwmod+1,i2___lwdiv@dividend+1
  2568   00274A  0E00               	movlw	0
  2569   00274C  6E09               	movwf	(i2___lwdiv@divisor+1)^(0+1280),c
  2570   00274E  0E64               	movlw	100
  2571   002750  6E08               	movwf	i2___lwdiv@divisor^(0+1280),c
  2572   002752  ECAE  F014         	call	i2___lwdiv	;wreg free
  2573   002756  5006               	movf	?i2___lwdiv^(0+1280),w,c
  2574   002758  6E23               	movwf	_centena^(0+1280),c
  2575                           
  2576                           ;maincode1.c: 51:     decena = (numero % 100) / 10;
  2577   00275A  0E00               	movlw	0
  2578   00275C  6E04               	movwf	(i2___lwmod@divisor+1)^(0+1280),c
  2579   00275E  0E64               	movlw	100
  2580   002760  6E03               	movwf	i2___lwmod@divisor^(0+1280),c
  2581   002762  C50D  F501         	movff	i2convierte@numero,i2___lwmod@dividend
  2582   002766  C50E  F502         	movff	i2convierte@numero+1,i2___lwmod@dividend+1
  2583   00276A  EC8A  F015         	call	i2___lwmod	;wreg free
  2584   00276E  C501  F506         	movff	?i2___lwmod,i2___lwdiv@dividend
  2585   002772  C502  F507         	movff	?i2___lwmod+1,i2___lwdiv@dividend+1
  2586   002776  0E00               	movlw	0
  2587   002778  6E09               	movwf	(i2___lwdiv@divisor+1)^(0+1280),c
  2588   00277A  0E0A               	movlw	10
  2589   00277C  6E08               	movwf	i2___lwdiv@divisor^(0+1280),c
  2590   00277E  ECAE  F014         	call	i2___lwdiv	;wreg free
  2591   002782  5006               	movf	?i2___lwdiv^(0+1280),w,c
  2592   002784  6E22               	movwf	_decena^(0+1280),c
  2593                           
  2594                           ;maincode1.c: 52:     unidad = numero % 10;
  2595   002786  C50D  F501         	movff	i2convierte@numero,i2___lwmod@dividend
  2596   00278A  C50E  F502         	movff	i2convierte@numero+1,i2___lwmod@dividend+1
  2597   00278E  0E00               	movlw	0
  2598   002790  6E04               	movwf	(i2___lwmod@divisor+1)^(0+1280),c
  2599   002792  0E0A               	movlw	10
  2600   002794  6E03               	movwf	i2___lwmod@divisor^(0+1280),c
  2601   002796  EC8A  F015         	call	i2___lwmod	;wreg free
  2602   00279A  5001               	movf	?i2___lwmod^(0+1280),w,c
  2603   00279C  6E21               	movwf	_unidad^(0+1280),c
  2604   00279E  0012               	return		;funcret
  2605   0027A0                     __end_ofi2_convierte:
  2606                           	callstack 0
  2607                           
  2608 ;; *************** function i2___lwmod *****************
  2609 ;; Defined at:
  2610 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\lwmod.c"
  2611 ;; Parameters:    Size  Location     Type
  2612 ;;  dividend        2    0[COMRAM] unsigned int 
  2613 ;;  divisor         2    2[COMRAM] unsigned int 
  2614 ;; Auto vars:     Size  Location     Type
  2615 ;;  counter         1    4[COMRAM] unsigned char 
  2616 ;; Return value:  Size  Location     Type
  2617 ;;                  2    0[COMRAM] unsigned int 
  2618 ;; Registers used:
  2619 ;;		wreg, status,2, status,0
  2620 ;; Tracked objects:
  2621 ;;		On entry : 0/0
  2622 ;;		On exit  : 0/0
  2623 ;;		Unchanged: 0/0
  2624 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2625 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2626 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2627 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2628 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2629 ;;Total ram usage:        5 bytes
  2630 ;; Hardware stack levels used: 1
  2631 ;; This function calls:
  2632 ;;		Nothing
  2633 ;; This function is called by:
  2634 ;;		i2_convierte
  2635 ;; This function uses a non-reentrant model
  2636 ;;
  2637                           
  2638                           	psect	text24
  2639   002B14                     __ptext24:
  2640                           	callstack 0
  2641   002B14                     i2___lwmod:
  2642                           	callstack 119
  2643   002B14  5003               	movf	i2___lwmod@divisor^(0+1280),w,c
  2644   002B16  1004               	iorwf	(i2___lwmod@divisor+1)^(0+1280),w,c
  2645   002B18  B4D8               	btfsc	status,2,c
  2646   002B1A  EF91  F015         	goto	i2u52_41
  2647   002B1E  EF93  F015         	goto	i2u52_40
  2648   002B22                     i2u52_41:
  2649   002B22  EFB7  F015         	goto	i2l732
  2650   002B26                     i2u52_40:
  2651   002B26  0E01               	movlw	1
  2652   002B28  6E05               	movwf	i2___lwmod@counter^(0+1280),c
  2653   002B2A  EF9B  F015         	goto	i2l1458
  2654   002B2E                     i2l1456:
  2655   002B2E  90D8               	bcf	status,0,c
  2656   002B30  3603               	rlcf	i2___lwmod@divisor^(0+1280),f,c
  2657   002B32  3604               	rlcf	(i2___lwmod@divisor+1)^(0+1280),f,c
  2658   002B34  2A05               	incf	i2___lwmod@counter^(0+1280),f,c
  2659   002B36                     i2l1458:
  2660   002B36  AE04               	btfss	(i2___lwmod@divisor+1)^(0+1280),7,c
  2661   002B38  EFA0  F015         	goto	i2u53_41
  2662   002B3C  EFA2  F015         	goto	i2u53_40
  2663   002B40                     i2u53_41:
  2664   002B40  EF97  F015         	goto	i2l1456
  2665   002B44                     i2u53_40:
  2666   002B44                     i2l1460:
  2667   002B44  5003               	movf	i2___lwmod@divisor^(0+1280),w,c
  2668   002B46  5C01               	subwf	i2___lwmod@dividend^(0+1280),w,c
  2669   002B48  5004               	movf	(i2___lwmod@divisor+1)^(0+1280),w,c
  2670   002B4A  5802               	subwfb	(i2___lwmod@dividend+1)^(0+1280),w,c
  2671   002B4C  A0D8               	btfss	status,0,c
  2672   002B4E  EFAB  F015         	goto	i2u54_41
  2673   002B52  EFAD  F015         	goto	i2u54_40
  2674   002B56                     i2u54_41:
  2675   002B56  EFB1  F015         	goto	i2l1464
  2676   002B5A                     i2u54_40:
  2677   002B5A  5003               	movf	i2___lwmod@divisor^(0+1280),w,c
  2678   002B5C  5E01               	subwf	i2___lwmod@dividend^(0+1280),f,c
  2679   002B5E  5004               	movf	(i2___lwmod@divisor+1)^(0+1280),w,c
  2680   002B60  5A02               	subwfb	(i2___lwmod@dividend+1)^(0+1280),f,c
  2681   002B62                     i2l1464:
  2682   002B62  90D8               	bcf	status,0,c
  2683   002B64  3204               	rrcf	(i2___lwmod@divisor+1)^(0+1280),f,c
  2684   002B66  3203               	rrcf	i2___lwmod@divisor^(0+1280),f,c
  2685   002B68  2E05               	decfsz	i2___lwmod@counter^(0+1280),f,c
  2686   002B6A  EFA2  F015         	goto	i2l1460
  2687   002B6E                     i2l732:
  2688   002B6E  C501  F501         	movff	i2___lwmod@dividend,?i2___lwmod
  2689   002B72  C502  F502         	movff	i2___lwmod@dividend+1,?i2___lwmod+1
  2690   002B76  0012               	return		;funcret
  2691   002B78                     __end_ofi2___lwmod:
  2692                           	callstack 0
  2693                           
  2694 ;; *************** function i2___lwdiv *****************
  2695 ;; Defined at:
  2696 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\lwdiv.c"
  2697 ;; Parameters:    Size  Location     Type
  2698 ;;  dividend        2    5[COMRAM] unsigned int 
  2699 ;;  divisor         2    7[COMRAM] unsigned int 
  2700 ;; Auto vars:     Size  Location     Type
  2701 ;;  quotient        2    9[COMRAM] unsigned int 
  2702 ;;  counter         1   11[COMRAM] unsigned char 
  2703 ;; Return value:  Size  Location     Type
  2704 ;;                  2    5[COMRAM] unsigned int 
  2705 ;; Registers used:
  2706 ;;		wreg, status,2, status,0
  2707 ;; Tracked objects:
  2708 ;;		On entry : 0/0
  2709 ;;		On exit  : 0/0
  2710 ;;		Unchanged: 0/0
  2711 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2712 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2713 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2714 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2715 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2716 ;;Total ram usage:        7 bytes
  2717 ;; Hardware stack levels used: 1
  2718 ;; This function calls:
  2719 ;;		Nothing
  2720 ;; This function is called by:
  2721 ;;		i2_convierte
  2722 ;; This function uses a non-reentrant model
  2723 ;;
  2724                           
  2725                           	psect	text25
  2726   00295C                     __ptext25:
  2727                           	callstack 0
  2728   00295C                     i2___lwdiv:
  2729                           	callstack 119
  2730   00295C  0E00               	movlw	0
  2731   00295E  6E0B               	movwf	(i2___lwdiv@quotient+1)^(0+1280),c
  2732   002960  0E00               	movlw	0
  2733   002962  6E0A               	movwf	i2___lwdiv@quotient^(0+1280),c
  2734   002964  5008               	movf	i2___lwdiv@divisor^(0+1280),w,c
  2735   002966  1009               	iorwf	(i2___lwdiv@divisor+1)^(0+1280),w,c
  2736   002968  B4D8               	btfsc	status,2,c
  2737   00296A  EFB9  F014         	goto	i2u49_41
  2738   00296E  EFBB  F014         	goto	i2u49_40
  2739   002972                     i2u49_41:
  2740   002972  EFE3  F014         	goto	i2l722
  2741   002976                     i2u49_40:
  2742   002976  0E01               	movlw	1
  2743   002978  6E0C               	movwf	i2___lwdiv@counter^(0+1280),c
  2744   00297A  EFC3  F014         	goto	i2l1438
  2745   00297E                     i2l1436:
  2746   00297E  90D8               	bcf	status,0,c
  2747   002980  3608               	rlcf	i2___lwdiv@divisor^(0+1280),f,c
  2748   002982  3609               	rlcf	(i2___lwdiv@divisor+1)^(0+1280),f,c
  2749   002984  2A0C               	incf	i2___lwdiv@counter^(0+1280),f,c
  2750   002986                     i2l1438:
  2751   002986  AE09               	btfss	(i2___lwdiv@divisor+1)^(0+1280),7,c
  2752   002988  EFC8  F014         	goto	i2u50_41
  2753   00298C  EFCA  F014         	goto	i2u50_40
  2754   002990                     i2u50_41:
  2755   002990  EFBF  F014         	goto	i2l1436
  2756   002994                     i2u50_40:
  2757   002994                     i2l1440:
  2758   002994  90D8               	bcf	status,0,c
  2759   002996  360A               	rlcf	i2___lwdiv@quotient^(0+1280),f,c
  2760   002998  360B               	rlcf	(i2___lwdiv@quotient+1)^(0+1280),f,c
  2761   00299A  5008               	movf	i2___lwdiv@divisor^(0+1280),w,c
  2762   00299C  5C06               	subwf	i2___lwdiv@dividend^(0+1280),w,c
  2763   00299E  5009               	movf	(i2___lwdiv@divisor+1)^(0+1280),w,c
  2764   0029A0  5807               	subwfb	(i2___lwdiv@dividend+1)^(0+1280),w,c
  2765   0029A2  A0D8               	btfss	status,0,c
  2766   0029A4  EFD6  F014         	goto	i2u51_41
  2767   0029A8  EFD8  F014         	goto	i2u51_40
  2768   0029AC                     i2u51_41:
  2769   0029AC  EFDD  F014         	goto	i2l1448
  2770   0029B0                     i2u51_40:
  2771   0029B0  5008               	movf	i2___lwdiv@divisor^(0+1280),w,c
  2772   0029B2  5E06               	subwf	i2___lwdiv@dividend^(0+1280),f,c
  2773   0029B4  5009               	movf	(i2___lwdiv@divisor+1)^(0+1280),w,c
  2774   0029B6  5A07               	subwfb	(i2___lwdiv@dividend+1)^(0+1280),f,c
  2775   0029B8  800A               	bsf	i2___lwdiv@quotient^(0+1280),0,c
  2776   0029BA                     i2l1448:
  2777   0029BA  90D8               	bcf	status,0,c
  2778   0029BC  3209               	rrcf	(i2___lwdiv@divisor+1)^(0+1280),f,c
  2779   0029BE  3208               	rrcf	i2___lwdiv@divisor^(0+1280),f,c
  2780   0029C0  2E0C               	decfsz	i2___lwdiv@counter^(0+1280),f,c
  2781   0029C2  EFCA  F014         	goto	i2l1440
  2782   0029C6                     i2l722:
  2783   0029C6  C50A  F506         	movff	i2___lwdiv@quotient,?i2___lwdiv
  2784   0029CA  C50B  F507         	movff	i2___lwdiv@quotient+1,?i2___lwdiv+1
  2785   0029CE  0012               	return		;funcret
  2786   0029D0                     __end_ofi2___lwdiv:
  2787                           	callstack 0
  2788                           
  2789 ;; *************** function i2_UART1_String_Send *****************
  2790 ;; Defined at:
  2791 ;;		line 67 in file "maincode1.c"
  2792 ;; Parameters:    Size  Location     Type
  2793 ;;  cadena          2    4[COMRAM] PTR const unsigned char 
  2794 ;;		 -> STR_8(12), STR_7(12), STR_4(16), STR_3(10), 
  2795 ;; Auto vars:     Size  Location     Type
  2796 ;;  i               1    9[COMRAM] unsigned char 
  2797 ;;  tam             1    8[COMRAM] unsigned char 
  2798 ;; Return value:  Size  Location     Type
  2799 ;;                  1    wreg      void 
  2800 ;; Registers used:
  2801 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2802 ;; Tracked objects:
  2803 ;;		On entry : 0/0
  2804 ;;		On exit  : 0/0
  2805 ;;		Unchanged: 0/0
  2806 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2807 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2808 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2809 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2810 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2811 ;;Total ram usage:        6 bytes
  2812 ;; Hardware stack levels used: 1
  2813 ;; Hardware stack levels required when called: 1
  2814 ;; This function calls:
  2815 ;;		i2_UART1_Data_Send
  2816 ;;		i2_strlen
  2817 ;; This function is called by:
  2818 ;;		_INT0_ISR
  2819 ;; This function uses a non-reentrant model
  2820 ;;
  2821                           
  2822                           	psect	text26
  2823   002CB0                     __ptext26:
  2824                           	callstack 0
  2825   002CB0                     i2_UART1_String_Send:
  2826                           	callstack 119
  2827   002CB0                     
  2828                           ;maincode1.c: 71:     tam = strlen(cadena);
  2829   002CB0  C505  F501         	movff	i2UART1_String_Send@cadena,i2strlen@s
  2830   002CB4  C506  F502         	movff	i2UART1_String_Send@cadena+1,i2strlen@s+1
  2831   002CB8  ECB7  F016         	call	i2_strlen	;wreg free
  2832   002CBC  5001               	movf	?i2_strlen^(0+1280),w,c
  2833   002CBE  6E09               	movwf	i2UART1_String_Send@tam^(0+1280),c
  2834   002CC0                     
  2835                           ;maincode1.c: 72:  for(i = 0; i<tam; i++)
  2836   002CC0  0E00               	movlw	0
  2837   002CC2  6E0A               	movwf	i2UART1_String_Send@i^(0+1280),c
  2838   002CC4  EF73  F016         	goto	i2l1522
  2839   002CC8                     i2l1518:
  2840                           
  2841                           ;maincode1.c: 73:  {;maincode1.c: 74:         UART1_Data_Send(cadena[i]);
  2842   002CC8  500A               	movf	i2UART1_String_Send@i^(0+1280),w,c
  2843   002CCA  2405               	addwf	i2UART1_String_Send@cadena^(0+1280),w,c
  2844   002CCC  6E07               	movwf	??i2_UART1_String_Send^(0+1280),c
  2845   002CCE  0E00               	movlw	0
  2846   002CD0  2006               	addwfc	(i2UART1_String_Send@cadena+1)^(0+1280),w,c
  2847   002CD2  6E08               	movwf	(??i2_UART1_String_Send+1)^(0+1280),c
  2848   002CD4  C507  F4F6         	movff	??i2_UART1_String_Send,tblptrl
  2849   002CD8  C508  F4F7         	movff	??i2_UART1_String_Send+1,tblptrh
  2850   002CDC                     	if	0	;tblptru may be non-zero
  2851   002CDC                     	endif
  2852   002CDC                     	if	0	;tblptru may be non-zero
  2853   002CDC                     	endif
  2854   002CDC  0008               	tblrd		*
  2855   002CDE  50F5               	movf	tablat,w,c
  2856   002CE0  ECB9  F017         	call	i2_UART1_Data_Send
  2857   002CE4                     
  2858                           ;maincode1.c: 75:  }
  2859   002CE4  2A0A               	incf	i2UART1_String_Send@i^(0+1280),f,c
  2860   002CE6                     i2l1522:
  2861   002CE6  5009               	movf	i2UART1_String_Send@tam^(0+1280),w,c
  2862   002CE8  5C0A               	subwf	i2UART1_String_Send@i^(0+1280),w,c
  2863   002CEA  A0D8               	btfss	status,0,c
  2864   002CEC  EF7A  F016         	goto	i2u58_41
  2865   002CF0  EF7C  F016         	goto	i2u58_40
  2866   002CF4                     i2u58_41:
  2867   002CF4  EF64  F016         	goto	i2l1518
  2868   002CF8                     i2u58_40:
  2869   002CF8  0012               	return		;funcret
  2870   002CFA                     __end_ofi2_UART1_String_Send:
  2871                           	callstack 0
  2872                           
  2873 ;; *************** function i2_strlen *****************
  2874 ;; Defined at:
  2875 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\strlen.c"
  2876 ;; Parameters:    Size  Location     Type
  2877 ;;  s               2    0[COMRAM] PTR const unsigned char 
  2878 ;;		 -> STR_8(12), STR_7(12), STR_6(6), STR_5(6), 
  2879 ;;		 -> STR_4(16), STR_3(10), STR_2(16), STR_1(10), 
  2880 ;; Auto vars:     Size  Location     Type
  2881 ;;  a               2    2[COMRAM] PTR const unsigned char 
  2882 ;;		 -> STR_8(12), STR_7(12), STR_6(6), STR_5(6), 
  2883 ;;		 -> STR_4(16), STR_3(10), STR_2(16), STR_1(10), 
  2884 ;; Return value:  Size  Location     Type
  2885 ;;                  2    0[COMRAM] unsigned int 
  2886 ;; Registers used:
  2887 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  2888 ;; Tracked objects:
  2889 ;;		On entry : 0/0
  2890 ;;		On exit  : 0/0
  2891 ;;		Unchanged: 0/0
  2892 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2893 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2894 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2895 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2896 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2897 ;;Total ram usage:        4 bytes
  2898 ;; Hardware stack levels used: 1
  2899 ;; This function calls:
  2900 ;;		Nothing
  2901 ;; This function is called by:
  2902 ;;		i2_UART1_String_Send
  2903 ;; This function uses a non-reentrant model
  2904 ;;
  2905                           
  2906                           	psect	text27
  2907   002D6E                     __ptext27:
  2908                           	callstack 0
  2909   002D6E                     i2_strlen:
  2910                           	callstack 119
  2911   002D6E  C501  F503         	movff	i2strlen@s,i2strlen@a
  2912   002D72  C502  F504         	movff	i2strlen@s+1,i2strlen@a+1
  2913   002D76  EFBF  F016         	goto	i2l1472
  2914   002D7A                     i2l1470:
  2915   002D7A  4A01               	infsnz	i2strlen@s^(0+1280),f,c
  2916   002D7C  2A02               	incf	(i2strlen@s+1)^(0+1280),f,c
  2917   002D7E                     i2l1472:
  2918   002D7E  C501  F4F6         	movff	i2strlen@s,tblptrl
  2919   002D82  C502  F4F7         	movff	i2strlen@s+1,tblptrh
  2920   002D86                     	if	0	;tblptru may be non-zero
  2921   002D86                     	endif
  2922   002D86                     	if	0	;tblptru may be non-zero
  2923   002D86                     	endif
  2924   002D86  0008               	tblrd		*
  2925   002D88  50F5               	movf	tablat,w,c
  2926   002D8A  0900               	iorlw	0
  2927   002D8C  A4D8               	btfss	status,2,c
  2928   002D8E  EFCB  F016         	goto	i2u55_41
  2929   002D92  EFCD  F016         	goto	i2u55_40
  2930   002D96                     i2u55_41:
  2931   002D96  EFBD  F016         	goto	i2l1470
  2932   002D9A                     i2u55_40:
  2933   002D9A  5003               	movf	i2strlen@a^(0+1280),w,c
  2934   002D9C  5C01               	subwf	i2strlen@s^(0+1280),w,c
  2935   002D9E  6E01               	movwf	?i2_strlen^(0+1280),c
  2936   002DA0  5004               	movf	(i2strlen@a+1)^(0+1280),w,c
  2937   002DA2  5802               	subwfb	(i2strlen@s+1)^(0+1280),w,c
  2938   002DA4  6E02               	movwf	(?i2_strlen+1)^(0+1280),c
  2939   002DA6  0012               	return		;funcret
  2940   002DA8                     __end_ofi2_strlen:
  2941                           	callstack 0
  2942                           
  2943 ;; *************** function i2_UART1_Data_Send *****************
  2944 ;; Defined at:
  2945 ;;		line 55 in file "maincode1.c"
  2946 ;; Parameters:    Size  Location     Type
  2947 ;;  dato            1    wreg     unsigned char 
  2948 ;; Auto vars:     Size  Location     Type
  2949 ;;  dato            1    0[COMRAM] unsigned char 
  2950 ;; Return value:  Size  Location     Type
  2951 ;;                  1    wreg      void 
  2952 ;; Registers used:
  2953 ;;		wreg
  2954 ;; Tracked objects:
  2955 ;;		On entry : 0/0
  2956 ;;		On exit  : 0/0
  2957 ;;		Unchanged: 0/0
  2958 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2959 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2960 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2961 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2962 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2963 ;;Total ram usage:        1 bytes
  2964 ;; Hardware stack levels used: 1
  2965 ;; This function calls:
  2966 ;;		Nothing
  2967 ;; This function is called by:
  2968 ;;		_INT0_ISR
  2969 ;;		i2_UART1_String_Send
  2970 ;; This function uses a non-reentrant model
  2971 ;;
  2972                           
  2973                           	psect	text28
  2974   002F72                     __ptext28:
  2975                           	callstack 0
  2976   002F72                     i2_UART1_Data_Send:
  2977                           	callstack 119
  2978                           
  2979                           ;incstack = 0
  2980                           ;i2UART1_Data_Send@dato stored from wreg
  2981   002F72  6E01               	movwf	i2UART1_Data_Send@dato^(0+1280),c
  2982   002F74                     
  2983                           ;maincode1.c: 56:     U1TXB = dato;
  2984   002F74  C501  F2A3         	movff	i2UART1_Data_Send@dato,675	;volatile
  2985   002F78                     i2l97:
  2986   002F78  0102               	movlb	2	; () banked
  2987   002F7A  AFB2               	btfss	178,7,b	;volatile
  2988   002F7C  EFC2  F017         	goto	i2u48_41
  2989   002F80  EFC4  F017         	goto	i2u48_40
  2990   002F84                     i2u48_41:
  2991   002F84  EFBC  F017         	goto	i2l97
  2992   002F88                     i2u48_40:
  2993   002F88                     
  2994                           ; BSR set to: 2
  2995   002F88  0012               	return		;funcret
  2996   002F8A                     __end_ofi2_UART1_Data_Send:
  2997                           	callstack 0
  2998                           
  2999 ;; *************** function i2_UART1_NewLine *****************
  3000 ;; Defined at:
  3001 ;;		line 60 in file "maincode1.c"
  3002 ;; Parameters:    Size  Location     Type
  3003 ;;		None
  3004 ;; Auto vars:     Size  Location     Type
  3005 ;;		None
  3006 ;; Return value:  Size  Location     Type
  3007 ;;                  1    wreg      void 
  3008 ;; Registers used:
  3009 ;;		wreg, status,2
  3010 ;; Tracked objects:
  3011 ;;		On entry : 0/0
  3012 ;;		On exit  : 0/0
  3013 ;;		Unchanged: 0/0
  3014 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  3015 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3016 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3017 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3018 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3019 ;;Total ram usage:        0 bytes
  3020 ;; Hardware stack levels used: 1
  3021 ;; This function calls:
  3022 ;;		Nothing
  3023 ;; This function is called by:
  3024 ;;		_INT0_ISR
  3025 ;; This function uses a non-reentrant model
  3026 ;;
  3027                           
  3028                           	psect	text29
  3029   002EF0                     __ptext29:
  3030                           	callstack 0
  3031   002EF0                     i2_UART1_NewLine:
  3032                           	callstack 120
  3033   002EF0                     
  3034                           ;maincode1.c: 61:     U1TXB = 0x0A;
  3035   002EF0  0E0A               	movlw	10
  3036   002EF2  0102               	movlb	2	; () banked
  3037   002EF4  6FA3               	movwf	163,b	;volatile
  3038   002EF6                     i2l103:
  3039                           
  3040                           ; BSR set to: 2
  3041   002EF6  AFB2               	btfss	178,7,b	;volatile
  3042   002EF8  EF80  F017         	goto	i2u28_41
  3043   002EFC  EF82  F017         	goto	i2u28_40
  3044   002F00                     i2u28_41:
  3045   002F00  EF7B  F017         	goto	i2l103
  3046   002F04                     i2u28_40:
  3047   002F04                     
  3048                           ; BSR set to: 2
  3049                           ;maincode1.c: 63:     U1TXB = 0x0D;
  3050   002F04  0E0D               	movlw	13
  3051   002F06  6FA3               	movwf	163,b	;volatile
  3052   002F08                     i2l106:
  3053                           
  3054                           ; BSR set to: 2
  3055   002F08  AFB2               	btfss	178,7,b	;volatile
  3056   002F0A  EF89  F017         	goto	i2u29_41
  3057   002F0E  EF8B  F017         	goto	i2u29_40
  3058   002F12                     i2u29_41:
  3059   002F12  EF84  F017         	goto	i2l106
  3060   002F16                     i2u29_40:
  3061   002F16                     
  3062                           ; BSR set to: 2
  3063   002F16  0012               	return		;funcret
  3064   002F18                     __end_ofi2_UART1_NewLine:
  3065                           	callstack 0
  3066                           
  3067 ;; *************** function i2_ADC_GetValue *****************
  3068 ;; Defined at:
  3069 ;;		line 40 in file "maincode1.c"
  3070 ;; Parameters:    Size  Location     Type
  3071 ;;  canal           1    wreg     unsigned char 
  3072 ;; Auto vars:     Size  Location     Type
  3073 ;;  canal           1    4[COMRAM] unsigned char 
  3074 ;; Return value:  Size  Location     Type
  3075 ;;                  2    0[COMRAM] unsigned int 
  3076 ;; Registers used:
  3077 ;;		wreg, status,2, status,0
  3078 ;; Tracked objects:
  3079 ;;		On entry : 0/0
  3080 ;;		On exit  : 0/0
  3081 ;;		Unchanged: 0/0
  3082 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  3083 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3084 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3085 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3086 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3087 ;;Total ram usage:        5 bytes
  3088 ;; Hardware stack levels used: 1
  3089 ;; This function calls:
  3090 ;;		Nothing
  3091 ;; This function is called by:
  3092 ;;		_INT0_ISR
  3093 ;; This function uses a non-reentrant model
  3094 ;;
  3095                           
  3096                           	psect	text30
  3097   002E9C                     __ptext30:
  3098                           	callstack 0
  3099   002E9C                     i2_ADC_GetValue:
  3100                           	callstack 120
  3101                           
  3102                           ; BSR set to: 2
  3103                           ;incstack = 0
  3104                           ;i2ADC_GetValue@canal stored from wreg
  3105   002E9C  6E05               	movwf	i2ADC_GetValue@canal^(0+1280),c
  3106   002E9E                     
  3107                           ;maincode1.c: 41:     ADPCH = canal;
  3108   002E9E  C505  F3EC         	movff	i2ADC_GetValue@canal,1004	;volatile
  3109   002EA2                     
  3110                           ;maincode1.c: 42:     ADCON0bits.GO = 1;
  3111   002EA2  0103               	movlb	3	; () banked
  3112   002EA4  81F3               	bsf	243,0,b	;volatile
  3113   002EA6                     i2l88:
  3114                           
  3115                           ; BSR set to: 3
  3116   002EA6  B1F3               	btfsc	243,0,b	;volatile
  3117   002EA8  EF58  F017         	goto	i2u57_41
  3118   002EAC  EF5A  F017         	goto	i2u57_40
  3119   002EB0                     i2u57_41:
  3120   002EB0  EF53  F017         	goto	i2l88
  3121   002EB4                     i2u57_40:
  3122   002EB4                     
  3123                           ; BSR set to: 3
  3124                           ;maincode1.c: 44:     return ((ADRESH << 8) + ADRESL);
  3125   002EB4  51EB               	movf	235,w,b	;volatile
  3126   002EB6  6E04               	movwf	(??i2_ADC_GetValue+1)^(0+1280),c
  3127   002EB8  6A03               	clrf	??i2_ADC_GetValue^(0+1280),c
  3128   002EBA  51EA               	movf	234,w,b	;volatile
  3129   002EBC  2403               	addwf	??i2_ADC_GetValue^(0+1280),w,c
  3130   002EBE  6E01               	movwf	?i2_ADC_GetValue^(0+1280),c
  3131   002EC0  0E00               	movlw	0
  3132   002EC2  2004               	addwfc	(??i2_ADC_GetValue+1)^(0+1280),w,c
  3133   002EC4  6E02               	movwf	(?i2_ADC_GetValue+1)^(0+1280),c
  3134   002EC6                     
  3135                           ; BSR set to: 3
  3136   002EC6  0012               	return		;funcret
  3137   002EC8                     __end_ofi2_ADC_GetValue:
  3138                           	callstack 0
  3139                           
  3140                           ;
  3141                           ; Interrupt Vector Table @ 0x8
  3142                           ;
  3143                           
  3144                           	psect	ivt0x8
  3145   000008                     __pivt0x8:
  3146                           	callstack 0
  3147   000008                     ivt0x8_base:
  3148                           	callstack 0
  3149                           
  3150                           ; Vector 0 : SWINT
  3151   000008  0040               	dw	ivt0x8_undefint shr (0+2)
  3152                           
  3153                           ; Vector 1 : HLVD
  3154   00000A  0040               	dw	ivt0x8_undefint shr (0+2)
  3155                           
  3156                           ; Vector 2 : OSF
  3157   00000C  0040               	dw	ivt0x8_undefint shr (0+2)
  3158                           
  3159                           ; Vector 3 : CSW
  3160   00000E  0040               	dw	ivt0x8_undefint shr (0+2)
  3161                           
  3162                           ; Vector 4 : Undefined
  3163   000010  0040               	dw	ivt0x8_undefint shr (0+2)
  3164                           
  3165                           ; Vector 5 : CLC1
  3166   000012  0040               	dw	ivt0x8_undefint shr (0+2)
  3167                           
  3168                           ; Vector 6 : Undefined
  3169   000014  0040               	dw	ivt0x8_undefint shr (0+2)
  3170                           
  3171                           ; Vector 7 : IOC
  3172   000016  0040               	dw	ivt0x8_undefint shr (0+2)
  3173                           
  3174                           ; Vector 8 : INT0
  3175   000018  09E8               	dw	_INT0_ISR shr (0+2)
  3176                           
  3177                           ; Vector 9 : ZCD
  3178   00001A  0040               	dw	ivt0x8_undefint shr (0+2)
  3179                           
  3180                           ; Vector 10 : AD
  3181   00001C  0040               	dw	ivt0x8_undefint shr (0+2)
  3182                           
  3183                           ; Vector 11 : ACT
  3184   00001E  0040               	dw	ivt0x8_undefint shr (0+2)
  3185                           
  3186                           ; Vector 12 : CMP1
  3187   000020  0040               	dw	ivt0x8_undefint shr (0+2)
  3188                           
  3189                           ; Vector 13 : SMT1
  3190   000022  0040               	dw	ivt0x8_undefint shr (0+2)
  3191                           
  3192                           ; Vector 14 : SMT1PRA
  3193   000024  0040               	dw	ivt0x8_undefint shr (0+2)
  3194                           
  3195                           ; Vector 15 : SMT1PRW
  3196   000026  0040               	dw	ivt0x8_undefint shr (0+2)
  3197                           
  3198                           ; Vector 16 : ADT
  3199   000028  0040               	dw	ivt0x8_undefint shr (0+2)
  3200                           
  3201                           ; Vector 17 : Undefined
  3202   00002A  0040               	dw	ivt0x8_undefint shr (0+2)
  3203                           
  3204                           ; Vector 18 : Undefined
  3205   00002C  0040               	dw	ivt0x8_undefint shr (0+2)
  3206                           
  3207                           ; Vector 19 : Undefined
  3208   00002E  0040               	dw	ivt0x8_undefint shr (0+2)
  3209                           
  3210                           ; Vector 20 : DMA1SCNT
  3211   000030  0040               	dw	ivt0x8_undefint shr (0+2)
  3212                           
  3213                           ; Vector 21 : DMA1DCNT
  3214   000032  0040               	dw	ivt0x8_undefint shr (0+2)
  3215                           
  3216                           ; Vector 22 : DMA1OR
  3217   000034  0040               	dw	ivt0x8_undefint shr (0+2)
  3218                           
  3219                           ; Vector 23 : DMA1A
  3220   000036  0040               	dw	ivt0x8_undefint shr (0+2)
  3221                           
  3222                           ; Vector 24 : SPI1RX
  3223   000038  0040               	dw	ivt0x8_undefint shr (0+2)
  3224                           
  3225                           ; Vector 25 : SPI1TX
  3226   00003A  0040               	dw	ivt0x8_undefint shr (0+2)
  3227                           
  3228                           ; Vector 26 : SPI1
  3229   00003C  0040               	dw	ivt0x8_undefint shr (0+2)
  3230                           
  3231                           ; Vector 27 : TMR2
  3232   00003E  0040               	dw	ivt0x8_undefint shr (0+2)
  3233                           
  3234                           ; Vector 28 : TMR1
  3235   000040  0040               	dw	ivt0x8_undefint shr (0+2)
  3236                           
  3237                           ; Vector 29 : TMR1G
  3238   000042  0040               	dw	ivt0x8_undefint shr (0+2)
  3239                           
  3240                           ; Vector 30 : CCP1
  3241   000044  0040               	dw	ivt0x8_undefint shr (0+2)
  3242                           
  3243                           ; Vector 31 : TMR0
  3244   000046  0040               	dw	ivt0x8_undefint shr (0+2)
  3245                           
  3246                           ; Vector 32 : U1RX
  3247   000048  0040               	dw	ivt0x8_undefint shr (0+2)
  3248                           
  3249                           ; Vector 33 : U1TX
  3250   00004A  0040               	dw	ivt0x8_undefint shr (0+2)
  3251                           
  3252                           ; Vector 34 : U1E
  3253   00004C  0040               	dw	ivt0x8_undefint shr (0+2)
  3254                           
  3255                           ; Vector 35 : U1
  3256   00004E  0040               	dw	ivt0x8_undefint shr (0+2)
  3257                           
  3258                           ; Vector 36 : Undefined
  3259   000050  0040               	dw	ivt0x8_undefint shr (0+2)
  3260                           
  3261                           ; Vector 37 : Undefined
  3262   000052  0040               	dw	ivt0x8_undefint shr (0+2)
  3263                           
  3264                           ; Vector 38 : PWM1PR
  3265   000054  0040               	dw	ivt0x8_undefint shr (0+2)
  3266                           
  3267                           ; Vector 39 : PWM1
  3268   000056  0040               	dw	ivt0x8_undefint shr (0+2)
  3269                           
  3270                           ; Vector 40 : SPI2RX
  3271   000058  0040               	dw	ivt0x8_undefint shr (0+2)
  3272                           
  3273                           ; Vector 41 : SPI2TX
  3274   00005A  0040               	dw	ivt0x8_undefint shr (0+2)
  3275                           
  3276                           ; Vector 42 : SPI2
  3277   00005C  0040               	dw	ivt0x8_undefint shr (0+2)
  3278                           
  3279                           ; Vector 43 : Undefined
  3280   00005E  0040               	dw	ivt0x8_undefint shr (0+2)
  3281                           
  3282                           ; Vector 44 : TMR3
  3283   000060  0040               	dw	ivt0x8_undefint shr (0+2)
  3284                           
  3285                           ; Vector 45 : TMR3G
  3286   000062  0040               	dw	ivt0x8_undefint shr (0+2)
  3287                           
  3288                           ; Vector 46 : PWM2PR
  3289   000064  0040               	dw	ivt0x8_undefint shr (0+2)
  3290                           
  3291                           ; Vector 47 : PWM2
  3292   000066  0040               	dw	ivt0x8_undefint shr (0+2)
  3293                           
  3294                           ; Vector 48 : INT1
  3295   000068  0040               	dw	ivt0x8_undefint shr (0+2)
  3296                           
  3297                           ; Vector 49 : CLC2
  3298   00006A  0040               	dw	ivt0x8_undefint shr (0+2)
  3299                           
  3300                           ; Vector 50 : CWG1
  3301   00006C  0040               	dw	ivt0x8_undefint shr (0+2)
  3302                           
  3303                           ; Vector 51 : NCO1
  3304   00006E  0040               	dw	ivt0x8_undefint shr (0+2)
  3305                           
  3306                           ; Vector 52 : DMA2SCNT
  3307   000070  0040               	dw	ivt0x8_undefint shr (0+2)
  3308                           
  3309                           ; Vector 53 : DMA2DCNT
  3310   000072  0040               	dw	ivt0x8_undefint shr (0+2)
  3311                           
  3312                           ; Vector 54 : DMA2OR
  3313   000074  0040               	dw	ivt0x8_undefint shr (0+2)
  3314                           
  3315                           ; Vector 55 : DMA2A
  3316   000076  0040               	dw	ivt0x8_undefint shr (0+2)
  3317                           
  3318                           ; Vector 56 : I2C1RX
  3319   000078  0040               	dw	ivt0x8_undefint shr (0+2)
  3320                           
  3321                           ; Vector 57 : I2C1TX
  3322   00007A  0040               	dw	ivt0x8_undefint shr (0+2)
  3323                           
  3324                           ; Vector 58 : I2C1
  3325   00007C  0040               	dw	ivt0x8_undefint shr (0+2)
  3326                           
  3327                           ; Vector 59 : I2C1E
  3328   00007E  0040               	dw	ivt0x8_undefint shr (0+2)
  3329                           
  3330                           ; Vector 60 : Undefined
  3331   000080  0040               	dw	ivt0x8_undefint shr (0+2)
  3332                           
  3333                           ; Vector 61 : CLC3
  3334   000082  0040               	dw	ivt0x8_undefint shr (0+2)
  3335                           
  3336                           ; Vector 62 : PWM3PR
  3337   000084  0040               	dw	ivt0x8_undefint shr (0+2)
  3338                           
  3339                           ; Vector 63 : PWM3
  3340   000086  0040               	dw	ivt0x8_undefint shr (0+2)
  3341                           
  3342                           ; Vector 64 : U2RX
  3343   000088  0040               	dw	ivt0x8_undefint shr (0+2)
  3344                           
  3345                           ; Vector 65 : U2TX
  3346   00008A  0040               	dw	ivt0x8_undefint shr (0+2)
  3347                           
  3348                           ; Vector 66 : U2E
  3349   00008C  0040               	dw	ivt0x8_undefint shr (0+2)
  3350                           
  3351                           ; Vector 67 : U2
  3352   00008E  0040               	dw	ivt0x8_undefint shr (0+2)
  3353                           
  3354                           ; Vector 68 : TMR5
  3355   000090  0040               	dw	ivt0x8_undefint shr (0+2)
  3356                           
  3357                           ; Vector 69 : TMR5G
  3358   000092  0040               	dw	ivt0x8_undefint shr (0+2)
  3359                           
  3360                           ; Vector 70 : CCP2
  3361   000094  0040               	dw	ivt0x8_undefint shr (0+2)
  3362                           
  3363                           ; Vector 71 : SCAN
  3364   000096  0040               	dw	ivt0x8_undefint shr (0+2)
  3365                           
  3366                           ; Vector 72 : U3RX
  3367   000098  0040               	dw	ivt0x8_undefint shr (0+2)
  3368                           
  3369                           ; Vector 73 : U3TX
  3370   00009A  0040               	dw	ivt0x8_undefint shr (0+2)
  3371                           
  3372                           ; Vector 74 : U3E
  3373   00009C  0040               	dw	ivt0x8_undefint shr (0+2)
  3374                           
  3375                           ; Vector 75 : U3
  3376   00009E  0040               	dw	ivt0x8_undefint shr (0+2)
  3377                           
  3378                           ; Vector 76 : Undefined
  3379   0000A0  0040               	dw	ivt0x8_undefint shr (0+2)
  3380                           
  3381                           ; Vector 77 : CLC4
  3382   0000A2  0040               	dw	ivt0x8_undefint shr (0+2)
  3383                           
  3384                           ; Vector 78 : Undefined
  3385   0000A4  0040               	dw	ivt0x8_undefint shr (0+2)
  3386                           
  3387                           ; Vector 79 : Undefined
  3388   0000A6  0040               	dw	ivt0x8_undefint shr (0+2)
  3389                           
  3390                           ; Vector 80 : INT2
  3391   0000A8  0040               	dw	ivt0x8_undefint shr (0+2)
  3392                           
  3393                           ; Vector 81 : CLC5
  3394   0000AA  0040               	dw	ivt0x8_undefint shr (0+2)
  3395                           
  3396                           ; Vector 82 : CWG2
  3397   0000AC  0040               	dw	ivt0x8_undefint shr (0+2)
  3398                           
  3399                           ; Vector 83 : NCO2
  3400   0000AE  0040               	dw	ivt0x8_undefint shr (0+2)
  3401                           
  3402                           ; Vector 84 : DMA3SCNT
  3403   0000B0  0040               	dw	ivt0x8_undefint shr (0+2)
  3404                           
  3405                           ; Vector 85 : DMA3DCNT
  3406   0000B2  0040               	dw	ivt0x8_undefint shr (0+2)
  3407                           
  3408                           ; Vector 86 : DMA3OR
  3409   0000B4  0040               	dw	ivt0x8_undefint shr (0+2)
  3410                           
  3411                           ; Vector 87 : DMA3A
  3412   0000B6  0040               	dw	ivt0x8_undefint shr (0+2)
  3413                           
  3414                           ; Vector 88 : CCP3
  3415   0000B8  0040               	dw	ivt0x8_undefint shr (0+2)
  3416                           
  3417                           ; Vector 89 : CLC6
  3418   0000BA  0040               	dw	ivt0x8_undefint shr (0+2)
  3419                           
  3420                           ; Vector 90 : CWG3
  3421   0000BC  0040               	dw	ivt0x8_undefint shr (0+2)
  3422                           
  3423                           ; Vector 91 : TMR4
  3424   0000BE  0040               	dw	ivt0x8_undefint shr (0+2)
  3425                           
  3426                           ; Vector 92 : DMA4SCNT
  3427   0000C0  0040               	dw	ivt0x8_undefint shr (0+2)
  3428                           
  3429                           ; Vector 93 : DMA4DCNT
  3430   0000C2  0040               	dw	ivt0x8_undefint shr (0+2)
  3431                           
  3432                           ; Vector 94 : DMA4OR
  3433   0000C4  0040               	dw	ivt0x8_undefint shr (0+2)
  3434                           
  3435                           ; Vector 95 : DMA4A
  3436   0000C6  0040               	dw	ivt0x8_undefint shr (0+2)
  3437                           
  3438                           ; Vector 96 : U4RX
  3439   0000C8  0040               	dw	ivt0x8_undefint shr (0+2)
  3440                           
  3441                           ; Vector 97 : U4TX
  3442   0000CA  0040               	dw	ivt0x8_undefint shr (0+2)
  3443                           
  3444                           ; Vector 98 : U4E
  3445   0000CC  0040               	dw	ivt0x8_undefint shr (0+2)
  3446                           
  3447                           ; Vector 99 : U4
  3448   0000CE  0040               	dw	ivt0x8_undefint shr (0+2)
  3449                           
  3450                           ; Vector 100 : DMA5SCNT
  3451   0000D0  0040               	dw	ivt0x8_undefint shr (0+2)
  3452                           
  3453                           ; Vector 101 : DMA5DCNT
  3454   0000D2  0040               	dw	ivt0x8_undefint shr (0+2)
  3455                           
  3456                           ; Vector 102 : DMA5OR
  3457   0000D4  0040               	dw	ivt0x8_undefint shr (0+2)
  3458                           
  3459                           ; Vector 103 : DMA5A
  3460   0000D6  0040               	dw	ivt0x8_undefint shr (0+2)
  3461                           
  3462                           ; Vector 104 : U5RX
  3463   0000D8  0040               	dw	ivt0x8_undefint shr (0+2)
  3464                           
  3465                           ; Vector 105 : U5TX
  3466   0000DA  0040               	dw	ivt0x8_undefint shr (0+2)
  3467                           
  3468                           ; Vector 106 : U5E
  3469   0000DC  0040               	dw	ivt0x8_undefint shr (0+2)
  3470                           
  3471                           ; Vector 107 : U5
  3472   0000DE  0040               	dw	ivt0x8_undefint shr (0+2)
  3473                           
  3474                           ; Vector 108 : DMA6SCNT
  3475   0000E0  0040               	dw	ivt0x8_undefint shr (0+2)
  3476                           
  3477                           ; Vector 109 : DMA6DCNT
  3478   0000E2  0040               	dw	ivt0x8_undefint shr (0+2)
  3479                           
  3480                           ; Vector 110 : DMA6OR
  3481   0000E4  0040               	dw	ivt0x8_undefint shr (0+2)
  3482                           
  3483                           ; Vector 111 : DMA6A
  3484   0000E6  0040               	dw	ivt0x8_undefint shr (0+2)
  3485                           
  3486                           ; Vector 112 : Undefined
  3487   0000E8  0040               	dw	ivt0x8_undefint shr (0+2)
  3488                           
  3489                           ; Vector 113 : CLC7
  3490   0000EA  0040               	dw	ivt0x8_undefint shr (0+2)
  3491                           
  3492                           ; Vector 114 : CMP2
  3493   0000EC  0040               	dw	ivt0x8_undefint shr (0+2)
  3494                           
  3495                           ; Vector 115 : NCO3
  3496   0000EE  0040               	dw	ivt0x8_undefint shr (0+2)
  3497                           
  3498                           ; Vector 116 : Undefined
  3499   0000F0  0040               	dw	ivt0x8_undefint shr (0+2)
  3500                           
  3501                           ; Vector 117 : Undefined
  3502   0000F2  0040               	dw	ivt0x8_undefint shr (0+2)
  3503                           
  3504                           ; Vector 118 : Undefined
  3505   0000F4  0040               	dw	ivt0x8_undefint shr (0+2)
  3506                           
  3507                           ; Vector 119 : Undefined
  3508   0000F6  0040               	dw	ivt0x8_undefint shr (0+2)
  3509                           
  3510                           ; Vector 120 : NVM
  3511   0000F8  0040               	dw	ivt0x8_undefint shr (0+2)
  3512                           
  3513                           ; Vector 121 : CLC8
  3514   0000FA  0040               	dw	ivt0x8_undefint shr (0+2)
  3515                           
  3516                           ; Vector 122 : CRC
  3517   0000FC  0040               	dw	ivt0x8_undefint shr (0+2)
  3518                           
  3519                           ; Vector 123 : TMR6
  3520   0000FE  0040               	dw	ivt0x8_undefint shr (0+2)
  3521   000100                     ivt0x8_undefint:
  3522                           	callstack 0
  3523   000100  00FF               	reset	
  3524                           
  3525                           	psect	rparam
  3526   000000                     
  3527                           	psect	idloc
  3528                           
  3529                           ;Config register IDLOC0 @ 0x200000
  3530                           ;	unspecified, using default values
  3531   200000                     	org	2097152
  3532   200000  0FFF               	dw	4095
  3533                           
  3534                           ;Config register IDLOC1 @ 0x200002
  3535                           ;	unspecified, using default values
  3536   200002                     	org	2097154
  3537   200002  0FFF               	dw	4095
  3538                           
  3539                           ;Config register IDLOC2 @ 0x200004
  3540                           ;	unspecified, using default values
  3541   200004                     	org	2097156
  3542   200004  0FFF               	dw	4095
  3543                           
  3544                           ;Config register IDLOC3 @ 0x200006
  3545                           ;	unspecified, using default values
  3546   200006                     	org	2097158
  3547   200006  0FFF               	dw	4095
  3548                           
  3549                           ;Config register IDLOC4 @ 0x200008
  3550                           ;	unspecified, using default values
  3551   200008                     	org	2097160
  3552   200008  0FFF               	dw	4095
  3553                           
  3554                           ;Config register IDLOC5 @ 0x20000A
  3555                           ;	unspecified, using default values
  3556   20000A                     	org	2097162
  3557   20000A  0FFF               	dw	4095
  3558                           
  3559                           ;Config register IDLOC6 @ 0x20000C
  3560                           ;	unspecified, using default values
  3561   20000C                     	org	2097164
  3562   20000C  0FFF               	dw	4095
  3563                           
  3564                           ;Config register IDLOC7 @ 0x20000E
  3565                           ;	unspecified, using default values
  3566   20000E                     	org	2097166
  3567   20000E  0FFF               	dw	4095
  3568                           
  3569                           ;Config register IDLOC8 @ 0x200010
  3570                           ;	unspecified, using default values
  3571   200010                     	org	2097168
  3572   200010  0FFF               	dw	4095
  3573                           
  3574                           ;Config register IDLOC9 @ 0x200012
  3575                           ;	unspecified, using default values
  3576   200012                     	org	2097170
  3577   200012  0FFF               	dw	4095
  3578                           
  3579                           ;Config register IDLOC10 @ 0x200014
  3580                           ;	unspecified, using default values
  3581   200014                     	org	2097172
  3582   200014  0FFF               	dw	4095
  3583                           
  3584                           ;Config register IDLOC11 @ 0x200016
  3585                           ;	unspecified, using default values
  3586   200016                     	org	2097174
  3587   200016  0FFF               	dw	4095
  3588                           
  3589                           ;Config register IDLOC12 @ 0x200018
  3590                           ;	unspecified, using default values
  3591   200018                     	org	2097176
  3592   200018  0FFF               	dw	4095
  3593                           
  3594                           ;Config register IDLOC13 @ 0x20001A
  3595                           ;	unspecified, using default values
  3596   20001A                     	org	2097178
  3597   20001A  0FFF               	dw	4095
  3598                           
  3599                           ;Config register IDLOC14 @ 0x20001C
  3600                           ;	unspecified, using default values
  3601   20001C                     	org	2097180
  3602   20001C  0FFF               	dw	4095
  3603                           
  3604                           ;Config register IDLOC15 @ 0x20001E
  3605                           ;	unspecified, using default values
  3606   20001E                     	org	2097182
  3607   20001E  0FFF               	dw	4095
  3608                           
  3609                           ;Config register IDLOC16 @ 0x200020
  3610                           ;	unspecified, using default values
  3611   200020                     	org	2097184
  3612   200020  0FFF               	dw	4095
  3613                           
  3614                           ;Config register IDLOC17 @ 0x200022
  3615                           ;	unspecified, using default values
  3616   200022                     	org	2097186
  3617   200022  0FFF               	dw	4095
  3618                           
  3619                           ;Config register IDLOC18 @ 0x200024
  3620                           ;	unspecified, using default values
  3621   200024                     	org	2097188
  3622   200024  0FFF               	dw	4095
  3623                           
  3624                           ;Config register IDLOC19 @ 0x200026
  3625                           ;	unspecified, using default values
  3626   200026                     	org	2097190
  3627   200026  0FFF               	dw	4095
  3628                           
  3629                           ;Config register IDLOC20 @ 0x200028
  3630                           ;	unspecified, using default values
  3631   200028                     	org	2097192
  3632   200028  0FFF               	dw	4095
  3633                           
  3634                           ;Config register IDLOC21 @ 0x20002A
  3635                           ;	unspecified, using default values
  3636   20002A                     	org	2097194
  3637   20002A  0FFF               	dw	4095
  3638                           
  3639                           ;Config register IDLOC22 @ 0x20002C
  3640                           ;	unspecified, using default values
  3641   20002C                     	org	2097196
  3642   20002C  0FFF               	dw	4095
  3643                           
  3644                           ;Config register IDLOC23 @ 0x20002E
  3645                           ;	unspecified, using default values
  3646   20002E                     	org	2097198
  3647   20002E  0FFF               	dw	4095
  3648                           
  3649                           ;Config register IDLOC24 @ 0x200030
  3650                           ;	unspecified, using default values
  3651   200030                     	org	2097200
  3652   200030  0FFF               	dw	4095
  3653                           
  3654                           ;Config register IDLOC25 @ 0x200032
  3655                           ;	unspecified, using default values
  3656   200032                     	org	2097202
  3657   200032  0FFF               	dw	4095
  3658                           
  3659                           ;Config register IDLOC26 @ 0x200034
  3660                           ;	unspecified, using default values
  3661   200034                     	org	2097204
  3662   200034  0FFF               	dw	4095
  3663                           
  3664                           ;Config register IDLOC27 @ 0x200036
  3665                           ;	unspecified, using default values
  3666   200036                     	org	2097206
  3667   200036  0FFF               	dw	4095
  3668                           
  3669                           ;Config register IDLOC28 @ 0x200038
  3670                           ;	unspecified, using default values
  3671   200038                     	org	2097208
  3672   200038  0FFF               	dw	4095
  3673                           
  3674                           ;Config register IDLOC29 @ 0x20003A
  3675                           ;	unspecified, using default values
  3676   20003A                     	org	2097210
  3677   20003A  0FFF               	dw	4095
  3678                           
  3679                           ;Config register IDLOC30 @ 0x20003C
  3680                           ;	unspecified, using default values
  3681   20003C                     	org	2097212
  3682   20003C  0FFF               	dw	4095
  3683                           
  3684                           ;Config register IDLOC31 @ 0x20003E
  3685                           ;	unspecified, using default values
  3686   20003E                     	org	2097214
  3687   20003E  0FFF               	dw	4095
  3688                           
  3689                           	psect	config
  3690                           
  3691                           ;Config register CONFIG1 @ 0x300000
  3692                           ;	External Oscillator Selection
  3693                           ;	FEXTOSC = ECH, EC (external clock) above 8 MHz
  3694                           ;	Reset Oscillator Selection
  3695                           ;	RSTOSC = EXTOSC, EXTOSC operating per FEXTOSC bits (device manufacturing default)
  3696   300000                     	org	3145728
  3697   300000  FF                 	db	255
  3698                           
  3699                           ;Config register CONFIG2 @ 0x300001
  3700                           ;	Clock out Enable bit
  3701                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
  3702                           ;	PRLOCKED One-Way Set Enable bit
  3703                           ;	PR1WAY = ON, PRLOCKED bit can be cleared and set only once
  3704                           ;	Clock Switch Enable bit
  3705                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
  3706                           ;	Fail-Safe Clock Monitor Enable bit
  3707                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
  3708   300001                     	org	3145729
  3709   300001  FF                 	db	255
  3710                           
  3711                           ;Config register CONFIG3 @ 0x300002
  3712                           ;	MCLR Enable bit
  3713                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
  3714                           ;	Power-up timer selection bits
  3715                           ;	PWRTS = PWRT_16, PWRT set at 16ms
  3716                           ;	Multi-vector enable bit
  3717                           ;	MVECEN = ON, Multi-vector enabled, Vector table used for interrupts
  3718                           ;	IVTLOCK bit One-way set enable bit
  3719                           ;	IVT1WAY = ON, IVTLOCKED bit can be cleared and set only once
  3720                           ;	Low Power BOR Enable bit
  3721                           ;	LPBOREN = OFF, Low-Power BOR disabled
  3722                           ;	Brown-out Reset Enable bits
  3723                           ;	BOREN = OFF, Brown-out Reset disabled
  3724   300002                     	org	3145730
  3725   300002  3B                 	db	59
  3726                           
  3727                           ;Config register CONFIG4 @ 0x300003
  3728                           ;	Brown-out Reset Voltage Selection bits
  3729                           ;	BORV = VBOR_1P9, Brown-out Reset Voltage (VBOR) set to 1.9V
  3730                           ;	ZCD Disable bit
  3731                           ;	ZCD = OFF, ZCD module is disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCD
      +                          CON
  3732                           ;	PPSLOCK bit One-Way Set Enable bit
  3733                           ;	PPS1WAY = ON, PPSLOCKED bit can be cleared and set only once; PPS registers remain loc
      +                          ked after one clear/set cycle
  3734                           ;	Stack Full/Underflow Reset Enable bit
  3735                           ;	STVREN = ON, Stack full/underflow will cause Reset
  3736                           ;	Low Voltage Programming Enable bit
  3737                           ;	LVP = OFF, HV on MCLR/VPP must be used for programming
  3738                           ;	Extended Instruction Set Enable bit
  3739                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
  3740   300003                     	org	3145731
  3741   300003  DF                 	db	223
  3742                           
  3743                           ;Config register CONFIG5 @ 0x300004
  3744                           ;	WDT Period selection bits
  3745                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  3746                           ;	WDT operating mode
  3747                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
  3748   300004                     	org	3145732
  3749   300004  9F                 	db	159
  3750                           
  3751                           ;Config register CONFIG6 @ 0x300005
  3752                           ;	WDT Window Select bits
  3753                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
  3754                           ;	WDT input clock selector
  3755                           ;	WDTCCS = SC, Software Control
  3756   300005                     	org	3145733
  3757   300005  FF                 	db	255
  3758                           
  3759                           ;Config register CONFIG7 @ 0x300006
  3760                           ;	Boot Block Size selection bits
  3761                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
  3762                           ;	Boot Block enable bit
  3763                           ;	BBEN = OFF, Boot block disabled
  3764                           ;	Storage Area Flash enable bit
  3765                           ;	SAFEN = OFF, SAF disabled
  3766                           ;	Background Debugger
  3767                           ;	DEBUG = OFF, Background Debugger disabled
  3768   300006                     	org	3145734
  3769   300006  FF                 	db	255
  3770                           
  3771                           ;Config register CONFIG8 @ 0x300007
  3772                           ;	Boot Block Write Protection bit
  3773                           ;	WRTB = OFF, Boot Block not Write protected
  3774                           ;	Configuration Register Write Protection bit
  3775                           ;	WRTC = OFF, Configuration registers not Write protected
  3776                           ;	Data EEPROM Write Protection bit
  3777                           ;	WRTD = OFF, Data EEPROM not Write protected
  3778                           ;	SAF Write protection bit
  3779                           ;	WRTSAF = OFF, SAF not Write Protected
  3780                           ;	Application Block write protection bit
  3781                           ;	WRTAPP = OFF, Application Block not write protected
  3782   300007                     	org	3145735
  3783   300007  FF                 	db	255
  3784                           
  3785                           ; Padding undefined space
  3786   300008                     	org	3145736
  3787   300008  FF                 	db	255
  3788                           
  3789                           ;Config register CONFIG10 @ 0x300009
  3790                           ;	PFM and Data EEPROM Code Protection bit
  3791                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
  3792   300009                     	org	3145737
  3793   300009  FF                 	db	255
  3794                           tosu	equ	0x4FF
  3795                           tosh	equ	0x4FE
  3796                           tosl	equ	0x4FD
  3797                           stkptr	equ	0x4FC
  3798                           pclatu	equ	0x4FB
  3799                           pclath	equ	0x4FA
  3800                           pcl	equ	0x4F9
  3801                           tblptru	equ	0x4F8
  3802                           tblptrh	equ	0x4F7
  3803                           tblptrl	equ	0x4F6
  3804                           tablat	equ	0x4F5
  3805                           prodh	equ	0x4F4
  3806                           prodl	equ	0x4F3
  3807                           indf0	equ	0x4EF
  3808                           postinc0	equ	0x4EE
  3809                           postdec0	equ	0x4ED
  3810                           preinc0	equ	0x4EC
  3811                           plusw0	equ	0x4EB
  3812                           fsr0h	equ	0x4EA
  3813                           fsr0l	equ	0x4E9
  3814                           wreg	equ	0x4E8
  3815                           indf1	equ	0x4E7
  3816                           postinc1	equ	0x4E6
  3817                           postdec1	equ	0x4E5
  3818                           preinc1	equ	0x4E4
  3819                           plusw1	equ	0x4E3
  3820                           fsr1h	equ	0x4E2
  3821                           fsr1l	equ	0x4E1
  3822                           bsr	equ	0x4E0
  3823                           indf2	equ	0x4DF
  3824                           postinc2	equ	0x4DE
  3825                           postdec2	equ	0x4DD
  3826                           preinc2	equ	0x4DC
  3827                           plusw2	equ	0x4DB
  3828                           fsr2h	equ	0x4DA
  3829                           fsr2l	equ	0x4D9
  3830                           status	equ	0x4D8

Data Sizes:
    Strings     50
    Constant    0
    Data        0
    BSS         5
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     32      37
    BANK5           160      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0
    BANK32          256      0       0
    BANK33          256      0       0
    BANK34          256      0       0
    BANK35          256      0       0
    BANK36          256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_8(CODE[12]), STR_7(CODE[12]), STR_6(CODE[6]), STR_5(CODE[6]), 
		 -> STR_4(CODE[16]), STR_3(CODE[10]), STR_2(CODE[16]), STR_1(CODE[10]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_8(CODE[12]), STR_7(CODE[12]), STR_6(CODE[6]), STR_5(CODE[6]), 
		 -> STR_4(CODE[16]), STR_3(CODE[10]), STR_2(CODE[16]), STR_1(CODE[10]), 

    ESCRIBE_MENSAJE2@cadena	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_6(CODE[6]), STR_5(CODE[6]), STR_2(CODE[16]), STR_1(CODE[10]), 

    UART1_String_Send@cadena	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_8(CODE[12]), STR_7(CODE[12]), STR_4(CODE[16]), STR_3(CODE[10]), 


Critical Paths under _main in COMRAM

    _main->_convierte
    _pantallazo->_ESCRIBE_MENSAJE2
    _pantallazo->_UART1_String_Send
    _UART1_String_Send->_strlen
    _POS_CURSOR->_ENVIA_LCD_CMD
    _ESCRIBE_MENSAJE2->_strlen
    _ENVIA_CHAR->_ENVIA_NIBBLE
    _ENVIA_CHAR->_LEER_LCD
    _convierte->___lwdiv
    ___lwdiv->___lwmod
    _configuro->_LCD_INIT
    _LCD_INIT->_CURSOR_ONOFF
    _LCD_INIT->_LCD_CONFIG
    _LCD_CONFIG->_ENVIA_LCD_CMD
    _CURSOR_ONOFF->_ENVIA_LCD_CMD
    _CURSOR_HOME->_ENVIA_LCD_CMD
    _BORRAR_LCD->_ENVIA_LCD_CMD
    _ENVIA_LCD_CMD->_ENVIA_NIBBLE
    _ENVIA_LCD_CMD->_LEER_LCD

Critical Paths under _INT0_ISR in COMRAM

    _INT0_ISR->i2_convierte
    i2_convierte->i2___lwdiv
    i2___lwdiv->i2___lwmod
    i2_UART1_String_Send->i2_strlen

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT0_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT0_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT0_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INT0_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INT0_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INT0_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INT0_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INT0_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INT0_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INT0_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INT0_ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INT0_ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INT0_ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INT0_ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INT0_ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INT0_ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INT0_ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INT0_ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INT0_ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INT0_ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INT0_ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _INT0_ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _INT0_ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _INT0_ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _INT0_ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _INT0_ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _INT0_ISR in BANK31

    None.

Critical Paths under _main in BANK32

    None.

Critical Paths under _INT0_ISR in BANK32

    None.

Critical Paths under _main in BANK33

    None.

Critical Paths under _INT0_ISR in BANK33

    None.

Critical Paths under _main in BANK34

    None.

Critical Paths under _INT0_ISR in BANK34

    None.

Critical Paths under _main in BANK35

    None.

Critical Paths under _INT0_ISR in BANK35

    None.

Critical Paths under _main in BANK36

    None.

Critical Paths under _INT0_ISR in BANK36

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    5893
                       _ADC_GetValue
                         _ENVIA_CHAR
                   _ESCRIBE_MENSAJE2
                         _POS_CURSOR
                          _configuro
                          _convierte
                         _pantallazo
 ---------------------------------------------------------------------------------
 (1) _pantallazo                                           0     0      0    2035
                         _BORRAR_LCD
                   _ESCRIBE_MENSAJE2
                         _POS_CURSOR
                      _UART1_NewLine
                  _UART1_String_Send
 ---------------------------------------------------------------------------------
 (2) _UART1_String_Send                                    6     4      2     623
                                             22 COMRAM     6     4      2
                    _UART1_Data_Send
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _UART1_Data_Send                                      1     1      0      15
                                             18 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _UART1_NewLine                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _POS_CURSOR                                           2     1      1     512
                                             21 COMRAM     2     1      1
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _ESCRIBE_MENSAJE2                                     6     4      2     780
                                             22 COMRAM     6     4      2
                         _ENVIA_CHAR
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _strlen                                               4     2      2     242
                                             18 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (3) _ENVIA_CHAR                                           2     2      0     120
                                             19 COMRAM     2     2      0
                       _ENVIA_NIBBLE
                           _LEER_LCD
 ---------------------------------------------------------------------------------
 (1) _convierte                                            2     0      2    1899
                                             30 COMRAM     2     0      2
                       _ADC_GetValue (ARG)
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     767
                                             18 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     770
                                             23 COMRAM     7     3      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (1) _configuro                                            0     0      0     525
                           _LCD_INIT
 ---------------------------------------------------------------------------------
 (2) _LCD_INIT                                             1     1      0     525
                                             22 COMRAM     1     1      0
                         _BORRAR_LCD
                        _CURSOR_HOME
                       _CURSOR_ONOFF
                         _LCD_CONFIG
 ---------------------------------------------------------------------------------
 (3) _LCD_CONFIG                                           1     1      0     135
                                             21 COMRAM     1     1      0
                      _ENVIA_LCD_CMD
                       _ENVIA_NIBBLE
 ---------------------------------------------------------------------------------
 (3) _CURSOR_ONOFF                                         1     1      0     150
                                             21 COMRAM     1     1      0
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (3) _CURSOR_HOME                                          0     0      0     120
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _BORRAR_LCD                                           0     0      0     120
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (3) _ENVIA_LCD_CMD                                        2     2      0     120
                                             19 COMRAM     2     2      0
                       _ENVIA_NIBBLE
                           _LEER_LCD
 ---------------------------------------------------------------------------------
 (4) _LEER_LCD                                             1     1      0      45
                                             18 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _ENVIA_NIBBLE                                         1     1      0      15
                                             18 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ADC_GetValue                                         5     3      2      22
                                             18 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _INT0_ISR                                             4     4      0    1247
                                             14 COMRAM     4     4      0
                     i2_ADC_GetValue
                  i2_UART1_Data_Send
                    i2_UART1_NewLine
                i2_UART1_String_Send
                        i2_convierte
 ---------------------------------------------------------------------------------
 (7) i2_convierte                                          2     0      2     899
                                             12 COMRAM     2     0      2
                     i2_ADC_GetValue (ARG)
                          i2___lwdiv
                          i2___lwmod
 ---------------------------------------------------------------------------------
 (8) i2___lwmod                                            5     1      4     367
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (8) i2___lwdiv                                            7     3      4     370
                                              5 COMRAM     7     3      4
                          i2___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (7) i2_UART1_String_Send                                  6     4      2     304
                                              4 COMRAM     6     4      2
                  i2_UART1_Data_Send
                           i2_strlen
 ---------------------------------------------------------------------------------
 (8) i2_strlen                                             4     2      2     116
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (8) i2_UART1_Data_Send                                    1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) i2_UART1_NewLine                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (7) i2_ADC_GetValue                                       5     3      2      22
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_GetValue
   _ENVIA_CHAR
     _ENVIA_NIBBLE
     _LEER_LCD
   _ESCRIBE_MENSAJE2
     _ENVIA_CHAR
     _strlen
   _POS_CURSOR
     _ENVIA_LCD_CMD
       _ENVIA_NIBBLE
       _LEER_LCD
   _configuro
     _LCD_INIT
       _BORRAR_LCD
         _ENVIA_LCD_CMD
       _CURSOR_HOME
         _ENVIA_LCD_CMD
       _CURSOR_ONOFF
         _ENVIA_LCD_CMD
       _LCD_CONFIG
         _ENVIA_LCD_CMD
         _ENVIA_NIBBLE
   _convierte
     _ADC_GetValue (ARG)
     ___lwdiv (ARG)
       ___lwmod (ARG)
     ___lwmod (ARG)
   _pantallazo
     _BORRAR_LCD
     _ESCRIBE_MENSAJE2
     _POS_CURSOR
     _UART1_NewLine
     _UART1_String_Send
       _UART1_Data_Send
       _strlen

 _INT0_ISR (ROOT)
   i2_ADC_GetValue
   i2_UART1_Data_Send
   i2_UART1_NewLine
   i2_UART1_String_Send
     i2_UART1_Data_Send
     i2_strlen
   i2_convierte
     i2_ADC_GetValue (ARG)
     i2___lwdiv (ARG)
       i2___lwmod (ARG)
     i2___lwmod (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0       0      70        0.0%
EEDATA             400      0       0       0        0.0%
BITBIGSFRhhhlll    175      0       0      90        0.0%
BITBIGSFRhhhllh    137      0       0      85        0.0%
BITBIGSFR_1        100      0       0      69        0.0%
BITBANK36          100      0       0      67        0.0%
BANK36             100      0       0      68        0.0%
BITBANK35          100      0       0      65        0.0%
BANK35             100      0       0      66        0.0%
BITBANK34          100      0       0      63        0.0%
BANK34             100      0       0      64        0.0%
BITBANK33          100      0       0      61        0.0%
BANK33             100      0       0      62        0.0%
BITBANK32          100      0       0      59        0.0%
BANK32             100      0       0      60        0.0%
BITBANK31          100      0       0      57        0.0%
BANK31             100      0       0      58        0.0%
BITBANK30          100      0       0      55        0.0%
BANK30             100      0       0      56        0.0%
BITBANK29          100      0       0      53        0.0%
BANK29             100      0       0      54        0.0%
BITBANK28          100      0       0      51        0.0%
BANK28             100      0       0      52        0.0%
BITBANK27          100      0       0      49        0.0%
BANK27             100      0       0      50        0.0%
BITBANK26          100      0       0      47        0.0%
BANK26             100      0       0      48        0.0%
BITBANK25          100      0       0      45        0.0%
BANK25             100      0       0      46        0.0%
BITBANK24          100      0       0      42        0.0%
BANK24             100      0       0      43        0.0%
BITBANK23          100      0       0      40        0.0%
BANK23             100      0       0      41        0.0%
BITBANK22          100      0       0      38        0.0%
BANK22             100      0       0      39        0.0%
BITBANK21          100      0       0      36        0.0%
BANK21             100      0       0      37        0.0%
BITBANK20          100      0       0      34        0.0%
BANK20             100      0       0      35        0.0%
BITBANK19          100      0       0      32        0.0%
BANK19             100      0       0      33        0.0%
BITBANK18          100      0       0      30        0.0%
BANK18             100      0       0      31        0.0%
BITBANK17          100      0       0      28        0.0%
BANK17             100      0       0      29        0.0%
BITBANK16          100      0       0      26        0.0%
BANK16             100      0       0      27        0.0%
BITBANK15          100      0       0      24        0.0%
BANK15             100      0       0      25        0.0%
BITBANK14          100      0       0      22        0.0%
BANK14             100      0       0      23        0.0%
BITBANK13          100      0       0      20        0.0%
BANK13             100      0       0      21        0.0%
BITBANK12          100      0       0      18        0.0%
BANK12             100      0       0      19        0.0%
BITBANK11          100      0       0      16        0.0%
BANK11             100      0       0      17        0.0%
BITBANK10          100      0       0      14        0.0%
BANK10             100      0       0      15        0.0%
BITBANK9           100      0       0      12        0.0%
BANK9              100      0       0      13        0.0%
BITBANK8           100      0       0      10        0.0%
BANK8              100      0       0      11        0.0%
BITBANK7           100      0       0       8        0.0%
BANK7              100      0       0       9        0.0%
BITBANK6           100      0       0       6        0.0%
BANK6              100      0       0       7        0.0%
BITBIGSFRl          AD      0       0      93        0.0%
BITBANK5            A0      0       0       4        0.0%
BANK5               A0      0       0       5        0.0%
BITBIGSFRhhhlhh     76      0       0      78        0.0%
BITBIGSFRhhhllh     64      0       0      88        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     20      25       1       38.9%
BITBIGSFRhhhhh      29      0       0      71        0.0%
BITBIGSFRhhhlll     14      0       0      89        0.0%
BITBIGSFRhhhlhh     11      0       0      76        0.0%
BITBIGSFRhhhlhh      F      0       0      77        0.0%
BITBIGSFRhhhlhh      E      0       0      81        0.0%
BITBIGSFRhhhllh      C      0       0      83        0.0%
BITBIGSFRhhhllh      7      0       0      87        0.0%
BITBIGSFRhhhlhh      7      0       0      79        0.0%
BITBIGSFRhhhlhh      7      0       0      80        0.0%
BITBIGSFRhhhlhl      7      0       0      82        0.0%
BITBIGSFRhhhllh      6      0       0      84        0.0%
BITBIGSFRhhhhlh      5      0       0      73        0.0%
BITBIGSFRhhhhlh      4      0       0      72        0.0%
BITBIGSFRhhhlhh      4      0       0      75        0.0%
BITBIGSFRhl          3      0       0      92        0.0%
BITBIGSFRhhhllh      2      0       0      86        0.0%
BITBIGSFRhhhhll      1      0       0      74        0.0%
BITBIGSFRhhl         1      0       0      91        0.0%
BIGSFR_1             0      0       0     200        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      25      44        0.0%
DATA                 0      0      25       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Mon Jun 19 12:35:55 2023

                         l91 2E9A                           l85 2AAE                           l94 26E8  
                         l88 2E7A                           l97 2F60                           u10 2A40  
                         u11 2A3C                           u20 2F70                           u21 2F6C  
                         u40 2E52                           u41 2E4E                           u50 2E68  
                         u51 2E64                           u60 2EDC                           u61 2ED8  
                         u70 2EEE                           u71 2EEA           i2___lwdiv@dividend 0506  
              ENVIA_CHAR@aux 0515                          l100 2F70                          l103 2ECE  
                        l202 2DDA                          l106 2EE0                          l211 2F58  
                        l115 2C64                          l220 2A40                          l205 2F98  
                        l109 2EEE                          l214 2E0E                          l118 2BC8  
                        l208 2C1A                          l218 2A06                          l170 2F90  
                        l228 2E3E                          l157 2D32                          l187 2E6E  
                        l199 2CAE                          l722 2952                          l732 2B0A  
                        l910 29D0                          l920 29E2                          l912 29D4  
                        l729 295A                          l930 29FA                          l922 29E6  
                        l914 29D6                          l739 2B12                          l940 2A1E  
                        l932 29FC                          l924 29E8                          l916 29D8  
                        l908 2D6C                          l950 2F4C                          l942 2A28  
                        l934 2A08                          l926 29F0                          l918 29DA  
                        l952 2F4E                          l936 2A10                          l928 29F2  
                        l960 2DE4                          l954 2F56                          l938 2A14  
                        l946 2A2E                          l970 2DF6                          l962 2DE8  
                        l948 2F40                          l972 2DFC                          l964 2DF0  
                        l956 2DDE                          l974 2E02                          l966 2DF2  
                        l958 2DE0                          l990 2F92                          l976 2E08  
                        l968 2DF4                          l992 2DAA                          l994 2DAC  
                        l978 2F5C                          l996 2DB0                          l998 2DB4  
                        u400 2D2A                          u401 2D26                          u410 2CAE  
                        u411 2CAA                          u420 2902                          u421 28FE  
                        u430 2920                          u431 291C                          u440 293C  
                        u441 2938                          u450 2AC2                          u370 2D60  
                        u451 2ABE                          u371 2D5C                          u460 2AE0  
                        u380 2C64                          u461 2ADC                          u381 2C60  
                        u470 2AF6                          u390 2D0C                          u607 2E16  
                        u471 2AF2                          u391 2D08                          u560 2E88  
                        u561 2E84                          u617 2E28                          u707 2A22  
                        u627 2BDA                          u717 2F50                          u637 2BEA  
                        u647 2DEA                          u657 29DC                          u667 29EA  
                        u677 29F4                          u597 2DB6                          u687 2A0A  
                        u697 2A18                  LEER_LCD@aux 0513                          wreg 04E8  
            _UART1_Data_Send 2F5A                 ?_CURSOR_HOME 0501        i2UART1_Data_Send@dato 0501  
             ??_ENVIA_NIBBLE 0513               ENVIA_CHAR@dato 0514                         l1000 2DBC  
                       l1010 2DCE                         l1002 2DBE                         l1020 2E58  
                       l1012 2DD4                         l1004 2DC0                         l1014 2F8A  
                       l1022 2E68                         l1030 2BE2                         l1006 2DC2  
                       l1016 2E42                         l1040 2C08                         l1032 2BF0  
                       l1024 2BCA                         l1200 2AAA                         l1008 2DC8  
                       l1018 2E52                         l1042 2C0E                         l1034 2BF6  
                       l1026 2BCE                         l1050 2E22                         l1044 2C14  
                       l1036 2BFC                         l1028 2BD4                         l1052 2EC8  
                       l1038 2C02                         l1046 2E10                         l1054 2EDC  
                       l1048 2E1E                         l1400 2920                         l1410 294C  
                       l1402 2926                         l1180 2A52                         l1404 293C  
                       l1420 2AE0                         l1412 2AB0                         l1500 2BC4  
                       l1190 2A62                         l1182 2A56                         l1406 2944  
                       l1422 2AF6                         l1414 2AC2                         l1350 2D40  
                       l1192 2A86                         l1184 2A5C                         l1176 2A42  
                       l1408 2946                         l1424 2AFE                         l1416 2ACA  
                       l1352 2D44                         l1360 2C1C                         l1194 2A88  
                       l1186 2A5E                         l1178 2A50                         l1426 2B04  
                       l1418 2AD2                         l1354 2D60                         l1370 2CFC  
                       l1362 2C2C                         l1530 2862                         l1196 2A8A  
                       l1188 2A60                         l1348 2D34                         l1380 2C76  
                       l1372 2D0C                         l1364 2C34                         l1540 28D0  
                       l1532 286C                         l1524 2848                         l1198 2A8C  
                       l1390 28E8                         l1382 2C76                         l1374 2D18  
                       l1366 2C50                         l1358 2C1C                         l1542 28D8  
                       l1534 28B4                         l1526 284C                         l1480 2E76  
                       l1392 28F0                         l1384 2C7E                         l1376 2D2A  
                       l1368 2C52                         l1536 28C0                         l1528 2850  
                       l1482 2E88                         l1394 2902                         l1386 2C9A  
                       l1378 2C66                         l1490 2B82                         l1538 28C8  
                       l1396 290A                         l1388 2C9C                         l1492 2B8E  
                       l1478 2E72                         l1398 2912                         l1486 2634  
                       l1494 2BB0                         l1496 2BB4                         l1488 2B78  
                       l1498 2BC0                         STR_1 2629                         STR_2 2601  
                       STR_3 2629                         STR_4 2601                         STR_5 2617  
                       STR_6 2623                         STR_7 2611                         STR_8 261D  
                       _LATD 04C1                         i2l91 2EC6                         i2l94 279E  
                       i2l88 2EA6                         i2l97 2F78        __end_of_UART1_NewLine 2EF0  
                       _main 2848           i2___lwdiv@quotient 050A      __end_ofi2_UART1_NewLine 2F18  
                       start 0102                ?_CURSOR_ONOFF 0501                 ___param_bank 0000  
            ??_ENVIA_LCD_CMD 0514             __end_of_LCD_INIT 2E40             __end_of_LEER_LCD 2A42  
           __end_of_INT0_ISR 2848            ADC_GetValue@canal 0517                        ?_main 0501  
                      _ADPCH 03EC              __end_of___lwdiv 295C                        i2l100 2F88  
                      i2l103 2EF6              __end_of___lwmod 2B14                        i2l106 2F08  
                      _U1TXB 02A3                        i2l115 2CF8                        i2l131 2836  
                      i2l109 2F16                        i2l722 29C6                        i2l732 2B6E  
                      i2l729 29CE                        i2l739 2B76                        i2l908 2DA6  
                      _OSCEN 00B3                        _PORTD 04D1                        _TRISA 04C6  
                      _TRISB 04C7                        _TRISD 04C9                        _TRISE 04CA  
                i2_convierte 26EA                  ?_POS_CURSOR 0516                        tablat 04F5  
                      status 04D8                 _ADC_GetValue 2E70               ??_CURSOR_ONOFF 0516  
           __end_ofi2_strlen 2DA8              __initialization 2F18                 __end_of_main 28E8  
    __end_of_UART1_Data_Send 2F72                       ??_main 0521                __activetblptr 0001  
                     _ADRESH 03EB                       _ADRESL 03EA                       _ANSELA 0400  
                     _ANSELB 0408                       _ANSELD 0418                       _ANSELE 0420  
                     _U1CON0 02AB                       _U1CON1 02AC                       _U1CON2 02AD  
                     _U1BRGH 02AF                       _U1BRGL 02AE                       _RF0PPS 0229  
                     i2l1236 2EF0                       i2l1502 2E9E                       i2l1238 2F04  
                     i2l1430 295C                       i2l1510 26EA                       i2l1504 2EA2  
                     i2l1520 2CE4                       i2l1512 2CB0                       i2l1440 2994  
                     i2l1432 2964                       i2l1506 2EB4                       i2l1522 2CE6  
                     i2l1514 2CB0                       i2l1450 29C0                       i2l1442 299A  
                     i2l1434 2976                       i2l1428 2F74                       i2l1516 2CC0  
                     i2l1444 29B0                       i2l1436 297E                       i2l1460 2B44  
                     i2l1452 2B14                       i2l1470 2D7A                       i2l1518 2CC8  
                     i2l1446 29B8                       i2l1438 2986                       i2l1462 2B5A  
                     i2l1454 2B26                       i2l1550 27D0                       i2l1472 2D7E  
                     i2l1448 29BA                       i2l1464 2B62                       i2l1456 2B2E  
                     i2l1560 27F4                       i2l1552 27D8                       i2l1544 27B0  
                     i2l1474 2D9A                       i2l1466 2B68                       i2l1458 2B36  
                     i2l1570 282A                       i2l1562 2806                       i2l1554 27E0  
                     i2l1546 27B2                       i2l1468 2D6E                       i2l1564 2812  
                     i2l1556 27E8                       i2l1548 27C4                       i2l1566 281A  
                     i2l1558 27F0                       i2l1568 2822                       _OSCFRQ 00B1  
           ?i2_UART1_NewLine 0501       i2UART1_String_Send@tam 0509                       _decena 0522  
       __end_of_ENVIA_NIBBLE 2F5A                    ??___lwdiv 051C                    ??___lwmod 0517  
                     _millar 0524                       isa$std 0001                       _unidad 0521  
  i2UART1_String_Send@cadena 0505                       _strlen 2D34            __end_ofi2___lwdiv 29D0  
               __mediumconst 0000            __end_ofi2___lwmod 2B78                       tblptrh 04F7  
                     tblptrl 04F6                       tblptru 04F8          UART1_Data_Send@dato 0513  
               ??_BORRAR_LCD 0516                    ?_LCD_INIT 0501                    ?_LEER_LCD 0501  
                 __accesstop 0560      __end_of__initialization 2F30                    ?_INT0_ISR 0501  
               ??_LCD_CONFIG 0516                ___rparam_used 0001                 ??_ENVIA_CHAR 0514  
        i2_UART1_String_Send 2CB0           i2___lwmod@dividend 0501               __pcstackCOMRAM 0501  
             ivt0x8_undefint 0100           __end_of_BORRAR_LCD 2F9A             ?_UART1_Data_Send 0501  
           _ESCRIBE_MENSAJE2 2C66             ENVIA_LCD_CMD@aux 0515         __end_of_CURSOR_ONOFF 2E70  
       ?i2_UART1_String_Send 0505           __end_of_LCD_CONFIG 2C1C           __end_of_ENVIA_CHAR 2DDC  
       i2UART1_String_Send@i 050A                    ?i2_strlen 0501                   ??_LCD_INIT 0517  
                 ??_LEER_LCD 0513             ENVIA_NIBBLE@dato 0513                   ??_INT0_ISR 050F  
                    IVTBASEH 045E                      IVTBASEL 045D                      IVTBASEU 045F  
             i2_ADC_GetValue 2E9C                      ?_strlen 0513                   _diezmillar 0525  
                    _INT0PPS 023E                 ?i2_convierte 050D        ??i2_UART1_String_Send 0507  
                    _OSCCON1 00AD                      i2u50_40 2994                      i2u50_41 2990  
                    i2u51_40 29B0                      i2u51_41 29AC                      i2u28_40 2F04  
                    i2u52_40 2B26                      i2u28_41 2F00                      i2u52_41 2B22  
                    i2u29_40 2F16                      i2u53_40 2B44                      i2u29_41 2F12  
                    i2u53_41 2B40                      i2u54_40 2B5A                      i2u54_41 2B56  
                    i2u55_40 2D9A                      i2u55_41 2D96                      i2u48_40 2F88  
                    i2u48_41 2F84                      i2u57_40 2EB4                      i2u49_40 2976  
                    i2u57_41 2EB0                      i2u49_41 2972                      i2u58_40 2CF8  
                    i2u58_41 2CF4            i2convierte@numero 050D                   ??i2_strlen 0503  
               ??_POS_CURSOR 0517       __end_ofi2_ADC_GetValue 2EC8                      __Hparam 0000  
                    __Lparam 0000            __end_of_configuro 2AB0                      ___lwdiv 28E8  
                    ___lwmod 2AB0                 __psmallconst 2600        __end_of_ENVIA_LCD_CMD 2E10  
          __end_of_convierte 26EA                      __pcinit 2F18           __end_of_POS_CURSOR 2D34  
                    __ramtop 2600                      _centena 0523                      __ptext0 2848  
                    __ptext1 2B78                      __ptext2 2C1C                      __ptext3 2F5A  
                    __ptext4 2EC8                      __ptext5 2CFA                      __ptext6 2C66  
                    __ptext7 2D34                      __ptext8 2DA8                      __ptext9 2634  
                 _pantallazo 2B78                 _ENVIA_NIBBLE 2F3E         end_of_initialization 2F30  
            ?i2_ADC_GetValue 0501                      strlen@a 0515                      strlen@s 0513  
          ESCRIBE_MENSAJE2@i 051C                    _TRISFbits 04CB            i2___lwdiv@divisor 0508  
                  i2___lwdiv 295C                    i2___lwmod 2B14            i2___lwdiv@counter 050C  
              _UART1_NewLine 2EC8     __end_of_ESCRIBE_MENSAJE2 2CB0                 _CURSOR_ONOFF 2E40  
         CURSOR_ONOFF@estado 0516               __end_of_strlen 2D6E                ??_CURSOR_HOME 0516  
        start_initialization 2F18                  ?_pantallazo 0501            _UART1_String_Send 2C1C  
         ?_UART1_String_Send 0517                   ?i2___lwdiv 0506                   ivt0x8_base 0008  
                 ?i2___lwmod 0501                    i2strlen@a 0503                    i2strlen@s 0501  
             ?_UART1_NewLine 0501            ENVIA_LCD_CMD@dato 0514          ??_UART1_String_Send 0519  
       UART1_String_Send@tam 051B                     ??_strlen 0515    __end_of_UART1_String_Send 2C66  
                __pbssCOMRAM 0521            i2___lwmod@divisor 0503            i2___lwmod@counter 0505  
        __end_of_CURSOR_HOME 2F92                ?_ADC_GetValue 0513             ___lwdiv@dividend 0518  
                   ?___lwdiv 0518                     ?___lwmod 0513  __end_ofi2_UART1_String_Send 2CFA  
                  _configuro 2A42                  __smallconst 2600                    _convierte 2634  
          ??i2_UART1_NewLine 0501              convierte@numero 051F             ___lwdiv@quotient 051C  
          i2_UART1_Data_Send 2F72              ??_UART1_NewLine 0513             ??i2_ADC_GetValue 0503  
                ??i2___lwdiv 050A                  _U1ERRIRbits 02B2                  ??i2___lwmod 0505  
         ?i2_UART1_Data_Send 0501                     _LCD_INIT 2E10               ??_ADC_GetValue 0515  
                   _LEER_LCD 29D0                     _INT0_ISR 27A0                     _LATDbits 04C1  
                   _PIE1bits 049F          ??i2_UART1_Data_Send 0501                     _PIR1bits 04AF  
             POS_CURSOR@fila 0517                   ?_configuro 0501                   _ADCON0bits 03F3  
     ESCRIBE_MENSAJE2@cadena 0517                   ?_convierte 051F                     _WPUBbits 0409  
  __end_ofi2_UART1_Data_Send 2F8A                  _CURSOR_HOME 2F8A                     i2_strlen 2D6E  
                _INTCON0bits 04D6          i2ADC_GetValue@canal 0505            ??_UART1_Data_Send 0513  
                   __Hrparam 0000            ?_ESCRIBE_MENSAJE2 0517                     __Lrparam 0000  
               __Lsmallconst 2600           ??_ESCRIBE_MENSAJE2 0519                   _ANSELFbits 0428  
               ??_pantallazo 051D                     __pivt0x8 0008              ___lwdiv@divisor 051A  
            ___lwdiv@counter 051E                     __ptext10 2AB0                     __ptext11 28E8  
                   __ptext20 2F3E                     __ptext12 2A42                     __ptext21 2E70  
                   __ptext13 2E10                     __ptext30 2E9C                     __ptext22 27A0  
                   __ptext14 2BCA                     __ptext23 26EA                     __ptext15 2E40  
                   __ptext24 2B14                     __ptext16 2F8A                     __ptext25 295C  
                   __ptext17 2F92                     __ptext26 2CB0                     __ptext18 2DDC  
                   __ptext27 2D6E                     __ptext19 29D0                     __ptext28 2F72  
                   __ptext29 2EF0                   _BORRAR_LCD 2F92      UART1_String_Send@cadena 0517  
                 _LCD_CONFIG 2BCA                   _ENVIA_CHAR 2DA8                     isa$xinst 0000  
         __end_of_pantallazo 2BCA                _ENVIA_LCD_CMD 2DDC                  ??_configuro 0518  
       __end_of_ADC_GetValue 2E9C                ??i2_convierte 050F                  ??_convierte 0521  
         UART1_String_Send@i 051C                     intlevel2 0000             ___lwmod@dividend 0513  
            i2_UART1_NewLine 2EF0               ?_ENVIA_LCD_CMD 0501              ___lwmod@divisor 0515  
            ___lwmod@counter 0517          ESCRIBE_MENSAJE2@tam 051B                  ?_BORRAR_LCD 0501  
              ?_ENVIA_NIBBLE 0501                   _POS_CURSOR 2CFA          __end_ofi2_convierte 27A0  
                ?_LCD_CONFIG 0501                  ?_ENVIA_CHAR 0501            POS_CURSOR@columna 0516  
