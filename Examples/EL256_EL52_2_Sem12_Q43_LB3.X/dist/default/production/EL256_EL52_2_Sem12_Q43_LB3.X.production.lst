

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Thu Jun 08 20:46:23 2023

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	18F57Q43
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1
    22                           	psect	text13,global,reloc=2,class=CODE,delta=1
    23                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text15,global,reloc=2,class=CODE,delta=1
    25                           	psect	text16,global,reloc=2,class=CODE,delta=1
    26                           	psect	text17,global,reloc=2,class=CODE,delta=1
    27                           	psect	text18,global,reloc=4,class=CODE,delta=1
    28                           	psect	text19,global,reloc=2,class=CODE,delta=1
    29                           	psect	text20,global,reloc=2,class=CODE,delta=1
    30                           	psect	text21,global,reloc=2,class=CODE,delta=1
    31                           	psect	text22,global,reloc=2,class=CODE,delta=1
    32                           	psect	text23,global,reloc=2,class=CODE,delta=1
    33                           	psect	text24,global,reloc=2,class=CODE,delta=1
    34                           	psect	text25,global,reloc=2,class=CODE,delta=1
    35                           	psect	text26,global,reloc=2,class=CODE,delta=1
    36                           	psect	text27,global,reloc=4,class=CODE,delta=1
    37                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
    38                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    39                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    40                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    41                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    42  0000                     
    43                           ; Version 2.40
    44                           ; Generated 08/12/2021 GMT
    45                           ; 
    46                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    47                           ; All rights reserved.
    48                           ; 
    49                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    50                           ; 
    51                           ; Redistribution and use in source and binary forms, with or without modification, are
    52                           ; permitted provided that the following conditions are met:
    53                           ; 
    54                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    55                           ;        conditions and the following disclaimer.
    56                           ; 
    57                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    58                           ;        of conditions and the following disclaimer in the documentation and/or other
    59                           ;        materials provided with the distribution. Publication is not required when
    60                           ;        this file is used in an embedded application.
    61                           ; 
    62                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    63                           ;        software without specific prior written permission.
    64                           ; 
    65                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    66                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    67                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    68                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    69                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    70                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    71                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    72                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    73                           ; 
    74                           ; 
    75                           ; Code-generator required, PIC18F57Q43 Definitions
    76                           ; 
    77                           ; SFR Addresses
    78  0000                     _OSCCON1	set	173
    79  0000                     _LATAbits	set	1214
    80  0000                     _LATD	set	1217
    81  0000                     _TRISD	set	1225
    82  0000                     _PORTD	set	1233
    83  0000                     _TRISA	set	1222
    84  0000                     _INTCON0bits	set	1238
    85  0000                     _OSCFRQ	set	177
    86  0000                     _OSCEN	set	179
    87  0000                     _ADRESL	set	1002
    88  0000                     _ADRESH	set	1003
    89  0000                     _ADPCH	set	1004
    90  0000                     _ADCON0bits	set	1011
    91  0000                     _ANSELA	set	1024
    92  0000                     _ANSELD	set	1048
    93  0000                     _PIE1bits	set	1183
    94  0000                     _TRISB	set	1223
    95  0000                     _ANSELB	set	1032
    96  0000                     _WPUB	set	1033
    97  0000                     _PIE6bits	set	1188
    98  0000                     _PIR1bits	set	1199
    99  0000                     _PIR6bits	set	1204
   100                           
   101                           	psect	smallconst
   102  002500                     __psmallconst:
   103                           	callstack 0
   104  002500  00                 	db	0
   105  002501                     STR_2:
   106  002501  45                 	db	69	;'E'
   107  002502  73                 	db	115	;'s'
   108  002503  74                 	db	116	;'t'
   109  002504  6F                 	db	111	;'o'
   110  002505  79                 	db	121	;'y'
   111  002506  20                 	db	32
   112  002507  6A                 	db	106	;'j'
   113  002508  61                 	db	97	;'a'
   114  002509  6C                 	db	108	;'l'
   115  00250A  61                 	db	97	;'a'
   116  00250B  64                 	db	100	;'d'
   117  00250C  61                 	db	97	;'a'
   118  00250D  73                 	db	115	;'s'
   119  00250E  6F                 	db	111	;'o'
   120  00250F  3A                 	db	58	;':'
   121  002510  28                 	db	40
   122  002511  00                 	db	0
   123  002512                     STR_1:
   124  002512  4C                 	db	76	;'L'
   125  002513  61                 	db	97	;'a'
   126  002514  62                 	db	98	;'b'
   127  002515  6F                 	db	111	;'o'
   128  002516  72                 	db	114	;'r'
   129  002517  61                 	db	97	;'a'
   130  002518  74                 	db	116	;'t'
   131  002519  6F                 	db	111	;'o'
   132  00251A  72                 	db	114	;'r'
   133  00251B  69                 	db	105	;'i'
   134  00251C  6F                 	db	111	;'o'
   135  00251D  20                 	db	32
   136  00251E  33                 	db	51	;'3'
   137  00251F  00                 	db	0
   138  002520                     STR_7:
   139  002520  4D                 	db	77	;'M'
   140  002521  69                 	db	105	;'i'
   141  002522  63                 	db	99	;'c'
   142  002523  72                 	db	114	;'r'
   143  002524  6F                 	db	111	;'o'
   144  002525  62                 	db	98	;'b'
   145  002526  69                 	db	105	;'i'
   146  002527  6F                 	db	111	;'o'
   147  002528  20                 	db	32
   148  002529  32                 	db	50	;'2'
   149  00252A  30                 	db	48	;'0'
   150  00252B  32                 	db	50	;'2'
   151  00252C  33                 	db	51	;'3'
   152  00252D  00                 	db	0
   153  00252E                     STR_8:
   154  00252E  4B                 	db	75	;'K'
   155  00252F  61                 	db	97	;'a'
   156  002530  6C                 	db	108	;'l'
   157  002531  75                 	db	117	;'u'
   158  002532  6E                 	db	110	;'n'
   159  002533  20                 	db	32
   160  002534  4A                 	db	74	;'J'
   161  002535  6F                 	db	111	;'o'
   162  002536  73                 	db	115	;'s'
   163  002537  65                 	db	101	;'e'
   164  002538  00                 	db	0
   165  002539                     STR_9:
   166  002539  20                 	db	32
   167  00253A  4C                 	db	76	;'L'
   168  00253B  61                 	db	97	;'a'
   169  00253C  75                 	db	117	;'u'
   170  00253D  20                 	db	32
   171  00253E  47                 	db	71	;'G'
   172  00253F  61                 	db	97	;'a'
   173  002540  6E                 	db	110	;'n'
   174  002541  00                 	db	0
   175  002542                     STR_4:
   176  002542  20                 	db	32
   177  002543  43                 	db	67	;'C'
   178  002544  35                 	db	53	;'5'
   179  002545  3A                 	db	58	;':'
   180  002546  00                 	db	0
   181  002547                     STR_3:
   182  002547  43                 	db	67	;'C'
   183  002548  33                 	db	51	;'3'
   184  002549  3A                 	db	58	;':'
   185  00254A  00                 	db	0
   186  00254B                     STR_5:
   187  00254B  43                 	db	67	;'C'
   188  00254C  36                 	db	54	;'6'
   189  00254D  3A                 	db	58	;':'
   190  00254E  00                 	db	0
   191  00254F  00                 	db	0	; dummy byte at the end
   192  0000                     
   193                           ; #config settings
   194                           
   195                           	psect	cinit
   196  002D44                     __pcinit:
   197                           	callstack 0
   198  002D44                     start_initialization:
   199                           	callstack 0
   200  002D44                     __initialization:
   201                           	callstack 0
   202                           
   203                           ; Clear objects allocated to COMRAM (4 bytes)
   204  002D44  6A34               	clrf	(__pbssCOMRAM+3)& (0+255),c
   205  002D46  6A33               	clrf	(__pbssCOMRAM+2)& (0+255),c
   206  002D48  6A32               	clrf	(__pbssCOMRAM+1)& (0+255),c
   207  002D4A  6A31               	clrf	__pbssCOMRAM& (0+255),c
   208                           
   209                           ;
   210                           ; Setup IVTBASE
   211                           ;
   212  002D4C  0104               	movlb	4
   213  002D4E  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
   214  002D50  6F5D               	movwf	93,b
   215  002D52  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
   216  002D54  6F5E               	movwf	94,b
   217  002D56  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
   218  002D58  6F5F               	movwf	95,b
   219  002D5A                     end_of_initialization:
   220                           	callstack 0
   221  002D5A                     __end_of__initialization:
   222                           	callstack 0
   223  002D5A  0E00               	movlw	low (__Lsmallconst shr (0+16))
   224  002D5C  6EF8               	movwf	tblptru,c
   225  002D5E  0E25               	movlw	high __Lsmallconst
   226  002D60  6EF7               	movwf	tblptrh,c
   227  002D62  0100               	movlb	0
   228  002D64  EFA8  F012         	goto	_main	;jump to C main() function
   229                           
   230                           	psect	bssCOMRAM
   231  000531                     __pbssCOMRAM:
   232                           	callstack 0
   233  000531                     _unidad:
   234                           	callstack 0
   235  000531                     	ds	1
   236  000532                     _decena:
   237                           	callstack 0
   238  000532                     	ds	1
   239  000533                     _centena:
   240                           	callstack 0
   241  000533                     	ds	1
   242  000534                     _millar:
   243                           	callstack 0
   244  000534                     	ds	1
   245                           
   246                           	psect	cstackCOMRAM
   247  000501                     __pcstackCOMRAM:
   248                           	callstack 0
   249  000501                     
   250                           ; 1 bytes @ 0x0
   251  000501                     	ds	10
   252  00050B                     ??_INT0_ISR:
   253                           
   254                           ; 1 bytes @ 0xA
   255  00050B                     	ds	6
   256  000511                     ?i2_strlen:
   257                           	callstack 0
   258  000511                     i2ENVIA_NIBBLE@dato:
   259                           	callstack 0
   260  000511                     i2LEER_LCD@aux:
   261                           	callstack 0
   262  000511                     i2strlen@s:
   263                           	callstack 0
   264                           
   265                           ; 2 bytes @ 0x10
   266  000511                     	ds	1
   267  000512                     i2ENVIA_CHAR@dato:
   268                           	callstack 0
   269  000512                     i2ENVIA_LCD_CMD@dato:
   270                           	callstack 0
   271                           
   272                           ; 1 bytes @ 0x11
   273  000512                     	ds	1
   274  000513                     i2ENVIA_CHAR@aux:
   275                           	callstack 0
   276  000513                     i2ENVIA_LCD_CMD@aux:
   277                           	callstack 0
   278  000513                     i2strlen@a:
   279                           	callstack 0
   280                           
   281                           ; 2 bytes @ 0x12
   282  000513                     	ds	1
   283  000514                     i2POS_CURSOR@columna:
   284                           	callstack 0
   285                           
   286                           ; 1 bytes @ 0x13
   287  000514                     	ds	1
   288  000515                     i2POS_CURSOR@fila:
   289                           	callstack 0
   290  000515                     i2ESCRIBE_MENSAJE2@cadena:
   291                           	callstack 0
   292                           
   293                           ; 2 bytes @ 0x14
   294  000515                     	ds	2
   295  000517                     ??i2_ESCRIBE_MENSAJE2:
   296                           
   297                           ; 1 bytes @ 0x16
   298  000517                     	ds	2
   299  000519                     i2ESCRIBE_MENSAJE2@tam:
   300                           	callstack 0
   301                           
   302                           ; 1 bytes @ 0x18
   303  000519                     	ds	1
   304  00051A                     i2ESCRIBE_MENSAJE2@i:
   305                           	callstack 0
   306                           
   307                           ; 1 bytes @ 0x19
   308  00051A                     	ds	1
   309  00051B                     ??_INT1_ISR:
   310                           
   311                           ; 1 bytes @ 0x1A
   312  00051B                     	ds	6
   313  000521                     ?_strlen:
   314                           	callstack 0
   315  000521                     ?_tomamuestra_ADC:
   316                           	callstack 0
   317  000521                     ?___lwmod:
   318                           	callstack 0
   319  000521                     ENVIA_NIBBLE@dato:
   320                           	callstack 0
   321  000521                     LEER_LCD@aux:
   322                           	callstack 0
   323  000521                     ___lwmod@dividend:
   324                           	callstack 0
   325  000521                     strlen@s:
   326                           	callstack 0
   327                           
   328                           ; 2 bytes @ 0x20
   329  000521                     	ds	1
   330  000522                     ENVIA_CHAR@dato:
   331                           	callstack 0
   332  000522                     ENVIA_LCD_CMD@dato:
   333                           	callstack 0
   334                           
   335                           ; 1 bytes @ 0x21
   336  000522                     	ds	1
   337  000523                     ??_tomamuestra_ADC:
   338  000523                     ENVIA_CHAR@aux:
   339                           	callstack 0
   340  000523                     ENVIA_LCD_CMD@aux:
   341                           	callstack 0
   342  000523                     ___lwmod@divisor:
   343                           	callstack 0
   344  000523                     strlen@a:
   345                           	callstack 0
   346                           
   347                           ; 2 bytes @ 0x22
   348  000523                     	ds	1
   349  000524                     ??_LCD_CONFIG:
   350  000524                     POS_CURSOR@columna:
   351                           	callstack 0
   352  000524                     CURSOR_ONOFF@estado:
   353                           	callstack 0
   354                           
   355                           ; 1 bytes @ 0x23
   356  000524                     	ds	1
   357  000525                     ??_LCD_INIT:
   358  000525                     POS_CURSOR@fila:
   359                           	callstack 0
   360  000525                     tomamuestra_ADC@canal:
   361                           	callstack 0
   362  000525                     ___lwmod@counter:
   363                           	callstack 0
   364  000525                     ESCRIBE_MENSAJE2@cadena:
   365                           	callstack 0
   366                           
   367                           ; 2 bytes @ 0x24
   368  000525                     	ds	1
   369  000526                     ?___lwdiv:
   370                           	callstack 0
   371  000526                     ___lwdiv@dividend:
   372                           	callstack 0
   373                           
   374                           ; 2 bytes @ 0x25
   375  000526                     	ds	1
   376  000527                     ??_ESCRIBE_MENSAJE2:
   377                           
   378                           ; 1 bytes @ 0x26
   379  000527                     	ds	1
   380  000528                     ___lwdiv@divisor:
   381                           	callstack 0
   382                           
   383                           ; 2 bytes @ 0x27
   384  000528                     	ds	1
   385  000529                     ESCRIBE_MENSAJE2@tam:
   386                           	callstack 0
   387                           
   388                           ; 1 bytes @ 0x28
   389  000529                     	ds	1
   390  00052A                     ESCRIBE_MENSAJE2@i:
   391                           	callstack 0
   392  00052A                     ___lwdiv@quotient:
   393                           	callstack 0
   394                           
   395                           ; 2 bytes @ 0x29
   396  00052A                     	ds	2
   397  00052C                     ___lwdiv@counter:
   398                           	callstack 0
   399                           
   400                           ; 1 bytes @ 0x2B
   401  00052C                     	ds	1
   402  00052D                     convierte@numero:
   403                           	callstack 0
   404                           
   405                           ; 2 bytes @ 0x2C
   406  00052D                     	ds	2
   407  00052F                     ??_main:
   408                           
   409                           ; 1 bytes @ 0x2E
   410  00052F                     	ds	2
   411                           
   412 ;;
   413 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   414 ;;
   415 ;; *************** function _main *****************
   416 ;; Defined at:
   417 ;;		line 45 in file "maincode1.c"
   418 ;; Parameters:    Size  Location     Type
   419 ;;		None
   420 ;; Auto vars:     Size  Location     Type
   421 ;;		None
   422 ;; Return value:  Size  Location     Type
   423 ;;                  1    wreg      void 
   424 ;; Registers used:
   425 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   426 ;; Tracked objects:
   427 ;;		On entry : 0/0
   428 ;;		On exit  : 0/0
   429 ;;		Unchanged: 0/0
   430 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   431 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   432 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   433 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   434 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   435 ;;Total ram usage:        2 bytes
   436 ;; Hardware stack levels required when called: 9
   437 ;; This function calls:
   438 ;;		_BORRAR_LCD
   439 ;;		_ENVIA_CHAR
   440 ;;		_ESCRIBE_MENSAJE2
   441 ;;		_POS_CURSOR
   442 ;;		_configuro
   443 ;;		_convierte
   444 ;;		_tomamuestra_ADC
   445 ;; This function is called by:
   446 ;;		Startup code after reset
   447 ;; This function uses a non-reentrant model
   448 ;;
   449                           
   450                           	psect	text0
   451  002550                     __ptext0:
   452                           	callstack 0
   453  002550                     _main:
   454                           	callstack 118
   455  002550                     
   456                           ;maincode1.c: 46:     configuro();
   457  002550  EC57  F015         	call	_configuro	;wreg free
   458                           
   459                           ;maincode1.c: 47:     POS_CURSOR(1,0);
   460  002554  0E00               	movlw	0
   461  002556  6E24               	movwf	POS_CURSOR@columna^(0+1280),c
   462  002558  0E01               	movlw	1
   463  00255A  ECB9  F015         	call	_POS_CURSOR
   464  00255E                     
   465                           ;maincode1.c: 48:     ESCRIBE_MENSAJE2("Laboratorio 3");
   466  00255E  0E12               	movlw	low STR_1
   467  002560  6E25               	movwf	ESCRIBE_MENSAJE2@cadena^(0+1280),c
   468  002562  0E25               	movlw	high STR_1
   469  002564  6E26               	movwf	(ESCRIBE_MENSAJE2@cadena+1)^(0+1280),c
   470  002566  EC09  F015         	call	_ESCRIBE_MENSAJE2	;wreg free
   471  00256A                     
   472                           ;maincode1.c: 49:     POS_CURSOR(2,0);
   473  00256A  0E00               	movlw	0
   474  00256C  6E24               	movwf	POS_CURSOR@columna^(0+1280),c
   475  00256E  0E02               	movlw	2
   476  002570  ECB9  F015         	call	_POS_CURSOR
   477                           
   478                           ;maincode1.c: 50:     ESCRIBE_MENSAJE2("Estoy jaladaso:(");
   479  002574  0E01               	movlw	low STR_2
   480  002576  6E25               	movwf	ESCRIBE_MENSAJE2@cadena^(0+1280),c
   481  002578  0E25               	movlw	high STR_2
   482  00257A  6E26               	movwf	(ESCRIBE_MENSAJE2@cadena+1)^(0+1280),c
   483  00257C  EC09  F015         	call	_ESCRIBE_MENSAJE2	;wreg free
   484  002580                     
   485                           ;maincode1.c: 51:     _delay((unsigned long)((4000)*(4000000UL/4000.0)));
   486  002580  0E15               	movlw	21
   487  002582  6E30               	movwf	(??_main+1)^(0+1280),c
   488  002584  0E4B               	movlw	75
   489  002586  6E2F               	movwf	??_main^(0+1280),c
   490  002588  0EBE               	movlw	190
   491  00258A                     u427:
   492  00258A  2EE8               	decfsz	wreg,f,c
   493  00258C  D7FE               	bra	u427
   494  00258E  2E2F               	decfsz	??_main^(0+1280),f,c
   495  002590  D7FC               	bra	u427
   496  002592  2E30               	decfsz	(??_main+1)^(0+1280),f,c
   497  002594  D7FA               	bra	u427
   498  002596  D000               	nop2	
   499  002598                     
   500                           ;maincode1.c: 52:     BORRAR_LCD();
   501  002598  ECD4  F016         	call	_BORRAR_LCD	;wreg free
   502  00259C                     l1549:
   503                           
   504                           ;maincode1.c: 54:         POS_CURSOR(1,0);
   505  00259C  0E00               	movlw	0
   506  00259E  6E24               	movwf	POS_CURSOR@columna^(0+1280),c
   507  0025A0  0E01               	movlw	1
   508  0025A2  ECB9  F015         	call	_POS_CURSOR
   509  0025A6                     
   510                           ;maincode1.c: 55:         ESCRIBE_MENSAJE2("C3:");
   511  0025A6  0E47               	movlw	low STR_3
   512  0025A8  6E25               	movwf	ESCRIBE_MENSAJE2@cadena^(0+1280),c
   513  0025AA  0E25               	movlw	high STR_3
   514  0025AC  6E26               	movwf	(ESCRIBE_MENSAJE2@cadena+1)^(0+1280),c
   515  0025AE  EC09  F015         	call	_ESCRIBE_MENSAJE2	;wreg free
   516  0025B2                     
   517                           ;maincode1.c: 56:         convierte(tomamuestra_ADC(3));
   518  0025B2  0E03               	movlw	3
   519  0025B4  EC8B  F016         	call	_tomamuestra_ADC
   520  0025B8  C521  F52D         	movff	?_tomamuestra_ADC,convierte@numero
   521  0025BC  C522  F52E         	movff	?_tomamuestra_ADC+1,convierte@numero+1
   522  0025C0  EC39  F013         	call	_convierte	;wreg free
   523  0025C4                     
   524                           ;maincode1.c: 57:         ENVIA_CHAR(millar+0x30);
   525  0025C4  5034               	movf	_millar^(0+1280),w,c
   526  0025C6  0F30               	addlw	48
   527  0025C8  EC0D  F016         	call	_ENVIA_CHAR
   528  0025CC                     
   529                           ;maincode1.c: 58:         ENVIA_CHAR(centena+0x30);
   530  0025CC  5033               	movf	_centena^(0+1280),w,c
   531  0025CE  0F30               	addlw	48
   532  0025D0  EC0D  F016         	call	_ENVIA_CHAR
   533  0025D4                     
   534                           ;maincode1.c: 59:         ENVIA_CHAR(decena+0x30);
   535  0025D4  5032               	movf	_decena^(0+1280),w,c
   536  0025D6  0F30               	addlw	48
   537  0025D8  EC0D  F016         	call	_ENVIA_CHAR
   538  0025DC                     
   539                           ;maincode1.c: 60:         ENVIA_CHAR(unidad+0x30);
   540  0025DC  5031               	movf	_unidad^(0+1280),w,c
   541  0025DE  0F30               	addlw	48
   542  0025E0  EC0D  F016         	call	_ENVIA_CHAR
   543  0025E4                     
   544                           ;maincode1.c: 61:         ESCRIBE_MENSAJE2(" C5:");
   545  0025E4  0E42               	movlw	low STR_4
   546  0025E6  6E25               	movwf	ESCRIBE_MENSAJE2@cadena^(0+1280),c
   547  0025E8  0E25               	movlw	high STR_4
   548  0025EA  6E26               	movwf	(ESCRIBE_MENSAJE2@cadena+1)^(0+1280),c
   549  0025EC  EC09  F015         	call	_ESCRIBE_MENSAJE2	;wreg free
   550  0025F0                     
   551                           ;maincode1.c: 62:         convierte(tomamuestra_ADC(5));
   552  0025F0  0E05               	movlw	5
   553  0025F2  EC8B  F016         	call	_tomamuestra_ADC
   554  0025F6  C521  F52D         	movff	?_tomamuestra_ADC,convierte@numero
   555  0025FA  C522  F52E         	movff	?_tomamuestra_ADC+1,convierte@numero+1
   556  0025FE  EC39  F013         	call	_convierte	;wreg free
   557  002602                     
   558                           ;maincode1.c: 63:         ENVIA_CHAR(millar+0x30);
   559  002602  5034               	movf	_millar^(0+1280),w,c
   560  002604  0F30               	addlw	48
   561  002606  EC0D  F016         	call	_ENVIA_CHAR
   562  00260A                     
   563                           ;maincode1.c: 64:         ENVIA_CHAR(centena+0x30);
   564  00260A  5033               	movf	_centena^(0+1280),w,c
   565  00260C  0F30               	addlw	48
   566  00260E  EC0D  F016         	call	_ENVIA_CHAR
   567  002612                     
   568                           ;maincode1.c: 65:         ENVIA_CHAR(decena+0x30);
   569  002612  5032               	movf	_decena^(0+1280),w,c
   570  002614  0F30               	addlw	48
   571  002616  EC0D  F016         	call	_ENVIA_CHAR
   572  00261A                     
   573                           ;maincode1.c: 66:         ENVIA_CHAR(unidad+0x30);
   574  00261A  5031               	movf	_unidad^(0+1280),w,c
   575  00261C  0F30               	addlw	48
   576  00261E  EC0D  F016         	call	_ENVIA_CHAR
   577  002622                     
   578                           ;maincode1.c: 67:         POS_CURSOR(2,0);
   579  002622  0E00               	movlw	0
   580  002624  6E24               	movwf	POS_CURSOR@columna^(0+1280),c
   581  002626  0E02               	movlw	2
   582  002628  ECB9  F015         	call	_POS_CURSOR
   583  00262C                     
   584                           ;maincode1.c: 68:         ESCRIBE_MENSAJE2("C6:");
   585  00262C  0E4B               	movlw	low STR_5
   586  00262E  6E25               	movwf	ESCRIBE_MENSAJE2@cadena^(0+1280),c
   587  002630  0E25               	movlw	high STR_5
   588  002632  6E26               	movwf	(ESCRIBE_MENSAJE2@cadena+1)^(0+1280),c
   589  002634  EC09  F015         	call	_ESCRIBE_MENSAJE2	;wreg free
   590  002638                     
   591                           ;maincode1.c: 69:         convierte(tomamuestra_ADC(6));
   592  002638  0E06               	movlw	6
   593  00263A  EC8B  F016         	call	_tomamuestra_ADC
   594  00263E  C521  F52D         	movff	?_tomamuestra_ADC,convierte@numero
   595  002642  C522  F52E         	movff	?_tomamuestra_ADC+1,convierte@numero+1
   596  002646  EC39  F013         	call	_convierte	;wreg free
   597  00264A                     
   598                           ;maincode1.c: 70:         ENVIA_CHAR(millar+0x30);
   599  00264A  5034               	movf	_millar^(0+1280),w,c
   600  00264C  0F30               	addlw	48
   601  00264E  EC0D  F016         	call	_ENVIA_CHAR
   602  002652                     
   603                           ;maincode1.c: 71:         ENVIA_CHAR(centena+0x30);
   604  002652  5033               	movf	_centena^(0+1280),w,c
   605  002654  0F30               	addlw	48
   606  002656  EC0D  F016         	call	_ENVIA_CHAR
   607  00265A                     
   608                           ;maincode1.c: 72:         ENVIA_CHAR(decena+0x30);
   609  00265A  5032               	movf	_decena^(0+1280),w,c
   610  00265C  0F30               	addlw	48
   611  00265E  EC0D  F016         	call	_ENVIA_CHAR
   612  002662                     
   613                           ;maincode1.c: 73:         ENVIA_CHAR(unidad+0x30);
   614  002662  5031               	movf	_unidad^(0+1280),w,c
   615  002664  0F30               	addlw	48
   616  002666  EC0D  F016         	call	_ENVIA_CHAR
   617  00266A  EFCE  F012         	goto	l1549
   618  00266E  EF81  F000         	goto	start
   619  002672                     __end_of_main:
   620                           	callstack 0
   621                           
   622 ;; *************** function _tomamuestra_ADC *****************
   623 ;; Defined at:
   624 ;;		line 38 in file "maincode1.c"
   625 ;; Parameters:    Size  Location     Type
   626 ;;  canal           1    wreg     unsigned char 
   627 ;; Auto vars:     Size  Location     Type
   628 ;;  canal           1   36[COMRAM] unsigned char 
   629 ;; Return value:  Size  Location     Type
   630 ;;                  2   32[COMRAM] unsigned int 
   631 ;; Registers used:
   632 ;;		wreg, status,2, status,0
   633 ;; Tracked objects:
   634 ;;		On entry : 0/0
   635 ;;		On exit  : 0/0
   636 ;;		Unchanged: 0/0
   637 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   638 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   639 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   640 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   641 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   642 ;;Total ram usage:        5 bytes
   643 ;; Hardware stack levels used: 1
   644 ;; Hardware stack levels required when called: 4
   645 ;; This function calls:
   646 ;;		Nothing
   647 ;; This function is called by:
   648 ;;		_main
   649 ;; This function uses a non-reentrant model
   650 ;;
   651                           
   652                           	psect	text1
   653  002D16                     __ptext1:
   654                           	callstack 0
   655  002D16                     _tomamuestra_ADC:
   656                           	callstack 122
   657                           
   658                           ;incstack = 0
   659                           ;tomamuestra_ADC@canal stored from wreg
   660  002D16  6E25               	movwf	tomamuestra_ADC@canal^(0+1280),c
   661  002D18                     
   662                           ;maincode1.c: 39:     ADPCH = canal;
   663  002D18  0061  F494  F3EC   	movff	tomamuestra_ADC@canal,1004	;volatile
   664  002D1E                     
   665                           ;maincode1.c: 40:     ADCON0bits.GO = 1;
   666  002D1E  0103               	movlb	3	; () banked
   667  002D20  81F3               	bsf	243,0,b	;volatile
   668  002D22                     l164:
   669                           
   670                           ; BSR set to: 3
   671  002D22  B1F3               	btfsc	243,0,b	;volatile
   672  002D24  EF96  F016         	goto	u381
   673  002D28  EF98  F016         	goto	u380
   674  002D2C                     u381:
   675  002D2C  EF91  F016         	goto	l164
   676  002D30                     u380:
   677  002D30                     
   678                           ; BSR set to: 3
   679                           ;maincode1.c: 42:     return (ADRESH<<8) + ADRESL;
   680  002D30  51EB               	movf	235,w,b	;volatile
   681  002D32  6E24               	movwf	(??_tomamuestra_ADC+1)^(0+1280),c
   682  002D34  6A23               	clrf	??_tomamuestra_ADC^(0+1280),c
   683  002D36  51EA               	movf	234,w,b	;volatile
   684  002D38  2423               	addwf	??_tomamuestra_ADC^(0+1280),w,c
   685  002D3A  6E21               	movwf	?_tomamuestra_ADC^(0+1280),c
   686  002D3C  0E00               	movlw	0
   687  002D3E  2024               	addwfc	(??_tomamuestra_ADC+1)^(0+1280),w,c
   688  002D40  6E22               	movwf	(?_tomamuestra_ADC+1)^(0+1280),c
   689  002D42                     
   690                           ; BSR set to: 3
   691  002D42  0012               	return		;funcret
   692  002D44                     __end_of_tomamuestra_ADC:
   693                           	callstack 0
   694                           
   695 ;; *************** function _convierte *****************
   696 ;; Defined at:
   697 ;;		line 31 in file "maincode1.c"
   698 ;; Parameters:    Size  Location     Type
   699 ;;  numero          2   44[COMRAM] unsigned int 
   700 ;; Auto vars:     Size  Location     Type
   701 ;;		None
   702 ;; Return value:  Size  Location     Type
   703 ;;                  1    wreg      void 
   704 ;; Registers used:
   705 ;;		wreg, status,2, status,0, cstack
   706 ;; Tracked objects:
   707 ;;		On entry : 0/0
   708 ;;		On exit  : 0/0
   709 ;;		Unchanged: 0/0
   710 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   711 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   712 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   713 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   714 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   715 ;;Total ram usage:        2 bytes
   716 ;; Hardware stack levels used: 1
   717 ;; Hardware stack levels required when called: 5
   718 ;; This function calls:
   719 ;;		___lwdiv
   720 ;;		___lwmod
   721 ;; This function is called by:
   722 ;;		_main
   723 ;; This function uses a non-reentrant model
   724 ;;
   725                           
   726                           	psect	text2
   727  002672                     __ptext2:
   728                           	callstack 0
   729  002672                     _convierte:
   730                           	callstack 121
   731  002672                     
   732                           ;maincode1.c: 32:     millar = numero / 1000;
   733  002672  C52D  F526         	movff	convierte@numero,___lwdiv@dividend
   734  002676  C52E  F527         	movff	convierte@numero+1,___lwdiv@dividend+1
   735  00267A  0E03               	movlw	3
   736  00267C  6E29               	movwf	(___lwdiv@divisor+1)^(0+1280),c
   737  00267E  0EE8               	movlw	232
   738  002680  6E28               	movwf	___lwdiv@divisor^(0+1280),c
   739  002682  EC74  F014         	call	___lwdiv	;wreg free
   740  002686  5026               	movf	?___lwdiv^(0+1280),w,c
   741  002688  6E34               	movwf	_millar^(0+1280),c
   742                           
   743                           ;maincode1.c: 33:     centena = (numero % 1000) / 100;
   744  00268A  0E03               	movlw	3
   745  00268C  6E24               	movwf	(___lwmod@divisor+1)^(0+1280),c
   746  00268E  0EE8               	movlw	232
   747  002690  6E23               	movwf	___lwmod@divisor^(0+1280),c
   748  002692  C52D  F521         	movff	convierte@numero,___lwmod@dividend
   749  002696  C52E  F522         	movff	convierte@numero+1,___lwmod@dividend+1
   750  00269A  ECAE  F014         	call	___lwmod	;wreg free
   751  00269E  C521  F526         	movff	?___lwmod,___lwdiv@dividend
   752  0026A2  C522  F527         	movff	?___lwmod+1,___lwdiv@dividend+1
   753  0026A6  0E00               	movlw	0
   754  0026A8  6E29               	movwf	(___lwdiv@divisor+1)^(0+1280),c
   755  0026AA  0E64               	movlw	100
   756  0026AC  6E28               	movwf	___lwdiv@divisor^(0+1280),c
   757  0026AE  EC74  F014         	call	___lwdiv	;wreg free
   758  0026B2  5026               	movf	?___lwdiv^(0+1280),w,c
   759  0026B4  6E33               	movwf	_centena^(0+1280),c
   760                           
   761                           ;maincode1.c: 34:     decena = (numero % 100) / 10;
   762  0026B6  0E00               	movlw	0
   763  0026B8  6E24               	movwf	(___lwmod@divisor+1)^(0+1280),c
   764  0026BA  0E64               	movlw	100
   765  0026BC  6E23               	movwf	___lwmod@divisor^(0+1280),c
   766  0026BE  C52D  F521         	movff	convierte@numero,___lwmod@dividend
   767  0026C2  C52E  F522         	movff	convierte@numero+1,___lwmod@dividend+1
   768  0026C6  ECAE  F014         	call	___lwmod	;wreg free
   769  0026CA  C521  F526         	movff	?___lwmod,___lwdiv@dividend
   770  0026CE  C522  F527         	movff	?___lwmod+1,___lwdiv@dividend+1
   771  0026D2  0E00               	movlw	0
   772  0026D4  6E29               	movwf	(___lwdiv@divisor+1)^(0+1280),c
   773  0026D6  0E0A               	movlw	10
   774  0026D8  6E28               	movwf	___lwdiv@divisor^(0+1280),c
   775  0026DA  EC74  F014         	call	___lwdiv	;wreg free
   776  0026DE  5026               	movf	?___lwdiv^(0+1280),w,c
   777  0026E0  6E32               	movwf	_decena^(0+1280),c
   778                           
   779                           ;maincode1.c: 35:     unidad = numero % 10;
   780  0026E2  C52D  F521         	movff	convierte@numero,___lwmod@dividend
   781  0026E6  C52E  F522         	movff	convierte@numero+1,___lwmod@dividend+1
   782  0026EA  0E00               	movlw	0
   783  0026EC  6E24               	movwf	(___lwmod@divisor+1)^(0+1280),c
   784  0026EE  0E0A               	movlw	10
   785  0026F0  6E23               	movwf	___lwmod@divisor^(0+1280),c
   786  0026F2  ECAE  F014         	call	___lwmod	;wreg free
   787  0026F6  5021               	movf	?___lwmod^(0+1280),w,c
   788  0026F8  6E31               	movwf	_unidad^(0+1280),c
   789  0026FA  0012               	return		;funcret
   790  0026FC                     __end_of_convierte:
   791                           	callstack 0
   792                           
   793 ;; *************** function ___lwmod *****************
   794 ;; Defined at:
   795 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\lwmod.c"
   796 ;; Parameters:    Size  Location     Type
   797 ;;  dividend        2   32[COMRAM] unsigned int 
   798 ;;  divisor         2   34[COMRAM] unsigned int 
   799 ;; Auto vars:     Size  Location     Type
   800 ;;  counter         1   36[COMRAM] unsigned char 
   801 ;; Return value:  Size  Location     Type
   802 ;;                  2   32[COMRAM] unsigned int 
   803 ;; Registers used:
   804 ;;		wreg, status,2, status,0
   805 ;; Tracked objects:
   806 ;;		On entry : 0/0
   807 ;;		On exit  : 0/0
   808 ;;		Unchanged: 0/0
   809 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   810 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   811 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   812 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   813 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   814 ;;Total ram usage:        5 bytes
   815 ;; Hardware stack levels used: 1
   816 ;; Hardware stack levels required when called: 4
   817 ;; This function calls:
   818 ;;		Nothing
   819 ;; This function is called by:
   820 ;;		_convierte
   821 ;; This function uses a non-reentrant model
   822 ;;
   823                           
   824                           	psect	text3
   825  00295C                     __ptext3:
   826                           	callstack 0
   827  00295C                     ___lwmod:
   828                           	callstack 121
   829  00295C  5023               	movf	___lwmod@divisor^(0+1280),w,c
   830  00295E  1024               	iorwf	(___lwmod@divisor+1)^(0+1280),w,c
   831  002960  B4D8               	btfsc	status,2,c
   832  002962  EFB5  F014         	goto	u311
   833  002966  EFB7  F014         	goto	u310
   834  00296A                     u311:
   835  00296A  EFDB  F014         	goto	l689
   836  00296E                     u310:
   837  00296E  0E01               	movlw	1
   838  002970  6E25               	movwf	___lwmod@counter^(0+1280),c
   839  002972  EFBF  F014         	goto	l1423
   840  002976                     l1421:
   841  002976  90D8               	bcf	status,0,c
   842  002978  3623               	rlcf	___lwmod@divisor^(0+1280),f,c
   843  00297A  3624               	rlcf	(___lwmod@divisor+1)^(0+1280),f,c
   844  00297C  2A25               	incf	___lwmod@counter^(0+1280),f,c
   845  00297E                     l1423:
   846  00297E  AE24               	btfss	(___lwmod@divisor+1)^(0+1280),7,c
   847  002980  EFC4  F014         	goto	u321
   848  002984  EFC6  F014         	goto	u320
   849  002988                     u321:
   850  002988  EFBB  F014         	goto	l1421
   851  00298C                     u320:
   852  00298C                     l1425:
   853  00298C  5023               	movf	___lwmod@divisor^(0+1280),w,c
   854  00298E  5C21               	subwf	___lwmod@dividend^(0+1280),w,c
   855  002990  5024               	movf	(___lwmod@divisor+1)^(0+1280),w,c
   856  002992  5822               	subwfb	(___lwmod@dividend+1)^(0+1280),w,c
   857  002994  A0D8               	btfss	status,0,c
   858  002996  EFCF  F014         	goto	u331
   859  00299A  EFD1  F014         	goto	u330
   860  00299E                     u331:
   861  00299E  EFD5  F014         	goto	l1429
   862  0029A2                     u330:
   863  0029A2  5023               	movf	___lwmod@divisor^(0+1280),w,c
   864  0029A4  5E21               	subwf	___lwmod@dividend^(0+1280),f,c
   865  0029A6  5024               	movf	(___lwmod@divisor+1)^(0+1280),w,c
   866  0029A8  5A22               	subwfb	(___lwmod@dividend+1)^(0+1280),f,c
   867  0029AA                     l1429:
   868  0029AA  90D8               	bcf	status,0,c
   869  0029AC  3224               	rrcf	(___lwmod@divisor+1)^(0+1280),f,c
   870  0029AE  3223               	rrcf	___lwmod@divisor^(0+1280),f,c
   871  0029B0  2E25               	decfsz	___lwmod@counter^(0+1280),f,c
   872  0029B2  EFC6  F014         	goto	l1425
   873  0029B6                     l689:
   874  0029B6  C521  F521         	movff	___lwmod@dividend,?___lwmod
   875  0029BA  C522  F522         	movff	___lwmod@dividend+1,?___lwmod+1
   876  0029BE  0012               	return		;funcret
   877  0029C0                     __end_of___lwmod:
   878                           	callstack 0
   879                           
   880 ;; *************** function ___lwdiv *****************
   881 ;; Defined at:
   882 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\lwdiv.c"
   883 ;; Parameters:    Size  Location     Type
   884 ;;  dividend        2   37[COMRAM] unsigned int 
   885 ;;  divisor         2   39[COMRAM] unsigned int 
   886 ;; Auto vars:     Size  Location     Type
   887 ;;  quotient        2   41[COMRAM] unsigned int 
   888 ;;  counter         1   43[COMRAM] unsigned char 
   889 ;; Return value:  Size  Location     Type
   890 ;;                  2   37[COMRAM] unsigned int 
   891 ;; Registers used:
   892 ;;		wreg, status,2, status,0
   893 ;; Tracked objects:
   894 ;;		On entry : 0/0
   895 ;;		On exit  : 0/0
   896 ;;		Unchanged: 0/0
   897 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   898 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   899 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   900 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   901 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   902 ;;Total ram usage:        7 bytes
   903 ;; Hardware stack levels used: 1
   904 ;; Hardware stack levels required when called: 4
   905 ;; This function calls:
   906 ;;		Nothing
   907 ;; This function is called by:
   908 ;;		_convierte
   909 ;; This function uses a non-reentrant model
   910 ;;
   911                           
   912                           	psect	text4
   913  0028E8                     __ptext4:
   914                           	callstack 0
   915  0028E8                     ___lwdiv:
   916                           	callstack 121
   917  0028E8  0E00               	movlw	0
   918  0028EA  6E2B               	movwf	(___lwdiv@quotient+1)^(0+1280),c
   919  0028EC  0E00               	movlw	0
   920  0028EE  6E2A               	movwf	___lwdiv@quotient^(0+1280),c
   921  0028F0  5028               	movf	___lwdiv@divisor^(0+1280),w,c
   922  0028F2  1029               	iorwf	(___lwdiv@divisor+1)^(0+1280),w,c
   923  0028F4  B4D8               	btfsc	status,2,c
   924  0028F6  EF7F  F014         	goto	u281
   925  0028FA  EF81  F014         	goto	u280
   926  0028FE                     u281:
   927  0028FE  EFA9  F014         	goto	l679
   928  002902                     u280:
   929  002902  0E01               	movlw	1
   930  002904  6E2C               	movwf	___lwdiv@counter^(0+1280),c
   931  002906  EF89  F014         	goto	l1403
   932  00290A                     l1401:
   933  00290A  90D8               	bcf	status,0,c
   934  00290C  3628               	rlcf	___lwdiv@divisor^(0+1280),f,c
   935  00290E  3629               	rlcf	(___lwdiv@divisor+1)^(0+1280),f,c
   936  002910  2A2C               	incf	___lwdiv@counter^(0+1280),f,c
   937  002912                     l1403:
   938  002912  AE29               	btfss	(___lwdiv@divisor+1)^(0+1280),7,c
   939  002914  EF8E  F014         	goto	u291
   940  002918  EF90  F014         	goto	u290
   941  00291C                     u291:
   942  00291C  EF85  F014         	goto	l1401
   943  002920                     u290:
   944  002920                     l1405:
   945  002920  90D8               	bcf	status,0,c
   946  002922  362A               	rlcf	___lwdiv@quotient^(0+1280),f,c
   947  002924  362B               	rlcf	(___lwdiv@quotient+1)^(0+1280),f,c
   948  002926  5028               	movf	___lwdiv@divisor^(0+1280),w,c
   949  002928  5C26               	subwf	___lwdiv@dividend^(0+1280),w,c
   950  00292A  5029               	movf	(___lwdiv@divisor+1)^(0+1280),w,c
   951  00292C  5827               	subwfb	(___lwdiv@dividend+1)^(0+1280),w,c
   952  00292E  A0D8               	btfss	status,0,c
   953  002930  EF9C  F014         	goto	u301
   954  002934  EF9E  F014         	goto	u300
   955  002938                     u301:
   956  002938  EFA3  F014         	goto	l1413
   957  00293C                     u300:
   958  00293C  5028               	movf	___lwdiv@divisor^(0+1280),w,c
   959  00293E  5E26               	subwf	___lwdiv@dividend^(0+1280),f,c
   960  002940  5029               	movf	(___lwdiv@divisor+1)^(0+1280),w,c
   961  002942  5A27               	subwfb	(___lwdiv@dividend+1)^(0+1280),f,c
   962  002944  802A               	bsf	___lwdiv@quotient^(0+1280),0,c
   963  002946                     l1413:
   964  002946  90D8               	bcf	status,0,c
   965  002948  3229               	rrcf	(___lwdiv@divisor+1)^(0+1280),f,c
   966  00294A  3228               	rrcf	___lwdiv@divisor^(0+1280),f,c
   967  00294C  2E2C               	decfsz	___lwdiv@counter^(0+1280),f,c
   968  00294E  EF90  F014         	goto	l1405
   969  002952                     l679:
   970  002952  C52A  F526         	movff	___lwdiv@quotient,?___lwdiv
   971  002956  C52B  F527         	movff	___lwdiv@quotient+1,?___lwdiv+1
   972  00295A  0012               	return		;funcret
   973  00295C                     __end_of___lwdiv:
   974                           	callstack 0
   975                           
   976 ;; *************** function _configuro *****************
   977 ;; Defined at:
   978 ;;		line 8 in file "maincode1.c"
   979 ;; Parameters:    Size  Location     Type
   980 ;;		None
   981 ;; Auto vars:     Size  Location     Type
   982 ;;		None
   983 ;; Return value:  Size  Location     Type
   984 ;;                  1    wreg      void 
   985 ;; Registers used:
   986 ;;		wreg, status,2, status,0, cstack
   987 ;; Tracked objects:
   988 ;;		On entry : 0/0
   989 ;;		On exit  : 0/0
   990 ;;		Unchanged: 0/0
   991 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   992 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   993 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   994 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   995 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   996 ;;Total ram usage:        0 bytes
   997 ;; Hardware stack levels used: 1
   998 ;; Hardware stack levels required when called: 8
   999 ;; This function calls:
  1000 ;;		_LCD_INIT
  1001 ;; This function is called by:
  1002 ;;		_main
  1003 ;; This function uses a non-reentrant model
  1004 ;;
  1005                           
  1006                           	psect	text5
  1007  002AAE                     __ptext5:
  1008                           	callstack 0
  1009  002AAE                     _configuro:
  1010                           	callstack 118
  1011  002AAE                     
  1012                           ;maincode1.c: 9:     OSCCON1 = 0x60;
  1013  002AAE  0E60               	movlw	96
  1014  002AB0  0100               	movlb	0	; () banked
  1015  002AB2  6FAD               	movwf	173,b	;volatile
  1016                           
  1017                           ;maincode1.c: 10:     OSCFRQ = 0x02;
  1018  002AB4  0E02               	movlw	2
  1019  002AB6  6FB1               	movwf	177,b	;volatile
  1020                           
  1021                           ;maincode1.c: 11:     OSCEN = 0x40;
  1022  002AB8  0E40               	movlw	64
  1023  002ABA  6FB3               	movwf	179,b	;volatile
  1024                           
  1025                           ;maincode1.c: 12:     TRISD = 0x0F;
  1026  002ABC  0E0F               	movlw	15
  1027  002ABE  6EC9               	movwf	201,c	;volatile
  1028                           
  1029                           ;maincode1.c: 13:     ANSELD = 0x0F;
  1030  002AC0  0E0F               	movlw	15
  1031  002AC2  0104               	movlb	4	; () banked
  1032  002AC4  6F18               	movwf	24,b	;volatile
  1033                           
  1034                           ;maincode1.c: 14:     TRISA = 0xF8;
  1035  002AC6  0EF8               	movlw	248
  1036  002AC8  6EC6               	movwf	198,c	;volatile
  1037                           
  1038                           ;maincode1.c: 15:     ANSELA = 0xF8;
  1039  002ACA  0EF8               	movlw	248
  1040  002ACC  6F00               	movwf	0,b	;volatile
  1041  002ACE                     
  1042                           ; BSR set to: 4
  1043                           ;maincode1.c: 16:     TRISB = 0xFF;
  1044  002ACE  68C7               	setf	199,c	;volatile
  1045                           
  1046                           ;maincode1.c: 17:     ANSELB = 0xFC;
  1047  002AD0  0EFC               	movlw	252
  1048  002AD2  6F08               	movwf	8,b	;volatile
  1049                           
  1050                           ;maincode1.c: 18:     WPUB = 0x03;
  1051  002AD4  0E03               	movlw	3
  1052  002AD6  6F09               	movwf	9,b	;volatile
  1053  002AD8                     
  1054                           ; BSR set to: 4
  1055                           ;maincode1.c: 19:     INTCON0bits.INT0EDG = 0;
  1056  002AD8  90D6               	bcf	214,0,c	;volatile
  1057  002ADA                     
  1058                           ; BSR set to: 4
  1059                           ;maincode1.c: 20:     INTCON0bits.INT1EDG = 0;
  1060  002ADA  92D6               	bcf	214,1,c	;volatile
  1061  002ADC                     
  1062                           ; BSR set to: 4
  1063                           ;maincode1.c: 21:     INTCON0bits.GIE = 1;
  1064  002ADC  8ED6               	bsf	214,7,c	;volatile
  1065  002ADE                     
  1066                           ; BSR set to: 4
  1067                           ;maincode1.c: 22:     PIE1bits.INT0IE = 1;
  1068  002ADE  809F               	bsf	159,0,c	;volatile
  1069  002AE0                     
  1070                           ; BSR set to: 4
  1071                           ;maincode1.c: 23:     PIE6bits.INT1IE = 1;
  1072  002AE0  80A4               	bsf	164,0,c	;volatile
  1073                           
  1074                           ;maincode1.c: 25:     ADCON0bits.ADFM = 1;
  1075  002AE2  0103               	movlb	3	; () banked
  1076  002AE4  51F3               	movf	243,w,b	;volatile
  1077  002AE6  0BF3               	andlw	-13
  1078  002AE8  0904               	iorlw	4
  1079  002AEA  6FF3               	movwf	243,b	;volatile
  1080  002AEC                     
  1081                           ; BSR set to: 3
  1082                           ;maincode1.c: 26:     ADCON0bits.CS = 1;
  1083  002AEC  89F3               	bsf	243,4,b	;volatile
  1084  002AEE                     
  1085                           ; BSR set to: 3
  1086                           ;maincode1.c: 27:     ADCON0bits.ADON = 1;
  1087  002AEE  8FF3               	bsf	243,7,b	;volatile
  1088  002AF0                     
  1089                           ; BSR set to: 3
  1090                           ;maincode1.c: 28:     LCD_INIT();
  1091  002AF0  EC5B  F016         	call	_LCD_INIT	;wreg free
  1092  002AF4  0012               	return		;funcret
  1093  002AF6                     __end_of_configuro:
  1094                           	callstack 0
  1095                           
  1096 ;; *************** function _LCD_INIT *****************
  1097 ;; Defined at:
  1098 ;;		line 184 in file "LCD.c"
  1099 ;; Parameters:    Size  Location     Type
  1100 ;;		None
  1101 ;; Auto vars:     Size  Location     Type
  1102 ;;		None
  1103 ;; Return value:  Size  Location     Type
  1104 ;;                  1    wreg      void 
  1105 ;; Registers used:
  1106 ;;		wreg, status,2, status,0, cstack
  1107 ;; Tracked objects:
  1108 ;;		On entry : 0/0
  1109 ;;		On exit  : 0/0
  1110 ;;		Unchanged: 0/0
  1111 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1112 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1113 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1114 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1115 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1116 ;;Total ram usage:        1 bytes
  1117 ;; Hardware stack levels used: 1
  1118 ;; Hardware stack levels required when called: 7
  1119 ;; This function calls:
  1120 ;;		_BORRAR_LCD
  1121 ;;		_CURSOR_HOME
  1122 ;;		_CURSOR_ONOFF
  1123 ;;		_LCD_CONFIG
  1124 ;; This function is called by:
  1125 ;;		_configuro
  1126 ;; This function uses a non-reentrant model
  1127 ;;
  1128                           
  1129                           	psect	text6
  1130  002CB6                     __ptext6:
  1131                           	callstack 0
  1132  002CB6                     _LCD_INIT:
  1133                           	callstack 118
  1134  002CB6                     
  1135                           ;LCD.c: 185:     _delay((unsigned long)((15)*(4000000UL/4000.0)));
  1136  002CB6  0E14               	movlw	20
  1137  002CB8  6E25               	movwf	??_LCD_INIT^(0+1280),c
  1138  002CBA  0E7A               	movlw	122
  1139  002CBC                     u437:
  1140  002CBC  2EE8               	decfsz	wreg,f,c
  1141  002CBE  D7FE               	bra	u437
  1142  002CC0  2E25               	decfsz	??_LCD_INIT^(0+1280),f,c
  1143  002CC2  D7FC               	bra	u437
  1144  002CC4                     
  1145                           ;LCD.c: 186:     LCD_CONFIG();
  1146  002CC4  ECE0  F014         	call	_LCD_CONFIG	;wreg free
  1147  002CC8                     
  1148                           ;LCD.c: 187:     _delay((unsigned long)((15)*(4000000UL/4000.0)));
  1149  002CC8  0E14               	movlw	20
  1150  002CCA  6E25               	movwf	??_LCD_INIT^(0+1280),c
  1151  002CCC  0E7A               	movlw	122
  1152  002CCE                     u447:
  1153  002CCE  2EE8               	decfsz	wreg,f,c
  1154  002CD0  D7FE               	bra	u447
  1155  002CD2  2E25               	decfsz	??_LCD_INIT^(0+1280),f,c
  1156  002CD4  D7FC               	bra	u447
  1157                           
  1158                           ;LCD.c: 188:     BORRAR_LCD();
  1159  002CD6  ECD4  F016         	call	_BORRAR_LCD	;wreg free
  1160                           
  1161                           ;LCD.c: 189:     CURSOR_HOME();
  1162  002CDA  ECD0  F016         	call	_CURSOR_HOME	;wreg free
  1163                           
  1164                           ;LCD.c: 190:     CURSOR_ONOFF(1);
  1165  002CDE  0E01               	movlw	1
  1166  002CE0  EC73  F016         	call	_CURSOR_ONOFF
  1167  002CE4  0012               	return		;funcret
  1168  002CE6                     __end_of_LCD_INIT:
  1169                           	callstack 0
  1170                           
  1171 ;; *************** function _LCD_CONFIG *****************
  1172 ;; Defined at:
  1173 ;;		line 101 in file "LCD.c"
  1174 ;; Parameters:    Size  Location     Type
  1175 ;;		None
  1176 ;; Auto vars:     Size  Location     Type
  1177 ;;		None
  1178 ;; Return value:  Size  Location     Type
  1179 ;;                  1    wreg      void 
  1180 ;; Registers used:
  1181 ;;		wreg, status,2, status,0, cstack
  1182 ;; Tracked objects:
  1183 ;;		On entry : 0/0
  1184 ;;		On exit  : 0/0
  1185 ;;		Unchanged: 0/0
  1186 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1187 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1188 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1189 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1190 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1191 ;;Total ram usage:        1 bytes
  1192 ;; Hardware stack levels used: 1
  1193 ;; Hardware stack levels required when called: 6
  1194 ;; This function calls:
  1195 ;;		_ENVIA_LCD_CMD
  1196 ;;		_ENVIA_NIBBLE
  1197 ;; This function is called by:
  1198 ;;		_LCD_INIT
  1199 ;; This function uses a non-reentrant model
  1200 ;;
  1201                           
  1202                           	psect	text7
  1203  0029C0                     __ptext7:
  1204                           	callstack 0
  1205  0029C0                     _LCD_CONFIG:
  1206                           	callstack 118
  1207  0029C0                     
  1208                           ;LCD.c: 103:  LATAbits.LATA0 = 0;
  1209  0029C0  90BE               	bcf	190,0,c	;volatile
  1210                           
  1211                           ;LCD.c: 104:  LATAbits.LATA1 = 0;
  1212  0029C2  92BE               	bcf	190,1,c	;volatile
  1213  0029C4                     
  1214                           ;LCD.c: 105:  ENVIA_NIBBLE(0x30);
  1215  0029C4  0E30               	movlw	48
  1216  0029C6  ECB4  F016         	call	_ENVIA_NIBBLE
  1217  0029CA                     
  1218                           ;LCD.c: 106:     _delay((unsigned long)((2)*(4000000UL/4000.0)));
  1219  0029CA  0E03               	movlw	3
  1220  0029CC  6E24               	movwf	??_LCD_CONFIG^(0+1280),c
  1221  0029CE  0E98               	movlw	152
  1222  0029D0                     u457:
  1223  0029D0  2EE8               	decfsz	wreg,f,c
  1224  0029D2  D7FE               	bra	u457
  1225  0029D4  2E24               	decfsz	??_LCD_CONFIG^(0+1280),f,c
  1226  0029D6  D7FC               	bra	u457
  1227  0029D8                     
  1228                           ;LCD.c: 107:  ENVIA_NIBBLE(0x30);
  1229  0029D8  0E30               	movlw	48
  1230  0029DA  ECB4  F016         	call	_ENVIA_NIBBLE
  1231                           
  1232                           ;LCD.c: 108:     _delay((unsigned long)((100)*(4000000UL/4000000.0)));
  1233  0029DE  0E21               	movlw	33
  1234  0029E0                     u467:
  1235  0029E0  2EE8               	decfsz	wreg,f,c
  1236  0029E2  D7FE               	bra	u467
  1237  0029E4  F000               	nop	
  1238  0029E6                     
  1239                           ;LCD.c: 109:     ENVIA_NIBBLE(0x30);
  1240  0029E6  0E30               	movlw	48
  1241  0029E8  ECB4  F016         	call	_ENVIA_NIBBLE
  1242  0029EC                     
  1243                           ;LCD.c: 110:  ENVIA_NIBBLE(0x20);
  1244  0029EC  0E20               	movlw	32
  1245  0029EE  ECB4  F016         	call	_ENVIA_NIBBLE
  1246  0029F2                     
  1247                           ;LCD.c: 111:  ENVIA_LCD_CMD(0x01);
  1248  0029F2  0E01               	movlw	1
  1249  0029F4  ECF3  F015         	call	_ENVIA_LCD_CMD
  1250  0029F8                     
  1251                           ;LCD.c: 112:  ENVIA_LCD_CMD(0x28);
  1252  0029F8  0E28               	movlw	40
  1253  0029FA  ECF3  F015         	call	_ENVIA_LCD_CMD
  1254  0029FE                     
  1255                           ;LCD.c: 113:  ENVIA_LCD_CMD(0x0F);
  1256  0029FE  0E0F               	movlw	15
  1257  002A00  ECF3  F015         	call	_ENVIA_LCD_CMD
  1258  002A04                     
  1259                           ;LCD.c: 114:  ENVIA_LCD_CMD(0x06);
  1260  002A04  0E06               	movlw	6
  1261  002A06  ECF3  F015         	call	_ENVIA_LCD_CMD
  1262  002A0A                     
  1263                           ;LCD.c: 115:  ENVIA_LCD_CMD(0x01);
  1264  002A0A  0E01               	movlw	1
  1265  002A0C  ECF3  F015         	call	_ENVIA_LCD_CMD
  1266  002A10  0012               	return		;funcret
  1267  002A12                     __end_of_LCD_CONFIG:
  1268                           	callstack 0
  1269                           
  1270 ;; *************** function _CURSOR_ONOFF *****************
  1271 ;; Defined at:
  1272 ;;		line 54 in file "LCD.c"
  1273 ;; Parameters:    Size  Location     Type
  1274 ;;  estado          1    wreg     unsigned char 
  1275 ;; Auto vars:     Size  Location     Type
  1276 ;;  estado          1   35[COMRAM] unsigned char 
  1277 ;; Return value:  Size  Location     Type
  1278 ;;                  1    wreg      void 
  1279 ;; Registers used:
  1280 ;;		wreg, status,2, status,0, cstack
  1281 ;; Tracked objects:
  1282 ;;		On entry : 0/0
  1283 ;;		On exit  : 0/0
  1284 ;;		Unchanged: 0/0
  1285 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1286 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1287 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1288 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1289 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1290 ;;Total ram usage:        1 bytes
  1291 ;; Hardware stack levels used: 1
  1292 ;; Hardware stack levels required when called: 6
  1293 ;; This function calls:
  1294 ;;		_ENVIA_LCD_CMD
  1295 ;; This function is called by:
  1296 ;;		_LCD_INIT
  1297 ;; This function uses a non-reentrant model
  1298 ;;
  1299                           
  1300                           	psect	text8
  1301  002CE6                     __ptext8:
  1302                           	callstack 0
  1303  002CE6                     _CURSOR_ONOFF:
  1304                           	callstack 118
  1305                           
  1306                           ;incstack = 0
  1307                           ;CURSOR_ONOFF@estado stored from wreg
  1308  002CE6  6E24               	movwf	CURSOR_ONOFF@estado^(0+1280),c
  1309  002CE8                     
  1310                           ;LCD.c: 54: void CURSOR_ONOFF(unsigned char estado);LCD.c: 55: {;LCD.c: 56:  if(estado =
      +                          = 0) ENVIA_LCD_CMD(0x0E);
  1311  002CE8  5024               	movf	CURSOR_ONOFF@estado^(0+1280),w,c
  1312  002CEA  A4D8               	btfss	status,2,c
  1313  002CEC  EF7A  F016         	goto	u21
  1314  002CF0  EF7C  F016         	goto	u20
  1315  002CF4                     u21:
  1316  002CF4  EF7F  F016         	goto	l941
  1317  002CF8                     u20:
  1318  002CF8  0E0E               	movlw	14
  1319  002CFA  ECF3  F015         	call	_ENVIA_LCD_CMD
  1320  002CFE                     l941:
  1321                           
  1322                           ;LCD.c: 57:  if(estado == 1) ENVIA_LCD_CMD(0x0C);
  1323  002CFE  0424               	decf	CURSOR_ONOFF@estado^(0+1280),w,c
  1324  002D00  A4D8               	btfss	status,2,c
  1325  002D02  EF85  F016         	goto	u31
  1326  002D06  EF87  F016         	goto	u30
  1327  002D0A                     u31:
  1328  002D0A  EF8A  F016         	goto	l56
  1329  002D0E                     u30:
  1330  002D0E  0E0C               	movlw	12
  1331  002D10  ECF3  F015         	call	_ENVIA_LCD_CMD
  1332  002D14                     l56:
  1333  002D14  0012               	return		;funcret
  1334  002D16                     __end_of_CURSOR_ONOFF:
  1335                           	callstack 0
  1336                           
  1337 ;; *************** function _CURSOR_HOME *****************
  1338 ;; Defined at:
  1339 ;;		line 29 in file "LCD.c"
  1340 ;; Parameters:    Size  Location     Type
  1341 ;;		None
  1342 ;; Auto vars:     Size  Location     Type
  1343 ;;		None
  1344 ;; Return value:  Size  Location     Type
  1345 ;;                  1    wreg      void 
  1346 ;; Registers used:
  1347 ;;		wreg, status,2, status,0, cstack
  1348 ;; Tracked objects:
  1349 ;;		On entry : 0/0
  1350 ;;		On exit  : 0/0
  1351 ;;		Unchanged: 0/0
  1352 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1353 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1354 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1355 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1356 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1357 ;;Total ram usage:        0 bytes
  1358 ;; Hardware stack levels used: 1
  1359 ;; Hardware stack levels required when called: 6
  1360 ;; This function calls:
  1361 ;;		_ENVIA_LCD_CMD
  1362 ;; This function is called by:
  1363 ;;		_LCD_INIT
  1364 ;; This function uses a non-reentrant model
  1365 ;;
  1366                           
  1367                           	psect	text9
  1368  002DA0                     __ptext9:
  1369                           	callstack 0
  1370  002DA0                     _CURSOR_HOME:
  1371                           	callstack 118
  1372  002DA0                     
  1373                           ;LCD.c: 31:  ENVIA_LCD_CMD(0x02);
  1374  002DA0  0E02               	movlw	2
  1375  002DA2  ECF3  F015         	call	_ENVIA_LCD_CMD
  1376  002DA6  0012               	return		;funcret
  1377  002DA8                     __end_of_CURSOR_HOME:
  1378                           	callstack 0
  1379                           
  1380 ;; *************** function _BORRAR_LCD *****************
  1381 ;; Defined at:
  1382 ;;		line 96 in file "LCD.c"
  1383 ;; Parameters:    Size  Location     Type
  1384 ;;		None
  1385 ;; Auto vars:     Size  Location     Type
  1386 ;;		None
  1387 ;; Return value:  Size  Location     Type
  1388 ;;                  1    wreg      void 
  1389 ;; Registers used:
  1390 ;;		wreg, status,2, status,0, cstack
  1391 ;; Tracked objects:
  1392 ;;		On entry : 0/0
  1393 ;;		On exit  : 0/0
  1394 ;;		Unchanged: 0/0
  1395 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1396 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1397 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1398 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1399 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1400 ;;Total ram usage:        0 bytes
  1401 ;; Hardware stack levels used: 1
  1402 ;; Hardware stack levels required when called: 6
  1403 ;; This function calls:
  1404 ;;		_ENVIA_LCD_CMD
  1405 ;; This function is called by:
  1406 ;;		_LCD_INIT
  1407 ;;		_main
  1408 ;; This function uses a non-reentrant model
  1409 ;;
  1410                           
  1411                           	psect	text10
  1412  002DA8                     __ptext10:
  1413                           	callstack 0
  1414  002DA8                     _BORRAR_LCD:
  1415                           	callstack 118
  1416  002DA8                     
  1417                           ;LCD.c: 98:  ENVIA_LCD_CMD(0x01);
  1418  002DA8  0E01               	movlw	1
  1419  002DAA  ECF3  F015         	call	_ENVIA_LCD_CMD
  1420  002DAE  0012               	return		;funcret
  1421  002DB0                     __end_of_BORRAR_LCD:
  1422                           	callstack 0
  1423                           
  1424 ;; *************** function _POS_CURSOR *****************
  1425 ;; Defined at:
  1426 ;;		line 5 in file "LCD.c"
  1427 ;; Parameters:    Size  Location     Type
  1428 ;;  fila            1    wreg     unsigned char 
  1429 ;;  columna         1   35[COMRAM] unsigned char 
  1430 ;; Auto vars:     Size  Location     Type
  1431 ;;  fila            1   36[COMRAM] unsigned char 
  1432 ;; Return value:  Size  Location     Type
  1433 ;;                  1    wreg      void 
  1434 ;; Registers used:
  1435 ;;		wreg, status,2, status,0, cstack
  1436 ;; Tracked objects:
  1437 ;;		On entry : 0/0
  1438 ;;		On exit  : 0/0
  1439 ;;		Unchanged: 0/0
  1440 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1441 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1442 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1443 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1444 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1445 ;;Total ram usage:        2 bytes
  1446 ;; Hardware stack levels used: 1
  1447 ;; Hardware stack levels required when called: 6
  1448 ;; This function calls:
  1449 ;;		_ENVIA_LCD_CMD
  1450 ;; This function is called by:
  1451 ;;		_main
  1452 ;; This function uses a non-reentrant model
  1453 ;;
  1454                           
  1455                           	psect	text11
  1456  002B72                     __ptext11:
  1457                           	callstack 0
  1458  002B72                     _POS_CURSOR:
  1459                           	callstack 120
  1460                           
  1461                           ;incstack = 0
  1462                           ;POS_CURSOR@fila stored from wreg
  1463  002B72  6E25               	movwf	POS_CURSOR@fila^(0+1280),c
  1464  002B74                     
  1465                           ;LCD.c: 5: void POS_CURSOR(unsigned char fila,unsigned char columna);LCD.c: 6: {;LCD.c: 
      +                          7:  if(fila == 1)
  1466  002B74  0425               	decf	POS_CURSOR@fila^(0+1280),w,c
  1467  002B76  A4D8               	btfss	status,2,c
  1468  002B78  EFC0  F015         	goto	u351
  1469  002B7C  EFC2  F015         	goto	u350
  1470  002B80                     u351:
  1471  002B80  EFC8  F015         	goto	l1491
  1472  002B84                     u350:
  1473  002B84                     
  1474                           ;LCD.c: 8:  {;LCD.c: 9:   ENVIA_LCD_CMD(0x80+columna);
  1475  002B84  5024               	movf	POS_CURSOR@columna^(0+1280),w,c
  1476  002B86  0F80               	addlw	128
  1477  002B88  ECF3  F015         	call	_ENVIA_LCD_CMD
  1478                           
  1479                           ;LCD.c: 10:  }
  1480  002B8C  EFD5  F015         	goto	l26
  1481  002B90                     l1491:
  1482  002B90  0E02               	movlw	2
  1483  002B92  1825               	xorwf	POS_CURSOR@fila^(0+1280),w,c
  1484  002B94  A4D8               	btfss	status,2,c
  1485  002B96  EFCF  F015         	goto	u361
  1486  002B9A  EFD1  F015         	goto	u360
  1487  002B9E                     u361:
  1488  002B9E  EFD5  F015         	goto	l26
  1489  002BA2                     u360:
  1490  002BA2                     
  1491                           ;LCD.c: 12:  {;LCD.c: 13:   ENVIA_LCD_CMD(0xC0+columna);
  1492  002BA2  5024               	movf	POS_CURSOR@columna^(0+1280),w,c
  1493  002BA4  0FC0               	addlw	192
  1494  002BA6  ECF3  F015         	call	_ENVIA_LCD_CMD
  1495  002BAA                     l26:
  1496  002BAA  0012               	return		;funcret
  1497  002BAC                     __end_of_POS_CURSOR:
  1498                           	callstack 0
  1499                           
  1500 ;; *************** function _ENVIA_LCD_CMD *****************
  1501 ;; Defined at:
  1502 ;;		line 128 in file "LCD.c"
  1503 ;; Parameters:    Size  Location     Type
  1504 ;;  dato            1    wreg     unsigned char 
  1505 ;; Auto vars:     Size  Location     Type
  1506 ;;  dato            1   33[COMRAM] unsigned char 
  1507 ;;  aux             1   34[COMRAM] unsigned char 
  1508 ;; Return value:  Size  Location     Type
  1509 ;;                  1    wreg      void 
  1510 ;; Registers used:
  1511 ;;		wreg, status,2, status,0, cstack
  1512 ;; Tracked objects:
  1513 ;;		On entry : 0/0
  1514 ;;		On exit  : 0/0
  1515 ;;		Unchanged: 0/0
  1516 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1517 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1518 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1519 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1520 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1521 ;;Total ram usage:        2 bytes
  1522 ;; Hardware stack levels used: 1
  1523 ;; Hardware stack levels required when called: 5
  1524 ;; This function calls:
  1525 ;;		_ENVIA_NIBBLE
  1526 ;;		_LEER_LCD
  1527 ;; This function is called by:
  1528 ;;		_POS_CURSOR
  1529 ;;		_CURSOR_HOME
  1530 ;;		_CURSOR_ONOFF
  1531 ;;		_BORRAR_LCD
  1532 ;;		_LCD_CONFIG
  1533 ;;		_BLINK_CURSOR
  1534 ;;		_DISPLAY_ONOFF
  1535 ;;		_CURSOR_SHIFTLEFT
  1536 ;;		_CURSOR_SHIFTRIGHT
  1537 ;;		_DISPLAY_SHIFTLEFT
  1538 ;;		_DISPLAY_SHIFTRIGHT
  1539 ;;		_GENERACARACTER
  1540 ;; This function uses a non-reentrant model
  1541 ;;
  1542                           
  1543                           	psect	text12
  1544  002BE6                     __ptext12:
  1545                           	callstack 0
  1546  002BE6                     _ENVIA_LCD_CMD:
  1547                           	callstack 118
  1548                           
  1549                           ;incstack = 0
  1550                           ;ENVIA_LCD_CMD@dato stored from wreg
  1551  002BE6  6E22               	movwf	ENVIA_LCD_CMD@dato^(0+1280),c
  1552  002BE8                     
  1553                           ;LCD.c: 128: void ENVIA_LCD_CMD(unsigned char dato);LCD.c: 129: {;LCD.c: 130:  unsigned 
      +                          char aux;;LCD.c: 131:  LATAbits.LATA0 = 0;
  1554  002BE8  90BE               	bcf	190,0,c	;volatile
  1555  002BEA                     
  1556                           ;LCD.c: 132:  LEER_LCD();
  1557  002BEA  ECFE  F013         	call	_LEER_LCD	;wreg free
  1558  002BEE                     
  1559                           ;LCD.c: 133:  TRISD = 0b00000000;
  1560  002BEE  0E00               	movlw	0
  1561  002BF0  6EC9               	movwf	201,c	;volatile
  1562  002BF2                     
  1563                           ;LCD.c: 134:     _delay((unsigned long)((100)*(4000000UL/4000000.0)));
  1564  002BF2  0E21               	movlw	33
  1565  002BF4                     u477:
  1566  002BF4  2EE8               	decfsz	wreg,f,c
  1567  002BF6  D7FE               	bra	u477
  1568  002BF8  F000               	nop	
  1569  002BFA                     
  1570                           ;LCD.c: 135:     LATAbits.LATA1 = 0;
  1571  002BFA  92BE               	bcf	190,1,c	;volatile
  1572  002BFC                     
  1573                           ;LCD.c: 136:  LATAbits.LATA2 = 0;
  1574  002BFC  94BE               	bcf	190,2,c	;volatile
  1575  002BFE                     
  1576                           ;LCD.c: 137:  LATAbits.LATA0 = 0;
  1577  002BFE  90BE               	bcf	190,0,c	;volatile
  1578  002C00                     
  1579                           ;LCD.c: 138:  aux = dato & 0xF0;
  1580  002C00  5022               	movf	ENVIA_LCD_CMD@dato^(0+1280),w,c
  1581  002C02  0BF0               	andlw	240
  1582  002C04  6E23               	movwf	ENVIA_LCD_CMD@aux^(0+1280),c
  1583  002C06                     
  1584                           ;LCD.c: 139:  ENVIA_NIBBLE(aux);
  1585  002C06  5023               	movf	ENVIA_LCD_CMD@aux^(0+1280),w,c
  1586  002C08  ECB4  F016         	call	_ENVIA_NIBBLE
  1587  002C0C                     
  1588                           ;LCD.c: 140:  aux = dato<<4;
  1589  002C0C  3822               	swapf	ENVIA_LCD_CMD@dato^(0+1280),w,c
  1590  002C0E  0BF0               	andlw	240
  1591  002C10  6E23               	movwf	ENVIA_LCD_CMD@aux^(0+1280),c
  1592  002C12                     
  1593                           ;LCD.c: 141:  ENVIA_NIBBLE(aux);
  1594  002C12  5023               	movf	ENVIA_LCD_CMD@aux^(0+1280),w,c
  1595  002C14  ECB4  F016         	call	_ENVIA_NIBBLE
  1596  002C18  0012               	return		;funcret
  1597  002C1A                     __end_of_ENVIA_LCD_CMD:
  1598                           	callstack 0
  1599                           
  1600 ;; *************** function _ESCRIBE_MENSAJE2 *****************
  1601 ;; Defined at:
  1602 ;;		line 69 in file "LCD.c"
  1603 ;; Parameters:    Size  Location     Type
  1604 ;;  cadena          2   36[COMRAM] PTR const unsigned char 
  1605 ;;		 -> STR_9(9), STR_8(11), STR_7(14), STR_6(14), 
  1606 ;;		 -> STR_5(4), STR_4(5), STR_3(4), STR_2(17), 
  1607 ;;		 -> STR_1(14), 
  1608 ;; Auto vars:     Size  Location     Type
  1609 ;;  i               1   41[COMRAM] unsigned char 
  1610 ;;  tam             1   40[COMRAM] unsigned char 
  1611 ;; Return value:  Size  Location     Type
  1612 ;;                  1    wreg      void 
  1613 ;; Registers used:
  1614 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1615 ;; Tracked objects:
  1616 ;;		On entry : 0/0
  1617 ;;		On exit  : 0/0
  1618 ;;		Unchanged: 0/0
  1619 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1620 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1621 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1622 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1623 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1624 ;;Total ram usage:        6 bytes
  1625 ;; Hardware stack levels used: 1
  1626 ;; Hardware stack levels required when called: 6
  1627 ;; This function calls:
  1628 ;;		_ENVIA_CHAR
  1629 ;;		_strlen
  1630 ;; This function is called by:
  1631 ;;		_main
  1632 ;; This function uses a non-reentrant model
  1633 ;;
  1634                           
  1635                           	psect	text13
  1636  002A12                     __ptext13:
  1637                           	callstack 0
  1638  002A12                     _ESCRIBE_MENSAJE2:
  1639                           	callstack 120
  1640  002A12                     
  1641                           ;LCD.c: 69: void ESCRIBE_MENSAJE2(const char *cadena);LCD.c: 70: {;LCD.c: 71:     unsign
      +                          ed char tam;;LCD.c: 72:     tam = strlen(cadena);
  1642  002A12  C525  F521         	movff	ESCRIBE_MENSAJE2@cadena,strlen@s
  1643  002A16  C526  F522         	movff	ESCRIBE_MENSAJE2@cadena+1,strlen@s+1
  1644  002A1A  EC7B  F015         	call	_strlen	;wreg free
  1645  002A1E  5021               	movf	?_strlen^(0+1280),w,c
  1646  002A20  6E29               	movwf	ESCRIBE_MENSAJE2@tam^(0+1280),c
  1647  002A22                     
  1648                           ;LCD.c: 74:  for(i = 0; i<tam; i++)
  1649  002A22  0E00               	movlw	0
  1650  002A24  6E2A               	movwf	ESCRIBE_MENSAJE2@i^(0+1280),c
  1651  002A26  EF26  F015         	goto	l1505
  1652  002A2A                     l1501:
  1653                           
  1654                           ;LCD.c: 75:  {;LCD.c: 76:   ENVIA_CHAR(cadena[i]);
  1655  002A2A  502A               	movf	ESCRIBE_MENSAJE2@i^(0+1280),w,c
  1656  002A2C  2425               	addwf	ESCRIBE_MENSAJE2@cadena^(0+1280),w,c
  1657  002A2E  6E27               	movwf	??_ESCRIBE_MENSAJE2^(0+1280),c
  1658  002A30  0E00               	movlw	0
  1659  002A32  2026               	addwfc	(ESCRIBE_MENSAJE2@cadena+1)^(0+1280),w,c
  1660  002A34  6E28               	movwf	(??_ESCRIBE_MENSAJE2+1)^(0+1280),c
  1661  002A36  0061  F49C  F4F6   	movff	??_ESCRIBE_MENSAJE2,tblptrl
  1662  002A3C  0061  F4A0  F4F7   	movff	??_ESCRIBE_MENSAJE2+1,tblptrh
  1663  002A42                     	if	0	;tblptru may be non-zero
  1664  002A42                     	endif
  1665  002A42                     	if	0	;tblptru may be non-zero
  1666  002A42                     	endif
  1667  002A42  0008               	tblrd		*
  1668  002A44  50F5               	movf	tablat,w,c
  1669  002A46  EC0D  F016         	call	_ENVIA_CHAR
  1670  002A4A                     
  1671                           ;LCD.c: 77:  }
  1672  002A4A  2A2A               	incf	ESCRIBE_MENSAJE2@i^(0+1280),f,c
  1673  002A4C                     l1505:
  1674  002A4C  5029               	movf	ESCRIBE_MENSAJE2@tam^(0+1280),w,c
  1675  002A4E  5C2A               	subwf	ESCRIBE_MENSAJE2@i^(0+1280),w,c
  1676  002A50  A0D8               	btfss	status,0,c
  1677  002A52  EF2D  F015         	goto	u371
  1678  002A56  EF2F  F015         	goto	u370
  1679  002A5A                     u371:
  1680  002A5A  EF15  F015         	goto	l1501
  1681  002A5E                     u370:
  1682  002A5E  0012               	return		;funcret
  1683  002A60                     __end_of_ESCRIBE_MENSAJE2:
  1684                           	callstack 0
  1685                           
  1686 ;; *************** function _strlen *****************
  1687 ;; Defined at:
  1688 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\strlen.c"
  1689 ;; Parameters:    Size  Location     Type
  1690 ;;  s               2   32[COMRAM] PTR const unsigned char 
  1691 ;;		 -> STR_9(9), STR_8(11), STR_7(14), STR_6(14), 
  1692 ;;		 -> STR_5(4), STR_4(5), STR_3(4), STR_2(17), 
  1693 ;;		 -> STR_1(14), 
  1694 ;; Auto vars:     Size  Location     Type
  1695 ;;  a               2   34[COMRAM] PTR const unsigned char 
  1696 ;;		 -> STR_9(9), STR_8(11), STR_7(14), STR_6(14), 
  1697 ;;		 -> STR_5(4), STR_4(5), STR_3(4), STR_2(17), 
  1698 ;;		 -> STR_1(14), 
  1699 ;; Return value:  Size  Location     Type
  1700 ;;                  2   32[COMRAM] unsigned int 
  1701 ;; Registers used:
  1702 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  1703 ;; Tracked objects:
  1704 ;;		On entry : 0/0
  1705 ;;		On exit  : 0/0
  1706 ;;		Unchanged: 0/0
  1707 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1708 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1709 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1710 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1711 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1712 ;;Total ram usage:        4 bytes
  1713 ;; Hardware stack levels used: 1
  1714 ;; Hardware stack levels required when called: 4
  1715 ;; This function calls:
  1716 ;;		Nothing
  1717 ;; This function is called by:
  1718 ;;		_ESCRIBE_MENSAJE2
  1719 ;; This function uses a non-reentrant model
  1720 ;;
  1721                           
  1722                           	psect	text14
  1723  002AF6                     __ptext14:
  1724                           	callstack 0
  1725  002AF6                     _strlen:
  1726                           	callstack 121
  1727  002AF6  C521  F523         	movff	strlen@s,strlen@a
  1728  002AFA  C522  F524         	movff	strlen@s+1,strlen@a+1
  1729  002AFE  EF83  F015         	goto	l1389
  1730  002B02                     l1387:
  1731  002B02  4A21               	infsnz	strlen@s^(0+1280),f,c
  1732  002B04  2A22               	incf	(strlen@s+1)^(0+1280),f,c
  1733  002B06                     l1389:
  1734  002B06  0061  F484  F4F6   	movff	strlen@s,tblptrl
  1735  002B0C  0061  F488  F4F7   	movff	strlen@s+1,tblptrh
  1736  002B12                     	if	0	;tblptru may be non-zero
  1737  002B12                     	endif
  1738  002B12                     	if	0	;tblptru may be non-zero
  1739  002B12                     	endif
  1740  002B12  0008               	tblrd		*
  1741  002B14  50F5               	movf	tablat,w,c
  1742  002B16  0900               	iorlw	0
  1743  002B18  A4D8               	btfss	status,2,c
  1744  002B1A  EF91  F015         	goto	u271
  1745  002B1E  EF93  F015         	goto	u270
  1746  002B22                     u271:
  1747  002B22  EF81  F015         	goto	l1387
  1748  002B26                     u270:
  1749  002B26  5023               	movf	strlen@a^(0+1280),w,c
  1750  002B28  5C21               	subwf	strlen@s^(0+1280),w,c
  1751  002B2A  6E21               	movwf	?_strlen^(0+1280),c
  1752  002B2C  5024               	movf	(strlen@a+1)^(0+1280),w,c
  1753  002B2E  5822               	subwfb	(strlen@s+1)^(0+1280),w,c
  1754  002B30  6E22               	movwf	(?_strlen+1)^(0+1280),c
  1755  002B32  0012               	return		;funcret
  1756  002B34                     __end_of_strlen:
  1757                           	callstack 0
  1758                           
  1759 ;; *************** function _ENVIA_CHAR *****************
  1760 ;; Defined at:
  1761 ;;		line 80 in file "LCD.c"
  1762 ;; Parameters:    Size  Location     Type
  1763 ;;  dato            1    wreg     unsigned char 
  1764 ;; Auto vars:     Size  Location     Type
  1765 ;;  dato            1   33[COMRAM] unsigned char 
  1766 ;;  aux             1   34[COMRAM] unsigned char 
  1767 ;; Return value:  Size  Location     Type
  1768 ;;                  1    wreg      void 
  1769 ;; Registers used:
  1770 ;;		wreg, status,2, status,0, cstack
  1771 ;; Tracked objects:
  1772 ;;		On entry : 0/0
  1773 ;;		On exit  : 0/0
  1774 ;;		Unchanged: 0/0
  1775 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1776 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1777 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1778 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1779 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1780 ;;Total ram usage:        2 bytes
  1781 ;; Hardware stack levels used: 1
  1782 ;; Hardware stack levels required when called: 5
  1783 ;; This function calls:
  1784 ;;		_ENVIA_NIBBLE
  1785 ;;		_LEER_LCD
  1786 ;; This function is called by:
  1787 ;;		_ESCRIBE_MENSAJE2
  1788 ;;		_main
  1789 ;;		_ESCRIBE_MENSAJE
  1790 ;;		_GENERACARACTER
  1791 ;; This function uses a non-reentrant model
  1792 ;;
  1793                           
  1794                           	psect	text15
  1795  002C1A                     __ptext15:
  1796                           	callstack 0
  1797  002C1A                     _ENVIA_CHAR:
  1798                           	callstack 120
  1799                           
  1800                           ;incstack = 0
  1801                           ;ENVIA_CHAR@dato stored from wreg
  1802  002C1A  6E22               	movwf	ENVIA_CHAR@dato^(0+1280),c
  1803  002C1C                     
  1804                           ;LCD.c: 80: void ENVIA_CHAR(unsigned char dato);LCD.c: 81: {;LCD.c: 82:  unsigned char a
      +                          ux;;LCD.c: 83:  LATAbits.LATA0 = 1;
  1805  002C1C  80BE               	bsf	190,0,c	;volatile
  1806  002C1E                     
  1807                           ;LCD.c: 84:  LEER_LCD();
  1808  002C1E  ECFE  F013         	call	_LEER_LCD	;wreg free
  1809  002C22                     
  1810                           ;LCD.c: 85:  TRISD = 0x00;
  1811  002C22  0E00               	movlw	0
  1812  002C24  6EC9               	movwf	201,c	;volatile
  1813  002C26                     
  1814                           ;LCD.c: 86:     _delay((unsigned long)((100)*(4000000UL/4000000.0)));
  1815  002C26  0E21               	movlw	33
  1816  002C28                     u487:
  1817  002C28  2EE8               	decfsz	wreg,f,c
  1818  002C2A  D7FE               	bra	u487
  1819  002C2C  F000               	nop	
  1820  002C2E                     
  1821                           ;LCD.c: 87:  LATAbits.LATA1 = 0;
  1822  002C2E  92BE               	bcf	190,1,c	;volatile
  1823  002C30                     
  1824                           ;LCD.c: 88:  LATAbits.LATA2 = 0;
  1825  002C30  94BE               	bcf	190,2,c	;volatile
  1826  002C32                     
  1827                           ;LCD.c: 89:  LATAbits.LATA0 = 1;
  1828  002C32  80BE               	bsf	190,0,c	;volatile
  1829  002C34                     
  1830                           ;LCD.c: 90:  aux = dato & 0xF0;
  1831  002C34  5022               	movf	ENVIA_CHAR@dato^(0+1280),w,c
  1832  002C36  0BF0               	andlw	240
  1833  002C38  6E23               	movwf	ENVIA_CHAR@aux^(0+1280),c
  1834  002C3A                     
  1835                           ;LCD.c: 91:  ENVIA_NIBBLE(aux);
  1836  002C3A  5023               	movf	ENVIA_CHAR@aux^(0+1280),w,c
  1837  002C3C  ECB4  F016         	call	_ENVIA_NIBBLE
  1838  002C40                     
  1839                           ;LCD.c: 92:  aux = dato << 4;
  1840  002C40  3822               	swapf	ENVIA_CHAR@dato^(0+1280),w,c
  1841  002C42  0BF0               	andlw	240
  1842  002C44  6E23               	movwf	ENVIA_CHAR@aux^(0+1280),c
  1843  002C46                     
  1844                           ;LCD.c: 93:  ENVIA_NIBBLE(aux);
  1845  002C46  5023               	movf	ENVIA_CHAR@aux^(0+1280),w,c
  1846  002C48  ECB4  F016         	call	_ENVIA_NIBBLE
  1847  002C4C  0012               	return		;funcret
  1848  002C4E                     __end_of_ENVIA_CHAR:
  1849                           	callstack 0
  1850                           
  1851 ;; *************** function _LEER_LCD *****************
  1852 ;; Defined at:
  1853 ;;		line 144 in file "LCD.c"
  1854 ;; Parameters:    Size  Location     Type
  1855 ;;		None
  1856 ;; Auto vars:     Size  Location     Type
  1857 ;;  aux             1   32[COMRAM] unsigned char 
  1858 ;; Return value:  Size  Location     Type
  1859 ;;                  1    wreg      void 
  1860 ;; Registers used:
  1861 ;;		wreg, status,2, status,0
  1862 ;; Tracked objects:
  1863 ;;		On entry : 0/0
  1864 ;;		On exit  : 0/0
  1865 ;;		Unchanged: 0/0
  1866 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1867 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1868 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1869 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1870 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1871 ;;Total ram usage:        1 bytes
  1872 ;; Hardware stack levels used: 1
  1873 ;; Hardware stack levels required when called: 4
  1874 ;; This function calls:
  1875 ;;		Nothing
  1876 ;; This function is called by:
  1877 ;;		_ENVIA_CHAR
  1878 ;;		_ENVIA_LCD_CMD
  1879 ;; This function uses a non-reentrant model
  1880 ;;
  1881                           
  1882                           	psect	text16
  1883  0027FC                     __ptext16:
  1884                           	callstack 0
  1885  0027FC                     _LEER_LCD:
  1886                           	callstack 118
  1887  0027FC                     
  1888                           ;LCD.c: 146:  unsigned char aux;;LCD.c: 147:  TRISD = 0xF8;
  1889  0027FC  0EF8               	movlw	248
  1890  0027FE  6EC9               	movwf	201,c	;volatile
  1891  002800                     
  1892                           ;LCD.c: 148:  LATAbits.LATA0 = 0;
  1893  002800  90BE               	bcf	190,0,c	;volatile
  1894  002802                     
  1895                           ;LCD.c: 149:  LATAbits.LATA1 = 1;
  1896  002802  82BE               	bsf	190,1,c	;volatile
  1897  002804                     
  1898                           ;LCD.c: 150:  LATAbits.LATA2 = 1;
  1899  002804  84BE               	bsf	190,2,c	;volatile
  1900  002806                     
  1901                           ;LCD.c: 151:     _delay((unsigned long)((100)*(4000000UL/4000000.0)));
  1902  002806  0E21               	movlw	33
  1903  002808                     u497:
  1904  002808  2EE8               	decfsz	wreg,f,c
  1905  00280A  D7FE               	bra	u497
  1906  00280C  F000               	nop	
  1907  00280E                     
  1908                           ;LCD.c: 152:  aux = PORTD;
  1909  00280E  0061 F344  F521    	movff	1233,LEER_LCD@aux	;volatile
  1910  002814                     
  1911                           ;LCD.c: 153:  LATAbits.LATA2 = 0;
  1912  002814  94BE               	bcf	190,2,c	;volatile
  1913  002816                     
  1914                           ;LCD.c: 154:     _delay((unsigned long)((100)*(4000000UL/4000000.0)));
  1915  002816  0E21               	movlw	33
  1916  002818                     u507:
  1917  002818  2EE8               	decfsz	wreg,f,c
  1918  00281A  D7FE               	bra	u507
  1919  00281C  F000               	nop	
  1920  00281E                     
  1921                           ;LCD.c: 155:  LATAbits.LATA2 = 1;
  1922  00281E  84BE               	bsf	190,2,c	;volatile
  1923  002820                     
  1924                           ;LCD.c: 156:     _delay((unsigned long)((100)*(4000000UL/4000000.0)));
  1925  002820  0E21               	movlw	33
  1926  002822                     u517:
  1927  002822  2EE8               	decfsz	wreg,f,c
  1928  002824  D7FE               	bra	u517
  1929  002826  F000               	nop	
  1930  002828                     
  1931                           ;LCD.c: 157:  LATAbits.LATA2 = 0;
  1932  002828  94BE               	bcf	190,2,c	;volatile
  1933  00282A                     l889:
  1934                           
  1935                           ;LCD.c: 158:  aux = aux & 0x80;
  1936  00282A  5021               	movf	LEER_LCD@aux^(0+1280),w,c
  1937  00282C  0B80               	andlw	128
  1938  00282E  6E21               	movwf	LEER_LCD@aux^(0+1280),c
  1939                           
  1940                           ;LCD.c: 159:  while(aux == 0x80)
  1941  002830  EF2F  F014         	goto	l903
  1942  002834                     l87:
  1943                           
  1944                           ;LCD.c: 160:         {;LCD.c: 161:             LATAbits.LATA2 = 1;
  1945  002834  84BE               	bsf	190,2,c	;volatile
  1946  002836                     
  1947                           ;LCD.c: 162:             _delay((unsigned long)((100)*(4000000UL/4000000.0)));
  1948  002836  0E21               	movlw	33
  1949  002838                     u527:
  1950  002838  2EE8               	decfsz	wreg,f,c
  1951  00283A  D7FE               	bra	u527
  1952  00283C  F000               	nop	
  1953  00283E                     
  1954                           ;LCD.c: 163:             aux = PORTD;
  1955  00283E  0061 F344  F521    	movff	1233,LEER_LCD@aux	;volatile
  1956  002844                     
  1957                           ;LCD.c: 164:             LATAbits.LATA2 = 0;
  1958  002844  94BE               	bcf	190,2,c	;volatile
  1959                           
  1960                           ;LCD.c: 165:             _delay((unsigned long)((100)*(4000000UL/4000000.0)));
  1961  002846  0E21               	movlw	33
  1962  002848                     u537:
  1963  002848  2EE8               	decfsz	wreg,f,c
  1964  00284A  D7FE               	bra	u537
  1965  00284C  F000               	nop	
  1966  00284E                     
  1967                           ;LCD.c: 166:             LATAbits.LATA2 = 1;
  1968  00284E  84BE               	bsf	190,2,c	;volatile
  1969                           
  1970                           ;LCD.c: 167:             _delay((unsigned long)((100)*(4000000UL/4000000.0)));
  1971  002850  0E21               	movlw	33
  1972  002852                     u547:
  1973  002852  2EE8               	decfsz	wreg,f,c
  1974  002854  D7FE               	bra	u547
  1975  002856  F000               	nop	
  1976  002858                     
  1977                           ;LCD.c: 168:             LATAbits.LATA2 = 0;
  1978  002858  94BE               	bcf	190,2,c	;volatile
  1979  00285A  EF15  F014         	goto	l889
  1980  00285E                     l903:
  1981                           
  1982                           ;LCD.c: 159:  while(aux == 0x80)
  1983  00285E  0E80               	movlw	128
  1984  002860  1821               	xorwf	LEER_LCD@aux^(0+1280),w,c
  1985  002862  B4D8               	btfsc	status,2,c
  1986  002864  EF36  F014         	goto	u11
  1987  002868  EF38  F014         	goto	u10
  1988  00286C                     u11:
  1989  00286C  EF1A  F014         	goto	l87
  1990  002870                     u10:
  1991  002870  0012               	return		;funcret
  1992  002872                     __end_of_LEER_LCD:
  1993                           	callstack 0
  1994                           
  1995 ;; *************** function _ENVIA_NIBBLE *****************
  1996 ;; Defined at:
  1997 ;;		line 118 in file "LCD.c"
  1998 ;; Parameters:    Size  Location     Type
  1999 ;;  dato            1    wreg     unsigned char 
  2000 ;; Auto vars:     Size  Location     Type
  2001 ;;  dato            1   32[COMRAM] unsigned char 
  2002 ;; Return value:  Size  Location     Type
  2003 ;;                  1    wreg      void 
  2004 ;; Registers used:
  2005 ;;		wreg, status,2, status,0
  2006 ;; Tracked objects:
  2007 ;;		On entry : 0/0
  2008 ;;		On exit  : 0/0
  2009 ;;		Unchanged: 0/0
  2010 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2011 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2012 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2013 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2014 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2015 ;;Total ram usage:        1 bytes
  2016 ;; Hardware stack levels used: 1
  2017 ;; Hardware stack levels required when called: 4
  2018 ;; This function calls:
  2019 ;;		Nothing
  2020 ;; This function is called by:
  2021 ;;		_ENVIA_CHAR
  2022 ;;		_LCD_CONFIG
  2023 ;;		_ENVIA_LCD_CMD
  2024 ;; This function uses a non-reentrant model
  2025 ;;
  2026                           
  2027                           	psect	text17
  2028  002D68                     __ptext17:
  2029                           	callstack 0
  2030  002D68                     _ENVIA_NIBBLE:
  2031                           	callstack 119
  2032                           
  2033                           ;incstack = 0
  2034                           ;ENVIA_NIBBLE@dato stored from wreg
  2035  002D68  6E21               	movwf	ENVIA_NIBBLE@dato^(0+1280),c
  2036  002D6A                     
  2037                           ;LCD.c: 118: void ENVIA_NIBBLE(unsigned char dato);LCD.c: 119: {;LCD.c: 120:  LATD &= 0x
      +                          0F;
  2038  002D6A  0E0F               	movlw	15
  2039  002D6C  16C1               	andwf	193,f,c	;volatile
  2040                           
  2041                           ;LCD.c: 121:  dato &= 0xF0;
  2042  002D6E  0EF0               	movlw	240
  2043  002D70  1621               	andwf	ENVIA_NIBBLE@dato^(0+1280),f,c
  2044                           
  2045                           ;LCD.c: 122:  LATD|= dato;
  2046  002D72  5021               	movf	ENVIA_NIBBLE@dato^(0+1280),w,c	;volatile
  2047  002D74  12C1               	iorwf	193,f,c	;volatile
  2048  002D76                     
  2049                           ;LCD.c: 123:  LATAbits.LATA2 = 1;
  2050  002D76  84BE               	bsf	190,2,c	;volatile
  2051  002D78                     
  2052                           ;LCD.c: 124:     _delay((unsigned long)((100)*(4000000UL/4000000.0)));
  2053  002D78  0E21               	movlw	33
  2054  002D7A                     u557:
  2055  002D7A  2EE8               	decfsz	wreg,f,c
  2056  002D7C  D7FE               	bra	u557
  2057  002D7E  F000               	nop	
  2058  002D80                     
  2059                           ;LCD.c: 125:  LATAbits.LATA2 = 0;
  2060  002D80  94BE               	bcf	190,2,c	;volatile
  2061  002D82  0012               	return		;funcret
  2062  002D84                     __end_of_ENVIA_NIBBLE:
  2063                           	callstack 0
  2064                           
  2065 ;; *************** function _INT0_ISR *****************
  2066 ;; Defined at:
  2067 ;;		line 77 in file "maincode1.c"
  2068 ;; Parameters:    Size  Location     Type
  2069 ;;		None
  2070 ;; Auto vars:     Size  Location     Type
  2071 ;;		None
  2072 ;; Return value:  Size  Location     Type
  2073 ;;                  1    wreg      void 
  2074 ;; Registers used:
  2075 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2076 ;; Tracked objects:
  2077 ;;		On entry : 0/0
  2078 ;;		On exit  : 0/0
  2079 ;;		Unchanged: 0/0
  2080 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2081 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2082 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2083 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2084 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2085 ;;Total ram usage:        6 bytes
  2086 ;; Hardware stack levels used: 1
  2087 ;; Hardware stack levels required when called: 3
  2088 ;; This function calls:
  2089 ;;		i2_BORRAR_LCD
  2090 ;;		i2_ESCRIBE_MENSAJE2
  2091 ;;		i2_POS_CURSOR
  2092 ;; This function is called by:
  2093 ;;		Interrupt level 2
  2094 ;; This function uses a non-reentrant model
  2095 ;;
  2096                           
  2097                           	psect	text18
  2098  0026FC                     __ptext18:
  2099                           	callstack 0
  2100  0026FC                     _INT0_ISR:
  2101                           	callstack 118
  2102                           
  2103                           ;incstack = 0
  2104  0026FC  0061 F3D8  F50D    	movff	tblptrl,??_INT0_ISR+2
  2105  002702  0061 F3DC  F50E    	movff	tblptrh,??_INT0_ISR+3
  2106  002708  0061 F3E0  F50F    	movff	tblptru,??_INT0_ISR+4
  2107  00270E  0061 F3D4  F510    	movff	tablat,??_INT0_ISR+5
  2108  002714                     
  2109                           ;maincode1.c: 78:     PIR1bits.INT0IF = 0;
  2110  002714  90AF               	bcf	175,0,c	;volatile
  2111  002716                     
  2112                           ;maincode1.c: 79:     BORRAR_LCD();
  2113  002716  ECD8  F016         	call	i2_BORRAR_LCD	;wreg free
  2114                           
  2115                           ;maincode1.c: 80:     POS_CURSOR(1,0);
  2116  00271A  0E00               	movlw	0
  2117  00271C  6E14               	movwf	i2POS_CURSOR@columna^(0+1280),c
  2118  00271E  0E01               	movlw	1
  2119  002720  ECD6  F015         	call	i2_POS_CURSOR
  2120  002724                     
  2121                           ;maincode1.c: 81:     ESCRIBE_MENSAJE2("Laboratorio 3");
  2122  002724  0E12               	movlw	low STR_1
  2123  002726  6E15               	movwf	i2ESCRIBE_MENSAJE2@cadena^(0+1280),c
  2124  002728  0E25               	movlw	high STR_1
  2125  00272A  6E16               	movwf	(i2ESCRIBE_MENSAJE2@cadena+1)^(0+1280),c
  2126  00272C  EC30  F015         	call	i2_ESCRIBE_MENSAJE2	;wreg free
  2127  002730                     
  2128                           ;maincode1.c: 82:     POS_CURSOR(2,0);
  2129  002730  0E00               	movlw	0
  2130  002732  6E14               	movwf	i2POS_CURSOR@columna^(0+1280),c
  2131  002734  0E02               	movlw	2
  2132  002736  ECD6  F015         	call	i2_POS_CURSOR
  2133                           
  2134                           ;maincode1.c: 83:     ESCRIBE_MENSAJE2("Microbio 2023");
  2135  00273A  0E20               	movlw	low STR_7
  2136  00273C  6E15               	movwf	i2ESCRIBE_MENSAJE2@cadena^(0+1280),c
  2137  00273E  0E25               	movlw	high STR_7
  2138  002740  6E16               	movwf	(i2ESCRIBE_MENSAJE2@cadena+1)^(0+1280),c
  2139  002742  EC30  F015         	call	i2_ESCRIBE_MENSAJE2	;wreg free
  2140  002746                     
  2141                           ;maincode1.c: 84:     _delay((unsigned long)((5000)*(4000000UL/4000.0)));
  2142  002746  0E1A               	movlw	26
  2143  002748  6E0C               	movwf	(??_INT0_ISR+1)^(0+1280),c
  2144  00274A  0E5E               	movlw	94
  2145  00274C  6E0B               	movwf	??_INT0_ISR^(0+1280),c
  2146  00274E  0E6E               	movlw	110
  2147  002750                     i2u56_47:
  2148  002750  2EE8               	decfsz	wreg,f,c
  2149  002752  D7FE               	bra	i2u56_47
  2150  002754  2E0B               	decfsz	??_INT0_ISR^(0+1280),f,c
  2151  002756  D7FC               	bra	i2u56_47
  2152  002758  2E0C               	decfsz	(??_INT0_ISR+1)^(0+1280),f,c
  2153  00275A  D7FA               	bra	i2u56_47
  2154  00275C  D000               	nop2	
  2155  00275E                     
  2156                           ;maincode1.c: 85:     BORRAR_LCD();
  2157  00275E  ECD8  F016         	call	i2_BORRAR_LCD	;wreg free
  2158  002762  0061  F440  F4F5   	movff	??_INT0_ISR+5,tablat
  2159  002768  0061  F43C  F4F8   	movff	??_INT0_ISR+4,tblptru
  2160  00276E  0061  F438  F4F7   	movff	??_INT0_ISR+3,tblptrh
  2161  002774  0061  F434  F4F6   	movff	??_INT0_ISR+2,tblptrl
  2162  00277A  0011               	retfie		f
  2163  00277C                     __end_of_INT0_ISR:
  2164                           	callstack 0
  2165                           
  2166 ;; *************** function i2_POS_CURSOR *****************
  2167 ;; Defined at:
  2168 ;;		line 5 in file "LCD.c"
  2169 ;; Parameters:    Size  Location     Type
  2170 ;;  fila            1    wreg     unsigned char 
  2171 ;;  columna         1   19[COMRAM] unsigned char 
  2172 ;; Auto vars:     Size  Location     Type
  2173 ;;  fila            1   20[COMRAM] unsigned char 
  2174 ;; Return value:  Size  Location     Type
  2175 ;;                  1    wreg      void 
  2176 ;; Registers used:
  2177 ;;		wreg, status,2, status,0, cstack
  2178 ;; Tracked objects:
  2179 ;;		On entry : 0/0
  2180 ;;		On exit  : 0/0
  2181 ;;		Unchanged: 0/0
  2182 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2183 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2184 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2185 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2186 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2187 ;;Total ram usage:        2 bytes
  2188 ;; Hardware stack levels used: 1
  2189 ;; Hardware stack levels required when called: 2
  2190 ;; This function calls:
  2191 ;;		i2_ENVIA_LCD_CMD
  2192 ;; This function is called by:
  2193 ;;		_INT0_ISR
  2194 ;;		_INT1_ISR
  2195 ;; This function uses a non-reentrant model
  2196 ;;
  2197                           
  2198                           	psect	text19
  2199  002BAC                     __ptext19:
  2200                           	callstack 0
  2201  002BAC                     i2_POS_CURSOR:
  2202                           	callstack 118
  2203                           
  2204                           ;incstack = 0
  2205                           ;i2POS_CURSOR@fila stored from wreg
  2206  002BAC  6E15               	movwf	i2POS_CURSOR@fila^(0+1280),c
  2207  002BAE                     
  2208                           ;LCD.c: 5: void POS_CURSOR(unsigned char fila,unsigned char columna);LCD.c: 6: {;LCD.c: 
      +                          7:  if(fila == 1)
  2209  002BAE  0415               	decf	i2POS_CURSOR@fila^(0+1280),w,c
  2210  002BB0  A4D8               	btfss	status,2,c
  2211  002BB2  EFDD  F015         	goto	i2u39_41
  2212  002BB6  EFDF  F015         	goto	i2u39_40
  2213  002BBA                     i2u39_41:
  2214  002BBA  EFE5  F015         	goto	i2l1521
  2215  002BBE                     i2u39_40:
  2216  002BBE                     
  2217                           ;LCD.c: 8:  {;LCD.c: 9:   ENVIA_LCD_CMD(0x80+columna);
  2218  002BBE  5014               	movf	i2POS_CURSOR@columna^(0+1280),w,c
  2219  002BC0  0F80               	addlw	128
  2220  002BC2  EC41  F016         	call	i2_ENVIA_LCD_CMD
  2221                           
  2222                           ;LCD.c: 10:  }
  2223  002BC6  EFF2  F015         	goto	i2l26
  2224  002BCA                     i2l1521:
  2225  002BCA  0E02               	movlw	2
  2226  002BCC  1815               	xorwf	i2POS_CURSOR@fila^(0+1280),w,c
  2227  002BCE  A4D8               	btfss	status,2,c
  2228  002BD0  EFEC  F015         	goto	i2u40_41
  2229  002BD4  EFEE  F015         	goto	i2u40_40
  2230  002BD8                     i2u40_41:
  2231  002BD8  EFF2  F015         	goto	i2l26
  2232  002BDC                     i2u40_40:
  2233  002BDC                     
  2234                           ;LCD.c: 12:  {;LCD.c: 13:   ENVIA_LCD_CMD(0xC0+columna);
  2235  002BDC  5014               	movf	i2POS_CURSOR@columna^(0+1280),w,c
  2236  002BDE  0FC0               	addlw	192
  2237  002BE0  EC41  F016         	call	i2_ENVIA_LCD_CMD
  2238  002BE4                     i2l26:
  2239  002BE4  0012               	return		;funcret
  2240  002BE6                     __end_ofi2_POS_CURSOR:
  2241                           	callstack 0
  2242                           
  2243 ;; *************** function i2_ESCRIBE_MENSAJE2 *****************
  2244 ;; Defined at:
  2245 ;;		line 69 in file "LCD.c"
  2246 ;; Parameters:    Size  Location     Type
  2247 ;;  cadena          2   20[COMRAM] PTR const unsigned char 
  2248 ;;		 -> STR_9(9), STR_8(11), STR_7(14), STR_6(14), 
  2249 ;;		 -> STR_5(4), STR_4(5), STR_3(4), STR_2(17), 
  2250 ;;		 -> STR_1(14), 
  2251 ;; Auto vars:     Size  Location     Type
  2252 ;;  i               1   25[COMRAM] unsigned char 
  2253 ;;  tam             1   24[COMRAM] unsigned char 
  2254 ;; Return value:  Size  Location     Type
  2255 ;;                  1    wreg      void 
  2256 ;; Registers used:
  2257 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2258 ;; Tracked objects:
  2259 ;;		On entry : 0/0
  2260 ;;		On exit  : 0/0
  2261 ;;		Unchanged: 0/0
  2262 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2263 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2264 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2265 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2266 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2267 ;;Total ram usage:        6 bytes
  2268 ;; Hardware stack levels used: 1
  2269 ;; Hardware stack levels required when called: 2
  2270 ;; This function calls:
  2271 ;;		i2_ENVIA_CHAR
  2272 ;;		i2_strlen
  2273 ;; This function is called by:
  2274 ;;		_INT0_ISR
  2275 ;;		_INT1_ISR
  2276 ;; This function uses a non-reentrant model
  2277 ;;
  2278                           
  2279                           	psect	text20
  2280  002A60                     __ptext20:
  2281                           	callstack 0
  2282  002A60                     i2_ESCRIBE_MENSAJE2:
  2283                           	callstack 118
  2284  002A60                     
  2285                           ;LCD.c: 69: void ESCRIBE_MENSAJE2(const char *cadena);LCD.c: 70: {;LCD.c: 71:     unsign
      +                          ed char tam;;LCD.c: 72:     tam = strlen(cadena);
  2286  002A60  C515  F511         	movff	i2ESCRIBE_MENSAJE2@cadena,i2strlen@s
  2287  002A64  C516  F512         	movff	i2ESCRIBE_MENSAJE2@cadena+1,i2strlen@s+1
  2288  002A68  EC9A  F015         	call	i2_strlen	;wreg free
  2289  002A6C  5011               	movf	?i2_strlen^(0+1280),w,c
  2290  002A6E  6E19               	movwf	i2ESCRIBE_MENSAJE2@tam^(0+1280),c
  2291  002A70                     
  2292                           ;LCD.c: 74:  for(i = 0; i<tam; i++)
  2293  002A70  0E00               	movlw	0
  2294  002A72  6E1A               	movwf	i2ESCRIBE_MENSAJE2@i^(0+1280),c
  2295  002A74  EF4D  F015         	goto	i2l1535
  2296  002A78                     i2l1531:
  2297                           
  2298                           ;LCD.c: 75:  {;LCD.c: 76:   ENVIA_CHAR(cadena[i]);
  2299  002A78  501A               	movf	i2ESCRIBE_MENSAJE2@i^(0+1280),w,c
  2300  002A7A  2415               	addwf	i2ESCRIBE_MENSAJE2@cadena^(0+1280),w,c
  2301  002A7C  6E17               	movwf	??i2_ESCRIBE_MENSAJE2^(0+1280),c
  2302  002A7E  0E00               	movlw	0
  2303  002A80  2016               	addwfc	(i2ESCRIBE_MENSAJE2@cadena+1)^(0+1280),w,c
  2304  002A82  6E18               	movwf	(??i2_ESCRIBE_MENSAJE2+1)^(0+1280),c
  2305  002A84  0061  F45C  F4F6   	movff	??i2_ESCRIBE_MENSAJE2,tblptrl
  2306  002A8A  0061  F460  F4F7   	movff	??i2_ESCRIBE_MENSAJE2+1,tblptrh
  2307  002A90                     	if	0	;tblptru may be non-zero
  2308  002A90                     	endif
  2309  002A90                     	if	0	;tblptru may be non-zero
  2310  002A90                     	endif
  2311  002A90  0008               	tblrd		*
  2312  002A92  50F5               	movf	tablat,w,c
  2313  002A94  EC27  F016         	call	i2_ENVIA_CHAR
  2314  002A98                     
  2315                           ;LCD.c: 77:  }
  2316  002A98  2A1A               	incf	i2ESCRIBE_MENSAJE2@i^(0+1280),f,c
  2317  002A9A                     i2l1535:
  2318  002A9A  5019               	movf	i2ESCRIBE_MENSAJE2@tam^(0+1280),w,c
  2319  002A9C  5C1A               	subwf	i2ESCRIBE_MENSAJE2@i^(0+1280),w,c
  2320  002A9E  A0D8               	btfss	status,0,c
  2321  002AA0  EF54  F015         	goto	i2u41_41
  2322  002AA4  EF56  F015         	goto	i2u41_40
  2323  002AA8                     i2u41_41:
  2324  002AA8  EF3C  F015         	goto	i2l1531
  2325  002AAC                     i2u41_40:
  2326  002AAC  0012               	return		;funcret
  2327  002AAE                     __end_ofi2_ESCRIBE_MENSAJE2:
  2328                           	callstack 0
  2329                           
  2330 ;; *************** function i2_strlen *****************
  2331 ;; Defined at:
  2332 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\strlen.c"
  2333 ;; Parameters:    Size  Location     Type
  2334 ;;  s               2   16[COMRAM] PTR const unsigned char 
  2335 ;;		 -> STR_9(9), STR_8(11), STR_7(14), STR_6(14), 
  2336 ;;		 -> STR_5(4), STR_4(5), STR_3(4), STR_2(17), 
  2337 ;;		 -> STR_1(14), 
  2338 ;; Auto vars:     Size  Location     Type
  2339 ;;  a               2   18[COMRAM] PTR const unsigned char 
  2340 ;;		 -> STR_9(9), STR_8(11), STR_7(14), STR_6(14), 
  2341 ;;		 -> STR_5(4), STR_4(5), STR_3(4), STR_2(17), 
  2342 ;;		 -> STR_1(14), 
  2343 ;; Return value:  Size  Location     Type
  2344 ;;                  2   16[COMRAM] unsigned int 
  2345 ;; Registers used:
  2346 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  2347 ;; Tracked objects:
  2348 ;;		On entry : 0/0
  2349 ;;		On exit  : 0/0
  2350 ;;		Unchanged: 0/0
  2351 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2352 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2353 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2354 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2355 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2356 ;;Total ram usage:        4 bytes
  2357 ;; Hardware stack levels used: 1
  2358 ;; This function calls:
  2359 ;;		Nothing
  2360 ;; This function is called by:
  2361 ;;		i2_ESCRIBE_MENSAJE2
  2362 ;; This function uses a non-reentrant model
  2363 ;;
  2364                           
  2365                           	psect	text21
  2366  002B34                     __ptext21:
  2367                           	callstack 0
  2368  002B34                     i2_strlen:
  2369                           	callstack 119
  2370  002B34  C511  F513         	movff	i2strlen@s,i2strlen@a
  2371  002B38  C512  F514         	movff	i2strlen@s+1,i2strlen@a+1
  2372  002B3C  EFA2  F015         	goto	i2l1481
  2373  002B40                     i2l1479:
  2374  002B40  4A11               	infsnz	i2strlen@s^(0+1280),f,c
  2375  002B42  2A12               	incf	(i2strlen@s+1)^(0+1280),f,c
  2376  002B44                     i2l1481:
  2377  002B44  0061  F444  F4F6   	movff	i2strlen@s,tblptrl
  2378  002B4A  0061  F448  F4F7   	movff	i2strlen@s+1,tblptrh
  2379  002B50                     	if	0	;tblptru may be non-zero
  2380  002B50                     	endif
  2381  002B50                     	if	0	;tblptru may be non-zero
  2382  002B50                     	endif
  2383  002B50  0008               	tblrd		*
  2384  002B52  50F5               	movf	tablat,w,c
  2385  002B54  0900               	iorlw	0
  2386  002B56  A4D8               	btfss	status,2,c
  2387  002B58  EFB0  F015         	goto	i2u34_41
  2388  002B5C  EFB2  F015         	goto	i2u34_40
  2389  002B60                     i2u34_41:
  2390  002B60  EFA0  F015         	goto	i2l1479
  2391  002B64                     i2u34_40:
  2392  002B64  5013               	movf	i2strlen@a^(0+1280),w,c
  2393  002B66  5C11               	subwf	i2strlen@s^(0+1280),w,c
  2394  002B68  6E11               	movwf	?i2_strlen^(0+1280),c
  2395  002B6A  5014               	movf	(i2strlen@a+1)^(0+1280),w,c
  2396  002B6C  5812               	subwfb	(i2strlen@s+1)^(0+1280),w,c
  2397  002B6E  6E12               	movwf	(?i2_strlen+1)^(0+1280),c
  2398  002B70  0012               	return		;funcret
  2399  002B72                     __end_ofi2_strlen:
  2400                           	callstack 0
  2401                           
  2402 ;; *************** function i2_ENVIA_CHAR *****************
  2403 ;; Defined at:
  2404 ;;		line 80 in file "LCD.c"
  2405 ;; Parameters:    Size  Location     Type
  2406 ;;  dato            1    wreg     unsigned char 
  2407 ;; Auto vars:     Size  Location     Type
  2408 ;;  dato            1   17[COMRAM] unsigned char 
  2409 ;;  aux             1   18[COMRAM] unsigned char 
  2410 ;; Return value:  Size  Location     Type
  2411 ;;                  1    wreg      void 
  2412 ;; Registers used:
  2413 ;;		wreg, status,2, status,0, cstack
  2414 ;; Tracked objects:
  2415 ;;		On entry : 0/0
  2416 ;;		On exit  : 0/0
  2417 ;;		Unchanged: 0/0
  2418 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2419 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2420 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2421 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2422 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2423 ;;Total ram usage:        2 bytes
  2424 ;; Hardware stack levels used: 1
  2425 ;; Hardware stack levels required when called: 1
  2426 ;; This function calls:
  2427 ;;		i2_ENVIA_NIBBLE
  2428 ;;		i2_LEER_LCD
  2429 ;; This function is called by:
  2430 ;;		i2_ESCRIBE_MENSAJE2
  2431 ;; This function uses a non-reentrant model
  2432 ;;
  2433                           
  2434                           	psect	text22
  2435  002C4E                     __ptext22:
  2436                           	callstack 0
  2437  002C4E                     i2_ENVIA_CHAR:
  2438                           	callstack 118
  2439                           
  2440                           ;incstack = 0
  2441                           ;i2ENVIA_CHAR@dato stored from wreg
  2442  002C4E  6E12               	movwf	i2ENVIA_CHAR@dato^(0+1280),c
  2443  002C50                     
  2444                           ;LCD.c: 80: void ENVIA_CHAR(unsigned char dato);LCD.c: 81: {;LCD.c: 82:  unsigned char a
      +                          ux;;LCD.c: 83:  LATAbits.LATA0 = 1;
  2445  002C50  80BE               	bsf	190,0,c	;volatile
  2446  002C52                     
  2447                           ;LCD.c: 84:  LEER_LCD();
  2448  002C52  EC39  F014         	call	i2_LEER_LCD	;wreg free
  2449  002C56                     
  2450                           ;LCD.c: 85:  TRISD = 0x00;
  2451  002C56  0E00               	movlw	0
  2452  002C58  6EC9               	movwf	201,c	;volatile
  2453  002C5A                     
  2454                           ;LCD.c: 86:     _delay((unsigned long)((100)*(4000000UL/4000000.0)));
  2455  002C5A  0E21               	movlw	33
  2456  002C5C                     i2u57_47:
  2457  002C5C  2EE8               	decfsz	wreg,f,c
  2458  002C5E  D7FE               	bra	i2u57_47
  2459  002C60  F000               	nop	
  2460  002C62                     
  2461                           ;LCD.c: 87:  LATAbits.LATA1 = 0;
  2462  002C62  92BE               	bcf	190,1,c	;volatile
  2463  002C64                     
  2464                           ;LCD.c: 88:  LATAbits.LATA2 = 0;
  2465  002C64  94BE               	bcf	190,2,c	;volatile
  2466  002C66                     
  2467                           ;LCD.c: 89:  LATAbits.LATA0 = 1;
  2468  002C66  80BE               	bsf	190,0,c	;volatile
  2469  002C68                     
  2470                           ;LCD.c: 90:  aux = dato & 0xF0;
  2471  002C68  5012               	movf	i2ENVIA_CHAR@dato^(0+1280),w,c
  2472  002C6A  0BF0               	andlw	240
  2473  002C6C  6E13               	movwf	i2ENVIA_CHAR@aux^(0+1280),c
  2474  002C6E                     
  2475                           ;LCD.c: 91:  ENVIA_NIBBLE(aux);
  2476  002C6E  5013               	movf	i2ENVIA_CHAR@aux^(0+1280),w,c
  2477  002C70  ECC2  F016         	call	i2_ENVIA_NIBBLE
  2478  002C74                     
  2479                           ;LCD.c: 92:  aux = dato << 4;
  2480  002C74  3812               	swapf	i2ENVIA_CHAR@dato^(0+1280),w,c
  2481  002C76  0BF0               	andlw	240
  2482  002C78  6E13               	movwf	i2ENVIA_CHAR@aux^(0+1280),c
  2483  002C7A                     
  2484                           ;LCD.c: 93:  ENVIA_NIBBLE(aux);
  2485  002C7A  5013               	movf	i2ENVIA_CHAR@aux^(0+1280),w,c
  2486  002C7C  ECC2  F016         	call	i2_ENVIA_NIBBLE
  2487  002C80  0012               	return		;funcret
  2488  002C82                     __end_ofi2_ENVIA_CHAR:
  2489                           	callstack 0
  2490                           
  2491 ;; *************** function i2_BORRAR_LCD *****************
  2492 ;; Defined at:
  2493 ;;		line 96 in file "LCD.c"
  2494 ;; Parameters:    Size  Location     Type
  2495 ;;		None
  2496 ;; Auto vars:     Size  Location     Type
  2497 ;;		None
  2498 ;; Return value:  Size  Location     Type
  2499 ;;                  1    wreg      void 
  2500 ;; Registers used:
  2501 ;;		wreg, status,2, status,0, cstack
  2502 ;; Tracked objects:
  2503 ;;		On entry : 0/0
  2504 ;;		On exit  : 0/0
  2505 ;;		Unchanged: 0/0
  2506 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2507 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2508 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2509 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2510 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2511 ;;Total ram usage:        0 bytes
  2512 ;; Hardware stack levels used: 1
  2513 ;; Hardware stack levels required when called: 2
  2514 ;; This function calls:
  2515 ;;		i2_ENVIA_LCD_CMD
  2516 ;; This function is called by:
  2517 ;;		_INT0_ISR
  2518 ;;		_INT1_ISR
  2519 ;; This function uses a non-reentrant model
  2520 ;;
  2521                           
  2522                           	psect	text23
  2523  002DB0                     __ptext23:
  2524                           	callstack 0
  2525  002DB0                     i2_BORRAR_LCD:
  2526                           	callstack 118
  2527  002DB0                     
  2528                           ;LCD.c: 98:  ENVIA_LCD_CMD(0x01);
  2529  002DB0  0E01               	movlw	1
  2530  002DB2  EC41  F016         	call	i2_ENVIA_LCD_CMD
  2531  002DB6  0012               	return		;funcret
  2532  002DB8                     __end_ofi2_BORRAR_LCD:
  2533                           	callstack 0
  2534                           
  2535 ;; *************** function i2_ENVIA_LCD_CMD *****************
  2536 ;; Defined at:
  2537 ;;		line 128 in file "LCD.c"
  2538 ;; Parameters:    Size  Location     Type
  2539 ;;  dato            1    wreg     unsigned char 
  2540 ;; Auto vars:     Size  Location     Type
  2541 ;;  dato            1   17[COMRAM] unsigned char 
  2542 ;;  aux             1   18[COMRAM] unsigned char 
  2543 ;; Return value:  Size  Location     Type
  2544 ;;                  1    wreg      void 
  2545 ;; Registers used:
  2546 ;;		wreg, status,2, status,0, cstack
  2547 ;; Tracked objects:
  2548 ;;		On entry : 0/0
  2549 ;;		On exit  : 0/0
  2550 ;;		Unchanged: 0/0
  2551 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2552 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2553 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2554 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2555 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2556 ;;Total ram usage:        2 bytes
  2557 ;; Hardware stack levels used: 1
  2558 ;; Hardware stack levels required when called: 1
  2559 ;; This function calls:
  2560 ;;		i2_ENVIA_NIBBLE
  2561 ;;		i2_LEER_LCD
  2562 ;; This function is called by:
  2563 ;;		i2_POS_CURSOR
  2564 ;;		i2_BORRAR_LCD
  2565 ;; This function uses a non-reentrant model
  2566 ;;
  2567                           
  2568                           	psect	text24
  2569  002C82                     __ptext24:
  2570                           	callstack 0
  2571  002C82                     i2_ENVIA_LCD_CMD:
  2572                           	callstack 118
  2573                           
  2574                           ;incstack = 0
  2575                           ;i2ENVIA_LCD_CMD@dato stored from wreg
  2576  002C82  6E12               	movwf	i2ENVIA_LCD_CMD@dato^(0+1280),c
  2577  002C84                     
  2578                           ;LCD.c: 128: void ENVIA_LCD_CMD(unsigned char dato);LCD.c: 129: {;LCD.c: 130:  unsigned 
      +                          char aux;;LCD.c: 131:  LATAbits.LATA0 = 0;
  2579  002C84  90BE               	bcf	190,0,c	;volatile
  2580  002C86                     
  2581                           ;LCD.c: 132:  LEER_LCD();
  2582  002C86  EC39  F014         	call	i2_LEER_LCD	;wreg free
  2583  002C8A                     
  2584                           ;LCD.c: 133:  TRISD = 0b00000000;
  2585  002C8A  0E00               	movlw	0
  2586  002C8C  6EC9               	movwf	201,c	;volatile
  2587  002C8E                     
  2588                           ;LCD.c: 134:     _delay((unsigned long)((100)*(4000000UL/4000000.0)));
  2589  002C8E  0E21               	movlw	33
  2590  002C90                     i2u58_47:
  2591  002C90  2EE8               	decfsz	wreg,f,c
  2592  002C92  D7FE               	bra	i2u58_47
  2593  002C94  F000               	nop	
  2594  002C96                     
  2595                           ;LCD.c: 135:     LATAbits.LATA1 = 0;
  2596  002C96  92BE               	bcf	190,1,c	;volatile
  2597  002C98                     
  2598                           ;LCD.c: 136:  LATAbits.LATA2 = 0;
  2599  002C98  94BE               	bcf	190,2,c	;volatile
  2600  002C9A                     
  2601                           ;LCD.c: 137:  LATAbits.LATA0 = 0;
  2602  002C9A  90BE               	bcf	190,0,c	;volatile
  2603  002C9C                     
  2604                           ;LCD.c: 138:  aux = dato & 0xF0;
  2605  002C9C  5012               	movf	i2ENVIA_LCD_CMD@dato^(0+1280),w,c
  2606  002C9E  0BF0               	andlw	240
  2607  002CA0  6E13               	movwf	i2ENVIA_LCD_CMD@aux^(0+1280),c
  2608  002CA2                     
  2609                           ;LCD.c: 139:  ENVIA_NIBBLE(aux);
  2610  002CA2  5013               	movf	i2ENVIA_LCD_CMD@aux^(0+1280),w,c
  2611  002CA4  ECC2  F016         	call	i2_ENVIA_NIBBLE
  2612  002CA8                     
  2613                           ;LCD.c: 140:  aux = dato<<4;
  2614  002CA8  3812               	swapf	i2ENVIA_LCD_CMD@dato^(0+1280),w,c
  2615  002CAA  0BF0               	andlw	240
  2616  002CAC  6E13               	movwf	i2ENVIA_LCD_CMD@aux^(0+1280),c
  2617  002CAE                     
  2618                           ;LCD.c: 141:  ENVIA_NIBBLE(aux);
  2619  002CAE  5013               	movf	i2ENVIA_LCD_CMD@aux^(0+1280),w,c
  2620  002CB0  ECC2  F016         	call	i2_ENVIA_NIBBLE
  2621  002CB4  0012               	return		;funcret
  2622  002CB6                     __end_ofi2_ENVIA_LCD_CMD:
  2623                           	callstack 0
  2624                           
  2625 ;; *************** function i2_LEER_LCD *****************
  2626 ;; Defined at:
  2627 ;;		line 144 in file "LCD.c"
  2628 ;; Parameters:    Size  Location     Type
  2629 ;;		None
  2630 ;; Auto vars:     Size  Location     Type
  2631 ;;  aux             1   16[COMRAM] unsigned char 
  2632 ;; Return value:  Size  Location     Type
  2633 ;;                  1    wreg      void 
  2634 ;; Registers used:
  2635 ;;		wreg, status,2, status,0
  2636 ;; Tracked objects:
  2637 ;;		On entry : 0/0
  2638 ;;		On exit  : 0/0
  2639 ;;		Unchanged: 0/0
  2640 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2641 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2642 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2643 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2644 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2645 ;;Total ram usage:        1 bytes
  2646 ;; Hardware stack levels used: 1
  2647 ;; This function calls:
  2648 ;;		Nothing
  2649 ;; This function is called by:
  2650 ;;		i2_ENVIA_CHAR
  2651 ;;		i2_ENVIA_LCD_CMD
  2652 ;; This function uses a non-reentrant model
  2653 ;;
  2654                           
  2655                           	psect	text25
  2656  002872                     __ptext25:
  2657                           	callstack 0
  2658  002872                     i2_LEER_LCD:
  2659                           	callstack 118
  2660  002872                     
  2661                           ;LCD.c: 146:  unsigned char aux;;LCD.c: 147:  TRISD = 0xF8;
  2662  002872  0EF8               	movlw	248
  2663  002874  6EC9               	movwf	201,c	;volatile
  2664  002876                     
  2665                           ;LCD.c: 148:  LATAbits.LATA0 = 0;
  2666  002876  90BE               	bcf	190,0,c	;volatile
  2667  002878                     
  2668                           ;LCD.c: 149:  LATAbits.LATA1 = 1;
  2669  002878  82BE               	bsf	190,1,c	;volatile
  2670  00287A                     
  2671                           ;LCD.c: 150:  LATAbits.LATA2 = 1;
  2672  00287A  84BE               	bsf	190,2,c	;volatile
  2673  00287C                     
  2674                           ;LCD.c: 151:     _delay((unsigned long)((100)*(4000000UL/4000000.0)));
  2675  00287C  0E21               	movlw	33
  2676  00287E                     i2u59_47:
  2677  00287E  2EE8               	decfsz	wreg,f,c
  2678  002880  D7FE               	bra	i2u59_47
  2679  002882  F000               	nop	
  2680  002884                     
  2681                           ;LCD.c: 152:  aux = PORTD;
  2682  002884  0061 F344  F511    	movff	1233,i2LEER_LCD@aux	;volatile
  2683  00288A                     
  2684                           ;LCD.c: 153:  LATAbits.LATA2 = 0;
  2685  00288A  94BE               	bcf	190,2,c	;volatile
  2686  00288C                     
  2687                           ;LCD.c: 154:     _delay((unsigned long)((100)*(4000000UL/4000000.0)));
  2688  00288C  0E21               	movlw	33
  2689  00288E                     i2u60_47:
  2690  00288E  2EE8               	decfsz	wreg,f,c
  2691  002890  D7FE               	bra	i2u60_47
  2692  002892  F000               	nop	
  2693  002894                     
  2694                           ;LCD.c: 155:  LATAbits.LATA2 = 1;
  2695  002894  84BE               	bsf	190,2,c	;volatile
  2696  002896                     
  2697                           ;LCD.c: 156:     _delay((unsigned long)((100)*(4000000UL/4000000.0)));
  2698  002896  0E21               	movlw	33
  2699  002898                     i2u61_47:
  2700  002898  2EE8               	decfsz	wreg,f,c
  2701  00289A  D7FE               	bra	i2u61_47
  2702  00289C  F000               	nop	
  2703  00289E                     
  2704                           ;LCD.c: 157:  LATAbits.LATA2 = 0;
  2705  00289E  94BE               	bcf	190,2,c	;volatile
  2706  0028A0                     i2l1369:
  2707                           
  2708                           ;LCD.c: 158:  aux = aux & 0x80;
  2709  0028A0  5011               	movf	i2LEER_LCD@aux^(0+1280),w,c
  2710  0028A2  0B80               	andlw	128
  2711  0028A4  6E11               	movwf	i2LEER_LCD@aux^(0+1280),c
  2712                           
  2713                           ;LCD.c: 159:  while(aux == 0x80)
  2714  0028A6  EF6A  F014         	goto	i2l1383
  2715  0028AA                     i2l87:
  2716                           
  2717                           ;LCD.c: 160:         {;LCD.c: 161:             LATAbits.LATA2 = 1;
  2718  0028AA  84BE               	bsf	190,2,c	;volatile
  2719  0028AC                     
  2720                           ;LCD.c: 162:             _delay((unsigned long)((100)*(4000000UL/4000000.0)));
  2721  0028AC  0E21               	movlw	33
  2722  0028AE                     i2u62_47:
  2723  0028AE  2EE8               	decfsz	wreg,f,c
  2724  0028B0  D7FE               	bra	i2u62_47
  2725  0028B2  F000               	nop	
  2726  0028B4                     
  2727                           ;LCD.c: 163:             aux = PORTD;
  2728  0028B4  0061 F344  F511    	movff	1233,i2LEER_LCD@aux	;volatile
  2729  0028BA                     
  2730                           ;LCD.c: 164:             LATAbits.LATA2 = 0;
  2731  0028BA  94BE               	bcf	190,2,c	;volatile
  2732                           
  2733                           ;LCD.c: 165:             _delay((unsigned long)((100)*(4000000UL/4000000.0)));
  2734  0028BC  0E21               	movlw	33
  2735  0028BE                     i2u63_47:
  2736  0028BE  2EE8               	decfsz	wreg,f,c
  2737  0028C0  D7FE               	bra	i2u63_47
  2738  0028C2  F000               	nop	
  2739  0028C4                     
  2740                           ;LCD.c: 166:             LATAbits.LATA2 = 1;
  2741  0028C4  84BE               	bsf	190,2,c	;volatile
  2742                           
  2743                           ;LCD.c: 167:             _delay((unsigned long)((100)*(4000000UL/4000000.0)));
  2744  0028C6  0E21               	movlw	33
  2745  0028C8                     i2u64_47:
  2746  0028C8  2EE8               	decfsz	wreg,f,c
  2747  0028CA  D7FE               	bra	i2u64_47
  2748  0028CC  F000               	nop	
  2749  0028CE                     
  2750                           ;LCD.c: 168:             LATAbits.LATA2 = 0;
  2751  0028CE  94BE               	bcf	190,2,c	;volatile
  2752  0028D0  EF50  F014         	goto	i2l1369
  2753  0028D4                     i2l1383:
  2754                           
  2755                           ;LCD.c: 159:  while(aux == 0x80)
  2756  0028D4  0E80               	movlw	128
  2757  0028D6  1811               	xorwf	i2LEER_LCD@aux^(0+1280),w,c
  2758  0028D8  B4D8               	btfsc	status,2,c
  2759  0028DA  EF71  F014         	goto	i2u26_41
  2760  0028DE  EF73  F014         	goto	i2u26_40
  2761  0028E2                     i2u26_41:
  2762  0028E2  EF55  F014         	goto	i2l87
  2763  0028E6                     i2u26_40:
  2764  0028E6  0012               	return		;funcret
  2765  0028E8                     __end_ofi2_LEER_LCD:
  2766                           	callstack 0
  2767                           
  2768 ;; *************** function i2_ENVIA_NIBBLE *****************
  2769 ;; Defined at:
  2770 ;;		line 118 in file "LCD.c"
  2771 ;; Parameters:    Size  Location     Type
  2772 ;;  dato            1    wreg     unsigned char 
  2773 ;; Auto vars:     Size  Location     Type
  2774 ;;  dato            1   16[COMRAM] unsigned char 
  2775 ;; Return value:  Size  Location     Type
  2776 ;;                  1    wreg      void 
  2777 ;; Registers used:
  2778 ;;		wreg, status,2, status,0
  2779 ;; Tracked objects:
  2780 ;;		On entry : 0/0
  2781 ;;		On exit  : 0/0
  2782 ;;		Unchanged: 0/0
  2783 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2784 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2785 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2786 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2787 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2788 ;;Total ram usage:        1 bytes
  2789 ;; Hardware stack levels used: 1
  2790 ;; This function calls:
  2791 ;;		Nothing
  2792 ;; This function is called by:
  2793 ;;		i2_ENVIA_CHAR
  2794 ;;		i2_ENVIA_LCD_CMD
  2795 ;; This function uses a non-reentrant model
  2796 ;;
  2797                           
  2798                           	psect	text26
  2799  002D84                     __ptext26:
  2800                           	callstack 0
  2801  002D84                     i2_ENVIA_NIBBLE:
  2802                           	callstack 118
  2803                           
  2804                           ;incstack = 0
  2805                           ;i2ENVIA_NIBBLE@dato stored from wreg
  2806  002D84  6E11               	movwf	i2ENVIA_NIBBLE@dato^(0+1280),c
  2807  002D86                     
  2808                           ;LCD.c: 118: void ENVIA_NIBBLE(unsigned char dato);LCD.c: 119: {;LCD.c: 120:  LATD &= 0x
      +                          0F;
  2809  002D86  0E0F               	movlw	15
  2810  002D88  16C1               	andwf	193,f,c	;volatile
  2811                           
  2812                           ;LCD.c: 121:  dato &= 0xF0;
  2813  002D8A  0EF0               	movlw	240
  2814  002D8C  1611               	andwf	i2ENVIA_NIBBLE@dato^(0+1280),f,c
  2815                           
  2816                           ;LCD.c: 122:  LATD|= dato;
  2817  002D8E  5011               	movf	i2ENVIA_NIBBLE@dato^(0+1280),w,c	;volatile
  2818  002D90  12C1               	iorwf	193,f,c	;volatile
  2819  002D92                     
  2820                           ;LCD.c: 123:  LATAbits.LATA2 = 1;
  2821  002D92  84BE               	bsf	190,2,c	;volatile
  2822  002D94                     
  2823                           ;LCD.c: 124:     _delay((unsigned long)((100)*(4000000UL/4000000.0)));
  2824  002D94  0E21               	movlw	33
  2825  002D96                     i2u65_47:
  2826  002D96  2EE8               	decfsz	wreg,f,c
  2827  002D98  D7FE               	bra	i2u65_47
  2828  002D9A  F000               	nop	
  2829  002D9C                     
  2830                           ;LCD.c: 125:  LATAbits.LATA2 = 0;
  2831  002D9C  94BE               	bcf	190,2,c	;volatile
  2832  002D9E  0012               	return		;funcret
  2833  002DA0                     __end_ofi2_ENVIA_NIBBLE:
  2834                           	callstack 0
  2835                           
  2836 ;; *************** function _INT1_ISR *****************
  2837 ;; Defined at:
  2838 ;;		line 88 in file "maincode1.c"
  2839 ;; Parameters:    Size  Location     Type
  2840 ;;		None
  2841 ;; Auto vars:     Size  Location     Type
  2842 ;;		None
  2843 ;; Return value:  Size  Location     Type
  2844 ;;                  1    wreg      void 
  2845 ;; Registers used:
  2846 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2847 ;; Tracked objects:
  2848 ;;		On entry : 0/0
  2849 ;;		On exit  : 0/0
  2850 ;;		Unchanged: 0/0
  2851 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2852 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2853 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2854 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2855 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2856 ;;Total ram usage:        6 bytes
  2857 ;; Hardware stack levels used: 1
  2858 ;; Hardware stack levels required when called: 3
  2859 ;; This function calls:
  2860 ;;		i2_BORRAR_LCD
  2861 ;;		i2_ESCRIBE_MENSAJE2
  2862 ;;		i2_POS_CURSOR
  2863 ;; This function is called by:
  2864 ;;		Interrupt level 2
  2865 ;; This function uses a non-reentrant model
  2866 ;;
  2867                           
  2868                           	psect	text27
  2869  00277C                     __ptext27:
  2870                           	callstack 0
  2871  00277C                     _INT1_ISR:
  2872                           	callstack 118
  2873                           
  2874                           ;incstack = 0
  2875  00277C  0061 F3D8  F51D    	movff	tblptrl,??_INT1_ISR+2
  2876  002782  0061 F3DC  F51E    	movff	tblptrh,??_INT1_ISR+3
  2877  002788  0061 F3E0  F51F    	movff	tblptru,??_INT1_ISR+4
  2878  00278E  0061 F3D4  F520    	movff	tablat,??_INT1_ISR+5
  2879  002794                     
  2880                           ;maincode1.c: 89:     PIR6bits.INT1IF = 0;
  2881  002794  90B4               	bcf	180,0,c	;volatile
  2882  002796                     
  2883                           ;maincode1.c: 90:     BORRAR_LCD();
  2884  002796  ECD8  F016         	call	i2_BORRAR_LCD	;wreg free
  2885                           
  2886                           ;maincode1.c: 91:     POS_CURSOR(1,0);
  2887  00279A  0E00               	movlw	0
  2888  00279C  6E14               	movwf	i2POS_CURSOR@columna^(0+1280),c
  2889  00279E  0E01               	movlw	1
  2890  0027A0  ECD6  F015         	call	i2_POS_CURSOR
  2891  0027A4                     
  2892                           ;maincode1.c: 92:     ESCRIBE_MENSAJE2("Kalun Jose");
  2893  0027A4  0E2E               	movlw	low STR_8
  2894  0027A6  6E15               	movwf	i2ESCRIBE_MENSAJE2@cadena^(0+1280),c
  2895  0027A8  0E25               	movlw	high STR_8
  2896  0027AA  6E16               	movwf	(i2ESCRIBE_MENSAJE2@cadena+1)^(0+1280),c
  2897  0027AC  EC30  F015         	call	i2_ESCRIBE_MENSAJE2	;wreg free
  2898  0027B0                     
  2899                           ;maincode1.c: 93:     POS_CURSOR(2,0);
  2900  0027B0  0E00               	movlw	0
  2901  0027B2  6E14               	movwf	i2POS_CURSOR@columna^(0+1280),c
  2902  0027B4  0E02               	movlw	2
  2903  0027B6  ECD6  F015         	call	i2_POS_CURSOR
  2904                           
  2905                           ;maincode1.c: 94:     ESCRIBE_MENSAJE2(" Lau Gan");
  2906  0027BA  0E39               	movlw	low STR_9
  2907  0027BC  6E15               	movwf	i2ESCRIBE_MENSAJE2@cadena^(0+1280),c
  2908  0027BE  0E25               	movlw	high STR_9
  2909  0027C0  6E16               	movwf	(i2ESCRIBE_MENSAJE2@cadena+1)^(0+1280),c
  2910  0027C2  EC30  F015         	call	i2_ESCRIBE_MENSAJE2	;wreg free
  2911  0027C6                     
  2912                           ;maincode1.c: 95:     _delay((unsigned long)((5000)*(4000000UL/4000.0)));
  2913  0027C6  0E1A               	movlw	26
  2914  0027C8  6E1C               	movwf	(??_INT1_ISR+1)^(0+1280),c
  2915  0027CA  0E5E               	movlw	94
  2916  0027CC  6E1B               	movwf	??_INT1_ISR^(0+1280),c
  2917  0027CE  0E6E               	movlw	110
  2918  0027D0                     i2u66_47:
  2919  0027D0  2EE8               	decfsz	wreg,f,c
  2920  0027D2  D7FE               	bra	i2u66_47
  2921  0027D4  2E1B               	decfsz	??_INT1_ISR^(0+1280),f,c
  2922  0027D6  D7FC               	bra	i2u66_47
  2923  0027D8  2E1C               	decfsz	(??_INT1_ISR+1)^(0+1280),f,c
  2924  0027DA  D7FA               	bra	i2u66_47
  2925  0027DC  D000               	nop2	
  2926  0027DE                     
  2927                           ;maincode1.c: 96:     BORRAR_LCD();
  2928  0027DE  ECD8  F016         	call	i2_BORRAR_LCD	;wreg free
  2929  0027E2  0061  F480  F4F5   	movff	??_INT1_ISR+5,tablat
  2930  0027E8  0061  F47C  F4F8   	movff	??_INT1_ISR+4,tblptru
  2931  0027EE  0061  F478  F4F7   	movff	??_INT1_ISR+3,tblptrh
  2932  0027F4  0061  F474  F4F6   	movff	??_INT1_ISR+2,tblptrl
  2933  0027FA  0011               	retfie		f
  2934  0027FC                     __end_of_INT1_ISR:
  2935                           	callstack 0
  2936                           
  2937                           ;
  2938                           ; Interrupt Vector Table @ 0x8
  2939                           ;
  2940                           
  2941                           	psect	ivt0x8
  2942  000008                     __pivt0x8:
  2943                           	callstack 0
  2944  000008                     ivt0x8_base:
  2945                           	callstack 0
  2946                           
  2947                           ; Vector 0 : SWINT
  2948  000008  0040               	dw	ivt0x8_undefint shr (0+2)
  2949                           
  2950                           ; Vector 1 : HLVD
  2951  00000A  0040               	dw	ivt0x8_undefint shr (0+2)
  2952                           
  2953                           ; Vector 2 : OSF
  2954  00000C  0040               	dw	ivt0x8_undefint shr (0+2)
  2955                           
  2956                           ; Vector 3 : CSW
  2957  00000E  0040               	dw	ivt0x8_undefint shr (0+2)
  2958                           
  2959                           ; Vector 4 : Undefined
  2960  000010  0040               	dw	ivt0x8_undefint shr (0+2)
  2961                           
  2962                           ; Vector 5 : CLC1
  2963  000012  0040               	dw	ivt0x8_undefint shr (0+2)
  2964                           
  2965                           ; Vector 6 : Undefined
  2966  000014  0040               	dw	ivt0x8_undefint shr (0+2)
  2967                           
  2968                           ; Vector 7 : IOC
  2969  000016  0040               	dw	ivt0x8_undefint shr (0+2)
  2970                           
  2971                           ; Vector 8 : INT0
  2972  000018  09BF               	dw	_INT0_ISR shr (0+2)
  2973                           
  2974                           ; Vector 9 : ZCD
  2975  00001A  0040               	dw	ivt0x8_undefint shr (0+2)
  2976                           
  2977                           ; Vector 10 : AD
  2978  00001C  0040               	dw	ivt0x8_undefint shr (0+2)
  2979                           
  2980                           ; Vector 11 : ACT
  2981  00001E  0040               	dw	ivt0x8_undefint shr (0+2)
  2982                           
  2983                           ; Vector 12 : CMP1
  2984  000020  0040               	dw	ivt0x8_undefint shr (0+2)
  2985                           
  2986                           ; Vector 13 : SMT1
  2987  000022  0040               	dw	ivt0x8_undefint shr (0+2)
  2988                           
  2989                           ; Vector 14 : SMT1PRA
  2990  000024  0040               	dw	ivt0x8_undefint shr (0+2)
  2991                           
  2992                           ; Vector 15 : SMT1PRW
  2993  000026  0040               	dw	ivt0x8_undefint shr (0+2)
  2994                           
  2995                           ; Vector 16 : ADT
  2996  000028  0040               	dw	ivt0x8_undefint shr (0+2)
  2997                           
  2998                           ; Vector 17 : Undefined
  2999  00002A  0040               	dw	ivt0x8_undefint shr (0+2)
  3000                           
  3001                           ; Vector 18 : Undefined
  3002  00002C  0040               	dw	ivt0x8_undefint shr (0+2)
  3003                           
  3004                           ; Vector 19 : Undefined
  3005  00002E  0040               	dw	ivt0x8_undefint shr (0+2)
  3006                           
  3007                           ; Vector 20 : DMA1SCNT
  3008  000030  0040               	dw	ivt0x8_undefint shr (0+2)
  3009                           
  3010                           ; Vector 21 : DMA1DCNT
  3011  000032  0040               	dw	ivt0x8_undefint shr (0+2)
  3012                           
  3013                           ; Vector 22 : DMA1OR
  3014  000034  0040               	dw	ivt0x8_undefint shr (0+2)
  3015                           
  3016                           ; Vector 23 : DMA1A
  3017  000036  0040               	dw	ivt0x8_undefint shr (0+2)
  3018                           
  3019                           ; Vector 24 : SPI1RX
  3020  000038  0040               	dw	ivt0x8_undefint shr (0+2)
  3021                           
  3022                           ; Vector 25 : SPI1TX
  3023  00003A  0040               	dw	ivt0x8_undefint shr (0+2)
  3024                           
  3025                           ; Vector 26 : SPI1
  3026  00003C  0040               	dw	ivt0x8_undefint shr (0+2)
  3027                           
  3028                           ; Vector 27 : TMR2
  3029  00003E  0040               	dw	ivt0x8_undefint shr (0+2)
  3030                           
  3031                           ; Vector 28 : TMR1
  3032  000040  0040               	dw	ivt0x8_undefint shr (0+2)
  3033                           
  3034                           ; Vector 29 : TMR1G
  3035  000042  0040               	dw	ivt0x8_undefint shr (0+2)
  3036                           
  3037                           ; Vector 30 : CCP1
  3038  000044  0040               	dw	ivt0x8_undefint shr (0+2)
  3039                           
  3040                           ; Vector 31 : TMR0
  3041  000046  0040               	dw	ivt0x8_undefint shr (0+2)
  3042                           
  3043                           ; Vector 32 : U1RX
  3044  000048  0040               	dw	ivt0x8_undefint shr (0+2)
  3045                           
  3046                           ; Vector 33 : U1TX
  3047  00004A  0040               	dw	ivt0x8_undefint shr (0+2)
  3048                           
  3049                           ; Vector 34 : U1E
  3050  00004C  0040               	dw	ivt0x8_undefint shr (0+2)
  3051                           
  3052                           ; Vector 35 : U1
  3053  00004E  0040               	dw	ivt0x8_undefint shr (0+2)
  3054                           
  3055                           ; Vector 36 : Undefined
  3056  000050  0040               	dw	ivt0x8_undefint shr (0+2)
  3057                           
  3058                           ; Vector 37 : Undefined
  3059  000052  0040               	dw	ivt0x8_undefint shr (0+2)
  3060                           
  3061                           ; Vector 38 : PWM1PR
  3062  000054  0040               	dw	ivt0x8_undefint shr (0+2)
  3063                           
  3064                           ; Vector 39 : PWM1
  3065  000056  0040               	dw	ivt0x8_undefint shr (0+2)
  3066                           
  3067                           ; Vector 40 : SPI2RX
  3068  000058  0040               	dw	ivt0x8_undefint shr (0+2)
  3069                           
  3070                           ; Vector 41 : SPI2TX
  3071  00005A  0040               	dw	ivt0x8_undefint shr (0+2)
  3072                           
  3073                           ; Vector 42 : SPI2
  3074  00005C  0040               	dw	ivt0x8_undefint shr (0+2)
  3075                           
  3076                           ; Vector 43 : Undefined
  3077  00005E  0040               	dw	ivt0x8_undefint shr (0+2)
  3078                           
  3079                           ; Vector 44 : TMR3
  3080  000060  0040               	dw	ivt0x8_undefint shr (0+2)
  3081                           
  3082                           ; Vector 45 : TMR3G
  3083  000062  0040               	dw	ivt0x8_undefint shr (0+2)
  3084                           
  3085                           ; Vector 46 : PWM2PR
  3086  000064  0040               	dw	ivt0x8_undefint shr (0+2)
  3087                           
  3088                           ; Vector 47 : PWM2
  3089  000066  0040               	dw	ivt0x8_undefint shr (0+2)
  3090                           
  3091                           ; Vector 48 : INT1
  3092  000068  09DF               	dw	_INT1_ISR shr (0+2)
  3093                           
  3094                           ; Vector 49 : CLC2
  3095  00006A  0040               	dw	ivt0x8_undefint shr (0+2)
  3096                           
  3097                           ; Vector 50 : CWG1
  3098  00006C  0040               	dw	ivt0x8_undefint shr (0+2)
  3099                           
  3100                           ; Vector 51 : NCO1
  3101  00006E  0040               	dw	ivt0x8_undefint shr (0+2)
  3102                           
  3103                           ; Vector 52 : DMA2SCNT
  3104  000070  0040               	dw	ivt0x8_undefint shr (0+2)
  3105                           
  3106                           ; Vector 53 : DMA2DCNT
  3107  000072  0040               	dw	ivt0x8_undefint shr (0+2)
  3108                           
  3109                           ; Vector 54 : DMA2OR
  3110  000074  0040               	dw	ivt0x8_undefint shr (0+2)
  3111                           
  3112                           ; Vector 55 : DMA2A
  3113  000076  0040               	dw	ivt0x8_undefint shr (0+2)
  3114                           
  3115                           ; Vector 56 : I2C1RX
  3116  000078  0040               	dw	ivt0x8_undefint shr (0+2)
  3117                           
  3118                           ; Vector 57 : I2C1TX
  3119  00007A  0040               	dw	ivt0x8_undefint shr (0+2)
  3120                           
  3121                           ; Vector 58 : I2C1
  3122  00007C  0040               	dw	ivt0x8_undefint shr (0+2)
  3123                           
  3124                           ; Vector 59 : I2C1E
  3125  00007E  0040               	dw	ivt0x8_undefint shr (0+2)
  3126                           
  3127                           ; Vector 60 : Undefined
  3128  000080  0040               	dw	ivt0x8_undefint shr (0+2)
  3129                           
  3130                           ; Vector 61 : CLC3
  3131  000082  0040               	dw	ivt0x8_undefint shr (0+2)
  3132                           
  3133                           ; Vector 62 : PWM3PR
  3134  000084  0040               	dw	ivt0x8_undefint shr (0+2)
  3135                           
  3136                           ; Vector 63 : PWM3
  3137  000086  0040               	dw	ivt0x8_undefint shr (0+2)
  3138                           
  3139                           ; Vector 64 : U2RX
  3140  000088  0040               	dw	ivt0x8_undefint shr (0+2)
  3141                           
  3142                           ; Vector 65 : U2TX
  3143  00008A  0040               	dw	ivt0x8_undefint shr (0+2)
  3144                           
  3145                           ; Vector 66 : U2E
  3146  00008C  0040               	dw	ivt0x8_undefint shr (0+2)
  3147                           
  3148                           ; Vector 67 : U2
  3149  00008E  0040               	dw	ivt0x8_undefint shr (0+2)
  3150                           
  3151                           ; Vector 68 : TMR5
  3152  000090  0040               	dw	ivt0x8_undefint shr (0+2)
  3153                           
  3154                           ; Vector 69 : TMR5G
  3155  000092  0040               	dw	ivt0x8_undefint shr (0+2)
  3156                           
  3157                           ; Vector 70 : CCP2
  3158  000094  0040               	dw	ivt0x8_undefint shr (0+2)
  3159                           
  3160                           ; Vector 71 : SCAN
  3161  000096  0040               	dw	ivt0x8_undefint shr (0+2)
  3162                           
  3163                           ; Vector 72 : U3RX
  3164  000098  0040               	dw	ivt0x8_undefint shr (0+2)
  3165                           
  3166                           ; Vector 73 : U3TX
  3167  00009A  0040               	dw	ivt0x8_undefint shr (0+2)
  3168                           
  3169                           ; Vector 74 : U3E
  3170  00009C  0040               	dw	ivt0x8_undefint shr (0+2)
  3171                           
  3172                           ; Vector 75 : U3
  3173  00009E  0040               	dw	ivt0x8_undefint shr (0+2)
  3174                           
  3175                           ; Vector 76 : Undefined
  3176  0000A0  0040               	dw	ivt0x8_undefint shr (0+2)
  3177                           
  3178                           ; Vector 77 : CLC4
  3179  0000A2  0040               	dw	ivt0x8_undefint shr (0+2)
  3180                           
  3181                           ; Vector 78 : Undefined
  3182  0000A4  0040               	dw	ivt0x8_undefint shr (0+2)
  3183                           
  3184                           ; Vector 79 : Undefined
  3185  0000A6  0040               	dw	ivt0x8_undefint shr (0+2)
  3186                           
  3187                           ; Vector 80 : INT2
  3188  0000A8  0040               	dw	ivt0x8_undefint shr (0+2)
  3189                           
  3190                           ; Vector 81 : CLC5
  3191  0000AA  0040               	dw	ivt0x8_undefint shr (0+2)
  3192                           
  3193                           ; Vector 82 : CWG2
  3194  0000AC  0040               	dw	ivt0x8_undefint shr (0+2)
  3195                           
  3196                           ; Vector 83 : NCO2
  3197  0000AE  0040               	dw	ivt0x8_undefint shr (0+2)
  3198                           
  3199                           ; Vector 84 : DMA3SCNT
  3200  0000B0  0040               	dw	ivt0x8_undefint shr (0+2)
  3201                           
  3202                           ; Vector 85 : DMA3DCNT
  3203  0000B2  0040               	dw	ivt0x8_undefint shr (0+2)
  3204                           
  3205                           ; Vector 86 : DMA3OR
  3206  0000B4  0040               	dw	ivt0x8_undefint shr (0+2)
  3207                           
  3208                           ; Vector 87 : DMA3A
  3209  0000B6  0040               	dw	ivt0x8_undefint shr (0+2)
  3210                           
  3211                           ; Vector 88 : CCP3
  3212  0000B8  0040               	dw	ivt0x8_undefint shr (0+2)
  3213                           
  3214                           ; Vector 89 : CLC6
  3215  0000BA  0040               	dw	ivt0x8_undefint shr (0+2)
  3216                           
  3217                           ; Vector 90 : CWG3
  3218  0000BC  0040               	dw	ivt0x8_undefint shr (0+2)
  3219                           
  3220                           ; Vector 91 : TMR4
  3221  0000BE  0040               	dw	ivt0x8_undefint shr (0+2)
  3222                           
  3223                           ; Vector 92 : DMA4SCNT
  3224  0000C0  0040               	dw	ivt0x8_undefint shr (0+2)
  3225                           
  3226                           ; Vector 93 : DMA4DCNT
  3227  0000C2  0040               	dw	ivt0x8_undefint shr (0+2)
  3228                           
  3229                           ; Vector 94 : DMA4OR
  3230  0000C4  0040               	dw	ivt0x8_undefint shr (0+2)
  3231                           
  3232                           ; Vector 95 : DMA4A
  3233  0000C6  0040               	dw	ivt0x8_undefint shr (0+2)
  3234                           
  3235                           ; Vector 96 : U4RX
  3236  0000C8  0040               	dw	ivt0x8_undefint shr (0+2)
  3237                           
  3238                           ; Vector 97 : U4TX
  3239  0000CA  0040               	dw	ivt0x8_undefint shr (0+2)
  3240                           
  3241                           ; Vector 98 : U4E
  3242  0000CC  0040               	dw	ivt0x8_undefint shr (0+2)
  3243                           
  3244                           ; Vector 99 : U4
  3245  0000CE  0040               	dw	ivt0x8_undefint shr (0+2)
  3246                           
  3247                           ; Vector 100 : DMA5SCNT
  3248  0000D0  0040               	dw	ivt0x8_undefint shr (0+2)
  3249                           
  3250                           ; Vector 101 : DMA5DCNT
  3251  0000D2  0040               	dw	ivt0x8_undefint shr (0+2)
  3252                           
  3253                           ; Vector 102 : DMA5OR
  3254  0000D4  0040               	dw	ivt0x8_undefint shr (0+2)
  3255                           
  3256                           ; Vector 103 : DMA5A
  3257  0000D6  0040               	dw	ivt0x8_undefint shr (0+2)
  3258                           
  3259                           ; Vector 104 : U5RX
  3260  0000D8  0040               	dw	ivt0x8_undefint shr (0+2)
  3261                           
  3262                           ; Vector 105 : U5TX
  3263  0000DA  0040               	dw	ivt0x8_undefint shr (0+2)
  3264                           
  3265                           ; Vector 106 : U5E
  3266  0000DC  0040               	dw	ivt0x8_undefint shr (0+2)
  3267                           
  3268                           ; Vector 107 : U5
  3269  0000DE  0040               	dw	ivt0x8_undefint shr (0+2)
  3270                           
  3271                           ; Vector 108 : DMA6SCNT
  3272  0000E0  0040               	dw	ivt0x8_undefint shr (0+2)
  3273                           
  3274                           ; Vector 109 : DMA6DCNT
  3275  0000E2  0040               	dw	ivt0x8_undefint shr (0+2)
  3276                           
  3277                           ; Vector 110 : DMA6OR
  3278  0000E4  0040               	dw	ivt0x8_undefint shr (0+2)
  3279                           
  3280                           ; Vector 111 : DMA6A
  3281  0000E6  0040               	dw	ivt0x8_undefint shr (0+2)
  3282                           
  3283                           ; Vector 112 : Undefined
  3284  0000E8  0040               	dw	ivt0x8_undefint shr (0+2)
  3285                           
  3286                           ; Vector 113 : CLC7
  3287  0000EA  0040               	dw	ivt0x8_undefint shr (0+2)
  3288                           
  3289                           ; Vector 114 : CMP2
  3290  0000EC  0040               	dw	ivt0x8_undefint shr (0+2)
  3291                           
  3292                           ; Vector 115 : NCO3
  3293  0000EE  0040               	dw	ivt0x8_undefint shr (0+2)
  3294                           
  3295                           ; Vector 116 : Undefined
  3296  0000F0  0040               	dw	ivt0x8_undefint shr (0+2)
  3297                           
  3298                           ; Vector 117 : Undefined
  3299  0000F2  0040               	dw	ivt0x8_undefint shr (0+2)
  3300                           
  3301                           ; Vector 118 : Undefined
  3302  0000F4  0040               	dw	ivt0x8_undefint shr (0+2)
  3303                           
  3304                           ; Vector 119 : Undefined
  3305  0000F6  0040               	dw	ivt0x8_undefint shr (0+2)
  3306                           
  3307                           ; Vector 120 : NVM
  3308  0000F8  0040               	dw	ivt0x8_undefint shr (0+2)
  3309                           
  3310                           ; Vector 121 : CLC8
  3311  0000FA  0040               	dw	ivt0x8_undefint shr (0+2)
  3312                           
  3313                           ; Vector 122 : CRC
  3314  0000FC  0040               	dw	ivt0x8_undefint shr (0+2)
  3315                           
  3316                           ; Vector 123 : TMR6
  3317  0000FE  0040               	dw	ivt0x8_undefint shr (0+2)
  3318  000100                     ivt0x8_undefint:
  3319                           	callstack 0
  3320  000100  00FF               	reset	
  3321                           
  3322                           	psect	rparam
  3323  0000                     
  3324                           	psect	idloc
  3325                           
  3326                           ;Config register IDLOC0 @ 0x200000
  3327                           ;	unspecified, using default values
  3328  200000                     	org	2097152
  3329  200000  0FFF               	dw	4095
  3330                           
  3331                           ;Config register IDLOC1 @ 0x200002
  3332                           ;	unspecified, using default values
  3333  200002                     	org	2097154
  3334  200002  0FFF               	dw	4095
  3335                           
  3336                           ;Config register IDLOC2 @ 0x200004
  3337                           ;	unspecified, using default values
  3338  200004                     	org	2097156
  3339  200004  0FFF               	dw	4095
  3340                           
  3341                           ;Config register IDLOC3 @ 0x200006
  3342                           ;	unspecified, using default values
  3343  200006                     	org	2097158
  3344  200006  0FFF               	dw	4095
  3345                           
  3346                           ;Config register IDLOC4 @ 0x200008
  3347                           ;	unspecified, using default values
  3348  200008                     	org	2097160
  3349  200008  0FFF               	dw	4095
  3350                           
  3351                           ;Config register IDLOC5 @ 0x20000A
  3352                           ;	unspecified, using default values
  3353  20000A                     	org	2097162
  3354  20000A  0FFF               	dw	4095
  3355                           
  3356                           ;Config register IDLOC6 @ 0x20000C
  3357                           ;	unspecified, using default values
  3358  20000C                     	org	2097164
  3359  20000C  0FFF               	dw	4095
  3360                           
  3361                           ;Config register IDLOC7 @ 0x20000E
  3362                           ;	unspecified, using default values
  3363  20000E                     	org	2097166
  3364  20000E  0FFF               	dw	4095
  3365                           
  3366                           ;Config register IDLOC8 @ 0x200010
  3367                           ;	unspecified, using default values
  3368  200010                     	org	2097168
  3369  200010  0FFF               	dw	4095
  3370                           
  3371                           ;Config register IDLOC9 @ 0x200012
  3372                           ;	unspecified, using default values
  3373  200012                     	org	2097170
  3374  200012  0FFF               	dw	4095
  3375                           
  3376                           ;Config register IDLOC10 @ 0x200014
  3377                           ;	unspecified, using default values
  3378  200014                     	org	2097172
  3379  200014  0FFF               	dw	4095
  3380                           
  3381                           ;Config register IDLOC11 @ 0x200016
  3382                           ;	unspecified, using default values
  3383  200016                     	org	2097174
  3384  200016  0FFF               	dw	4095
  3385                           
  3386                           ;Config register IDLOC12 @ 0x200018
  3387                           ;	unspecified, using default values
  3388  200018                     	org	2097176
  3389  200018  0FFF               	dw	4095
  3390                           
  3391                           ;Config register IDLOC13 @ 0x20001A
  3392                           ;	unspecified, using default values
  3393  20001A                     	org	2097178
  3394  20001A  0FFF               	dw	4095
  3395                           
  3396                           ;Config register IDLOC14 @ 0x20001C
  3397                           ;	unspecified, using default values
  3398  20001C                     	org	2097180
  3399  20001C  0FFF               	dw	4095
  3400                           
  3401                           ;Config register IDLOC15 @ 0x20001E
  3402                           ;	unspecified, using default values
  3403  20001E                     	org	2097182
  3404  20001E  0FFF               	dw	4095
  3405                           
  3406                           ;Config register IDLOC16 @ 0x200020
  3407                           ;	unspecified, using default values
  3408  200020                     	org	2097184
  3409  200020  0FFF               	dw	4095
  3410                           
  3411                           ;Config register IDLOC17 @ 0x200022
  3412                           ;	unspecified, using default values
  3413  200022                     	org	2097186
  3414  200022  0FFF               	dw	4095
  3415                           
  3416                           ;Config register IDLOC18 @ 0x200024
  3417                           ;	unspecified, using default values
  3418  200024                     	org	2097188
  3419  200024  0FFF               	dw	4095
  3420                           
  3421                           ;Config register IDLOC19 @ 0x200026
  3422                           ;	unspecified, using default values
  3423  200026                     	org	2097190
  3424  200026  0FFF               	dw	4095
  3425                           
  3426                           ;Config register IDLOC20 @ 0x200028
  3427                           ;	unspecified, using default values
  3428  200028                     	org	2097192
  3429  200028  0FFF               	dw	4095
  3430                           
  3431                           ;Config register IDLOC21 @ 0x20002A
  3432                           ;	unspecified, using default values
  3433  20002A                     	org	2097194
  3434  20002A  0FFF               	dw	4095
  3435                           
  3436                           ;Config register IDLOC22 @ 0x20002C
  3437                           ;	unspecified, using default values
  3438  20002C                     	org	2097196
  3439  20002C  0FFF               	dw	4095
  3440                           
  3441                           ;Config register IDLOC23 @ 0x20002E
  3442                           ;	unspecified, using default values
  3443  20002E                     	org	2097198
  3444  20002E  0FFF               	dw	4095
  3445                           
  3446                           ;Config register IDLOC24 @ 0x200030
  3447                           ;	unspecified, using default values
  3448  200030                     	org	2097200
  3449  200030  0FFF               	dw	4095
  3450                           
  3451                           ;Config register IDLOC25 @ 0x200032
  3452                           ;	unspecified, using default values
  3453  200032                     	org	2097202
  3454  200032  0FFF               	dw	4095
  3455                           
  3456                           ;Config register IDLOC26 @ 0x200034
  3457                           ;	unspecified, using default values
  3458  200034                     	org	2097204
  3459  200034  0FFF               	dw	4095
  3460                           
  3461                           ;Config register IDLOC27 @ 0x200036
  3462                           ;	unspecified, using default values
  3463  200036                     	org	2097206
  3464  200036  0FFF               	dw	4095
  3465                           
  3466                           ;Config register IDLOC28 @ 0x200038
  3467                           ;	unspecified, using default values
  3468  200038                     	org	2097208
  3469  200038  0FFF               	dw	4095
  3470                           
  3471                           ;Config register IDLOC29 @ 0x20003A
  3472                           ;	unspecified, using default values
  3473  20003A                     	org	2097210
  3474  20003A  0FFF               	dw	4095
  3475                           
  3476                           ;Config register IDLOC30 @ 0x20003C
  3477                           ;	unspecified, using default values
  3478  20003C                     	org	2097212
  3479  20003C  0FFF               	dw	4095
  3480                           
  3481                           ;Config register IDLOC31 @ 0x20003E
  3482                           ;	unspecified, using default values
  3483  20003E                     	org	2097214
  3484  20003E  0FFF               	dw	4095
  3485                           
  3486                           	psect	config
  3487                           
  3488                           ;Config register CONFIG1 @ 0x300000
  3489                           ;	External Oscillator Selection
  3490                           ;	FEXTOSC = ECH, EC (external clock) above 8 MHz
  3491                           ;	Reset Oscillator Selection
  3492                           ;	RSTOSC = EXTOSC, EXTOSC operating per FEXTOSC bits (device manufacturing default)
  3493  300000                     	org	3145728
  3494  300000  FF                 	db	255
  3495                           
  3496                           ;Config register CONFIG2 @ 0x300001
  3497                           ;	Clock out Enable bit
  3498                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
  3499                           ;	PRLOCKED One-Way Set Enable bit
  3500                           ;	PR1WAY = ON, PRLOCKED bit can be cleared and set only once
  3501                           ;	Clock Switch Enable bit
  3502                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
  3503                           ;	Fail-Safe Clock Monitor Enable bit
  3504                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
  3505  300001                     	org	3145729
  3506  300001  FF                 	db	255
  3507                           
  3508                           ;Config register CONFIG3 @ 0x300002
  3509                           ;	MCLR Enable bit
  3510                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
  3511                           ;	Power-up timer selection bits
  3512                           ;	PWRTS = PWRT_16, PWRT set at 16ms
  3513                           ;	Multi-vector enable bit
  3514                           ;	MVECEN = ON, Multi-vector enabled, Vector table used for interrupts
  3515                           ;	IVTLOCK bit One-way set enable bit
  3516                           ;	IVT1WAY = ON, IVTLOCKED bit can be cleared and set only once
  3517                           ;	Low Power BOR Enable bit
  3518                           ;	LPBOREN = OFF, Low-Power BOR disabled
  3519                           ;	Brown-out Reset Enable bits
  3520                           ;	BOREN = OFF, Brown-out Reset disabled
  3521  300002                     	org	3145730
  3522  300002  3B                 	db	59
  3523                           
  3524                           ;Config register CONFIG4 @ 0x300003
  3525                           ;	Brown-out Reset Voltage Selection bits
  3526                           ;	BORV = VBOR_1P9, Brown-out Reset Voltage (VBOR) set to 1.9V
  3527                           ;	ZCD Disable bit
  3528                           ;	ZCD = OFF, ZCD module is disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCD
      +                          CON
  3529                           ;	PPSLOCK bit One-Way Set Enable bit
  3530                           ;	PPS1WAY = ON, PPSLOCKED bit can be cleared and set only once; PPS registers remain loc
      +                          ked after one clear/set cycle
  3531                           ;	Stack Full/Underflow Reset Enable bit
  3532                           ;	STVREN = ON, Stack full/underflow will cause Reset
  3533                           ;	Low Voltage Programming Enable bit
  3534                           ;	LVP = OFF, HV on MCLR/VPP must be used for programming
  3535                           ;	Extended Instruction Set Enable bit
  3536                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
  3537  300003                     	org	3145731
  3538  300003  DF                 	db	223
  3539                           
  3540                           ;Config register CONFIG5 @ 0x300004
  3541                           ;	WDT Period selection bits
  3542                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  3543                           ;	WDT operating mode
  3544                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
  3545  300004                     	org	3145732
  3546  300004  9F                 	db	159
  3547                           
  3548                           ;Config register CONFIG6 @ 0x300005
  3549                           ;	WDT Window Select bits
  3550                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
  3551                           ;	WDT input clock selector
  3552                           ;	WDTCCS = SC, Software Control
  3553  300005                     	org	3145733
  3554  300005  FF                 	db	255
  3555                           
  3556                           ;Config register CONFIG7 @ 0x300006
  3557                           ;	Boot Block Size selection bits
  3558                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
  3559                           ;	Boot Block enable bit
  3560                           ;	BBEN = OFF, Boot block disabled
  3561                           ;	Storage Area Flash enable bit
  3562                           ;	SAFEN = OFF, SAF disabled
  3563                           ;	Background Debugger
  3564                           ;	DEBUG = OFF, Background Debugger disabled
  3565  300006                     	org	3145734
  3566  300006  FF                 	db	255
  3567                           
  3568                           ;Config register CONFIG8 @ 0x300007
  3569                           ;	Boot Block Write Protection bit
  3570                           ;	WRTB = OFF, Boot Block not Write protected
  3571                           ;	Configuration Register Write Protection bit
  3572                           ;	WRTC = OFF, Configuration registers not Write protected
  3573                           ;	Data EEPROM Write Protection bit
  3574                           ;	WRTD = OFF, Data EEPROM not Write protected
  3575                           ;	SAF Write protection bit
  3576                           ;	WRTSAF = OFF, SAF not Write Protected
  3577                           ;	Application Block write protection bit
  3578                           ;	WRTAPP = OFF, Application Block not write protected
  3579  300007                     	org	3145735
  3580  300007  FF                 	db	255
  3581                           
  3582                           ; Padding undefined space
  3583  300008                     	org	3145736
  3584  300008  FF                 	db	255
  3585                           
  3586                           ;Config register CONFIG10 @ 0x300009
  3587                           ;	PFM and Data EEPROM Code Protection bit
  3588                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
  3589  300009                     	org	3145737
  3590  300009  FF                 	db	255
  3591                           tosu	equ	0x4FF
  3592                           tosh	equ	0x4FE
  3593                           tosl	equ	0x4FD
  3594                           stkptr	equ	0x4FC
  3595                           pclatu	equ	0x4FB
  3596                           pclath	equ	0x4FA
  3597                           pcl	equ	0x4F9
  3598                           tblptru	equ	0x4F8
  3599                           tblptrh	equ	0x4F7
  3600                           tblptrl	equ	0x4F6
  3601                           tablat	equ	0x4F5
  3602                           prodh	equ	0x4F4
  3603                           prodl	equ	0x4F3
  3604                           indf0	equ	0x4EF
  3605                           postinc0	equ	0x4EE
  3606                           postdec0	equ	0x4ED
  3607                           preinc0	equ	0x4EC
  3608                           plusw0	equ	0x4EB
  3609                           fsr0h	equ	0x4EA
  3610                           fsr0l	equ	0x4E9
  3611                           wreg	equ	0x4E8
  3612                           indf1	equ	0x4E7
  3613                           postinc1	equ	0x4E6
  3614                           postdec1	equ	0x4E5
  3615                           preinc1	equ	0x4E4
  3616                           plusw1	equ	0x4E3
  3617                           fsr1h	equ	0x4E2
  3618                           fsr1l	equ	0x4E1
  3619                           bsr	equ	0x4E0
  3620                           indf2	equ	0x4DF
  3621                           postinc2	equ	0x4DE
  3622                           postdec2	equ	0x4DD
  3623                           preinc2	equ	0x4DC
  3624                           plusw2	equ	0x4DB
  3625                           fsr2h	equ	0x4DA
  3626                           fsr2l	equ	0x4D9
  3627                           status	equ	0x4D8

Data Sizes:
    Strings     78
    Constant    0
    Data        0
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     48      52
    BANK5           160      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0
    BANK32          256      0       0
    BANK33          256      0       0
    BANK34          256      0       0
    BANK35          256      0       0
    BANK36          256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_9(CODE[9]), STR_8(CODE[11]), STR_7(CODE[14]), STR_6(CODE[14]), 
		 -> STR_5(CODE[4]), STR_4(CODE[5]), STR_3(CODE[4]), STR_2(CODE[17]), 
		 -> STR_1(CODE[14]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_9(CODE[9]), STR_8(CODE[11]), STR_7(CODE[14]), STR_6(CODE[14]), 
		 -> STR_5(CODE[4]), STR_4(CODE[5]), STR_3(CODE[4]), STR_2(CODE[17]), 
		 -> STR_1(CODE[14]), 

    ESCRIBE_MENSAJE2@cadena	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_9(CODE[9]), STR_8(CODE[11]), STR_7(CODE[14]), STR_6(CODE[14]), 
		 -> STR_5(CODE[4]), STR_4(CODE[5]), STR_3(CODE[4]), STR_2(CODE[17]), 
		 -> STR_1(CODE[14]), 


Critical Paths under _main in COMRAM

    _main->_convierte
    _convierte->___lwdiv
    ___lwdiv->___lwmod
    _configuro->_LCD_INIT
    _LCD_INIT->_CURSOR_ONOFF
    _LCD_INIT->_LCD_CONFIG
    _LCD_CONFIG->_ENVIA_LCD_CMD
    _CURSOR_ONOFF->_ENVIA_LCD_CMD
    _CURSOR_HOME->_ENVIA_LCD_CMD
    _BORRAR_LCD->_ENVIA_LCD_CMD
    _POS_CURSOR->_ENVIA_LCD_CMD
    _ENVIA_LCD_CMD->_ENVIA_NIBBLE
    _ENVIA_LCD_CMD->_LEER_LCD
    _ESCRIBE_MENSAJE2->_strlen
    _ENVIA_CHAR->_ENVIA_NIBBLE
    _ENVIA_CHAR->_LEER_LCD

Critical Paths under _INT0_ISR in COMRAM

    i2_POS_CURSOR->i2_ENVIA_LCD_CMD
    i2_ESCRIBE_MENSAJE2->i2_strlen
    i2_ENVIA_CHAR->i2_ENVIA_NIBBLE
    i2_ENVIA_CHAR->i2_LEER_LCD
    i2_BORRAR_LCD->i2_ENVIA_LCD_CMD
    i2_ENVIA_LCD_CMD->i2_ENVIA_NIBBLE
    i2_ENVIA_LCD_CMD->i2_LEER_LCD

Critical Paths under _INT1_ISR in COMRAM

    _INT1_ISR->i2_ESCRIBE_MENSAJE2
    i2_POS_CURSOR->i2_ENVIA_LCD_CMD
    i2_ESCRIBE_MENSAJE2->i2_strlen
    i2_ENVIA_CHAR->i2_ENVIA_NIBBLE
    i2_ENVIA_CHAR->i2_LEER_LCD
    i2_BORRAR_LCD->i2_ENVIA_LCD_CMD
    i2_ENVIA_LCD_CMD->i2_ENVIA_NIBBLE
    i2_ENVIA_LCD_CMD->i2_LEER_LCD

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT0_ISR in BANK5

    None.

Critical Paths under _INT1_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT0_ISR in BANK6

    None.

Critical Paths under _INT1_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT0_ISR in BANK7

    None.

Critical Paths under _INT1_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INT0_ISR in BANK8

    None.

Critical Paths under _INT1_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INT0_ISR in BANK9

    None.

Critical Paths under _INT1_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INT0_ISR in BANK10

    None.

Critical Paths under _INT1_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INT0_ISR in BANK11

    None.

Critical Paths under _INT1_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INT0_ISR in BANK12

    None.

Critical Paths under _INT1_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INT0_ISR in BANK13

    None.

Critical Paths under _INT1_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INT0_ISR in BANK14

    None.

Critical Paths under _INT1_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INT0_ISR in BANK15

    None.

Critical Paths under _INT1_ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INT0_ISR in BANK16

    None.

Critical Paths under _INT1_ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INT0_ISR in BANK17

    None.

Critical Paths under _INT1_ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INT0_ISR in BANK18

    None.

Critical Paths under _INT1_ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INT0_ISR in BANK19

    None.

Critical Paths under _INT1_ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INT0_ISR in BANK20

    None.

Critical Paths under _INT1_ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INT0_ISR in BANK21

    None.

Critical Paths under _INT1_ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INT0_ISR in BANK22

    None.

Critical Paths under _INT1_ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INT0_ISR in BANK23

    None.

Critical Paths under _INT1_ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INT0_ISR in BANK24

    None.

Critical Paths under _INT1_ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INT0_ISR in BANK25

    None.

Critical Paths under _INT1_ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _INT0_ISR in BANK26

    None.

Critical Paths under _INT1_ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _INT0_ISR in BANK27

    None.

Critical Paths under _INT1_ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _INT0_ISR in BANK28

    None.

Critical Paths under _INT1_ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _INT0_ISR in BANK29

    None.

Critical Paths under _INT1_ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _INT0_ISR in BANK30

    None.

Critical Paths under _INT1_ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _INT0_ISR in BANK31

    None.

Critical Paths under _INT1_ISR in BANK31

    None.

Critical Paths under _main in BANK32

    None.

Critical Paths under _INT0_ISR in BANK32

    None.

Critical Paths under _INT1_ISR in BANK32

    None.

Critical Paths under _main in BANK33

    None.

Critical Paths under _INT0_ISR in BANK33

    None.

Critical Paths under _INT1_ISR in BANK33

    None.

Critical Paths under _main in BANK34

    None.

Critical Paths under _INT0_ISR in BANK34

    None.

Critical Paths under _INT1_ISR in BANK34

    None.

Critical Paths under _main in BANK35

    None.

Critical Paths under _INT0_ISR in BANK35

    None.

Critical Paths under _INT1_ISR in BANK35

    None.

Critical Paths under _main in BANK36

    None.

Critical Paths under _INT0_ISR in BANK36

    None.

Critical Paths under _INT1_ISR in BANK36

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    4028
                                             46 COMRAM     2     2      0
                         _BORRAR_LCD
                         _ENVIA_CHAR
                   _ESCRIBE_MENSAJE2
                         _POS_CURSOR
                          _configuro
                          _convierte
                    _tomamuestra_ADC
 ---------------------------------------------------------------------------------
 (1) _tomamuestra_ADC                                      5     3      2      22
                                             32 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _convierte                                            2     0      2    1549
                                             44 COMRAM     2     0      2
                            ___lwdiv
                            ___lwmod
                    _tomamuestra_ADC (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     615
                                             32 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     618
                                             37 COMRAM     7     3      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (1) _configuro                                            0     0      0     525
                           _LCD_INIT
 ---------------------------------------------------------------------------------
 (2) _LCD_INIT                                             1     1      0     525
                                             36 COMRAM     1     1      0
                         _BORRAR_LCD
                        _CURSOR_HOME
                       _CURSOR_ONOFF
                         _LCD_CONFIG
 ---------------------------------------------------------------------------------
 (3) _LCD_CONFIG                                           1     1      0     135
                                             35 COMRAM     1     1      0
                      _ENVIA_LCD_CMD
                       _ENVIA_NIBBLE
 ---------------------------------------------------------------------------------
 (3) _CURSOR_ONOFF                                         1     1      0     150
                                             35 COMRAM     1     1      0
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (3) _CURSOR_HOME                                          0     0      0     120
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (3) _BORRAR_LCD                                           0     0      0     120
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (1) _POS_CURSOR                                           2     1      1     712
                                             35 COMRAM     2     1      1
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (4) _ENVIA_LCD_CMD                                        2     2      0     120
                                             33 COMRAM     2     2      0
                       _ENVIA_NIBBLE
                           _LEER_LCD
 ---------------------------------------------------------------------------------
 (1) _ESCRIBE_MENSAJE2                                     6     4      2     980
                                             36 COMRAM     6     4      2
                         _ENVIA_CHAR
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strlen                                               4     2      2     166
                                             32 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _ENVIA_CHAR                                           2     2      0     120
                                             33 COMRAM     2     2      0
                       _ENVIA_NIBBLE
                           _LEER_LCD
 ---------------------------------------------------------------------------------
 (5) _LEER_LCD                                             1     1      0      45
                                             32 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _ENVIA_NIBBLE                                         1     1      0      15
                                             32 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _INT0_ISR                                             6     6      0    1075
                                             10 COMRAM     6     6      0
                       i2_BORRAR_LCD
                 i2_ESCRIBE_MENSAJE2
                       i2_POS_CURSOR
 ---------------------------------------------------------------------------------
 (7) i2_POS_CURSOR                                         2     1      1     375
                                             19 COMRAM     2     1      1
                    i2_ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (7) i2_ESCRIBE_MENSAJE2                                   6     4      2     517
                                             20 COMRAM     6     4      2
                       i2_ENVIA_CHAR
                           i2_strlen
 ---------------------------------------------------------------------------------
 (8) i2_strlen                                             4     2      2     116
                                             16 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (8) i2_ENVIA_CHAR                                         2     2      0     183
                                             17 COMRAM     2     2      0
                     i2_ENVIA_NIBBLE
                         i2_LEER_LCD
 ---------------------------------------------------------------------------------
 (7) i2_BORRAR_LCD                                         0     0      0     183
                    i2_ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (8) i2_ENVIA_LCD_CMD                                      2     2      0     183
                                             17 COMRAM     2     2      0
                     i2_ENVIA_NIBBLE
                         i2_LEER_LCD
 ---------------------------------------------------------------------------------
 (9) i2_LEER_LCD                                           1     1      0      70
                                             16 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (9) i2_ENVIA_NIBBLE                                       1     1      0      23
                                             16 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _INT1_ISR                                             6     6      0    1075
                                             26 COMRAM     6     6      0
                       i2_BORRAR_LCD
                 i2_ESCRIBE_MENSAJE2
                       i2_POS_CURSOR
 ---------------------------------------------------------------------------------
 (7) i2_POS_CURSOR                                         2     1      1     375
                                             19 COMRAM     2     1      1
                    i2_ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (7) i2_ESCRIBE_MENSAJE2                                   6     4      2     517
                                             20 COMRAM     6     4      2
                       i2_ENVIA_CHAR
                           i2_strlen
 ---------------------------------------------------------------------------------
 (8) i2_strlen                                             4     2      2     116
                                             16 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (8) i2_ENVIA_CHAR                                         2     2      0     183
                                             17 COMRAM     2     2      0
                     i2_ENVIA_NIBBLE
                         i2_LEER_LCD
 ---------------------------------------------------------------------------------
 (7) i2_BORRAR_LCD                                         0     0      0     183
                    i2_ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (8) i2_ENVIA_LCD_CMD                                      2     2      0     183
                                             17 COMRAM     2     2      0
                     i2_ENVIA_NIBBLE
                         i2_LEER_LCD
 ---------------------------------------------------------------------------------
 (9) i2_LEER_LCD                                           1     1      0      70
                                             16 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (9) i2_ENVIA_NIBBLE                                       1     1      0      23
                                             16 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BORRAR_LCD
     _ENVIA_LCD_CMD
       _ENVIA_NIBBLE
       _LEER_LCD
   _ENVIA_CHAR
     _ENVIA_NIBBLE
     _LEER_LCD
   _ESCRIBE_MENSAJE2
     _ENVIA_CHAR
     _strlen
   _POS_CURSOR
     _ENVIA_LCD_CMD
   _configuro
     _LCD_INIT
       _BORRAR_LCD
       _CURSOR_HOME
         _ENVIA_LCD_CMD
       _CURSOR_ONOFF
         _ENVIA_LCD_CMD
       _LCD_CONFIG
         _ENVIA_LCD_CMD
         _ENVIA_NIBBLE
   _convierte
     ___lwdiv
       ___lwmod (ARG)
     ___lwmod
     _tomamuestra_ADC (ARG)
   _tomamuestra_ADC

 _INT0_ISR (ROOT)
   i2_BORRAR_LCD
     i2_ENVIA_LCD_CMD
       i2_ENVIA_NIBBLE
       i2_LEER_LCD
   i2_ESCRIBE_MENSAJE2
     i2_ENVIA_CHAR
       i2_ENVIA_NIBBLE
       i2_LEER_LCD
     i2_strlen
   i2_POS_CURSOR
     i2_ENVIA_LCD_CMD

 _INT1_ISR (ROOT)
   i2_BORRAR_LCD
     i2_ENVIA_LCD_CMD
       i2_ENVIA_NIBBLE
       i2_LEER_LCD
   i2_ESCRIBE_MENSAJE2
     i2_ENVIA_CHAR
       i2_ENVIA_NIBBLE
       i2_LEER_LCD
     i2_strlen
   i2_POS_CURSOR
     i2_ENVIA_LCD_CMD

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0       0      70        0.0%
EEDATA             400      0       0       0        0.0%
BITBIGSFRlhhhll    336      0       0      86        0.0%
BITBIGSFR_1        100      0       0      69        0.0%
BITBANK36          100      0       0      67        0.0%
BANK36             100      0       0      68        0.0%
BITBANK35          100      0       0      65        0.0%
BANK35             100      0       0      66        0.0%
BITBANK34          100      0       0      63        0.0%
BANK34             100      0       0      64        0.0%
BITBANK33          100      0       0      61        0.0%
BANK33             100      0       0      62        0.0%
BITBANK32          100      0       0      59        0.0%
BANK32             100      0       0      60        0.0%
BITBANK31          100      0       0      57        0.0%
BANK31             100      0       0      58        0.0%
BITBANK30          100      0       0      55        0.0%
BANK30             100      0       0      56        0.0%
BITBANK29          100      0       0      53        0.0%
BANK29             100      0       0      54        0.0%
BITBANK28          100      0       0      51        0.0%
BANK28             100      0       0      52        0.0%
BITBANK27          100      0       0      49        0.0%
BANK27             100      0       0      50        0.0%
BITBANK26          100      0       0      46        0.0%
BANK26             100      0       0      47        0.0%
BITBANK25          100      0       0      44        0.0%
BANK25             100      0       0      45        0.0%
BITBANK24          100      0       0      42        0.0%
BANK24             100      0       0      43        0.0%
BITBANK23          100      0       0      40        0.0%
BANK23             100      0       0      41        0.0%
BITBANK22          100      0       0      38        0.0%
BANK22             100      0       0      39        0.0%
BITBANK21          100      0       0      36        0.0%
BANK21             100      0       0      37        0.0%
BITBANK20          100      0       0      34        0.0%
BANK20             100      0       0      35        0.0%
BITBANK19          100      0       0      32        0.0%
BANK19             100      0       0      33        0.0%
BITBANK18          100      0       0      30        0.0%
BANK18             100      0       0      31        0.0%
BITBANK17          100      0       0      28        0.0%
BANK17             100      0       0      29        0.0%
BITBANK16          100      0       0      26        0.0%
BANK16             100      0       0      27        0.0%
BITBANK15          100      0       0      24        0.0%
BANK15             100      0       0      25        0.0%
BITBANK14          100      0       0      22        0.0%
BANK14             100      0       0      23        0.0%
BITBANK13          100      0       0      20        0.0%
BANK13             100      0       0      21        0.0%
BITBANK12          100      0       0      18        0.0%
BANK12             100      0       0      19        0.0%
BITBANK11          100      0       0      16        0.0%
BANK11             100      0       0      17        0.0%
BITBANK10          100      0       0      14        0.0%
BANK10             100      0       0      15        0.0%
BITBANK9           100      0       0      12        0.0%
BANK9              100      0       0      13        0.0%
BITBANK8           100      0       0      10        0.0%
BANK8              100      0       0      11        0.0%
BITBANK7           100      0       0       8        0.0%
BANK7              100      0       0       9        0.0%
BITBANK6           100      0       0       6        0.0%
BANK6              100      0       0       7        0.0%
BITBIGSFRll         AD      0       0      89        0.0%
BITBANK5            A0      0       0       4        0.0%
BANK5               A0      0       0       5        0.0%
BITBIGSFRlhhhhl     86      0       0      81        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     30      34       1       54.7%
BITBIGSFRhhhh       29      0       0      71        0.0%
BITBIGSFRlhhhlh      E      0       0      82        0.0%
BITBIGSFRlhhhll      C      0       0      84        0.0%
BITBIGSFRlhhhhh      A      0       0      79        0.0%
BITBIGSFRlhhhhh      9      0       0      77        0.0%
BITBIGSFRlhhhlh      7      0       0      83        0.0%
BITBIGSFRhhl         7      0       0      73        0.0%
BITBIGSFRlhhhll      6      0       0      85        0.0%
BITBIGSFRlhhhhh      4      0       0      78        0.0%
BITBIGSFRlhhhhh      4      0       0      80        0.0%
BITBIGSFRhhhl        4      0       0      72        0.0%
BITBIGSFRhlhl        4      0       0      75        0.0%
BITBIGSFRlhl         3      0       0      88        0.0%
BITBIGSFRhll         2      0       0      76        0.0%
BITBIGSFRhlhh        1      0       0      74        0.0%
BITBIGSFRlhhl        1      0       0      87        0.0%
BIGSFR_1             0      0       0     200        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      34      48        0.0%
DATA                 0      0      34       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Thu Jun 08 20:46:23 2023

                        l26 2BAA                          l71 2C4C                          l39 2DA6  
                        l80 2D82                          l56 2D14                          l74 2DAE  
                        l83 2C18                          l68 2A5E                          l77 2A10  
                        l87 2834                          l89 2870                          l97 2CE4  
                        u10 2870                          u11 286C                          u20 2CF8  
                        u21 2CF4                          u30 2D0E                          u31 2D0A  
             ENVIA_CHAR@aux 0523                         l161 26FA                         l164 2D22  
                       l158 2AF4                         l167 2D42                         l911 2D80  
                       l903 285E                         l905 2D6A                         l921 2BFA  
                       l913 2BE8                         l907 2D76                         l931 2C0C  
                       l923 2BFC                         l915 2BEA                         l909 2D78  
                       l933 2C12                         l925 2BFE                         l917 2BEE  
                       l941 2CFE                         l686 295A                         l871 2802  
                       l927 2C00                         l919 2BF2                         l935 2DA0  
                       l943 2D0E                         l951 29CA                         l679 2952  
                       l696 29BE                         l881 2816                         l873 2804  
                       l865 2B32                         l929 2C06                         l945 2DA8  
                       l937 2CE8                         l961 29F8                         l953 29D8  
                       l689 29B6                         l891 2836                         l883 281E  
                       l875 2806                         l867 27FC                         l939 2CF8  
                       l963 29FE                         l955 29E6                         l947 29C0  
                       l893 283E                         l885 2820                         l877 280E  
                       l869 2800                         l965 2A04                         l957 29EC  
                       l949 29C4                         l895 2844                         l887 2828  
                       l879 2814                         l967 2A0A                         l959 29F2  
                       l897 284E                         l889 282A                         l899 2858  
                       u300 293C                         u301 2938                         u310 296E  
                       u311 296A                         u320 298C                         u321 2988  
                       u330 29A2                         u331 299E                         u270 2B26  
                       u350 2B84                         u271 2B22                         u351 2B80  
                       u360 2BA2                         u280 2902                         u361 2B9E  
                       u281 28FE                         u370 2A5E                         u290 2920  
                       u507 2818                         u371 2A5A                         u291 291C  
                       u427 258A                         u380 2D30                         u517 2822  
                       u437 2CBC                         u381 2D2C                         u527 2838  
                       u447 2CCE                         u537 2848                         u457 29D0  
                       u547 2852                         u467 29E0                         u557 2D7A  
                       u477 2BF4                         u487 2C28                         u497 2808  
               LEER_LCD@aux 0521                         wreg 0004E8            ??i2_ENVIA_NIBBLE 0511  
              ?_CURSOR_HOME 0501              ??_ENVIA_NIBBLE 0521              ENVIA_CHAR@dato 0522  
                      l1021 2C26                        l1031 2C3A                        l1023 2C2E  
                      l1015 2C1C                        l1033 2C40                        l1025 2C30  
                      l1017 2C1E                        l1035 2C46                        l1027 2C32  
                      l1019 2C22                        l1051 2CC8                        l1029 2C34  
                      l1047 2CB6                        l1049 2CC4                        l1401 290A  
                      l1171 2ADA                        l1411 2944                        l1403 2912  
                      l1501 2A2A                        l1181 2AEE                        l1173 2ADC  
                      l1165 2AAE                        l1413 2946                        l1405 2920  
                      l1421 2976                        l1503 2A4A                        l1183 2AF0  
                      l1175 2ADE                        l1167 2ACE                        l1415 294C  
                      l1407 2926                        l1431 29B0                        l1423 297E  
                      l1511 2D1E                        l1505 2A4C                        l1177 2AE0  
                      l1169 2AD8                        l1409 293C                        l1425 298C  
                      l1417 295C                        l1513 2D30                        l1179 2AEC  
                      l1427 29A2                        l1419 296E                        l1507 2672  
                      l1429 29AA                        l1509 2D18                        l1541 255E  
                      l1391 2B26                        l1551 25A6                        l1543 256A  
                      l1385 2AF6                        l1561 25DC                        l1553 25B2  
                      l1545 2580                        l1387 2B02                        l1491 2B90  
                      l1395 28E8                        l1571 2612                        l1563 25E4  
                      l1555 25C4                        l1547 2598                        l1539 2550  
                      l1389 2B06                        l1493 2BA2                        l1397 28F0  
                      l1581 264A                        l1573 261A                        l1565 25F0  
                      l1557 25CC                        l1549 259C                        l1495 2A12  
                      l1487 2B74                        l1399 2902                        l1583 2652  
                      l1575 2622                        l1567 2602                        l1559 25D4  
                      l1497 2A22                        l1489 2B84                        l1585 265A  
                      l1577 262C                        l1569 260A                        l1499 2A22  
                      l1587 2662                        l1579 2638                        STR_1 2512  
                      STR_2 2501                        STR_3 2547                        STR_4 2542  
                      STR_5 254B                        STR_6 2512                        STR_7 2520  
                      STR_8 252E                        STR_9 2539                        _LATD 0004C1  
                      i2l26 2BE4                        i2l71 2C80                        i2l80 2D9E  
                      i2l74 2DB6                        i2l83 2CB4                        i2l68 2AAC  
                      i2l87 28AA                        i2l89 28E6                        _WPUB 000409  
               ?i2_LEER_LCD 0501                        _main 2550           ??i2_ENVIA_LCD_CMD 0512  
                      start 0102               ?_CURSOR_ONOFF 0501           ??_tomamuestra_ADC 0523  
              ___param_bank 000000             ??_ENVIA_LCD_CMD 0522            __end_of_LCD_INIT 2CE6  
          __end_of_LEER_LCD 2872            __end_of_INT0_ISR 277C            __end_of_INT1_ISR 27FC  
                     ?_main 0501                       _ADPCH 0003EC             __end_of___lwdiv 295C  
           __end_of___lwmod 29C0                       i2l180 2762                       i2l185 27E2  
                     i2l865 2B70                       _OSCEN 0000B3                       _PORTD 0004D1  
                     _TRISA 0004C6                       _TRISB 0004C7                       _TRISD 0004C9  
               ?_POS_CURSOR 0524                       tablat 0004F5                       status 0004D8  
            ??_CURSOR_ONOFF 0524            __end_ofi2_strlen 2B72             __initialization 2D44  
              __end_of_main 2672    i2ESCRIBE_MENSAJE2@cadena 0515                      ??_main 052F  
             __activetblptr 000001               ?i2_BORRAR_LCD 0501                      _ADRESH 0003EB  
                    _ADRESL 0003EA                      _ANSELA 000400                      _ANSELB 000408  
                    _ANSELD 000418                      i2l1341 2D92                      i2l1343 2D94  
                    i2l1351 2878                      i2l1601 2794                      i2l1345 2D9C  
                    i2l1361 288C                      i2l1353 287A                      i2l1441 2C62  
                    i2l1433 2C50                      i2l1521 2BCA                      i2l1611 27DE  
                    i2l1603 2796                      i2l1339 2D86                      i2l1371 28AC  
                    i2l1363 2894                      i2l1355 287C                      i2l1347 2872  
                    i2l1451 2C74                      i2l1443 2C64                      i2l1435 2C52  
                    i2l1531 2A78                      i2l1523 2BDC                      i2l1605 27A4  
                    i2l1373 28B4                      i2l1365 2896                      i2l1357 2884  
                    i2l1349 2876                      i2l1461 2C8E                      i2l1453 2C7A  
                    i2l1445 2C66                      i2l1437 2C56                      i2l1533 2A98  
                    i2l1525 2A60                      i2l1517 2BAE                      i2l1607 27B0  
                    i2l1375 28BA                      i2l1383 28D4                      i2l1367 289E  
                    i2l1359 288A                      i2l1471 2CA2                      i2l1463 2C96  
                    i2l1455 2C84                      i2l1447 2C68                      i2l1439 2C5A  
                    i2l1535 2A9A                      i2l1527 2A70                      i2l1519 2BBE  
                    i2l1609 27C6                      i2l1377 28C4                      i2l1369 28A0  
                    i2l1473 2CA8                      i2l1465 2C98                      i2l1457 2C86  
                    i2l1537 2DB0                      i2l1449 2C6E                      i2l1481 2B44  
                    i2l1529 2A70                      i2l1379 28CE                      i2l1475 2CAE  
                    i2l1467 2C9A                      i2l1459 2C8A                      i2l1483 2B64  
                    i2l1469 2C9C                      i2l1477 2B34                      i2l1479 2B40  
                    i2l1591 2716                      i2l1593 2724                      i2l1595 2730  
                    i2l1597 2746                      i2l1589 2714                      i2l1599 275E  
                    _OSCFRQ 0000B1         i2ESCRIBE_MENSAJE2@i 051A               ?i2_ENVIA_CHAR 0501  
                    _decena 0532        __end_of_ENVIA_NIBBLE 2D84                   ??___lwdiv 052A  
                 ??___lwmod 0525                      _millar 0534                      isa$std 000001  
                    _unidad 0531                      _strlen 2AF6                __mediumconst 0000  
                    tblptrh 0004F7                      tblptrl 0004F6                      tblptru 0004F8  
            ??i2_BORRAR_LCD 0514                ??_BORRAR_LCD 0524                   ?_LCD_INIT 0501  
                 ?_LEER_LCD 0501                  __accesstop 0560     __end_of__initialization 2D5A  
                 ?_INT0_ISR 0501                   ?_INT1_ISR 0501                ??_LCD_CONFIG 0524  
            ??i2_ENVIA_CHAR 0512               ___rparam_used 000001                ??_ENVIA_CHAR 0522  
            __pcstackCOMRAM 0501              ivt0x8_undefint 0100          __end_of_BORRAR_LCD 2DB0  
       i2ENVIA_LCD_CMD@dato 0512            _ESCRIBE_MENSAJE2 2A12            ENVIA_LCD_CMD@aux 0523  
      __end_of_CURSOR_ONOFF 2D16          __end_of_LCD_CONFIG 2A12          __end_of_ENVIA_CHAR 2C4E  
           i2_ENVIA_LCD_CMD 2C82                   ?i2_strlen 0511               ?i2_POS_CURSOR 0514  
           _tomamuestra_ADC 2D16                  ??_LCD_INIT 0525                ??i2_LEER_LCD 0511  
                ??_LEER_LCD 0521            ENVIA_NIBBLE@dato 0521                  ??_INT0_ISR 050B  
                ??_INT1_ISR 051B                     IVTBASEH 00045E                     IVTBASEL 00045D  
                   IVTBASEU 00045F  __end_ofi2_ESCRIBE_MENSAJE2 2AAE                     ?_strlen 0521  
        __end_ofi2_LEER_LCD 28E8                     _OSCCON1 0000AD                     i2u40_40 2BDC  
                   i2u40_41 2BD8                     i2u41_40 2AAC                     i2u41_41 2AA8  
                   i2u26_40 28E6                     i2u34_40 2B64                     i2u26_41 28E2  
                   i2u34_41 2B60                     i2u60_47 288E                     i2u61_47 2898  
                   i2u62_47 28AE                     i2u39_40 2BBE                     i2u39_41 2BBA  
                   i2u63_47 28BE                     i2u64_47 28C8                     i2u56_47 2750  
                   i2u65_47 2D96                     i2u57_47 2C5C                     i2u66_47 27D0  
                   i2u58_47 2C90                     i2u59_47 287E                  ??i2_strlen 0513  
            ??i2_POS_CURSOR 0515                ??_POS_CURSOR 0525                     __Hparam 0000  
                   __Lparam 0000        tomamuestra_ADC@canal 0525           __end_of_configuro 2AF6  
      __end_ofi2_BORRAR_LCD 2DB8                     ___lwdiv 28E8                     ___lwmod 295C  
              __psmallconst 2500       __end_of_ENVIA_LCD_CMD 2C1A           __end_of_convierte 26FC  
                   __pcinit 2D44          __end_of_POS_CURSOR 2BAC                     __ramtop 2500  
                   _centena 0533                     __ptext0 2550                     __ptext1 2D16  
                   __ptext2 2672                     __ptext3 295C                     __ptext4 28E8  
                   __ptext5 2AAE                     __ptext6 2CB6                     __ptext7 29C0  
                   __ptext8 2CE6                     __ptext9 2DA0     __end_ofi2_ENVIA_LCD_CMD 2CB6  
      __end_ofi2_ENVIA_CHAR 2C82     __end_of_tomamuestra_ADC 2D44             i2ENVIA_CHAR@aux 0513  
              _ENVIA_NIBBLE 2D68        end_of_initialization 2D5A                     strlen@a 0523  
                   strlen@s 0521           ESCRIBE_MENSAJE2@i 052A    __end_of_ESCRIBE_MENSAJE2 2A60  
              _CURSOR_ONOFF 2CE6          CURSOR_ONOFF@estado 0524        __end_ofi2_POS_CURSOR 2BE6  
          ?i2_ENVIA_LCD_CMD 0501              __end_of_strlen 2B34               ??_CURSOR_HOME 0524  
          ?_tomamuestra_ADC 0521         start_initialization 2D44                  ivt0x8_base 0008  
                 i2strlen@a 0513                   i2strlen@s 0511           ENVIA_LCD_CMD@dato 0522  
          i2POS_CURSOR@fila 0515                    ??_strlen 0523                 __pbssCOMRAM 0531  
             i2LEER_LCD@aux 0511                i2_BORRAR_LCD 2DB0          i2_ESCRIBE_MENSAJE2 2A60  
        i2ENVIA_LCD_CMD@aux 0513         __end_of_CURSOR_HOME 2DA8              i2_ENVIA_NIBBLE 2D84  
       ?i2_ESCRIBE_MENSAJE2 0515                i2_ENVIA_CHAR 2C4E            ___lwdiv@dividend 0526  
        i2ENVIA_NIBBLE@dato 0511                    ?___lwdiv 0526                    ?___lwmod 0521  
                 _configuro 2AAE        ??i2_ESCRIBE_MENSAJE2 0517                 __smallconst 2500  
                 _convierte 2672             convierte@numero 052D         i2POS_CURSOR@columna 0514  
          ___lwdiv@quotient 052A      __end_ofi2_ENVIA_NIBBLE 2DA0                    _LCD_INIT 2CB6  
                  _LEER_LCD 27FC                    _INT0_ISR 26FC                    _INT1_ISR 277C  
                  _LATAbits 0004BE                    _PIE1bits 00049F                    _PIE6bits 0004A4  
                  _PIR1bits 0004AF                    _PIR6bits 0004B4              POS_CURSOR@fila 0525  
                ?_configuro 0501                  _ADCON0bits 0003F3      ESCRIBE_MENSAJE2@cadena 0525  
                ?_convierte 052D                 _CURSOR_HOME 2DA0       i2ESCRIBE_MENSAJE2@tam 0519  
                  i2_strlen 2B34                 _INTCON0bits 0004D6                i2_POS_CURSOR 2BAC  
           ?i2_ENVIA_NIBBLE 0501                    __Hrparam 0000           ?_ESCRIBE_MENSAJE2 0525  
                  __Lrparam 0000                __Lsmallconst 2500          ??_ESCRIBE_MENSAJE2 0527  
                  __pivt0x8 0008             ___lwdiv@divisor 0528             ___lwdiv@counter 052C  
                  __ptext10 2DA8                    __ptext11 2B72                    __ptext20 2A60  
                  __ptext12 2BE6                    __ptext21 2B34                    __ptext13 2A12  
                  __ptext22 2C4E                    __ptext14 2AF6                    __ptext23 2DB0  
                  __ptext15 2C1A                    __ptext24 2C82                    __ptext16 27FC  
                  __ptext25 2872                    __ptext17 2D68                    __ptext26 2D84  
                  __ptext18 26FC                    __ptext27 277C                    __ptext19 2BAC  
                _BORRAR_LCD 2DA8                  _LCD_CONFIG 29C0                  _ENVIA_CHAR 2C1A  
                  isa$xinst 000000            i2ENVIA_CHAR@dato 0512               _ENVIA_LCD_CMD 2BE6  
               ??_configuro 0526                 ??_convierte 052F                    intlevel2 0000  
                i2_LEER_LCD 2872            ___lwmod@dividend 0521              ?_ENVIA_LCD_CMD 0501  
           ___lwmod@divisor 0523             ___lwmod@counter 0525         ESCRIBE_MENSAJE2@tam 0529  
               ?_BORRAR_LCD 0501               ?_ENVIA_NIBBLE 0501                  _POS_CURSOR 2B72  
               ?_LCD_CONFIG 0501                 ?_ENVIA_CHAR 0501           POS_CURSOR@columna 0524  
