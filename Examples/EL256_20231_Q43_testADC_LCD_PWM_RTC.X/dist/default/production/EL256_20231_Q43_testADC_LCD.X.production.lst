

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Mon May 22 01:10:10 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	18F57Q43
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
    30                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    31                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    32                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    33   000000                     
    34                           ; Generated 23/03/2023 GMT
    35                           ; 
    36                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    37                           ; All rights reserved.
    38                           ; 
    39                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    40                           ; 
    41                           ; Redistribution and use in source and binary forms, with or without modification, are
    42                           ; permitted provided that the following conditions are met:
    43                           ; 
    44                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    45                           ;        conditions and the following disclaimer.
    46                           ; 
    47                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    48                           ;        of conditions and the following disclaimer in the documentation and/or other
    49                           ;        materials provided with the distribution. Publication is not required when
    50                           ;        this file is used in an embedded application.
    51                           ; 
    52                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    53                           ;        software without specific prior written permission.
    54                           ; 
    55                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    56                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    57                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    58                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    59                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    60                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    61                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    62                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    63                           ; 
    64                           ; 
    65                           ; Code-generator required, PIC18F57Q43 Definitions
    66                           ; 
    67                           ; SFR Addresses
    68   000000                     
    69                           	psect	idataCOMRAM
    70   002C3A                     __pidataCOMRAM:
    71                           	callstack 0
    72                           
    73                           ;initializer for _minutos
    74   002C3A  0A                 	db	10
    75                           
    76                           ;initializer for _horas
    77   002C3B  01                 	db	1
    78   000000                     _LATD	set	1217
    79   000000                     _T1CON	set	798
    80   000000                     _ANSELAbits	set	1024
    81   000000                     _ANSELD	set	1048
    82   000000                     _LATDbits	set	1217
    83   000000                     _TRISAbits	set	1222
    84   000000                     _TRISD	set	1225
    85   000000                     _PORTD	set	1233
    86   000000                     _INTCON0bits	set	1238
    87   000000                     _PIE3bits	set	1185
    88   000000                     _TRISBbits	set	1223
    89   000000                     _ANSELBbits	set	1032
    90   000000                     _T1CLK	set	801
    91   000000                     _CCPR1L	set	832
    92   000000                     _CCPR1H	set	833
    93   000000                     _CCP1CON	set	834
    94   000000                     _PIR3bits	set	1201
    95   000000                     _LATBbits	set	1215
    96                           
    97                           	psect	smallconst
    98   002600                     __psmallconst:
    99                           	callstack 0
   100   002600  00                 	db	0
   101   002601                     STR_3:
   102   002601  52                 	db	82	;'R'
   103   002602  65                 	db	101	;'e'
   104   002603  6C                 	db	108	;'l'
   105   002604  6F                 	db	111	;'o'
   106   002605  6A                 	db	106	;'j'
   107   002606  69                 	db	105	;'i'
   108   002607  74                 	db	116	;'t'
   109   002608  6F                 	db	111	;'o'
   110   002609  20                 	db	32
   111   00260A  55                 	db	85	;'U'
   112   00260B  50                 	db	80	;'P'
   113   00260C  43                 	db	67	;'C'
   114   00260D  00                 	db	0
   115   00260E                     STR_2:
   116   00260E  55                 	db	85	;'U'
   117   00260F  50                 	db	80	;'P'
   118   002610  43                 	db	67	;'C'
   119   002611  20                 	db	32
   120   002612  32                 	db	50	;'2'
   121   002613  30                 	db	48	;'0'
   122   002614  32                 	db	50	;'2'
   123   002615  33                 	db	51	;'3'
   124   002616  2D                 	db	45
   125   002617  31                 	db	49	;'1'
   126   002618  00                 	db	0
   127   002619                     STR_1:
   128   002619  48                 	db	72	;'H'
   129   00261A  6F                 	db	111	;'o'
   130   00261B  6C                 	db	108	;'l'
   131   00261C  61                 	db	97	;'a'
   132   00261D  20                 	db	32
   133   00261E  6D                 	db	109	;'m'
   134   00261F  75                 	db	117	;'u'
   135   002620  6E                 	db	110	;'n'
   136   002621  64                 	db	100	;'d'
   137   002622  6F                 	db	111	;'o'
   138   002623  00                 	db	0
   139   002624  00                 	db	0	; dummy byte at the end
   140   000000                     
   141                           ; #config settings
   142                           
   143                           	psect	cinit
   144   002A64                     __pcinit:
   145                           	callstack 0
   146   002A64                     start_initialization:
   147                           	callstack 0
   148   002A64                     __initialization:
   149                           	callstack 0
   150                           
   151                           ; Initialize objects allocated to COMRAM (2 bytes)
   152                           ; load TBLPTR registers with __pidataCOMRAM
   153   002A64  0E3A               	movlw	low __pidataCOMRAM
   154   002A66  6EF6               	movwf	tblptrl,c
   155   002A68  0E2C               	movlw	high __pidataCOMRAM
   156   002A6A  6EF7               	movwf	tblptrh,c
   157   002A6C  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   158   002A6E  6EF8               	movwf	tblptru,c
   159   002A70  0009               	tblrd		*+	;fetch initializer
   160   002A72  C4F5 F517          	movff	tablat,__pdataCOMRAM
   161   002A76  0009               	tblrd		*+	;fetch initializer
   162   002A78  C4F5 F518          	movff	tablat,__pdataCOMRAM+1
   163                           
   164                           ; Clear objects allocated to COMRAM (5 bytes)
   165   002A7C  6A16               	clrf	(__pbssCOMRAM+4)& (0+255),c
   166   002A7E  6A15               	clrf	(__pbssCOMRAM+3)& (0+255),c
   167   002A80  6A14               	clrf	(__pbssCOMRAM+2)& (0+255),c
   168   002A82  6A13               	clrf	(__pbssCOMRAM+1)& (0+255),c
   169   002A84  6A12               	clrf	__pbssCOMRAM& (0+255),c
   170                           
   171                           ;
   172                           ; Setup IVTBASE
   173                           ;
   174   002A86  0104               	movlb	4
   175   002A88  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
   176   002A8A  6F5D               	movwf	93,b
   177   002A8C  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
   178   002A8E  6F5E               	movwf	94,b
   179   002A90  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
   180   002A92  6F5F               	movwf	95,b
   181   002A94                     end_of_initialization:
   182                           	callstack 0
   183   002A94                     __end_of__initialization:
   184                           	callstack 0
   185   002A94  0E00               	movlw	low (__Lsmallconst shr (0+16))
   186   002A96  6EF8               	movwf	tblptru,c
   187   002A98  0E26               	movlw	high __Lsmallconst
   188   002A9A  6EF7               	movwf	tblptrh,c
   189   002A9C  0100               	movlb	0
   190   002A9E  EF13  F013         	goto	_main	;jump to C main() function
   191                           
   192                           	psect	bssCOMRAM
   193   000512                     __pbssCOMRAM:
   194                           	callstack 0
   195   000512                     _ticks:
   196                           	callstack 0
   197   000512                     	ds	1
   198   000513                     _segundos:
   199                           	callstack 0
   200   000513                     	ds	1
   201   000514                     _unidad:
   202                           	callstack 0
   203   000514                     	ds	1
   204   000515                     _decena:
   205                           	callstack 0
   206   000515                     	ds	1
   207   000516                     _centena:
   208                           	callstack 0
   209   000516                     	ds	1
   210                           
   211                           	psect	dataCOMRAM
   212   000517                     __pdataCOMRAM:
   213                           	callstack 0
   214   000517                     _minutos:
   215                           	callstack 0
   216   000517                     	ds	1
   217   000518                     _horas:
   218                           	callstack 0
   219   000518                     	ds	1
   220                           
   221                           	psect	cstackCOMRAM
   222   000501                     __pcstackCOMRAM:
   223                           	callstack 0
   224   000501                     ?_strlen:
   225                           	callstack 0
   226   000501                     ?___awmod:
   227                           	callstack 0
   228   000501                     ENVIA_NIBBLE@dato:
   229                           	callstack 0
   230   000501                     LEER_LCD@aux:
   231                           	callstack 0
   232   000501                     ___awmod@dividend:
   233                           	callstack 0
   234   000501                     strlen@s:
   235                           	callstack 0
   236                           
   237                           ; 2 bytes @ 0x0
   238   000501                     	ds	1
   239   000502                     ENVIA_CHAR@dato:
   240                           	callstack 0
   241   000502                     ENVIA_LCD_CMD@dato:
   242                           	callstack 0
   243                           
   244                           ; 1 bytes @ 0x1
   245   000502                     	ds	1
   246   000503                     ENVIA_CHAR@aux:
   247                           	callstack 0
   248   000503                     ENVIA_LCD_CMD@aux:
   249                           	callstack 0
   250   000503                     ___awmod@divisor:
   251                           	callstack 0
   252   000503                     strlen@a:
   253                           	callstack 0
   254                           
   255                           ; 2 bytes @ 0x2
   256   000503                     	ds	1
   257   000504                     ??_LCD_CONFIG:
   258   000504                     POS_CURSOR@columna:
   259                           	callstack 0
   260   000504                     CURSOR_ONOFF@estado:
   261                           	callstack 0
   262                           
   263                           ; 1 bytes @ 0x3
   264   000504                     	ds	1
   265   000505                     ??_lcd_config:
   266   000505                     POS_CURSOR@fila:
   267                           	callstack 0
   268   000505                     ___awmod@counter:
   269                           	callstack 0
   270   000505                     ESCRIBE_MENSAJE2@cadena:
   271                           	callstack 0
   272                           
   273                           ; 2 bytes @ 0x4
   274   000505                     	ds	1
   275   000506                     ___awmod@sign:
   276                           	callstack 0
   277                           
   278                           ; 1 bytes @ 0x5
   279   000506                     	ds	1
   280   000507                     ??_ESCRIBE_MENSAJE2:
   281   000507                     ?___awdiv:
   282                           	callstack 0
   283   000507                     ___awdiv@dividend:
   284                           	callstack 0
   285                           
   286                           ; 2 bytes @ 0x6
   287   000507                     	ds	2
   288   000509                     ESCRIBE_MENSAJE2@tam:
   289                           	callstack 0
   290   000509                     ___awdiv@divisor:
   291                           	callstack 0
   292                           
   293                           ; 2 bytes @ 0x8
   294   000509                     	ds	1
   295   00050A                     ESCRIBE_MENSAJE2@i:
   296                           	callstack 0
   297                           
   298                           ; 1 bytes @ 0x9
   299   00050A                     	ds	1
   300   00050B                     ___awdiv@counter:
   301                           	callstack 0
   302                           
   303                           ; 1 bytes @ 0xA
   304   00050B                     	ds	1
   305   00050C                     ___awdiv@sign:
   306                           	callstack 0
   307                           
   308                           ; 1 bytes @ 0xB
   309   00050C                     	ds	1
   310   00050D                     ___awdiv@quotient:
   311                           	callstack 0
   312                           
   313                           ; 2 bytes @ 0xC
   314   00050D                     	ds	2
   315   00050F                     convierte@numero:
   316                           	callstack 0
   317                           
   318                           ; 1 bytes @ 0xE
   319   00050F                     	ds	1
   320   000510                     ??_main:
   321                           
   322                           ; 1 bytes @ 0xF
   323   000510                     	ds	2
   324                           
   325 ;;
   326 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   327 ;;
   328 ;; *************** function _main *****************
   329 ;; Defined at:
   330 ;;		line 45 in file "maincode2.c"
   331 ;; Parameters:    Size  Location     Type
   332 ;;		None
   333 ;; Auto vars:     Size  Location     Type
   334 ;;		None
   335 ;; Return value:  Size  Location     Type
   336 ;;                  1    wreg      void 
   337 ;; Registers used:
   338 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   339 ;; Tracked objects:
   340 ;;		On entry : 0/0
   341 ;;		On exit  : 0/0
   342 ;;		Unchanged: 0/0
   343 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   344 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   345 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   346 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   347 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   348 ;;Total ram usage:        2 bytes
   349 ;; Hardware stack levels required when called: 5
   350 ;; This function calls:
   351 ;;		_BORRAR_LCD
   352 ;;		_ENVIA_CHAR
   353 ;;		_ESCRIBE_MENSAJE2
   354 ;;		_POS_CURSOR
   355 ;;		_configuro
   356 ;;		_convierte
   357 ;;		_lcd_config
   358 ;; This function is called by:
   359 ;;		Startup code after reset
   360 ;; This function uses a non-reentrant model
   361 ;;
   362                           
   363                           	psect	text0
   364   002626                     __ptext0:
   365                           	callstack 0
   366   002626                     _main:
   367                           	callstack 122
   368   002626                     
   369                           ;maincode2.c: 46:     configuro();
   370   002626  ECF0  F015         	call	_configuro	;wreg free
   371   00262A                     
   372                           ;maincode2.c: 47:     lcd_config();
   373   00262A  ECBF  F015         	call	_lcd_config	;wreg free
   374   00262E                     
   375                           ;maincode2.c: 48:     POS_CURSOR(1,0);
   376   00262E  0E00               	movlw	0
   377   002630  6E04               	movwf	POS_CURSOR@columna^(0+1280),c
   378   002632  0E01               	movlw	1
   379   002634  EC51  F015         	call	_POS_CURSOR
   380   002638                     
   381                           ;maincode2.c: 49:     ESCRIBE_MENSAJE2("Hola mundo");
   382   002638  0E19               	movlw	low STR_1
   383   00263A  6E05               	movwf	ESCRIBE_MENSAJE2@cadena^(0+1280),c
   384   00263C  0E26               	movlw	high STR_1
   385   00263E  6E06               	movwf	(ESCRIBE_MENSAJE2@cadena+1)^(0+1280),c
   386   002640  EC0D  F015         	call	_ESCRIBE_MENSAJE2	;wreg free
   387   002644                     
   388                           ;maincode2.c: 50:     POS_CURSOR(2,0);
   389   002644  0E00               	movlw	0
   390   002646  6E04               	movwf	POS_CURSOR@columna^(0+1280),c
   391   002648  0E02               	movlw	2
   392   00264A  EC51  F015         	call	_POS_CURSOR
   393   00264E                     
   394                           ;maincode2.c: 51:     ESCRIBE_MENSAJE2("UPC 2023-1");
   395   00264E  0E0E               	movlw	low STR_2
   396   002650  6E05               	movwf	ESCRIBE_MENSAJE2@cadena^(0+1280),c
   397   002652  0E26               	movlw	high STR_2
   398   002654  6E06               	movwf	(ESCRIBE_MENSAJE2@cadena+1)^(0+1280),c
   399   002656  EC0D  F015         	call	_ESCRIBE_MENSAJE2	;wreg free
   400   00265A                     
   401                           ;maincode2.c: 52:     _delay((unsigned long)((2000)*(4000000UL/4000.0)));
   402   00265A  0E0B               	movlw	11
   403   00265C  6E11               	movwf	(??_main+1)^(0+1280),c
   404   00265E  0E26               	movlw	38
   405   002660  6E10               	movwf	??_main^(0+1280),c
   406   002662  0E5E               	movlw	94
   407   002664                     u467:
   408   002664  2EE8               	decfsz	wreg,f,c
   409   002666  D7FE               	bra	u467
   410   002668  2E10               	decfsz	??_main^(0+1280),f,c
   411   00266A  D7FC               	bra	u467
   412   00266C  2E11               	decfsz	(??_main+1)^(0+1280),f,c
   413   00266E  D7FA               	bra	u467
   414   002670                     
   415                           ;maincode2.c: 53:     BORRAR_LCD();
   416   002670  EC19  F016         	call	_BORRAR_LCD	;wreg free
   417   002674                     
   418                           ;maincode2.c: 54:     POS_CURSOR(1,2);
   419   002674  0E02               	movlw	2
   420   002676  6E04               	movwf	POS_CURSOR@columna^(0+1280),c
   421   002678  0E01               	movlw	1
   422   00267A  EC51  F015         	call	_POS_CURSOR
   423   00267E                     
   424                           ;maincode2.c: 55:     ESCRIBE_MENSAJE2("Relojito UPC");
   425   00267E  0E01               	movlw	low STR_3
   426   002680  6E05               	movwf	ESCRIBE_MENSAJE2@cadena^(0+1280),c
   427   002682  0E26               	movlw	high STR_3
   428   002684  6E06               	movwf	(ESCRIBE_MENSAJE2@cadena+1)^(0+1280),c
   429   002686  EC0D  F015         	call	_ESCRIBE_MENSAJE2	;wreg free
   430   00268A                     l1364:
   431                           
   432                           ;maincode2.c: 57:         POS_CURSOR(2,0);
   433   00268A  0E00               	movlw	0
   434   00268C  6E04               	movwf	POS_CURSOR@columna^(0+1280),c
   435   00268E  0E02               	movlw	2
   436   002690  EC51  F015         	call	_POS_CURSOR
   437   002694                     
   438                           ;maincode2.c: 58:         convierte(horas);
   439   002694  5018               	movf	_horas^(0+1280),w,c
   440   002696  ECE0  F014         	call	_convierte
   441   00269A                     
   442                           ;maincode2.c: 59:         ENVIA_CHAR(decena+0x30);
   443   00269A  5015               	movf	_decena^(0+1280),w,c
   444   00269C  0F30               	addlw	48
   445   00269E  ECA5  F015         	call	_ENVIA_CHAR
   446   0026A2                     
   447                           ;maincode2.c: 60:         ENVIA_CHAR(unidad+0x30);
   448   0026A2  5014               	movf	_unidad^(0+1280),w,c
   449   0026A4  0F30               	addlw	48
   450   0026A6  ECA5  F015         	call	_ENVIA_CHAR
   451   0026AA                     
   452                           ;maincode2.c: 61:         ENVIA_CHAR(':');
   453   0026AA  0E3A               	movlw	58
   454   0026AC  ECA5  F015         	call	_ENVIA_CHAR
   455   0026B0                     
   456                           ;maincode2.c: 62:         convierte(minutos);
   457   0026B0  5017               	movf	_minutos^(0+1280),w,c
   458   0026B2  ECE0  F014         	call	_convierte
   459   0026B6                     
   460                           ;maincode2.c: 63:         ENVIA_CHAR(decena+0x30);
   461   0026B6  5015               	movf	_decena^(0+1280),w,c
   462   0026B8  0F30               	addlw	48
   463   0026BA  ECA5  F015         	call	_ENVIA_CHAR
   464   0026BE                     
   465                           ;maincode2.c: 64:         ENVIA_CHAR(unidad+0x30);
   466   0026BE  5014               	movf	_unidad^(0+1280),w,c
   467   0026C0  0F30               	addlw	48
   468   0026C2  ECA5  F015         	call	_ENVIA_CHAR
   469   0026C6                     
   470                           ;maincode2.c: 65:         ENVIA_CHAR(':');
   471   0026C6  0E3A               	movlw	58
   472   0026C8  ECA5  F015         	call	_ENVIA_CHAR
   473   0026CC                     
   474                           ;maincode2.c: 66:         convierte(segundos);
   475   0026CC  5013               	movf	_segundos^(0+1280),w,c
   476   0026CE  ECE0  F014         	call	_convierte
   477   0026D2                     
   478                           ;maincode2.c: 67:         ENVIA_CHAR(decena+0x30);
   479   0026D2  5015               	movf	_decena^(0+1280),w,c
   480   0026D4  0F30               	addlw	48
   481   0026D6  ECA5  F015         	call	_ENVIA_CHAR
   482   0026DA                     
   483                           ;maincode2.c: 68:         ENVIA_CHAR(unidad+0x30);
   484   0026DA  5014               	movf	_unidad^(0+1280),w,c
   485   0026DC  0F30               	addlw	48
   486   0026DE  ECA5  F015         	call	_ENVIA_CHAR
   487   0026E2                     
   488                           ;maincode2.c: 69:         ENVIA_CHAR(':');
   489   0026E2  0E3A               	movlw	58
   490   0026E4  ECA5  F015         	call	_ENVIA_CHAR
   491   0026E8                     
   492                           ;maincode2.c: 70:         convierte(ticks);
   493   0026E8  5012               	movf	_ticks^(0+1280),w,c
   494   0026EA  ECE0  F014         	call	_convierte
   495   0026EE                     
   496                           ;maincode2.c: 71:         ENVIA_CHAR(decena+0x30);
   497   0026EE  5015               	movf	_decena^(0+1280),w,c
   498   0026F0  0F30               	addlw	48
   499   0026F2  ECA5  F015         	call	_ENVIA_CHAR
   500   0026F6                     
   501                           ;maincode2.c: 72:         ENVIA_CHAR(unidad+0x30);
   502   0026F6  5014               	movf	_unidad^(0+1280),w,c
   503   0026F8  0F30               	addlw	48
   504   0026FA  ECA5  F015         	call	_ENVIA_CHAR
   505   0026FE  EF45  F013         	goto	l1364
   506   002702  EF0D  F000         	goto	start
   507   002706                     __end_of_main:
   508                           	callstack 0
   509                           
   510 ;; *************** function _lcd_config *****************
   511 ;; Defined at:
   512 ;;		line 29 in file "maincode2.c"
   513 ;; Parameters:    Size  Location     Type
   514 ;;		None
   515 ;; Auto vars:     Size  Location     Type
   516 ;;		None
   517 ;; Return value:  Size  Location     Type
   518 ;;                  1    wreg      void 
   519 ;; Registers used:
   520 ;;		wreg, status,2, status,0, cstack
   521 ;; Tracked objects:
   522 ;;		On entry : 0/0
   523 ;;		On exit  : 0/0
   524 ;;		Unchanged: 0/0
   525 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   526 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   527 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   528 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   529 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   530 ;;Total ram usage:        1 bytes
   531 ;; Hardware stack levels used: 1
   532 ;; Hardware stack levels required when called: 4
   533 ;; This function calls:
   534 ;;		_BORRAR_LCD
   535 ;;		_CURSOR_HOME
   536 ;;		_CURSOR_ONOFF
   537 ;;		_LCD_CONFIG
   538 ;; This function is called by:
   539 ;;		_main
   540 ;; This function uses a non-reentrant model
   541 ;;
   542                           
   543                           	psect	text1
   544   002B7E                     __ptext1:
   545                           	callstack 0
   546   002B7E                     _lcd_config:
   547                           	callstack 122
   548   002B7E                     
   549                           ;maincode2.c: 30:     _delay((unsigned long)((15)*(4000000UL/4000.0)));
   550   002B7E  0E14               	movlw	20
   551   002B80  6E05               	movwf	??_lcd_config^(0+1280),c
   552   002B82  0E7A               	movlw	122
   553   002B84                     u477:
   554   002B84  2EE8               	decfsz	wreg,f,c
   555   002B86  D7FE               	bra	u477
   556   002B88  2E05               	decfsz	??_lcd_config^(0+1280),f,c
   557   002B8A  D7FC               	bra	u477
   558   002B8C                     
   559                           ;maincode2.c: 31:     LCD_CONFIG();
   560   002B8C  ECB0  F014         	call	_LCD_CONFIG	;wreg free
   561   002B90                     
   562                           ;maincode2.c: 32:     _delay((unsigned long)((15)*(4000000UL/4000.0)));
   563   002B90  0E14               	movlw	20
   564   002B92  6E05               	movwf	??_lcd_config^(0+1280),c
   565   002B94  0E7A               	movlw	122
   566   002B96                     u487:
   567   002B96  2EE8               	decfsz	wreg,f,c
   568   002B98  D7FE               	bra	u487
   569   002B9A  2E05               	decfsz	??_lcd_config^(0+1280),f,c
   570   002B9C  D7FC               	bra	u487
   571                           
   572                           ;maincode2.c: 33:     BORRAR_LCD();
   573   002B9E  EC19  F016         	call	_BORRAR_LCD	;wreg free
   574                           
   575                           ;maincode2.c: 34:     CURSOR_HOME();
   576   002BA2  EC15  F016         	call	_CURSOR_HOME	;wreg free
   577                           
   578                           ;maincode2.c: 35:     CURSOR_ONOFF(1);
   579   002BA6  0E01               	movlw	1
   580   002BA8  ECD8  F015         	call	_CURSOR_ONOFF
   581   002BAC                     
   582                           ;maincode2.c: 36:     LATBbits.LATB2 = 1;
   583   002BAC  84BF               	bsf	191,2,c	;volatile
   584   002BAE  0012               	return		;funcret
   585   002BB0                     __end_of_lcd_config:
   586                           	callstack 0
   587                           
   588 ;; *************** function _LCD_CONFIG *****************
   589 ;; Defined at:
   590 ;;		line 84 in file "LCD.c"
   591 ;; Parameters:    Size  Location     Type
   592 ;;		None
   593 ;; Auto vars:     Size  Location     Type
   594 ;;		None
   595 ;; Return value:  Size  Location     Type
   596 ;;                  1    wreg      void 
   597 ;; Registers used:
   598 ;;		wreg, status,2, status,0, cstack
   599 ;; Tracked objects:
   600 ;;		On entry : 0/0
   601 ;;		On exit  : 0/0
   602 ;;		Unchanged: 0/0
   603 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   604 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   605 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   606 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   607 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   608 ;;Total ram usage:        1 bytes
   609 ;; Hardware stack levels used: 1
   610 ;; Hardware stack levels required when called: 3
   611 ;; This function calls:
   612 ;;		_ENVIA_LCD_CMD
   613 ;;		_ENVIA_NIBBLE
   614 ;; This function is called by:
   615 ;;		_lcd_config
   616 ;; This function uses a non-reentrant model
   617 ;;
   618                           
   619                           	psect	text2
   620   002960                     __ptext2:
   621                           	callstack 0
   622   002960                     _LCD_CONFIG:
   623                           	callstack 122
   624   002960                     
   625                           ;LCD.c: 86:  LATDbits.LATD0 = 0;
   626   002960  90C1               	bcf	193,0,c	;volatile
   627                           
   628                           ;LCD.c: 87:  LATDbits.LATD1 = 0;
   629   002962  92C1               	bcf	193,1,c	;volatile
   630   002964                     
   631                           ;LCD.c: 88:  ENVIA_NIBBLE(0x30);
   632   002964  0E30               	movlw	48
   633   002966  EC07  F016         	call	_ENVIA_NIBBLE
   634   00296A                     
   635                           ;LCD.c: 89:         _delay(24000);
   636   00296A  0E20               	movlw	32
   637   00296C  6E04               	movwf	??_LCD_CONFIG^(0+1280),c
   638   00296E  0E2A               	movlw	42
   639   002970                     u497:
   640   002970  2EE8               	decfsz	wreg,f,c
   641   002972  D7FE               	bra	u497
   642   002974  2E04               	decfsz	??_LCD_CONFIG^(0+1280),f,c
   643   002976  D7FC               	bra	u497
   644   002978                     
   645                           ;LCD.c: 90:         _delay(24000);
   646   002978  0E20               	movlw	32
   647   00297A  6E04               	movwf	??_LCD_CONFIG^(0+1280),c
   648   00297C  0E2A               	movlw	42
   649   00297E                     u507:
   650   00297E  2EE8               	decfsz	wreg,f,c
   651   002980  D7FE               	bra	u507
   652   002982  2E04               	decfsz	??_LCD_CONFIG^(0+1280),f,c
   653   002984  D7FC               	bra	u507
   654                           
   655                           ;LCD.c: 93:  ENVIA_NIBBLE(0x30);
   656   002986  0E30               	movlw	48
   657   002988  EC07  F016         	call	_ENVIA_NIBBLE
   658   00298C                     
   659                           ;LCD.c: 95:  _delay(1200);
   660   00298C  0EF0               	movlw	240
   661   00298E                     u517:
   662   00298E  D000               	nop2	
   663   002990  2EE8               	decfsz	wreg,f,c
   664   002992  D7FD               	bra	u517
   665   002994                     
   666                           ;LCD.c: 96:         ENVIA_NIBBLE(0x30);
   667   002994  0E30               	movlw	48
   668   002996  EC07  F016         	call	_ENVIA_NIBBLE
   669   00299A                     
   670                           ;LCD.c: 97:  ENVIA_NIBBLE(0x20);
   671   00299A  0E20               	movlw	32
   672   00299C  EC07  F016         	call	_ENVIA_NIBBLE
   673   0029A0                     
   674                           ;LCD.c: 98:  ENVIA_LCD_CMD(0x01);
   675   0029A0  0E01               	movlw	1
   676   0029A2  EC8B  F015         	call	_ENVIA_LCD_CMD
   677   0029A6                     
   678                           ;LCD.c: 99:  ENVIA_LCD_CMD(0x28);
   679   0029A6  0E28               	movlw	40
   680   0029A8  EC8B  F015         	call	_ENVIA_LCD_CMD
   681   0029AC                     
   682                           ;LCD.c: 100:  ENVIA_LCD_CMD(0x0F);
   683   0029AC  0E0F               	movlw	15
   684   0029AE  EC8B  F015         	call	_ENVIA_LCD_CMD
   685   0029B2                     
   686                           ;LCD.c: 101:  ENVIA_LCD_CMD(0x06);
   687   0029B2  0E06               	movlw	6
   688   0029B4  EC8B  F015         	call	_ENVIA_LCD_CMD
   689   0029B8                     
   690                           ;LCD.c: 102:  ENVIA_LCD_CMD(0x01);
   691   0029B8  0E01               	movlw	1
   692   0029BA  EC8B  F015         	call	_ENVIA_LCD_CMD
   693   0029BE  0012               	return		;funcret
   694   0029C0                     __end_of_LCD_CONFIG:
   695                           	callstack 0
   696                           
   697 ;; *************** function _CURSOR_ONOFF *****************
   698 ;; Defined at:
   699 ;;		line 36 in file "LCD.c"
   700 ;; Parameters:    Size  Location     Type
   701 ;;  estado          1    wreg     unsigned char 
   702 ;; Auto vars:     Size  Location     Type
   703 ;;  estado          1    3[COMRAM] unsigned char 
   704 ;; Return value:  Size  Location     Type
   705 ;;                  1    wreg      void 
   706 ;; Registers used:
   707 ;;		wreg, status,2, status,0, cstack
   708 ;; Tracked objects:
   709 ;;		On entry : 0/0
   710 ;;		On exit  : 0/0
   711 ;;		Unchanged: 0/0
   712 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   713 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   714 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   715 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   716 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   717 ;;Total ram usage:        1 bytes
   718 ;; Hardware stack levels used: 1
   719 ;; Hardware stack levels required when called: 3
   720 ;; This function calls:
   721 ;;		_ENVIA_LCD_CMD
   722 ;; This function is called by:
   723 ;;		_lcd_config
   724 ;; This function uses a non-reentrant model
   725 ;;
   726                           
   727                           	psect	text3
   728   002BB0                     __ptext3:
   729                           	callstack 0
   730   002BB0                     _CURSOR_ONOFF:
   731                           	callstack 122
   732                           
   733                           ;incstack = 0
   734                           ;CURSOR_ONOFF@estado stored from wreg
   735   002BB0  6E04               	movwf	CURSOR_ONOFF@estado^(0+1280),c
   736   002BB2                     
   737                           ;LCD.c: 36: void CURSOR_ONOFF(unsigned char estado);LCD.c: 37: {;LCD.c: 38:  if(estado =
      +                          = 0) ENVIA_LCD_CMD(0x0E);
   738   002BB2  5004               	movf	CURSOR_ONOFF@estado^(0+1280),w,c
   739   002BB4  A4D8               	btfss	status,2,c
   740   002BB6  EFDF  F015         	goto	u21
   741   002BBA  EFE1  F015         	goto	u20
   742   002BBE                     u21:
   743   002BBE  EFE4  F015         	goto	l928
   744   002BC2                     u20:
   745   002BC2  0E0E               	movlw	14
   746   002BC4  EC8B  F015         	call	_ENVIA_LCD_CMD
   747   002BC8                     l928:
   748                           
   749                           ;LCD.c: 39:  if(estado == 1) ENVIA_LCD_CMD(0x0C);
   750   002BC8  0404               	decf	CURSOR_ONOFF@estado^(0+1280),w,c
   751   002BCA  A4D8               	btfss	status,2,c
   752   002BCC  EFEA  F015         	goto	u31
   753   002BD0  EFEC  F015         	goto	u30
   754   002BD4                     u31:
   755   002BD4  EFEF  F015         	goto	l44
   756   002BD8                     u30:
   757   002BD8  0E0C               	movlw	12
   758   002BDA  EC8B  F015         	call	_ENVIA_LCD_CMD
   759   002BDE                     l44:
   760   002BDE  0012               	return		;funcret
   761   002BE0                     __end_of_CURSOR_ONOFF:
   762                           	callstack 0
   763                           
   764 ;; *************** function _CURSOR_HOME *****************
   765 ;; Defined at:
   766 ;;		line 31 in file "LCD.c"
   767 ;; Parameters:    Size  Location     Type
   768 ;;		None
   769 ;; Auto vars:     Size  Location     Type
   770 ;;		None
   771 ;; Return value:  Size  Location     Type
   772 ;;                  1    wreg      void 
   773 ;; Registers used:
   774 ;;		wreg, status,2, status,0, cstack
   775 ;; Tracked objects:
   776 ;;		On entry : 0/0
   777 ;;		On exit  : 0/0
   778 ;;		Unchanged: 0/0
   779 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   780 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   781 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   782 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   783 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   784 ;;Total ram usage:        0 bytes
   785 ;; Hardware stack levels used: 1
   786 ;; Hardware stack levels required when called: 3
   787 ;; This function calls:
   788 ;;		_ENVIA_LCD_CMD
   789 ;; This function is called by:
   790 ;;		_lcd_config
   791 ;; This function uses a non-reentrant model
   792 ;;
   793                           
   794                           	psect	text4
   795   002C2A                     __ptext4:
   796                           	callstack 0
   797   002C2A                     _CURSOR_HOME:
   798                           	callstack 122
   799   002C2A                     
   800                           ;LCD.c: 33:  ENVIA_LCD_CMD(0x02);
   801   002C2A  0E02               	movlw	2
   802   002C2C  EC8B  F015         	call	_ENVIA_LCD_CMD
   803   002C30  0012               	return		;funcret
   804   002C32                     __end_of_CURSOR_HOME:
   805                           	callstack 0
   806                           
   807 ;; *************** function _BORRAR_LCD *****************
   808 ;; Defined at:
   809 ;;		line 79 in file "LCD.c"
   810 ;; Parameters:    Size  Location     Type
   811 ;;		None
   812 ;; Auto vars:     Size  Location     Type
   813 ;;		None
   814 ;; Return value:  Size  Location     Type
   815 ;;                  1    wreg      void 
   816 ;; Registers used:
   817 ;;		wreg, status,2, status,0, cstack
   818 ;; Tracked objects:
   819 ;;		On entry : 0/0
   820 ;;		On exit  : 0/0
   821 ;;		Unchanged: 0/0
   822 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   823 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   824 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   825 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   826 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   827 ;;Total ram usage:        0 bytes
   828 ;; Hardware stack levels used: 1
   829 ;; Hardware stack levels required when called: 3
   830 ;; This function calls:
   831 ;;		_ENVIA_LCD_CMD
   832 ;; This function is called by:
   833 ;;		_lcd_config
   834 ;;		_main
   835 ;; This function uses a non-reentrant model
   836 ;;
   837                           
   838                           	psect	text5
   839   002C32                     __ptext5:
   840                           	callstack 0
   841   002C32                     _BORRAR_LCD:
   842                           	callstack 122
   843   002C32                     
   844                           ;LCD.c: 81:  ENVIA_LCD_CMD(0x01);
   845   002C32  0E01               	movlw	1
   846   002C34  EC8B  F015         	call	_ENVIA_LCD_CMD
   847   002C38  0012               	return		;funcret
   848   002C3A                     __end_of_BORRAR_LCD:
   849                           	callstack 0
   850                           
   851 ;; *************** function _convierte *****************
   852 ;; Defined at:
   853 ;;		line 39 in file "maincode2.c"
   854 ;; Parameters:    Size  Location     Type
   855 ;;  numero          1    wreg     unsigned char 
   856 ;; Auto vars:     Size  Location     Type
   857 ;;  numero          1   14[COMRAM] unsigned char 
   858 ;; Return value:  Size  Location     Type
   859 ;;                  1    wreg      void 
   860 ;; Registers used:
   861 ;;		wreg, status,2, status,0, cstack
   862 ;; Tracked objects:
   863 ;;		On entry : 0/0
   864 ;;		On exit  : 0/0
   865 ;;		Unchanged: 0/0
   866 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   867 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   868 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   869 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   870 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   871 ;;Total ram usage:        1 bytes
   872 ;; Hardware stack levels used: 1
   873 ;; Hardware stack levels required when called: 2
   874 ;; This function calls:
   875 ;;		___awdiv
   876 ;;		___awmod
   877 ;; This function is called by:
   878 ;;		_main
   879 ;; This function uses a non-reentrant model
   880 ;;
   881                           
   882                           	psect	text6
   883   0029C0                     __ptext6:
   884                           	callstack 0
   885   0029C0                     _convierte:
   886                           	callstack 124
   887                           
   888                           ;incstack = 0
   889                           ;convierte@numero stored from wreg
   890   0029C0  6E0F               	movwf	convierte@numero^(0+1280),c
   891   0029C2                     
   892                           ;maincode2.c: 40:     centena = numero / 100;
   893   0029C2  C50F  F507         	movff	convierte@numero,___awdiv@dividend
   894   0029C6  6A08               	clrf	(___awdiv@dividend+1)^(0+1280),c
   895   0029C8  0E00               	movlw	0
   896   0029CA  6E0A               	movwf	(___awdiv@divisor+1)^(0+1280),c
   897   0029CC  0E64               	movlw	100
   898   0029CE  6E09               	movwf	___awdiv@divisor^(0+1280),c
   899   0029D0  EC83  F013         	call	___awdiv	;wreg free
   900   0029D4  5007               	movf	?___awdiv^(0+1280),w,c
   901   0029D6  6E16               	movwf	_centena^(0+1280),c
   902                           
   903                           ;maincode2.c: 41:     decena = (numero % 100) / 10;
   904   0029D8  0E00               	movlw	0
   905   0029DA  6E04               	movwf	(___awmod@divisor+1)^(0+1280),c
   906   0029DC  0E64               	movlw	100
   907   0029DE  6E03               	movwf	___awmod@divisor^(0+1280),c
   908   0029E0  C50F  F501         	movff	convierte@numero,___awmod@dividend
   909   0029E4  6A02               	clrf	(___awmod@dividend+1)^(0+1280),c
   910   0029E6  ECE5  F013         	call	___awmod	;wreg free
   911   0029EA  C501  F507         	movff	?___awmod,___awdiv@dividend
   912   0029EE  C502  F508         	movff	?___awmod+1,___awdiv@dividend+1
   913   0029F2  0E00               	movlw	0
   914   0029F4  6E0A               	movwf	(___awdiv@divisor+1)^(0+1280),c
   915   0029F6  0E0A               	movlw	10
   916   0029F8  6E09               	movwf	___awdiv@divisor^(0+1280),c
   917   0029FA  EC83  F013         	call	___awdiv	;wreg free
   918   0029FE  5007               	movf	?___awdiv^(0+1280),w,c
   919   002A00  6E15               	movwf	_decena^(0+1280),c
   920                           
   921                           ;maincode2.c: 42:     unidad = numero % 10;
   922   002A02  C50F  F501         	movff	convierte@numero,___awmod@dividend
   923   002A06  6A02               	clrf	(___awmod@dividend+1)^(0+1280),c
   924   002A08  0E00               	movlw	0
   925   002A0A  6E04               	movwf	(___awmod@divisor+1)^(0+1280),c
   926   002A0C  0E0A               	movlw	10
   927   002A0E  6E03               	movwf	___awmod@divisor^(0+1280),c
   928   002A10  ECE5  F013         	call	___awmod	;wreg free
   929   002A14  5001               	movf	?___awmod^(0+1280),w,c
   930   002A16  6E14               	movwf	_unidad^(0+1280),c
   931   002A18  0012               	return		;funcret
   932   002A1A                     __end_of_convierte:
   933                           	callstack 0
   934                           
   935 ;; *************** function ___awmod *****************
   936 ;; Defined at:
   937 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\awmod.c"
   938 ;; Parameters:    Size  Location     Type
   939 ;;  dividend        2    0[COMRAM] int 
   940 ;;  divisor         2    2[COMRAM] int 
   941 ;; Auto vars:     Size  Location     Type
   942 ;;  sign            1    5[COMRAM] unsigned char 
   943 ;;  counter         1    4[COMRAM] unsigned char 
   944 ;; Return value:  Size  Location     Type
   945 ;;                  2    0[COMRAM] int 
   946 ;; Registers used:
   947 ;;		wreg, status,2, status,0
   948 ;; Tracked objects:
   949 ;;		On entry : 0/0
   950 ;;		On exit  : 0/0
   951 ;;		Unchanged: 0/0
   952 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   953 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   954 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   955 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   956 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   957 ;;Total ram usage:        6 bytes
   958 ;; Hardware stack levels used: 1
   959 ;; Hardware stack levels required when called: 1
   960 ;; This function calls:
   961 ;;		Nothing
   962 ;; This function is called by:
   963 ;;		_convierte
   964 ;; This function uses a non-reentrant model
   965 ;;
   966                           
   967                           	psect	text7
   968   0027CA                     __ptext7:
   969                           	callstack 0
   970   0027CA                     ___awmod:
   971                           	callstack 124
   972   0027CA  0E00               	movlw	0
   973   0027CC  6E06               	movwf	___awmod@sign^(0+1280),c
   974   0027CE  BE02               	btfsc	(___awmod@dividend+1)^(0+1280),7,c
   975   0027D0  EFEE  F013         	goto	u370
   976   0027D4  EFEC  F013         	goto	u371
   977   0027D8                     u371:
   978   0027D8  EFF4  F013         	goto	l1294
   979   0027DC                     u370:
   980   0027DC  6C01               	negf	___awmod@dividend^(0+1280),c
   981   0027DE  1E02               	comf	(___awmod@dividend+1)^(0+1280),f,c
   982   0027E0  B0D8               	btfsc	status,0,c
   983   0027E2  2A02               	incf	(___awmod@dividend+1)^(0+1280),f,c
   984   0027E4  0E01               	movlw	1
   985   0027E6  6E06               	movwf	___awmod@sign^(0+1280),c
   986   0027E8                     l1294:
   987   0027E8  BE04               	btfsc	(___awmod@divisor+1)^(0+1280),7,c
   988   0027EA  EFFB  F013         	goto	u380
   989   0027EE  EFF9  F013         	goto	u381
   990   0027F2                     u381:
   991   0027F2  EFFF  F013         	goto	l1298
   992   0027F6                     u380:
   993   0027F6  6C03               	negf	___awmod@divisor^(0+1280),c
   994   0027F8  1E04               	comf	(___awmod@divisor+1)^(0+1280),f,c
   995   0027FA  B0D8               	btfsc	status,0,c
   996   0027FC  2A04               	incf	(___awmod@divisor+1)^(0+1280),f,c
   997   0027FE                     l1298:
   998   0027FE  5003               	movf	___awmod@divisor^(0+1280),w,c
   999   002800  1004               	iorwf	(___awmod@divisor+1)^(0+1280),w,c
  1000   002802  B4D8               	btfsc	status,2,c
  1001   002804  EF06  F014         	goto	u391
  1002   002808  EF08  F014         	goto	u390
  1003   00280C                     u391:
  1004   00280C  EF2C  F014         	goto	l1314
  1005   002810                     u390:
  1006   002810  0E01               	movlw	1
  1007   002812  6E05               	movwf	___awmod@counter^(0+1280),c
  1008   002814  EF10  F014         	goto	l1304
  1009   002818                     l1302:
  1010   002818  90D8               	bcf	status,0,c
  1011   00281A  3603               	rlcf	___awmod@divisor^(0+1280),f,c
  1012   00281C  3604               	rlcf	(___awmod@divisor+1)^(0+1280),f,c
  1013   00281E  2A05               	incf	___awmod@counter^(0+1280),f,c
  1014   002820                     l1304:
  1015   002820  AE04               	btfss	(___awmod@divisor+1)^(0+1280),7,c
  1016   002822  EF15  F014         	goto	u401
  1017   002826  EF17  F014         	goto	u400
  1018   00282A                     u401:
  1019   00282A  EF0C  F014         	goto	l1302
  1020   00282E                     u400:
  1021   00282E                     l1306:
  1022   00282E  5003               	movf	___awmod@divisor^(0+1280),w,c
  1023   002830  5C01               	subwf	___awmod@dividend^(0+1280),w,c
  1024   002832  5004               	movf	(___awmod@divisor+1)^(0+1280),w,c
  1025   002834  5802               	subwfb	(___awmod@dividend+1)^(0+1280),w,c
  1026   002836  A0D8               	btfss	status,0,c
  1027   002838  EF20  F014         	goto	u411
  1028   00283C  EF22  F014         	goto	u410
  1029   002840                     u411:
  1030   002840  EF26  F014         	goto	l1310
  1031   002844                     u410:
  1032   002844  5003               	movf	___awmod@divisor^(0+1280),w,c
  1033   002846  5E01               	subwf	___awmod@dividend^(0+1280),f,c
  1034   002848  5004               	movf	(___awmod@divisor+1)^(0+1280),w,c
  1035   00284A  5A02               	subwfb	(___awmod@dividend+1)^(0+1280),f,c
  1036   00284C                     l1310:
  1037   00284C  90D8               	bcf	status,0,c
  1038   00284E  3204               	rrcf	(___awmod@divisor+1)^(0+1280),f,c
  1039   002850  3203               	rrcf	___awmod@divisor^(0+1280),f,c
  1040   002852  2E05               	decfsz	___awmod@counter^(0+1280),f,c
  1041   002854  EF17  F014         	goto	l1306
  1042   002858                     l1314:
  1043   002858  5006               	movf	___awmod@sign^(0+1280),w,c
  1044   00285A  B4D8               	btfsc	status,2,c
  1045   00285C  EF32  F014         	goto	u421
  1046   002860  EF34  F014         	goto	u420
  1047   002864                     u421:
  1048   002864  EF38  F014         	goto	l1318
  1049   002868                     u420:
  1050   002868  6C01               	negf	___awmod@dividend^(0+1280),c
  1051   00286A  1E02               	comf	(___awmod@dividend+1)^(0+1280),f,c
  1052   00286C  B0D8               	btfsc	status,0,c
  1053   00286E  2A02               	incf	(___awmod@dividend+1)^(0+1280),f,c
  1054   002870                     l1318:
  1055   002870  C501  F501         	movff	___awmod@dividend,?___awmod
  1056   002874  C502  F502         	movff	___awmod@dividend+1,?___awmod+1
  1057   002878  0012               	return		;funcret
  1058   00287A                     __end_of___awmod:
  1059                           	callstack 0
  1060                           
  1061 ;; *************** function ___awdiv *****************
  1062 ;; Defined at:
  1063 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\awdiv.c"
  1064 ;; Parameters:    Size  Location     Type
  1065 ;;  dividend        2    6[COMRAM] int 
  1066 ;;  divisor         2    8[COMRAM] int 
  1067 ;; Auto vars:     Size  Location     Type
  1068 ;;  quotient        2   12[COMRAM] int 
  1069 ;;  sign            1   11[COMRAM] unsigned char 
  1070 ;;  counter         1   10[COMRAM] unsigned char 
  1071 ;; Return value:  Size  Location     Type
  1072 ;;                  2    6[COMRAM] int 
  1073 ;; Registers used:
  1074 ;;		wreg, status,2, status,0
  1075 ;; Tracked objects:
  1076 ;;		On entry : 0/0
  1077 ;;		On exit  : 0/0
  1078 ;;		Unchanged: 0/0
  1079 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1080 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1081 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1082 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1083 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1084 ;;Total ram usage:        8 bytes
  1085 ;; Hardware stack levels used: 1
  1086 ;; Hardware stack levels required when called: 1
  1087 ;; This function calls:
  1088 ;;		Nothing
  1089 ;; This function is called by:
  1090 ;;		_convierte
  1091 ;; This function uses a non-reentrant model
  1092 ;;
  1093                           
  1094                           	psect	text8
  1095   002706                     __ptext8:
  1096                           	callstack 0
  1097   002706                     ___awdiv:
  1098                           	callstack 124
  1099   002706  0E00               	movlw	0
  1100   002708  6E0C               	movwf	___awdiv@sign^(0+1280),c
  1101   00270A  BE0A               	btfsc	(___awdiv@divisor+1)^(0+1280),7,c
  1102   00270C  EF8C  F013         	goto	u310
  1103   002710  EF8A  F013         	goto	u311
  1104   002714                     u311:
  1105   002714  EF92  F013         	goto	l1250
  1106   002718                     u310:
  1107   002718  6C09               	negf	___awdiv@divisor^(0+1280),c
  1108   00271A  1E0A               	comf	(___awdiv@divisor+1)^(0+1280),f,c
  1109   00271C  B0D8               	btfsc	status,0,c
  1110   00271E  2A0A               	incf	(___awdiv@divisor+1)^(0+1280),f,c
  1111   002720  0E01               	movlw	1
  1112   002722  6E0C               	movwf	___awdiv@sign^(0+1280),c
  1113   002724                     l1250:
  1114   002724  BE08               	btfsc	(___awdiv@dividend+1)^(0+1280),7,c
  1115   002726  EF99  F013         	goto	u320
  1116   00272A  EF97  F013         	goto	u321
  1117   00272E                     u321:
  1118   00272E  EF9F  F013         	goto	l1256
  1119   002732                     u320:
  1120   002732  6C07               	negf	___awdiv@dividend^(0+1280),c
  1121   002734  1E08               	comf	(___awdiv@dividend+1)^(0+1280),f,c
  1122   002736  B0D8               	btfsc	status,0,c
  1123   002738  2A08               	incf	(___awdiv@dividend+1)^(0+1280),f,c
  1124   00273A  0E01               	movlw	1
  1125   00273C  1A0C               	xorwf	___awdiv@sign^(0+1280),f,c
  1126   00273E                     l1256:
  1127   00273E  0E00               	movlw	0
  1128   002740  6E0E               	movwf	(___awdiv@quotient+1)^(0+1280),c
  1129   002742  0E00               	movlw	0
  1130   002744  6E0D               	movwf	___awdiv@quotient^(0+1280),c
  1131   002746  5009               	movf	___awdiv@divisor^(0+1280),w,c
  1132   002748  100A               	iorwf	(___awdiv@divisor+1)^(0+1280),w,c
  1133   00274A  B4D8               	btfsc	status,2,c
  1134   00274C  EFAA  F013         	goto	u331
  1135   002750  EFAC  F013         	goto	u330
  1136   002754                     u331:
  1137   002754  EFD4  F013         	goto	l1278
  1138   002758                     u330:
  1139   002758  0E01               	movlw	1
  1140   00275A  6E0B               	movwf	___awdiv@counter^(0+1280),c
  1141   00275C  EFB4  F013         	goto	l1264
  1142   002760                     l1262:
  1143   002760  90D8               	bcf	status,0,c
  1144   002762  3609               	rlcf	___awdiv@divisor^(0+1280),f,c
  1145   002764  360A               	rlcf	(___awdiv@divisor+1)^(0+1280),f,c
  1146   002766  2A0B               	incf	___awdiv@counter^(0+1280),f,c
  1147   002768                     l1264:
  1148   002768  AE0A               	btfss	(___awdiv@divisor+1)^(0+1280),7,c
  1149   00276A  EFB9  F013         	goto	u341
  1150   00276E  EFBB  F013         	goto	u340
  1151   002772                     u341:
  1152   002772  EFB0  F013         	goto	l1262
  1153   002776                     u340:
  1154   002776                     l1266:
  1155   002776  90D8               	bcf	status,0,c
  1156   002778  360D               	rlcf	___awdiv@quotient^(0+1280),f,c
  1157   00277A  360E               	rlcf	(___awdiv@quotient+1)^(0+1280),f,c
  1158   00277C  5009               	movf	___awdiv@divisor^(0+1280),w,c
  1159   00277E  5C07               	subwf	___awdiv@dividend^(0+1280),w,c
  1160   002780  500A               	movf	(___awdiv@divisor+1)^(0+1280),w,c
  1161   002782  5808               	subwfb	(___awdiv@dividend+1)^(0+1280),w,c
  1162   002784  A0D8               	btfss	status,0,c
  1163   002786  EFC7  F013         	goto	u351
  1164   00278A  EFC9  F013         	goto	u350
  1165   00278E                     u351:
  1166   00278E  EFCE  F013         	goto	l1274
  1167   002792                     u350:
  1168   002792  5009               	movf	___awdiv@divisor^(0+1280),w,c
  1169   002794  5E07               	subwf	___awdiv@dividend^(0+1280),f,c
  1170   002796  500A               	movf	(___awdiv@divisor+1)^(0+1280),w,c
  1171   002798  5A08               	subwfb	(___awdiv@dividend+1)^(0+1280),f,c
  1172   00279A  800D               	bsf	___awdiv@quotient^(0+1280),0,c
  1173   00279C                     l1274:
  1174   00279C  90D8               	bcf	status,0,c
  1175   00279E  320A               	rrcf	(___awdiv@divisor+1)^(0+1280),f,c
  1176   0027A0  3209               	rrcf	___awdiv@divisor^(0+1280),f,c
  1177   0027A2  2E0B               	decfsz	___awdiv@counter^(0+1280),f,c
  1178   0027A4  EFBB  F013         	goto	l1266
  1179   0027A8                     l1278:
  1180   0027A8  500C               	movf	___awdiv@sign^(0+1280),w,c
  1181   0027AA  B4D8               	btfsc	status,2,c
  1182   0027AC  EFDA  F013         	goto	u361
  1183   0027B0  EFDC  F013         	goto	u360
  1184   0027B4                     u361:
  1185   0027B4  EFE0  F013         	goto	l1282
  1186   0027B8                     u360:
  1187   0027B8  6C0D               	negf	___awdiv@quotient^(0+1280),c
  1188   0027BA  1E0E               	comf	(___awdiv@quotient+1)^(0+1280),f,c
  1189   0027BC  B0D8               	btfsc	status,0,c
  1190   0027BE  2A0E               	incf	(___awdiv@quotient+1)^(0+1280),f,c
  1191   0027C0                     l1282:
  1192   0027C0  C50D  F507         	movff	___awdiv@quotient,?___awdiv
  1193   0027C4  C50E  F508         	movff	___awdiv@quotient+1,?___awdiv+1
  1194   0027C8  0012               	return		;funcret
  1195   0027CA                     __end_of___awdiv:
  1196                           	callstack 0
  1197                           
  1198 ;; *************** function _configuro *****************
  1199 ;; Defined at:
  1200 ;;		line 10 in file "maincode2.c"
  1201 ;; Parameters:    Size  Location     Type
  1202 ;;		None
  1203 ;; Auto vars:     Size  Location     Type
  1204 ;;		None
  1205 ;; Return value:  Size  Location     Type
  1206 ;;                  1    wreg      void 
  1207 ;; Registers used:
  1208 ;;		wreg, status,2
  1209 ;; Tracked objects:
  1210 ;;		On entry : 0/0
  1211 ;;		On exit  : 0/0
  1212 ;;		Unchanged: 0/0
  1213 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1214 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1215 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1216 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1217 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1218 ;;Total ram usage:        0 bytes
  1219 ;; Hardware stack levels used: 1
  1220 ;; Hardware stack levels required when called: 1
  1221 ;; This function calls:
  1222 ;;		Nothing
  1223 ;; This function is called by:
  1224 ;;		_main
  1225 ;; This function uses a non-reentrant model
  1226 ;;
  1227                           
  1228                           	psect	text9
  1229   002BE0                     __ptext9:
  1230                           	callstack 0
  1231   002BE0                     _configuro:
  1232                           	callstack 125
  1233   002BE0                     
  1234                           ;maincode2.c: 11:     TRISD = 0x00;
  1235   002BE0  0E00               	movlw	0
  1236   002BE2  6EC9               	movwf	201,c	;volatile
  1237                           
  1238                           ;maincode2.c: 12:     ANSELD = 0x00;
  1239   002BE4  0E00               	movlw	0
  1240   002BE6  0104               	movlb	4	; () banked
  1241   002BE8  6F18               	movwf	24,b	;volatile
  1242   002BEA                     
  1243                           ; BSR set to: 4
  1244                           ;maincode2.c: 13:     TRISAbits.TRISA0 = 1;
  1245   002BEA  80C6               	bsf	198,0,c	;volatile
  1246   002BEC                     
  1247                           ; BSR set to: 4
  1248                           ;maincode2.c: 14:     ANSELAbits.ANSELA0 = 1;
  1249   002BEC  8100               	bsf	0,0,b	;volatile
  1250   002BEE                     
  1251                           ; BSR set to: 4
  1252                           ;maincode2.c: 15:     TRISBbits.TRISB2 = 0;
  1253   002BEE  94C7               	bcf	199,2,c	;volatile
  1254   002BF0                     
  1255                           ; BSR set to: 4
  1256                           ;maincode2.c: 16:     ANSELBbits.ANSELB2 = 0;
  1257   002BF0  9508               	bcf	8,2,b	;volatile
  1258                           
  1259                           ;maincode2.c: 18:     T1CON = 0x01;
  1260   002BF2  0E01               	movlw	1
  1261   002BF4  0103               	movlb	3	; () banked
  1262   002BF6  6F1E               	movwf	30,b	;volatile
  1263                           
  1264                           ;maincode2.c: 19:     T1CLK = 0x01;
  1265   002BF8  0E01               	movlw	1
  1266   002BFA  6F21               	movwf	33,b	;volatile
  1267                           
  1268                           ;maincode2.c: 21:     CCP1CON = 0x8B;
  1269   002BFC  0E8B               	movlw	139
  1270   002BFE  6F42               	movwf	66,b	;volatile
  1271                           
  1272                           ;maincode2.c: 22:     CCPR1H = 0x27;
  1273   002C00  0E27               	movlw	39
  1274   002C02  6F41               	movwf	65,b	;volatile
  1275                           
  1276                           ;maincode2.c: 23:     CCPR1L = 0x10;
  1277   002C04  0E10               	movlw	16
  1278   002C06  6F40               	movwf	64,b	;volatile
  1279   002C08                     
  1280                           ; BSR set to: 3
  1281                           ;maincode2.c: 25:     INTCON0bits.GIE = 1;
  1282   002C08  8ED6               	bsf	214,7,c	;volatile
  1283   002C0A                     
  1284                           ; BSR set to: 3
  1285                           ;maincode2.c: 26:     PIE3bits.CCP1IE = 1;
  1286   002C0A  8CA1               	bsf	161,6,c	;volatile
  1287   002C0C                     
  1288                           ; BSR set to: 3
  1289   002C0C  0012               	return		;funcret
  1290   002C0E                     __end_of_configuro:
  1291                           	callstack 0
  1292                           
  1293 ;; *************** function _POS_CURSOR *****************
  1294 ;; Defined at:
  1295 ;;		line 7 in file "LCD.c"
  1296 ;; Parameters:    Size  Location     Type
  1297 ;;  fila            1    wreg     unsigned char 
  1298 ;;  columna         1    3[COMRAM] unsigned char 
  1299 ;; Auto vars:     Size  Location     Type
  1300 ;;  fila            1    4[COMRAM] unsigned char 
  1301 ;; Return value:  Size  Location     Type
  1302 ;;                  1    wreg      void 
  1303 ;; Registers used:
  1304 ;;		wreg, status,2, status,0, cstack
  1305 ;; Tracked objects:
  1306 ;;		On entry : 0/0
  1307 ;;		On exit  : 0/0
  1308 ;;		Unchanged: 0/0
  1309 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1310 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1311 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1312 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1313 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1314 ;;Total ram usage:        2 bytes
  1315 ;; Hardware stack levels used: 1
  1316 ;; Hardware stack levels required when called: 3
  1317 ;; This function calls:
  1318 ;;		_ENVIA_LCD_CMD
  1319 ;; This function is called by:
  1320 ;;		_main
  1321 ;; This function uses a non-reentrant model
  1322 ;;
  1323                           
  1324                           	psect	text10
  1325   002AA2                     __ptext10:
  1326                           	callstack 0
  1327   002AA2                     _POS_CURSOR:
  1328                           	callstack 123
  1329                           
  1330                           ; BSR set to: 3
  1331                           ;incstack = 0
  1332                           ;POS_CURSOR@fila stored from wreg
  1333   002AA2  6E05               	movwf	POS_CURSOR@fila^(0+1280),c
  1334   002AA4                     
  1335                           ;LCD.c: 7: void POS_CURSOR(unsigned char fila,unsigned char columna);LCD.c: 8: {;LCD.c: 
      +                          9:  if(fila == 1)
  1336   002AA4  0405               	decf	POS_CURSOR@fila^(0+1280),w,c
  1337   002AA6  A4D8               	btfss	status,2,c
  1338   002AA8  EF58  F015         	goto	u431
  1339   002AAC  EF5A  F015         	goto	u430
  1340   002AB0                     u431:
  1341   002AB0  EF60  F015         	goto	l1326
  1342   002AB4                     u430:
  1343   002AB4                     
  1344                           ;LCD.c: 10:  {;LCD.c: 11:   ENVIA_LCD_CMD(0x80+columna);
  1345   002AB4  5004               	movf	POS_CURSOR@columna^(0+1280),w,c
  1346   002AB6  0F80               	addlw	128
  1347   002AB8  EC8B  F015         	call	_ENVIA_LCD_CMD
  1348                           
  1349                           ;LCD.c: 12:  }
  1350   002ABC  EF6D  F015         	goto	l26
  1351   002AC0                     l1326:
  1352   002AC0  0E02               	movlw	2
  1353   002AC2  1805               	xorwf	POS_CURSOR@fila^(0+1280),w,c
  1354   002AC4  A4D8               	btfss	status,2,c
  1355   002AC6  EF67  F015         	goto	u441
  1356   002ACA  EF69  F015         	goto	u440
  1357   002ACE                     u441:
  1358   002ACE  EF6D  F015         	goto	l26
  1359   002AD2                     u440:
  1360   002AD2                     
  1361                           ;LCD.c: 14:  {;LCD.c: 15:   ENVIA_LCD_CMD(0xC0+columna);
  1362   002AD2  5004               	movf	POS_CURSOR@columna^(0+1280),w,c
  1363   002AD4  0FC0               	addlw	192
  1364   002AD6  EC8B  F015         	call	_ENVIA_LCD_CMD
  1365   002ADA                     l26:
  1366   002ADA  0012               	return		;funcret
  1367   002ADC                     __end_of_POS_CURSOR:
  1368                           	callstack 0
  1369                           
  1370 ;; *************** function _ENVIA_LCD_CMD *****************
  1371 ;; Defined at:
  1372 ;;		line 116 in file "LCD.c"
  1373 ;; Parameters:    Size  Location     Type
  1374 ;;  dato            1    wreg     unsigned char 
  1375 ;; Auto vars:     Size  Location     Type
  1376 ;;  dato            1    1[COMRAM] unsigned char 
  1377 ;;  aux             1    2[COMRAM] unsigned char 
  1378 ;; Return value:  Size  Location     Type
  1379 ;;                  1    wreg      void 
  1380 ;; Registers used:
  1381 ;;		wreg, status,2, status,0, cstack
  1382 ;; Tracked objects:
  1383 ;;		On entry : 0/0
  1384 ;;		On exit  : 0/0
  1385 ;;		Unchanged: 0/0
  1386 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1387 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1388 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1389 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1390 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1391 ;;Total ram usage:        2 bytes
  1392 ;; Hardware stack levels used: 1
  1393 ;; Hardware stack levels required when called: 2
  1394 ;; This function calls:
  1395 ;;		_ENVIA_NIBBLE
  1396 ;;		_LEER_LCD
  1397 ;; This function is called by:
  1398 ;;		_POS_CURSOR
  1399 ;;		_CURSOR_HOME
  1400 ;;		_CURSOR_ONOFF
  1401 ;;		_BORRAR_LCD
  1402 ;;		_LCD_CONFIG
  1403 ;;		_BLINK_CURSOR
  1404 ;;		_DISPLAY_ONOFF
  1405 ;;		_GENERACARACTER
  1406 ;; This function uses a non-reentrant model
  1407 ;;
  1408                           
  1409                           	psect	text11
  1410   002B16                     __ptext11:
  1411                           	callstack 0
  1412   002B16                     _ENVIA_LCD_CMD:
  1413                           	callstack 122
  1414                           
  1415                           ;incstack = 0
  1416                           ;ENVIA_LCD_CMD@dato stored from wreg
  1417   002B16  6E02               	movwf	ENVIA_LCD_CMD@dato^(0+1280),c
  1418   002B18                     
  1419                           ;LCD.c: 116: void ENVIA_LCD_CMD(unsigned char dato);LCD.c: 117: {;LCD.c: 118:  unsigned 
      +                          char aux;;LCD.c: 119:  LATDbits.LATD0 = 0;
  1420   002B18  90C1               	bcf	193,0,c	;volatile
  1421   002B1A                     
  1422                           ;LCD.c: 120:  LEER_LCD();
  1423   002B1A  EC77  F014         	call	_LEER_LCD	;wreg free
  1424   002B1E                     
  1425                           ;LCD.c: 121:  TRISD = 0b00000000;
  1426   002B1E  0E00               	movlw	0
  1427   002B20  6EC9               	movwf	201,c	;volatile
  1428   002B22                     
  1429                           ;LCD.c: 123:         _delay(1200);
  1430   002B22  0EF0               	movlw	240
  1431   002B24                     u527:
  1432   002B24  D000               	nop2	
  1433   002B26  2EE8               	decfsz	wreg,f,c
  1434   002B28  D7FD               	bra	u527
  1435   002B2A                     
  1436                           ;LCD.c: 124:         LATDbits.LATD1 = 0;
  1437   002B2A  92C1               	bcf	193,1,c	;volatile
  1438   002B2C                     
  1439                           ;LCD.c: 125:  LATDbits.LATD2 = 0;
  1440   002B2C  94C1               	bcf	193,2,c	;volatile
  1441   002B2E                     
  1442                           ;LCD.c: 126:  LATDbits.LATD0 = 0;
  1443   002B2E  90C1               	bcf	193,0,c	;volatile
  1444   002B30                     
  1445                           ;LCD.c: 127:  aux = dato & 0xF0;
  1446   002B30  5002               	movf	ENVIA_LCD_CMD@dato^(0+1280),w,c
  1447   002B32  0BF0               	andlw	240
  1448   002B34  6E03               	movwf	ENVIA_LCD_CMD@aux^(0+1280),c
  1449   002B36                     
  1450                           ;LCD.c: 128:  ENVIA_NIBBLE(aux);
  1451   002B36  5003               	movf	ENVIA_LCD_CMD@aux^(0+1280),w,c
  1452   002B38  EC07  F016         	call	_ENVIA_NIBBLE
  1453   002B3C                     
  1454                           ;LCD.c: 129:  aux = dato<<4;
  1455   002B3C  3802               	swapf	ENVIA_LCD_CMD@dato^(0+1280),w,c
  1456   002B3E  0BF0               	andlw	240
  1457   002B40  6E03               	movwf	ENVIA_LCD_CMD@aux^(0+1280),c
  1458   002B42                     
  1459                           ;LCD.c: 130:  ENVIA_NIBBLE(aux);
  1460   002B42  5003               	movf	ENVIA_LCD_CMD@aux^(0+1280),w,c
  1461   002B44  EC07  F016         	call	_ENVIA_NIBBLE
  1462   002B48  0012               	return		;funcret
  1463   002B4A                     __end_of_ENVIA_LCD_CMD:
  1464                           	callstack 0
  1465                           
  1466 ;; *************** function _ESCRIBE_MENSAJE2 *****************
  1467 ;; Defined at:
  1468 ;;		line 51 in file "LCD.c"
  1469 ;; Parameters:    Size  Location     Type
  1470 ;;  cadena          2    4[COMRAM] PTR const unsigned char 
  1471 ;;		 -> STR_3(13), STR_2(11), STR_1(11), 
  1472 ;; Auto vars:     Size  Location     Type
  1473 ;;  i               1    9[COMRAM] unsigned char 
  1474 ;;  tam             1    8[COMRAM] unsigned char 
  1475 ;; Return value:  Size  Location     Type
  1476 ;;                  1    wreg      void 
  1477 ;; Registers used:
  1478 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1479 ;; Tracked objects:
  1480 ;;		On entry : 0/0
  1481 ;;		On exit  : 0/0
  1482 ;;		Unchanged: 0/0
  1483 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1484 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1485 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1486 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1487 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1488 ;;Total ram usage:        6 bytes
  1489 ;; Hardware stack levels used: 1
  1490 ;; Hardware stack levels required when called: 3
  1491 ;; This function calls:
  1492 ;;		_ENVIA_CHAR
  1493 ;;		_strlen
  1494 ;; This function is called by:
  1495 ;;		_main
  1496 ;; This function uses a non-reentrant model
  1497 ;;
  1498                           
  1499                           	psect	text12
  1500   002A1A                     __ptext12:
  1501                           	callstack 0
  1502   002A1A                     _ESCRIBE_MENSAJE2:
  1503                           	callstack 123
  1504   002A1A                     
  1505                           ;LCD.c: 51: void ESCRIBE_MENSAJE2(const char *cadena);LCD.c: 52: {;LCD.c: 53:     unsign
      +                          ed char tam;;LCD.c: 54:     tam = strlen(cadena);
  1506   002A1A  C505  F501         	movff	ESCRIBE_MENSAJE2@cadena,strlen@s
  1507   002A1E  C506  F502         	movff	ESCRIBE_MENSAJE2@cadena+1,strlen@s+1
  1508   002A22  EC6E  F015         	call	_strlen	;wreg free
  1509   002A26  5001               	movf	?_strlen^(0+1280),w,c
  1510   002A28  6E09               	movwf	ESCRIBE_MENSAJE2@tam^(0+1280),c
  1511   002A2A                     
  1512                           ;LCD.c: 56:  for(i = 0; i<tam; i++)
  1513   002A2A  0E00               	movlw	0
  1514   002A2C  6E0A               	movwf	ESCRIBE_MENSAJE2@i^(0+1280),c
  1515   002A2E  EF28  F015         	goto	l1340
  1516   002A32                     l1336:
  1517                           
  1518                           ;LCD.c: 57:  {;LCD.c: 58:   ENVIA_CHAR(cadena[i]);
  1519   002A32  500A               	movf	ESCRIBE_MENSAJE2@i^(0+1280),w,c
  1520   002A34  2405               	addwf	ESCRIBE_MENSAJE2@cadena^(0+1280),w,c
  1521   002A36  6E07               	movwf	??_ESCRIBE_MENSAJE2^(0+1280),c
  1522   002A38  0E00               	movlw	0
  1523   002A3A  2006               	addwfc	(ESCRIBE_MENSAJE2@cadena+1)^(0+1280),w,c
  1524   002A3C  6E08               	movwf	(??_ESCRIBE_MENSAJE2+1)^(0+1280),c
  1525   002A3E  C507  F4F6         	movff	??_ESCRIBE_MENSAJE2,tblptrl
  1526   002A42  C508  F4F7         	movff	??_ESCRIBE_MENSAJE2+1,tblptrh
  1527   002A46                     	if	0	;tblptru may be non-zero
  1528   002A46                     	endif
  1529   002A46                     	if	0	;tblptru may be non-zero
  1530   002A46                     	endif
  1531   002A46  0008               	tblrd		*
  1532   002A48  50F5               	movf	tablat,w,c
  1533   002A4A  ECA5  F015         	call	_ENVIA_CHAR
  1534   002A4E                     
  1535                           ;LCD.c: 59:  }
  1536   002A4E  2A0A               	incf	ESCRIBE_MENSAJE2@i^(0+1280),f,c
  1537   002A50                     l1340:
  1538   002A50  5009               	movf	ESCRIBE_MENSAJE2@tam^(0+1280),w,c
  1539   002A52  5C0A               	subwf	ESCRIBE_MENSAJE2@i^(0+1280),w,c
  1540   002A54  A0D8               	btfss	status,0,c
  1541   002A56  EF2F  F015         	goto	u451
  1542   002A5A  EF31  F015         	goto	u450
  1543   002A5E                     u451:
  1544   002A5E  EF19  F015         	goto	l1336
  1545   002A62                     u450:
  1546   002A62  0012               	return		;funcret
  1547   002A64                     __end_of_ESCRIBE_MENSAJE2:
  1548                           	callstack 0
  1549                           
  1550 ;; *************** function _strlen *****************
  1551 ;; Defined at:
  1552 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\strlen.c"
  1553 ;; Parameters:    Size  Location     Type
  1554 ;;  s               2    0[COMRAM] PTR const unsigned char 
  1555 ;;		 -> STR_3(13), STR_2(11), STR_1(11), 
  1556 ;; Auto vars:     Size  Location     Type
  1557 ;;  a               2    2[COMRAM] PTR const unsigned char 
  1558 ;;		 -> STR_3(13), STR_2(11), STR_1(11), 
  1559 ;; Return value:  Size  Location     Type
  1560 ;;                  2    0[COMRAM] unsigned int 
  1561 ;; Registers used:
  1562 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  1563 ;; Tracked objects:
  1564 ;;		On entry : 0/0
  1565 ;;		On exit  : 0/0
  1566 ;;		Unchanged: 0/0
  1567 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1568 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1569 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1570 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1571 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1572 ;;Total ram usage:        4 bytes
  1573 ;; Hardware stack levels used: 1
  1574 ;; Hardware stack levels required when called: 1
  1575 ;; This function calls:
  1576 ;;		Nothing
  1577 ;; This function is called by:
  1578 ;;		_ESCRIBE_MENSAJE2
  1579 ;; This function uses a non-reentrant model
  1580 ;;
  1581                           
  1582                           	psect	text13
  1583   002ADC                     __ptext13:
  1584                           	callstack 0
  1585   002ADC                     _strlen:
  1586                           	callstack 124
  1587   002ADC  C501  F503         	movff	strlen@s,strlen@a
  1588   002AE0  C502  F504         	movff	strlen@s+1,strlen@a+1
  1589   002AE4  EF76  F015         	goto	l1236
  1590   002AE8                     l1234:
  1591   002AE8  4A01               	infsnz	strlen@s^(0+1280),f,c
  1592   002AEA  2A02               	incf	(strlen@s+1)^(0+1280),f,c
  1593   002AEC                     l1236:
  1594   002AEC  C501  F4F6         	movff	strlen@s,tblptrl
  1595   002AF0  C502  F4F7         	movff	strlen@s+1,tblptrh
  1596   002AF4                     	if	0	;tblptru may be non-zero
  1597   002AF4                     	endif
  1598   002AF4                     	if	0	;tblptru may be non-zero
  1599   002AF4                     	endif
  1600   002AF4  0008               	tblrd		*
  1601   002AF6  50F5               	movf	tablat,w,c
  1602   002AF8  0900               	iorlw	0
  1603   002AFA  A4D8               	btfss	status,2,c
  1604   002AFC  EF82  F015         	goto	u301
  1605   002B00  EF84  F015         	goto	u300
  1606   002B04                     u301:
  1607   002B04  EF74  F015         	goto	l1234
  1608   002B08                     u300:
  1609   002B08  5003               	movf	strlen@a^(0+1280),w,c
  1610   002B0A  5C01               	subwf	strlen@s^(0+1280),w,c
  1611   002B0C  6E01               	movwf	?_strlen^(0+1280),c
  1612   002B0E  5004               	movf	(strlen@a+1)^(0+1280),w,c
  1613   002B10  5802               	subwfb	(strlen@s+1)^(0+1280),w,c
  1614   002B12  6E02               	movwf	(?_strlen+1)^(0+1280),c
  1615   002B14  0012               	return		;funcret
  1616   002B16                     __end_of_strlen:
  1617                           	callstack 0
  1618                           
  1619 ;; *************** function _ENVIA_CHAR *****************
  1620 ;; Defined at:
  1621 ;;		line 62 in file "LCD.c"
  1622 ;; Parameters:    Size  Location     Type
  1623 ;;  dato            1    wreg     unsigned char 
  1624 ;; Auto vars:     Size  Location     Type
  1625 ;;  dato            1    1[COMRAM] unsigned char 
  1626 ;;  aux             1    2[COMRAM] unsigned char 
  1627 ;; Return value:  Size  Location     Type
  1628 ;;                  1    wreg      void 
  1629 ;; Registers used:
  1630 ;;		wreg, status,2, status,0, cstack
  1631 ;; Tracked objects:
  1632 ;;		On entry : 0/0
  1633 ;;		On exit  : 0/0
  1634 ;;		Unchanged: 0/0
  1635 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1636 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1637 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1638 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1639 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1640 ;;Total ram usage:        2 bytes
  1641 ;; Hardware stack levels used: 1
  1642 ;; Hardware stack levels required when called: 2
  1643 ;; This function calls:
  1644 ;;		_ENVIA_NIBBLE
  1645 ;;		_LEER_LCD
  1646 ;; This function is called by:
  1647 ;;		_ESCRIBE_MENSAJE2
  1648 ;;		_main
  1649 ;;		_ESCRIBE_MENSAJE
  1650 ;;		_GENERACARACTER
  1651 ;; This function uses a non-reentrant model
  1652 ;;
  1653                           
  1654                           	psect	text14
  1655   002B4A                     __ptext14:
  1656                           	callstack 0
  1657   002B4A                     _ENVIA_CHAR:
  1658                           	callstack 123
  1659                           
  1660                           ;incstack = 0
  1661                           ;ENVIA_CHAR@dato stored from wreg
  1662   002B4A  6E02               	movwf	ENVIA_CHAR@dato^(0+1280),c
  1663   002B4C                     
  1664                           ;LCD.c: 62: void ENVIA_CHAR(unsigned char dato);LCD.c: 63: {;LCD.c: 64:  unsigned char a
      +                          ux;;LCD.c: 65:  LATDbits.LATD0 = 1;
  1665   002B4C  80C1               	bsf	193,0,c	;volatile
  1666   002B4E                     
  1667                           ;LCD.c: 66:  LEER_LCD();
  1668   002B4E  EC77  F014         	call	_LEER_LCD	;wreg free
  1669   002B52                     
  1670                           ;LCD.c: 67:  TRISD = 0x00;
  1671   002B52  0E00               	movlw	0
  1672   002B54  6EC9               	movwf	201,c	;volatile
  1673   002B56                     
  1674                           ;LCD.c: 68:         _delay(1200);
  1675   002B56  0EF0               	movlw	240
  1676   002B58                     u537:
  1677   002B58  D000               	nop2	
  1678   002B5A  2EE8               	decfsz	wreg,f,c
  1679   002B5C  D7FD               	bra	u537
  1680   002B5E                     
  1681                           ;LCD.c: 70:  LATDbits.LATD1 = 0;
  1682   002B5E  92C1               	bcf	193,1,c	;volatile
  1683   002B60                     
  1684                           ;LCD.c: 71:  LATDbits.LATD2 = 0;
  1685   002B60  94C1               	bcf	193,2,c	;volatile
  1686   002B62                     
  1687                           ;LCD.c: 72:  LATDbits.LATD0 = 1;
  1688   002B62  80C1               	bsf	193,0,c	;volatile
  1689   002B64                     
  1690                           ;LCD.c: 73:  aux = dato & 0xF0;
  1691   002B64  5002               	movf	ENVIA_CHAR@dato^(0+1280),w,c
  1692   002B66  0BF0               	andlw	240
  1693   002B68  6E03               	movwf	ENVIA_CHAR@aux^(0+1280),c
  1694   002B6A                     
  1695                           ;LCD.c: 74:  ENVIA_NIBBLE(aux);
  1696   002B6A  5003               	movf	ENVIA_CHAR@aux^(0+1280),w,c
  1697   002B6C  EC07  F016         	call	_ENVIA_NIBBLE
  1698   002B70                     
  1699                           ;LCD.c: 75:  aux = dato << 4;
  1700   002B70  3802               	swapf	ENVIA_CHAR@dato^(0+1280),w,c
  1701   002B72  0BF0               	andlw	240
  1702   002B74  6E03               	movwf	ENVIA_CHAR@aux^(0+1280),c
  1703   002B76                     
  1704                           ;LCD.c: 76:  ENVIA_NIBBLE(aux);
  1705   002B76  5003               	movf	ENVIA_CHAR@aux^(0+1280),w,c
  1706   002B78  EC07  F016         	call	_ENVIA_NIBBLE
  1707   002B7C  0012               	return		;funcret
  1708   002B7E                     __end_of_ENVIA_CHAR:
  1709                           	callstack 0
  1710                           
  1711 ;; *************** function _LEER_LCD *****************
  1712 ;; Defined at:
  1713 ;;		line 133 in file "LCD.c"
  1714 ;; Parameters:    Size  Location     Type
  1715 ;;		None
  1716 ;; Auto vars:     Size  Location     Type
  1717 ;;  aux             1    0[COMRAM] unsigned char 
  1718 ;; Return value:  Size  Location     Type
  1719 ;;                  1    wreg      void 
  1720 ;; Registers used:
  1721 ;;		wreg, status,2, status,0
  1722 ;; Tracked objects:
  1723 ;;		On entry : 0/0
  1724 ;;		On exit  : 0/0
  1725 ;;		Unchanged: 0/0
  1726 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1727 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1728 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1729 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1730 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1731 ;;Total ram usage:        1 bytes
  1732 ;; Hardware stack levels used: 1
  1733 ;; Hardware stack levels required when called: 1
  1734 ;; This function calls:
  1735 ;;		Nothing
  1736 ;; This function is called by:
  1737 ;;		_ENVIA_CHAR
  1738 ;;		_ENVIA_LCD_CMD
  1739 ;; This function uses a non-reentrant model
  1740 ;;
  1741                           
  1742                           	psect	text15
  1743   0028EE                     __ptext15:
  1744                           	callstack 0
  1745   0028EE                     _LEER_LCD:
  1746                           	callstack 122
  1747   0028EE                     
  1748                           ;LCD.c: 135:  unsigned char aux;;LCD.c: 136:  TRISD = 0xF8;
  1749   0028EE  0EF8               	movlw	248
  1750   0028F0  6EC9               	movwf	201,c	;volatile
  1751   0028F2                     
  1752                           ;LCD.c: 137:  LATDbits.LATD0 = 0;
  1753   0028F2  90C1               	bcf	193,0,c	;volatile
  1754   0028F4                     
  1755                           ;LCD.c: 138:  LATDbits.LATD1 = 1;
  1756   0028F4  82C1               	bsf	193,1,c	;volatile
  1757   0028F6                     
  1758                           ;LCD.c: 139:  LATDbits.LATD2 = 1;
  1759   0028F6  84C1               	bsf	193,2,c	;volatile
  1760   0028F8                     
  1761                           ;LCD.c: 140:         _delay(1200);
  1762   0028F8  0EF0               	movlw	240
  1763   0028FA                     u547:
  1764   0028FA  D000               	nop2	
  1765   0028FC  2EE8               	decfsz	wreg,f,c
  1766   0028FE  D7FD               	bra	u547
  1767   002900                     
  1768                           ;LCD.c: 142:  aux = PORTD;
  1769   002900  C4D1 F501          	movff	1233,LEER_LCD@aux	;volatile
  1770   002904                     
  1771                           ;LCD.c: 143:  LATDbits.LATD2 = 0;
  1772   002904  94C1               	bcf	193,2,c	;volatile
  1773   002906                     
  1774                           ;LCD.c: 144:         _delay(1200);
  1775   002906  0EF0               	movlw	240
  1776   002908                     u557:
  1777   002908  D000               	nop2	
  1778   00290A  2EE8               	decfsz	wreg,f,c
  1779   00290C  D7FD               	bra	u557
  1780   00290E                     
  1781                           ;LCD.c: 146:  LATDbits.LATD2 = 1;
  1782   00290E  84C1               	bsf	193,2,c	;volatile
  1783   002910                     
  1784                           ;LCD.c: 147:         _delay(1200);
  1785   002910  0EF0               	movlw	240
  1786   002912                     u567:
  1787   002912  D000               	nop2	
  1788   002914  2EE8               	decfsz	wreg,f,c
  1789   002916  D7FD               	bra	u567
  1790   002918                     
  1791                           ;LCD.c: 149:  LATDbits.LATD2 = 0;
  1792   002918  94C1               	bcf	193,2,c	;volatile
  1793   00291A                     l876:
  1794                           
  1795                           ;LCD.c: 150:  aux = aux & 0x80;
  1796   00291A  5001               	movf	LEER_LCD@aux^(0+1280),w,c
  1797   00291C  0B80               	andlw	128
  1798   00291E  6E01               	movwf	LEER_LCD@aux^(0+1280),c
  1799                           
  1800                           ;LCD.c: 151:  while(aux == 0x80)
  1801   002920  EFA6  F014         	goto	l890
  1802   002924                     l75:
  1803                           
  1804                           ;LCD.c: 152:         {;LCD.c: 153:             LATDbits.LATD2 = 1;
  1805   002924  84C1               	bsf	193,2,c	;volatile
  1806   002926                     
  1807                           ;LCD.c: 154:             _delay(1200);
  1808   002926  0EF0               	movlw	240
  1809   002928                     u577:
  1810   002928  D000               	nop2	
  1811   00292A  2EE8               	decfsz	wreg,f,c
  1812   00292C  D7FD               	bra	u577
  1813   00292E                     
  1814                           ;LCD.c: 155:             aux = PORTD;
  1815   00292E  C4D1 F501          	movff	1233,LEER_LCD@aux	;volatile
  1816   002932                     
  1817                           ;LCD.c: 156:             LATDbits.LATD2 = 0;
  1818   002932  94C1               	bcf	193,2,c	;volatile
  1819                           
  1820                           ;LCD.c: 157:             _delay(1200);
  1821   002934  0EF0               	movlw	240
  1822   002936                     u587:
  1823   002936  D000               	nop2	
  1824   002938  2EE8               	decfsz	wreg,f,c
  1825   00293A  D7FD               	bra	u587
  1826   00293C                     
  1827                           ;LCD.c: 158:             LATDbits.LATD2 = 1;
  1828   00293C  84C1               	bsf	193,2,c	;volatile
  1829                           
  1830                           ;LCD.c: 159:             _delay(1200);
  1831   00293E  0EF0               	movlw	240
  1832   002940                     u597:
  1833   002940  D000               	nop2	
  1834   002942  2EE8               	decfsz	wreg,f,c
  1835   002944  D7FD               	bra	u597
  1836   002946                     
  1837                           ;LCD.c: 160:             LATDbits.LATD2 = 0;
  1838   002946  94C1               	bcf	193,2,c	;volatile
  1839   002948  EF8D  F014         	goto	l876
  1840   00294C                     l890:
  1841                           
  1842                           ;LCD.c: 151:  while(aux == 0x80)
  1843   00294C  0E80               	movlw	128
  1844   00294E  1801               	xorwf	LEER_LCD@aux^(0+1280),w,c
  1845   002950  B4D8               	btfsc	status,2,c
  1846   002952  EFAD  F014         	goto	u11
  1847   002956  EFAF  F014         	goto	u10
  1848   00295A                     u11:
  1849   00295A  EF92  F014         	goto	l75
  1850   00295E                     u10:
  1851   00295E  0012               	return		;funcret
  1852   002960                     __end_of_LEER_LCD:
  1853                           	callstack 0
  1854                           
  1855 ;; *************** function _ENVIA_NIBBLE *****************
  1856 ;; Defined at:
  1857 ;;		line 105 in file "LCD.c"
  1858 ;; Parameters:    Size  Location     Type
  1859 ;;  dato            1    wreg     unsigned char 
  1860 ;; Auto vars:     Size  Location     Type
  1861 ;;  dato            1    0[COMRAM] unsigned char 
  1862 ;; Return value:  Size  Location     Type
  1863 ;;                  1    wreg      void 
  1864 ;; Registers used:
  1865 ;;		wreg, status,2, status,0
  1866 ;; Tracked objects:
  1867 ;;		On entry : 0/0
  1868 ;;		On exit  : 0/0
  1869 ;;		Unchanged: 0/0
  1870 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1871 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1872 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1873 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1874 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1875 ;;Total ram usage:        1 bytes
  1876 ;; Hardware stack levels used: 1
  1877 ;; Hardware stack levels required when called: 1
  1878 ;; This function calls:
  1879 ;;		Nothing
  1880 ;; This function is called by:
  1881 ;;		_ENVIA_CHAR
  1882 ;;		_LCD_CONFIG
  1883 ;;		_ENVIA_LCD_CMD
  1884 ;; This function uses a non-reentrant model
  1885 ;;
  1886                           
  1887                           	psect	text16
  1888   002C0E                     __ptext16:
  1889                           	callstack 0
  1890   002C0E                     _ENVIA_NIBBLE:
  1891                           	callstack 123
  1892                           
  1893                           ;incstack = 0
  1894                           ;ENVIA_NIBBLE@dato stored from wreg
  1895   002C0E  6E01               	movwf	ENVIA_NIBBLE@dato^(0+1280),c
  1896   002C10                     
  1897                           ;LCD.c: 105: void ENVIA_NIBBLE(unsigned char dato);LCD.c: 106: {;LCD.c: 107:  LATD &= 0x
      +                          0F;
  1898   002C10  0E0F               	movlw	15
  1899   002C12  16C1               	andwf	193,f,c	;volatile
  1900                           
  1901                           ;LCD.c: 108:  dato &= 0xF0;
  1902   002C14  0EF0               	movlw	240
  1903   002C16  1601               	andwf	ENVIA_NIBBLE@dato^(0+1280),f,c
  1904                           
  1905                           ;LCD.c: 109:  LATD|= dato;
  1906   002C18  5001               	movf	ENVIA_NIBBLE@dato^(0+1280),w,c	;volatile
  1907   002C1A  12C1               	iorwf	193,f,c	;volatile
  1908   002C1C                     
  1909                           ;LCD.c: 110:  LATDbits.LATD2 = 1;
  1910   002C1C  84C1               	bsf	193,2,c	;volatile
  1911   002C1E                     
  1912                           ;LCD.c: 112:         _delay(1200);
  1913   002C1E  0EF0               	movlw	240
  1914   002C20                     u607:
  1915   002C20  D000               	nop2	
  1916   002C22  2EE8               	decfsz	wreg,f,c
  1917   002C24  D7FD               	bra	u607
  1918   002C26                     
  1919                           ;LCD.c: 113:  LATDbits.LATD2 = 0;
  1920   002C26  94C1               	bcf	193,2,c	;volatile
  1921   002C28  0012               	return		;funcret
  1922   002C2A                     __end_of_ENVIA_NIBBLE:
  1923                           	callstack 0
  1924                           
  1925 ;; *************** function _CCP1_ISR *****************
  1926 ;; Defined at:
  1927 ;;		line 76 in file "maincode2.c"
  1928 ;; Parameters:    Size  Location     Type
  1929 ;;		None
  1930 ;; Auto vars:     Size  Location     Type
  1931 ;;		None
  1932 ;; Return value:  Size  Location     Type
  1933 ;;                  1    wreg      void 
  1934 ;; Registers used:
  1935 ;;		wreg, status,2, status,0
  1936 ;; Tracked objects:
  1937 ;;		On entry : 0/0
  1938 ;;		On exit  : 0/0
  1939 ;;		Unchanged: 0/0
  1940 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1941 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1942 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1943 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1944 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1945 ;;Total ram usage:        0 bytes
  1946 ;; Hardware stack levels used: 1
  1947 ;; This function calls:
  1948 ;;		Nothing
  1949 ;; This function is called by:
  1950 ;;		Interrupt level 2
  1951 ;; This function uses a non-reentrant model
  1952 ;;
  1953                           
  1954                           	psect	text17
  1955   00287A                     __ptext17:
  1956                           	callstack 0
  1957   00287A                     _CCP1_ISR:
  1958                           	callstack 122
  1959   00287A                     
  1960                           ;maincode2.c: 77:     PIR3bits.CCP1IF = 0;
  1961   00287A  9CB1               	bcf	177,6,c	;volatile
  1962   00287C                     
  1963                           ;maincode2.c: 78:     if(ticks == 99){
  1964   00287C  0E63               	movlw	99
  1965   00287E  1812               	xorwf	_ticks^(0+1280),w,c
  1966   002880  A4D8               	btfss	status,2,c
  1967   002882  EF45  F014         	goto	i2u26_41
  1968   002886  EF47  F014         	goto	i2u26_40
  1969   00288A                     i2u26_41:
  1970   00288A  EF75  F014         	goto	i2l1230
  1971   00288E                     i2u26_40:
  1972   00288E                     
  1973                           ;maincode2.c: 79:         ticks = 0;
  1974   00288E  0E00               	movlw	0
  1975   002890  6E12               	movwf	_ticks^(0+1280),c
  1976   002892                     
  1977                           ;maincode2.c: 80:         if(segundos == 59){
  1978   002892  0E3B               	movlw	59
  1979   002894  1813               	xorwf	_segundos^(0+1280),w,c
  1980   002896  A4D8               	btfss	status,2,c
  1981   002898  EF50  F014         	goto	i2u27_41
  1982   00289C  EF52  F014         	goto	i2u27_40
  1983   0028A0                     i2u27_41:
  1984   0028A0  EF72  F014         	goto	i2l1228
  1985   0028A4                     i2u27_40:
  1986   0028A4                     
  1987                           ;maincode2.c: 81:             segundos = 0;
  1988   0028A4  0E00               	movlw	0
  1989   0028A6  6E13               	movwf	_segundos^(0+1280),c
  1990   0028A8                     
  1991                           ;maincode2.c: 82:             if(minutos == 59){
  1992   0028A8  0E3B               	movlw	59
  1993   0028AA  1817               	xorwf	_minutos^(0+1280),w,c
  1994   0028AC  A4D8               	btfss	status,2,c
  1995   0028AE  EF5B  F014         	goto	i2u28_41
  1996   0028B2  EF5D  F014         	goto	i2u28_40
  1997   0028B6                     i2u28_41:
  1998   0028B6  EF6F  F014         	goto	i2l1226
  1999   0028BA                     i2u28_40:
  2000   0028BA                     
  2001                           ;maincode2.c: 83:                 minutos = 0;
  2002   0028BA  0E00               	movlw	0
  2003   0028BC  6E17               	movwf	_minutos^(0+1280),c
  2004   0028BE                     
  2005                           ;maincode2.c: 84:                 if(horas == 23){
  2006   0028BE  0E17               	movlw	23
  2007   0028C0  1818               	xorwf	_horas^(0+1280),w,c
  2008   0028C2  A4D8               	btfss	status,2,c
  2009   0028C4  EF66  F014         	goto	i2u29_41
  2010   0028C8  EF68  F014         	goto	i2u29_40
  2011   0028CC                     i2u29_41:
  2012   0028CC  EF6C  F014         	goto	i2l1224
  2013   0028D0                     i2u29_40:
  2014   0028D0                     
  2015                           ;maincode2.c: 85:                     horas = 0;
  2016   0028D0  0E00               	movlw	0
  2017   0028D2  6E18               	movwf	_horas^(0+1280),c
  2018                           
  2019                           ;maincode2.c: 86:                 }
  2020   0028D4  EF76  F014         	goto	i2l172
  2021   0028D8                     i2l1224:
  2022                           
  2023                           ;maincode2.c: 88:                     horas++;
  2024   0028D8  2A18               	incf	_horas^(0+1280),f,c
  2025   0028DA  EF76  F014         	goto	i2l172
  2026   0028DE                     i2l1226:
  2027                           
  2028                           ;maincode2.c: 92:                 minutos++;
  2029   0028DE  2A17               	incf	_minutos^(0+1280),f,c
  2030   0028E0  EF76  F014         	goto	i2l172
  2031   0028E4                     i2l1228:
  2032                           
  2033                           ;maincode2.c: 96:             segundos++;
  2034   0028E4  2A13               	incf	_segundos^(0+1280),f,c
  2035   0028E6  EF76  F014         	goto	i2l172
  2036   0028EA                     i2l1230:
  2037                           
  2038                           ;maincode2.c: 100:         ticks++;
  2039   0028EA  2A12               	incf	_ticks^(0+1280),f,c
  2040   0028EC                     i2l172:
  2041   0028EC  0011               	retfie		f
  2042   0028EE                     __end_of_CCP1_ISR:
  2043                           	callstack 0
  2044                           
  2045                           ;
  2046                           ; Interrupt Vector Table @ 0x8
  2047                           ;
  2048                           
  2049                           	psect	ivt0x8
  2050   000008                     __pivt0x8:
  2051                           	callstack 0
  2052   000008                     ivt0x8_base:
  2053                           	callstack 0
  2054                           
  2055                           ; high-priority vector
  2056   000008  EF3D  F014         	goto	_CCP1_ISR
  2057   000018                     	org	16
  2058                           
  2059                           ; low-priority vector
  2060   000018  00FF               	reset	
  2061                           
  2062                           	psect	rparam
  2063   000000                     
  2064                           	psect	config
  2065                           
  2066                           ;Config register CONFIG1 @ 0x300000
  2067                           ;	External Oscillator Selection
  2068                           ;	FEXTOSC = ECH, EC (external clock) above 8 MHz
  2069                           ;	Reset Oscillator Selection
  2070                           ;	RSTOSC = EXTOSC, EXTOSC operating per FEXTOSC bits (device manufacturing default)
  2071   300000                     	org	3145728
  2072   300000  FF                 	db	255
  2073                           
  2074                           ;Config register CONFIG2 @ 0x300001
  2075                           ;	Clock out Enable bit
  2076                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
  2077                           ;	PRLOCKED One-Way Set Enable bit
  2078                           ;	PR1WAY = ON, PRLOCKED bit can be cleared and set only once
  2079                           ;	Clock Switch Enable bit
  2080                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
  2081                           ;	Fail-Safe Clock Monitor Enable bit
  2082                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
  2083   300001                     	org	3145729
  2084   300001  FF                 	db	255
  2085                           
  2086                           ;Config register CONFIG3 @ 0x300002
  2087                           ;	MCLR Enable bit
  2088                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
  2089                           ;	Power-up timer selection bits
  2090                           ;	PWRTS = PWRT_16, PWRT set at 16ms
  2091                           ;	Multi-vector enable bit
  2092                           ;	MVECEN = OFF, Interrupt contoller does not use vector table to prioritze interrupts
  2093                           ;	IVTLOCK bit One-way set enable bit
  2094                           ;	IVT1WAY = ON, IVTLOCKED bit can be cleared and set only once
  2095                           ;	Low Power BOR Enable bit
  2096                           ;	LPBOREN = OFF, Low-Power BOR disabled
  2097                           ;	Brown-out Reset Enable bits
  2098                           ;	BOREN = OFF, Brown-out Reset disabled
  2099   300002                     	org	3145730
  2100   300002  33                 	db	51
  2101                           
  2102                           ;Config register CONFIG4 @ 0x300003
  2103                           ;	Brown-out Reset Voltage Selection bits
  2104                           ;	BORV = VBOR_1P9, Brown-out Reset Voltage (VBOR) set to 1.9V
  2105                           ;	ZCD Disable bit
  2106                           ;	ZCD = OFF, ZCD module is disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCD
      +                          CON
  2107                           ;	PPSLOCK bit One-Way Set Enable bit
  2108                           ;	PPS1WAY = ON, PPSLOCKED bit can be cleared and set only once; PPS registers remain loc
      +                          ked after one clear/set cycle
  2109                           ;	Stack Full/Underflow Reset Enable bit
  2110                           ;	STVREN = ON, Stack full/underflow will cause Reset
  2111                           ;	Low Voltage Programming Enable bit
  2112                           ;	LVP = OFF, HV on MCLR/VPP must be used for programming
  2113                           ;	Extended Instruction Set Enable bit
  2114                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
  2115   300003                     	org	3145731
  2116   300003  DF                 	db	223
  2117                           
  2118                           ;Config register CONFIG5 @ 0x300004
  2119                           ;	WDT Period selection bits
  2120                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  2121                           ;	WDT operating mode
  2122                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
  2123   300004                     	org	3145732
  2124   300004  9F                 	db	159
  2125                           
  2126                           ;Config register CONFIG6 @ 0x300005
  2127                           ;	WDT Window Select bits
  2128                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
  2129                           ;	WDT input clock selector
  2130                           ;	WDTCCS = SC, Software Control
  2131   300005                     	org	3145733
  2132   300005  FF                 	db	255
  2133                           
  2134                           ;Config register CONFIG7 @ 0x300006
  2135                           ;	Boot Block Size selection bits
  2136                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
  2137                           ;	Boot Block enable bit
  2138                           ;	BBEN = OFF, Boot block disabled
  2139                           ;	Storage Area Flash enable bit
  2140                           ;	SAFEN = OFF, SAF disabled
  2141                           ;	Background Debugger
  2142                           ;	DEBUG = OFF, Background Debugger disabled
  2143   300006                     	org	3145734
  2144   300006  FF                 	db	255
  2145                           
  2146                           ;Config register CONFIG8 @ 0x300007
  2147                           ;	Boot Block Write Protection bit
  2148                           ;	WRTB = OFF, Boot Block not Write protected
  2149                           ;	Configuration Register Write Protection bit
  2150                           ;	WRTC = OFF, Configuration registers not Write protected
  2151                           ;	Data EEPROM Write Protection bit
  2152                           ;	WRTD = OFF, Data EEPROM not Write protected
  2153                           ;	SAF Write protection bit
  2154                           ;	WRTSAF = OFF, SAF not Write Protected
  2155                           ;	Application Block write protection bit
  2156                           ;	WRTAPP = OFF, Application Block not write protected
  2157   300007                     	org	3145735
  2158   300007  FF                 	db	255
  2159                           
  2160                           ;Config register CONFIG10 @ 0x300009
  2161                           ;	PFM and Data EEPROM Code Protection bit
  2162                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
  2163   300009                     	org	3145737
  2164   300009  FF                 	db	255
  2165                           tosu	equ	0x4FF
  2166                           tosh	equ	0x4FE
  2167                           tosl	equ	0x4FD
  2168                           stkptr	equ	0x4FC
  2169                           pclatu	equ	0x4FB
  2170                           pclath	equ	0x4FA
  2171                           pcl	equ	0x4F9
  2172                           tblptru	equ	0x4F8
  2173                           tblptrh	equ	0x4F7
  2174                           tblptrl	equ	0x4F6
  2175                           tablat	equ	0x4F5
  2176                           prodh	equ	0x4F4
  2177                           prodl	equ	0x4F3
  2178                           indf0	equ	0x4EF
  2179                           postinc0	equ	0x4EE
  2180                           postdec0	equ	0x4ED
  2181                           preinc0	equ	0x4EC
  2182                           plusw0	equ	0x4EB
  2183                           fsr0h	equ	0x4EA
  2184                           fsr0l	equ	0x4E9
  2185                           wreg	equ	0x4E8
  2186                           indf1	equ	0x4E7
  2187                           postinc1	equ	0x4E6
  2188                           postdec1	equ	0x4E5
  2189                           preinc1	equ	0x4E4
  2190                           plusw1	equ	0x4E3
  2191                           fsr1h	equ	0x4E2
  2192                           fsr1l	equ	0x4E1
  2193                           bsr	equ	0x4E0
  2194                           indf2	equ	0x4DF
  2195                           postinc2	equ	0x4DE
  2196                           postdec2	equ	0x4DD
  2197                           preinc2	equ	0x4DC
  2198                           plusw2	equ	0x4DB
  2199                           fsr2h	equ	0x4DA
  2200                           fsr2l	equ	0x4D9
  2201                           status	equ	0x4D8

Data Sizes:
    Strings     35
    Constant    0
    Data        2
    BSS         5
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     17      24
    BANK5           160      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0
    BANK32          256      0       0
    BANK33          256      0       0
    BANK34          256      0       0
    BANK35          256      0       0
    BANK36          256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 13
		 -> STR_3(CODE[13]), STR_2(CODE[11]), STR_1(CODE[11]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 13
		 -> STR_3(CODE[13]), STR_2(CODE[11]), STR_1(CODE[11]), 

    ESCRIBE_MENSAJE2@cadena	PTR const unsigned char  size(2) Largest target is 13
		 -> STR_3(CODE[13]), STR_2(CODE[11]), STR_1(CODE[11]), 


Critical Paths under _main in COMRAM

    _main->_convierte
    _lcd_config->_CURSOR_ONOFF
    _lcd_config->_LCD_CONFIG
    _LCD_CONFIG->_ENVIA_LCD_CMD
    _CURSOR_ONOFF->_ENVIA_LCD_CMD
    _CURSOR_HOME->_ENVIA_LCD_CMD
    _BORRAR_LCD->_ENVIA_LCD_CMD
    _convierte->___awdiv
    ___awdiv->___awmod
    _POS_CURSOR->_ENVIA_LCD_CMD
    _ENVIA_LCD_CMD->_ENVIA_NIBBLE
    _ENVIA_LCD_CMD->_LEER_LCD
    _ESCRIBE_MENSAJE2->_strlen
    _ENVIA_CHAR->_ENVIA_NIBBLE
    _ENVIA_CHAR->_LEER_LCD

Critical Paths under _CCP1_ISR in COMRAM

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _CCP1_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _CCP1_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _CCP1_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _CCP1_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _CCP1_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _CCP1_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _CCP1_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _CCP1_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _CCP1_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _CCP1_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _CCP1_ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _CCP1_ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _CCP1_ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _CCP1_ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _CCP1_ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _CCP1_ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _CCP1_ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _CCP1_ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _CCP1_ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _CCP1_ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _CCP1_ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _CCP1_ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _CCP1_ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _CCP1_ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _CCP1_ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _CCP1_ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _CCP1_ISR in BANK31

    None.

Critical Paths under _main in BANK32

    None.

Critical Paths under _CCP1_ISR in BANK32

    None.

Critical Paths under _main in BANK33

    None.

Critical Paths under _CCP1_ISR in BANK33

    None.

Critical Paths under _main in BANK34

    None.

Critical Paths under _CCP1_ISR in BANK34

    None.

Critical Paths under _main in BANK35

    None.

Critical Paths under _CCP1_ISR in BANK35

    None.

Critical Paths under _main in BANK36

    None.

Critical Paths under _CCP1_ISR in BANK36

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    3175
                                             15 COMRAM     2     2      0
                         _BORRAR_LCD
                         _ENVIA_CHAR
                   _ESCRIBE_MENSAJE2
                         _POS_CURSOR
                          _configuro
                          _convierte
                         _lcd_config
 ---------------------------------------------------------------------------------
 (1) _lcd_config                                           1     1      0     525
                                              4 COMRAM     1     1      0
                         _BORRAR_LCD
                        _CURSOR_HOME
                       _CURSOR_ONOFF
                         _LCD_CONFIG
 ---------------------------------------------------------------------------------
 (2) _LCD_CONFIG                                           1     1      0     135
                                              3 COMRAM     1     1      0
                      _ENVIA_LCD_CMD
                       _ENVIA_NIBBLE
 ---------------------------------------------------------------------------------
 (2) _CURSOR_ONOFF                                         1     1      0     150
                                              3 COMRAM     1     1      0
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _CURSOR_HOME                                          0     0      0     120
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _BORRAR_LCD                                           0     0      0     120
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (1) _convierte                                            1     1      0    1270
                                             14 COMRAM     1     1      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     600
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     604
                                              6 COMRAM     8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (1) _configuro                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _POS_CURSOR                                           2     1      1     512
                                              3 COMRAM     2     1      1
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (3) _ENVIA_LCD_CMD                                        2     2      0     120
                                              1 COMRAM     2     2      0
                       _ENVIA_NIBBLE
                           _LEER_LCD
 ---------------------------------------------------------------------------------
 (1) _ESCRIBE_MENSAJE2                                     6     4      2     628
                                              4 COMRAM     6     4      2
                         _ENVIA_CHAR
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _ENVIA_CHAR                                           2     2      0     120
                                              1 COMRAM     2     2      0
                       _ENVIA_NIBBLE
                           _LEER_LCD
 ---------------------------------------------------------------------------------
 (4) _LEER_LCD                                             1     1      0      45
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _ENVIA_NIBBLE                                         1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _CCP1_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BORRAR_LCD
     _ENVIA_LCD_CMD
       _ENVIA_NIBBLE
       _LEER_LCD
   _ENVIA_CHAR
     _ENVIA_NIBBLE
     _LEER_LCD
   _ESCRIBE_MENSAJE2
     _ENVIA_CHAR
     _strlen
   _POS_CURSOR
     _ENVIA_LCD_CMD
   _configuro
   _convierte
     ___awdiv
       ___awmod (ARG)
     ___awmod
   _lcd_config
     _BORRAR_LCD
     _CURSOR_HOME
       _ENVIA_LCD_CMD
     _CURSOR_ONOFF
       _ENVIA_LCD_CMD
     _LCD_CONFIG
       _ENVIA_LCD_CMD
       _ENVIA_NIBBLE

 _CCP1_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0       0      69        0.0%
EEDATA             400      0       0       0        0.0%
BITBIGSFRllll      31E      0       0      84        0.0%
BITBIGSFR_1        100      0       0      68        0.0%
BITBANK36          100      0       0      66        0.0%
BANK36             100      0       0      67        0.0%
BITBANK35          100      0       0      64        0.0%
BANK35             100      0       0      65        0.0%
BITBANK34          100      0       0      62        0.0%
BANK34             100      0       0      63        0.0%
BITBANK33          100      0       0      60        0.0%
BANK33             100      0       0      61        0.0%
BITBANK32          100      0       0      58        0.0%
BANK32             100      0       0      59        0.0%
BITBANK31          100      0       0      56        0.0%
BANK31             100      0       0      57        0.0%
BITBANK30          100      0       0      54        0.0%
BANK30             100      0       0      55        0.0%
BITBANK29          100      0       0      52        0.0%
BANK29             100      0       0      53        0.0%
BITBANK28          100      0       0      50        0.0%
BANK28             100      0       0      51        0.0%
BITBANK27          100      0       0      48        0.0%
BANK27             100      0       0      49        0.0%
BITBANK26          100      0       0      46        0.0%
BANK26             100      0       0      47        0.0%
BITBANK25          100      0       0      44        0.0%
BANK25             100      0       0      45        0.0%
BITBANK24          100      0       0      42        0.0%
BANK24             100      0       0      43        0.0%
BITBANK23          100      0       0      40        0.0%
BANK23             100      0       0      41        0.0%
BITBANK22          100      0       0      38        0.0%
BANK22             100      0       0      39        0.0%
BITBANK21          100      0       0      36        0.0%
BANK21             100      0       0      37        0.0%
BITBANK20          100      0       0      34        0.0%
BANK20             100      0       0      35        0.0%
BITBANK19          100      0       0      32        0.0%
BANK19             100      0       0      33        0.0%
BITBANK18          100      0       0      30        0.0%
BANK18             100      0       0      31        0.0%
BITBANK17          100      0       0      28        0.0%
BANK17             100      0       0      29        0.0%
BITBANK16          100      0       0      26        0.0%
BANK16             100      0       0      27        0.0%
BITBANK15          100      0       0      24        0.0%
BANK15             100      0       0      25        0.0%
BITBANK14          100      0       0      22        0.0%
BANK14             100      0       0      23        0.0%
BITBANK13          100      0       0      20        0.0%
BANK13             100      0       0      21        0.0%
BITBANK12          100      0       0      18        0.0%
BANK12             100      0       0      19        0.0%
BITBANK11          100      0       0      16        0.0%
BANK11             100      0       0      17        0.0%
BITBANK10          100      0       0      14        0.0%
BANK10             100      0       0      15        0.0%
BITBANK9           100      0       0      12        0.0%
BANK9              100      0       0      13        0.0%
BITBANK8           100      0       0      10        0.0%
BANK8              100      0       0      11        0.0%
BITBANK7           100      0       0       8        0.0%
BANK7              100      0       0       9        0.0%
BITBANK6           100      0       0       6        0.0%
BANK6              100      0       0       7        0.0%
BITBIGSFRlllhhh     BD      0       0      81        0.0%
BITBANK5            A0      0       0       4        0.0%
BANK5               A0      0       0       5        0.0%
BITBIGSFRlhl        88      0       0      78        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     11      18       1       25.3%
BITBIGSFRhhhh       29      0       0      70        0.0%
BITBIGSFRlllhhl     1E      0       0      82        0.0%
BITBIGSFRlhhll       F      0       0      77        0.0%
BITBIGSFRllhh        F      0       0      79        0.0%
BITBIGSFRlhhlh       D      0       0      76        0.0%
BITBIGSFRllhl        7      0       0      80        0.0%
BITBIGSFRhhl         7      0       0      72        0.0%
BITBIGSFRhhhl        4      0       0      71        0.0%
BITBIGSFRhll         4      0       0      74        0.0%
BITBIGSFRlllhl       2      0       0      83        0.0%
BITBIGSFRlhhh        1      0       0      75        0.0%
BITBIGSFRhlh         1      0       0      73        0.0%
BIGSFR_1             0      0       0     200        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      18      85        0.0%
DATA                 0      0      18       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Mon May 22 01:10:10 2023

                      l26 2ADA                        l44 2BDE                        l62 2C38  
                      l71 2B48                        l39 2C30                        l56 2A62  
                      l65 29BE                        l75 2924                        l59 2B7C  
                      l68 2C28                        l77 295E                        u10 295E  
                      u11 295A                        u20 2BC2                        u21 2BBE  
                      u30 2BD8                        u31 2BD4              ___awdiv@sign 050C  
           ENVIA_CHAR@aux 0503                       l151 2A18                       l145 2C0C  
                     l148 2BAE                       l406 27C8                       l419 2878  
                     l900 2B18                       l910 2B2C                       l902 2B1A  
                     l920 2B42                       l912 2B2E                       l904 2B1E  
                     l914 2B30                       l906 2B22                       l922 2C2A  
                     l930 2BD8                       l860 28F6                       l940 2B5E  
                     l932 2B4C                       l852 2B14                       l916 2B36  
                     l908 2B2A                       l924 2BB2                       l870 290E  
                     l862 28F8                       l854 28EE                       l950 2B70  
                     l942 2B60                       l934 2B4E                       l918 2B3C  
                     l926 2BC2                       l880 292E                       l872 2910  
                     l864 2900                       l856 28F2                       l952 2B76  
                     l944 2B62                       l936 2B52                       l928 2BC8  
                     l882 2932                       l890 294C                       l874 2918  
                     l866 2904                       l858 28F4                       l946 2B64  
                     l938 2B56                       l970 296A                       l892 2C10  
                     l884 293C                       l876 291A                       l868 2906  
                     l948 2B6A                       l964 2C32                       l980 29A0  
                     l972 2978                       l894 2C1C                       l886 2946  
                     l878 2926                       l982 29A6                       l974 298C  
                     l966 2960                       l896 2C1E                       l984 29AC  
                     l976 2994                       l968 2964                       l898 2C26  
                     l986 29B2                       l978 299A                       l988 29B8  
                     u300 2B08                       u301 2B04                       u310 2718  
                     u311 2714                       u320 2732                       u400 282E  
                     u321 272E                       u401 282A                       u330 2758  
                     u410 2844                       u331 2754                       u411 2840  
                     u340 2776                       u420 2868                       u341 2772  
                     u421 2864                       u430 2AB4                       u350 2792  
                     u431 2AB0                       u351 278E                       u440 2AD2  
                     u360 27B8                       u441 2ACE                       u361 27B4  
                     u450 2A62                       u370 27DC                       u451 2A5E  
                     u371 27D8                       u507 297E                       u380 27F6  
                     u381 27F2                       u517 298E                       u390 2810  
                     u607 2C20                       u527 2B24                       u391 280C  
                     u537 2B58                       u547 28FA                       u467 2664  
                     u557 2908                       u477 2B84                       u567 2912  
                     u487 2B96                       u577 2928                       u497 2970  
                     u587 2936                       u597 2940              ___awmod@sign 0506  
             LEER_LCD@aux 0501                       wreg 04E8              ?_CURSOR_HOME 0501  
          ??_ENVIA_NIBBLE 0501            ENVIA_CHAR@dato 0502                      l1100 2C08  
                    l1102 2C0A                      l1110 2BAC                      l1104 2B7E  
                    l1106 2B8C                      l1300 2810                      l1108 2B90  
                    l1310 284C                      l1302 2818                      l1232 2ADC  
                    l1312 2852                      l1304 2820                      l1234 2AE8  
                    l1330 2A1A                      l1322 2AA4                      l1090 2BE0  
                    l1250 2724                      l1242 2706                      l1306 282E  
                    l1314 2858                      l1236 2AEC                      l1340 2A50  
                    l1332 2A2A                      l1324 2AB4                      l1092 2BEA  
                    l1260 2758                      l1252 2732                      l1244 270A  
                    l1316 2868                      l1308 2844                      l1238 2B08  
                    l1334 2A2A                      l1326 2AC0                      l1094 2BEC  
                    l1270 2792                      l1262 2760                      l1254 273A  
                    l1246 2718                      l1318 2870                      l1342 29C2  
                    l1350 2638                      l1336 2A32                      l1328 2AD2  
                    l1096 2BEE                      l1280 27B8                      l1272 279A  
                    l1264 2768                      l1256 273E                      l1248 2720  
                    l1360 2674                      l1352 2644                      l1344 2626  
                    l1338 2A4E                      l1098 2BF0                      l1282 27C0  
                    l1274 279C                      l1266 2776                      l1258 2746  
                    l1290 27DC                      l1370 26A2                      l1362 267E  
                    l1354 264E                      l1346 262A                      l1276 27A2  
                    l1268 277C                      l1292 27E4                      l1380 26C6  
                    l1372 26AA                      l1364 268A                      l1356 265A  
                    l1348 262E                      l1278 27A8                      l1294 27E8  
                    l1286 27CA                      l1390 26E8                      l1382 26CC  
                    l1374 26B0                      l1366 2694                      l1358 2670  
                    l1296 27F6                      l1288 27CE                      l1392 26EE  
                    l1384 26D2                      l1376 26B6                      l1368 269A  
                    l1298 27FE                      l1394 26F6                      l1386 26DA  
                    l1378 26BE                      l1388 26E2                      STR_1 2619  
                    STR_2 260E                      STR_3 2601                      _LATD 04C1  
                    _main 2626          __end_of_CCP1_ISR 28EE                      start 001A  
           ?_CURSOR_ONOFF 0501              ___param_bank 0000           ??_ENVIA_LCD_CMD 0502  
        __end_of_LEER_LCD 2960                     ?_main 0501           __end_of___awdiv 27CA  
         __end_of___awmod 287A                     _T1CLK 0321           ___awdiv@divisor 0509  
                   _T1CON 031E                     i2l172 28EC           ___awdiv@counter 050B  
                   _PORTD 04D1                     _TRISD 04C9                     _horas 0518  
             ?_POS_CURSOR 0504                     _ticks 0512                     tablat 04F5  
                   status 04D8            ??_CURSOR_ONOFF 0504           __initialization 2A64  
            __end_of_main 2706                    ??_main 0510             __activetblptr 0001  
                  _CCPR1H 0341                    _CCPR1L 0340          ___awdiv@dividend 0507  
                  _ANSELD 0418                    i2l1210 288E                    i2l1220 28BE  
                  i2l1212 2892                    i2l1222 28D0                    i2l1214 28A4  
                  i2l1230 28EA                    i2l1206 287A                    i2l1224 28D8  
                  i2l1216 28A8                    i2l1208 287C                    i2l1218 28BA  
                  i2l1226 28DE                    i2l1228 28E4                 ??___awdiv 050B  
                  _decena 0515                 ??___awmod 0505      __end_of_ENVIA_NIBBLE 2C2A  
        ___awdiv@quotient 050D           ___awmod@divisor 0503                    isa$std 0001  
         ___awmod@counter 0505                    _unidad 0514                    _strlen 2ADC  
               ?_CCP1_ISR 0501              __pdataCOMRAM 0517              __mediumconst 0000  
                  tblptrh 04F7                    tblptrl 04F6                    tblptru 04F8  
            ??_BORRAR_LCD 0504                 ?_LEER_LCD 0501                __accesstop 0560  
 __end_of__initialization 2A94              ??_LCD_CONFIG 0504             ___rparam_used 0001  
            ??_ENVIA_CHAR 0502            __pcstackCOMRAM 0501        __end_of_BORRAR_LCD 2C3A  
              ??_CCP1_ISR 0501          _ESCRIBE_MENSAJE2 2A1A          ENVIA_LCD_CMD@aux 0503  
    __end_of_CURSOR_ONOFF 2BE0        __end_of_LCD_CONFIG 29C0        __end_of_ENVIA_CHAR 2B7E  
              ??_LEER_LCD 0501          ENVIA_NIBBLE@dato 0501                   IVTBASEH 045E  
                 IVTBASEL 045D                   IVTBASEU 045F                   _CCP1CON 0342  
                 ?_strlen 0501                _lcd_config 2B7E                   i2u26_40 288E  
                 i2u26_41 288A                   i2u27_40 28A4                   i2u27_41 28A0  
                 i2u28_40 28BA                   i2u28_41 28B6                   i2u29_40 28D0  
                 i2u29_41 28CC              ??_POS_CURSOR 0505                   __Hparam 0000  
                 __Lparam 0000         __end_of_configuro 2C0E                   ___awdiv 2706  
                 ___awmod 27CA              __psmallconst 2600     __end_of_ENVIA_LCD_CMD 2B4A  
       __end_of_convierte 2A1A                   __pcinit 2A64        __end_of_POS_CURSOR 2ADC  
                 __ramtop 2600                   _centena 0516                   __ptext0 2626  
                 __ptext1 2B7E                   __ptext2 2960                   __ptext3 2BB0  
                 __ptext4 2C2A                   __ptext5 2C32                   __ptext6 29C0  
                 __ptext7 27CA                   __ptext8 2706                   __ptext9 2BE0  
        ___awmod@dividend 0501                   _minutos 0517              _ENVIA_NIBBLE 2C0E  
    end_of_initialization 2A94                   strlen@a 0503                   strlen@s 0501  
       ESCRIBE_MENSAJE2@i 050A               ?_lcd_config 0501                 _TRISAbits 04C6  
               _TRISBbits 04C7  __end_of_ESCRIBE_MENSAJE2 2A64              _CURSOR_ONOFF 2BB0  
      CURSOR_ONOFF@estado 0504             __pidataCOMRAM 2C3A            __end_of_strlen 2B16  
           ??_CURSOR_HOME 0504       start_initialization 2A64                ivt0x8_base 0008  
       ENVIA_LCD_CMD@dato 0502                  ??_strlen 0503               __pbssCOMRAM 0512  
     __end_of_CURSOR_HOME 2C32                  ?___awdiv 0507                  ?___awmod 0501  
               _configuro 2BE0               __smallconst 2600                 _convierte 29C0  
                _CCP1_ISR 287A           convierte@numero 050F                  _LEER_LCD 28EE  
                _LATBbits 04BF                  _LATDbits 04C1                  _PIE3bits 04A1  
                _PIR3bits 04B1            POS_CURSOR@fila 0505                ?_configuro 0501  
  ESCRIBE_MENSAJE2@cadena 0505                ?_convierte 0501              ??_lcd_config 0505  
             _CURSOR_HOME 2C2A               _INTCON0bits 04D6                  __Hrparam 0000  
       ?_ESCRIBE_MENSAJE2 0505                  __Lrparam 0000              __Lsmallconst 2600  
      __end_of_lcd_config 2BB0        ??_ESCRIBE_MENSAJE2 0507                _ANSELAbits 0400  
              _ANSELBbits 0408                  __pivt0x8 0008                  __ptext10 2AA2  
                __ptext11 2B16                  __ptext12 2A1A                  __ptext13 2ADC  
                __ptext14 2B4A                  __ptext15 28EE                  __ptext16 2C0E  
                __ptext17 287A                _BORRAR_LCD 2C32                _LCD_CONFIG 2960  
              _ENVIA_CHAR 2B4A                  _segundos 0513                  isa$xinst 0000  
           _ENVIA_LCD_CMD 2B16               ??_configuro 0501               ??_convierte 050F  
                intlevel2 0000            ?_ENVIA_LCD_CMD 0501       ESCRIBE_MENSAJE2@tam 0509  
             ?_BORRAR_LCD 0501             ?_ENVIA_NIBBLE 0501                _POS_CURSOR 2AA2  
             ?_LCD_CONFIG 0501               ?_ENVIA_CHAR 0501         POS_CURSOR@columna 0504  
