

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Wed Jun 14 17:47:14 2023

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	18F57Q43
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	cstackBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=2
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1
    22                           	psect	text13,global,reloc=2,class=CODE,delta=1
    23                           	psect	text14,global,reloc=2,class=CODE,delta=1
    24                           	psect	text15,global,reloc=4,class=CODE,delta=1
    25                           	psect	text16,global,reloc=2,class=CODE,delta=1
    26                           	psect	text17,global,reloc=2,class=CODE,delta=1
    27                           	psect	text18,global,reloc=2,class=CODE,delta=1
    28                           	psect	text19,global,reloc=2,class=CODE,delta=1
    29                           	psect	text20,global,reloc=2,class=CODE,delta=1
    30                           	psect	text21,global,reloc=2,class=CODE,delta=1
    31                           	psect	text22,global,reloc=2,class=CODE,delta=1
    32                           	psect	text23,global,reloc=2,class=CODE,delta=1
    33                           	psect	text24,global,reloc=2,class=CODE,delta=1
    34                           	psect	text25,global,reloc=2,class=CODE,delta=1
    35                           	psect	text26,global,reloc=4,class=CODE,delta=1
    36                           	psect	text27,global,reloc=4,class=CODE,delta=1
    37                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
    38                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    39                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    40                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    41                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    42  0000                     
    43                           ; Version 2.40
    44                           ; Generated 08/12/2021 GMT
    45                           ; 
    46                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    47                           ; All rights reserved.
    48                           ; 
    49                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    50                           ; 
    51                           ; Redistribution and use in source and binary forms, with or without modification, are
    52                           ; permitted provided that the following conditions are met:
    53                           ; 
    54                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    55                           ;        conditions and the following disclaimer.
    56                           ; 
    57                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    58                           ;        of conditions and the following disclaimer in the documentation and/or other
    59                           ;        materials provided with the distribution. Publication is not required when
    60                           ;        this file is used in an embedded application.
    61                           ; 
    62                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    63                           ;        software without specific prior written permission.
    64                           ; 
    65                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    66                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    67                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    68                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    69                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    70                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    71                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    72                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    73                           ; 
    74                           ; 
    75                           ; Code-generator required, PIC18F57Q43 Definitions
    76                           ; 
    77                           ; SFR Addresses
    78  0000                     _U5CON2	set	761
    79  0000                     _U5CON1	set	760
    80  0000                     _OSCCON1	set	173
    81  0000                     _LATD	set	1217
    82  0000                     _LATEbits	set	1218
    83  0000                     _TRISAbits	set	1222
    84  0000                     _TRISD	set	1225
    85  0000                     _TRISFbits	set	1227
    86  0000                     _TRISE	set	1226
    87  0000                     _PORTD	set	1233
    88  0000                     _INTCON0bits	set	1238
    89  0000                     _OSCFRQ	set	177
    90  0000                     _OSCEN	set	179
    91  0000                     _RF0PPS	set	553
    92  0000                     _INT0PPS	set	574
    93  0000                     _ANSELAbits	set	1024
    94  0000                     _ANSELD	set	1048
    95  0000                     _ANSELE	set	1056
    96  0000                     _ANSELFbits	set	1064
    97  0000                     _PIE1bits	set	1183
    98  0000                     _TRISBbits	set	1223
    99  0000                     _ANSELBbits	set	1032
   100  0000                     _WPUBbits	set	1033
   101  0000                     _U5RXPPS	set	634
   102  0000                     _INT1PPS	set	575
   103  0000                     _PIE6bits	set	1188
   104  0000                     _PIE13bits	set	1195
   105  0000                     _U5RXB	set	749
   106  0000                     _U5TXB	set	751
   107  0000                     _U5CON0	set	759
   108  0000                     _U5BRGL	set	762
   109  0000                     _U5BRGH	set	763
   110  0000                     _U5ERRIRbits	set	766
   111  0000                     _PIR1bits	set	1199
   112  0000                     _PIR6bits	set	1204
   113  0000                     _LATAbits	set	1214
   114  0000                     _PIR13bits	set	1211
   115                           
   116                           	psect	smallconst
   117  002500                     __psmallconst:
   118                           	callstack 0
   119  002500  00                 	db	0
   120  002501                     STR_2:
   121  002501  4D                 	db	77	;'M'
   122  002502  69                 	db	105	;'i'
   123  002503  63                 	db	99	;'c'
   124  002504  72                 	db	114	;'r'
   125  002505  6F                 	db	111	;'o'
   126  002506  20                 	db	32
   127  002507  73                 	db	115	;'s'
   128  002508  65                 	db	101	;'e'
   129  002509  6D                 	db	109	;'m'
   130  00250A  61                 	db	97	;'a'
   131  00250B  6E                 	db	110	;'n'
   132  00250C  61                 	db	97	;'a'
   133  00250D  20                 	db	32
   134  00250E  31                 	db	49	;'1'
   135  00250F  33                 	db	51	;'3'
   136  002510  00                 	db	0
   137  002511                     STR_3:
   138  002511  6D                 	db	109	;'m'
   139  002512  61                 	db	97	;'a'
   140  002513  63                 	db	99	;'c'
   141  002514  68                 	db	104	;'h'
   142  002515  75                 	db	117	;'u'
   143  002516  63                 	db	99	;'c'
   144  002517  61                 	db	97	;'a'
   145  002518  73                 	db	115	;'s'
   146  002519  74                 	db	116	;'t'
   147  00251A  65                 	db	101	;'e'
   148  00251B  20                 	db	32
   149  00251C  49                 	db	73	;'I'
   150  00251D  00                 	db	0
   151  00251E                     STR_4:
   152  00251E  6D                 	db	109	;'m'
   153  00251F  61                 	db	97	;'a'
   154  002520  63                 	db	99	;'c'
   155  002521  68                 	db	104	;'h'
   156  002522  75                 	db	117	;'u'
   157  002523  63                 	db	99	;'c'
   158  002524  61                 	db	97	;'a'
   159  002525  73                 	db	115	;'s'
   160  002526  74                 	db	116	;'t'
   161  002527  65                 	db	101	;'e'
   162  002528  20                 	db	32
   163  002529  4F                 	db	79	;'O'
   164  00252A  00                 	db	0
   165  00252B                     STR_5:
   166  00252B  74                 	db	116	;'t'
   167  00252C  65                 	db	101	;'e'
   168  00252D  63                 	db	99	;'c'
   169  00252E  6C                 	db	108	;'l'
   170  00252F  61                 	db	97	;'a'
   171  002530  20                 	db	32
   172  002531  65                 	db	101	;'e'
   173  002532  72                 	db	114	;'r'
   174  002533  72                 	db	114	;'r'
   175  002534  61                 	db	97	;'a'
   176  002535  64                 	db	100	;'d'
   177  002536  61                 	db	97	;'a'
   178  002537  00                 	db	0
   179  002538                     STR_1:
   180  002538  48                 	db	72	;'H'
   181  002539  6F                 	db	111	;'o'
   182  00253A  6C                 	db	108	;'l'
   183  00253B  61                 	db	97	;'a'
   184  00253C  20                 	db	32
   185  00253D  4D                 	db	77	;'M'
   186  00253E  75                 	db	117	;'u'
   187  00253F  6E                 	db	110	;'n'
   188  002540  64                 	db	100	;'d'
   189  002541  6F                 	db	111	;'o'
   190  002542  21                 	db	33
   191  002543  00                 	db	0
   192  002544  00                 	db	0	; dummy byte at the end
   193  0000                     
   194                           ; #config settings
   195                           
   196                           	psect	cinit
   197  002CE4                     __pcinit:
   198                           	callstack 0
   199  002CE4                     start_initialization:
   200                           	callstack 0
   201  002CE4                     __initialization:
   202                           	callstack 0
   203                           
   204                           ;
   205                           ; Setup IVTBASE
   206                           ;
   207  002CE4  0104               	movlb	4
   208  002CE6  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
   209  002CE8  6F5D               	movwf	93,b
   210  002CEA  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
   211  002CEC  6F5E               	movwf	94,b
   212  002CEE  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
   213  002CF0  6F5F               	movwf	95,b
   214  002CF2                     end_of_initialization:
   215                           	callstack 0
   216  002CF2                     __end_of__initialization:
   217                           	callstack 0
   218  002CF2  0100               	movlb	0
   219  002CF4  EFFD  F012         	goto	_main	;jump to C main() function
   220                           
   221                           	psect	cstackBANK5
   222  000560                     __pcstackBANK5:
   223                           	callstack 0
   224  000560                     ?_strlen:
   225                           	callstack 0
   226  000560                     ENVIA_NIBBLE@dato:
   227                           	callstack 0
   228  000560                     LEER_LCD@aux:
   229                           	callstack 0
   230  000560                     strlen@s:
   231                           	callstack 0
   232                           
   233                           ; 2 bytes @ 0x0
   234  000560                     	ds	1
   235  000561                     ENVIA_CHAR@dato:
   236                           	callstack 0
   237  000561                     ENVIA_LCD_CMD@dato:
   238                           	callstack 0
   239                           
   240                           ; 1 bytes @ 0x1
   241  000561                     	ds	1
   242  000562                     ENVIA_CHAR@aux:
   243                           	callstack 0
   244  000562                     ENVIA_LCD_CMD@aux:
   245                           	callstack 0
   246  000562                     strlen@a:
   247                           	callstack 0
   248                           
   249                           ; 2 bytes @ 0x2
   250  000562                     	ds	1
   251  000563                     ??_LCD_CONFIG:
   252  000563                     POS_CURSOR@columna:
   253                           	callstack 0
   254  000563                     CURSOR_ONOFF@estado:
   255                           	callstack 0
   256                           
   257                           ; 1 bytes @ 0x3
   258  000563                     	ds	1
   259  000564                     ??_LCD_INIT:
   260  000564                     POS_CURSOR@fila:
   261                           	callstack 0
   262  000564                     ESCRIBE_MENSAJE2@cadena:
   263                           	callstack 0
   264                           
   265                           ; 2 bytes @ 0x4
   266  000564                     	ds	1
   267  000565                     
   268                           ; 1 bytes @ 0x5
   269  000565                     	ds	1
   270  000566                     ??_ESCRIBE_MENSAJE2:
   271                           
   272                           ; 1 bytes @ 0x6
   273  000566                     	ds	2
   274  000568                     ESCRIBE_MENSAJE2@tam:
   275                           	callstack 0
   276                           
   277                           ; 1 bytes @ 0x8
   278  000568                     	ds	1
   279  000569                     ESCRIBE_MENSAJE2@i:
   280                           	callstack 0
   281                           
   282                           ; 1 bytes @ 0x9
   283  000569                     	ds	1
   284  00056A                     ??_pantallazo:
   285                           
   286                           ; 1 bytes @ 0xA
   287  00056A                     	ds	2
   288  00056C                     ??_main:
   289                           
   290                           ; 1 bytes @ 0xC
   291  00056C                     	ds	1
   292  00056D                     main@x_var:
   293                           	callstack 0
   294                           
   295                           ; 2 bytes @ 0xD
   296  00056D                     	ds	2
   297                           
   298                           	psect	cstackCOMRAM
   299  000501                     __pcstackCOMRAM:
   300                           	callstack 0
   301  000501                     
   302                           ; 1 bytes @ 0x0
   303  000501                     	ds	12
   304  00050D                     ??_INT1_ISR:
   305                           
   306                           ; 1 bytes @ 0xC
   307  00050D                     	ds	4
   308  000511                     U5_Sendbyte@dato:
   309                           	callstack 0
   310                           
   311                           ; 1 bytes @ 0x10
   312  000511                     	ds	3
   313  000514                     
   314                           ; 1 bytes @ 0x13
   315  000514                     	ds	7
   316  00051B                     ??i2_pantallazo:
   317                           
   318                           ; 1 bytes @ 0x1A
   319  00051B                     	ds	2
   320  00051D                     ??_INT0_ISR:
   321                           
   322                           ; 1 bytes @ 0x1C
   323  00051D                     	ds	4
   324  000521                     ?i2_strlen:
   325                           	callstack 0
   326  000521                     i2ENVIA_NIBBLE@dato:
   327                           	callstack 0
   328  000521                     i2LEER_LCD@aux:
   329                           	callstack 0
   330  000521                     i2strlen@s:
   331                           	callstack 0
   332                           
   333                           ; 2 bytes @ 0x20
   334  000521                     	ds	1
   335  000522                     i2ENVIA_CHAR@dato:
   336                           	callstack 0
   337  000522                     i2ENVIA_LCD_CMD@dato:
   338                           	callstack 0
   339                           
   340                           ; 1 bytes @ 0x21
   341  000522                     	ds	1
   342  000523                     i2ENVIA_CHAR@aux:
   343                           	callstack 0
   344  000523                     i2ENVIA_LCD_CMD@aux:
   345                           	callstack 0
   346  000523                     i2strlen@a:
   347                           	callstack 0
   348                           
   349                           ; 2 bytes @ 0x22
   350  000523                     	ds	1
   351  000524                     i2POS_CURSOR@columna:
   352                           	callstack 0
   353                           
   354                           ; 1 bytes @ 0x23
   355  000524                     	ds	1
   356  000525                     i2POS_CURSOR@fila:
   357                           	callstack 0
   358  000525                     i2ESCRIBE_MENSAJE2@cadena:
   359                           	callstack 0
   360                           
   361                           ; 2 bytes @ 0x24
   362  000525                     	ds	2
   363  000527                     ??i2_ESCRIBE_MENSAJE2:
   364                           
   365                           ; 1 bytes @ 0x26
   366  000527                     	ds	2
   367  000529                     i2ESCRIBE_MENSAJE2@tam:
   368                           	callstack 0
   369                           
   370                           ; 1 bytes @ 0x28
   371  000529                     	ds	1
   372  00052A                     i2ESCRIBE_MENSAJE2@i:
   373                           	callstack 0
   374                           
   375                           ; 1 bytes @ 0x29
   376  00052A                     	ds	1
   377  00052B                     ??_U5RX_ISR:
   378                           
   379                           ; 1 bytes @ 0x2A
   380  00052B                     	ds	6
   381                           
   382 ;;
   383 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   384 ;;
   385 ;; *************** function _main *****************
   386 ;; Defined at:
   387 ;;		line 63 in file "maincode4.c"
   388 ;; Parameters:    Size  Location     Type
   389 ;;		None
   390 ;; Auto vars:     Size  Location     Type
   391 ;;  x_var           2   13[BANK5 ] unsigned int 
   392 ;; Return value:  Size  Location     Type
   393 ;;                  1    wreg      void 
   394 ;; Registers used:
   395 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   396 ;; Tracked objects:
   397 ;;		On entry : 0/0
   398 ;;		On exit  : 0/0
   399 ;;		Unchanged: 0/0
   400 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   401 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   402 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   403 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   404 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   405 ;;Total ram usage:        3 bytes
   406 ;; Hardware stack levels required when called: 10
   407 ;; This function calls:
   408 ;;		_configuro
   409 ;;		_pantallazo
   410 ;; This function is called by:
   411 ;;		Startup code after reset
   412 ;; This function uses a non-reentrant model
   413 ;;
   414                           
   415                           	psect	text0
   416  0025FA                     __ptext0:
   417                           	callstack 0
   418  0025FA                     _main:
   419                           	callstack 117
   420  0025FA                     
   421                           ;maincode4.c: 64:     configuro();
   422  0025FA  EC4C  F013         	call	_configuro	;wreg free
   423  0025FE                     
   424                           ;maincode4.c: 65:     pantallazo();
   425  0025FE  EC83  F014         	call	_pantallazo	;wreg free
   426  002602                     l1781:
   427                           
   428                           ;maincode4.c: 67:         unsigned int x_var;;maincode4.c: 68:         for(x_var=0;x_var
      +                          <100;x_var++){
   429  002602  0E00               	movlw	0
   430  002604  0105               	movlb	5	; () banked
   431  002606  6F6E               	movwf	(main@x_var+1)& (0+255),b
   432  002608  0E00               	movlw	0
   433  00260A  6F6D               	movwf	main@x_var& (0+255),b
   434  00260C                     l193:
   435                           
   436                           ; BSR set to: 5
   437                           ;maincode4.c: 69:             LATAbits.LATA0 = 1;
   438  00260C  80BE               	bsf	190,0,c	;volatile
   439  00260E                     
   440                           ; BSR set to: 5
   441                           ;maincode4.c: 70:             _delay((unsigned long)((700)*(4000000UL/4000000.0)));
   442  00260E  0EE9               	movlw	233
   443  002610                     u427:
   444  002610  2EE8               	decfsz	wreg,f,c
   445  002612  D7FE               	bra	u427
   446  002614  F000               	nop	
   447  002616                     
   448                           ;maincode4.c: 71:             LATAbits.LATA0 = 0;
   449  002616  90BE               	bcf	190,0,c	;volatile
   450                           
   451                           ;maincode4.c: 72:             _delay((unsigned long)((19300)*(4000000UL/4000000.0)));
   452  002618  0E1A               	movlw	26
   453  00261A  0105               	movlb	5	; () banked
   454  00261C  6F6C               	movwf	??_main& (0+255),b
   455  00261E  0E0F               	movlw	15
   456  002620                     u437:
   457  002620  2EE8               	decfsz	wreg,f,c
   458  002622  D7FE               	bra	u437
   459  002624  2F6C               	decfsz	??_main& (0+255),f,b
   460  002626  D7FC               	bra	u437
   461  002628                     
   462                           ;maincode4.c: 73:         }
   463  002628  0105               	movlb	5	; () banked
   464  00262A  4B6D               	infsnz	main@x_var& (0+255),f,b
   465  00262C  2B6E               	incf	(main@x_var+1)& (0+255),f,b
   466  00262E  516E               	movf	(main@x_var+1)& (0+255),w,b
   467  002630  E109               	bnz	u400
   468  002632  0E64               	movlw	100
   469  002634  5D6D               	subwf	main@x_var& (0+255),w,b
   470  002636  A0D8               	btfss	status,0,c
   471  002638  EF20  F013         	goto	u401
   472  00263C  EF22  F013         	goto	u400
   473  002640                     u401:
   474  002640  EF06  F013         	goto	l193
   475  002644                     u400:
   476  002644                     
   477                           ; BSR set to: 5
   478                           ;maincode4.c: 74:         for(x_var=0;x_var<100;x_var++){
   479  002644  0E00               	movlw	0
   480  002646  6F6E               	movwf	(main@x_var+1)& (0+255),b
   481  002648  0E00               	movlw	0
   482  00264A  6F6D               	movwf	main@x_var& (0+255),b
   483  00264C                     l195:
   484                           
   485                           ; BSR set to: 5
   486                           ;maincode4.c: 75:             LATAbits.LATA0 = 1;
   487  00264C  80BE               	bsf	190,0,c	;volatile
   488  00264E                     
   489                           ; BSR set to: 5
   490                           ;maincode4.c: 76:             _delay((unsigned long)((2300)*(4000000UL/4000000.0)));
   491  00264E  0E03               	movlw	3
   492  002650  0105               	movlb	5	; () banked
   493  002652  6F6C               	movwf	??_main& (0+255),b
   494  002654  0EFB               	movlw	251
   495  002656                     u447:
   496  002656  2EE8               	decfsz	wreg,f,c
   497  002658  D7FE               	bra	u447
   498  00265A  2F6C               	decfsz	??_main& (0+255),f,b
   499  00265C  D7FC               	bra	u447
   500  00265E  D000               	nop2	
   501  002660                     
   502                           ;maincode4.c: 77:             LATAbits.LATA0 = 0;
   503  002660  90BE               	bcf	190,0,c	;volatile
   504                           
   505                           ;maincode4.c: 78:             _delay((unsigned long)((17700)*(4000000UL/4000000.0)));
   506  002662  0E17               	movlw	23
   507  002664  0105               	movlb	5	; () banked
   508  002666  6F6C               	movwf	??_main& (0+255),b
   509  002668  0EFB               	movlw	251
   510  00266A                     u457:
   511  00266A  2EE8               	decfsz	wreg,f,c
   512  00266C  D7FE               	bra	u457
   513  00266E  2F6C               	decfsz	??_main& (0+255),f,b
   514  002670  D7FC               	bra	u457
   515  002672  D000               	nop2	
   516  002674                     
   517                           ;maincode4.c: 79:         }
   518  002674  0105               	movlb	5	; () banked
   519  002676  4B6D               	infsnz	main@x_var& (0+255),f,b
   520  002678  2B6E               	incf	(main@x_var+1)& (0+255),f,b
   521  00267A  516E               	movf	(main@x_var+1)& (0+255),w,b
   522  00267C  E109               	bnz	u410
   523  00267E  0E64               	movlw	100
   524  002680  5D6D               	subwf	main@x_var& (0+255),w,b
   525  002682  A0D8               	btfss	status,0,c
   526  002684  EF46  F013         	goto	u411
   527  002688  EF48  F013         	goto	u410
   528  00268C                     u411:
   529  00268C  EF26  F013         	goto	l195
   530  002690                     u410:
   531  002690  EF01  F013         	goto	l1781
   532  002694  EF81  F000         	goto	start
   533  002698                     __end_of_main:
   534                           	callstack 0
   535                           
   536 ;; *************** function _pantallazo *****************
   537 ;; Defined at:
   538 ;;		line 53 in file "maincode4.c"
   539 ;; Parameters:    Size  Location     Type
   540 ;;		None
   541 ;; Auto vars:     Size  Location     Type
   542 ;;		None
   543 ;; Return value:  Size  Location     Type
   544 ;;                  1    wreg      void 
   545 ;; Registers used:
   546 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   547 ;; Tracked objects:
   548 ;;		On entry : 0/0
   549 ;;		On exit  : 0/0
   550 ;;		Unchanged: 0/0
   551 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   552 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   553 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   554 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   555 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   556 ;;Total ram usage:        2 bytes
   557 ;; Hardware stack levels used: 1
   558 ;; Hardware stack levels required when called: 8
   559 ;; This function calls:
   560 ;;		_BORRAR_LCD
   561 ;;		_ESCRIBE_MENSAJE2
   562 ;;		_POS_CURSOR
   563 ;; This function is called by:
   564 ;;		_main
   565 ;; This function uses a non-reentrant model
   566 ;;
   567                           
   568                           	psect	text1
   569  002906                     __ptext1:
   570                           	callstack 0
   571  002906                     _pantallazo:
   572                           	callstack 118
   573  002906                     
   574                           ;maincode4.c: 54:     POS_CURSOR(1,0);
   575  002906  0E00               	movlw	0
   576  002908  0105               	movlb	5	; () banked
   577  00290A  6F63               	movwf	POS_CURSOR@columna& (0+255),b
   578  00290C  0E01               	movlw	1
   579  00290E  EC66  F015         	call	_POS_CURSOR
   580  002912                     
   581                           ;maincode4.c: 55:     ESCRIBE_MENSAJE2("Hola Mundo!");
   582  002912  0E38               	movlw	low STR_1
   583  002914  0105               	movlb	5	; () banked
   584  002916  6F64               	movwf	ESCRIBE_MENSAJE2@cadena& (0+255),b
   585  002918  0E25               	movlw	high STR_1
   586  00291A  6F65               	movwf	(ESCRIBE_MENSAJE2@cadena+1)& (0+255),b
   587  00291C  EC01  F014         	call	_ESCRIBE_MENSAJE2	;wreg free
   588  002920                     
   589                           ;maincode4.c: 56:     POS_CURSOR(2,0);
   590  002920  0E00               	movlw	0
   591  002922  0105               	movlb	5	; () banked
   592  002924  6F63               	movwf	POS_CURSOR@columna& (0+255),b
   593  002926  0E02               	movlw	2
   594  002928  EC66  F015         	call	_POS_CURSOR
   595                           
   596                           ;maincode4.c: 57:     ESCRIBE_MENSAJE2("Micro semana 13");
   597  00292C  0E01               	movlw	low STR_2
   598  00292E  0105               	movlb	5	; () banked
   599  002930  6F64               	movwf	ESCRIBE_MENSAJE2@cadena& (0+255),b
   600  002932  0E25               	movlw	high STR_2
   601  002934  6F65               	movwf	(ESCRIBE_MENSAJE2@cadena+1)& (0+255),b
   602  002936  EC01  F014         	call	_ESCRIBE_MENSAJE2	;wreg free
   603  00293A                     
   604                           ;maincode4.c: 58:     _delay((unsigned long)((2000)*(4000000UL/4000.0)));
   605  00293A  0E0B               	movlw	11
   606  00293C  0105               	movlb	5	; () banked
   607  00293E  6F6B               	movwf	(??_pantallazo+1)& (0+255),b
   608  002940  0E26               	movlw	38
   609  002942  6F6A               	movwf	??_pantallazo& (0+255),b
   610  002944  0E5D               	movlw	93
   611  002946                     u467:
   612  002946  2EE8               	decfsz	wreg,f,c
   613  002948  D7FE               	bra	u467
   614  00294A  2F6A               	decfsz	??_pantallazo& (0+255),f,b
   615  00294C  D7FC               	bra	u467
   616  00294E  2F6B               	decfsz	(??_pantallazo+1)& (0+255),f,b
   617  002950  D7FA               	bra	u467
   618  002952  D000               	nop2	
   619  002954                     
   620                           ;maincode4.c: 59:     BORRAR_LCD();
   621  002954  EC80  F016         	call	_BORRAR_LCD	;wreg free
   622  002958  0012               	return		;funcret
   623  00295A                     __end_of_pantallazo:
   624                           	callstack 0
   625                           
   626 ;; *************** function _POS_CURSOR *****************
   627 ;; Defined at:
   628 ;;		line 5 in file "LCD.c"
   629 ;; Parameters:    Size  Location     Type
   630 ;;  fila            1    wreg     unsigned char 
   631 ;;  columna         1    3[BANK5 ] unsigned char 
   632 ;; Auto vars:     Size  Location     Type
   633 ;;  fila            1    4[BANK5 ] unsigned char 
   634 ;; Return value:  Size  Location     Type
   635 ;;                  1    wreg      void 
   636 ;; Registers used:
   637 ;;		wreg, status,2, status,0, cstack
   638 ;; Tracked objects:
   639 ;;		On entry : 0/0
   640 ;;		On exit  : 0/0
   641 ;;		Unchanged: 0/0
   642 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   643 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   644 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   645 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   646 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   647 ;;Total ram usage:        2 bytes
   648 ;; Hardware stack levels used: 1
   649 ;; Hardware stack levels required when called: 7
   650 ;; This function calls:
   651 ;;		_ENVIA_LCD_CMD
   652 ;; This function is called by:
   653 ;;		_pantallazo
   654 ;; This function uses a non-reentrant model
   655 ;;
   656                           
   657                           	psect	text2
   658  002ACC                     __ptext2:
   659                           	callstack 0
   660  002ACC                     _POS_CURSOR:
   661                           	callstack 118
   662                           
   663                           ;incstack = 0
   664                           ;POS_CURSOR@fila stored from wreg
   665  002ACC  0105               	movlb	5	; () banked
   666  002ACE  6F64               	movwf	POS_CURSOR@fila& (0+255),b
   667  002AD0                     
   668                           ;LCD.c: 5: void POS_CURSOR(unsigned char fila,unsigned char columna);LCD.c: 6: {;LCD.c: 
      +                          7:  if(fila == 1)
   669  002AD0  0105               	movlb	5	; () banked
   670  002AD2  0564               	decf	POS_CURSOR@fila& (0+255),w,b
   671  002AD4  A4D8               	btfss	status,2,c
   672  002AD6  EF6F  F015         	goto	u271
   673  002ADA  EF71  F015         	goto	u270
   674  002ADE                     u271:
   675  002ADE  EF77  F015         	goto	l1571
   676  002AE2                     u270:
   677  002AE2                     
   678                           ; BSR set to: 5
   679                           ;LCD.c: 8:  {;LCD.c: 9:   ENVIA_LCD_CMD(0x80+columna);
   680  002AE2  5163               	movf	POS_CURSOR@columna& (0+255),w,b
   681  002AE4  0F80               	addlw	128
   682  002AE6  ECA2  F015         	call	_ENVIA_LCD_CMD
   683                           
   684                           ;LCD.c: 10:  }
   685  002AEA  EF84  F015         	goto	l26
   686  002AEE                     l1571:
   687                           
   688                           ; BSR set to: 5
   689  002AEE  0E02               	movlw	2
   690  002AF0  1964               	xorwf	POS_CURSOR@fila& (0+255),w,b
   691  002AF2  A4D8               	btfss	status,2,c
   692  002AF4  EF7E  F015         	goto	u281
   693  002AF8  EF80  F015         	goto	u280
   694  002AFC                     u281:
   695  002AFC  EF84  F015         	goto	l26
   696  002B00                     u280:
   697  002B00                     
   698                           ; BSR set to: 5
   699                           ;LCD.c: 12:  {;LCD.c: 13:   ENVIA_LCD_CMD(0xC0+columna);
   700  002B00  5163               	movf	POS_CURSOR@columna& (0+255),w,b
   701  002B02  0FC0               	addlw	192
   702  002B04  ECA2  F015         	call	_ENVIA_LCD_CMD
   703  002B08                     l26:
   704  002B08  0012               	return		;funcret
   705  002B0A                     __end_of_POS_CURSOR:
   706                           	callstack 0
   707                           
   708 ;; *************** function _ESCRIBE_MENSAJE2 *****************
   709 ;; Defined at:
   710 ;;		line 69 in file "LCD.c"
   711 ;; Parameters:    Size  Location     Type
   712 ;;  cadena          2    4[BANK5 ] PTR const unsigned char 
   713 ;;		 -> STR_5(13), STR_4(13), STR_3(13), STR_2(16), 
   714 ;;		 -> STR_1(12), 
   715 ;; Auto vars:     Size  Location     Type
   716 ;;  i               1    9[BANK5 ] unsigned char 
   717 ;;  tam             1    8[BANK5 ] unsigned char 
   718 ;; Return value:  Size  Location     Type
   719 ;;                  1    wreg      void 
   720 ;; Registers used:
   721 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   722 ;; Tracked objects:
   723 ;;		On entry : 0/0
   724 ;;		On exit  : 0/0
   725 ;;		Unchanged: 0/0
   726 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   727 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   728 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   729 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   730 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   731 ;;Total ram usage:        6 bytes
   732 ;; Hardware stack levels used: 1
   733 ;; Hardware stack levels required when called: 7
   734 ;; This function calls:
   735 ;;		_ENVIA_CHAR
   736 ;;		_strlen
   737 ;; This function is called by:
   738 ;;		_pantallazo
   739 ;; This function uses a non-reentrant model
   740 ;;
   741                           
   742                           	psect	text3
   743  002802                     __ptext3:
   744                           	callstack 0
   745  002802                     _ESCRIBE_MENSAJE2:
   746                           	callstack 118
   747  002802                     
   748                           ;LCD.c: 69: void ESCRIBE_MENSAJE2(const char *cadena);LCD.c: 70: {;LCD.c: 71:     unsign
      +                          ed char tam;;LCD.c: 72:     tam = strlen(cadena);
   749  002802  C564  F560         	movff	ESCRIBE_MENSAJE2@cadena,strlen@s
   750  002806  C565  F561         	movff	ESCRIBE_MENSAJE2@cadena+1,strlen@s+1
   751  00280A  EC22  F015         	call	_strlen	;wreg free
   752  00280E  0105               	movlb	5	; () banked
   753  002810  5160               	movf	?_strlen& (0+255),w,b
   754  002812  6F68               	movwf	ESCRIBE_MENSAJE2@tam& (0+255),b
   755  002814                     
   756                           ; BSR set to: 5
   757                           ;LCD.c: 74:  for(i = 0; i<tam; i++)
   758  002814  0E00               	movlw	0
   759  002816  6F69               	movwf	ESCRIBE_MENSAJE2@i& (0+255),b
   760  002818  EF22  F014         	goto	l1585
   761  00281C                     l1581:
   762                           
   763                           ; BSR set to: 5
   764                           ;LCD.c: 75:  {;LCD.c: 76:   ENVIA_CHAR(cadena[i]);
   765  00281C  5169               	movf	ESCRIBE_MENSAJE2@i& (0+255),w,b
   766  00281E  2564               	addwf	ESCRIBE_MENSAJE2@cadena& (0+255),w,b
   767  002820  6F66               	movwf	??_ESCRIBE_MENSAJE2& (0+255),b
   768  002822  0E00               	movlw	0
   769  002824  2165               	addwfc	(ESCRIBE_MENSAJE2@cadena+1)& (0+255),w,b
   770  002826  6F67               	movwf	(??_ESCRIBE_MENSAJE2+1)& (0+255),b
   771  002828  0061  F598  F4F6   	movff	??_ESCRIBE_MENSAJE2,tblptrl
   772  00282E  0061  F59C  F4F7   	movff	??_ESCRIBE_MENSAJE2+1,tblptrh
   773  002834                     	if	0	;tblptru may be non-zero
   774  002834                     	endif
   775  002834                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
   776  002834  0E00               	movlw	low (__mediumconst shr (0+16))
   777  002836  6EF8               	movwf	tblptru,c
   778  002838                     	endif
   779  002838  0008               	tblrd		*
   780  00283A  50F5               	movf	tablat,w,c
   781  00283C  EC85  F015         	call	_ENVIA_CHAR
   782  002840                     
   783                           ;LCD.c: 77:  }
   784  002840  0105               	movlb	5	; () banked
   785  002842  2B69               	incf	ESCRIBE_MENSAJE2@i& (0+255),f,b
   786  002844                     l1585:
   787                           
   788                           ; BSR set to: 5
   789  002844  5168               	movf	ESCRIBE_MENSAJE2@tam& (0+255),w,b
   790  002846  5D69               	subwf	ESCRIBE_MENSAJE2@i& (0+255),w,b
   791  002848  A0D8               	btfss	status,0,c
   792  00284A  EF29  F014         	goto	u291
   793  00284E  EF2B  F014         	goto	u290
   794  002852                     u291:
   795  002852  EF0E  F014         	goto	l1581
   796  002856                     u290:
   797  002856                     
   798                           ; BSR set to: 5
   799  002856  0012               	return		;funcret
   800  002858                     __end_of_ESCRIBE_MENSAJE2:
   801                           	callstack 0
   802                           
   803 ;; *************** function _strlen *****************
   804 ;; Defined at:
   805 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\strlen.c"
   806 ;; Parameters:    Size  Location     Type
   807 ;;  s               2    0[BANK5 ] PTR const unsigned char 
   808 ;;		 -> STR_5(13), STR_4(13), STR_3(13), STR_2(16), 
   809 ;;		 -> STR_1(12), 
   810 ;; Auto vars:     Size  Location     Type
   811 ;;  a               2    2[BANK5 ] PTR const unsigned char 
   812 ;;		 -> STR_5(13), STR_4(13), STR_3(13), STR_2(16), 
   813 ;;		 -> STR_1(12), 
   814 ;; Return value:  Size  Location     Type
   815 ;;                  2    0[BANK5 ] unsigned int 
   816 ;; Registers used:
   817 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
   818 ;; Tracked objects:
   819 ;;		On entry : 0/0
   820 ;;		On exit  : 0/0
   821 ;;		Unchanged: 0/0
   822 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   823 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   824 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   825 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   826 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   827 ;;Total ram usage:        4 bytes
   828 ;; Hardware stack levels used: 1
   829 ;; Hardware stack levels required when called: 5
   830 ;; This function calls:
   831 ;;		Nothing
   832 ;; This function is called by:
   833 ;;		_ESCRIBE_MENSAJE2
   834 ;; This function uses a non-reentrant model
   835 ;;
   836                           
   837                           	psect	text4
   838  002A44                     __ptext4:
   839                           	callstack 0
   840  002A44                     _strlen:
   841                           	callstack 119
   842  002A44  C560  F562         	movff	strlen@s,strlen@a
   843  002A48  C561  F563         	movff	strlen@s+1,strlen@a+1
   844  002A4C  EF2B  F015         	goto	l1491
   845  002A50                     l1489:
   846  002A50  0105               	movlb	5	; () banked
   847  002A52  4B60               	infsnz	strlen@s& (0+255),f,b
   848  002A54  2B61               	incf	(strlen@s+1)& (0+255),f,b
   849  002A56                     l1491:
   850  002A56  0061  F580  F4F6   	movff	strlen@s,tblptrl
   851  002A5C  0061  F584  F4F7   	movff	strlen@s+1,tblptrh
   852  002A62                     	if	0	;tblptru may be non-zero
   853  002A62                     	endif
   854  002A62                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
   855  002A62  0E00               	movlw	low (__mediumconst shr (0+16))
   856  002A64  6EF8               	movwf	tblptru,c
   857  002A66                     	endif
   858  002A66  0008               	tblrd		*
   859  002A68  50F5               	movf	tablat,w,c
   860  002A6A  0900               	iorlw	0
   861  002A6C  A4D8               	btfss	status,2,c
   862  002A6E  EF3B  F015         	goto	u251
   863  002A72  EF3D  F015         	goto	u250
   864  002A76                     u251:
   865  002A76  EF28  F015         	goto	l1489
   866  002A7A                     u250:
   867  002A7A  0105               	movlb	5	; () banked
   868  002A7C  5162               	movf	strlen@a& (0+255),w,b
   869  002A7E  5D60               	subwf	strlen@s& (0+255),w,b
   870  002A80  6F60               	movwf	?_strlen& (0+255),b
   871  002A82  5163               	movf	(strlen@a+1)& (0+255),w,b
   872  002A84  5961               	subwfb	(strlen@s+1)& (0+255),w,b
   873  002A86  6F61               	movwf	(?_strlen+1)& (0+255),b
   874  002A88                     
   875                           ; BSR set to: 5
   876  002A88  0012               	return		;funcret
   877  002A8A                     __end_of_strlen:
   878                           	callstack 0
   879                           
   880 ;; *************** function _ENVIA_CHAR *****************
   881 ;; Defined at:
   882 ;;		line 80 in file "LCD.c"
   883 ;; Parameters:    Size  Location     Type
   884 ;;  dato            1    wreg     unsigned char 
   885 ;; Auto vars:     Size  Location     Type
   886 ;;  dato            1    1[BANK5 ] unsigned char 
   887 ;;  aux             1    2[BANK5 ] unsigned char 
   888 ;; Return value:  Size  Location     Type
   889 ;;                  1    wreg      void 
   890 ;; Registers used:
   891 ;;		wreg, status,2, status,0, cstack
   892 ;; Tracked objects:
   893 ;;		On entry : 0/0
   894 ;;		On exit  : 0/0
   895 ;;		Unchanged: 0/0
   896 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   897 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   898 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   899 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   900 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   901 ;;Total ram usage:        2 bytes
   902 ;; Hardware stack levels used: 1
   903 ;; Hardware stack levels required when called: 6
   904 ;; This function calls:
   905 ;;		_ENVIA_NIBBLE
   906 ;;		_LEER_LCD
   907 ;; This function is called by:
   908 ;;		_ESCRIBE_MENSAJE2
   909 ;;		_ESCRIBE_MENSAJE
   910 ;;		_GENERACARACTER
   911 ;; This function uses a non-reentrant model
   912 ;;
   913                           
   914                           	psect	text5
   915  002B0A                     __ptext5:
   916                           	callstack 0
   917  002B0A                     _ENVIA_CHAR:
   918                           	callstack 118
   919                           
   920                           ; BSR set to: 5
   921                           ;incstack = 0
   922                           ;ENVIA_CHAR@dato stored from wreg
   923  002B0A  0105               	movlb	5	; () banked
   924  002B0C  6F61               	movwf	ENVIA_CHAR@dato& (0+255),b
   925  002B0E                     
   926                           ;LCD.c: 80: void ENVIA_CHAR(unsigned char dato);LCD.c: 81: {;LCD.c: 82:  unsigned char a
      +                          ux;;LCD.c: 83:  LATEbits.LATE0 = 1;
   927  002B0E  80C2               	bsf	194,0,c	;volatile
   928  002B10                     
   929                           ;LCD.c: 84:  LEER_LCD();
   930  002B10  EC8A  F013         	call	_LEER_LCD	;wreg free
   931  002B14                     
   932                           ;LCD.c: 85:  TRISD = 0x00;
   933  002B14  0E00               	movlw	0
   934  002B16  6EC9               	movwf	201,c	;volatile
   935  002B18                     
   936                           ;LCD.c: 86:     _delay((unsigned long)((100)*(4000000UL/4000000.0)));
   937  002B18  0E21               	movlw	33
   938  002B1A                     u477:
   939  002B1A  2EE8               	decfsz	wreg,f,c
   940  002B1C  D7FE               	bra	u477
   941  002B1E  F000               	nop	
   942  002B20                     
   943                           ;LCD.c: 87:  LATEbits.LATE1 = 0;
   944  002B20  92C2               	bcf	194,1,c	;volatile
   945  002B22                     
   946                           ;LCD.c: 88:  LATEbits.LATE2 = 0;
   947  002B22  94C2               	bcf	194,2,c	;volatile
   948  002B24                     
   949                           ;LCD.c: 89:  LATEbits.LATE0 = 1;
   950  002B24  80C2               	bsf	194,0,c	;volatile
   951  002B26                     
   952                           ;LCD.c: 90:  aux = dato & 0xF0;
   953  002B26  0105               	movlb	5	; () banked
   954  002B28  5161               	movf	ENVIA_CHAR@dato& (0+255),w,b
   955  002B2A  0BF0               	andlw	240
   956  002B2C  6F62               	movwf	ENVIA_CHAR@aux& (0+255),b
   957  002B2E                     
   958                           ; BSR set to: 5
   959                           ;LCD.c: 91:  ENVIA_NIBBLE(aux);
   960  002B2E  5162               	movf	ENVIA_CHAR@aux& (0+255),w,b
   961  002B30  EC47  F016         	call	_ENVIA_NIBBLE
   962  002B34                     
   963                           ;LCD.c: 92:  aux = dato << 4;
   964  002B34  0105               	movlb	5	; () banked
   965  002B36  3961               	swapf	ENVIA_CHAR@dato& (0+255),w,b
   966  002B38  0BF0               	andlw	240
   967  002B3A  6F62               	movwf	ENVIA_CHAR@aux& (0+255),b
   968  002B3C                     
   969                           ; BSR set to: 5
   970                           ;LCD.c: 93:  ENVIA_NIBBLE(aux);
   971  002B3C  5162               	movf	ENVIA_CHAR@aux& (0+255),w,b
   972  002B3E  EC47  F016         	call	_ENVIA_NIBBLE
   973  002B42  0012               	return		;funcret
   974  002B44                     __end_of_ENVIA_CHAR:
   975                           	callstack 0
   976                           
   977 ;; *************** function _configuro *****************
   978 ;; Defined at:
   979 ;;		line 6 in file "maincode4.c"
   980 ;; Parameters:    Size  Location     Type
   981 ;;		None
   982 ;; Auto vars:     Size  Location     Type
   983 ;;		None
   984 ;; Return value:  Size  Location     Type
   985 ;;                  1    wreg      void 
   986 ;; Registers used:
   987 ;;		wreg, status,2, status,0, cstack
   988 ;; Tracked objects:
   989 ;;		On entry : 0/0
   990 ;;		On exit  : 0/0
   991 ;;		Unchanged: 0/0
   992 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   993 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   994 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   995 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   996 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   997 ;;Total ram usage:        0 bytes
   998 ;; Hardware stack levels used: 1
   999 ;; Hardware stack levels required when called: 9
  1000 ;; This function calls:
  1001 ;;		_LCD_INIT
  1002 ;; This function is called by:
  1003 ;;		_main
  1004 ;; This function uses a non-reentrant model
  1005 ;;
  1006                           
  1007                           	psect	text6
  1008  002698                     __ptext6:
  1009                           	callstack 0
  1010  002698                     _configuro:
  1011                           	callstack 117
  1012  002698                     
  1013                           ;maincode4.c: 7:     OSCCON1 = 0x60;
  1014  002698  0E60               	movlw	96
  1015  00269A  0100               	movlb	0	; () banked
  1016  00269C  6FAD               	movwf	173,b	;volatile
  1017                           
  1018                           ;maincode4.c: 8:     OSCFRQ = 0x02;
  1019  00269E  0E02               	movlw	2
  1020  0026A0  6FB1               	movwf	177,b	;volatile
  1021                           
  1022                           ;maincode4.c: 9:     OSCEN = 0x40;
  1023  0026A2  0E40               	movlw	64
  1024  0026A4  6FB3               	movwf	179,b	;volatile
  1025                           
  1026                           ;maincode4.c: 10:     TRISE = 0xF8;
  1027  0026A6  0EF8               	movlw	248
  1028  0026A8  6ECA               	movwf	202,c	;volatile
  1029                           
  1030                           ;maincode4.c: 11:     ANSELE = 0xF8;
  1031  0026AA  0EF8               	movlw	248
  1032  0026AC  0104               	movlb	4	; () banked
  1033  0026AE  6F20               	movwf	32,b	;volatile
  1034                           
  1035                           ;maincode4.c: 12:     TRISD = 0x0F;
  1036  0026B0  0E0F               	movlw	15
  1037  0026B2  6EC9               	movwf	201,c	;volatile
  1038                           
  1039                           ;maincode4.c: 13:     ANSELD = 0x0F;
  1040  0026B4  0E0F               	movlw	15
  1041  0026B6  6F18               	movwf	24,b	;volatile
  1042  0026B8                     
  1043                           ; BSR set to: 4
  1044                           ;maincode4.c: 15:     TRISAbits.TRISA0 = 0;
  1045  0026B8  90C6               	bcf	198,0,c	;volatile
  1046  0026BA                     
  1047                           ; BSR set to: 4
  1048                           ;maincode4.c: 16:     ANSELAbits.ANSELA0 = 0;
  1049  0026BA  9100               	bcf	0,0,b	;volatile
  1050  0026BC                     
  1051                           ; BSR set to: 4
  1052                           ;maincode4.c: 18:     TRISBbits.TRISB0 = 1;
  1053  0026BC  80C7               	bsf	199,0,c	;volatile
  1054  0026BE                     
  1055                           ; BSR set to: 4
  1056                           ;maincode4.c: 19:     ANSELBbits.ANSELB0 = 0;
  1057  0026BE  9108               	bcf	8,0,b	;volatile
  1058  0026C0                     
  1059                           ; BSR set to: 4
  1060                           ;maincode4.c: 20:     WPUBbits.WPUB0 = 1;
  1061  0026C0  8109               	bsf	9,0,b	;volatile
  1062  0026C2                     
  1063                           ; BSR set to: 4
  1064                           ;maincode4.c: 21:     INTCON0bits.INT0EDG = 0;
  1065  0026C2  90D6               	bcf	214,0,c	;volatile
  1066                           
  1067                           ;maincode4.c: 22:     INT0PPS = 0x08;
  1068  0026C4  0E08               	movlw	8
  1069  0026C6  0102               	movlb	2	; () banked
  1070  0026C8  6F3E               	movwf	62,b	;volatile
  1071  0026CA                     
  1072                           ; BSR set to: 2
  1073                           ;maincode4.c: 23:     PIE1bits.INT0IE = 1;
  1074  0026CA  809F               	bsf	159,0,c	;volatile
  1075  0026CC                     
  1076                           ; BSR set to: 2
  1077                           ;maincode4.c: 25:     TRISBbits.TRISB4 = 1;
  1078  0026CC  88C7               	bsf	199,4,c	;volatile
  1079  0026CE                     
  1080                           ; BSR set to: 2
  1081                           ;maincode4.c: 26:     ANSELBbits.ANSELB4 = 0;
  1082  0026CE  0104               	movlb	4	; () banked
  1083  0026D0  9908               	bcf	8,4,b	;volatile
  1084  0026D2                     
  1085                           ; BSR set to: 4
  1086                           ;maincode4.c: 27:     WPUBbits.WPUB4 = 1;
  1087  0026D2  8909               	bsf	9,4,b	;volatile
  1088  0026D4                     
  1089                           ; BSR set to: 4
  1090                           ;maincode4.c: 28:     INTCON0bits.INT1EDG = 0;
  1091  0026D4  92D6               	bcf	214,1,c	;volatile
  1092                           
  1093                           ;maincode4.c: 29:     INT1PPS = 0x0C;
  1094  0026D6  0E0C               	movlw	12
  1095  0026D8  0102               	movlb	2	; () banked
  1096  0026DA  6F3F               	movwf	63,b	;volatile
  1097  0026DC                     
  1098                           ; BSR set to: 2
  1099                           ;maincode4.c: 30:     PIE6bits.INT1IE = 1;
  1100  0026DC  80A4               	bsf	164,0,c	;volatile
  1101  0026DE                     
  1102                           ; BSR set to: 2
  1103                           ;maincode4.c: 31:     INTCON0bits.GIE = 1;
  1104  0026DE  8ED6               	bsf	214,7,c	;volatile
  1105  0026E0                     
  1106                           ; BSR set to: 2
  1107                           ;maincode4.c: 33:     TRISFbits.TRISF0 = 0;
  1108  0026E0  90CB               	bcf	203,0,c	;volatile
  1109  0026E2                     
  1110                           ; BSR set to: 2
  1111                           ;maincode4.c: 34:     ANSELFbits.ANSELF0 = 0;
  1112  0026E2  0104               	movlb	4	; () banked
  1113  0026E4  9128               	bcf	40,0,b	;volatile
  1114                           
  1115                           ;maincode4.c: 35:     RF0PPS = 0x2C;
  1116  0026E6  0E2C               	movlw	44
  1117  0026E8  0102               	movlb	2	; () banked
  1118  0026EA  6F29               	movwf	41,b	;volatile
  1119  0026EC                     
  1120                           ; BSR set to: 2
  1121                           ;maincode4.c: 36:     TRISFbits.TRISF1 = 1;
  1122  0026EC  82CB               	bsf	203,1,c	;volatile
  1123  0026EE                     
  1124                           ; BSR set to: 2
  1125                           ;maincode4.c: 37:     ANSELFbits.ANSELF1 = 0;
  1126  0026EE  0104               	movlb	4	; () banked
  1127  0026F0  9328               	bcf	40,1,b	;volatile
  1128                           
  1129                           ;maincode4.c: 38:     U5RXPPS = 0x29;
  1130  0026F2  0E29               	movlw	41
  1131  0026F4  0102               	movlb	2	; () banked
  1132  0026F6  6F7A               	movwf	122,b	;volatile
  1133                           
  1134                           ;maincode4.c: 39:     U5BRGH = 0;
  1135  0026F8  0E00               	movlw	0
  1136  0026FA  6FFB               	movwf	251,b	;volatile
  1137                           
  1138                           ;maincode4.c: 40:     U5BRGL = 25;
  1139  0026FC  0E19               	movlw	25
  1140  0026FE  6FFA               	movwf	250,b	;volatile
  1141                           
  1142                           ;maincode4.c: 41:     U5CON0 = 0x30;
  1143  002700  0E30               	movlw	48
  1144  002702  6FF7               	movwf	247,b	;volatile
  1145                           
  1146                           ;maincode4.c: 42:     U5CON1 = 0x80;
  1147  002704  0E80               	movlw	128
  1148  002706  6FF8               	movwf	248,b	;volatile
  1149                           
  1150                           ;maincode4.c: 43:     U5CON2 = 0x00;
  1151  002708  0E00               	movlw	0
  1152  00270A  6FF9               	movwf	249,b	;volatile
  1153  00270C                     
  1154                           ; BSR set to: 2
  1155                           ;maincode4.c: 44:     PIE13bits.U5RXIE = 1;
  1156  00270C  80AB               	bsf	171,0,c	;volatile
  1157  00270E                     
  1158                           ; BSR set to: 2
  1159                           ;maincode4.c: 45:     LCD_INIT();
  1160  00270E  ECDC  F015         	call	_LCD_INIT	;wreg free
  1161  002712  0012               	return		;funcret
  1162  002714                     __end_of_configuro:
  1163                           	callstack 0
  1164                           
  1165 ;; *************** function _LCD_INIT *****************
  1166 ;; Defined at:
  1167 ;;		line 184 in file "LCD.c"
  1168 ;; Parameters:    Size  Location     Type
  1169 ;;		None
  1170 ;; Auto vars:     Size  Location     Type
  1171 ;;		None
  1172 ;; Return value:  Size  Location     Type
  1173 ;;                  1    wreg      void 
  1174 ;; Registers used:
  1175 ;;		wreg, status,2, status,0, cstack
  1176 ;; Tracked objects:
  1177 ;;		On entry : 0/0
  1178 ;;		On exit  : 0/0
  1179 ;;		Unchanged: 0/0
  1180 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1181 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1182 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1183 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1184 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1185 ;;Total ram usage:        1 bytes
  1186 ;; Hardware stack levels used: 1
  1187 ;; Hardware stack levels required when called: 8
  1188 ;; This function calls:
  1189 ;;		_BORRAR_LCD
  1190 ;;		_CURSOR_HOME
  1191 ;;		_CURSOR_ONOFF
  1192 ;;		_LCD_CONFIG
  1193 ;; This function is called by:
  1194 ;;		_configuro
  1195 ;; This function uses a non-reentrant model
  1196 ;;
  1197                           
  1198                           	psect	text7
  1199  002BB8                     __ptext7:
  1200                           	callstack 0
  1201  002BB8                     _LCD_INIT:
  1202                           	callstack 117
  1203  002BB8                     
  1204                           ;LCD.c: 185:     _delay((unsigned long)((15)*(4000000UL/4000.0)));
  1205  002BB8  0E14               	movlw	20
  1206  002BBA  0105               	movlb	5	; () banked
  1207  002BBC  6F64               	movwf	??_LCD_INIT& (0+255),b
  1208  002BBE  0E79               	movlw	121
  1209  002BC0                     u487:
  1210  002BC0  2EE8               	decfsz	wreg,f,c
  1211  002BC2  D7FE               	bra	u487
  1212  002BC4  2F64               	decfsz	??_LCD_INIT& (0+255),f,b
  1213  002BC6  D7FC               	bra	u487
  1214  002BC8  D000               	nop2	
  1215  002BCA                     
  1216                           ;LCD.c: 186:     LCD_CONFIG();
  1217  002BCA  EC2C  F014         	call	_LCD_CONFIG	;wreg free
  1218  002BCE                     
  1219                           ;LCD.c: 187:     _delay((unsigned long)((15)*(4000000UL/4000.0)));
  1220  002BCE  0E14               	movlw	20
  1221  002BD0  0105               	movlb	5	; () banked
  1222  002BD2  6F64               	movwf	??_LCD_INIT& (0+255),b
  1223  002BD4  0E79               	movlw	121
  1224  002BD6                     u497:
  1225  002BD6  2EE8               	decfsz	wreg,f,c
  1226  002BD8  D7FE               	bra	u497
  1227  002BDA  2F64               	decfsz	??_LCD_INIT& (0+255),f,b
  1228  002BDC  D7FC               	bra	u497
  1229  002BDE  D000               	nop2	
  1230                           
  1231                           ;LCD.c: 188:     BORRAR_LCD();
  1232  002BE0  EC80  F016         	call	_BORRAR_LCD	;wreg free
  1233                           
  1234                           ;LCD.c: 189:     CURSOR_HOME();
  1235  002BE4  EC7C  F016         	call	_CURSOR_HOME	;wreg free
  1236                           
  1237                           ;LCD.c: 190:     CURSOR_ONOFF(1);
  1238  002BE8  0E01               	movlw	1
  1239  002BEA  ECF8  F015         	call	_CURSOR_ONOFF
  1240  002BEE  0012               	return		;funcret
  1241  002BF0                     __end_of_LCD_INIT:
  1242                           	callstack 0
  1243                           
  1244 ;; *************** function _LCD_CONFIG *****************
  1245 ;; Defined at:
  1246 ;;		line 101 in file "LCD.c"
  1247 ;; Parameters:    Size  Location     Type
  1248 ;;		None
  1249 ;; Auto vars:     Size  Location     Type
  1250 ;;		None
  1251 ;; Return value:  Size  Location     Type
  1252 ;;                  1    wreg      void 
  1253 ;; Registers used:
  1254 ;;		wreg, status,2, status,0, cstack
  1255 ;; Tracked objects:
  1256 ;;		On entry : 0/0
  1257 ;;		On exit  : 0/0
  1258 ;;		Unchanged: 0/0
  1259 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1260 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1261 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1262 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1263 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1264 ;;Total ram usage:        1 bytes
  1265 ;; Hardware stack levels used: 1
  1266 ;; Hardware stack levels required when called: 7
  1267 ;; This function calls:
  1268 ;;		_ENVIA_LCD_CMD
  1269 ;;		_ENVIA_NIBBLE
  1270 ;; This function is called by:
  1271 ;;		_LCD_INIT
  1272 ;; This function uses a non-reentrant model
  1273 ;;
  1274                           
  1275                           	psect	text8
  1276  002858                     __ptext8:
  1277                           	callstack 0
  1278  002858                     _LCD_CONFIG:
  1279                           	callstack 117
  1280  002858                     
  1281                           ;LCD.c: 103:  LATEbits.LATE0 = 0;
  1282  002858  90C2               	bcf	194,0,c	;volatile
  1283                           
  1284                           ;LCD.c: 104:  LATEbits.LATE1 = 0;
  1285  00285A  92C2               	bcf	194,1,c	;volatile
  1286  00285C                     
  1287                           ;LCD.c: 105:  ENVIA_NIBBLE(0x30);
  1288  00285C  0E30               	movlw	48
  1289  00285E  EC47  F016         	call	_ENVIA_NIBBLE
  1290  002862                     
  1291                           ;LCD.c: 106:     _delay((unsigned long)((2)*(4000000UL/4000.0)));
  1292  002862  0E03               	movlw	3
  1293  002864  0105               	movlb	5	; () banked
  1294  002866  6F63               	movwf	??_LCD_CONFIG& (0+255),b
  1295  002868  0E97               	movlw	151
  1296  00286A                     u507:
  1297  00286A  2EE8               	decfsz	wreg,f,c
  1298  00286C  D7FE               	bra	u507
  1299  00286E  2F63               	decfsz	??_LCD_CONFIG& (0+255),f,b
  1300  002870  D7FC               	bra	u507
  1301  002872  D000               	nop2	
  1302  002874                     
  1303                           ;LCD.c: 107:  ENVIA_NIBBLE(0x30);
  1304  002874  0E30               	movlw	48
  1305  002876  EC47  F016         	call	_ENVIA_NIBBLE
  1306                           
  1307                           ;LCD.c: 108:     _delay((unsigned long)((100)*(4000000UL/4000000.0)));
  1308  00287A  0E21               	movlw	33
  1309  00287C                     u517:
  1310  00287C  2EE8               	decfsz	wreg,f,c
  1311  00287E  D7FE               	bra	u517
  1312  002880  F000               	nop	
  1313  002882                     
  1314                           ;LCD.c: 109:     ENVIA_NIBBLE(0x30);
  1315  002882  0E30               	movlw	48
  1316  002884  EC47  F016         	call	_ENVIA_NIBBLE
  1317  002888                     
  1318                           ;LCD.c: 110:  ENVIA_NIBBLE(0x20);
  1319  002888  0E20               	movlw	32
  1320  00288A  EC47  F016         	call	_ENVIA_NIBBLE
  1321  00288E                     
  1322                           ;LCD.c: 111:  ENVIA_LCD_CMD(0x01);
  1323  00288E  0E01               	movlw	1
  1324  002890  ECA2  F015         	call	_ENVIA_LCD_CMD
  1325  002894                     
  1326                           ;LCD.c: 112:  ENVIA_LCD_CMD(0x28);
  1327  002894  0E28               	movlw	40
  1328  002896  ECA2  F015         	call	_ENVIA_LCD_CMD
  1329  00289A                     
  1330                           ;LCD.c: 113:  ENVIA_LCD_CMD(0x0F);
  1331  00289A  0E0F               	movlw	15
  1332  00289C  ECA2  F015         	call	_ENVIA_LCD_CMD
  1333  0028A0                     
  1334                           ;LCD.c: 114:  ENVIA_LCD_CMD(0x06);
  1335  0028A0  0E06               	movlw	6
  1336  0028A2  ECA2  F015         	call	_ENVIA_LCD_CMD
  1337  0028A6                     
  1338                           ;LCD.c: 115:  ENVIA_LCD_CMD(0x01);
  1339  0028A6  0E01               	movlw	1
  1340  0028A8  ECA2  F015         	call	_ENVIA_LCD_CMD
  1341  0028AC  0012               	return		;funcret
  1342  0028AE                     __end_of_LCD_CONFIG:
  1343                           	callstack 0
  1344                           
  1345 ;; *************** function _CURSOR_ONOFF *****************
  1346 ;; Defined at:
  1347 ;;		line 54 in file "LCD.c"
  1348 ;; Parameters:    Size  Location     Type
  1349 ;;  estado          1    wreg     unsigned char 
  1350 ;; Auto vars:     Size  Location     Type
  1351 ;;  estado          1    3[BANK5 ] unsigned char 
  1352 ;; Return value:  Size  Location     Type
  1353 ;;                  1    wreg      void 
  1354 ;; Registers used:
  1355 ;;		wreg, status,2, status,0, cstack
  1356 ;; Tracked objects:
  1357 ;;		On entry : 0/0
  1358 ;;		On exit  : 0/0
  1359 ;;		Unchanged: 0/0
  1360 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1361 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1362 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1363 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1364 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1365 ;;Total ram usage:        1 bytes
  1366 ;; Hardware stack levels used: 1
  1367 ;; Hardware stack levels required when called: 7
  1368 ;; This function calls:
  1369 ;;		_ENVIA_LCD_CMD
  1370 ;; This function is called by:
  1371 ;;		_LCD_INIT
  1372 ;; This function uses a non-reentrant model
  1373 ;;
  1374                           
  1375                           	psect	text9
  1376  002BF0                     __ptext9:
  1377                           	callstack 0
  1378  002BF0                     _CURSOR_ONOFF:
  1379                           	callstack 117
  1380                           
  1381                           ;incstack = 0
  1382                           ;CURSOR_ONOFF@estado stored from wreg
  1383  002BF0  0105               	movlb	5	; () banked
  1384  002BF2  6F63               	movwf	CURSOR_ONOFF@estado& (0+255),b
  1385  002BF4                     
  1386                           ;LCD.c: 54: void CURSOR_ONOFF(unsigned char estado);LCD.c: 55: {;LCD.c: 56:  if(estado =
      +                          = 0) ENVIA_LCD_CMD(0x0E);
  1387  002BF4  0105               	movlb	5	; () banked
  1388  002BF6  5163               	movf	CURSOR_ONOFF@estado& (0+255),w,b
  1389  002BF8  A4D8               	btfss	status,2,c
  1390  002BFA  EF01  F016         	goto	u231
  1391  002BFE  EF03  F016         	goto	u230
  1392  002C02                     u231:
  1393  002C02  EF06  F016         	goto	l1461
  1394  002C06                     u230:
  1395  002C06                     
  1396                           ; BSR set to: 5
  1397  002C06  0E0E               	movlw	14
  1398  002C08  ECA2  F015         	call	_ENVIA_LCD_CMD
  1399  002C0C                     l1461:
  1400                           
  1401                           ;LCD.c: 57:  if(estado == 1) ENVIA_LCD_CMD(0x0C);
  1402  002C0C  0105               	movlb	5	; () banked
  1403  002C0E  0563               	decf	CURSOR_ONOFF@estado& (0+255),w,b
  1404  002C10  A4D8               	btfss	status,2,c
  1405  002C12  EF0D  F016         	goto	u241
  1406  002C16  EF0F  F016         	goto	u240
  1407  002C1A                     u241:
  1408  002C1A  EF12  F016         	goto	l56
  1409  002C1E                     u240:
  1410  002C1E                     
  1411                           ; BSR set to: 5
  1412  002C1E  0E0C               	movlw	12
  1413  002C20  ECA2  F015         	call	_ENVIA_LCD_CMD
  1414  002C24                     l56:
  1415  002C24  0012               	return		;funcret
  1416  002C26                     __end_of_CURSOR_ONOFF:
  1417                           	callstack 0
  1418                           
  1419 ;; *************** function _CURSOR_HOME *****************
  1420 ;; Defined at:
  1421 ;;		line 29 in file "LCD.c"
  1422 ;; Parameters:    Size  Location     Type
  1423 ;;		None
  1424 ;; Auto vars:     Size  Location     Type
  1425 ;;		None
  1426 ;; Return value:  Size  Location     Type
  1427 ;;                  1    wreg      void 
  1428 ;; Registers used:
  1429 ;;		wreg, status,2, status,0, cstack
  1430 ;; Tracked objects:
  1431 ;;		On entry : 0/0
  1432 ;;		On exit  : 0/0
  1433 ;;		Unchanged: 0/0
  1434 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1435 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1436 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1437 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1438 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1439 ;;Total ram usage:        0 bytes
  1440 ;; Hardware stack levels used: 1
  1441 ;; Hardware stack levels required when called: 7
  1442 ;; This function calls:
  1443 ;;		_ENVIA_LCD_CMD
  1444 ;; This function is called by:
  1445 ;;		_LCD_INIT
  1446 ;; This function uses a non-reentrant model
  1447 ;;
  1448                           
  1449                           	psect	text10
  1450  002CF8                     __ptext10:
  1451                           	callstack 0
  1452  002CF8                     _CURSOR_HOME:
  1453                           	callstack 117
  1454  002CF8                     
  1455                           ;LCD.c: 31:  ENVIA_LCD_CMD(0x02);
  1456  002CF8  0E02               	movlw	2
  1457  002CFA  ECA2  F015         	call	_ENVIA_LCD_CMD
  1458  002CFE  0012               	return		;funcret
  1459  002D00                     __end_of_CURSOR_HOME:
  1460                           	callstack 0
  1461                           
  1462 ;; *************** function _BORRAR_LCD *****************
  1463 ;; Defined at:
  1464 ;;		line 96 in file "LCD.c"
  1465 ;; Parameters:    Size  Location     Type
  1466 ;;		None
  1467 ;; Auto vars:     Size  Location     Type
  1468 ;;		None
  1469 ;; Return value:  Size  Location     Type
  1470 ;;                  1    wreg      void 
  1471 ;; Registers used:
  1472 ;;		wreg, status,2, status,0, cstack
  1473 ;; Tracked objects:
  1474 ;;		On entry : 0/0
  1475 ;;		On exit  : 0/0
  1476 ;;		Unchanged: 0/0
  1477 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1478 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1479 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1480 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1481 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1482 ;;Total ram usage:        0 bytes
  1483 ;; Hardware stack levels used: 1
  1484 ;; Hardware stack levels required when called: 7
  1485 ;; This function calls:
  1486 ;;		_ENVIA_LCD_CMD
  1487 ;; This function is called by:
  1488 ;;		_LCD_INIT
  1489 ;;		_pantallazo
  1490 ;; This function uses a non-reentrant model
  1491 ;;
  1492                           
  1493                           	psect	text11
  1494  002D00                     __ptext11:
  1495                           	callstack 0
  1496  002D00                     _BORRAR_LCD:
  1497                           	callstack 118
  1498  002D00                     
  1499                           ;LCD.c: 98:  ENVIA_LCD_CMD(0x01);
  1500  002D00  0E01               	movlw	1
  1501  002D02  ECA2  F015         	call	_ENVIA_LCD_CMD
  1502  002D06  0012               	return		;funcret
  1503  002D08                     __end_of_BORRAR_LCD:
  1504                           	callstack 0
  1505                           
  1506 ;; *************** function _ENVIA_LCD_CMD *****************
  1507 ;; Defined at:
  1508 ;;		line 128 in file "LCD.c"
  1509 ;; Parameters:    Size  Location     Type
  1510 ;;  dato            1    wreg     unsigned char 
  1511 ;; Auto vars:     Size  Location     Type
  1512 ;;  dato            1    1[BANK5 ] unsigned char 
  1513 ;;  aux             1    2[BANK5 ] unsigned char 
  1514 ;; Return value:  Size  Location     Type
  1515 ;;                  1    wreg      void 
  1516 ;; Registers used:
  1517 ;;		wreg, status,2, status,0, cstack
  1518 ;; Tracked objects:
  1519 ;;		On entry : 0/0
  1520 ;;		On exit  : 0/0
  1521 ;;		Unchanged: 0/0
  1522 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1523 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1524 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1525 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1526 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1527 ;;Total ram usage:        2 bytes
  1528 ;; Hardware stack levels used: 1
  1529 ;; Hardware stack levels required when called: 6
  1530 ;; This function calls:
  1531 ;;		_ENVIA_NIBBLE
  1532 ;;		_LEER_LCD
  1533 ;; This function is called by:
  1534 ;;		_POS_CURSOR
  1535 ;;		_CURSOR_HOME
  1536 ;;		_CURSOR_ONOFF
  1537 ;;		_BORRAR_LCD
  1538 ;;		_LCD_CONFIG
  1539 ;;		_BLINK_CURSOR
  1540 ;;		_DISPLAY_ONOFF
  1541 ;;		_CURSOR_SHIFTLEFT
  1542 ;;		_CURSOR_SHIFTRIGHT
  1543 ;;		_DISPLAY_SHIFTLEFT
  1544 ;;		_DISPLAY_SHIFTRIGHT
  1545 ;;		_GENERACARACTER
  1546 ;; This function uses a non-reentrant model
  1547 ;;
  1548                           
  1549                           	psect	text12
  1550  002B44                     __ptext12:
  1551                           	callstack 0
  1552  002B44                     _ENVIA_LCD_CMD:
  1553                           	callstack 118
  1554                           
  1555                           ;incstack = 0
  1556                           ;ENVIA_LCD_CMD@dato stored from wreg
  1557  002B44  0105               	movlb	5	; () banked
  1558  002B46  6F61               	movwf	ENVIA_LCD_CMD@dato& (0+255),b
  1559  002B48                     
  1560                           ;LCD.c: 128: void ENVIA_LCD_CMD(unsigned char dato);LCD.c: 129: {;LCD.c: 130:  unsigned 
      +                          char aux;;LCD.c: 131:  LATEbits.LATE0 = 0;
  1561  002B48  90C2               	bcf	194,0,c	;volatile
  1562  002B4A                     
  1563                           ;LCD.c: 132:  LEER_LCD();
  1564  002B4A  EC8A  F013         	call	_LEER_LCD	;wreg free
  1565  002B4E                     
  1566                           ;LCD.c: 133:  TRISD = 0b00000000;
  1567  002B4E  0E00               	movlw	0
  1568  002B50  6EC9               	movwf	201,c	;volatile
  1569  002B52                     
  1570                           ;LCD.c: 134:     _delay((unsigned long)((100)*(4000000UL/4000000.0)));
  1571  002B52  0E21               	movlw	33
  1572  002B54                     u527:
  1573  002B54  2EE8               	decfsz	wreg,f,c
  1574  002B56  D7FE               	bra	u527
  1575  002B58  F000               	nop	
  1576  002B5A                     
  1577                           ;LCD.c: 135:     LATEbits.LATE1 = 0;
  1578  002B5A  92C2               	bcf	194,1,c	;volatile
  1579  002B5C                     
  1580                           ;LCD.c: 136:  LATEbits.LATE2 = 0;
  1581  002B5C  94C2               	bcf	194,2,c	;volatile
  1582  002B5E                     
  1583                           ;LCD.c: 137:  LATEbits.LATE0 = 0;
  1584  002B5E  90C2               	bcf	194,0,c	;volatile
  1585  002B60                     
  1586                           ;LCD.c: 138:  aux = dato & 0xF0;
  1587  002B60  0105               	movlb	5	; () banked
  1588  002B62  5161               	movf	ENVIA_LCD_CMD@dato& (0+255),w,b
  1589  002B64  0BF0               	andlw	240
  1590  002B66  6F62               	movwf	ENVIA_LCD_CMD@aux& (0+255),b
  1591  002B68                     
  1592                           ; BSR set to: 5
  1593                           ;LCD.c: 139:  ENVIA_NIBBLE(aux);
  1594  002B68  5162               	movf	ENVIA_LCD_CMD@aux& (0+255),w,b
  1595  002B6A  EC47  F016         	call	_ENVIA_NIBBLE
  1596  002B6E                     
  1597                           ;LCD.c: 140:  aux = dato<<4;
  1598  002B6E  0105               	movlb	5	; () banked
  1599  002B70  3961               	swapf	ENVIA_LCD_CMD@dato& (0+255),w,b
  1600  002B72  0BF0               	andlw	240
  1601  002B74  6F62               	movwf	ENVIA_LCD_CMD@aux& (0+255),b
  1602  002B76                     
  1603                           ; BSR set to: 5
  1604                           ;LCD.c: 141:  ENVIA_NIBBLE(aux);
  1605  002B76  5162               	movf	ENVIA_LCD_CMD@aux& (0+255),w,b
  1606  002B78  EC47  F016         	call	_ENVIA_NIBBLE
  1607  002B7C  0012               	return		;funcret
  1608  002B7E                     __end_of_ENVIA_LCD_CMD:
  1609                           	callstack 0
  1610                           
  1611 ;; *************** function _LEER_LCD *****************
  1612 ;; Defined at:
  1613 ;;		line 144 in file "LCD.c"
  1614 ;; Parameters:    Size  Location     Type
  1615 ;;		None
  1616 ;; Auto vars:     Size  Location     Type
  1617 ;;  aux             1    0[BANK5 ] unsigned char 
  1618 ;; Return value:  Size  Location     Type
  1619 ;;                  1    wreg      void 
  1620 ;; Registers used:
  1621 ;;		wreg, status,2, status,0
  1622 ;; Tracked objects:
  1623 ;;		On entry : 0/0
  1624 ;;		On exit  : 0/0
  1625 ;;		Unchanged: 0/0
  1626 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1627 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1628 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1629 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1630 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1631 ;;Total ram usage:        1 bytes
  1632 ;; Hardware stack levels used: 1
  1633 ;; Hardware stack levels required when called: 5
  1634 ;; This function calls:
  1635 ;;		Nothing
  1636 ;; This function is called by:
  1637 ;;		_ENVIA_CHAR
  1638 ;;		_ENVIA_LCD_CMD
  1639 ;; This function uses a non-reentrant model
  1640 ;;
  1641                           
  1642                           	psect	text13
  1643  002714                     __ptext13:
  1644                           	callstack 0
  1645  002714                     _LEER_LCD:
  1646                           	callstack 118
  1647  002714                     
  1648                           ;LCD.c: 146:  unsigned char aux;;LCD.c: 147:  TRISD = 0xF8;
  1649  002714  0EF8               	movlw	248
  1650  002716  6EC9               	movwf	201,c	;volatile
  1651  002718                     
  1652                           ;LCD.c: 148:  LATEbits.LATE0 = 0;
  1653  002718  90C2               	bcf	194,0,c	;volatile
  1654  00271A                     
  1655                           ;LCD.c: 149:  LATEbits.LATE1 = 1;
  1656  00271A  82C2               	bsf	194,1,c	;volatile
  1657  00271C                     
  1658                           ;LCD.c: 150:  LATEbits.LATE2 = 1;
  1659  00271C  84C2               	bsf	194,2,c	;volatile
  1660  00271E                     
  1661                           ;LCD.c: 151:     _delay((unsigned long)((100)*(4000000UL/4000000.0)));
  1662  00271E  0E21               	movlw	33
  1663  002720                     u537:
  1664  002720  2EE8               	decfsz	wreg,f,c
  1665  002722  D7FE               	bra	u537
  1666  002724  F000               	nop	
  1667  002726                     
  1668                           ;LCD.c: 152:  aux = PORTD;
  1669  002726  0061 F344  F560    	movff	1233,LEER_LCD@aux	;volatile
  1670  00272C                     
  1671                           ;LCD.c: 153:  LATEbits.LATE2 = 0;
  1672  00272C  94C2               	bcf	194,2,c	;volatile
  1673  00272E                     
  1674                           ;LCD.c: 154:     _delay((unsigned long)((100)*(4000000UL/4000000.0)));
  1675  00272E  0E21               	movlw	33
  1676  002730                     u547:
  1677  002730  2EE8               	decfsz	wreg,f,c
  1678  002732  D7FE               	bra	u547
  1679  002734  F000               	nop	
  1680  002736                     
  1681                           ;LCD.c: 155:  LATEbits.LATE2 = 1;
  1682  002736  84C2               	bsf	194,2,c	;volatile
  1683  002738                     
  1684                           ;LCD.c: 156:     _delay((unsigned long)((100)*(4000000UL/4000000.0)));
  1685  002738  0E21               	movlw	33
  1686  00273A                     u557:
  1687  00273A  2EE8               	decfsz	wreg,f,c
  1688  00273C  D7FE               	bra	u557
  1689  00273E  F000               	nop	
  1690  002740                     
  1691                           ;LCD.c: 157:  LATEbits.LATE2 = 0;
  1692  002740  94C2               	bcf	194,2,c	;volatile
  1693  002742                     l1409:
  1694                           
  1695                           ;LCD.c: 158:  aux = aux & 0x80;
  1696  002742  0105               	movlb	5	; () banked
  1697  002744  5160               	movf	LEER_LCD@aux& (0+255),w,b
  1698  002746  0B80               	andlw	128
  1699  002748  6F60               	movwf	LEER_LCD@aux& (0+255),b
  1700                           
  1701                           ;LCD.c: 159:  while(aux == 0x80)
  1702  00274A  EFBC  F013         	goto	l1423
  1703  00274E                     l87:
  1704                           
  1705                           ; BSR set to: 5
  1706                           ;LCD.c: 160:         {;LCD.c: 161:             LATEbits.LATE2 = 1;
  1707  00274E  84C2               	bsf	194,2,c	;volatile
  1708  002750                     
  1709                           ; BSR set to: 5
  1710                           ;LCD.c: 162:             _delay((unsigned long)((100)*(4000000UL/4000000.0)));
  1711  002750  0E21               	movlw	33
  1712  002752                     u567:
  1713  002752  2EE8               	decfsz	wreg,f,c
  1714  002754  D7FE               	bra	u567
  1715  002756  F000               	nop	
  1716  002758                     
  1717                           ;LCD.c: 163:             aux = PORTD;
  1718  002758  0061 F344  F560    	movff	1233,LEER_LCD@aux	;volatile
  1719  00275E                     
  1720                           ;LCD.c: 164:             LATEbits.LATE2 = 0;
  1721  00275E  94C2               	bcf	194,2,c	;volatile
  1722                           
  1723                           ;LCD.c: 165:             _delay((unsigned long)((100)*(4000000UL/4000000.0)));
  1724  002760  0E21               	movlw	33
  1725  002762                     u577:
  1726  002762  2EE8               	decfsz	wreg,f,c
  1727  002764  D7FE               	bra	u577
  1728  002766  F000               	nop	
  1729  002768                     
  1730                           ;LCD.c: 166:             LATEbits.LATE2 = 1;
  1731  002768  84C2               	bsf	194,2,c	;volatile
  1732                           
  1733                           ;LCD.c: 167:             _delay((unsigned long)((100)*(4000000UL/4000000.0)));
  1734  00276A  0E21               	movlw	33
  1735  00276C                     u587:
  1736  00276C  2EE8               	decfsz	wreg,f,c
  1737  00276E  D7FE               	bra	u587
  1738  002770  F000               	nop	
  1739  002772                     
  1740                           ;LCD.c: 168:             LATEbits.LATE2 = 0;
  1741  002772  94C2               	bcf	194,2,c	;volatile
  1742  002774  EFA1  F013         	goto	l1409
  1743  002778                     l1423:
  1744                           
  1745                           ; BSR set to: 5
  1746                           ;LCD.c: 159:  while(aux == 0x80)
  1747  002778  0E80               	movlw	128
  1748  00277A  1960               	xorwf	LEER_LCD@aux& (0+255),w,b
  1749  00277C  B4D8               	btfsc	status,2,c
  1750  00277E  EFC3  F013         	goto	u221
  1751  002782  EFC5  F013         	goto	u220
  1752  002786                     u221:
  1753  002786  EFA7  F013         	goto	l87
  1754  00278A                     u220:
  1755  00278A                     
  1756                           ; BSR set to: 5
  1757  00278A  0012               	return		;funcret
  1758  00278C                     __end_of_LEER_LCD:
  1759                           	callstack 0
  1760                           
  1761 ;; *************** function _ENVIA_NIBBLE *****************
  1762 ;; Defined at:
  1763 ;;		line 118 in file "LCD.c"
  1764 ;; Parameters:    Size  Location     Type
  1765 ;;  dato            1    wreg     unsigned char 
  1766 ;; Auto vars:     Size  Location     Type
  1767 ;;  dato            1    0[BANK5 ] unsigned char 
  1768 ;; Return value:  Size  Location     Type
  1769 ;;                  1    wreg      void 
  1770 ;; Registers used:
  1771 ;;		wreg, status,2, status,0
  1772 ;; Tracked objects:
  1773 ;;		On entry : 0/0
  1774 ;;		On exit  : 0/0
  1775 ;;		Unchanged: 0/0
  1776 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1777 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1778 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1779 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1780 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1781 ;;Total ram usage:        1 bytes
  1782 ;; Hardware stack levels used: 1
  1783 ;; Hardware stack levels required when called: 5
  1784 ;; This function calls:
  1785 ;;		Nothing
  1786 ;; This function is called by:
  1787 ;;		_ENVIA_CHAR
  1788 ;;		_LCD_CONFIG
  1789 ;;		_ENVIA_LCD_CMD
  1790 ;; This function uses a non-reentrant model
  1791 ;;
  1792                           
  1793                           	psect	text14
  1794  002C8E                     __ptext14:
  1795                           	callstack 0
  1796  002C8E                     _ENVIA_NIBBLE:
  1797                           	callstack 118
  1798                           
  1799                           ; BSR set to: 5
  1800                           ;incstack = 0
  1801                           ;ENVIA_NIBBLE@dato stored from wreg
  1802  002C8E  0105               	movlb	5	; () banked
  1803  002C90  6F60               	movwf	ENVIA_NIBBLE@dato& (0+255),b
  1804  002C92                     
  1805                           ;LCD.c: 118: void ENVIA_NIBBLE(unsigned char dato);LCD.c: 119: {;LCD.c: 120:  LATD &= 0x
      +                          0F;
  1806  002C92  0E0F               	movlw	15
  1807  002C94  16C1               	andwf	193,f,c	;volatile
  1808                           
  1809                           ;LCD.c: 121:  dato &= 0xF0;
  1810  002C96  0EF0               	movlw	240
  1811  002C98  0105               	movlb	5	; () banked
  1812  002C9A  1760               	andwf	ENVIA_NIBBLE@dato& (0+255),f,b
  1813                           
  1814                           ;LCD.c: 122:  LATD|= dato;
  1815  002C9C  5160               	movf	ENVIA_NIBBLE@dato& (0+255),w,b	;volatile
  1816  002C9E  12C1               	iorwf	193,f,c	;volatile
  1817  002CA0                     
  1818                           ; BSR set to: 5
  1819                           ;LCD.c: 123:  LATEbits.LATE2 = 1;
  1820  002CA0  84C2               	bsf	194,2,c	;volatile
  1821  002CA2                     
  1822                           ; BSR set to: 5
  1823                           ;LCD.c: 124:     _delay((unsigned long)((100)*(4000000UL/4000000.0)));
  1824  002CA2  0E21               	movlw	33
  1825  002CA4                     u597:
  1826  002CA4  2EE8               	decfsz	wreg,f,c
  1827  002CA6  D7FE               	bra	u597
  1828  002CA8  F000               	nop	
  1829  002CAA                     
  1830                           ;LCD.c: 125:  LATEbits.LATE2 = 0;
  1831  002CAA  94C2               	bcf	194,2,c	;volatile
  1832  002CAC  0012               	return		;funcret
  1833  002CAE                     __end_of_ENVIA_NIBBLE:
  1834                           	callstack 0
  1835                           
  1836 ;; *************** function _INT1_ISR *****************
  1837 ;; Defined at:
  1838 ;;		line 83 in file "maincode4.c"
  1839 ;; Parameters:    Size  Location     Type
  1840 ;;		None
  1841 ;; Auto vars:     Size  Location     Type
  1842 ;;		None
  1843 ;; Return value:  Size  Location     Type
  1844 ;;                  1    wreg      void 
  1845 ;; Registers used:
  1846 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1847 ;; Tracked objects:
  1848 ;;		On entry : 0/0
  1849 ;;		On exit  : 0/0
  1850 ;;		Unchanged: 0/0
  1851 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1852 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1853 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1854 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1855 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1856 ;;Total ram usage:        4 bytes
  1857 ;; Hardware stack levels used: 1
  1858 ;; Hardware stack levels required when called: 4
  1859 ;; This function calls:
  1860 ;;		_U5_Sendbyte
  1861 ;;		i2_pantallazo
  1862 ;; This function is called by:
  1863 ;;		Interrupt level 2
  1864 ;; This function uses a non-reentrant model
  1865 ;;
  1866                           
  1867                           	psect	text15
  1868  0029AC                     __ptext15:
  1869                           	callstack 0
  1870  0029AC                     _INT1_ISR:
  1871                           	callstack 117
  1872                           
  1873                           ;incstack = 0
  1874  0029AC  0061 F3D8  F50D    	movff	tblptrl,??_INT1_ISR
  1875  0029B2  0061 F3DC  F50E    	movff	tblptrh,??_INT1_ISR+1
  1876  0029B8  0061 F3E0  F50F    	movff	tblptru,??_INT1_ISR+2
  1877  0029BE  0061 F3D4  F510    	movff	tablat,??_INT1_ISR+3
  1878  0029C4                     
  1879                           ;maincode4.c: 84:     PIR6bits.INT1IF = 0;
  1880  0029C4  90B4               	bcf	180,0,c	;volatile
  1881  0029C6                     
  1882                           ;maincode4.c: 85:     U5_Sendbyte('H');
  1883  0029C6  0E48               	movlw	72
  1884  0029C8  EC65  F016         	call	_U5_Sendbyte
  1885                           
  1886                           ;maincode4.c: 86:     U5_Sendbyte('o');
  1887  0029CC  0E6F               	movlw	111
  1888  0029CE  EC65  F016         	call	_U5_Sendbyte
  1889                           
  1890                           ;maincode4.c: 87:     U5_Sendbyte('l');
  1891  0029D2  0E6C               	movlw	108
  1892  0029D4  EC65  F016         	call	_U5_Sendbyte
  1893                           
  1894                           ;maincode4.c: 88:     U5_Sendbyte('a');
  1895  0029D8  0E61               	movlw	97
  1896  0029DA  EC65  F016         	call	_U5_Sendbyte
  1897  0029DE                     
  1898                           ;maincode4.c: 89:     pantallazo();
  1899  0029DE  ECFE  F014         	call	i2_pantallazo	;wreg free
  1900  0029E2  0061  F440  F4F5   	movff	??_INT1_ISR+3,tablat
  1901  0029E8  0061  F43C  F4F8   	movff	??_INT1_ISR+2,tblptru
  1902  0029EE  0061  F438  F4F7   	movff	??_INT1_ISR+1,tblptrh
  1903  0029F4  0061  F434  F4F6   	movff	??_INT1_ISR,tblptrl
  1904  0029FA  0011               	retfie		f
  1905  0029FC                     __end_of_INT1_ISR:
  1906                           	callstack 0
  1907                           
  1908 ;; *************** function i2_pantallazo *****************
  1909 ;; Defined at:
  1910 ;;		line 53 in file "maincode4.c"
  1911 ;; Parameters:    Size  Location     Type
  1912 ;;		None
  1913 ;; Auto vars:     Size  Location     Type
  1914 ;;		None
  1915 ;; Return value:  Size  Location     Type
  1916 ;;                  1    wreg      void 
  1917 ;; Registers used:
  1918 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1919 ;; Tracked objects:
  1920 ;;		On entry : 0/0
  1921 ;;		On exit  : 0/0
  1922 ;;		Unchanged: 0/0
  1923 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1924 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1925 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1926 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1927 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1928 ;;Total ram usage:        2 bytes
  1929 ;; Hardware stack levels used: 1
  1930 ;; Hardware stack levels required when called: 3
  1931 ;; This function calls:
  1932 ;;		i2_BORRAR_LCD
  1933 ;;		i2_ESCRIBE_MENSAJE2
  1934 ;;		i2_POS_CURSOR
  1935 ;; This function is called by:
  1936 ;;		_INT1_ISR
  1937 ;;		_INT0_ISR
  1938 ;; This function uses a non-reentrant model
  1939 ;;
  1940                           
  1941                           	psect	text16
  1942  0029FC                     __ptext16:
  1943                           	callstack 0
  1944  0029FC                     i2_pantallazo:
  1945                           	callstack 117
  1946  0029FC                     
  1947                           ;maincode4.c: 54:     POS_CURSOR(1,0);
  1948  0029FC  0E00               	movlw	0
  1949  0029FE  6E24               	movwf	i2POS_CURSOR@columna^(0+1280),c
  1950  002A00  0E01               	movlw	1
  1951  002A02  ECBF  F015         	call	i2_POS_CURSOR
  1952  002A06                     
  1953                           ;maincode4.c: 55:     ESCRIBE_MENSAJE2("Hola Mundo!");
  1954  002A06  0E38               	movlw	low STR_1
  1955  002A08  6E25               	movwf	i2ESCRIBE_MENSAJE2@cadena^(0+1280),c
  1956  002A0A  0E25               	movlw	high STR_1
  1957  002A0C  6E26               	movwf	(i2ESCRIBE_MENSAJE2@cadena+1)^(0+1280),c
  1958  002A0E  ECAD  F014         	call	i2_ESCRIBE_MENSAJE2	;wreg free
  1959  002A12                     
  1960                           ;maincode4.c: 56:     POS_CURSOR(2,0);
  1961  002A12  0E00               	movlw	0
  1962  002A14  6E24               	movwf	i2POS_CURSOR@columna^(0+1280),c
  1963  002A16  0E02               	movlw	2
  1964  002A18  ECBF  F015         	call	i2_POS_CURSOR
  1965                           
  1966                           ;maincode4.c: 57:     ESCRIBE_MENSAJE2("Micro semana 13");
  1967  002A1C  0E01               	movlw	low STR_2
  1968  002A1E  6E25               	movwf	i2ESCRIBE_MENSAJE2@cadena^(0+1280),c
  1969  002A20  0E25               	movlw	high STR_2
  1970  002A22  6E26               	movwf	(i2ESCRIBE_MENSAJE2@cadena+1)^(0+1280),c
  1971  002A24  ECAD  F014         	call	i2_ESCRIBE_MENSAJE2	;wreg free
  1972  002A28                     
  1973                           ;maincode4.c: 58:     _delay((unsigned long)((2000)*(4000000UL/4000.0)));
  1974  002A28  0E0B               	movlw	11
  1975  002A2A  6E1C               	movwf	(??i2_pantallazo+1)^(0+1280),c
  1976  002A2C  0E26               	movlw	38
  1977  002A2E  6E1B               	movwf	??i2_pantallazo^(0+1280),c
  1978  002A30  0E5E               	movlw	94
  1979  002A32                     i2u60_47:
  1980  002A32  2EE8               	decfsz	wreg,f,c
  1981  002A34  D7FE               	bra	i2u60_47
  1982  002A36  2E1B               	decfsz	??i2_pantallazo^(0+1280),f,c
  1983  002A38  D7FC               	bra	i2u60_47
  1984  002A3A  2E1C               	decfsz	(??i2_pantallazo+1)^(0+1280),f,c
  1985  002A3C  D7FA               	bra	i2u60_47
  1986  002A3E                     
  1987                           ;maincode4.c: 59:     BORRAR_LCD();
  1988  002A3E  EC84  F016         	call	i2_BORRAR_LCD	;wreg free
  1989  002A42  0012               	return		;funcret
  1990  002A44                     __end_ofi2_pantallazo:
  1991                           	callstack 0
  1992                           
  1993 ;; *************** function i2_POS_CURSOR *****************
  1994 ;; Defined at:
  1995 ;;		line 5 in file "LCD.c"
  1996 ;; Parameters:    Size  Location     Type
  1997 ;;  fila            1    wreg     unsigned char 
  1998 ;;  columna         1   35[COMRAM] unsigned char 
  1999 ;; Auto vars:     Size  Location     Type
  2000 ;;  fila            1   36[COMRAM] unsigned char 
  2001 ;; Return value:  Size  Location     Type
  2002 ;;                  1    wreg      void 
  2003 ;; Registers used:
  2004 ;;		wreg, status,2, status,0, cstack
  2005 ;; Tracked objects:
  2006 ;;		On entry : 0/0
  2007 ;;		On exit  : 0/0
  2008 ;;		Unchanged: 0/0
  2009 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2010 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2011 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2012 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2013 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2014 ;;Total ram usage:        2 bytes
  2015 ;; Hardware stack levels used: 1
  2016 ;; Hardware stack levels required when called: 2
  2017 ;; This function calls:
  2018 ;;		i2_ENVIA_LCD_CMD
  2019 ;; This function is called by:
  2020 ;;		_U5RX_ISR
  2021 ;;		i2_pantallazo
  2022 ;; This function uses a non-reentrant model
  2023 ;;
  2024                           
  2025                           	psect	text17
  2026  002B7E                     __ptext17:
  2027                           	callstack 0
  2028  002B7E                     i2_POS_CURSOR:
  2029                           	callstack 118
  2030                           
  2031                           ;incstack = 0
  2032                           ;i2POS_CURSOR@fila stored from wreg
  2033  002B7E  6E25               	movwf	i2POS_CURSOR@fila^(0+1280),c
  2034  002B80                     
  2035                           ;LCD.c: 5: void POS_CURSOR(unsigned char fila,unsigned char columna);LCD.c: 6: {;LCD.c: 
      +                          7:  if(fila == 1)
  2036  002B80  0425               	decf	i2POS_CURSOR@fila^(0+1280),w,c
  2037  002B82  A4D8               	btfss	status,2,c
  2038  002B84  EFC6  F015         	goto	i2u31_41
  2039  002B88  EFC8  F015         	goto	i2u31_40
  2040  002B8C                     i2u31_41:
  2041  002B8C  EFCE  F015         	goto	i2l1703
  2042  002B90                     i2u31_40:
  2043  002B90                     
  2044                           ;LCD.c: 8:  {;LCD.c: 9:   ENVIA_LCD_CMD(0x80+columna);
  2045  002B90  5024               	movf	i2POS_CURSOR@columna^(0+1280),w,c
  2046  002B92  0F80               	addlw	128
  2047  002B94  EC2D  F016         	call	i2_ENVIA_LCD_CMD
  2048                           
  2049                           ;LCD.c: 10:  }
  2050  002B98  EFDB  F015         	goto	i2l26
  2051  002B9C                     i2l1703:
  2052  002B9C  0E02               	movlw	2
  2053  002B9E  1825               	xorwf	i2POS_CURSOR@fila^(0+1280),w,c
  2054  002BA0  A4D8               	btfss	status,2,c
  2055  002BA2  EFD5  F015         	goto	i2u32_41
  2056  002BA6  EFD7  F015         	goto	i2u32_40
  2057  002BAA                     i2u32_41:
  2058  002BAA  EFDB  F015         	goto	i2l26
  2059  002BAE                     i2u32_40:
  2060  002BAE                     
  2061                           ;LCD.c: 12:  {;LCD.c: 13:   ENVIA_LCD_CMD(0xC0+columna);
  2062  002BAE  5024               	movf	i2POS_CURSOR@columna^(0+1280),w,c
  2063  002BB0  0FC0               	addlw	192
  2064  002BB2  EC2D  F016         	call	i2_ENVIA_LCD_CMD
  2065  002BB6                     i2l26:
  2066  002BB6  0012               	return		;funcret
  2067  002BB8                     __end_ofi2_POS_CURSOR:
  2068                           	callstack 0
  2069                           
  2070 ;; *************** function i2_ESCRIBE_MENSAJE2 *****************
  2071 ;; Defined at:
  2072 ;;		line 69 in file "LCD.c"
  2073 ;; Parameters:    Size  Location     Type
  2074 ;;  cadena          2   36[COMRAM] PTR const unsigned char 
  2075 ;;		 -> STR_5(13), STR_4(13), STR_3(13), STR_2(16), 
  2076 ;;		 -> STR_1(12), 
  2077 ;; Auto vars:     Size  Location     Type
  2078 ;;  i               1   41[COMRAM] unsigned char 
  2079 ;;  tam             1   40[COMRAM] unsigned char 
  2080 ;; Return value:  Size  Location     Type
  2081 ;;                  1    wreg      void 
  2082 ;; Registers used:
  2083 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2084 ;; Tracked objects:
  2085 ;;		On entry : 0/0
  2086 ;;		On exit  : 0/0
  2087 ;;		Unchanged: 0/0
  2088 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2089 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2090 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2091 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2092 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2093 ;;Total ram usage:        6 bytes
  2094 ;; Hardware stack levels used: 1
  2095 ;; Hardware stack levels required when called: 2
  2096 ;; This function calls:
  2097 ;;		i2_ENVIA_CHAR
  2098 ;;		i2_strlen
  2099 ;; This function is called by:
  2100 ;;		_U5RX_ISR
  2101 ;;		i2_pantallazo
  2102 ;; This function uses a non-reentrant model
  2103 ;;
  2104                           
  2105                           	psect	text18
  2106  00295A                     __ptext18:
  2107                           	callstack 0
  2108  00295A                     i2_ESCRIBE_MENSAJE2:
  2109                           	callstack 118
  2110  00295A                     
  2111                           ;LCD.c: 69: void ESCRIBE_MENSAJE2(const char *cadena);LCD.c: 70: {;LCD.c: 71:     unsign
      +                          ed char tam;;LCD.c: 72:     tam = strlen(cadena);
  2112  00295A  C525  F521         	movff	i2ESCRIBE_MENSAJE2@cadena,i2strlen@s
  2113  00295E  C526  F522         	movff	i2ESCRIBE_MENSAJE2@cadena+1,i2strlen@s+1
  2114  002962  EC45  F015         	call	i2_strlen	;wreg free
  2115  002966  5021               	movf	?i2_strlen^(0+1280),w,c
  2116  002968  6E29               	movwf	i2ESCRIBE_MENSAJE2@tam^(0+1280),c
  2117  00296A                     
  2118                           ;LCD.c: 74:  for(i = 0; i<tam; i++)
  2119  00296A  0E00               	movlw	0
  2120  00296C  6E2A               	movwf	i2ESCRIBE_MENSAJE2@i^(0+1280),c
  2121  00296E  EFCC  F014         	goto	i2l1717
  2122  002972                     i2l1713:
  2123                           
  2124                           ;LCD.c: 75:  {;LCD.c: 76:   ENVIA_CHAR(cadena[i]);
  2125  002972  502A               	movf	i2ESCRIBE_MENSAJE2@i^(0+1280),w,c
  2126  002974  2425               	addwf	i2ESCRIBE_MENSAJE2@cadena^(0+1280),w,c
  2127  002976  6E27               	movwf	??i2_ESCRIBE_MENSAJE2^(0+1280),c
  2128  002978  0E00               	movlw	0
  2129  00297A  2026               	addwfc	(i2ESCRIBE_MENSAJE2@cadena+1)^(0+1280),w,c
  2130  00297C  6E28               	movwf	(??i2_ESCRIBE_MENSAJE2+1)^(0+1280),c
  2131  00297E  0061  F49C  F4F6   	movff	??i2_ESCRIBE_MENSAJE2,tblptrl
  2132  002984  0061  F4A0  F4F7   	movff	??i2_ESCRIBE_MENSAJE2+1,tblptrh
  2133  00298A                     	if	0	;tblptru may be non-zero
  2134  00298A                     	endif
  2135  00298A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2136  00298A  0E00               	movlw	low (__mediumconst shr (0+16))
  2137  00298C  6EF8               	movwf	tblptru,c
  2138  00298E                     	endif
  2139  00298E  0008               	tblrd		*
  2140  002990  50F5               	movf	tablat,w,c
  2141  002992  EC13  F016         	call	i2_ENVIA_CHAR
  2142  002996                     
  2143                           ;LCD.c: 77:  }
  2144  002996  2A2A               	incf	i2ESCRIBE_MENSAJE2@i^(0+1280),f,c
  2145  002998                     i2l1717:
  2146  002998  5029               	movf	i2ESCRIBE_MENSAJE2@tam^(0+1280),w,c
  2147  00299A  5C2A               	subwf	i2ESCRIBE_MENSAJE2@i^(0+1280),w,c
  2148  00299C  A0D8               	btfss	status,0,c
  2149  00299E  EFD3  F014         	goto	i2u33_41
  2150  0029A2  EFD5  F014         	goto	i2u33_40
  2151  0029A6                     i2u33_41:
  2152  0029A6  EFB9  F014         	goto	i2l1713
  2153  0029AA                     i2u33_40:
  2154  0029AA  0012               	return		;funcret
  2155  0029AC                     __end_ofi2_ESCRIBE_MENSAJE2:
  2156                           	callstack 0
  2157                           
  2158 ;; *************** function i2_strlen *****************
  2159 ;; Defined at:
  2160 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\strlen.c"
  2161 ;; Parameters:    Size  Location     Type
  2162 ;;  s               2   32[COMRAM] PTR const unsigned char 
  2163 ;;		 -> STR_5(13), STR_4(13), STR_3(13), STR_2(16), 
  2164 ;;		 -> STR_1(12), 
  2165 ;; Auto vars:     Size  Location     Type
  2166 ;;  a               2   34[COMRAM] PTR const unsigned char 
  2167 ;;		 -> STR_5(13), STR_4(13), STR_3(13), STR_2(16), 
  2168 ;;		 -> STR_1(12), 
  2169 ;; Return value:  Size  Location     Type
  2170 ;;                  2   32[COMRAM] unsigned int 
  2171 ;; Registers used:
  2172 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  2173 ;; Tracked objects:
  2174 ;;		On entry : 0/0
  2175 ;;		On exit  : 0/0
  2176 ;;		Unchanged: 0/0
  2177 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2178 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2179 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2180 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2181 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2182 ;;Total ram usage:        4 bytes
  2183 ;; Hardware stack levels used: 1
  2184 ;; This function calls:
  2185 ;;		Nothing
  2186 ;; This function is called by:
  2187 ;;		i2_ESCRIBE_MENSAJE2
  2188 ;; This function uses a non-reentrant model
  2189 ;;
  2190                           
  2191                           	psect	text19
  2192  002A8A                     __ptext19:
  2193                           	callstack 0
  2194  002A8A                     i2_strlen:
  2195                           	callstack 119
  2196  002A8A  C521  F523         	movff	i2strlen@s,i2strlen@a
  2197  002A8E  C522  F524         	movff	i2strlen@s+1,i2strlen@a+1
  2198  002A92  EF4D  F015         	goto	i2l1643
  2199  002A96                     i2l1641:
  2200  002A96  4A21               	infsnz	i2strlen@s^(0+1280),f,c
  2201  002A98  2A22               	incf	(i2strlen@s+1)^(0+1280),f,c
  2202  002A9A                     i2l1643:
  2203  002A9A  0061  F484  F4F6   	movff	i2strlen@s,tblptrl
  2204  002AA0  0061  F488  F4F7   	movff	i2strlen@s+1,tblptrh
  2205  002AA6                     	if	0	;tblptru may be non-zero
  2206  002AA6                     	endif
  2207  002AA6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2208  002AA6  0E00               	movlw	low (__mediumconst shr (0+16))
  2209  002AA8  6EF8               	movwf	tblptru,c
  2210  002AAA                     	endif
  2211  002AAA  0008               	tblrd		*
  2212  002AAC  50F5               	movf	tablat,w,c
  2213  002AAE  0900               	iorlw	0
  2214  002AB0  A4D8               	btfss	status,2,c
  2215  002AB2  EF5D  F015         	goto	i2u30_41
  2216  002AB6  EF5F  F015         	goto	i2u30_40
  2217  002ABA                     i2u30_41:
  2218  002ABA  EF4B  F015         	goto	i2l1641
  2219  002ABE                     i2u30_40:
  2220  002ABE  5023               	movf	i2strlen@a^(0+1280),w,c
  2221  002AC0  5C21               	subwf	i2strlen@s^(0+1280),w,c
  2222  002AC2  6E21               	movwf	?i2_strlen^(0+1280),c
  2223  002AC4  5024               	movf	(i2strlen@a+1)^(0+1280),w,c
  2224  002AC6  5822               	subwfb	(i2strlen@s+1)^(0+1280),w,c
  2225  002AC8  6E22               	movwf	(?i2_strlen+1)^(0+1280),c
  2226  002ACA  0012               	return		;funcret
  2227  002ACC                     __end_ofi2_strlen:
  2228                           	callstack 0
  2229                           
  2230 ;; *************** function i2_ENVIA_CHAR *****************
  2231 ;; Defined at:
  2232 ;;		line 80 in file "LCD.c"
  2233 ;; Parameters:    Size  Location     Type
  2234 ;;  dato            1    wreg     unsigned char 
  2235 ;; Auto vars:     Size  Location     Type
  2236 ;;  dato            1   33[COMRAM] unsigned char 
  2237 ;;  aux             1   34[COMRAM] unsigned char 
  2238 ;; Return value:  Size  Location     Type
  2239 ;;                  1    wreg      void 
  2240 ;; Registers used:
  2241 ;;		wreg, status,2, status,0, cstack
  2242 ;; Tracked objects:
  2243 ;;		On entry : 0/0
  2244 ;;		On exit  : 0/0
  2245 ;;		Unchanged: 0/0
  2246 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2247 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2248 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2249 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2250 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2251 ;;Total ram usage:        2 bytes
  2252 ;; Hardware stack levels used: 1
  2253 ;; Hardware stack levels required when called: 1
  2254 ;; This function calls:
  2255 ;;		i2_ENVIA_NIBBLE
  2256 ;;		i2_LEER_LCD
  2257 ;; This function is called by:
  2258 ;;		i2_ESCRIBE_MENSAJE2
  2259 ;; This function uses a non-reentrant model
  2260 ;;
  2261                           
  2262                           	psect	text20
  2263  002C26                     __ptext20:
  2264                           	callstack 0
  2265  002C26                     i2_ENVIA_CHAR:
  2266                           	callstack 118
  2267                           
  2268                           ;incstack = 0
  2269                           ;i2ENVIA_CHAR@dato stored from wreg
  2270  002C26  6E22               	movwf	i2ENVIA_CHAR@dato^(0+1280),c
  2271  002C28                     
  2272                           ;LCD.c: 80: void ENVIA_CHAR(unsigned char dato);LCD.c: 81: {;LCD.c: 82:  unsigned char a
      +                          ux;;LCD.c: 83:  LATEbits.LATE0 = 1;
  2273  002C28  80C2               	bsf	194,0,c	;volatile
  2274  002C2A                     
  2275                           ;LCD.c: 84:  LEER_LCD();
  2276  002C2A  ECC6  F013         	call	i2_LEER_LCD	;wreg free
  2277  002C2E                     
  2278                           ;LCD.c: 85:  TRISD = 0x00;
  2279  002C2E  0E00               	movlw	0
  2280  002C30  6EC9               	movwf	201,c	;volatile
  2281  002C32                     
  2282                           ;LCD.c: 86:     _delay((unsigned long)((100)*(4000000UL/4000000.0)));
  2283  002C32  0E21               	movlw	33
  2284  002C34                     i2u61_47:
  2285  002C34  2EE8               	decfsz	wreg,f,c
  2286  002C36  D7FE               	bra	i2u61_47
  2287  002C38  F000               	nop	
  2288  002C3A                     
  2289                           ;LCD.c: 87:  LATEbits.LATE1 = 0;
  2290  002C3A  92C2               	bcf	194,1,c	;volatile
  2291  002C3C                     
  2292                           ;LCD.c: 88:  LATEbits.LATE2 = 0;
  2293  002C3C  94C2               	bcf	194,2,c	;volatile
  2294  002C3E                     
  2295                           ;LCD.c: 89:  LATEbits.LATE0 = 1;
  2296  002C3E  80C2               	bsf	194,0,c	;volatile
  2297  002C40                     
  2298                           ;LCD.c: 90:  aux = dato & 0xF0;
  2299  002C40  5022               	movf	i2ENVIA_CHAR@dato^(0+1280),w,c
  2300  002C42  0BF0               	andlw	240
  2301  002C44  6E23               	movwf	i2ENVIA_CHAR@aux^(0+1280),c
  2302  002C46                     
  2303                           ;LCD.c: 91:  ENVIA_NIBBLE(aux);
  2304  002C46  5023               	movf	i2ENVIA_CHAR@aux^(0+1280),w,c
  2305  002C48  EC57  F016         	call	i2_ENVIA_NIBBLE
  2306  002C4C                     
  2307                           ;LCD.c: 92:  aux = dato << 4;
  2308  002C4C  3822               	swapf	i2ENVIA_CHAR@dato^(0+1280),w,c
  2309  002C4E  0BF0               	andlw	240
  2310  002C50  6E23               	movwf	i2ENVIA_CHAR@aux^(0+1280),c
  2311  002C52                     
  2312                           ;LCD.c: 93:  ENVIA_NIBBLE(aux);
  2313  002C52  5023               	movf	i2ENVIA_CHAR@aux^(0+1280),w,c
  2314  002C54  EC57  F016         	call	i2_ENVIA_NIBBLE
  2315  002C58  0012               	return		;funcret
  2316  002C5A                     __end_ofi2_ENVIA_CHAR:
  2317                           	callstack 0
  2318                           
  2319 ;; *************** function i2_BORRAR_LCD *****************
  2320 ;; Defined at:
  2321 ;;		line 96 in file "LCD.c"
  2322 ;; Parameters:    Size  Location     Type
  2323 ;;		None
  2324 ;; Auto vars:     Size  Location     Type
  2325 ;;		None
  2326 ;; Return value:  Size  Location     Type
  2327 ;;                  1    wreg      void 
  2328 ;; Registers used:
  2329 ;;		wreg, status,2, status,0, cstack
  2330 ;; Tracked objects:
  2331 ;;		On entry : 0/0
  2332 ;;		On exit  : 0/0
  2333 ;;		Unchanged: 0/0
  2334 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2335 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2336 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2337 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2338 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2339 ;;Total ram usage:        0 bytes
  2340 ;; Hardware stack levels used: 1
  2341 ;; Hardware stack levels required when called: 2
  2342 ;; This function calls:
  2343 ;;		i2_ENVIA_LCD_CMD
  2344 ;; This function is called by:
  2345 ;;		i2_pantallazo
  2346 ;; This function uses a non-reentrant model
  2347 ;;
  2348                           
  2349                           	psect	text21
  2350  002D08                     __ptext21:
  2351                           	callstack 0
  2352  002D08                     i2_BORRAR_LCD:
  2353                           	callstack 117
  2354  002D08                     
  2355                           ;LCD.c: 98:  ENVIA_LCD_CMD(0x01);
  2356  002D08  0E01               	movlw	1
  2357  002D0A  EC2D  F016         	call	i2_ENVIA_LCD_CMD
  2358  002D0E  0012               	return		;funcret
  2359  002D10                     __end_ofi2_BORRAR_LCD:
  2360                           	callstack 0
  2361                           
  2362 ;; *************** function i2_ENVIA_LCD_CMD *****************
  2363 ;; Defined at:
  2364 ;;		line 128 in file "LCD.c"
  2365 ;; Parameters:    Size  Location     Type
  2366 ;;  dato            1    wreg     unsigned char 
  2367 ;; Auto vars:     Size  Location     Type
  2368 ;;  dato            1   33[COMRAM] unsigned char 
  2369 ;;  aux             1   34[COMRAM] unsigned char 
  2370 ;; Return value:  Size  Location     Type
  2371 ;;                  1    wreg      void 
  2372 ;; Registers used:
  2373 ;;		wreg, status,2, status,0, cstack
  2374 ;; Tracked objects:
  2375 ;;		On entry : 0/0
  2376 ;;		On exit  : 0/0
  2377 ;;		Unchanged: 0/0
  2378 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2379 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2380 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2381 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2382 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2383 ;;Total ram usage:        2 bytes
  2384 ;; Hardware stack levels used: 1
  2385 ;; Hardware stack levels required when called: 1
  2386 ;; This function calls:
  2387 ;;		i2_ENVIA_NIBBLE
  2388 ;;		i2_LEER_LCD
  2389 ;; This function is called by:
  2390 ;;		i2_POS_CURSOR
  2391 ;;		i2_BORRAR_LCD
  2392 ;; This function uses a non-reentrant model
  2393 ;;
  2394                           
  2395                           	psect	text22
  2396  002C5A                     __ptext22:
  2397                           	callstack 0
  2398  002C5A                     i2_ENVIA_LCD_CMD:
  2399                           	callstack 118
  2400                           
  2401                           ;incstack = 0
  2402                           ;i2ENVIA_LCD_CMD@dato stored from wreg
  2403  002C5A  6E22               	movwf	i2ENVIA_LCD_CMD@dato^(0+1280),c
  2404  002C5C                     
  2405                           ;LCD.c: 128: void ENVIA_LCD_CMD(unsigned char dato);LCD.c: 129: {;LCD.c: 130:  unsigned 
      +                          char aux;;LCD.c: 131:  LATEbits.LATE0 = 0;
  2406  002C5C  90C2               	bcf	194,0,c	;volatile
  2407  002C5E                     
  2408                           ;LCD.c: 132:  LEER_LCD();
  2409  002C5E  ECC6  F013         	call	i2_LEER_LCD	;wreg free
  2410  002C62                     
  2411                           ;LCD.c: 133:  TRISD = 0b00000000;
  2412  002C62  0E00               	movlw	0
  2413  002C64  6EC9               	movwf	201,c	;volatile
  2414  002C66                     
  2415                           ;LCD.c: 134:     _delay((unsigned long)((100)*(4000000UL/4000000.0)));
  2416  002C66  0E21               	movlw	33
  2417  002C68                     i2u62_47:
  2418  002C68  2EE8               	decfsz	wreg,f,c
  2419  002C6A  D7FE               	bra	i2u62_47
  2420  002C6C  F000               	nop	
  2421  002C6E                     
  2422                           ;LCD.c: 135:     LATEbits.LATE1 = 0;
  2423  002C6E  92C2               	bcf	194,1,c	;volatile
  2424  002C70                     
  2425                           ;LCD.c: 136:  LATEbits.LATE2 = 0;
  2426  002C70  94C2               	bcf	194,2,c	;volatile
  2427  002C72                     
  2428                           ;LCD.c: 137:  LATEbits.LATE0 = 0;
  2429  002C72  90C2               	bcf	194,0,c	;volatile
  2430  002C74                     
  2431                           ;LCD.c: 138:  aux = dato & 0xF0;
  2432  002C74  5022               	movf	i2ENVIA_LCD_CMD@dato^(0+1280),w,c
  2433  002C76  0BF0               	andlw	240
  2434  002C78  6E23               	movwf	i2ENVIA_LCD_CMD@aux^(0+1280),c
  2435  002C7A                     
  2436                           ;LCD.c: 139:  ENVIA_NIBBLE(aux);
  2437  002C7A  5023               	movf	i2ENVIA_LCD_CMD@aux^(0+1280),w,c
  2438  002C7C  EC57  F016         	call	i2_ENVIA_NIBBLE
  2439  002C80                     
  2440                           ;LCD.c: 140:  aux = dato<<4;
  2441  002C80  3822               	swapf	i2ENVIA_LCD_CMD@dato^(0+1280),w,c
  2442  002C82  0BF0               	andlw	240
  2443  002C84  6E23               	movwf	i2ENVIA_LCD_CMD@aux^(0+1280),c
  2444  002C86                     
  2445                           ;LCD.c: 141:  ENVIA_NIBBLE(aux);
  2446  002C86  5023               	movf	i2ENVIA_LCD_CMD@aux^(0+1280),w,c
  2447  002C88  EC57  F016         	call	i2_ENVIA_NIBBLE
  2448  002C8C  0012               	return		;funcret
  2449  002C8E                     __end_ofi2_ENVIA_LCD_CMD:
  2450                           	callstack 0
  2451                           
  2452 ;; *************** function i2_LEER_LCD *****************
  2453 ;; Defined at:
  2454 ;;		line 144 in file "LCD.c"
  2455 ;; Parameters:    Size  Location     Type
  2456 ;;		None
  2457 ;; Auto vars:     Size  Location     Type
  2458 ;;  aux             1   32[COMRAM] unsigned char 
  2459 ;; Return value:  Size  Location     Type
  2460 ;;                  1    wreg      void 
  2461 ;; Registers used:
  2462 ;;		wreg, status,2, status,0
  2463 ;; Tracked objects:
  2464 ;;		On entry : 0/0
  2465 ;;		On exit  : 0/0
  2466 ;;		Unchanged: 0/0
  2467 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2468 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2469 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2470 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2471 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2472 ;;Total ram usage:        1 bytes
  2473 ;; Hardware stack levels used: 1
  2474 ;; This function calls:
  2475 ;;		Nothing
  2476 ;; This function is called by:
  2477 ;;		i2_ENVIA_CHAR
  2478 ;;		i2_ENVIA_LCD_CMD
  2479 ;; This function uses a non-reentrant model
  2480 ;;
  2481                           
  2482                           	psect	text23
  2483  00278C                     __ptext23:
  2484                           	callstack 0
  2485  00278C                     i2_LEER_LCD:
  2486                           	callstack 118
  2487  00278C                     
  2488                           ;LCD.c: 146:  unsigned char aux;;LCD.c: 147:  TRISD = 0xF8;
  2489  00278C  0EF8               	movlw	248
  2490  00278E  6EC9               	movwf	201,c	;volatile
  2491  002790                     
  2492                           ;LCD.c: 148:  LATEbits.LATE0 = 0;
  2493  002790  90C2               	bcf	194,0,c	;volatile
  2494  002792                     
  2495                           ;LCD.c: 149:  LATEbits.LATE1 = 1;
  2496  002792  82C2               	bsf	194,1,c	;volatile
  2497  002794                     
  2498                           ;LCD.c: 150:  LATEbits.LATE2 = 1;
  2499  002794  84C2               	bsf	194,2,c	;volatile
  2500  002796                     
  2501                           ;LCD.c: 151:     _delay((unsigned long)((100)*(4000000UL/4000000.0)));
  2502  002796  0E21               	movlw	33
  2503  002798                     i2u63_47:
  2504  002798  2EE8               	decfsz	wreg,f,c
  2505  00279A  D7FE               	bra	i2u63_47
  2506  00279C  F000               	nop	
  2507  00279E                     
  2508                           ;LCD.c: 152:  aux = PORTD;
  2509  00279E  0061 F344  F521    	movff	1233,i2LEER_LCD@aux	;volatile
  2510  0027A4                     
  2511                           ;LCD.c: 153:  LATEbits.LATE2 = 0;
  2512  0027A4  94C2               	bcf	194,2,c	;volatile
  2513  0027A6                     
  2514                           ;LCD.c: 154:     _delay((unsigned long)((100)*(4000000UL/4000000.0)));
  2515  0027A6  0E21               	movlw	33
  2516  0027A8                     i2u64_47:
  2517  0027A8  2EE8               	decfsz	wreg,f,c
  2518  0027AA  D7FE               	bra	i2u64_47
  2519  0027AC  F000               	nop	
  2520  0027AE                     
  2521                           ;LCD.c: 155:  LATEbits.LATE2 = 1;
  2522  0027AE  84C2               	bsf	194,2,c	;volatile
  2523  0027B0                     
  2524                           ;LCD.c: 156:     _delay((unsigned long)((100)*(4000000UL/4000000.0)));
  2525  0027B0  0E21               	movlw	33
  2526  0027B2                     i2u65_47:
  2527  0027B2  2EE8               	decfsz	wreg,f,c
  2528  0027B4  D7FE               	bra	i2u65_47
  2529  0027B6  F000               	nop	
  2530  0027B8                     
  2531                           ;LCD.c: 157:  LATEbits.LATE2 = 0;
  2532  0027B8  94C2               	bcf	194,2,c	;volatile
  2533  0027BA                     i2l1551:
  2534                           
  2535                           ;LCD.c: 158:  aux = aux & 0x80;
  2536  0027BA  5021               	movf	i2LEER_LCD@aux^(0+1280),w,c
  2537  0027BC  0B80               	andlw	128
  2538  0027BE  6E21               	movwf	i2LEER_LCD@aux^(0+1280),c
  2539                           
  2540                           ;LCD.c: 159:  while(aux == 0x80)
  2541  0027C0  EFF7  F013         	goto	i2l1565
  2542  0027C4                     i2l87:
  2543                           
  2544                           ;LCD.c: 160:         {;LCD.c: 161:             LATEbits.LATE2 = 1;
  2545  0027C4  84C2               	bsf	194,2,c	;volatile
  2546  0027C6                     
  2547                           ;LCD.c: 162:             _delay((unsigned long)((100)*(4000000UL/4000000.0)));
  2548  0027C6  0E21               	movlw	33
  2549  0027C8                     i2u66_47:
  2550  0027C8  2EE8               	decfsz	wreg,f,c
  2551  0027CA  D7FE               	bra	i2u66_47
  2552  0027CC  F000               	nop	
  2553  0027CE                     
  2554                           ;LCD.c: 163:             aux = PORTD;
  2555  0027CE  0061 F344  F521    	movff	1233,i2LEER_LCD@aux	;volatile
  2556  0027D4                     
  2557                           ;LCD.c: 164:             LATEbits.LATE2 = 0;
  2558  0027D4  94C2               	bcf	194,2,c	;volatile
  2559                           
  2560                           ;LCD.c: 165:             _delay((unsigned long)((100)*(4000000UL/4000000.0)));
  2561  0027D6  0E21               	movlw	33
  2562  0027D8                     i2u67_47:
  2563  0027D8  2EE8               	decfsz	wreg,f,c
  2564  0027DA  D7FE               	bra	i2u67_47
  2565  0027DC  F000               	nop	
  2566  0027DE                     
  2567                           ;LCD.c: 166:             LATEbits.LATE2 = 1;
  2568  0027DE  84C2               	bsf	194,2,c	;volatile
  2569                           
  2570                           ;LCD.c: 167:             _delay((unsigned long)((100)*(4000000UL/4000000.0)));
  2571  0027E0  0E21               	movlw	33
  2572  0027E2                     i2u68_47:
  2573  0027E2  2EE8               	decfsz	wreg,f,c
  2574  0027E4  D7FE               	bra	i2u68_47
  2575  0027E6  F000               	nop	
  2576  0027E8                     
  2577                           ;LCD.c: 168:             LATEbits.LATE2 = 0;
  2578  0027E8  94C2               	bcf	194,2,c	;volatile
  2579  0027EA  EFDD  F013         	goto	i2l1551
  2580  0027EE                     i2l1565:
  2581                           
  2582                           ;LCD.c: 159:  while(aux == 0x80)
  2583  0027EE  0E80               	movlw	128
  2584  0027F0  1821               	xorwf	i2LEER_LCD@aux^(0+1280),w,c
  2585  0027F2  B4D8               	btfsc	status,2,c
  2586  0027F4  EFFE  F013         	goto	i2u26_41
  2587  0027F8  EF00  F014         	goto	i2u26_40
  2588  0027FC                     i2u26_41:
  2589  0027FC  EFE2  F013         	goto	i2l87
  2590  002800                     i2u26_40:
  2591  002800  0012               	return		;funcret
  2592  002802                     __end_ofi2_LEER_LCD:
  2593                           	callstack 0
  2594                           
  2595 ;; *************** function i2_ENVIA_NIBBLE *****************
  2596 ;; Defined at:
  2597 ;;		line 118 in file "LCD.c"
  2598 ;; Parameters:    Size  Location     Type
  2599 ;;  dato            1    wreg     unsigned char 
  2600 ;; Auto vars:     Size  Location     Type
  2601 ;;  dato            1   32[COMRAM] unsigned char 
  2602 ;; Return value:  Size  Location     Type
  2603 ;;                  1    wreg      void 
  2604 ;; Registers used:
  2605 ;;		wreg, status,2, status,0
  2606 ;; Tracked objects:
  2607 ;;		On entry : 0/0
  2608 ;;		On exit  : 0/0
  2609 ;;		Unchanged: 0/0
  2610 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2611 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2612 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2613 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2614 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2615 ;;Total ram usage:        1 bytes
  2616 ;; Hardware stack levels used: 1
  2617 ;; This function calls:
  2618 ;;		Nothing
  2619 ;; This function is called by:
  2620 ;;		i2_ENVIA_CHAR
  2621 ;;		i2_ENVIA_LCD_CMD
  2622 ;; This function uses a non-reentrant model
  2623 ;;
  2624                           
  2625                           	psect	text24
  2626  002CAE                     __ptext24:
  2627                           	callstack 0
  2628  002CAE                     i2_ENVIA_NIBBLE:
  2629                           	callstack 118
  2630                           
  2631                           ;incstack = 0
  2632                           ;i2ENVIA_NIBBLE@dato stored from wreg
  2633  002CAE  6E21               	movwf	i2ENVIA_NIBBLE@dato^(0+1280),c
  2634  002CB0                     
  2635                           ;LCD.c: 118: void ENVIA_NIBBLE(unsigned char dato);LCD.c: 119: {;LCD.c: 120:  LATD &= 0x
      +                          0F;
  2636  002CB0  0E0F               	movlw	15
  2637  002CB2  16C1               	andwf	193,f,c	;volatile
  2638                           
  2639                           ;LCD.c: 121:  dato &= 0xF0;
  2640  002CB4  0EF0               	movlw	240
  2641  002CB6  1621               	andwf	i2ENVIA_NIBBLE@dato^(0+1280),f,c
  2642                           
  2643                           ;LCD.c: 122:  LATD|= dato;
  2644  002CB8  5021               	movf	i2ENVIA_NIBBLE@dato^(0+1280),w,c	;volatile
  2645  002CBA  12C1               	iorwf	193,f,c	;volatile
  2646  002CBC                     
  2647                           ;LCD.c: 123:  LATEbits.LATE2 = 1;
  2648  002CBC  84C2               	bsf	194,2,c	;volatile
  2649  002CBE                     
  2650                           ;LCD.c: 124:     _delay((unsigned long)((100)*(4000000UL/4000000.0)));
  2651  002CBE  0E21               	movlw	33
  2652  002CC0                     i2u69_47:
  2653  002CC0  2EE8               	decfsz	wreg,f,c
  2654  002CC2  D7FE               	bra	i2u69_47
  2655  002CC4  F000               	nop	
  2656  002CC6                     
  2657                           ;LCD.c: 125:  LATEbits.LATE2 = 0;
  2658  002CC6  94C2               	bcf	194,2,c	;volatile
  2659  002CC8  0012               	return		;funcret
  2660  002CCA                     __end_ofi2_ENVIA_NIBBLE:
  2661                           	callstack 0
  2662                           
  2663 ;; *************** function _U5_Sendbyte *****************
  2664 ;; Defined at:
  2665 ;;		line 48 in file "maincode4.c"
  2666 ;; Parameters:    Size  Location     Type
  2667 ;;  dato            1    wreg     unsigned char 
  2668 ;; Auto vars:     Size  Location     Type
  2669 ;;  dato            1   16[COMRAM] unsigned char 
  2670 ;; Return value:  Size  Location     Type
  2671 ;;                  1    wreg      void 
  2672 ;; Registers used:
  2673 ;;		wreg
  2674 ;; Tracked objects:
  2675 ;;		On entry : 0/0
  2676 ;;		On exit  : 0/0
  2677 ;;		Unchanged: 0/0
  2678 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2679 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2680 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2681 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2682 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2683 ;;Total ram usage:        1 bytes
  2684 ;; Hardware stack levels used: 1
  2685 ;; This function calls:
  2686 ;;		Nothing
  2687 ;; This function is called by:
  2688 ;;		_INT1_ISR
  2689 ;;		_INT0_ISR
  2690 ;; This function uses a non-reentrant model
  2691 ;;
  2692                           
  2693                           	psect	text25
  2694  002CCA                     __ptext25:
  2695                           	callstack 0
  2696  002CCA                     _U5_Sendbyte:
  2697                           	callstack 120
  2698                           
  2699                           ;incstack = 0
  2700                           ;U5_Sendbyte@dato stored from wreg
  2701  002CCA  6E11               	movwf	U5_Sendbyte@dato^(0+1280),c
  2702  002CCC                     
  2703                           ;maincode4.c: 49:     U5TXB = dato;
  2704  002CCC  0061  F444  F2EF   	movff	U5_Sendbyte@dato,751	;volatile
  2705  002CD2                     i2l181:
  2706  002CD2  0102               	movlb	2	; () banked
  2707  002CD4  AFFE               	btfss	254,7,b	;volatile
  2708  002CD6  EF6F  F016         	goto	i2u10_41
  2709  002CDA  EF71  F016         	goto	i2u10_40
  2710  002CDE                     i2u10_41:
  2711  002CDE  EF69  F016         	goto	i2l181
  2712  002CE2                     i2u10_40:
  2713  002CE2                     
  2714                           ; BSR set to: 2
  2715  002CE2  0012               	return		;funcret
  2716  002CE4                     __end_of_U5_Sendbyte:
  2717                           	callstack 0
  2718                           
  2719 ;; *************** function _INT0_ISR *****************
  2720 ;; Defined at:
  2721 ;;		line 92 in file "maincode4.c"
  2722 ;; Parameters:    Size  Location     Type
  2723 ;;		None
  2724 ;; Auto vars:     Size  Location     Type
  2725 ;;		None
  2726 ;; Return value:  Size  Location     Type
  2727 ;;                  1    wreg      void 
  2728 ;; Registers used:
  2729 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2730 ;; Tracked objects:
  2731 ;;		On entry : 0/0
  2732 ;;		On exit  : 0/0
  2733 ;;		Unchanged: 0/0
  2734 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2735 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2736 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2737 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2738 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2739 ;;Total ram usage:        4 bytes
  2740 ;; Hardware stack levels used: 1
  2741 ;; Hardware stack levels required when called: 4
  2742 ;; This function calls:
  2743 ;;		_U5_Sendbyte
  2744 ;;		i2_pantallazo
  2745 ;; This function is called by:
  2746 ;;		Interrupt level 2
  2747 ;; This function uses a non-reentrant model
  2748 ;;
  2749                           
  2750                           	psect	text26
  2751  0028B0                     __ptext26:
  2752                           	callstack 0
  2753  0028B0                     _INT0_ISR:
  2754                           	callstack 117
  2755                           
  2756                           ; BSR set to: 2
  2757                           ;incstack = 0
  2758  0028B0  0061 F3D8  F51D    	movff	tblptrl,??_INT0_ISR
  2759  0028B6  0061 F3DC  F51E    	movff	tblptrh,??_INT0_ISR+1
  2760  0028BC  0061 F3E0  F51F    	movff	tblptru,??_INT0_ISR+2
  2761  0028C2  0061 F3D4  F520    	movff	tablat,??_INT0_ISR+3
  2762  0028C8                     
  2763                           ;maincode4.c: 93:     PIR1bits.INT0IF = 0;
  2764  0028C8  90AF               	bcf	175,0,c	;volatile
  2765  0028CA                     
  2766                           ;maincode4.c: 94:     U5_Sendbyte('m');
  2767  0028CA  0E6D               	movlw	109
  2768  0028CC  EC65  F016         	call	_U5_Sendbyte
  2769                           
  2770                           ;maincode4.c: 95:     U5_Sendbyte('u');
  2771  0028D0  0E75               	movlw	117
  2772  0028D2  EC65  F016         	call	_U5_Sendbyte
  2773                           
  2774                           ;maincode4.c: 96:     U5_Sendbyte('n');
  2775  0028D6  0E6E               	movlw	110
  2776  0028D8  EC65  F016         	call	_U5_Sendbyte
  2777                           
  2778                           ;maincode4.c: 97:     U5_Sendbyte('d');
  2779  0028DC  0E64               	movlw	100
  2780  0028DE  EC65  F016         	call	_U5_Sendbyte
  2781                           
  2782                           ;maincode4.c: 98:     U5_Sendbyte('o');
  2783  0028E2  0E6F               	movlw	111
  2784  0028E4  EC65  F016         	call	_U5_Sendbyte
  2785  0028E8                     
  2786                           ;maincode4.c: 99:     pantallazo();
  2787  0028E8  ECFE  F014         	call	i2_pantallazo	;wreg free
  2788  0028EC  0061  F480  F4F5   	movff	??_INT0_ISR+3,tablat
  2789  0028F2  0061  F47C  F4F8   	movff	??_INT0_ISR+2,tblptru
  2790  0028F8  0061  F478  F4F7   	movff	??_INT0_ISR+1,tblptrh
  2791  0028FE  0061  F474  F4F6   	movff	??_INT0_ISR,tblptrl
  2792  002904  0011               	retfie		f
  2793  002906                     __end_of_INT0_ISR:
  2794                           	callstack 0
  2795                           
  2796 ;; *************** function _U5RX_ISR *****************
  2797 ;; Defined at:
  2798 ;;		line 102 in file "maincode4.c"
  2799 ;; Parameters:    Size  Location     Type
  2800 ;;		None
  2801 ;; Auto vars:     Size  Location     Type
  2802 ;;		None
  2803 ;; Return value:  Size  Location     Type
  2804 ;;                  1    wreg      void 
  2805 ;; Registers used:
  2806 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2807 ;; Tracked objects:
  2808 ;;		On entry : 0/0
  2809 ;;		On exit  : 0/0
  2810 ;;		Unchanged: 0/0
  2811 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2812 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2813 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2814 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2815 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2816 ;;Total ram usage:        6 bytes
  2817 ;; Hardware stack levels used: 1
  2818 ;; Hardware stack levels required when called: 3
  2819 ;; This function calls:
  2820 ;;		i2_ESCRIBE_MENSAJE2
  2821 ;;		i2_POS_CURSOR
  2822 ;; This function is called by:
  2823 ;;		Interrupt level 2
  2824 ;; This function uses a non-reentrant model
  2825 ;;
  2826                           
  2827                           	psect	text27
  2828  002548                     __ptext27:
  2829                           	callstack 0
  2830  002548                     _U5RX_ISR:
  2831                           	callstack 118
  2832                           
  2833                           ;incstack = 0
  2834  002548  0061 F3D8  F52D    	movff	tblptrl,??_U5RX_ISR+2
  2835  00254E  0061 F3DC  F52E    	movff	tblptrh,??_U5RX_ISR+3
  2836  002554  0061 F3E0  F52F    	movff	tblptru,??_U5RX_ISR+4
  2837  00255A  0061 F3D4  F530    	movff	tablat,??_U5RX_ISR+5
  2838  002560                     
  2839                           ;maincode4.c: 103:     PIR13bits.U5RXIF = 0;
  2840  002560  90BB               	bcf	187,0,c	;volatile
  2841                           
  2842                           ;maincode4.c: 104:     switch(U5RXB){
  2843  002562  EFDA  F012         	goto	i2l1833
  2844  002566                     i2l1819:
  2845                           
  2846                           ; BSR set to: 2
  2847                           ;maincode4.c: 106:             POS_CURSOR(1,0);
  2848  002566  0E00               	movlw	0
  2849  002568  6E24               	movwf	i2POS_CURSOR@columna^(0+1280),c
  2850  00256A  0E01               	movlw	1
  2851  00256C  ECBF  F015         	call	i2_POS_CURSOR
  2852  002570                     
  2853                           ;maincode4.c: 107:             ESCRIBE_MENSAJE2("machucaste I");
  2854  002570  0E11               	movlw	low STR_3
  2855  002572  6E25               	movwf	i2ESCRIBE_MENSAJE2@cadena^(0+1280),c
  2856  002574  0E25               	movlw	high STR_3
  2857  002576  6E26               	movwf	(i2ESCRIBE_MENSAJE2@cadena+1)^(0+1280),c
  2858  002578  ECAD  F014         	call	i2_ESCRIBE_MENSAJE2	;wreg free
  2859                           
  2860                           ;maincode4.c: 108:             break;
  2861  00257C  EFF0  F012         	goto	i2l219
  2862  002580                     i2l1823:
  2863                           
  2864                           ; BSR set to: 2
  2865                           ;maincode4.c: 110:             POS_CURSOR(1,0);
  2866  002580  0E00               	movlw	0
  2867  002582  6E24               	movwf	i2POS_CURSOR@columna^(0+1280),c
  2868  002584  0E01               	movlw	1
  2869  002586  ECBF  F015         	call	i2_POS_CURSOR
  2870  00258A                     
  2871                           ;maincode4.c: 111:             ESCRIBE_MENSAJE2("machucaste O");
  2872  00258A  0E1E               	movlw	low STR_4
  2873  00258C  6E25               	movwf	i2ESCRIBE_MENSAJE2@cadena^(0+1280),c
  2874  00258E  0E25               	movlw	high STR_4
  2875  002590  6E26               	movwf	(i2ESCRIBE_MENSAJE2@cadena+1)^(0+1280),c
  2876  002592  ECAD  F014         	call	i2_ESCRIBE_MENSAJE2	;wreg free
  2877                           
  2878                           ;maincode4.c: 112:             break;
  2879  002596  EFF0  F012         	goto	i2l219
  2880  00259A                     i2l1827:
  2881                           
  2882                           ; BSR set to: 2
  2883                           ;maincode4.c: 114:             POS_CURSOR(1,0);
  2884  00259A  0E00               	movlw	0
  2885  00259C  6E24               	movwf	i2POS_CURSOR@columna^(0+1280),c
  2886  00259E  0E01               	movlw	1
  2887  0025A0  ECBF  F015         	call	i2_POS_CURSOR
  2888  0025A4                     
  2889                           ;maincode4.c: 115:             ESCRIBE_MENSAJE2("tecla errada");
  2890  0025A4  0E2B               	movlw	low STR_5
  2891  0025A6  6E25               	movwf	i2ESCRIBE_MENSAJE2@cadena^(0+1280),c
  2892  0025A8  0E25               	movlw	high STR_5
  2893  0025AA  6E26               	movwf	(i2ESCRIBE_MENSAJE2@cadena+1)^(0+1280),c
  2894  0025AC  ECAD  F014         	call	i2_ESCRIBE_MENSAJE2	;wreg free
  2895                           
  2896                           ;maincode4.c: 116:             break;
  2897  0025B0  EFF0  F012         	goto	i2l219
  2898  0025B4                     i2l1833:
  2899  0025B4  0102               	movlb	2	; () banked
  2900  0025B6  51ED               	movf	237,w,b	;volatile
  2901  0025B8  6E2B               	movwf	??_U5RX_ISR^(0+1280),c
  2902  0025BA  6A2C               	clrf	(??_U5RX_ISR+1)^(0+1280),c
  2903                           
  2904                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2905                           ; Switch size 1, requested type "simple"
  2906                           ; Number of cases is 1, Range of values is 0 to 0
  2907                           ; switch strategies available:
  2908                           ; Name         Instructions Cycles
  2909                           ; simple_byte            4     3 (average)
  2910                           ;	Chosen strategy is simple_byte
  2911  0025BC  502C               	movf	(??_U5RX_ISR+1)^(0+1280),w,c
  2912  0025BE  0A00               	xorlw	0	; case 0
  2913  0025C0  B4D8               	btfsc	status,2,c
  2914  0025C2  EFE5  F012         	goto	i2l1871
  2915  0025C6  EFCD  F012         	goto	i2l1827
  2916  0025CA                     i2l1871:
  2917                           
  2918                           ; BSR set to: 2
  2919                           ; Switch size 1, requested type "simple"
  2920                           ; Number of cases is 2, Range of values is 73 to 79
  2921                           ; switch strategies available:
  2922                           ; Name         Instructions Cycles
  2923                           ; simple_byte            7     4 (average)
  2924                           ;	Chosen strategy is simple_byte
  2925  0025CA  502B               	movf	??_U5RX_ISR^(0+1280),w,c
  2926  0025CC  0A49               	xorlw	73	; case 73
  2927  0025CE  B4D8               	btfsc	status,2,c
  2928  0025D0  EFB3  F012         	goto	i2l1819
  2929  0025D4  0A06               	xorlw	6	; case 79
  2930  0025D6  B4D8               	btfsc	status,2,c
  2931  0025D8  EFC0  F012         	goto	i2l1823
  2932  0025DC  EFCD  F012         	goto	i2l1827
  2933  0025E0                     i2l219:
  2934  0025E0  0061  F4C0  F4F5   	movff	??_U5RX_ISR+5,tablat
  2935  0025E6  0061  F4BC  F4F8   	movff	??_U5RX_ISR+4,tblptru
  2936  0025EC  0061  F4B8  F4F7   	movff	??_U5RX_ISR+3,tblptrh
  2937  0025F2  0061  F4B4  F4F6   	movff	??_U5RX_ISR+2,tblptrl
  2938  0025F8  0011               	retfie		f
  2939  0025FA                     __end_of_U5RX_ISR:
  2940                           	callstack 0
  2941                           
  2942                           ;
  2943                           ; Interrupt Vector Table @ 0x8
  2944                           ;
  2945                           
  2946                           	psect	ivt0x8
  2947  000008                     __pivt0x8:
  2948                           	callstack 0
  2949  000008                     ivt0x8_base:
  2950                           	callstack 0
  2951                           
  2952                           ; Vector 0 : SWINT
  2953  000008  0040               	dw	ivt0x8_undefint shr (0+2)
  2954                           
  2955                           ; Vector 1 : HLVD
  2956  00000A  0040               	dw	ivt0x8_undefint shr (0+2)
  2957                           
  2958                           ; Vector 2 : OSF
  2959  00000C  0040               	dw	ivt0x8_undefint shr (0+2)
  2960                           
  2961                           ; Vector 3 : CSW
  2962  00000E  0040               	dw	ivt0x8_undefint shr (0+2)
  2963                           
  2964                           ; Vector 4 : Undefined
  2965  000010  0040               	dw	ivt0x8_undefint shr (0+2)
  2966                           
  2967                           ; Vector 5 : CLC1
  2968  000012  0040               	dw	ivt0x8_undefint shr (0+2)
  2969                           
  2970                           ; Vector 6 : Undefined
  2971  000014  0040               	dw	ivt0x8_undefint shr (0+2)
  2972                           
  2973                           ; Vector 7 : IOC
  2974  000016  0040               	dw	ivt0x8_undefint shr (0+2)
  2975                           
  2976                           ; Vector 8 : INT0
  2977  000018  0A2C               	dw	_INT0_ISR shr (0+2)
  2978                           
  2979                           ; Vector 9 : ZCD
  2980  00001A  0040               	dw	ivt0x8_undefint shr (0+2)
  2981                           
  2982                           ; Vector 10 : AD
  2983  00001C  0040               	dw	ivt0x8_undefint shr (0+2)
  2984                           
  2985                           ; Vector 11 : ACT
  2986  00001E  0040               	dw	ivt0x8_undefint shr (0+2)
  2987                           
  2988                           ; Vector 12 : CMP1
  2989  000020  0040               	dw	ivt0x8_undefint shr (0+2)
  2990                           
  2991                           ; Vector 13 : SMT1
  2992  000022  0040               	dw	ivt0x8_undefint shr (0+2)
  2993                           
  2994                           ; Vector 14 : SMT1PRA
  2995  000024  0040               	dw	ivt0x8_undefint shr (0+2)
  2996                           
  2997                           ; Vector 15 : SMT1PRW
  2998  000026  0040               	dw	ivt0x8_undefint shr (0+2)
  2999                           
  3000                           ; Vector 16 : ADT
  3001  000028  0040               	dw	ivt0x8_undefint shr (0+2)
  3002                           
  3003                           ; Vector 17 : Undefined
  3004  00002A  0040               	dw	ivt0x8_undefint shr (0+2)
  3005                           
  3006                           ; Vector 18 : Undefined
  3007  00002C  0040               	dw	ivt0x8_undefint shr (0+2)
  3008                           
  3009                           ; Vector 19 : Undefined
  3010  00002E  0040               	dw	ivt0x8_undefint shr (0+2)
  3011                           
  3012                           ; Vector 20 : DMA1SCNT
  3013  000030  0040               	dw	ivt0x8_undefint shr (0+2)
  3014                           
  3015                           ; Vector 21 : DMA1DCNT
  3016  000032  0040               	dw	ivt0x8_undefint shr (0+2)
  3017                           
  3018                           ; Vector 22 : DMA1OR
  3019  000034  0040               	dw	ivt0x8_undefint shr (0+2)
  3020                           
  3021                           ; Vector 23 : DMA1A
  3022  000036  0040               	dw	ivt0x8_undefint shr (0+2)
  3023                           
  3024                           ; Vector 24 : SPI1RX
  3025  000038  0040               	dw	ivt0x8_undefint shr (0+2)
  3026                           
  3027                           ; Vector 25 : SPI1TX
  3028  00003A  0040               	dw	ivt0x8_undefint shr (0+2)
  3029                           
  3030                           ; Vector 26 : SPI1
  3031  00003C  0040               	dw	ivt0x8_undefint shr (0+2)
  3032                           
  3033                           ; Vector 27 : TMR2
  3034  00003E  0040               	dw	ivt0x8_undefint shr (0+2)
  3035                           
  3036                           ; Vector 28 : TMR1
  3037  000040  0040               	dw	ivt0x8_undefint shr (0+2)
  3038                           
  3039                           ; Vector 29 : TMR1G
  3040  000042  0040               	dw	ivt0x8_undefint shr (0+2)
  3041                           
  3042                           ; Vector 30 : CCP1
  3043  000044  0040               	dw	ivt0x8_undefint shr (0+2)
  3044                           
  3045                           ; Vector 31 : TMR0
  3046  000046  0040               	dw	ivt0x8_undefint shr (0+2)
  3047                           
  3048                           ; Vector 32 : U1RX
  3049  000048  0040               	dw	ivt0x8_undefint shr (0+2)
  3050                           
  3051                           ; Vector 33 : U1TX
  3052  00004A  0040               	dw	ivt0x8_undefint shr (0+2)
  3053                           
  3054                           ; Vector 34 : U1E
  3055  00004C  0040               	dw	ivt0x8_undefint shr (0+2)
  3056                           
  3057                           ; Vector 35 : U1
  3058  00004E  0040               	dw	ivt0x8_undefint shr (0+2)
  3059                           
  3060                           ; Vector 36 : Undefined
  3061  000050  0040               	dw	ivt0x8_undefint shr (0+2)
  3062                           
  3063                           ; Vector 37 : Undefined
  3064  000052  0040               	dw	ivt0x8_undefint shr (0+2)
  3065                           
  3066                           ; Vector 38 : PWM1PR
  3067  000054  0040               	dw	ivt0x8_undefint shr (0+2)
  3068                           
  3069                           ; Vector 39 : PWM1
  3070  000056  0040               	dw	ivt0x8_undefint shr (0+2)
  3071                           
  3072                           ; Vector 40 : SPI2RX
  3073  000058  0040               	dw	ivt0x8_undefint shr (0+2)
  3074                           
  3075                           ; Vector 41 : SPI2TX
  3076  00005A  0040               	dw	ivt0x8_undefint shr (0+2)
  3077                           
  3078                           ; Vector 42 : SPI2
  3079  00005C  0040               	dw	ivt0x8_undefint shr (0+2)
  3080                           
  3081                           ; Vector 43 : Undefined
  3082  00005E  0040               	dw	ivt0x8_undefint shr (0+2)
  3083                           
  3084                           ; Vector 44 : TMR3
  3085  000060  0040               	dw	ivt0x8_undefint shr (0+2)
  3086                           
  3087                           ; Vector 45 : TMR3G
  3088  000062  0040               	dw	ivt0x8_undefint shr (0+2)
  3089                           
  3090                           ; Vector 46 : PWM2PR
  3091  000064  0040               	dw	ivt0x8_undefint shr (0+2)
  3092                           
  3093                           ; Vector 47 : PWM2
  3094  000066  0040               	dw	ivt0x8_undefint shr (0+2)
  3095                           
  3096                           ; Vector 48 : INT1
  3097  000068  0A6B               	dw	_INT1_ISR shr (0+2)
  3098                           
  3099                           ; Vector 49 : CLC2
  3100  00006A  0040               	dw	ivt0x8_undefint shr (0+2)
  3101                           
  3102                           ; Vector 50 : CWG1
  3103  00006C  0040               	dw	ivt0x8_undefint shr (0+2)
  3104                           
  3105                           ; Vector 51 : NCO1
  3106  00006E  0040               	dw	ivt0x8_undefint shr (0+2)
  3107                           
  3108                           ; Vector 52 : DMA2SCNT
  3109  000070  0040               	dw	ivt0x8_undefint shr (0+2)
  3110                           
  3111                           ; Vector 53 : DMA2DCNT
  3112  000072  0040               	dw	ivt0x8_undefint shr (0+2)
  3113                           
  3114                           ; Vector 54 : DMA2OR
  3115  000074  0040               	dw	ivt0x8_undefint shr (0+2)
  3116                           
  3117                           ; Vector 55 : DMA2A
  3118  000076  0040               	dw	ivt0x8_undefint shr (0+2)
  3119                           
  3120                           ; Vector 56 : I2C1RX
  3121  000078  0040               	dw	ivt0x8_undefint shr (0+2)
  3122                           
  3123                           ; Vector 57 : I2C1TX
  3124  00007A  0040               	dw	ivt0x8_undefint shr (0+2)
  3125                           
  3126                           ; Vector 58 : I2C1
  3127  00007C  0040               	dw	ivt0x8_undefint shr (0+2)
  3128                           
  3129                           ; Vector 59 : I2C1E
  3130  00007E  0040               	dw	ivt0x8_undefint shr (0+2)
  3131                           
  3132                           ; Vector 60 : Undefined
  3133  000080  0040               	dw	ivt0x8_undefint shr (0+2)
  3134                           
  3135                           ; Vector 61 : CLC3
  3136  000082  0040               	dw	ivt0x8_undefint shr (0+2)
  3137                           
  3138                           ; Vector 62 : PWM3PR
  3139  000084  0040               	dw	ivt0x8_undefint shr (0+2)
  3140                           
  3141                           ; Vector 63 : PWM3
  3142  000086  0040               	dw	ivt0x8_undefint shr (0+2)
  3143                           
  3144                           ; Vector 64 : U2RX
  3145  000088  0040               	dw	ivt0x8_undefint shr (0+2)
  3146                           
  3147                           ; Vector 65 : U2TX
  3148  00008A  0040               	dw	ivt0x8_undefint shr (0+2)
  3149                           
  3150                           ; Vector 66 : U2E
  3151  00008C  0040               	dw	ivt0x8_undefint shr (0+2)
  3152                           
  3153                           ; Vector 67 : U2
  3154  00008E  0040               	dw	ivt0x8_undefint shr (0+2)
  3155                           
  3156                           ; Vector 68 : TMR5
  3157  000090  0040               	dw	ivt0x8_undefint shr (0+2)
  3158                           
  3159                           ; Vector 69 : TMR5G
  3160  000092  0040               	dw	ivt0x8_undefint shr (0+2)
  3161                           
  3162                           ; Vector 70 : CCP2
  3163  000094  0040               	dw	ivt0x8_undefint shr (0+2)
  3164                           
  3165                           ; Vector 71 : SCAN
  3166  000096  0040               	dw	ivt0x8_undefint shr (0+2)
  3167                           
  3168                           ; Vector 72 : U3RX
  3169  000098  0040               	dw	ivt0x8_undefint shr (0+2)
  3170                           
  3171                           ; Vector 73 : U3TX
  3172  00009A  0040               	dw	ivt0x8_undefint shr (0+2)
  3173                           
  3174                           ; Vector 74 : U3E
  3175  00009C  0040               	dw	ivt0x8_undefint shr (0+2)
  3176                           
  3177                           ; Vector 75 : U3
  3178  00009E  0040               	dw	ivt0x8_undefint shr (0+2)
  3179                           
  3180                           ; Vector 76 : Undefined
  3181  0000A0  0040               	dw	ivt0x8_undefint shr (0+2)
  3182                           
  3183                           ; Vector 77 : CLC4
  3184  0000A2  0040               	dw	ivt0x8_undefint shr (0+2)
  3185                           
  3186                           ; Vector 78 : Undefined
  3187  0000A4  0040               	dw	ivt0x8_undefint shr (0+2)
  3188                           
  3189                           ; Vector 79 : Undefined
  3190  0000A6  0040               	dw	ivt0x8_undefint shr (0+2)
  3191                           
  3192                           ; Vector 80 : INT2
  3193  0000A8  0040               	dw	ivt0x8_undefint shr (0+2)
  3194                           
  3195                           ; Vector 81 : CLC5
  3196  0000AA  0040               	dw	ivt0x8_undefint shr (0+2)
  3197                           
  3198                           ; Vector 82 : CWG2
  3199  0000AC  0040               	dw	ivt0x8_undefint shr (0+2)
  3200                           
  3201                           ; Vector 83 : NCO2
  3202  0000AE  0040               	dw	ivt0x8_undefint shr (0+2)
  3203                           
  3204                           ; Vector 84 : DMA3SCNT
  3205  0000B0  0040               	dw	ivt0x8_undefint shr (0+2)
  3206                           
  3207                           ; Vector 85 : DMA3DCNT
  3208  0000B2  0040               	dw	ivt0x8_undefint shr (0+2)
  3209                           
  3210                           ; Vector 86 : DMA3OR
  3211  0000B4  0040               	dw	ivt0x8_undefint shr (0+2)
  3212                           
  3213                           ; Vector 87 : DMA3A
  3214  0000B6  0040               	dw	ivt0x8_undefint shr (0+2)
  3215                           
  3216                           ; Vector 88 : CCP3
  3217  0000B8  0040               	dw	ivt0x8_undefint shr (0+2)
  3218                           
  3219                           ; Vector 89 : CLC6
  3220  0000BA  0040               	dw	ivt0x8_undefint shr (0+2)
  3221                           
  3222                           ; Vector 90 : CWG3
  3223  0000BC  0040               	dw	ivt0x8_undefint shr (0+2)
  3224                           
  3225                           ; Vector 91 : TMR4
  3226  0000BE  0040               	dw	ivt0x8_undefint shr (0+2)
  3227                           
  3228                           ; Vector 92 : DMA4SCNT
  3229  0000C0  0040               	dw	ivt0x8_undefint shr (0+2)
  3230                           
  3231                           ; Vector 93 : DMA4DCNT
  3232  0000C2  0040               	dw	ivt0x8_undefint shr (0+2)
  3233                           
  3234                           ; Vector 94 : DMA4OR
  3235  0000C4  0040               	dw	ivt0x8_undefint shr (0+2)
  3236                           
  3237                           ; Vector 95 : DMA4A
  3238  0000C6  0040               	dw	ivt0x8_undefint shr (0+2)
  3239                           
  3240                           ; Vector 96 : U4RX
  3241  0000C8  0040               	dw	ivt0x8_undefint shr (0+2)
  3242                           
  3243                           ; Vector 97 : U4TX
  3244  0000CA  0040               	dw	ivt0x8_undefint shr (0+2)
  3245                           
  3246                           ; Vector 98 : U4E
  3247  0000CC  0040               	dw	ivt0x8_undefint shr (0+2)
  3248                           
  3249                           ; Vector 99 : U4
  3250  0000CE  0040               	dw	ivt0x8_undefint shr (0+2)
  3251                           
  3252                           ; Vector 100 : DMA5SCNT
  3253  0000D0  0040               	dw	ivt0x8_undefint shr (0+2)
  3254                           
  3255                           ; Vector 101 : DMA5DCNT
  3256  0000D2  0040               	dw	ivt0x8_undefint shr (0+2)
  3257                           
  3258                           ; Vector 102 : DMA5OR
  3259  0000D4  0040               	dw	ivt0x8_undefint shr (0+2)
  3260                           
  3261                           ; Vector 103 : DMA5A
  3262  0000D6  0040               	dw	ivt0x8_undefint shr (0+2)
  3263                           
  3264                           ; Vector 104 : U5RX
  3265  0000D8  0952               	dw	_U5RX_ISR shr (0+2)
  3266                           
  3267                           ; Vector 105 : U5TX
  3268  0000DA  0040               	dw	ivt0x8_undefint shr (0+2)
  3269                           
  3270                           ; Vector 106 : U5E
  3271  0000DC  0040               	dw	ivt0x8_undefint shr (0+2)
  3272                           
  3273                           ; Vector 107 : U5
  3274  0000DE  0040               	dw	ivt0x8_undefint shr (0+2)
  3275                           
  3276                           ; Vector 108 : DMA6SCNT
  3277  0000E0  0040               	dw	ivt0x8_undefint shr (0+2)
  3278                           
  3279                           ; Vector 109 : DMA6DCNT
  3280  0000E2  0040               	dw	ivt0x8_undefint shr (0+2)
  3281                           
  3282                           ; Vector 110 : DMA6OR
  3283  0000E4  0040               	dw	ivt0x8_undefint shr (0+2)
  3284                           
  3285                           ; Vector 111 : DMA6A
  3286  0000E6  0040               	dw	ivt0x8_undefint shr (0+2)
  3287                           
  3288                           ; Vector 112 : Undefined
  3289  0000E8  0040               	dw	ivt0x8_undefint shr (0+2)
  3290                           
  3291                           ; Vector 113 : CLC7
  3292  0000EA  0040               	dw	ivt0x8_undefint shr (0+2)
  3293                           
  3294                           ; Vector 114 : CMP2
  3295  0000EC  0040               	dw	ivt0x8_undefint shr (0+2)
  3296                           
  3297                           ; Vector 115 : NCO3
  3298  0000EE  0040               	dw	ivt0x8_undefint shr (0+2)
  3299                           
  3300                           ; Vector 116 : Undefined
  3301  0000F0  0040               	dw	ivt0x8_undefint shr (0+2)
  3302                           
  3303                           ; Vector 117 : Undefined
  3304  0000F2  0040               	dw	ivt0x8_undefint shr (0+2)
  3305                           
  3306                           ; Vector 118 : Undefined
  3307  0000F4  0040               	dw	ivt0x8_undefint shr (0+2)
  3308                           
  3309                           ; Vector 119 : Undefined
  3310  0000F6  0040               	dw	ivt0x8_undefint shr (0+2)
  3311                           
  3312                           ; Vector 120 : NVM
  3313  0000F8  0040               	dw	ivt0x8_undefint shr (0+2)
  3314                           
  3315                           ; Vector 121 : CLC8
  3316  0000FA  0040               	dw	ivt0x8_undefint shr (0+2)
  3317                           
  3318                           ; Vector 122 : CRC
  3319  0000FC  0040               	dw	ivt0x8_undefint shr (0+2)
  3320                           
  3321                           ; Vector 123 : TMR6
  3322  0000FE  0040               	dw	ivt0x8_undefint shr (0+2)
  3323  000100                     ivt0x8_undefint:
  3324                           	callstack 0
  3325  000100  00FF               	reset	
  3326                           
  3327                           	psect	rparam
  3328  0000                     
  3329                           	psect	idloc
  3330                           
  3331                           ;Config register IDLOC0 @ 0x200000
  3332                           ;	unspecified, using default values
  3333  200000                     	org	2097152
  3334  200000  0FFF               	dw	4095
  3335                           
  3336                           ;Config register IDLOC1 @ 0x200002
  3337                           ;	unspecified, using default values
  3338  200002                     	org	2097154
  3339  200002  0FFF               	dw	4095
  3340                           
  3341                           ;Config register IDLOC2 @ 0x200004
  3342                           ;	unspecified, using default values
  3343  200004                     	org	2097156
  3344  200004  0FFF               	dw	4095
  3345                           
  3346                           ;Config register IDLOC3 @ 0x200006
  3347                           ;	unspecified, using default values
  3348  200006                     	org	2097158
  3349  200006  0FFF               	dw	4095
  3350                           
  3351                           ;Config register IDLOC4 @ 0x200008
  3352                           ;	unspecified, using default values
  3353  200008                     	org	2097160
  3354  200008  0FFF               	dw	4095
  3355                           
  3356                           ;Config register IDLOC5 @ 0x20000A
  3357                           ;	unspecified, using default values
  3358  20000A                     	org	2097162
  3359  20000A  0FFF               	dw	4095
  3360                           
  3361                           ;Config register IDLOC6 @ 0x20000C
  3362                           ;	unspecified, using default values
  3363  20000C                     	org	2097164
  3364  20000C  0FFF               	dw	4095
  3365                           
  3366                           ;Config register IDLOC7 @ 0x20000E
  3367                           ;	unspecified, using default values
  3368  20000E                     	org	2097166
  3369  20000E  0FFF               	dw	4095
  3370                           
  3371                           ;Config register IDLOC8 @ 0x200010
  3372                           ;	unspecified, using default values
  3373  200010                     	org	2097168
  3374  200010  0FFF               	dw	4095
  3375                           
  3376                           ;Config register IDLOC9 @ 0x200012
  3377                           ;	unspecified, using default values
  3378  200012                     	org	2097170
  3379  200012  0FFF               	dw	4095
  3380                           
  3381                           ;Config register IDLOC10 @ 0x200014
  3382                           ;	unspecified, using default values
  3383  200014                     	org	2097172
  3384  200014  0FFF               	dw	4095
  3385                           
  3386                           ;Config register IDLOC11 @ 0x200016
  3387                           ;	unspecified, using default values
  3388  200016                     	org	2097174
  3389  200016  0FFF               	dw	4095
  3390                           
  3391                           ;Config register IDLOC12 @ 0x200018
  3392                           ;	unspecified, using default values
  3393  200018                     	org	2097176
  3394  200018  0FFF               	dw	4095
  3395                           
  3396                           ;Config register IDLOC13 @ 0x20001A
  3397                           ;	unspecified, using default values
  3398  20001A                     	org	2097178
  3399  20001A  0FFF               	dw	4095
  3400                           
  3401                           ;Config register IDLOC14 @ 0x20001C
  3402                           ;	unspecified, using default values
  3403  20001C                     	org	2097180
  3404  20001C  0FFF               	dw	4095
  3405                           
  3406                           ;Config register IDLOC15 @ 0x20001E
  3407                           ;	unspecified, using default values
  3408  20001E                     	org	2097182
  3409  20001E  0FFF               	dw	4095
  3410                           
  3411                           ;Config register IDLOC16 @ 0x200020
  3412                           ;	unspecified, using default values
  3413  200020                     	org	2097184
  3414  200020  0FFF               	dw	4095
  3415                           
  3416                           ;Config register IDLOC17 @ 0x200022
  3417                           ;	unspecified, using default values
  3418  200022                     	org	2097186
  3419  200022  0FFF               	dw	4095
  3420                           
  3421                           ;Config register IDLOC18 @ 0x200024
  3422                           ;	unspecified, using default values
  3423  200024                     	org	2097188
  3424  200024  0FFF               	dw	4095
  3425                           
  3426                           ;Config register IDLOC19 @ 0x200026
  3427                           ;	unspecified, using default values
  3428  200026                     	org	2097190
  3429  200026  0FFF               	dw	4095
  3430                           
  3431                           ;Config register IDLOC20 @ 0x200028
  3432                           ;	unspecified, using default values
  3433  200028                     	org	2097192
  3434  200028  0FFF               	dw	4095
  3435                           
  3436                           ;Config register IDLOC21 @ 0x20002A
  3437                           ;	unspecified, using default values
  3438  20002A                     	org	2097194
  3439  20002A  0FFF               	dw	4095
  3440                           
  3441                           ;Config register IDLOC22 @ 0x20002C
  3442                           ;	unspecified, using default values
  3443  20002C                     	org	2097196
  3444  20002C  0FFF               	dw	4095
  3445                           
  3446                           ;Config register IDLOC23 @ 0x20002E
  3447                           ;	unspecified, using default values
  3448  20002E                     	org	2097198
  3449  20002E  0FFF               	dw	4095
  3450                           
  3451                           ;Config register IDLOC24 @ 0x200030
  3452                           ;	unspecified, using default values
  3453  200030                     	org	2097200
  3454  200030  0FFF               	dw	4095
  3455                           
  3456                           ;Config register IDLOC25 @ 0x200032
  3457                           ;	unspecified, using default values
  3458  200032                     	org	2097202
  3459  200032  0FFF               	dw	4095
  3460                           
  3461                           ;Config register IDLOC26 @ 0x200034
  3462                           ;	unspecified, using default values
  3463  200034                     	org	2097204
  3464  200034  0FFF               	dw	4095
  3465                           
  3466                           ;Config register IDLOC27 @ 0x200036
  3467                           ;	unspecified, using default values
  3468  200036                     	org	2097206
  3469  200036  0FFF               	dw	4095
  3470                           
  3471                           ;Config register IDLOC28 @ 0x200038
  3472                           ;	unspecified, using default values
  3473  200038                     	org	2097208
  3474  200038  0FFF               	dw	4095
  3475                           
  3476                           ;Config register IDLOC29 @ 0x20003A
  3477                           ;	unspecified, using default values
  3478  20003A                     	org	2097210
  3479  20003A  0FFF               	dw	4095
  3480                           
  3481                           ;Config register IDLOC30 @ 0x20003C
  3482                           ;	unspecified, using default values
  3483  20003C                     	org	2097212
  3484  20003C  0FFF               	dw	4095
  3485                           
  3486                           ;Config register IDLOC31 @ 0x20003E
  3487                           ;	unspecified, using default values
  3488  20003E                     	org	2097214
  3489  20003E  0FFF               	dw	4095
  3490                           
  3491                           	psect	config
  3492                           
  3493                           ;Config register CONFIG1 @ 0x300000
  3494                           ;	External Oscillator Selection
  3495                           ;	FEXTOSC = ECH, EC (external clock) above 8 MHz
  3496                           ;	Reset Oscillator Selection
  3497                           ;	RSTOSC = EXTOSC, EXTOSC operating per FEXTOSC bits (device manufacturing default)
  3498  300000                     	org	3145728
  3499  300000  FF                 	db	255
  3500                           
  3501                           ;Config register CONFIG2 @ 0x300001
  3502                           ;	Clock out Enable bit
  3503                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
  3504                           ;	PRLOCKED One-Way Set Enable bit
  3505                           ;	PR1WAY = ON, PRLOCKED bit can be cleared and set only once
  3506                           ;	Clock Switch Enable bit
  3507                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
  3508                           ;	Fail-Safe Clock Monitor Enable bit
  3509                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
  3510  300001                     	org	3145729
  3511  300001  FF                 	db	255
  3512                           
  3513                           ;Config register CONFIG3 @ 0x300002
  3514                           ;	MCLR Enable bit
  3515                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
  3516                           ;	Power-up timer selection bits
  3517                           ;	PWRTS = PWRT_16, PWRT set at 16ms
  3518                           ;	Multi-vector enable bit
  3519                           ;	MVECEN = ON, Multi-vector enabled, Vector table used for interrupts
  3520                           ;	IVTLOCK bit One-way set enable bit
  3521                           ;	IVT1WAY = ON, IVTLOCKED bit can be cleared and set only once
  3522                           ;	Low Power BOR Enable bit
  3523                           ;	LPBOREN = OFF, Low-Power BOR disabled
  3524                           ;	Brown-out Reset Enable bits
  3525                           ;	BOREN = OFF, Brown-out Reset disabled
  3526  300002                     	org	3145730
  3527  300002  3B                 	db	59
  3528                           
  3529                           ;Config register CONFIG4 @ 0x300003
  3530                           ;	Brown-out Reset Voltage Selection bits
  3531                           ;	BORV = VBOR_1P9, Brown-out Reset Voltage (VBOR) set to 1.9V
  3532                           ;	ZCD Disable bit
  3533                           ;	ZCD = OFF, ZCD module is disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCD
      +                          CON
  3534                           ;	PPSLOCK bit One-Way Set Enable bit
  3535                           ;	PPS1WAY = ON, PPSLOCKED bit can be cleared and set only once; PPS registers remain loc
      +                          ked after one clear/set cycle
  3536                           ;	Stack Full/Underflow Reset Enable bit
  3537                           ;	STVREN = ON, Stack full/underflow will cause Reset
  3538                           ;	Low Voltage Programming Enable bit
  3539                           ;	LVP = OFF, HV on MCLR/VPP must be used for programming
  3540                           ;	Extended Instruction Set Enable bit
  3541                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
  3542  300003                     	org	3145731
  3543  300003  DF                 	db	223
  3544                           
  3545                           ;Config register CONFIG5 @ 0x300004
  3546                           ;	WDT Period selection bits
  3547                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  3548                           ;	WDT operating mode
  3549                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
  3550  300004                     	org	3145732
  3551  300004  9F                 	db	159
  3552                           
  3553                           ;Config register CONFIG6 @ 0x300005
  3554                           ;	WDT Window Select bits
  3555                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
  3556                           ;	WDT input clock selector
  3557                           ;	WDTCCS = SC, Software Control
  3558  300005                     	org	3145733
  3559  300005  FF                 	db	255
  3560                           
  3561                           ;Config register CONFIG7 @ 0x300006
  3562                           ;	Boot Block Size selection bits
  3563                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
  3564                           ;	Boot Block enable bit
  3565                           ;	BBEN = OFF, Boot block disabled
  3566                           ;	Storage Area Flash enable bit
  3567                           ;	SAFEN = OFF, SAF disabled
  3568                           ;	Background Debugger
  3569                           ;	DEBUG = OFF, Background Debugger disabled
  3570  300006                     	org	3145734
  3571  300006  FF                 	db	255
  3572                           
  3573                           ;Config register CONFIG8 @ 0x300007
  3574                           ;	Boot Block Write Protection bit
  3575                           ;	WRTB = OFF, Boot Block not Write protected
  3576                           ;	Configuration Register Write Protection bit
  3577                           ;	WRTC = OFF, Configuration registers not Write protected
  3578                           ;	Data EEPROM Write Protection bit
  3579                           ;	WRTD = OFF, Data EEPROM not Write protected
  3580                           ;	SAF Write protection bit
  3581                           ;	WRTSAF = OFF, SAF not Write Protected
  3582                           ;	Application Block write protection bit
  3583                           ;	WRTAPP = OFF, Application Block not write protected
  3584  300007                     	org	3145735
  3585  300007  FF                 	db	255
  3586                           
  3587                           ; Padding undefined space
  3588  300008                     	org	3145736
  3589  300008  FF                 	db	255
  3590                           
  3591                           ;Config register CONFIG10 @ 0x300009
  3592                           ;	PFM and Data EEPROM Code Protection bit
  3593                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
  3594  300009                     	org	3145737
  3595  300009  FF                 	db	255
  3596                           tosu	equ	0x4FF
  3597                           tosh	equ	0x4FE
  3598                           tosl	equ	0x4FD
  3599                           stkptr	equ	0x4FC
  3600                           pclatu	equ	0x4FB
  3601                           pclath	equ	0x4FA
  3602                           pcl	equ	0x4F9
  3603                           tblptru	equ	0x4F8
  3604                           tblptrh	equ	0x4F7
  3605                           tblptrl	equ	0x4F6
  3606                           tablat	equ	0x4F5
  3607                           prodh	equ	0x4F4
  3608                           prodl	equ	0x4F3
  3609                           indf0	equ	0x4EF
  3610                           postinc0	equ	0x4EE
  3611                           postdec0	equ	0x4ED
  3612                           preinc0	equ	0x4EC
  3613                           plusw0	equ	0x4EB
  3614                           fsr0h	equ	0x4EA
  3615                           fsr0l	equ	0x4E9
  3616                           wreg	equ	0x4E8
  3617                           indf1	equ	0x4E7
  3618                           postinc1	equ	0x4E6
  3619                           postdec1	equ	0x4E5
  3620                           preinc1	equ	0x4E4
  3621                           plusw1	equ	0x4E3
  3622                           fsr1h	equ	0x4E2
  3623                           fsr1l	equ	0x4E1
  3624                           bsr	equ	0x4E0
  3625                           indf2	equ	0x4DF
  3626                           postinc2	equ	0x4DE
  3627                           postdec2	equ	0x4DD
  3628                           preinc2	equ	0x4DC
  3629                           plusw2	equ	0x4DB
  3630                           fsr2h	equ	0x4DA
  3631                           fsr2l	equ	0x4D9
  3632                           status	equ	0x4D8

Data Sizes:
    Strings     67
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     48      48
    BANK5           160     15      15
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0
    BANK32          256      0       0
    BANK33          256      0       0
    BANK34          256      0       0
    BANK35          256      0       0
    BANK36          256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_5(CODE[13]), STR_4(CODE[13]), STR_3(CODE[13]), STR_2(CODE[16]), 
		 -> STR_1(CODE[12]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_5(CODE[13]), STR_4(CODE[13]), STR_3(CODE[13]), STR_2(CODE[16]), 
		 -> STR_1(CODE[12]), 

    ESCRIBE_MENSAJE2@cadena	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_5(CODE[13]), STR_4(CODE[13]), STR_3(CODE[13]), STR_2(CODE[16]), 
		 -> STR_1(CODE[12]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INT1_ISR in COMRAM

    i2_POS_CURSOR->i2_ENVIA_LCD_CMD
    i2_ESCRIBE_MENSAJE2->i2_strlen
    i2_ENVIA_CHAR->i2_ENVIA_NIBBLE
    i2_ENVIA_CHAR->i2_LEER_LCD
    i2_ENVIA_LCD_CMD->i2_ENVIA_NIBBLE
    i2_ENVIA_LCD_CMD->i2_LEER_LCD

Critical Paths under _INT0_ISR in COMRAM

    _INT0_ISR->i2_pantallazo
    i2_POS_CURSOR->i2_ENVIA_LCD_CMD
    i2_ESCRIBE_MENSAJE2->i2_strlen
    i2_ENVIA_CHAR->i2_ENVIA_NIBBLE
    i2_ENVIA_CHAR->i2_LEER_LCD
    i2_ENVIA_LCD_CMD->i2_ENVIA_NIBBLE
    i2_ENVIA_LCD_CMD->i2_LEER_LCD

Critical Paths under _U5RX_ISR in COMRAM

    _U5RX_ISR->i2_ESCRIBE_MENSAJE2
    i2_POS_CURSOR->i2_ENVIA_LCD_CMD
    i2_ENVIA_LCD_CMD->i2_ENVIA_NIBBLE
    i2_ENVIA_LCD_CMD->i2_LEER_LCD
    i2_ESCRIBE_MENSAJE2->i2_strlen
    i2_ENVIA_CHAR->i2_ENVIA_NIBBLE
    i2_ENVIA_CHAR->i2_LEER_LCD

Critical Paths under _main in BANK5

    _main->_pantallazo
    _pantallazo->_ESCRIBE_MENSAJE2
    _POS_CURSOR->_ENVIA_LCD_CMD
    _ESCRIBE_MENSAJE2->_strlen
    _ENVIA_CHAR->_ENVIA_NIBBLE
    _ENVIA_CHAR->_LEER_LCD
    _configuro->_LCD_INIT
    _LCD_INIT->_CURSOR_ONOFF
    _LCD_INIT->_LCD_CONFIG
    _LCD_CONFIG->_ENVIA_LCD_CMD
    _CURSOR_ONOFF->_ENVIA_LCD_CMD
    _CURSOR_HOME->_ENVIA_LCD_CMD
    _BORRAR_LCD->_ENVIA_LCD_CMD
    _ENVIA_LCD_CMD->_ENVIA_NIBBLE
    _ENVIA_LCD_CMD->_LEER_LCD

Critical Paths under _INT1_ISR in BANK5

    None.

Critical Paths under _INT0_ISR in BANK5

    None.

Critical Paths under _U5RX_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT1_ISR in BANK6

    None.

Critical Paths under _INT0_ISR in BANK6

    None.

Critical Paths under _U5RX_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT1_ISR in BANK7

    None.

Critical Paths under _INT0_ISR in BANK7

    None.

Critical Paths under _U5RX_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INT1_ISR in BANK8

    None.

Critical Paths under _INT0_ISR in BANK8

    None.

Critical Paths under _U5RX_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INT1_ISR in BANK9

    None.

Critical Paths under _INT0_ISR in BANK9

    None.

Critical Paths under _U5RX_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INT1_ISR in BANK10

    None.

Critical Paths under _INT0_ISR in BANK10

    None.

Critical Paths under _U5RX_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INT1_ISR in BANK11

    None.

Critical Paths under _INT0_ISR in BANK11

    None.

Critical Paths under _U5RX_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INT1_ISR in BANK12

    None.

Critical Paths under _INT0_ISR in BANK12

    None.

Critical Paths under _U5RX_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INT1_ISR in BANK13

    None.

Critical Paths under _INT0_ISR in BANK13

    None.

Critical Paths under _U5RX_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INT1_ISR in BANK14

    None.

Critical Paths under _INT0_ISR in BANK14

    None.

Critical Paths under _U5RX_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INT1_ISR in BANK15

    None.

Critical Paths under _INT0_ISR in BANK15

    None.

Critical Paths under _U5RX_ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INT1_ISR in BANK16

    None.

Critical Paths under _INT0_ISR in BANK16

    None.

Critical Paths under _U5RX_ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INT1_ISR in BANK17

    None.

Critical Paths under _INT0_ISR in BANK17

    None.

Critical Paths under _U5RX_ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INT1_ISR in BANK18

    None.

Critical Paths under _INT0_ISR in BANK18

    None.

Critical Paths under _U5RX_ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INT1_ISR in BANK19

    None.

Critical Paths under _INT0_ISR in BANK19

    None.

Critical Paths under _U5RX_ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INT1_ISR in BANK20

    None.

Critical Paths under _INT0_ISR in BANK20

    None.

Critical Paths under _U5RX_ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INT1_ISR in BANK21

    None.

Critical Paths under _INT0_ISR in BANK21

    None.

Critical Paths under _U5RX_ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INT1_ISR in BANK22

    None.

Critical Paths under _INT0_ISR in BANK22

    None.

Critical Paths under _U5RX_ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INT1_ISR in BANK23

    None.

Critical Paths under _INT0_ISR in BANK23

    None.

Critical Paths under _U5RX_ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INT1_ISR in BANK24

    None.

Critical Paths under _INT0_ISR in BANK24

    None.

Critical Paths under _U5RX_ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INT1_ISR in BANK25

    None.

Critical Paths under _INT0_ISR in BANK25

    None.

Critical Paths under _U5RX_ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _INT1_ISR in BANK26

    None.

Critical Paths under _INT0_ISR in BANK26

    None.

Critical Paths under _U5RX_ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _INT1_ISR in BANK27

    None.

Critical Paths under _INT0_ISR in BANK27

    None.

Critical Paths under _U5RX_ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _INT1_ISR in BANK28

    None.

Critical Paths under _INT0_ISR in BANK28

    None.

Critical Paths under _U5RX_ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _INT1_ISR in BANK29

    None.

Critical Paths under _INT0_ISR in BANK29

    None.

Critical Paths under _U5RX_ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _INT1_ISR in BANK30

    None.

Critical Paths under _INT0_ISR in BANK30

    None.

Critical Paths under _U5RX_ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _INT1_ISR in BANK31

    None.

Critical Paths under _INT0_ISR in BANK31

    None.

Critical Paths under _U5RX_ISR in BANK31

    None.

Critical Paths under _main in BANK32

    None.

Critical Paths under _INT1_ISR in BANK32

    None.

Critical Paths under _INT0_ISR in BANK32

    None.

Critical Paths under _U5RX_ISR in BANK32

    None.

Critical Paths under _main in BANK33

    None.

Critical Paths under _INT1_ISR in BANK33

    None.

Critical Paths under _INT0_ISR in BANK33

    None.

Critical Paths under _U5RX_ISR in BANK33

    None.

Critical Paths under _main in BANK34

    None.

Critical Paths under _INT1_ISR in BANK34

    None.

Critical Paths under _INT0_ISR in BANK34

    None.

Critical Paths under _U5RX_ISR in BANK34

    None.

Critical Paths under _main in BANK35

    None.

Critical Paths under _INT1_ISR in BANK35

    None.

Critical Paths under _INT0_ISR in BANK35

    None.

Critical Paths under _U5RX_ISR in BANK35

    None.

Critical Paths under _main in BANK36

    None.

Critical Paths under _INT1_ISR in BANK36

    None.

Critical Paths under _INT0_ISR in BANK36

    None.

Critical Paths under _U5RX_ISR in BANK36

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    2412
                                             12 BANK5      3     3      0
                          _configuro
                         _pantallazo
 ---------------------------------------------------------------------------------
 (1) _pantallazo                                           2     2      0    1521
                                             10 BANK5      2     2      0
                         _BORRAR_LCD
                   _ESCRIBE_MENSAJE2
                         _POS_CURSOR
 ---------------------------------------------------------------------------------
 (2) _POS_CURSOR                                           2     1      1     573
                                              3 BANK5      2     1      1
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _ESCRIBE_MENSAJE2                                     6     4      2     765
                                              4 BANK5      6     4      2
                         _ENVIA_CHAR
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _strlen                                               4     2      2     166
                                              0 BANK5      4     2      2
 ---------------------------------------------------------------------------------
 (3) _ENVIA_CHAR                                           2     2      0     183
                                              1 BANK5      2     2      0
                       _ENVIA_NIBBLE
                           _LEER_LCD
 ---------------------------------------------------------------------------------
 (1) _configuro                                            0     0      0     799
                           _LCD_INIT
 ---------------------------------------------------------------------------------
 (2) _LCD_INIT                                             1     1      0     799
                                              4 BANK5      1     1      0
                         _BORRAR_LCD
                        _CURSOR_HOME
                       _CURSOR_ONOFF
                         _LCD_CONFIG
 ---------------------------------------------------------------------------------
 (3) _LCD_CONFIG                                           1     1      0     206
                                              3 BANK5      1     1      0
                      _ENVIA_LCD_CMD
                       _ENVIA_NIBBLE
 ---------------------------------------------------------------------------------
 (3) _CURSOR_ONOFF                                         1     1      0     227
                                              3 BANK5      1     1      0
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (3) _CURSOR_HOME                                          0     0      0     183
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _BORRAR_LCD                                           0     0      0     183
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (3) _ENVIA_LCD_CMD                                        2     2      0     183
                                              1 BANK5      2     2      0
                       _ENVIA_NIBBLE
                           _LEER_LCD
 ---------------------------------------------------------------------------------
 (4) _LEER_LCD                                             1     1      0      70
                                              0 BANK5      1     1      0
 ---------------------------------------------------------------------------------
 (4) _ENVIA_NIBBLE                                         1     1      0      23
                                              0 BANK5      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _INT1_ISR                                             4     4      0    1142
                                             12 COMRAM     4     4      0
                        _U5_Sendbyte
                       i2_pantallazo
 ---------------------------------------------------------------------------------
 (7) i2_pantallazo                                         2     2      0    1127
                                             26 COMRAM     2     2      0
                       i2_BORRAR_LCD
                 i2_ESCRIBE_MENSAJE2
                       i2_POS_CURSOR
 ---------------------------------------------------------------------------------
 (7) i2_POS_CURSOR                                         2     1      1     401
                                             35 COMRAM     2     1      1
                    i2_ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (7) i2_ESCRIBE_MENSAJE2                                   6     4      2     543
                                             36 COMRAM     6     4      2
                       i2_ENVIA_CHAR
                           i2_strlen
 ---------------------------------------------------------------------------------
 (8) i2_strlen                                             4     2      2     116
                                             32 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (8) i2_ENVIA_CHAR                                         2     2      0     183
                                             33 COMRAM     2     2      0
                     i2_ENVIA_NIBBLE
                         i2_LEER_LCD
 ---------------------------------------------------------------------------------
 (8) i2_BORRAR_LCD                                         0     0      0     183
                    i2_ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (8) i2_ENVIA_LCD_CMD                                      2     2      0     183
                                             33 COMRAM     2     2      0
                     i2_ENVIA_NIBBLE
                         i2_LEER_LCD
 ---------------------------------------------------------------------------------
 (9) i2_LEER_LCD                                           1     1      0      70
                                             32 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (9) i2_ENVIA_NIBBLE                                       1     1      0      23
                                             32 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) _U5_Sendbyte                                          1     1      0      15
                                             16 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _INT0_ISR                                             4     4      0    1142
                                             28 COMRAM     4     4      0
                        _U5_Sendbyte
                       i2_pantallazo
 ---------------------------------------------------------------------------------
 (7) i2_pantallazo                                         2     2      0    1127
                                             26 COMRAM     2     2      0
                       i2_BORRAR_LCD
                 i2_ESCRIBE_MENSAJE2
                       i2_POS_CURSOR
 ---------------------------------------------------------------------------------
 (7) i2_POS_CURSOR                                         2     1      1     401
                                             35 COMRAM     2     1      1
                    i2_ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (7) i2_ESCRIBE_MENSAJE2                                   6     4      2     543
                                             36 COMRAM     6     4      2
                       i2_ENVIA_CHAR
                           i2_strlen
 ---------------------------------------------------------------------------------
 (8) i2_strlen                                             4     2      2     116
                                             32 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (8) i2_ENVIA_CHAR                                         2     2      0     183
                                             33 COMRAM     2     2      0
                     i2_ENVIA_NIBBLE
                         i2_LEER_LCD
 ---------------------------------------------------------------------------------
 (8) i2_BORRAR_LCD                                         0     0      0     183
                    i2_ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (8) i2_ENVIA_LCD_CMD                                      2     2      0     183
                                             33 COMRAM     2     2      0
                     i2_ENVIA_NIBBLE
                         i2_LEER_LCD
 ---------------------------------------------------------------------------------
 (9) i2_LEER_LCD                                           1     1      0      70
                                             32 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (9) i2_ENVIA_NIBBLE                                       1     1      0      23
                                             32 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) _U5_Sendbyte                                          1     1      0      15
                                             16 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _U5RX_ISR                                             6     6      0     944
                                             42 COMRAM     6     6      0
                 i2_ESCRIBE_MENSAJE2
                       i2_POS_CURSOR
 ---------------------------------------------------------------------------------
 (7) i2_POS_CURSOR                                         2     1      1     401
                                             35 COMRAM     2     1      1
                    i2_ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (8) i2_ENVIA_LCD_CMD                                      2     2      0     183
                                             33 COMRAM     2     2      0
                     i2_ENVIA_NIBBLE
                         i2_LEER_LCD
 ---------------------------------------------------------------------------------
 (7) i2_ESCRIBE_MENSAJE2                                   6     4      2     543
                                             36 COMRAM     6     4      2
                       i2_ENVIA_CHAR
                           i2_strlen
 ---------------------------------------------------------------------------------
 (8) i2_strlen                                             4     2      2     116
                                             32 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (8) i2_ENVIA_CHAR                                         2     2      0     183
                                             33 COMRAM     2     2      0
                     i2_ENVIA_NIBBLE
                         i2_LEER_LCD
 ---------------------------------------------------------------------------------
 (9) i2_LEER_LCD                                           1     1      0      70
                                             32 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (9) i2_ENVIA_NIBBLE                                       1     1      0      23
                                             32 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _configuro
     _LCD_INIT
       _BORRAR_LCD
         _ENVIA_LCD_CMD
           _ENVIA_NIBBLE
           _LEER_LCD
       _CURSOR_HOME
         _ENVIA_LCD_CMD
       _CURSOR_ONOFF
         _ENVIA_LCD_CMD
       _LCD_CONFIG
         _ENVIA_LCD_CMD
         _ENVIA_NIBBLE
   _pantallazo
     _BORRAR_LCD
     _ESCRIBE_MENSAJE2
       _ENVIA_CHAR
         _ENVIA_NIBBLE
         _LEER_LCD
       _strlen
     _POS_CURSOR
       _ENVIA_LCD_CMD

 _INT1_ISR (ROOT)
   _U5_Sendbyte
   i2_pantallazo
     i2_BORRAR_LCD
       i2_ENVIA_LCD_CMD
         i2_ENVIA_NIBBLE
         i2_LEER_LCD
     i2_ESCRIBE_MENSAJE2
       i2_ENVIA_CHAR
         i2_ENVIA_NIBBLE
         i2_LEER_LCD
       i2_strlen
     i2_POS_CURSOR
       i2_ENVIA_LCD_CMD

 _INT0_ISR (ROOT)
   _U5_Sendbyte
   i2_pantallazo
     i2_BORRAR_LCD
       i2_ENVIA_LCD_CMD
         i2_ENVIA_NIBBLE
         i2_LEER_LCD
     i2_ESCRIBE_MENSAJE2
       i2_ENVIA_CHAR
         i2_ENVIA_NIBBLE
         i2_LEER_LCD
       i2_strlen
     i2_POS_CURSOR
       i2_ENVIA_LCD_CMD

 _U5RX_ISR (ROOT)
   i2_ESCRIBE_MENSAJE2
     i2_ENVIA_CHAR
       i2_ENVIA_NIBBLE
       i2_LEER_LCD
     i2_strlen
   i2_POS_CURSOR
     i2_ENVIA_LCD_CMD
       i2_ENVIA_NIBBLE
       i2_LEER_LCD

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             400      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F     30      30       1       50.5%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK5            A0      0       0       4        0.0%
BANK5               A0      F       F       5        9.4%
BITBANK6           100      0       0       6        0.0%
BANK6              100      0       0       7        0.0%
BITBANK7           100      0       0       8        0.0%
BANK7              100      0       0       9        0.0%
BITBANK8           100      0       0      10        0.0%
BANK8              100      0       0      11        0.0%
BITBANK9           100      0       0      12        0.0%
BANK9              100      0       0      13        0.0%
BITBANK10          100      0       0      14        0.0%
BANK10             100      0       0      15        0.0%
BITBANK11          100      0       0      16        0.0%
BANK11             100      0       0      17        0.0%
BITBANK12          100      0       0      18        0.0%
BANK12             100      0       0      19        0.0%
BITBANK13          100      0       0      20        0.0%
BANK13             100      0       0      21        0.0%
BITBANK14          100      0       0      22        0.0%
BANK14             100      0       0      23        0.0%
BITBANK15          100      0       0      24        0.0%
BANK15             100      0       0      25        0.0%
BITBANK16          100      0       0      26        0.0%
BANK16             100      0       0      27        0.0%
BITBANK17          100      0       0      28        0.0%
BANK17             100      0       0      29        0.0%
BITBANK18          100      0       0      30        0.0%
BANK18             100      0       0      31        0.0%
BITBANK19          100      0       0      32        0.0%
BANK19             100      0       0      33        0.0%
BITBANK20          100      0       0      34        0.0%
BANK20             100      0       0      35        0.0%
BITBANK21          100      0       0      36        0.0%
BANK21             100      0       0      37        0.0%
BITBANK22          100      0       0      38        0.0%
BANK22             100      0       0      39        0.0%
BITBANK23          100      0       0      40        0.0%
BANK23             100      0       0      41        0.0%
BITBANK24          100      0       0      42        0.0%
BANK24             100      0       0      43        0.0%
BITBANK25          100      0       0      44        0.0%
BANK25             100      0       0      45        0.0%
BITBANK26          100      0       0      46        0.0%
BANK26             100      0       0      47        0.0%
BITBANK27          100      0       0      48        0.0%
BANK27             100      0       0      49        0.0%
BITBANK28          100      0       0      50        0.0%
BANK28             100      0       0      51        0.0%
BITBANK29          100      0       0      52        0.0%
BANK29             100      0       0      53        0.0%
BITBANK30          100      0       0      54        0.0%
BANK30             100      0       0      55        0.0%
BITBANK31          100      0       0      56        0.0%
BANK31             100      0       0      57        0.0%
BITBANK32          100      0       0      58        0.0%
BANK32             100      0       0      59        0.0%
BITBANK33          100      0       0      60        0.0%
BANK33             100      0       0      61        0.0%
BITBANK34          100      0       0      62        0.0%
BANK34             100      0       0      63        0.0%
BITBANK35          100      0       0      64        0.0%
BANK35             100      0       0      65        0.0%
BITBANK36          100      0       0      66        0.0%
BANK36             100      0       0      67        0.0%
BITBIGSFR_1        100      0       0      68        0.0%
BIGRAM            1FFF      0       0      69        0.0%
BITBIGSFRhhhh       29      0       0      70        0.0%
BITBIGSFRhhhl        4      0       0      71        0.0%
BITBIGSFRhhl         5      0       0      72        0.0%
BITBIGSFRhlh         1      0       0      73        0.0%
BITBIGSFRhll         3      0       0      74        0.0%
BITBIGSFRlhhhhh      2      0       0      75        0.0%
BITBIGSFRlhhhhh      2      0       0      76        0.0%
BITBIGSFRlhhhhh      6      0       0      77        0.0%
BITBIGSFRlhhhhh      4      0       0      78        0.0%
BITBIGSFRlhhhhh      3      0       0      79        0.0%
BITBIGSFRlhhhhh      6      0       0      80        0.0%
BITBIGSFRlhhhhh      4      0       0      81        0.0%
BITBIGSFRlhhhhl     76      0       0      82        0.0%
BITBIGSFRlhhhhl      7      0       0      83        0.0%
BITBIGSFRlhhhlh      7      0       0      84        0.0%
BITBIGSFRlhhhll      E      0       0      85        0.0%
BITBIGSFRlhhhll      7      0       0      86        0.0%
BITBIGSFRlhhhll    101      0       0      87        0.0%
BITBIGSFRlhhhll      2      0       0      88        0.0%
BITBIGSFRlhhhll      7      0       0      89        0.0%
BITBIGSFRlhhhll      1      0       0      90        0.0%
BITBIGSFRlhhhll     72      0       0      91        0.0%
BITBIGSFRlhhhll     3A      0       0      92        0.0%
BITBIGSFRlhhhll     14      0       0      93        0.0%
BITBIGSFRlhhhll    175      0       0      94        0.0%
BITBIGSFRlhhl        1      0       0      95        0.0%
BITBIGSFRlhl         3      0       0      96        0.0%
BITBIGSFRll         AD      0       0      97        0.0%
ABS                  0      0       0      98        0.0%
BIGSFR_1             0      0       0     200        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Wed Jun 14 17:47:14 2023

                        l26 2B08                          l39 2CFE                          l71 2B42  
                        l80 2CAC                          l56 2C24                          l74 2D06  
                        l83 2B7C                          l68 2856                          l77 28AC  
                        l87 274E                          l89 278A                          l97 2BEE  
             ENVIA_CHAR@aux 0562                         l193 260C                         l178 2712  
                       l187 2958                         l195 264C                         l899 2A88  
                       u220 278A                         u221 2786                         u230 2C06  
                       u231 2C02                         u240 2C1E                         u400 2644  
                       u241 2C1A                         u401 2640                         u250 2A7A  
                       u410 2690                         u251 2A76                         u411 268C  
                       u270 2AE2                         u271 2ADE                         u280 2B00  
                       u281 2AFC                         u290 2856                         u507 286A  
                       u291 2852                         u427 2610                         u517 287C  
                       u437 2620                         u527 2B54                         u447 2656  
                       u537 2720                         u457 266A                         u547 2730  
                       u467 2946                         u557 273A                         u477 2B1A  
                       u567 2752                         u487 2BC0                         u577 2762  
                       u497 2BD6                         u587 276C                         u597 2CA4  
               LEER_LCD@aux 0560                         wreg 0004E8            ??i2_ENVIA_NIBBLE 0521  
              ?_CURSOR_HOME 0501              ??_ENVIA_NIBBLE 0560              ENVIA_CHAR@dato 0561  
                      l1401 272E                        l1411 2750                        l1403 2736  
                      l1413 2758                        l1405 2738                        l1501 285C  
                      l1431 2CAA                        l1415 275E                        l1423 2778  
                      l1407 2740                        l1511 288E                        l1503 2862  
                      l1425 2C92                        l1417 2768                        l1409 2742  
                      l1441 2B5A                        l1433 2B48                        l1513 2894  
                      l1505 2874                        l1427 2CA0                        l1419 2772  
                      l1451 2B6E                        l1443 2B5C                        l1435 2B4A  
                      l1515 289A                        l1507 2882                        l1429 2CA2  
                      l1453 2B76                        l1445 2B5E                        l1437 2B4E  
                      l1461 2C0C                        l1517 28A0                        l1509 2888  
                      l1391 271A                        l1447 2B60                        l1439 2B52  
                      l1455 2CF8                        l1463 2C1E                        l1519 28A6  
                      l1471 2B18                        l1393 271C                        l1449 2B68  
                      l1457 2BF4                        l1481 2B2E                        l1473 2B20  
                      l1465 2B0E                        l1801 2660                        l1395 271E  
                      l1387 2714                        l1459 2C06                        l1651 26B8  
                      l1483 2B34                        l1475 2B22                        l1467 2B10  
                      l1491 2A56                        l1571 2AEE                        l1803 2674  
                      l1397 2726                        l1389 2718                        l1661 26C2  
                      l1653 26BA                        l1485 2B3C                        l1477 2B24  
                      l1469 2B14                        l1493 2A7A                        l1581 281C  
                      l1573 2B00                        l1399 272C                        l1591 2BCE  
                      l1671 26D4                        l1663 26CA                        l1655 26BC  
                      l1479 2B26                        l1487 2A44                        l1583 2840  
                      l1575 2802                        l1567 2AD0                        l1497 2D00  
                      l1681 26EC                        l1673 26DC                        l1665 26CC  
                      l1657 26BE                        l1649 2698                        l1489 2A50  
                      l1585 2844                        l1577 2814                        l1569 2AE2  
                      l1499 2858                        l1587 2BB8                        l1683 26EE  
                      l1675 26DE                        l1667 26CE                        l1659 26C0  
                      l1579 2814                        l1691 2912                        l1589 2BCA  
                      l1685 270C                        l1677 26E0                        l1669 26D2  
                      l1693 2920                        l1781 2602                        l1687 270E  
                      l1679 26E2                        l1695 293A                        l1791 2628  
                      l1697 2954                        l1689 2906                        l1793 2644  
                      l1777 25FA                        l1787 260E                        l1779 25FE  
                      l1789 2616                        l1799 264E                        STR_1 2538  
                      STR_2 2501                        STR_3 2511                        STR_4 251E  
                      STR_5 252B                        _LATD 0004C1                        i2l26 2BB6  
                      i2l71 2C58                        i2l80 2CC8                        i2l74 2D0E  
                      i2l83 2C8C                        i2l68 29AA                        i2l87 27C4  
                      i2l89 2800                 ?i2_LEER_LCD 0501                        _main 25FA  
         ??i2_ENVIA_LCD_CMD 0522                        start 0102               ?_CURSOR_ONOFF 0501  
              ___param_bank 000000             ??_ENVIA_LCD_CMD 0561            __end_of_LCD_INIT 2BF0  
          __end_of_LEER_LCD 278C            __end_of_INT0_ISR 2906            __end_of_INT1_ISR 29FC  
                     ?_main 0501            __end_of_U5RX_ISR 25FA                       i2l204 29E2  
                     i2l209 28EC                       i2l219 25E0                       i2l181 2CD2  
                     i2l184 2CE2                       i2l187 2A42                       _U5RXB 0002ED  
                     _U5TXB 0002EF                       i2l899 2ACA                       _OSCEN 0000B3  
                     _PORTD 0004D1                       _TRISD 0004C9                       _TRISE 0004CA  
               ?_POS_CURSOR 0563                       tablat 0004F5                       status 0004D8  
            ??_CURSOR_ONOFF 0563            __end_ofi2_strlen 2ACC             __initialization 2CE4  
              __end_of_main 2698    i2ESCRIBE_MENSAJE2@cadena 0525                      ??_main 056C  
             __activetblptr 000003                ?_U5_Sendbyte 0501               ?i2_BORRAR_LCD 0501  
                    _ANSELD 000418                      _ANSELE 000420                      _U5CON0 0002F7  
                    _U5CON1 0002F8                      _U5CON2 0002F9                      _U5BRGH 0002FB  
                    _U5BRGL 0002FA                      _RF0PPS 000229                      i2l1203 2CCC  
                    i2l1521 2CB0                      i2l1601 2C3A                      i2l1523 2CBC  
                    i2l1531 2790                      i2l1611 2C4C                      i2l1603 2C3C  
                    i2l1525 2CBE                      i2l1541 27A4                      i2l1533 2792  
                    i2l1621 2C62                      i2l1613 2C52                      i2l1605 2C3E  
                    i2l1701 2B90                      i2l1527 2CC6                      i2l1551 27BA  
                    i2l1543 27A6                      i2l1535 2794                      i2l1631 2C74  
                    i2l1623 2C66                      i2l1615 2D08                      i2l1607 2C40  
                    i2l1711 296A                      i2l1703 2B9C                      i2l1561 27E8  
                    i2l1553 27C6                      i2l1545 27AE                      i2l1537 2796  
                    i2l1529 278C                      i2l1633 2C7A                      i2l1625 2C6E  
                    i2l1617 2C5C                      i2l1609 2C46                      i2l1641 2A96  
                    i2l1713 2972                      i2l1705 2BAE                      i2l1721 2A06  
                    i2l1811 28C8                      i2l1555 27CE                      i2l1547 27B0  
                    i2l1539 279E                      i2l1635 2C80                      i2l1627 2C70  
                    i2l1619 2C5E                      i2l1643 2A9A                      i2l1715 2996  
                    i2l1707 295A                      i2l1723 2A12                      i2l1821 2570  
                    i2l1813 28CA                      i2l1557 27D4                      i2l1565 27EE  
                    i2l1549 27B8                      i2l1637 2C86                      i2l1629 2C72  
                    i2l1645 2ABE                      i2l1717 2998                      i2l1709 296A  
                    i2l1725 2A28                      i2l1805 29C4                      i2l1823 2580  
                    i2l1815 28E8                      i2l1559 27DE                      i2l1639 2A8A  
                    i2l1727 2A3E                      i2l1719 29FC                      i2l1807 29C6  
                    i2l1825 258A                      i2l1833 25B4                      i2l1817 2560  
                    i2l1593 2C28                      i2l1809 29DE                      i2l1827 259A  
                    i2l1819 2566                      i2l1595 2C2A                      i2l1829 25A4  
                    i2l1597 2C2E                      i2l1871 25CA                      i2l1599 2C32  
                    i2l1699 2B80                      _OSCFRQ 0000B1         i2ESCRIBE_MENSAJE2@i 052A  
             ?i2_ENVIA_CHAR 0501        __end_of_ENVIA_NIBBLE 2CAE                      isa$std 000001  
                    _strlen 2A44                __mediumconst 0000                i2_pantallazo 29FC  
                    tblptrh 0004F7                      tblptrl 0004F6                      tblptru 0004F8  
            ??i2_BORRAR_LCD 0514                ??_BORRAR_LCD 0563                   ?_LCD_INIT 0501  
                 ?_LEER_LCD 0501                  __accesstop 0560     __end_of__initialization 2CF2  
                 ?_INT0_ISR 0501                   ?_INT1_ISR 0501                ??_LCD_CONFIG 0563  
            ??i2_ENVIA_CHAR 0522               ___rparam_used 000001                ??_ENVIA_CHAR 0561  
                 ?_U5RX_ISR 0501              __pcstackCOMRAM 0501              ivt0x8_undefint 0100  
        __end_of_BORRAR_LCD 2D08         i2ENVIA_LCD_CMD@dato 0522            _ESCRIBE_MENSAJE2 2802  
          ENVIA_LCD_CMD@aux 0562        __end_of_CURSOR_ONOFF 2C26          __end_of_LCD_CONFIG 28AE  
        __end_of_ENVIA_CHAR 2B44             i2_ENVIA_LCD_CMD 2C5A                   ?i2_strlen 0521  
             ?i2_POS_CURSOR 0524                  ??_LCD_INIT 0564                ??i2_LEER_LCD 0521  
                ??_LEER_LCD 0560            ENVIA_NIBBLE@dato 0560                  ??_INT0_ISR 051D  
                ??_INT1_ISR 050D                     IVTBASEH 00045E                     IVTBASEL 00045D  
                   IVTBASEU 00045F                  ??_U5RX_ISR 052B  __end_ofi2_ESCRIBE_MENSAJE2 29AC  
                   ?_strlen 0560          __end_ofi2_LEER_LCD 2802                     _INT0PPS 00023E  
                   _INT1PPS 00023F                     _U5RXPPS 00027A                     _OSCCON1 0000AD  
                   i2u10_40 2CE2                     i2u10_41 2CDE                     i2u30_40 2ABE  
                   i2u30_41 2ABA                     i2u31_40 2B90                     i2u31_41 2B8C  
                   i2u32_40 2BAE                     i2u32_41 2BAA                     i2u33_40 29AA  
                   i2u33_41 29A6                     i2u26_40 2800                     i2u26_41 27FC  
                   i2u60_47 2A32                     i2u61_47 2C34                     i2u62_47 2C68  
                   i2u63_47 2798                     i2u64_47 27A8                     i2u65_47 27B2  
                   i2u66_47 27C8                     i2u67_47 27D8                     i2u68_47 27E2  
                   i2u69_47 2CC0                  ??i2_strlen 0523              ??i2_POS_CURSOR 0525  
              ??_POS_CURSOR 0564                     __Hparam 0000                     __Lparam 0000  
         __end_of_configuro 2714        __end_ofi2_BORRAR_LCD 2D10                __psmallconst 2500  
     __end_of_ENVIA_LCD_CMD 2B7E                     __pcinit 2CE4          __end_of_POS_CURSOR 2B0A  
                   __ramtop 2500                     __ptext0 25FA                     __ptext1 2906  
                   __ptext2 2ACC                     __ptext3 2802                     __ptext4 2A44  
                   __ptext5 2B0A                     __ptext6 2698                     __ptext7 2BB8  
                   __ptext8 2858                     __ptext9 2BF0     __end_ofi2_ENVIA_LCD_CMD 2C8E  
      __end_ofi2_ENVIA_CHAR 2C5A                  _pantallazo 2906                   _PIE13bits 0004AB  
           i2ENVIA_CHAR@aux 0523                _ENVIA_NIBBLE 2C8E        end_of_initialization 2CF2  
                 _PIR13bits 0004BB                     strlen@a 0562                     strlen@s 0560  
         ESCRIBE_MENSAJE2@i 0569                   _TRISAbits 0004C6                   _TRISBbits 0004C7  
                 _TRISFbits 0004CB    __end_of_ESCRIBE_MENSAJE2 2858                _CURSOR_ONOFF 2BF0  
        CURSOR_ONOFF@estado 0563        __end_ofi2_POS_CURSOR 2BB8            ?i2_ENVIA_LCD_CMD 0501  
            __end_of_strlen 2A8A               ??_CURSOR_HOME 0563         start_initialization 2CE4  
               ?_pantallazo 0501                  ivt0x8_base 0008                   i2strlen@a 0523  
                 i2strlen@s 0521           ENVIA_LCD_CMD@dato 0561            i2POS_CURSOR@fila 0525  
                  ??_strlen 0562               __pcstackBANK5 0560               i2LEER_LCD@aux 0521  
              i2_BORRAR_LCD 2D08          i2_ESCRIBE_MENSAJE2 295A          i2ENVIA_LCD_CMD@aux 0523  
       __end_of_CURSOR_HOME 2D00              i2_ENVIA_NIBBLE 2CAE         ?i2_ESCRIBE_MENSAJE2 0525  
              i2_ENVIA_CHAR 2C26          i2ENVIA_NIBBLE@dato 0521                   _configuro 2698  
      ??i2_ESCRIBE_MENSAJE2 0527                 __smallconst 2500         i2POS_CURSOR@columna 0524  
             ??_U5_Sendbyte 0511      __end_ofi2_ENVIA_NIBBLE 2CCA                    _LCD_INIT 2BB8  
                  _LEER_LCD 2714                    _INT0_ISR 28B0                    _INT1_ISR 29AC  
                  _LATAbits 0004BE                    _LATEbits 0004C2                    _PIE1bits 00049F  
                  _PIE6bits 0004A4                    _U5RX_ISR 2548                    _PIR1bits 0004AF  
                  _PIR6bits 0004B4                 _U5ERRIRbits 0002FE              POS_CURSOR@fila 0564  
                ?_configuro 0501      ESCRIBE_MENSAJE2@cadena 0564                    _WPUBbits 000409  
             ?i2_pantallazo 0501                   main@x_var 056D                 _CURSOR_HOME 2CF8  
     i2ESCRIBE_MENSAJE2@tam 0529                    i2_strlen 2A8A                 _INTCON0bits 0004D6  
              i2_POS_CURSOR 2B7E             ?i2_ENVIA_NIBBLE 0501         __end_of_U5_Sendbyte 2CE4  
                  __Hrparam 0000           ?_ESCRIBE_MENSAJE2 0564                    __Lrparam 0000  
        ??_ESCRIBE_MENSAJE2 0566                  _ANSELAbits 000400                  _ANSELBbits 000408  
                _ANSELFbits 000428              ??i2_pantallazo 051B                ??_pantallazo 056A  
                  __pivt0x8 0008                    __ptext10 2CF8                    __ptext11 2D00  
                  __ptext20 2C26                    __ptext12 2B44                    __ptext21 2D08  
                  __ptext13 2714                    __ptext22 2C5A                    __ptext14 2C8E  
                  __ptext23 278C                    __ptext15 29AC                    __ptext24 2CAE  
                  __ptext16 29FC                    __ptext25 2CCA                    __ptext17 2B7E  
                  __ptext26 28B0                    __ptext18 295A                    __ptext27 2548  
                  __ptext19 2A8A                  _BORRAR_LCD 2D00                  _LCD_CONFIG 2858  
                _ENVIA_CHAR 2B0A                    isa$xinst 000000          __end_of_pantallazo 295A  
          i2ENVIA_CHAR@dato 0522               _ENVIA_LCD_CMD 2B44                 ??_configuro 0565  
               _U5_Sendbyte 2CCA             U5_Sendbyte@dato 0511                    intlevel2 0000  
                i2_LEER_LCD 278C              ?_ENVIA_LCD_CMD 0501         ESCRIBE_MENSAJE2@tam 0568  
               ?_BORRAR_LCD 0501               ?_ENVIA_NIBBLE 0501                  _POS_CURSOR 2ACC  
               ?_LCD_CONFIG 0501                 ?_ENVIA_CHAR 0501           POS_CURSOR@columna 0563  
      __end_ofi2_pantallazo 2A44  
